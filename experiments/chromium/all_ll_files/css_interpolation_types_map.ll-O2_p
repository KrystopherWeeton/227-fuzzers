; ModuleID = '../../third_party/blink/renderer/core/animation/css_interpolation_types_map.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_interpolation_types_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<blink::PropertyHandle, std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > >, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<blink::PropertyHandle, std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > >, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.131", i32, [4 x i8], %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.283", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.301", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.308", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.247", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i64 }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::Worklist.178"* }
%"class.blink::Worklist.178" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::Worklist.185"* }
%"class.blink::Worklist.185" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::Worklist.192"* }
%"class.blink::Worklist.192" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.167" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.234", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.241", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { i64 }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { float }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.250", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.259" }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.289" }
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.178"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.185"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.192"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.548" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.307 }
%class.scoped_refptr.307 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__cxx_atomic_impl.310" }
%"struct.std::__1::__cxx_atomic_impl.310" = type { %"struct.std::__1::__cxx_atomic_base_impl.311" }
%"struct.std::__1::__cxx_atomic_base_impl.311" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSInterpolationTypesMap" = type <{ %"class.blink::InterpolationTypesMap", %"class.blink::PropertyRegistry"*, i8, [7 x i8] }>
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.blink::PropertyRegistry" = type { %"class.blink::HeapHashMap", %"class.blink::HeapHashMap", i64 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.1057" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.811", %class.scoped_refptr.815, %"class.WTF::Vector.775", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.806" }
%"class.WTF::Vector.806" = type { %"class.WTF::VectorBuffer.807" }
%"class.WTF::VectorBuffer.807" = type { %"class.WTF::VectorBufferBase.808" }
%"class.WTF::VectorBufferBase.808" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.815 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.816", %"class.WTF::Vector.672", %"class.WTF::Vector.818", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.816" = type { %"class.base::RefCounted.817" }
%"class.base::RefCounted.817" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.672" = type { %"class.WTF::VectorBuffer.673" }
%"class.WTF::VectorBuffer.673" = type { %"class.WTF::VectorBufferBase.674" }
%"class.WTF::VectorBufferBase.674" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.818" = type { %"class.WTF::VectorBuffer.819" }
%"class.WTF::VectorBuffer.819" = type { %"class.WTF::VectorBufferBase.820" }
%"class.WTF::VectorBufferBase.820" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.821 }
%union.anon.821 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.775" = type { %"class.WTF::VectorBuffer.776" }
%"class.WTF::VectorBuffer.776" = type { %"class.WTF::VectorBufferBase.777" }
%"class.WTF::VectorBufferBase.777" = type { %"class.std::__1::unique_ptr.778"*, i32, i32 }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.blink::InterpolationType"* }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.781, %"class.WTF::AtomicString" }
%union.anon.781 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.80", %"class.WTF::Vector.80", i8, i32, %"class.blink::Member.91", %"class.blink::Member.93", %"class.blink::Member.95", %"class.blink::Member.97", %"class.blink::Member.99", %"class.blink::Member.101", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.104", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.110", %"class.blink::Member.112", %"class.blink::Member.70", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.115", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.30", %"class.blink::Member.324", %"class.blink::Member.30", %"class.blink::Member.30", %"class.blink::Member.30", %"class.blink::UserActionElementSet", %"class.blink::Member.333", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.340", i16, i8, %"class.blink::Member.347", %"class.blink::Member.349", %"class.blink::Member.351", %"class.blink::Member.353", %"class.blink::TextLinkColors", %"class.blink::Member.355", i8, [7 x i8], %"class.blink::HeapHashMap.357", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.30", %"class.WTF::Vector.364", %"class.blink::Member.369", %"class.blink::Member.371", i8, %"class.blink::Member.30", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.373", %"class.blink::HeapVector.375", %"class.std::__1::unique_ptr.383", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.389", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.402", %"class.WTF::Vector.404", i8, i8, %"class.std::__1::unique_ptr.409", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.415", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.423", i8, i32, %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.431", %"class.WTF::HashMap.433", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::Member.442", %"class.blink::Member.444", %"class.blink::Member.12", %"class.blink::Member.12", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.446", i8, i32, %"class.blink::Member.453", %"class.blink::Member.455", i32, %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461", %"class.std::__1::unique_ptr.463", i64, %"class.std::__1::unique_ptr.469", i32, i32, %"class.blink::Member.484", %"class.blink::Member.486", %"class.blink::Member.488", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.490", %"class.WTF::Vector.492", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.497", %"class.blink::Member.504", %"class.std::__1::unique_ptr.506", %"class.blink::Member.512", i8, i8, %"class.WTF::String", %"class.blink::Member.514", i8, [7 x i8], %"class.blink::HeapHashMap.516", %"class.blink::HeapObserverSet", %"class.blink::Member.530", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.532", i32, i8, i8, %"class.blink::WeakMember.534", %"class.blink::Member.535" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.4", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.10", %"class.blink::Member.12", %"class.blink::Member.4", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.57", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.62", %"class.blink::HeapVector.64" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.18" }
%"class.blink::HeapHashMap.18" = type { %"class.WTF::HashMap.21" }
%"class.WTF::HashMap.21" = type { %"class.WTF::HashTable.22" }
%"class.WTF::HashTable.22" = type <{ %"struct.WTF::KeyValuePair.24"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.24" = type { %"class.WTF::AtomicString", %"class.blink::Member.26" }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.30", i32, %"class.blink::HeapVector" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.59" }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::HeapHashMap.61"* }
%"class.blink::HeapHashMap.61" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.64" = type { %"class.WTF::Vector.67" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.blink::Member.70"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.73" }
%"class.blink::HeapHashMap.73" = type { %"class.WTF::HashMap.76" }
%"class.WTF::HashMap.76" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"struct.WTF::KeyValuePair.79"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.79" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.80" = type { %"class.WTF::VectorBuffer.81" }
%"class.WTF::VectorBuffer.81" = type { %"class.WTF::VectorBufferBase.82" }
%"class.WTF::VectorBufferBase.82" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.83 }
%class.scoped_refptr.83 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.84" }
%"struct.std::__1::atomic.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i32 }
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.553", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.621", i32, i8, [3 x i8], %"class.blink::HeapVector.623", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.631", %"class.blink::Member.633", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.642", %"class.blink::Member.770", %"class.blink::Member.772", i8, [7 x i8] }>
%"class.blink::Supplementable.553" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.554" }
%"class.blink::HeapHashMap.554" = type { %"class.WTF::HashMap.557" }
%"class.WTF::HashMap.557" = type { %"class.WTF::HashTable.558" }
%"class.WTF::HashTable.558" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.569" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.561" }
%"class.blink::HeapObserverSet.561" = type { i32, [4 x i8], %"class.blink::HeapHashSet.562" }
%"class.blink::HeapHashSet.562" = type { %"class.WTF::HashSet.565" }
%"class.WTF::HashSet.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"class.blink::WeakMember.568"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.568" = type opaque
%"class.blink::Supplementable.569" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.570" }
%"class.blink::HeapHashMap.570" = type { %"class.WTF::HashMap.573" }
%"class.WTF::HashMap.573" = type { %"class.WTF::HashTable.574" }
%"class.WTF::HashTable.574" = type <{ %"struct.WTF::KeyValuePair.576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.576" = type { i8*, %"class.blink::Member.1053" }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1055" }
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.577, %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.581", %"class.std::__1::unique_ptr.611", %"class.std::__1::unique_ptr.611", %"class.blink::Member.93", i32, [4 x i8], %"class.WTF::HashSet.617", i32, i32 }
%class.scoped_refptr.577 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.578", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.580 }
%"class.WTF::RefCounted.578" = type { %"class.base::RefCounted.579" }
%"class.base::RefCounted.579" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.580 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.598", %"class.std::__1::map.607"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.586 }
%union.anon.586 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.590", %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::map.598" = type { %"class.std::__1::__tree.599" }
%"class.std::__1::__tree.599" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::map.607" = type opaque
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.623" = type { %"class.WTF::Vector.626" }
%"class.WTF::Vector.626" = type { %"class.WTF::VectorBuffer.627" }
%"class.WTF::VectorBuffer.627" = type { %"class.WTF::VectorBufferBase.628" }
%"class.WTF::VectorBufferBase.628" = type { %"class.blink::Member.629"*, i32, i32 }
%"class.blink::Member.629" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.635", i32, i32 }
%"class.blink::HeapHashMap.635" = type { %"class.WTF::HashMap.638" }
%"class.WTF::HashMap.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ %"struct.WTF::KeyValuePair.641"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.641" = type opaque
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.645" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.mojo::StructPtr.651"*, i32, i32 }
%"class.mojo::StructPtr.651" = type { %"class.std::__1::unique_ptr.652" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.655", %"class.WTF::HashMap.662", %"class.WTF::HashMap.667", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.672", i32, %"class.mojo::StructPtr.677", %"class.WTF::Vector.672" }
%"class.mojo::StructPtr.655" = type { %"class.std::__1::unique_ptr.656" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"struct.WTF::KeyValuePair.666"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.666" = type opaque
%"class.WTF::HashMap.667" = type { %"class.WTF::HashTable.668" }
%"class.WTF::HashTable.668" = type <{ %"struct.WTF::KeyValuePair.671"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.671" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.677" = type { %"class.std::__1::unique_ptr.678" }
%"class.std::__1::unique_ptr.678" = type { %"class.std::__1::__compressed_pair.679" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.680" }
%"struct.std::__1::__compressed_pair_elem.680" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.672", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.761" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.692", i32 }>
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.695", %"class.absl::optional.696", %"class.absl::optional.701", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.714", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.736", %"class.std::__1::map.747", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.756", i8, %class.scoped_refptr.706, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.757" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.695" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.696" = type { %"class.absl::optional_internal::optional_data.697" }
%"class.absl::optional_internal::optional_data.697" = type { %"class.absl::optional_internal::optional_data_base.698" }
%"class.absl::optional_internal::optional_data_base.698" = type { %"class.absl::optional_internal::optional_data_dtor_base.699" }
%"class.absl::optional_internal::optional_data_dtor_base.699" = type { i8, %union.anon.700 }
%union.anon.700 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.701" = type { %"class.absl::optional_internal::optional_data.702" }
%"class.absl::optional_internal::optional_data.702" = type { %"class.absl::optional_internal::optional_data_base.703" }
%"class.absl::optional_internal::optional_data_base.703" = type { %"class.absl::optional_internal::optional_data_dtor_base.704" }
%"class.absl::optional_internal::optional_data_dtor_base.704" = type { i8, %union.anon.705 }
%union.anon.705 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.706, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.707" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.707" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.317", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.317" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.318" }
%"struct.std::__1::atomic.318" = type { %"struct.std::__1::__atomic_base.319" }
%"struct.std::__1::__atomic_base.319" = type { %"struct.std::__1::__atomic_base.320" }
%"struct.std::__1::__atomic_base.320" = type { %"struct.std::__1::__cxx_atomic_impl.321" }
%"struct.std::__1::__cxx_atomic_impl.321" = type { %"struct.std::__1::__cxx_atomic_base_impl.322" }
%"struct.std::__1::__cxx_atomic_base_impl.322" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.712 }
%class.scoped_refptr.712 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.774", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.706, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.774" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.713 }
%class.scoped_refptr.713 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.717", %class.scoped_refptr.718 }
%"class.base::RepeatingCallback.717" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.718 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.719", [4 x i8] }>
%"class.base::RefCountedThreadSafe.719" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.735" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.735" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.736" = type { %"class.std::__1::__tree.737" }
%"class.std::__1::__tree.737" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::map.747" = type { %"class.std::__1::__tree.748" }
%"class.std::__1::__tree.748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.749", %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.base::OnceCallback.756" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.706 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.315" }>
%"class.base::RefCountedThreadSafe.315" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.757" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.114 }
%class.scoped_refptr.114 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.115" = type { %"class.WTF::VectorBuffer.116" }
%"class.WTF::VectorBuffer.116" = type { %"class.WTF::VectorBufferBase.117" }
%"class.WTF::VectorBufferBase.117" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.119", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.119" = type { %"class.base::RefCounted.120" }
%"class.base::RefCounted.120" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.123" }
%"class.blink::HeapHashMap.123" = type { %"class.WTF::HashMap.126" }
%"class.WTF::HashMap.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.WTF::KeyValuePair.129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.129" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.326" }
%"class.blink::HeapHashMap.326" = type { %"class.WTF::HashMap.329" }
%"class.WTF::HashMap.329" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"struct.WTF::KeyValuePair.332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.332" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.337" }
%"class.WTF::HashTable.337" = type <{ %"class.blink::WeakMember.339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.339" = type opaque
%"class.blink::HeapHashSet.340" = type { %"class.WTF::HashSet.343" }
%"class.WTF::HashSet.343" = type { %"class.WTF::HashTable.344" }
%"class.WTF::HashTable.344" = type <{ %"class.blink::WeakMember.346"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.346" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.357" = type { %"class.WTF::HashMap.360" }
%"class.WTF::HashMap.360" = type { %"class.WTF::HashTable.361" }
%"class.WTF::HashTable.361" = type <{ %"struct.WTF::KeyValuePair.363"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.363" = type opaque
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.33" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.37", %"class.blink::Member.39", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.37" = type { %"class.WTF::SingleThreadedBitField.38" }
%"class.WTF::SingleThreadedBitField.38" = type { i32 }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.44", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.44" = type { %"class.base::RefCounted.45" }
%"class.base::RefCounted.45" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.375" = type { %"class.WTF::Vector.378" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %"class.blink::Member.381"*, i32, i32 }
%"class.blink::Member.381" = type opaque
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.389" = type { %"class.WTF::HashSet.392" }
%"class.WTF::HashSet.392" = type { %"class.WTF::HashTable.393" }
%"class.WTF::HashTable.393" = type <{ %"class.blink::WeakMember.395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.395" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.396", i32, [4 x i8] }>
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"struct.std::__1::pair.399"*, i32, i32 }
%"struct.std::__1::pair.399" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.49" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.blink::Member.30"*, i32, i32 }
%"class.blink::HeapVector.415" = type { %"class.WTF::Vector.418" }
%"class.WTF::Vector.418" = type { %"class.WTF::VectorBuffer.419" }
%"class.WTF::VectorBuffer.419" = type { %"class.WTF::VectorBufferBase.420" }
%"class.WTF::VectorBufferBase.420" = type { %"class.blink::Member.421"*, i32, i32 }
%"class.blink::Member.421" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.12" }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.433" = type { %"class.WTF::HashTable.434" }
%"class.WTF::HashTable.434" = type <{ %"struct.WTF::KeyValuePair.437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.437" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.323", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.314, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.314 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.323" = type { %"class.blink::MemberBase.13" }
%"class.blink::HeapHashSet.446" = type { %"class.WTF::HashSet.449" }
%"class.WTF::HashSet.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"class.blink::Member.452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.452" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.472", %"class.WTF::HashSet.472", %"class.WTF::HashSet.472", %"class.WTF::HashSet.472", %"class.WTF::HashSet.472", %"class.WTF::HashSet.472", i32, [4 x i8], %"class.WTF::HashMap.476", %"class.WTF::HashMap.476", %"class.WTF::HashMap.476", %"class.WTF::HashMap.476", %"class.WTF::HashMap.476", %"class.WTF::HashMap.476", %"class.WTF::HashMap.476", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.476" = type { %"class.WTF::HashTable.477" }
%"class.WTF::HashTable.477" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.497" = type { %"class.WTF::HashMap.500" }
%"class.WTF::HashMap.500" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"struct.WTF::KeyValuePair.503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.503" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.516" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.523" }
%"class.blink::HeapHashSet.523" = type { %"class.WTF::HashSet.526" }
%"class.WTF::HashSet.526" = type { %"class.WTF::HashTable.527" }
%"class.WTF::HashTable.527" = type <{ %"class.blink::WeakMember.529"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.529" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.12", %"class.blink::HeapHashSet.539", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.546", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.539" = type { %"class.WTF::HashSet.542" }
%"class.WTF::HashSet.542" = type { %"class.WTF::HashTable.543" }
%"class.WTF::HashTable.543" = type <{ %"class.blink::Member.545"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.545" = type opaque
%"class.blink::HeapTaskRunnerTimer.546" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.547", { i64, i64 } }
%"class.blink::WeakMember.547" = type { %"class.blink::MemberBase.533" }
%"class.blink::WeakMember.534" = type { %"class.blink::MemberBase" }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.WTF::Vector.775"* }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"class.blink::CSSLengthInterpolationType"* }
%"class.blink::CSSLengthInterpolationType" = type <{ %"class.blink::CSSInterpolationType", i32, [4 x i8] }>
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.838" }
%"class.blink::PersistentBase.838" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr.839" }
%"class.blink::PersistentNodePtr.839" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.blink::CSSAspectRatioInterpolationType"* }
%"class.blink::CSSAspectRatioInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::CSSNumberInterpolationType"* }
%"class.blink::CSSNumberInterpolationType" = type <{ %"class.blink::CSSInterpolationType", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.blink::CSSColorInterpolationType"* }
%"class.blink::CSSColorInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.blink::CSSPaintInterpolationType"* }
%"class.blink::CSSPaintInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"class.blink::CSSRayInterpolationType"* }
%"class.blink::CSSRayInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.blink::CSSPathInterpolationType"* }
%"class.blink::CSSPathInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::CSSShadowListInterpolationType"* }
%"class.blink::CSSShadowListInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.blink::CSSImageInterpolationType"* }
%"class.blink::CSSImageInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.blink::CSSImageListInterpolationType"* }
%"class.blink::CSSImageListInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.blink::CSSLengthListInterpolationType"* }
%"class.blink::CSSLengthListInterpolationType" = type <{ %"class.blink::CSSInterpolationType", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.blink::CSSFontWeightInterpolationType"* }
%"class.blink::CSSFontWeightInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.blink::CSSFontStretchInterpolationType"* }
%"class.blink::CSSFontStretchInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.blink::CSSFontVariationSettingsInterpolationType"* }
%"class.blink::CSSFontVariationSettingsInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.blink::CSSVisibilityInterpolationType"* }
%"class.blink::CSSVisibilityInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.blink::CSSClipInterpolationType"* }
%"class.blink::CSSClipInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.933" = type { %"class.std::__1::__compressed_pair.934" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.blink::CSSOffsetRotateInterpolationType"* }
%"class.blink::CSSOffsetRotateInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::CSSPositionAxisListInterpolationType"* }
%"class.blink::CSSPositionAxisListInterpolationType" = type { %"class.blink::CSSLengthListInterpolationType.base", [4 x i8] }
%"class.blink::CSSLengthListInterpolationType.base" = type <{ %"class.blink::CSSInterpolationType", i32 }>
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.blink::CSSPositionInterpolationType"* }
%"class.blink::CSSPositionInterpolationType" = type { %"class.blink::CSSLengthListInterpolationType.base", [4 x i8] }
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.blink::CSSLengthPairInterpolationType"* }
%"class.blink::CSSLengthPairInterpolationType" = type { %"class.blink::CSSLengthListInterpolationType.base", [4 x i8] }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.blink::CSSTranslateInterpolationType"* }
%"class.blink::CSSTranslateInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.963" = type { %"class.std::__1::__compressed_pair.964" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.blink::CSSTransformOriginInterpolationType"* }
%"class.blink::CSSTransformOriginInterpolationType" = type { %"class.blink::CSSLengthListInterpolationType.base", [4 x i8] }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.blink::CSSSizeListInterpolationType"* }
%"class.blink::CSSSizeListInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.blink::CSSBorderImageLengthBoxInterpolationType"* }
%"class.blink::CSSBorderImageLengthBoxInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.981" = type { %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"class.blink::CSSScaleInterpolationType"* }
%"class.blink::CSSScaleInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.blink::CSSFontSizeInterpolationType"* }
%"class.blink::CSSFontSizeInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.blink::CSSTextIndentInterpolationType"* }
%"class.blink::CSSTextIndentInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.blink::CSSImageSliceInterpolationType"* }
%"class.blink::CSSImageSliceInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.1005" = type { %"class.std::__1::__compressed_pair.1006" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.1007" }
%"struct.std::__1::__compressed_pair_elem.1007" = type { %"class.blink::CSSBasicShapeInterpolationType"* }
%"class.blink::CSSBasicShapeInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"class.blink::CSSRotateInterpolationType"* }
%"class.blink::CSSRotateInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::CSSFilterListInterpolationType"* }
%"class.blink::CSSFilterListInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::CSSTransformInterpolationType"* }
%"class.blink::CSSTransformInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.std::__1::unique_ptr.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"class.blink::CSSDefaultInterpolationType"* }
%"class.blink::CSSDefaultInterpolationType" = type { %"class.blink::InterpolationType" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PropertyHandle", %"class.std::__1::unique_ptr.794" }
%"class.std::__1::unique_ptr.794" = type { %"class.std::__1::__compressed_pair.795" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"class.WTF::Vector.775"* }
%"class.WTF::HashSet.831" = type { %"class.WTF::HashTable.832" }
%"class.WTF::HashTable.832" = type <{ %"class.blink::CSSProperty"**, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.blink::CSSVarCycleInterpolationType"* }
%"class.blink::CSSVarCycleInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.blink::CSSInterpolationType"* }
%"class.blink::CSSAngleInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSCustomLengthInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSPercentageInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSResolutionInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSTimeInterpolationType" = type { %"class.blink::CSSInterpolationType" }
%"class.blink::CSSCustomListInterpolationType" = type <{ %"class.blink::CSSInterpolationType", %"class.std::__1::unique_ptr.1041", i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1097", %class.scoped_refptr.1103 }
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.1103 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.1104", [4 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.1095, i32, [4 x i8] }>
%class.scoped_refptr.1095 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1096" }
%"class.base::RefCountedThreadSafe.1096" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.1097", %class.scoped_refptr.1103 }
%"class.WTF::Vector.1106" = type opaque
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.1558, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.1107, %class.scoped_refptr.1107, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.1107, i32, [4 x i8] }>
%class.scoped_refptr.1558 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1543", %"class.std::__1::unique_ptr.1545" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.1172", %"class.blink::DataRef.1252", %"class.blink::DataRef.1256", %"class.blink::DataRef.1459", %"class.blink::DataRef.1526", %"class.blink::DataRef.1530", %"class.blink::DataRef.1534", %"class.blink::DataRef.1538", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.1108 }
%class.scoped_refptr.1108 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.1109", %"class.blink::DataRef.1111", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.1109" = type { %"class.base::RefCounted.1110" }
%"class.base::RefCounted.1110" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1111" = type { %class.scoped_refptr.1112 }
%class.scoped_refptr.1112 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.1113", %"class.blink::Font" }
%"class.WTF::RefCounted.1113" = type { %"class.base::RefCounted.1114" }
%"class.base::RefCounted.1114" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.1141 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.1116, %class.scoped_refptr.1124, %class.scoped_refptr.1134, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.1140 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1115 }
%class.scoped_refptr.1115 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1833", [4 x i8] }>
%"class.WTF::RefCounted.1833" = type { %"class.base::RefCounted.1834" }
%"class.base::RefCounted.1834" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1116 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.1122", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.1117" }
%"class.WTF::Vector.1117" = type { %"class.WTF::VectorBuffer.1118" }
%"class.WTF::VectorBuffer.1118" = type { %"class.WTF::VectorBufferBase.1119" }
%"class.WTF::VectorBufferBase.1119" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.1122" = type { %"class.base::RefCounted.1123" }
%"class.base::RefCounted.1123" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1124 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.1125", %"class.WTF::RefCounted.1132", [4 x i8] }>
%"class.blink::FontSettings.1125" = type { %"class.WTF::Vector.1126" }
%"class.WTF::Vector.1126" = type { %"class.WTF::VectorBuffer.1127" }
%"class.WTF::VectorBuffer.1127" = type { %"class.WTF::VectorBufferBase.1128" }
%"class.WTF::VectorBufferBase.1128" = type { %"class.blink::FontTagValuePair.1129"*, i32, i32 }
%"class.blink::FontTagValuePair.1129" = type { i32, float }
%"class.WTF::RefCounted.1132" = type { %"class.base::RefCounted.1133" }
%"class.base::RefCounted.1133" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1134 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.1135", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.1137, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.1135" = type { %"class.base::RefCounted.1136" }
%"class.base::RefCounted.1136" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.1137 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1138", [4 x i8] }>
%"class.WTF::RefCounted.1138" = type { %"class.base::RefCounted.1139" }
%"class.base::RefCounted.1139" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.1140 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.1141 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.1142", %"class.WTF::Vector.1144", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.1168", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.1142" = type { %"class.base::RefCounted.1143" }
%"class.base::RefCounted.1143" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1144" = type { %"class.WTF::VectorBuffer.1145" }
%"class.WTF::VectorBuffer.1145" = type { %"class.WTF::VectorBufferBase.1146", [8 x i8] }
%"class.WTF::VectorBufferBase.1146" = type { %class.scoped_refptr.1147*, i32, i32 }
%class.scoped_refptr.1147 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1148", [4 x i8] }>
%"class.WTF::RefCounted.1148" = type { %"class.base::RefCounted.1149" }
%"class.base::RefCounted.1149" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.1158", %class.scoped_refptr.1165, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1148" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.1152", %"class.absl::optional.1152", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.1152" = type { %"class.absl::optional_internal::optional_data.1153" }
%"class.absl::optional_internal::optional_data.1153" = type { %"class.absl::optional_internal::optional_data_base.1154" }
%"class.absl::optional_internal::optional_data_base.1154" = type { %"class.absl::optional_internal::optional_data_dtor_base.1155" }
%"class.absl::optional_internal::optional_data_dtor_base.1155" = type { i8, %union.anon.1156 }
%union.anon.1156 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.1157, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.84" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.84" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.318" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.1157 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.1161, %class.scoped_refptr.1161 }
%class.scoped_refptr.1161 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.1165 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.1166", [4 x i8] }>
%"class.WTF::RefCounted.1166" = type { %"class.base::RefCounted.1167" }
%"class.base::RefCounted.1167" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.1168" = type { %"class.blink::PersistentBase.1169" }
%"class.blink::PersistentBase.1169" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.839" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1170 }
%class.scoped_refptr.1170 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.1171, i8, i8, i8, i8 }>
%union.anon.1171 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.1172" = type { %class.scoped_refptr.1173 }
%class.scoped_refptr.1173 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.1174", [4 x i8], %"class.blink::DataRef.1176", %"class.blink::DataRef.1217", %"class.WTF::Vector.1221", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.1225, %class.scoped_refptr.1234, %"class.blink::Persistent.1242", %"class.blink::Persistent.1244", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.1174" = type { %"class.base::RefCounted.1175" }
%"class.base::RefCounted.1175" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1176" = type { %class.scoped_refptr.1177 }
%class.scoped_refptr.1177 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.1178", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.1180, %class.scoped_refptr.1187, %"class.blink::Persistent.1204", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.1178" = type { %"class.base::RefCounted.1179" }
%"class.base::RefCounted.1179" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1180 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1181", %"class.WTF::Vector.1182" }
%"class.base::RefCountedThreadSafe.1181" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1182" = type { %"class.WTF::VectorBuffer.1183" }
%"class.WTF::VectorBuffer.1183" = type { %"class.WTF::VectorBufferBase.1184" }
%"class.WTF::VectorBufferBase.1184" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.1187 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.1188", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.1188" = type { %"class.base::RefCounted.1189" }
%"class.base::RefCounted.1189" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.1190", %"class.blink::Persistent.1195" }
%"class.WTF::HashMap.1190" = type { %"class.WTF::HashTable.1191" }
%"class.WTF::HashTable.1191" = type <{ %"struct.WTF::KeyValuePair.1194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1194" = type { %"class.WTF::AtomicString", %class.scoped_refptr.815 }
%"class.blink::Persistent.1195" = type { %"class.blink::PersistentBase.1196" }
%"class.blink::PersistentBase.1196" = type { %"class.blink::HeapHashMap.1197"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.1197" = type { %"class.WTF::HashMap.1200" }
%"class.WTF::HashMap.1200" = type { %"class.WTF::HashTable.1201" }
%"class.WTF::HashTable.1201" = type <{ %"struct.WTF::KeyValuePair.1203"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1203" = type opaque
%"class.blink::Persistent.1204" = type { %"class.blink::PersistentBase.1205" }
%"class.blink::PersistentBase.1205" = type { %"class.blink::HeapVector.1206"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.1206" = type { %"class.WTF::Vector.1209" }
%"class.WTF::Vector.1209" = type { %"class.WTF::VectorBuffer.1210" }
%"class.WTF::VectorBuffer.1210" = type { %"class.WTF::VectorBufferBase.1211" }
%"class.WTF::VectorBufferBase.1211" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.1212", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.1217" = type { %class.scoped_refptr.1218 }
%class.scoped_refptr.1218 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.1219", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.1219" = type { %"class.base::RefCounted.1220" }
%"class.base::RefCounted.1220" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1221" = type { %"class.WTF::VectorBuffer.1222" }
%"class.WTF::VectorBuffer.1222" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.1225 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.1226", %"class.WTF::Vector.1228" }
%"class.WTF::RefCounted.1226" = type { %"class.base::RefCounted.1227" }
%"class.base::RefCounted.1227" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1228" = type { %"class.WTF::VectorBuffer.1229" }
%"class.WTF::VectorBuffer.1229" = type { %"class.WTF::VectorBufferBase.1230" }
%"class.WTF::VectorBufferBase.1230" = type { %"struct.std::__1::pair.1231"*, i32, i32 }
%"struct.std::__1::pair.1231" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1234 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1235", [4 x i8], %"class.WTF::Vector.1237" }
%"class.WTF::RefCounted.1235" = type { %"class.base::RefCounted.1236" }
%"class.base::RefCounted.1236" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1239", [28 x i8] }>
%"class.WTF::VectorBufferBase.1239" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1242" = type { %"class.blink::PersistentBase.1243" }
%"class.blink::PersistentBase.1243" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1244" = type { %"class.blink::PersistentBase.1245" }
%"class.blink::PersistentBase.1245" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1248", %"class.blink::Member.1250" }
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1252" = type { %class.scoped_refptr.1253 }
%class.scoped_refptr.1253 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1254", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1254" = type { %"class.base::RefCounted.1255" }
%"class.base::RefCounted.1255" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1256" = type { %class.scoped_refptr.1257 }
%class.scoped_refptr.1257 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1258", [4 x i8], %"class.blink::DataRef.1260", %"class.blink::DataRef.1326", %"class.blink::TransformOperations", %class.scoped_refptr.1234, %"class.blink::Persistent.1453", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1258" = type { %"class.base::RefCounted.1259" }
%"class.base::RefCounted.1259" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1260" = type { %class.scoped_refptr.1261 }
%class.scoped_refptr.1261 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1262", [4 x i8], %"class.blink::DataRef.1264", %"class.blink::Persistent.1302", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1262" = type { %"class.base::RefCounted.1263" }
%"class.base::RefCounted.1263" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1264" = type { %class.scoped_refptr.1265 }
%class.scoped_refptr.1265 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1266", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1284, %class.scoped_refptr.1287, %class.scoped_refptr.1290, %class.scoped_refptr.1293, %class.scoped_refptr.1294, %class.scoped_refptr.1295, %"class.blink::Persistent.1302", %"class.blink::Persistent.1317", %"class.absl::optional.1321", %"class.absl::optional.1321", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1266" = type { %"class.base::RefCounted.1267" }
%"class.base::RefCounted.1267" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1268", %"class.std::__1::unique_ptr.1273" }
%"class.WTF::Vector.1268" = type { %"class.WTF::VectorBuffer.1269" }
%"class.WTF::VectorBuffer.1269" = type { %"class.WTF::VectorBufferBase.1270" }
%"class.WTF::VectorBufferBase.1270" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1276", %"class.WTF::Vector.1268", i32, i32 }
%"class.WTF::Vector.1276" = type { %"class.WTF::VectorBuffer.1277" }
%"class.WTF::VectorBuffer.1277" = type { %"class.WTF::VectorBufferBase.1278" }
%"class.WTF::VectorBufferBase.1278" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1284 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1285", [4 x i8] }>
%"class.WTF::RefCounted.1285" = type { %"class.base::RefCounted.1286" }
%"class.base::RefCounted.1286" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1287 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1288", [4 x i8] }>
%"class.WTF::RefCounted.1288" = type { %"class.base::RefCounted.1289" }
%"class.base::RefCounted.1289" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1290 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1291" }>
%"class.WTF::RefCounted.1291" = type { %"class.base::RefCounted.1292" }
%"class.base::RefCounted.1292" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1293 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1294 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1295 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1296", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1296" = type { %"class.base::RefCounted.1297" }
%"class.base::RefCounted.1297" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1298" }
%"class.blink::DataRef.1298" = type { %class.scoped_refptr.1299 }
%class.scoped_refptr.1299 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1242", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1300" }
%"class.WTF::RefCounted.1300" = type { %"class.base::RefCounted.1301" }
%"class.base::RefCounted.1301" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1317" = type { %"class.blink::PersistentBase.1318" }
%"class.blink::PersistentBase.1318" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1287, %"class.blink::Member.1212", i32, [4 x i8] }>
%"class.absl::optional.1321" = type { %"class.absl::optional_internal::optional_data.1322" }
%"class.absl::optional_internal::optional_data.1322" = type { %"class.absl::optional_internal::optional_data_base.1323" }
%"class.absl::optional_internal::optional_data_base.1323" = type { %"class.absl::optional_internal::optional_data_dtor_base.1324" }
%"class.absl::optional_internal::optional_data_dtor_base.1324" = type { i8, [3 x i8], %union.anon.1325 }
%union.anon.1325 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1302" = type { %"class.blink::PersistentBase.1303" }
%"class.blink::PersistentBase.1303" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1306" }
%"class.blink::HeapVector.1306" = type { %"class.WTF::Vector.1309" }
%"class.WTF::Vector.1309" = type { %"class.WTF::VectorBuffer.1310" }
%"class.WTF::VectorBuffer.1310" = type { %"class.WTF::VectorBufferBase.1311" }
%"class.WTF::VectorBufferBase.1311" = type { %"class.blink::Member.1312"*, i32, i32 }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1326" = type { %class.scoped_refptr.1327 }
%class.scoped_refptr.1327 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1328", %"class.blink::DataRef.1330", %"class.blink::DataRef.1334", %"class.blink::DataRef.1343", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1367", %"class.std::__1::unique_ptr.1383", %"class.std::__1::unique_ptr.1419", %"class.std::__1::unique_ptr.1430", %"class.std::__1::unique_ptr.1441", %"class.WTF::Vector.672", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1328" = type { %"class.base::RefCounted.1329" }
%"class.base::RefCounted.1329" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1330" = type { %class.scoped_refptr.1331 }
%class.scoped_refptr.1331 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1332", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1332" = type { %"class.base::RefCounted.1333" }
%"class.base::RefCounted.1333" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1334" = type { %class.scoped_refptr.1335 }
%class.scoped_refptr.1335 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1336", [4 x i8], %"class.WTF::Vector.1338", i8, [7 x i8] }>
%"class.WTF::RefCounted.1336" = type { %"class.base::RefCounted.1337" }
%"class.base::RefCounted.1337" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1338" = type { %"class.WTF::VectorBuffer.1339" }
%"class.WTF::VectorBuffer.1339" = type { %"class.WTF::VectorBufferBase.1340" }
%"class.WTF::VectorBufferBase.1340" = type { i32*, i32, i32 }
%"class.blink::DataRef.1343" = type { %class.scoped_refptr.1344 }
%class.scoped_refptr.1344 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1345", [4 x i8], %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1347", %"class.WTF::HashMap.1357", %"class.WTF::HashMap.1357", %"class.WTF::HashMap.1357", %"class.WTF::HashMap.1357", %"class.WTF::HashMap.1362", %"class.WTF::Vector.1268", %"class.WTF::Vector.1268", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1345" = type { %"class.base::RefCounted.1346" }
%"class.base::RefCounted.1346" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1347" = type { %"class.WTF::HashTable.1348" }
%"class.WTF::HashTable.1348" = type <{ %"struct.WTF::KeyValuePair.1351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1351" = type { %"class.WTF::String", %"class.WTF::Vector.1352" }
%"class.WTF::Vector.1352" = type { %"class.WTF::VectorBuffer.1353" }
%"class.WTF::VectorBuffer.1353" = type { %"class.WTF::VectorBufferBase.1354" }
%"class.WTF::VectorBufferBase.1354" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1357" = type { %"class.WTF::HashTable.1358" }
%"class.WTF::HashTable.1358" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type { i64, %"class.WTF::Vector.672" }
%"class.WTF::HashMap.1362" = type { %"class.WTF::HashTable.1363" }
%"class.WTF::HashTable.1363" = type <{ %"struct.WTF::KeyValuePair.1366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1366" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1370" }
%"class.WTF::HashMap.1370" = type { %"class.WTF::HashTable.1371" }
%"class.WTF::HashTable.1371" = type <{ %"struct.WTF::KeyValuePair.1374"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1374" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1375", %"class.absl::optional.1375", %"class.absl::optional.1375" }
%"class.absl::optional.1375" = type { %"class.absl::optional_internal::optional_data.1376" }
%"class.absl::optional_internal::optional_data.1376" = type { %"class.absl::optional_internal::optional_data_base.1377" }
%"class.absl::optional_internal::optional_data_base.1377" = type { %"class.absl::optional_internal::optional_data_dtor_base.1378" }
%"class.absl::optional_internal::optional_data_dtor_base.1378" = type { i8, %union.anon.1379 }
%union.anon.1379 = type { i32 }
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1221", %"class.WTF::Vector.1396", %"class.WTF::Vector.1386", %"class.WTF::Vector.1401", %"class.WTF::Vector.1406", %"class.WTF::Vector.1411" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1386", %"class.WTF::Vector.1386", %"class.WTF::Vector.1391" }
%"class.WTF::Vector.1391" = type { %"class.WTF::VectorBuffer.1392" }
%"class.WTF::VectorBuffer.1392" = type { %"class.WTF::VectorBufferBase.1393" }
%"class.WTF::VectorBufferBase.1393" = type { %class.scoped_refptr.1095*, i32, i32 }
%"class.WTF::Vector.1396" = type { %"class.WTF::VectorBuffer.1397" }
%"class.WTF::VectorBuffer.1397" = type { %"class.WTF::VectorBufferBase.1398" }
%"class.WTF::VectorBufferBase.1398" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { double*, i32, i32 }
%"class.WTF::Vector.1401" = type { %"class.WTF::VectorBuffer.1402" }
%"class.WTF::VectorBuffer.1402" = type { %"class.WTF::VectorBufferBase.1403" }
%"class.WTF::VectorBufferBase.1403" = type { i32*, i32, i32 }
%"class.WTF::Vector.1406" = type { %"class.WTF::VectorBuffer.1407" }
%"class.WTF::VectorBuffer.1407" = type { %"class.WTF::VectorBufferBase.1408" }
%"class.WTF::VectorBufferBase.1408" = type { i32*, i32, i32 }
%"class.WTF::Vector.1411" = type { %"class.WTF::VectorBuffer.1412" }
%"class.WTF::VectorBuffer.1412" = type { %"class.WTF::VectorBufferBase.1413" }
%"class.WTF::VectorBufferBase.1413" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1419" = type { %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1422" }
%"class.WTF::Vector.1422" = type { %"class.WTF::VectorBuffer.1423" }
%"class.WTF::VectorBuffer.1423" = type { %"class.WTF::VectorBufferBase.1424" }
%"class.WTF::VectorBufferBase.1424" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1433" }
%"class.WTF::Vector.1433" = type { %"class.WTF::VectorBuffer.1434" }
%"class.WTF::VectorBuffer.1434" = type { %"class.WTF::VectorBufferBase.1435" }
%"class.WTF::VectorBufferBase.1435" = type { %"class.blink::Persistent.1242"*, i32, i32 }
%"class.std::__1::unique_ptr.1441" = type { %"class.std::__1::__compressed_pair.1442" }
%"class.std::__1::__compressed_pair.1442" = type { %"struct.std::__1::__compressed_pair_elem.1443" }
%"struct.std::__1::__compressed_pair_elem.1443" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1242", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1447" }
%"class.WTF::Vector.1447" = type { %"class.WTF::VectorBuffer.1448" }
%"class.WTF::VectorBuffer.1448" = type { %"class.WTF::VectorBufferBase.1449" }
%"class.WTF::VectorBufferBase.1449" = type { %class.scoped_refptr.1450*, i32, i32 }
%class.scoped_refptr.1450 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1291", [4 x i8] }>
%"class.blink::Persistent.1453" = type { %"class.blink::PersistentBase.1454" }
%"class.blink::PersistentBase.1454" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1457" }
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1459" = type { %class.scoped_refptr.1460 }
%class.scoped_refptr.1460 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1461", [4 x i8], %"class.blink::DataRef.1463", %"class.blink::DataRef.1467", %"class.blink::DataRef.1488", %"class.blink::DataRef.1506", %"class.blink::DataRef.1518", %"class.blink::DataRef.1522", %class.scoped_refptr.1492, i32, [4 x i8] }>
%"class.WTF::RefCounted.1461" = type { %"class.base::RefCounted.1462" }
%"class.base::RefCounted.1462" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1463" = type { %class.scoped_refptr.1464 }
%class.scoped_refptr.1464 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1465", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1465" = type { %"class.base::RefCounted.1466" }
%"class.base::RefCounted.1466" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1467" = type { %class.scoped_refptr.1468 }
%class.scoped_refptr.1468 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1469", %class.scoped_refptr.1471, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1469" = type { %"class.base::RefCounted.1470" }
%"class.base::RefCounted.1470" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1471 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1472", %"class.std::__1::unique_ptr.1478", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1288" }>
%"class.std::__1::unique_ptr.1472" = type { %"class.std::__1::__compressed_pair.1473" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1474" }
%"struct.std::__1::__compressed_pair_elem.1474" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1481, i32, %"struct.std::__1::atomic.318", %"struct.std::__1::atomic.318", i8, i8 }>
%class.sk_sp.1481 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1482, %class.SkTDArray.1483, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.84" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1482 = type { i8*, i32, i32 }
%class.SkTDArray.1483 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1484 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.84", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1484 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.308", [3 x i8] }
%"class.blink::DataRef.1488" = type { %class.scoped_refptr.1489 }
%class.scoped_refptr.1489 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1490", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1490" = type { %"class.base::RefCounted.1491" }
%"class.base::RefCounted.1491" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1492, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1506" = type { %class.scoped_refptr.1507 }
%class.scoped_refptr.1507 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1508", [4 x i8], %class.scoped_refptr.1510, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1508" = type { %"class.base::RefCounted.1509" }
%"class.base::RefCounted.1509" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1510 = type { %"class.base::RefCountedData.1511"* }
%"class.base::RefCountedData.1511" = type { %"class.base::RefCountedThreadSafe.1512", %"class.WTF::Vector.1513" }
%"class.base::RefCountedThreadSafe.1512" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1513" = type { %"class.WTF::VectorBuffer.1514" }
%"class.WTF::VectorBuffer.1514" = type { %"class.WTF::VectorBufferBase.1515" }
%"class.WTF::VectorBufferBase.1515" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1518" = type { %class.scoped_refptr.1519 }
%class.scoped_refptr.1519 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1520", %class.scoped_refptr.1492, %class.scoped_refptr.1492, %class.scoped_refptr.1492 }
%"class.WTF::RefCounted.1520" = type { %"class.base::RefCounted.1521" }
%"class.base::RefCounted.1521" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1522" = type { %class.scoped_refptr.1523 }
%class.scoped_refptr.1523 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1524", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1524" = type { %"class.base::RefCounted.1525" }
%"class.base::RefCounted.1525" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1492 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1493", %"class.blink::Persistent.1495", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1493" = type { %"class.base::RefCounted.1494" }
%"class.base::RefCounted.1494" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1495" = type { %"class.blink::PersistentBase.1496" }
%"class.blink::PersistentBase.1496" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.30", %"class.blink::HeapHashMap.1499" }
%"class.blink::HeapHashMap.1499" = type { %"class.WTF::HashMap.1502" }
%"class.WTF::HashMap.1502" = type { %"class.WTF::HashTable.1503" }
%"class.WTF::HashTable.1503" = type <{ %"struct.WTF::KeyValuePair.1505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1505" = type opaque
%"class.blink::DataRef.1526" = type { %class.scoped_refptr.1527 }
%class.scoped_refptr.1527 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1528", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1528" = type { %"class.base::RefCounted.1529" }
%"class.base::RefCounted.1529" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1530" = type { %class.scoped_refptr.1531 }
%class.scoped_refptr.1531 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1532", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1532" = type { %"class.base::RefCounted.1533" }
%"class.base::RefCounted.1533" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1534" = type { %class.scoped_refptr.1535 }
%class.scoped_refptr.1535 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1536", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1536" = type { %"class.base::RefCounted.1537" }
%"class.base::RefCounted.1537" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1538" = type { %class.scoped_refptr.1539 }
%class.scoped_refptr.1539 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1540", %class.scoped_refptr.1542 }
%"class.WTF::RefCounted.1540" = type { %"class.base::RefCounted.1541" }
%"class.base::RefCounted.1541" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1542 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1831", %"class.blink::StyleVariables", %class.scoped_refptr.1542 }
%"class.WTF::RefCounted.1831" = type { %"class.base::RefCounted.1832" }
%"class.base::RefCounted.1832" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1543" = type { %"class.base::RefCounted.1544" }
%"class.base::RefCounted.1544" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1545" = type { %"class.std::__1::__compressed_pair.1546" }
%"class.std::__1::__compressed_pair.1546" = type { %"struct.std::__1::__compressed_pair_elem.1547" }
%"struct.std::__1::__compressed_pair_elem.1547" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1548" }
%"class.std::__1::unique_ptr.1548" = type { %"class.std::__1::__compressed_pair.1549" }
%"class.std::__1::__compressed_pair.1549" = type { %"struct.std::__1::__compressed_pair_elem.1550" }
%"struct.std::__1::__compressed_pair_elem.1550" = type { %"class.WTF::Vector.1551"* }
%"class.WTF::Vector.1551" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.1107 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.1559", %"class.WTF::Vector.1722", %"class.blink::HeapHashSet.1727", %"class.WTF::Vector.1722", %"class.blink::HeapVector.1781", %"class.blink::HeapVector.1788", %"class.blink::HeapHashMap.1795", %"class.WTF::HashSet.1806", %"class.WTF::HashSet.1806", %"class.blink::HeapHashMap.1810", %"class.blink::HeapHashMap.1810", %"class.blink::HeapHashMap.1810", %"class.blink::HeapHashMap.1810" }
%"class.blink::HeapVector.1559" = type { %"class.WTF::Vector.1562" }
%"class.WTF::Vector.1562" = type { %"class.WTF::VectorBuffer.1563" }
%"class.WTF::VectorBuffer.1563" = type { %"class.WTF::VectorBufferBase.1564" }
%"class.WTF::VectorBufferBase.1564" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.1565", %"struct.blink::Timing", %"class.blink::Member.1654", i32, %"class.blink::Member.1666", %"class.WTF::Vector.1411" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.1588", i8, %"class.absl::optional.1569", %"class.absl::optional.1649" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.1567", %"struct.blink::Timing", %"class.blink::Member.1574", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.1569", %"class.absl::optional.1583", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.1578", %"class.absl::optional.1578", i8, i8, i8, %"class.absl::optional.1569", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1578" = type { %"class.absl::optional_internal::optional_data.1579" }
%"class.absl::optional_internal::optional_data.1579" = type { %"class.absl::optional_internal::optional_data_base.1580" }
%"class.absl::optional_internal::optional_data_base.1580" = type { %"class.absl::optional_internal::optional_data_dtor_base.1581" }
%"class.absl::optional_internal::optional_data_dtor_base.1581" = type { i8, %union.anon.1582 }
%union.anon.1582 = type { double }
%"class.absl::optional.1583" = type { %"class.absl::optional_internal::optional_data.1584" }
%"class.absl::optional_internal::optional_data.1584" = type { %"class.absl::optional_internal::optional_data_base.1585" }
%"class.absl::optional_internal::optional_data_base.1585" = type { %"class.absl::optional_internal::optional_data_dtor_base.1586" }
%"class.absl::optional_internal::optional_data_dtor_base.1586" = type { i8, %union.anon.1587 }
%union.anon.1587 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.1592", %"class.blink::Member.1608", %"class.blink::Member.1630", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.1095, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.1592" = type { %"class.WTF::Vector.1595" }
%"class.WTF::Vector.1595" = type { %"class.WTF::VectorBuffer.1596" }
%"class.WTF::VectorBuffer.1596" = type { %"class.WTF::VectorBufferBase.1597" }
%"class.WTF::VectorBufferBase.1597" = type { %"class.blink::Member.1598"*, i32, i32 }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.1578", %"class.absl::optional.1602", %class.scoped_refptr.1095 }
%"class.absl::optional.1602" = type { %"class.absl::optional_internal::optional_data.1603" }
%"class.absl::optional_internal::optional_data.1603" = type { %"class.absl::optional_internal::optional_data_base.1604" }
%"class.absl::optional_internal::optional_data_base.1604" = type { %"class.absl::optional_internal::optional_data_dtor_base.1605" }
%"class.absl::optional_internal::optional_data_dtor_base.1605" = type { i8, %union.anon.1606 }
%union.anon.1606 = type { i32 }
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::HeapHashMap.1610"* }
%"class.blink::HeapHashMap.1610" = type { %"class.WTF::HashMap.1613" }
%"class.WTF::HashMap.1613" = type { %"class.WTF::HashTable.1614" }
%"class.WTF::HashTable.1614" = type <{ %"struct.WTF::KeyValuePair.1616"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1616" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1617" }
%"class.blink::Member.1617" = type { %"class.blink::MemberBase.1618" }
%"class.blink::MemberBase.1618" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.1621" }
%"class.blink::HeapVector.1621" = type { %"class.WTF::Vector.1624" }
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626" }
%"class.WTF::VectorBufferBase.1626" = type { %"class.blink::Member.1627"*, i32, i32 }
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.1634" }
%"class.blink::HeapVector.1634" = type { %"class.WTF::Vector.1637" }
%"class.WTF::Vector.1637" = type { %"class.WTF::VectorBuffer.1638" }
%"class.WTF::VectorBuffer.1638" = type { %"class.WTF::VectorBufferBase.1639" }
%"class.WTF::VectorBufferBase.1639" = type { %"class.blink::Member.1640"*, i32, i32 }
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1644", %class.scoped_refptr.1095, double, double, double, double }
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.1569" = type { %"class.absl::optional_internal::optional_data.1570" }
%"class.absl::optional_internal::optional_data.1570" = type { %"class.absl::optional_internal::optional_data_base.1571" }
%"class.absl::optional_internal::optional_data_base.1571" = type { %"class.absl::optional_internal::optional_data_dtor_base.1572" }
%"class.absl::optional_internal::optional_data_dtor_base.1572" = type { i8, %union.anon.1573 }
%union.anon.1573 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.1649" = type { %"class.absl::optional_internal::optional_data.1650" }
%"class.absl::optional_internal::optional_data.1650" = type { %"class.absl::optional_internal::optional_data_base.1651" }
%"class.absl::optional_internal::optional_data_base.1651" = type { %"class.absl::optional_internal::optional_data_dtor_base.1652" }
%"class.absl::optional_internal::optional_data_dtor_base.1652" = type { i8, %union.anon.1653 }
%union.anon.1653 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.1569", i32, [4 x i8], %class.scoped_refptr.1095, i16, [6 x i8] }>
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1658", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.1658" = type { %"class.WTF::Vector.1661" }
%"class.WTF::Vector.1661" = type { %"class.WTF::VectorBuffer.1662" }
%"class.WTF::VectorBuffer.1662" = type { %"class.WTF::VectorBufferBase.1663" }
%"class.WTF::VectorBufferBase.1663" = type { %"class.blink::Member.1664"*, i32, i32 }
%"class.blink::Member.1664" = type opaque
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.12", i32, [4 x i8], %"class.blink::HeapHashSet.1668", %"class.blink::HeapHashSet.1676", %"class.std::__1::unique_ptr.1683", %"class.absl::optional.1716" }
%"class.blink::HeapHashSet.1668" = type { %"class.WTF::HashSet.1671" }
%"class.WTF::HashSet.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"class.blink::Member.1674"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.1578", %"class.absl::optional.1569", %"class.absl::optional.1569", %"class.absl::optional.1649", %"class.absl::optional.1569", i8, [3 x i8], i32, %"class.blink::Member.1758", %"class.blink::Member.1758", %"class.blink::Member.1760", %"class.blink::Member.12", %"class.blink::Member.1666", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1762", %"class.blink::Member.1762", %"class.blink::Member.1762", %"class.std::__1::unique_ptr.1764", i8, [3 x i8], i32, %"class.blink::Member.1770", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1749" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1737" }
%"class.blink::HeapVector.1737" = type { %"class.WTF::Vector.1740" }
%"class.WTF::Vector.1740" = type { %"class.WTF::VectorBuffer.1741" }
%"class.WTF::VectorBuffer.1741" = type { %"class.WTF::VectorBufferBase.1742", [32 x i8] }
%"class.WTF::VectorBufferBase.1742" = type { %"struct.std::__1::pair.1743"*, i32, i32 }
%"struct.std::__1::pair.1743" = type { %"class.WTF::AtomicString", %"class.blink::Member.1744" }
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::HeapVector.1746"* }
%"class.blink::HeapVector.1746" = type opaque
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"class.WTF::Vector.1752"* }
%"class.WTF::Vector.1752" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1756" }
%"class.blink::WeakMember.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1762" = type { %"class.blink::MemberBase.1763" }
%"class.blink::MemberBase.1763" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1764" = type { %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.1578", %"class.absl::optional.1578", double, i8, i32 }
%"class.blink::Member.1770" = type { %"class.blink::MemberBase.1771" }
%"class.blink::MemberBase.1771" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1774", %"class.std::__1::unique_ptr.1775", %"class.blink::Member.1674" }
%"class.blink::ThreadState::PrefinalizerRegistration.1774" = type { i8 }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.1676" = type { %"class.WTF::HashSet.1679" }
%"class.WTF::HashSet.1679" = type { %"class.WTF::HashTable.1680" }
%"class.WTF::HashTable.1680" = type <{ %"class.blink::WeakMember.1682"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1682" = type opaque
%"class.std::__1::unique_ptr.1683" = type { %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.1686 }
%class.scoped_refptr.1686 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.1687", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.1687" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.1688" }
%"class.std::__1::__hash_table.1688" = type <{ %"class.std::__1::unique_ptr.1689", %"class.std::__1::__compressed_pair.1699", %"class.std::__1::__compressed_pair.1704", %"class.std::__1::__compressed_pair.1708", [4 x i8] }>
%"class.std::__1::unique_ptr.1689" = type { %"class.std::__1::__compressed_pair.1690" }
%"class.std::__1::__compressed_pair.1690" = type { %"struct.std::__1::__compressed_pair_elem.1691", %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1691" = type { %"struct.std::__1::__hash_node_base.1692"** }
%"struct.std::__1::__hash_node_base.1692" = type { %"struct.std::__1::__hash_node_base.1692"* }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.std::__1::__bucket_list_deallocator.1694" }
%"class.std::__1::__bucket_list_deallocator.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::__compressed_pair.1699" = type { %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"struct.std::__1::__hash_node_base.1692" }
%"class.std::__1::__compressed_pair.1704" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.1716" = type { %"class.absl::optional_internal::optional_data.1717" }
%"class.absl::optional_internal::optional_data.1717" = type { %"class.absl::optional_internal::optional_data_base.1718" }
%"class.absl::optional_internal::optional_data_base.1718" = type { %"class.absl::optional_internal::optional_data_dtor_base.1719" }
%"class.absl::optional_internal::optional_data_dtor_base.1719" = type { i8, %union.anon.1720 }
%union.anon.1720 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.696" }
%"class.blink::HeapHashSet.1727" = type { %"class.WTF::HashSet.1730" }
%"class.WTF::HashSet.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ %"class.blink::Member.1733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1733" = type { %"class.blink::MemberBase.1734" }
%"class.blink::MemberBase.1734" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { i32*, i32, i32 }
%"class.blink::HeapVector.1781" = type { %"class.WTF::Vector.1784" }
%"class.WTF::Vector.1784" = type { %"class.WTF::VectorBuffer.1785" }
%"class.WTF::VectorBuffer.1785" = type { %"class.WTF::VectorBufferBase.1786" }
%"class.WTF::VectorBufferBase.1786" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.1674", %"class.blink::Member.1565", %"struct.blink::Timing", %"class.blink::Member.1654", i32, %"class.blink::Member.1666", %"class.WTF::Vector.1411" }
%"class.blink::HeapVector.1788" = type { %"class.WTF::Vector.1791" }
%"class.WTF::Vector.1791" = type { %"class.WTF::VectorBuffer.1792" }
%"class.WTF::VectorBuffer.1792" = type { %"class.WTF::VectorBufferBase.1793" }
%"class.WTF::VectorBufferBase.1793" = type { %"class.blink::Member.1674"*, i32, i32 }
%"class.blink::HeapHashMap.1795" = type { %"class.WTF::HashMap.1798" }
%"class.WTF::HashMap.1798" = type { %"class.WTF::HashTable.1799" }
%"class.WTF::HashTable.1799" = type <{ %"struct.WTF::KeyValuePair.1801"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1801" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1802" }
%"class.blink::Member.1802" = type { %"class.blink::MemberBase.1803" }
%"class.blink::MemberBase.1803" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.1107, %class.scoped_refptr.1107, %class.scoped_refptr.1107, double, %"class.blink::Member.1565" }
%"class.WTF::HashSet.1806" = type { %"class.WTF::HashTable.1807" }
%"class.WTF::HashTable.1807" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1810" = type { %"class.WTF::HashMap.1813" }
%"class.WTF::HashMap.1813" = type { %"class.WTF::HashTable.1814" }
%"class.WTF::HashTable.1814" = type <{ %"struct.WTF::KeyValuePair.1816"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1816" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1817" }
%"class.blink::Member.1817" = type { %"class.blink::MemberBase.1818" }
%"class.blink::MemberBase.1818" = type { %"class.blink::HeapVector.1819"* }
%"class.blink::HeapVector.1819" = type { %"class.WTF::Vector.1822" }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824", [8 x i8] }
%"class.WTF::VectorBufferBase.1824" = type { %"class.blink::Member.1644"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.1827", %"class.WTF::HashSet.1827", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.1827" = type { %"class.WTF::HashTable.1828" }
%"class.WTF::HashTable.1828" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::CSSValuePair" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member.811", %"class.blink::Member.811", i32, [4 x i8] }>
%"class.WTF::Vector.1848" = type { %"class.WTF::VectorBuffer.1849" }
%"class.WTF::VectorBuffer.1849" = type { %"class.WTF::VectorBufferBase.1850" }
%"class.WTF::VectorBufferBase.1850" = type { %class.scoped_refptr.1103*, i32, i32 }
%"class.WTF::Vector.1840" = type { %"class.WTF::VectorBuffer.1841" }
%"class.WTF::VectorBuffer.1841" = type { %"class.WTF::VectorBufferBase.1842" }
%"class.WTF::VectorBufferBase.1842" = type { %"class.std::__1::unique_ptr.1097"*, i32, i32 }
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector.1840" }
%"class.blink::NonInterpolableList" = type { %"class.blink::NonInterpolableValue.base", %"class.WTF::Vector.1848" }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1104" }>
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent.1870" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector.1866", %"class.std::__1::bitset" }
%"class.WTF::Vector.1866" = type { %"class.WTF::VectorBuffer.1867" }
%"class.WTF::VectorBuffer.1867" = type { %"class.WTF::VectorBufferBase.1388", [80 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent.1870" = type { %"class.blink::PersistentBase.1871" }
%"class.blink::PersistentBase.1871" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.1875" }
%"class.blink::HeapVector.1875" = type { %"class.WTF::Vector.1878" }
%"class.WTF::Vector.1878" = type { %"class.WTF::VectorBuffer.1879" }
%"class.WTF::VectorBuffer.1879" = type { %"class.WTF::VectorBufferBase.1880", [32 x i8] }
%"class.WTF::VectorBufferBase.1880" = type { %"class.blink::Member.811"*, i32, i32 }
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }

$_ZNSt3__111make_uniqueIN5blink31CSSAspectRatioInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink25CSSColorInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink25CSSPaintInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink23CSSRayInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink24CSSPathInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSShadowListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink25CSSImageInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink29CSSImageListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSFontWeightInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink31CSSFontStretchInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink41CSSFontVariationSettingsInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSVisibilityInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink24CSSClipInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink32CSSOffsetRotateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink36CSSPositionAxisListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink28CSSPositionInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSLengthPairInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink29CSSTranslateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink35CSSTransformOriginInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink28CSSSizeListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink40CSSBorderImageLengthBoxInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink25CSSScaleInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink28CSSFontSizeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSTextIndentInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSImageSliceInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSBasicShapeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink26CSSRotateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSFilterListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink29CSSTransformInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSCustomListInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationENS_10unique_ptrINS1_20CSSInterpolationTypeENS_14default_deleteIS9_EEEENS1_13CSSSyntaxTypeENS1_15CSSSyntaxRepeatEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink25CSSAngleInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink25CSSColorInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink32CSSCustomLengthInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSPercentageInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink30CSSResolutionInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink24CSSTimeInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6LookupINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EEPKSH_RKT0_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSLengthInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_31CSSAspectRatioInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSNumberInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSColorInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSPaintInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23CSSRayInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSPathInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSShadowListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSImageInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSImageListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSFontWeightInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_31CSSFontStretchInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_41CSSFontVariationSettingsInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSVisibilityInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSClipInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_32CSSOffsetRotateInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_36CSSPositionAxisListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink28CSSPositionInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUlmE_EENS_18InterpolationValueEjT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink19NonInterpolableListD2Ev = comdat any

$_ZN5blink19NonInterpolableListD0Ev = comdat any

$_ZNK5blink19NonInterpolableList7GetTypeEv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSPositionInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink30CSSLengthPairInterpolationTypeD0Ev = comdat any

$_ZNK5blink30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE = comdat any

$_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUlmE_EENS_18InterpolationValueEjT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSLengthPairInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSTranslateInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink35CSSTransformOriginInterpolationTypeD0Ev = comdat any

$_ZNK5blink35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE = comdat any

$_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUljE_EENS_18InterpolationValueEjT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_35CSSTransformOriginInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSSizeListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_40CSSBorderImageLengthBoxInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSScaleInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSFontSizeInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSTextIndentInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSImageSliceInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSBasicShapeInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSRotateInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSFilterListInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSTransformInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN5blink27CSSDefaultInterpolationTypeC2ENS_14PropertyHandleE = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27CSSDefaultInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6insertINS_17HashMapTranslatorISQ_SL_SC_EERKS2_NS5_ISD_NS9_ISD_EEEEEENS_18HashTableAddResultISR_SH_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink14PropertyHandleEEENS2_INSt3__110unique_ptrIKNS_6VectorINS7_IKNS3_17InterpolationTypeENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEENSB_ISG_EEEEEEEENS_11DefaultHashIS4_E4HashESE_E9TranslateINS_12KeyValuePairIS4_SI_EERKS4_NS7_ISF_NSB_ISF_EEEEEEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E8RehashToEPSH_jSS_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSJ_ISG_EEEELb0EE4MoveEOSH_RSH_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E16LookupForWritingINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EENS4_4pairIPSH_bEERKT0_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSVarCycleInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_20CSSInterpolationTypeENS6_ISC_EEEEEEvOT_ = comdat any

$_ZTVN5blink28CSSPositionInterpolationTypeE = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink19NonInterpolableListE = comdat any

$_ZTVN5blink30CSSLengthPairInterpolationTypeE = comdat any

$_ZTVN5blink35CSSTransformOriginInterpolationTypeE = comdat any

@_ZTVN5blink24CSSInterpolationTypesMapE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (%"class.WTF::Vector.775"* (%"class.blink::CSSInterpolationTypesMap"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleE to i8*), i8* bitcast (i64 (%"class.blink::CSSInterpolationTypesMap"*)* @_ZNK5blink24CSSInterpolationTypesMap7VersionEv to i8*)] }, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map = internal global i64 0, align 8
@_ZZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map = internal global i64 0, align 8
@_ZTVN5blink25CSSAngleInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink25CSSColorInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink32CSSCustomLengthInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSPercentageInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink26CSSNumberInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSResolutionInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink24CSSTimeInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [200 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>]\00", align 1
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [159 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >]\00", align 1
@_ZTVN5blink31CSSAspectRatioInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink25CSSPaintInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink23CSSRayInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink24CSSPathInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSShadowListInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink25CSSImageInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink29CSSImageListInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSFontWeightInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink31CSSFontStretchInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink41CSSFontVariationSettingsInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSVisibilityInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink24CSSClipInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink32CSSOffsetRotateInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink36CSSPositionAxisListInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink28CSSPositionInterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSPositionInterpolationType"*)* @_ZN5blink28CSSPositionInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink30CSSLengthListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSPositionInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.1106"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink30CSSLengthListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink30CSSLengthListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, comdat, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NonInterpolableValue>]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZTVN5blink19NonInterpolableListE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD2Ev to i8*), i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD0Ev to i8*), i8* bitcast (i8* (%"class.blink::NonInterpolableList"*)* @_ZNK5blink19NonInterpolableList7GetTypeEv to i8*)] }, comdat, align 8
@_ZN5blink19NonInterpolableList12static_type_E = external local_unnamed_addr global i8*, align 8
@_ZTVN5blink30CSSLengthPairInterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSLengthPairInterpolationType"*)* @_ZN5blink30CSSLengthPairInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink30CSSLengthListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthPairInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.1106"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink30CSSLengthListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink30CSSLengthListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, comdat, align 8
@_ZTVN5blink29CSSTranslateInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink35CSSTransformOriginInterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSTransformOriginInterpolationType"*)* @_ZN5blink35CSSTransformOriginInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink30CSSLengthListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSTransformOriginInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*)* @_ZNK5blink35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.1106"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink30CSSLengthListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink30CSSLengthListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, comdat, align 8
@_ZTVN5blink28CSSSizeListInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink40CSSBorderImageLengthBoxInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink25CSSScaleInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink28CSSFontSizeInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSTextIndentInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSImageSliceInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSBasicShapeInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink26CSSRotateInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink30CSSFilterListInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink29CSSTransformInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZTVN5blink27CSSDefaultInterpolationTypeE = external unnamed_addr constant { [10 x i8*] }, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEEEEPKcv = private unnamed_addr constant [459 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::PropertyHandle, std::__1::unique_ptr<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator>, std::__1::default_delete<const WTF::Vector<std::__1::unique_ptr<const blink::InterpolationType, std::__1::default_delete<const blink::InterpolationType> >, 0, WTF::PartitionAllocator> > > >]\00", align 1
@_ZTVN5blink30CSSCustomListInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8

@_ZN5blink24CSSInterpolationTypesMapC1EPKNS_16PropertyRegistryERKNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::CSSInterpolationTypesMap"*, %"class.blink::PropertyRegistry"*, %"class.blink::Document"*), void (%"class.blink::CSSInterpolationTypesMap"*, %"class.blink::PropertyRegistry"*, %"class.blink::Document"*)* @_ZN5blink24CSSInterpolationTypesMapC2EPKNS_16PropertyRegistryERKNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CSSInterpolationTypesMapC2EPKNS_16PropertyRegistryERKNS_8DocumentE(%"class.blink::CSSInterpolationTypesMap"* nocapture, %"class.blink::PropertyRegistry"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink24CSSInterpolationTypesMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %0, i64 0, i32 1
  store %"class.blink::PropertyRegistry"* %1, %"class.blink::PropertyRegistry"** %5, align 8
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %2) #11
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %8 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* %6, i32 8, i32 1, %"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %7) #11
  %9 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %0, i64 0, i32 2
  %10 = zext i1 %8 to i8
  store i8 %10, i8* %9, align 8
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.WTF::Vector.775"* @_ZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleE(%"class.blink::CSSInterpolationTypesMap"* nocapture readonly, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca %"class.std::__1::unique_ptr.825", align 8
  %8 = alloca %"class.blink::PropertyHandle", align 8
  %9 = alloca %"class.std::__1::unique_ptr.835", align 8
  %10 = alloca %"class.std::__1::unique_ptr.843", align 8
  %11 = alloca %"class.std::__1::unique_ptr.849", align 8
  %12 = alloca %"class.std::__1::unique_ptr.835", align 8
  %13 = alloca %"class.std::__1::unique_ptr.849", align 8
  %14 = alloca %"class.std::__1::unique_ptr.855", align 8
  %15 = alloca %"class.std::__1::unique_ptr.861", align 8
  %16 = alloca %"class.std::__1::unique_ptr.867", align 8
  %17 = alloca %"class.std::__1::unique_ptr.873", align 8
  %18 = alloca %"class.std::__1::unique_ptr.879", align 8
  %19 = alloca %"class.std::__1::unique_ptr.885", align 8
  %20 = alloca %"class.std::__1::unique_ptr.891", align 8
  %21 = alloca %"class.std::__1::unique_ptr.897", align 8
  %22 = alloca %"class.std::__1::unique_ptr.903", align 8
  %23 = alloca %"class.std::__1::unique_ptr.909", align 8
  %24 = alloca %"class.std::__1::unique_ptr.915", align 8
  %25 = alloca %"class.std::__1::unique_ptr.921", align 8
  %26 = alloca %"class.std::__1::unique_ptr.927", align 8
  %27 = alloca %"class.std::__1::unique_ptr.933", align 8
  %28 = alloca %"class.std::__1::unique_ptr.939", align 8
  %29 = alloca %"class.std::__1::unique_ptr.945", align 8
  %30 = alloca %"class.std::__1::unique_ptr.951", align 8
  %31 = alloca %"class.std::__1::unique_ptr.957", align 8
  %32 = alloca %"class.std::__1::unique_ptr.963", align 8
  %33 = alloca %"class.std::__1::unique_ptr.969", align 8
  %34 = alloca %"class.std::__1::unique_ptr.975", align 8
  %35 = alloca %"class.std::__1::unique_ptr.981", align 8
  %36 = alloca %"class.std::__1::unique_ptr.987", align 8
  %37 = alloca %"class.std::__1::unique_ptr.993", align 8
  %38 = alloca %"class.std::__1::unique_ptr.999", align 8
  %39 = alloca %"class.std::__1::unique_ptr.1005", align 8
  %40 = alloca %"class.std::__1::unique_ptr.873", align 8
  %41 = alloca %"class.std::__1::unique_ptr.1005", align 8
  %42 = alloca %"class.std::__1::unique_ptr.1011", align 8
  %43 = alloca %"class.std::__1::unique_ptr.1017", align 8
  %44 = alloca %"class.std::__1::unique_ptr.1023", align 8
  %45 = alloca %"class.std::__1::unique_ptr.1029", align 8
  %46 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map to i8*) acquire, align 8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52, !prof !2

48:                                               ; preds = %2
  %49 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map) #11
  br label %52

52:                                               ; preds = %48, %51, %2
  %53 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map to i8*) acquire, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59, !prof !2

55:                                               ; preds = %52
  %56 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map) #11
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map) #11
  br label %59

59:                                               ; preds = %55, %58, %52
  %60 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %0, i64 0, i32 1
  %61 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %60, align 8
  %62 = icmp eq %"class.blink::PropertyRegistry"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 3
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2
  %69 = tail call %"class.blink::PropertyRegistration"* @_ZNK5blink16PropertyRegistry12RegistrationERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"* nonnull %61, %"class.WTF::AtomicString"* dereferenceable(8) %68) #11
  %70 = icmp eq %"class.blink::PropertyRegistration"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::PropertyRegistration", %"class.blink::PropertyRegistration"* %69, i64 0, i32 5
  br label %1430

73:                                               ; preds = %67, %59, %63
  %74 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %0, i64 0, i32 2
  %75 = load i8, i8* %74, align 8, !range !3
  %76 = icmp eq i8 %75, 0
  %77 = select i1 %76, %"class.WTF::HashMap.789"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE33s_composited_applicable_types_map to %"class.WTF::HashMap.789"*), %"class.WTF::HashMap.789"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink24CSSInterpolationTypesMap3GetERKNS_14PropertyHandleEE26s_all_applicable_types_map to %"class.WTF::HashMap.789"*)
  %78 = getelementptr inbounds %"class.WTF::HashMap.789", %"class.WTF::HashMap.789"* %77, i64 0, i32 0
  %79 = tail call %"struct.WTF::KeyValuePair.793"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6LookupINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EEPKSH_RKT0_(%"class.WTF::HashTable.790"* %78, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  %80 = icmp eq %"struct.WTF::KeyValuePair.793"* %79, null
  %81 = getelementptr inbounds %"class.WTF::HashMap.789", %"class.WTF::HashMap.789"* %77, i64 0, i32 0, i32 0
  %82 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %81, align 8
  %83 = getelementptr inbounds %"class.WTF::HashMap.789", %"class.WTF::HashMap.789"* %77, i64 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %82, i64 %85
  %87 = select i1 %80, %"struct.WTF::KeyValuePair.793"* %86, %"struct.WTF::KeyValuePair.793"* %79
  %88 = icmp eq %"struct.WTF::KeyValuePair.793"* %87, %86
  br i1 %88, label %92, label %89

89:                                               ; preds = %73
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %87, i64 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %90, align 8
  br label %1430

92:                                               ; preds = %73
  %93 = bitcast %"class.std::__1::unique_ptr.825"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.825"* %7, i64 0, i32 0, i32 0, i32 0
  %95 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([200 x i8], [200 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 16, i1 false) #11
  %96 = bitcast %"class.std::__1::unique_ptr.825"* %7 to i8**
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = or i32 %98, 1
  %100 = icmp eq i32 %99, 3
  %101 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 1, i32 0
  %102 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %101, align 8
  %103 = bitcast %"class.blink::PropertyHandle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 24, i1 false)
  br i1 %100, label %104, label %127

104:                                              ; preds = %92
  %105 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %105, i64 16, i1 false) #11
  %106 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %108, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %109, label %131, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %131

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #11
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !4

124:                                              ; preds = %115
  tail call void @llvm.trap() #11
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %131

127:                                              ; preds = %92
  %128 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 0
  store i32 2, i32* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 1, i32 0
  store %"class.blink::CSSProperty"* %102, %"class.blink::CSSProperty"** %129, align 8
  %130 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %130, align 8
  br label %131

131:                                              ; preds = %125, %110, %104, %127
  %132 = tail call dereferenceable(24) %"class.WTF::HashSet.831"* @_ZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEv() #11
  %133 = ptrtoint %"class.blink::CSSProperty"* %102 to i64
  %134 = getelementptr inbounds %"class.WTF::HashSet.831", %"class.WTF::HashSet.831"* %132, i64 0, i32 0, i32 0
  %135 = load %"class.blink::CSSProperty"**, %"class.blink::CSSProperty"*** %134, align 8
  %136 = icmp eq %"class.blink::CSSProperty"** %135, null
  br i1 %136, label %201, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.WTF::HashSet.831", %"class.WTF::HashSet.831"* %132, i64 0, i32 0, i32 1
  %139 = load i32, i32* %138, align 8
  %140 = add i32 %139, -1
  %141 = zext i32 %140 to i64
  %142 = shl i64 %133, 32
  %143 = xor i64 %142, -1
  %144 = add i64 %143, %133
  %145 = lshr i64 %144, 22
  %146 = xor i64 %145, %144
  %147 = shl i64 %146, 13
  %148 = xor i64 %147, -1
  %149 = add i64 %146, %148
  %150 = lshr i64 %149, 8
  %151 = xor i64 %150, %149
  %152 = mul i64 %151, 9
  %153 = lshr i64 %152, 15
  %154 = xor i64 %153, %152
  %155 = shl i64 %154, 27
  %156 = xor i64 %155, -1
  %157 = add i64 %154, %156
  %158 = lshr i64 %157, 31
  %159 = xor i64 %158, %157
  %160 = trunc i64 %159 to i32
  %161 = and i32 %140, %160
  %162 = zext i32 %161 to i64
  %163 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %135, i64 %162
  %164 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %163, align 8
  %165 = icmp eq %"class.blink::CSSProperty"* %164, %102
  br i1 %165, label %195, label %166

166:                                              ; preds = %137
  %167 = xor i32 %160, -1
  %168 = lshr i32 %160, 23
  %169 = add i32 %168, %167
  %170 = shl i32 %169, 12
  %171 = xor i32 %170, %169
  %172 = lshr i32 %171, 7
  %173 = xor i32 %172, %171
  %174 = shl i32 %173, 2
  %175 = xor i32 %174, %173
  %176 = lshr i32 %175, 20
  %177 = xor i32 %176, %175
  %178 = or i32 %177, 1
  %179 = zext i32 %178 to i64
  br label %180

180:                                              ; preds = %185, %166
  %181 = phi %"class.blink::CSSProperty"* [ %164, %166 ], [ %191, %185 ]
  %182 = phi i64 [ %162, %166 ], [ %189, %185 ]
  %183 = phi i64 [ 0, %166 ], [ %187, %185 ]
  %184 = icmp eq %"class.blink::CSSProperty"* %181, null
  br i1 %184, label %201, label %185

185:                                              ; preds = %180
  %186 = icmp eq i64 %183, 0
  %187 = select i1 %186, i64 %179, i64 %183
  %188 = add i64 %187, %182
  %189 = and i64 %188, %141
  %190 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %135, i64 %189
  %191 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %190, align 8
  %192 = icmp eq %"class.blink::CSSProperty"* %191, %102
  br i1 %192, label %193, label %180

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %135, i64 %189
  br label %195

195:                                              ; preds = %193, %137
  %196 = phi %"class.blink::CSSProperty"** [ %163, %137 ], [ %194, %193 ]
  %197 = icmp eq %"class.blink::CSSProperty"** %196, null
  %198 = load i8, i8* %74, align 8, !range !3
  %199 = icmp ne i8 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %201, label %1321

201:                                              ; preds = %180, %131, %195
  %202 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %102, i64 0, i32 1
  %203 = load i32, i32* %202, align 8
  switch i32 %203, label %1321 [
    i32 60, label %204
    i32 72, label %204
    i32 89, label %204
    i32 92, label %204
    i32 99, label %204
    i32 100, label %204
    i32 133, label %204
    i32 134, label %204
    i32 146, label %204
    i32 165, label %204
    i32 206, label %204
    i32 207, label %204
    i32 218, label %204
    i32 221, label %204
    i32 222, label %204
    i32 223, label %204
    i32 233, label %204
    i32 235, label %204
    i32 238, label %204
    i32 240, label %204
    i32 247, label %204
    i32 257, label %204
    i32 259, label %204
    i32 274, label %204
    i32 277, label %204
    i32 278, label %204
    i32 279, label %204
    i32 283, label %204
    i32 289, label %204
    i32 292, label %204
    i32 296, label %204
    i32 297, label %204
    i32 323, label %204
    i32 337, label %204
    i32 342, label %204
    i32 357, label %204
    i32 364, label %204
    i32 367, label %204
    i32 383, label %204
    i32 387, label %204
    i32 389, label %204
    i32 119, label %204
    i32 294, label %204
    i32 122, label %204
    i32 124, label %204
    i32 416, label %204
    i32 417, label %204
    i32 431, label %204
    i32 432, label %204
    i32 433, label %204
    i32 438, label %204
    i32 441, label %204
    i32 442, label %204
    i32 443, label %204
    i32 46, label %258
    i32 148, label %287
    i32 149, label %287
    i32 143, label %287
    i32 153, label %287
    i32 9, label %287
    i32 251, label %287
    i32 252, label %287
    i32 255, label %287
    i32 322, label %287
    i32 334, label %287
    i32 340, label %287
    i32 341, label %287
    i32 117, label %287
    i32 362, label %287
    i32 437, label %287
    i32 444, label %287
    i32 211, label %316
    i32 347, label %316
    i32 28, label %398
    i32 52, label %398
    i32 68, label %398
    i32 87, label %398
    i32 90, label %398
    i32 95, label %398
    i32 108, label %398
    i32 2, label %398
    i32 152, label %398
    i32 208, label %398
    i32 256, label %398
    i32 333, label %398
    i32 353, label %398
    i32 120, label %398
    i32 429, label %398
    i32 142, label %427
    i32 335, label %427
    i32 248, label %456
    i32 135, label %485
    i32 101, label %514
    i32 361, label %514
    i32 79, label %543
    i32 213, label %543
    i32 405, label %543
    i32 53, label %572
    i32 409, label %572
    i32 336, label %601
    i32 17, label %655
    i32 10, label %684
    i32 16, label %713
    i32 385, label %742
    i32 110, label %771
    i32 250, label %800
    i32 55, label %829
    i32 56, label %829
    i32 411, label %829
    i32 412, label %829
    i32 245, label %858
    i32 246, label %858
    i32 249, label %858
    i32 284, label %858
    i32 69, label %887
    i32 70, label %887
    i32 96, label %887
    i32 97, label %887
    i32 126, label %887
    i32 377, label %916
    i32 371, label %945
    i32 59, label %974
    i32 415, label %974
    i32 76, label %1003
    i32 80, label %1003
    i32 402, label %1003
    i32 406, label %1003
    i32 298, label %1032
    i32 8, label %1061
    i32 358, label %1090
    i32 78, label %1119
    i32 404, label %1119
    i32 111, label %1148
    i32 324, label %1205
    i32 293, label %1234
    i32 47, label %1263
    i32 145, label %1263
    i32 369, label %1292
  ]

204:                                              ; preds = %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201
  %205 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.835"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #11
  %207 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207)
  %208 = tail call noalias i8* @malloc(i64 56) #11
  %209 = bitcast i8* %208 to %"class.blink::CSSLengthInterpolationType"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %207, i8* nonnull align 8 %103, i64 16, i1 false) #11
  %210 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %212, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %213, label %231, label %214

214:                                              ; preds = %204
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = zext i32 %221 to i33
  %223 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %222, i33 1) #11
  %224 = extractvalue { i33, i1 } %223, 1
  %225 = extractvalue { i33, i1 } %223, 0
  %226 = icmp slt i33 %225, 0
  %227 = or i1 %224, %226
  br i1 %227, label %228, label %229, !prof !4

228:                                              ; preds = %219
  tail call void @llvm.trap() #11
  unreachable

229:                                              ; preds = %219
  %230 = trunc i33 %225 to i32
  store i32 %230, i32* %220, align 4
  br label %231

231:                                              ; preds = %204, %214, %229
  tail call void @_ZN5blink26CSSLengthInterpolationTypeC1ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSLengthInterpolationType"* %209, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %5, %"class.blink::PropertyRegistration"* null) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207)
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr.835", %"class.std::__1::unique_ptr.835"* %9, i64 0, i32 0, i32 0, i32 0
  %233 = bitcast %"class.std::__1::unique_ptr.835"* %9 to i8**
  store i8* %208, i8** %233, align 8
  %234 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %205, i64 0, i32 0, i32 0, i32 2
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %205, i64 0, i32 0, i32 0, i32 1
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %235, %237
  br i1 %238, label %248, label %239, !prof !4

239:                                              ; preds = %231
  %240 = ptrtoint i8* %208 to i64
  %241 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %205, i64 0, i32 0, i32 0, i32 0
  %242 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %241, align 8
  %243 = zext i32 %235 to i64
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %242, i64 %243
  store %"class.blink::CSSLengthInterpolationType"* null, %"class.blink::CSSLengthInterpolationType"** %232, align 8
  %245 = bitcast %"class.std::__1::unique_ptr.778"* %244 to i64*
  store i64 %240, i64* %245, align 8
  %246 = load i32, i32* %234, align 4
  %247 = add i32 %246, 1
  store i32 %247, i32* %234, align 4
  br label %249

248:                                              ; preds = %231
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSLengthInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %205, %"class.std::__1::unique_ptr.835"* nonnull dereferenceable(8) %9) #11
  br label %249

249:                                              ; preds = %239, %248
  %250 = load %"class.blink::CSSLengthInterpolationType"*, %"class.blink::CSSLengthInterpolationType"** %232, align 8
  store %"class.blink::CSSLengthInterpolationType"* null, %"class.blink::CSSLengthInterpolationType"** %232, align 8
  %251 = icmp eq %"class.blink::CSSLengthInterpolationType"* %250, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %249
  %253 = bitcast %"class.blink::CSSLengthInterpolationType"* %250 to void (%"class.blink::CSSLengthInterpolationType"*)***
  %254 = load void (%"class.blink::CSSLengthInterpolationType"*)**, void (%"class.blink::CSSLengthInterpolationType"*)*** %253, align 8
  %255 = getelementptr inbounds void (%"class.blink::CSSLengthInterpolationType"*)*, void (%"class.blink::CSSLengthInterpolationType"*)** %254, i64 1
  %256 = load void (%"class.blink::CSSLengthInterpolationType"*)*, void (%"class.blink::CSSLengthInterpolationType"*)** %255, align 8
  call void %256(%"class.blink::CSSLengthInterpolationType"* nonnull %250) #11
  br label %257

257:                                              ; preds = %249, %252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #11
  br label %1321

258:                                              ; preds = %201
  %259 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %260 = bitcast %"class.std::__1::unique_ptr.843"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #11
  %261 = call %"class.blink::CSSAspectRatioInterpolationType"* @_ZNSt3__111make_uniqueIN5blink31CSSAspectRatioInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr.843", %"class.std::__1::unique_ptr.843"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSAspectRatioInterpolationType"* %261, %"class.blink::CSSAspectRatioInterpolationType"** %262, align 8
  %263 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %259, i64 0, i32 0, i32 0, i32 2
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %259, i64 0, i32 0, i32 0, i32 1
  %266 = load i32, i32* %265, align 8
  %267 = icmp eq i32 %264, %266
  br i1 %267, label %277, label %268, !prof !4

268:                                              ; preds = %258
  %269 = ptrtoint %"class.blink::CSSAspectRatioInterpolationType"* %261 to i64
  %270 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %259, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %270, align 8
  %272 = zext i32 %264 to i64
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %271, i64 %272
  store %"class.blink::CSSAspectRatioInterpolationType"* null, %"class.blink::CSSAspectRatioInterpolationType"** %262, align 8
  %274 = bitcast %"class.std::__1::unique_ptr.778"* %273 to i64*
  store i64 %269, i64* %274, align 8
  %275 = load i32, i32* %263, align 4
  %276 = add i32 %275, 1
  store i32 %276, i32* %263, align 4
  br label %278

277:                                              ; preds = %258
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_31CSSAspectRatioInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %259, %"class.std::__1::unique_ptr.843"* nonnull dereferenceable(8) %10) #11
  br label %278

278:                                              ; preds = %268, %277
  %279 = load %"class.blink::CSSAspectRatioInterpolationType"*, %"class.blink::CSSAspectRatioInterpolationType"** %262, align 8
  store %"class.blink::CSSAspectRatioInterpolationType"* null, %"class.blink::CSSAspectRatioInterpolationType"** %262, align 8
  %280 = icmp eq %"class.blink::CSSAspectRatioInterpolationType"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %278
  %282 = bitcast %"class.blink::CSSAspectRatioInterpolationType"* %279 to void (%"class.blink::CSSAspectRatioInterpolationType"*)***
  %283 = load void (%"class.blink::CSSAspectRatioInterpolationType"*)**, void (%"class.blink::CSSAspectRatioInterpolationType"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.blink::CSSAspectRatioInterpolationType"*)*, void (%"class.blink::CSSAspectRatioInterpolationType"*)** %283, i64 1
  %285 = load void (%"class.blink::CSSAspectRatioInterpolationType"*)*, void (%"class.blink::CSSAspectRatioInterpolationType"*)** %284, align 8
  call void %285(%"class.blink::CSSAspectRatioInterpolationType"* nonnull %279) #11
  br label %286

286:                                              ; preds = %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #11
  br label %1321

287:                                              ; preds = %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201
  %288 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %289 = bitcast %"class.std::__1::unique_ptr.849"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %289) #11
  %290 = call %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %291 = getelementptr inbounds %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.849"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSNumberInterpolationType"* %290, %"class.blink::CSSNumberInterpolationType"** %291, align 8
  %292 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %288, i64 0, i32 0, i32 0, i32 2
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %288, i64 0, i32 0, i32 0, i32 1
  %295 = load i32, i32* %294, align 8
  %296 = icmp eq i32 %293, %295
  br i1 %296, label %306, label %297, !prof !4

297:                                              ; preds = %287
  %298 = ptrtoint %"class.blink::CSSNumberInterpolationType"* %290 to i64
  %299 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %288, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %299, align 8
  %301 = zext i32 %293 to i64
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %300, i64 %301
  store %"class.blink::CSSNumberInterpolationType"* null, %"class.blink::CSSNumberInterpolationType"** %291, align 8
  %303 = bitcast %"class.std::__1::unique_ptr.778"* %302 to i64*
  store i64 %298, i64* %303, align 8
  %304 = load i32, i32* %292, align 4
  %305 = add i32 %304, 1
  store i32 %305, i32* %292, align 4
  br label %307

306:                                              ; preds = %287
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %288, %"class.std::__1::unique_ptr.849"* nonnull dereferenceable(8) %11) #11
  br label %307

307:                                              ; preds = %297, %306
  %308 = load %"class.blink::CSSNumberInterpolationType"*, %"class.blink::CSSNumberInterpolationType"** %291, align 8
  store %"class.blink::CSSNumberInterpolationType"* null, %"class.blink::CSSNumberInterpolationType"** %291, align 8
  %309 = icmp eq %"class.blink::CSSNumberInterpolationType"* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %307
  %311 = bitcast %"class.blink::CSSNumberInterpolationType"* %308 to void (%"class.blink::CSSNumberInterpolationType"*)***
  %312 = load void (%"class.blink::CSSNumberInterpolationType"*)**, void (%"class.blink::CSSNumberInterpolationType"*)*** %311, align 8
  %313 = getelementptr inbounds void (%"class.blink::CSSNumberInterpolationType"*)*, void (%"class.blink::CSSNumberInterpolationType"*)** %312, i64 1
  %314 = load void (%"class.blink::CSSNumberInterpolationType"*)*, void (%"class.blink::CSSNumberInterpolationType"*)** %313, align 8
  call void %314(%"class.blink::CSSNumberInterpolationType"* nonnull %308) #11
  br label %315

315:                                              ; preds = %307, %310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %289) #11
  br label %1321

316:                                              ; preds = %201, %201
  %317 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %318 = bitcast %"class.std::__1::unique_ptr.835"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %318) #11
  %319 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319)
  %320 = tail call noalias i8* @malloc(i64 56) #11
  %321 = bitcast i8* %320 to %"class.blink::CSSLengthInterpolationType"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %319, i8* nonnull align 8 %103, i64 16, i1 false) #11
  %322 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %323, %"class.WTF::StringImpl"** %324, align 8
  %325 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %325, label %343, label %326

326:                                              ; preds = %316
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = load atomic i32, i32* %327 monotonic, align 4
  %329 = and i32 %328, 2
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %343

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = zext i32 %333 to i33
  %335 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %334, i33 1) #11
  %336 = extractvalue { i33, i1 } %335, 1
  %337 = extractvalue { i33, i1 } %335, 0
  %338 = icmp slt i33 %337, 0
  %339 = or i1 %336, %338
  br i1 %339, label %340, label %341, !prof !4

340:                                              ; preds = %331
  tail call void @llvm.trap() #11
  unreachable

341:                                              ; preds = %331
  %342 = trunc i33 %337 to i32
  store i32 %342, i32* %332, align 4
  br label %343

343:                                              ; preds = %316, %326, %341
  tail call void @_ZN5blink26CSSLengthInterpolationTypeC1ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSLengthInterpolationType"* %321, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %4, %"class.blink::PropertyRegistration"* null) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319)
  %344 = getelementptr inbounds %"class.std::__1::unique_ptr.835", %"class.std::__1::unique_ptr.835"* %12, i64 0, i32 0, i32 0, i32 0
  %345 = bitcast %"class.std::__1::unique_ptr.835"* %12 to i8**
  store i8* %320, i8** %345, align 8
  %346 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %317, i64 0, i32 0, i32 0, i32 2
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %317, i64 0, i32 0, i32 0, i32 1
  %349 = load i32, i32* %348, align 8
  %350 = icmp eq i32 %347, %349
  br i1 %350, label %360, label %351, !prof !4

351:                                              ; preds = %343
  %352 = ptrtoint i8* %320 to i64
  %353 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %317, i64 0, i32 0, i32 0, i32 0
  %354 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %353, align 8
  %355 = zext i32 %347 to i64
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %354, i64 %355
  store %"class.blink::CSSLengthInterpolationType"* null, %"class.blink::CSSLengthInterpolationType"** %344, align 8
  %357 = bitcast %"class.std::__1::unique_ptr.778"* %356 to i64*
  store i64 %352, i64* %357, align 8
  %358 = load i32, i32* %346, align 4
  %359 = add i32 %358, 1
  store i32 %359, i32* %346, align 4
  br label %361

360:                                              ; preds = %343
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSLengthInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %317, %"class.std::__1::unique_ptr.835"* nonnull dereferenceable(8) %12) #11
  br label %361

361:                                              ; preds = %351, %360
  %362 = load %"class.blink::CSSLengthInterpolationType"*, %"class.blink::CSSLengthInterpolationType"** %344, align 8
  store %"class.blink::CSSLengthInterpolationType"* null, %"class.blink::CSSLengthInterpolationType"** %344, align 8
  %363 = icmp eq %"class.blink::CSSLengthInterpolationType"* %362, null
  br i1 %363, label %369, label %364

364:                                              ; preds = %361
  %365 = bitcast %"class.blink::CSSLengthInterpolationType"* %362 to void (%"class.blink::CSSLengthInterpolationType"*)***
  %366 = load void (%"class.blink::CSSLengthInterpolationType"*)**, void (%"class.blink::CSSLengthInterpolationType"*)*** %365, align 8
  %367 = getelementptr inbounds void (%"class.blink::CSSLengthInterpolationType"*)*, void (%"class.blink::CSSLengthInterpolationType"*)** %366, i64 1
  %368 = load void (%"class.blink::CSSLengthInterpolationType"*)*, void (%"class.blink::CSSLengthInterpolationType"*)** %367, align 8
  call void %368(%"class.blink::CSSLengthInterpolationType"* nonnull %362) #11
  br label %369

369:                                              ; preds = %361, %364
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %318) #11
  %370 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %371 = bitcast %"class.std::__1::unique_ptr.849"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %371) #11
  %372 = call %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %373 = getelementptr inbounds %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.849"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSNumberInterpolationType"* %372, %"class.blink::CSSNumberInterpolationType"** %373, align 8
  %374 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %370, i64 0, i32 0, i32 0, i32 2
  %375 = load i32, i32* %374, align 4
  %376 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %370, i64 0, i32 0, i32 0, i32 1
  %377 = load i32, i32* %376, align 8
  %378 = icmp eq i32 %375, %377
  br i1 %378, label %388, label %379, !prof !4

379:                                              ; preds = %369
  %380 = ptrtoint %"class.blink::CSSNumberInterpolationType"* %372 to i64
  %381 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %370, i64 0, i32 0, i32 0, i32 0
  %382 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %381, align 8
  %383 = zext i32 %375 to i64
  %384 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %382, i64 %383
  store %"class.blink::CSSNumberInterpolationType"* null, %"class.blink::CSSNumberInterpolationType"** %373, align 8
  %385 = bitcast %"class.std::__1::unique_ptr.778"* %384 to i64*
  store i64 %380, i64* %385, align 8
  %386 = load i32, i32* %374, align 4
  %387 = add i32 %386, 1
  store i32 %387, i32* %374, align 4
  br label %389

388:                                              ; preds = %369
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %370, %"class.std::__1::unique_ptr.849"* nonnull dereferenceable(8) %13) #11
  br label %389

389:                                              ; preds = %379, %388
  %390 = load %"class.blink::CSSNumberInterpolationType"*, %"class.blink::CSSNumberInterpolationType"** %373, align 8
  store %"class.blink::CSSNumberInterpolationType"* null, %"class.blink::CSSNumberInterpolationType"** %373, align 8
  %391 = icmp eq %"class.blink::CSSNumberInterpolationType"* %390, null
  br i1 %391, label %397, label %392

392:                                              ; preds = %389
  %393 = bitcast %"class.blink::CSSNumberInterpolationType"* %390 to void (%"class.blink::CSSNumberInterpolationType"*)***
  %394 = load void (%"class.blink::CSSNumberInterpolationType"*)**, void (%"class.blink::CSSNumberInterpolationType"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.blink::CSSNumberInterpolationType"*)*, void (%"class.blink::CSSNumberInterpolationType"*)** %394, i64 1
  %396 = load void (%"class.blink::CSSNumberInterpolationType"*)*, void (%"class.blink::CSSNumberInterpolationType"*)** %395, align 8
  call void %396(%"class.blink::CSSNumberInterpolationType"* nonnull %390) #11
  br label %397

397:                                              ; preds = %389, %392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #11
  br label %1321

398:                                              ; preds = %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201
  %399 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %400 = bitcast %"class.std::__1::unique_ptr.855"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %400) #11
  %401 = call %"class.blink::CSSColorInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSColorInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %402 = getelementptr inbounds %"class.std::__1::unique_ptr.855", %"class.std::__1::unique_ptr.855"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSColorInterpolationType"* %401, %"class.blink::CSSColorInterpolationType"** %402, align 8
  %403 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %399, i64 0, i32 0, i32 0, i32 2
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %399, i64 0, i32 0, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %404, %406
  br i1 %407, label %417, label %408, !prof !4

408:                                              ; preds = %398
  %409 = ptrtoint %"class.blink::CSSColorInterpolationType"* %401 to i64
  %410 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %399, i64 0, i32 0, i32 0, i32 0
  %411 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %410, align 8
  %412 = zext i32 %404 to i64
  %413 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %411, i64 %412
  store %"class.blink::CSSColorInterpolationType"* null, %"class.blink::CSSColorInterpolationType"** %402, align 8
  %414 = bitcast %"class.std::__1::unique_ptr.778"* %413 to i64*
  store i64 %409, i64* %414, align 8
  %415 = load i32, i32* %403, align 4
  %416 = add i32 %415, 1
  store i32 %416, i32* %403, align 4
  br label %418

417:                                              ; preds = %398
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSColorInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %399, %"class.std::__1::unique_ptr.855"* nonnull dereferenceable(8) %14) #11
  br label %418

418:                                              ; preds = %408, %417
  %419 = load %"class.blink::CSSColorInterpolationType"*, %"class.blink::CSSColorInterpolationType"** %402, align 8
  store %"class.blink::CSSColorInterpolationType"* null, %"class.blink::CSSColorInterpolationType"** %402, align 8
  %420 = icmp eq %"class.blink::CSSColorInterpolationType"* %419, null
  br i1 %420, label %426, label %421

421:                                              ; preds = %418
  %422 = bitcast %"class.blink::CSSColorInterpolationType"* %419 to void (%"class.blink::CSSColorInterpolationType"*)***
  %423 = load void (%"class.blink::CSSColorInterpolationType"*)**, void (%"class.blink::CSSColorInterpolationType"*)*** %422, align 8
  %424 = getelementptr inbounds void (%"class.blink::CSSColorInterpolationType"*)*, void (%"class.blink::CSSColorInterpolationType"*)** %423, i64 1
  %425 = load void (%"class.blink::CSSColorInterpolationType"*)*, void (%"class.blink::CSSColorInterpolationType"*)** %424, align 8
  call void %425(%"class.blink::CSSColorInterpolationType"* nonnull %419) #11
  br label %426

426:                                              ; preds = %418, %421
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %400) #11
  br label %1321

427:                                              ; preds = %201, %201
  %428 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %429 = bitcast %"class.std::__1::unique_ptr.861"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %429) #11
  %430 = call %"class.blink::CSSPaintInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSPaintInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %431 = getelementptr inbounds %"class.std::__1::unique_ptr.861", %"class.std::__1::unique_ptr.861"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSPaintInterpolationType"* %430, %"class.blink::CSSPaintInterpolationType"** %431, align 8
  %432 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %428, i64 0, i32 0, i32 0, i32 2
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %428, i64 0, i32 0, i32 0, i32 1
  %435 = load i32, i32* %434, align 8
  %436 = icmp eq i32 %433, %435
  br i1 %436, label %446, label %437, !prof !4

437:                                              ; preds = %427
  %438 = ptrtoint %"class.blink::CSSPaintInterpolationType"* %430 to i64
  %439 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %428, i64 0, i32 0, i32 0, i32 0
  %440 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %439, align 8
  %441 = zext i32 %433 to i64
  %442 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %440, i64 %441
  store %"class.blink::CSSPaintInterpolationType"* null, %"class.blink::CSSPaintInterpolationType"** %431, align 8
  %443 = bitcast %"class.std::__1::unique_ptr.778"* %442 to i64*
  store i64 %438, i64* %443, align 8
  %444 = load i32, i32* %432, align 4
  %445 = add i32 %444, 1
  store i32 %445, i32* %432, align 4
  br label %447

446:                                              ; preds = %427
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSPaintInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %428, %"class.std::__1::unique_ptr.861"* nonnull dereferenceable(8) %15) #11
  br label %447

447:                                              ; preds = %437, %446
  %448 = load %"class.blink::CSSPaintInterpolationType"*, %"class.blink::CSSPaintInterpolationType"** %431, align 8
  store %"class.blink::CSSPaintInterpolationType"* null, %"class.blink::CSSPaintInterpolationType"** %431, align 8
  %449 = icmp eq %"class.blink::CSSPaintInterpolationType"* %448, null
  br i1 %449, label %455, label %450

450:                                              ; preds = %447
  %451 = bitcast %"class.blink::CSSPaintInterpolationType"* %448 to void (%"class.blink::CSSPaintInterpolationType"*)***
  %452 = load void (%"class.blink::CSSPaintInterpolationType"*)**, void (%"class.blink::CSSPaintInterpolationType"*)*** %451, align 8
  %453 = getelementptr inbounds void (%"class.blink::CSSPaintInterpolationType"*)*, void (%"class.blink::CSSPaintInterpolationType"*)** %452, i64 1
  %454 = load void (%"class.blink::CSSPaintInterpolationType"*)*, void (%"class.blink::CSSPaintInterpolationType"*)** %453, align 8
  call void %454(%"class.blink::CSSPaintInterpolationType"* nonnull %448) #11
  br label %455

455:                                              ; preds = %447, %450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #11
  br label %1321

456:                                              ; preds = %201
  %457 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %458 = bitcast %"class.std::__1::unique_ptr.867"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %458) #11
  %459 = call %"class.blink::CSSRayInterpolationType"* @_ZNSt3__111make_uniqueIN5blink23CSSRayInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %460 = getelementptr inbounds %"class.std::__1::unique_ptr.867", %"class.std::__1::unique_ptr.867"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSRayInterpolationType"* %459, %"class.blink::CSSRayInterpolationType"** %460, align 8
  %461 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %457, i64 0, i32 0, i32 0, i32 2
  %462 = load i32, i32* %461, align 4
  %463 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %457, i64 0, i32 0, i32 0, i32 1
  %464 = load i32, i32* %463, align 8
  %465 = icmp eq i32 %462, %464
  br i1 %465, label %475, label %466, !prof !4

466:                                              ; preds = %456
  %467 = ptrtoint %"class.blink::CSSRayInterpolationType"* %459 to i64
  %468 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %457, i64 0, i32 0, i32 0, i32 0
  %469 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %468, align 8
  %470 = zext i32 %462 to i64
  %471 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %469, i64 %470
  store %"class.blink::CSSRayInterpolationType"* null, %"class.blink::CSSRayInterpolationType"** %460, align 8
  %472 = bitcast %"class.std::__1::unique_ptr.778"* %471 to i64*
  store i64 %467, i64* %472, align 8
  %473 = load i32, i32* %461, align 4
  %474 = add i32 %473, 1
  store i32 %474, i32* %461, align 4
  br label %476

475:                                              ; preds = %456
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23CSSRayInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %457, %"class.std::__1::unique_ptr.867"* nonnull dereferenceable(8) %16) #11
  br label %476

476:                                              ; preds = %466, %475
  %477 = load %"class.blink::CSSRayInterpolationType"*, %"class.blink::CSSRayInterpolationType"** %460, align 8
  store %"class.blink::CSSRayInterpolationType"* null, %"class.blink::CSSRayInterpolationType"** %460, align 8
  %478 = icmp eq %"class.blink::CSSRayInterpolationType"* %477, null
  br i1 %478, label %484, label %479

479:                                              ; preds = %476
  %480 = bitcast %"class.blink::CSSRayInterpolationType"* %477 to void (%"class.blink::CSSRayInterpolationType"*)***
  %481 = load void (%"class.blink::CSSRayInterpolationType"*)**, void (%"class.blink::CSSRayInterpolationType"*)*** %480, align 8
  %482 = getelementptr inbounds void (%"class.blink::CSSRayInterpolationType"*)*, void (%"class.blink::CSSRayInterpolationType"*)** %481, i64 1
  %483 = load void (%"class.blink::CSSRayInterpolationType"*)*, void (%"class.blink::CSSRayInterpolationType"*)** %482, align 8
  call void %483(%"class.blink::CSSRayInterpolationType"* nonnull %477) #11
  br label %484

484:                                              ; preds = %476, %479
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %458) #11
  br label %485

485:                                              ; preds = %201, %484
  %486 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %487 = bitcast %"class.std::__1::unique_ptr.873"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #11
  %488 = call %"class.blink::CSSPathInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSPathInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %489 = getelementptr inbounds %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.873"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSPathInterpolationType"* %488, %"class.blink::CSSPathInterpolationType"** %489, align 8
  %490 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %486, i64 0, i32 0, i32 0, i32 2
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %486, i64 0, i32 0, i32 0, i32 1
  %493 = load i32, i32* %492, align 8
  %494 = icmp eq i32 %491, %493
  br i1 %494, label %504, label %495, !prof !4

495:                                              ; preds = %485
  %496 = ptrtoint %"class.blink::CSSPathInterpolationType"* %488 to i64
  %497 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %486, i64 0, i32 0, i32 0, i32 0
  %498 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %497, align 8
  %499 = zext i32 %491 to i64
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %498, i64 %499
  store %"class.blink::CSSPathInterpolationType"* null, %"class.blink::CSSPathInterpolationType"** %489, align 8
  %501 = bitcast %"class.std::__1::unique_ptr.778"* %500 to i64*
  store i64 %496, i64* %501, align 8
  %502 = load i32, i32* %490, align 4
  %503 = add i32 %502, 1
  store i32 %503, i32* %490, align 4
  br label %505

504:                                              ; preds = %485
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSPathInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %486, %"class.std::__1::unique_ptr.873"* nonnull dereferenceable(8) %17) #11
  br label %505

505:                                              ; preds = %495, %504
  %506 = load %"class.blink::CSSPathInterpolationType"*, %"class.blink::CSSPathInterpolationType"** %489, align 8
  store %"class.blink::CSSPathInterpolationType"* null, %"class.blink::CSSPathInterpolationType"** %489, align 8
  %507 = icmp eq %"class.blink::CSSPathInterpolationType"* %506, null
  br i1 %507, label %513, label %508

508:                                              ; preds = %505
  %509 = bitcast %"class.blink::CSSPathInterpolationType"* %506 to void (%"class.blink::CSSPathInterpolationType"*)***
  %510 = load void (%"class.blink::CSSPathInterpolationType"*)**, void (%"class.blink::CSSPathInterpolationType"*)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.blink::CSSPathInterpolationType"*)*, void (%"class.blink::CSSPathInterpolationType"*)** %510, i64 1
  %512 = load void (%"class.blink::CSSPathInterpolationType"*)*, void (%"class.blink::CSSPathInterpolationType"*)** %511, align 8
  call void %512(%"class.blink::CSSPathInterpolationType"* nonnull %506) #11
  br label %513

513:                                              ; preds = %505, %508
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #11
  br label %1321

514:                                              ; preds = %201, %201
  %515 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %516 = bitcast %"class.std::__1::unique_ptr.879"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %516) #11
  %517 = call %"class.blink::CSSShadowListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSShadowListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %518 = getelementptr inbounds %"class.std::__1::unique_ptr.879", %"class.std::__1::unique_ptr.879"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSShadowListInterpolationType"* %517, %"class.blink::CSSShadowListInterpolationType"** %518, align 8
  %519 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %515, i64 0, i32 0, i32 0, i32 2
  %520 = load i32, i32* %519, align 4
  %521 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %515, i64 0, i32 0, i32 0, i32 1
  %522 = load i32, i32* %521, align 8
  %523 = icmp eq i32 %520, %522
  br i1 %523, label %533, label %524, !prof !4

524:                                              ; preds = %514
  %525 = ptrtoint %"class.blink::CSSShadowListInterpolationType"* %517 to i64
  %526 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %515, i64 0, i32 0, i32 0, i32 0
  %527 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %526, align 8
  %528 = zext i32 %520 to i64
  %529 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %527, i64 %528
  store %"class.blink::CSSShadowListInterpolationType"* null, %"class.blink::CSSShadowListInterpolationType"** %518, align 8
  %530 = bitcast %"class.std::__1::unique_ptr.778"* %529 to i64*
  store i64 %525, i64* %530, align 8
  %531 = load i32, i32* %519, align 4
  %532 = add i32 %531, 1
  store i32 %532, i32* %519, align 4
  br label %534

533:                                              ; preds = %514
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSShadowListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %515, %"class.std::__1::unique_ptr.879"* nonnull dereferenceable(8) %18) #11
  br label %534

534:                                              ; preds = %524, %533
  %535 = load %"class.blink::CSSShadowListInterpolationType"*, %"class.blink::CSSShadowListInterpolationType"** %518, align 8
  store %"class.blink::CSSShadowListInterpolationType"* null, %"class.blink::CSSShadowListInterpolationType"** %518, align 8
  %536 = icmp eq %"class.blink::CSSShadowListInterpolationType"* %535, null
  br i1 %536, label %542, label %537

537:                                              ; preds = %534
  %538 = bitcast %"class.blink::CSSShadowListInterpolationType"* %535 to void (%"class.blink::CSSShadowListInterpolationType"*)***
  %539 = load void (%"class.blink::CSSShadowListInterpolationType"*)**, void (%"class.blink::CSSShadowListInterpolationType"*)*** %538, align 8
  %540 = getelementptr inbounds void (%"class.blink::CSSShadowListInterpolationType"*)*, void (%"class.blink::CSSShadowListInterpolationType"*)** %539, i64 1
  %541 = load void (%"class.blink::CSSShadowListInterpolationType"*)*, void (%"class.blink::CSSShadowListInterpolationType"*)** %540, align 8
  call void %541(%"class.blink::CSSShadowListInterpolationType"* nonnull %535) #11
  br label %542

542:                                              ; preds = %534, %537
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %516) #11
  br label %1321

543:                                              ; preds = %201, %201, %201
  %544 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %545 = bitcast %"class.std::__1::unique_ptr.885"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %545) #11
  %546 = call %"class.blink::CSSImageInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSImageInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %547 = getelementptr inbounds %"class.std::__1::unique_ptr.885", %"class.std::__1::unique_ptr.885"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSImageInterpolationType"* %546, %"class.blink::CSSImageInterpolationType"** %547, align 8
  %548 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %544, i64 0, i32 0, i32 0, i32 2
  %549 = load i32, i32* %548, align 4
  %550 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %544, i64 0, i32 0, i32 0, i32 1
  %551 = load i32, i32* %550, align 8
  %552 = icmp eq i32 %549, %551
  br i1 %552, label %562, label %553, !prof !4

553:                                              ; preds = %543
  %554 = ptrtoint %"class.blink::CSSImageInterpolationType"* %546 to i64
  %555 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %544, i64 0, i32 0, i32 0, i32 0
  %556 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %555, align 8
  %557 = zext i32 %549 to i64
  %558 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %556, i64 %557
  store %"class.blink::CSSImageInterpolationType"* null, %"class.blink::CSSImageInterpolationType"** %547, align 8
  %559 = bitcast %"class.std::__1::unique_ptr.778"* %558 to i64*
  store i64 %554, i64* %559, align 8
  %560 = load i32, i32* %548, align 4
  %561 = add i32 %560, 1
  store i32 %561, i32* %548, align 4
  br label %563

562:                                              ; preds = %543
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSImageInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %544, %"class.std::__1::unique_ptr.885"* nonnull dereferenceable(8) %19) #11
  br label %563

563:                                              ; preds = %553, %562
  %564 = load %"class.blink::CSSImageInterpolationType"*, %"class.blink::CSSImageInterpolationType"** %547, align 8
  store %"class.blink::CSSImageInterpolationType"* null, %"class.blink::CSSImageInterpolationType"** %547, align 8
  %565 = icmp eq %"class.blink::CSSImageInterpolationType"* %564, null
  br i1 %565, label %571, label %566

566:                                              ; preds = %563
  %567 = bitcast %"class.blink::CSSImageInterpolationType"* %564 to void (%"class.blink::CSSImageInterpolationType"*)***
  %568 = load void (%"class.blink::CSSImageInterpolationType"*)**, void (%"class.blink::CSSImageInterpolationType"*)*** %567, align 8
  %569 = getelementptr inbounds void (%"class.blink::CSSImageInterpolationType"*)*, void (%"class.blink::CSSImageInterpolationType"*)** %568, i64 1
  %570 = load void (%"class.blink::CSSImageInterpolationType"*)*, void (%"class.blink::CSSImageInterpolationType"*)** %569, align 8
  call void %570(%"class.blink::CSSImageInterpolationType"* nonnull %564) #11
  br label %571

571:                                              ; preds = %563, %566
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545) #11
  br label %1321

572:                                              ; preds = %201, %201
  %573 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %574 = bitcast %"class.std::__1::unique_ptr.891"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %574) #11
  %575 = call %"class.blink::CSSImageListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink29CSSImageListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %576 = getelementptr inbounds %"class.std::__1::unique_ptr.891", %"class.std::__1::unique_ptr.891"* %20, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSImageListInterpolationType"* %575, %"class.blink::CSSImageListInterpolationType"** %576, align 8
  %577 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %573, i64 0, i32 0, i32 0, i32 2
  %578 = load i32, i32* %577, align 4
  %579 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %573, i64 0, i32 0, i32 0, i32 1
  %580 = load i32, i32* %579, align 8
  %581 = icmp eq i32 %578, %580
  br i1 %581, label %591, label %582, !prof !4

582:                                              ; preds = %572
  %583 = ptrtoint %"class.blink::CSSImageListInterpolationType"* %575 to i64
  %584 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %573, i64 0, i32 0, i32 0, i32 0
  %585 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %584, align 8
  %586 = zext i32 %578 to i64
  %587 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %585, i64 %586
  store %"class.blink::CSSImageListInterpolationType"* null, %"class.blink::CSSImageListInterpolationType"** %576, align 8
  %588 = bitcast %"class.std::__1::unique_ptr.778"* %587 to i64*
  store i64 %583, i64* %588, align 8
  %589 = load i32, i32* %577, align 4
  %590 = add i32 %589, 1
  store i32 %590, i32* %577, align 4
  br label %592

591:                                              ; preds = %572
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSImageListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %573, %"class.std::__1::unique_ptr.891"* nonnull dereferenceable(8) %20) #11
  br label %592

592:                                              ; preds = %582, %591
  %593 = load %"class.blink::CSSImageListInterpolationType"*, %"class.blink::CSSImageListInterpolationType"** %576, align 8
  store %"class.blink::CSSImageListInterpolationType"* null, %"class.blink::CSSImageListInterpolationType"** %576, align 8
  %594 = icmp eq %"class.blink::CSSImageListInterpolationType"* %593, null
  br i1 %594, label %600, label %595

595:                                              ; preds = %592
  %596 = bitcast %"class.blink::CSSImageListInterpolationType"* %593 to void (%"class.blink::CSSImageListInterpolationType"*)***
  %597 = load void (%"class.blink::CSSImageListInterpolationType"*)**, void (%"class.blink::CSSImageListInterpolationType"*)*** %596, align 8
  %598 = getelementptr inbounds void (%"class.blink::CSSImageListInterpolationType"*)*, void (%"class.blink::CSSImageListInterpolationType"*)** %597, i64 1
  %599 = load void (%"class.blink::CSSImageListInterpolationType"*)*, void (%"class.blink::CSSImageListInterpolationType"*)** %598, align 8
  call void %599(%"class.blink::CSSImageListInterpolationType"* nonnull %593) #11
  br label %600

600:                                              ; preds = %592, %595
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %574) #11
  br label %1321

601:                                              ; preds = %201
  %602 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %603 = bitcast %"class.std::__1::unique_ptr.897"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %603) #11
  %604 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %604)
  %605 = tail call noalias i8* @malloc(i64 56) #11
  %606 = bitcast i8* %605 to %"class.blink::CSSLengthListInterpolationType"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %604, i8* nonnull align 8 %103, i64 16, i1 false) #11
  %607 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %608 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %607, align 8
  %609 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %608, %"class.WTF::StringImpl"** %609, align 8
  %610 = icmp eq %"class.WTF::StringImpl"* %608, null
  br i1 %610, label %628, label %611

611:                                              ; preds = %601
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = and i32 %613, 2
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %616, label %628

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %608, i64 0, i32 0
  %618 = load i32, i32* %617, align 4
  %619 = zext i32 %618 to i33
  %620 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %619, i33 1) #11
  %621 = extractvalue { i33, i1 } %620, 1
  %622 = extractvalue { i33, i1 } %620, 0
  %623 = icmp slt i33 %622, 0
  %624 = or i1 %621, %623
  br i1 %624, label %625, label %626, !prof !4

625:                                              ; preds = %616
  tail call void @llvm.trap() #11
  unreachable

626:                                              ; preds = %616
  %627 = trunc i33 %622 to i32
  store i32 %627, i32* %617, align 4
  br label %628

628:                                              ; preds = %601, %611, %626
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC1ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %606, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %604)
  %629 = getelementptr inbounds %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.897"* %21, i64 0, i32 0, i32 0, i32 0
  %630 = bitcast %"class.std::__1::unique_ptr.897"* %21 to i8**
  store i8* %605, i8** %630, align 8
  %631 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %602, i64 0, i32 0, i32 0, i32 2
  %632 = load i32, i32* %631, align 4
  %633 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %602, i64 0, i32 0, i32 0, i32 1
  %634 = load i32, i32* %633, align 8
  %635 = icmp eq i32 %632, %634
  br i1 %635, label %645, label %636, !prof !4

636:                                              ; preds = %628
  %637 = ptrtoint i8* %605 to i64
  %638 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %602, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %638, align 8
  %640 = zext i32 %632 to i64
  %641 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %639, i64 %640
  store %"class.blink::CSSLengthListInterpolationType"* null, %"class.blink::CSSLengthListInterpolationType"** %629, align 8
  %642 = bitcast %"class.std::__1::unique_ptr.778"* %641 to i64*
  store i64 %637, i64* %642, align 8
  %643 = load i32, i32* %631, align 4
  %644 = add i32 %643, 1
  store i32 %644, i32* %631, align 4
  br label %646

645:                                              ; preds = %628
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %602, %"class.std::__1::unique_ptr.897"* nonnull dereferenceable(8) %21) #11
  br label %646

646:                                              ; preds = %636, %645
  %647 = load %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::CSSLengthListInterpolationType"** %629, align 8
  store %"class.blink::CSSLengthListInterpolationType"* null, %"class.blink::CSSLengthListInterpolationType"** %629, align 8
  %648 = icmp eq %"class.blink::CSSLengthListInterpolationType"* %647, null
  br i1 %648, label %654, label %649

649:                                              ; preds = %646
  %650 = bitcast %"class.blink::CSSLengthListInterpolationType"* %647 to void (%"class.blink::CSSLengthListInterpolationType"*)***
  %651 = load void (%"class.blink::CSSLengthListInterpolationType"*)**, void (%"class.blink::CSSLengthListInterpolationType"*)*** %650, align 8
  %652 = getelementptr inbounds void (%"class.blink::CSSLengthListInterpolationType"*)*, void (%"class.blink::CSSLengthListInterpolationType"*)** %651, i64 1
  %653 = load void (%"class.blink::CSSLengthListInterpolationType"*)*, void (%"class.blink::CSSLengthListInterpolationType"*)** %652, align 8
  call void %653(%"class.blink::CSSLengthListInterpolationType"* nonnull %647) #11
  br label %654

654:                                              ; preds = %646, %649
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %603) #11
  br label %1321

655:                                              ; preds = %201
  %656 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %657 = bitcast %"class.std::__1::unique_ptr.903"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %657) #11
  %658 = call %"class.blink::CSSFontWeightInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSFontWeightInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %659 = getelementptr inbounds %"class.std::__1::unique_ptr.903", %"class.std::__1::unique_ptr.903"* %22, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSFontWeightInterpolationType"* %658, %"class.blink::CSSFontWeightInterpolationType"** %659, align 8
  %660 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %656, i64 0, i32 0, i32 0, i32 2
  %661 = load i32, i32* %660, align 4
  %662 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %656, i64 0, i32 0, i32 0, i32 1
  %663 = load i32, i32* %662, align 8
  %664 = icmp eq i32 %661, %663
  br i1 %664, label %674, label %665, !prof !4

665:                                              ; preds = %655
  %666 = ptrtoint %"class.blink::CSSFontWeightInterpolationType"* %658 to i64
  %667 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %656, i64 0, i32 0, i32 0, i32 0
  %668 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %667, align 8
  %669 = zext i32 %661 to i64
  %670 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %668, i64 %669
  store %"class.blink::CSSFontWeightInterpolationType"* null, %"class.blink::CSSFontWeightInterpolationType"** %659, align 8
  %671 = bitcast %"class.std::__1::unique_ptr.778"* %670 to i64*
  store i64 %666, i64* %671, align 8
  %672 = load i32, i32* %660, align 4
  %673 = add i32 %672, 1
  store i32 %673, i32* %660, align 4
  br label %675

674:                                              ; preds = %655
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSFontWeightInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %656, %"class.std::__1::unique_ptr.903"* nonnull dereferenceable(8) %22) #11
  br label %675

675:                                              ; preds = %665, %674
  %676 = load %"class.blink::CSSFontWeightInterpolationType"*, %"class.blink::CSSFontWeightInterpolationType"** %659, align 8
  store %"class.blink::CSSFontWeightInterpolationType"* null, %"class.blink::CSSFontWeightInterpolationType"** %659, align 8
  %677 = icmp eq %"class.blink::CSSFontWeightInterpolationType"* %676, null
  br i1 %677, label %683, label %678

678:                                              ; preds = %675
  %679 = bitcast %"class.blink::CSSFontWeightInterpolationType"* %676 to void (%"class.blink::CSSFontWeightInterpolationType"*)***
  %680 = load void (%"class.blink::CSSFontWeightInterpolationType"*)**, void (%"class.blink::CSSFontWeightInterpolationType"*)*** %679, align 8
  %681 = getelementptr inbounds void (%"class.blink::CSSFontWeightInterpolationType"*)*, void (%"class.blink::CSSFontWeightInterpolationType"*)** %680, i64 1
  %682 = load void (%"class.blink::CSSFontWeightInterpolationType"*)*, void (%"class.blink::CSSFontWeightInterpolationType"*)** %681, align 8
  call void %682(%"class.blink::CSSFontWeightInterpolationType"* nonnull %676) #11
  br label %683

683:                                              ; preds = %675, %678
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %657) #11
  br label %1321

684:                                              ; preds = %201
  %685 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %686 = bitcast %"class.std::__1::unique_ptr.909"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %686) #11
  %687 = call %"class.blink::CSSFontStretchInterpolationType"* @_ZNSt3__111make_uniqueIN5blink31CSSFontStretchInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %688 = getelementptr inbounds %"class.std::__1::unique_ptr.909", %"class.std::__1::unique_ptr.909"* %23, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSFontStretchInterpolationType"* %687, %"class.blink::CSSFontStretchInterpolationType"** %688, align 8
  %689 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %685, i64 0, i32 0, i32 0, i32 2
  %690 = load i32, i32* %689, align 4
  %691 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %685, i64 0, i32 0, i32 0, i32 1
  %692 = load i32, i32* %691, align 8
  %693 = icmp eq i32 %690, %692
  br i1 %693, label %703, label %694, !prof !4

694:                                              ; preds = %684
  %695 = ptrtoint %"class.blink::CSSFontStretchInterpolationType"* %687 to i64
  %696 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %685, i64 0, i32 0, i32 0, i32 0
  %697 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %696, align 8
  %698 = zext i32 %690 to i64
  %699 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %697, i64 %698
  store %"class.blink::CSSFontStretchInterpolationType"* null, %"class.blink::CSSFontStretchInterpolationType"** %688, align 8
  %700 = bitcast %"class.std::__1::unique_ptr.778"* %699 to i64*
  store i64 %695, i64* %700, align 8
  %701 = load i32, i32* %689, align 4
  %702 = add i32 %701, 1
  store i32 %702, i32* %689, align 4
  br label %704

703:                                              ; preds = %684
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_31CSSFontStretchInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %685, %"class.std::__1::unique_ptr.909"* nonnull dereferenceable(8) %23) #11
  br label %704

704:                                              ; preds = %694, %703
  %705 = load %"class.blink::CSSFontStretchInterpolationType"*, %"class.blink::CSSFontStretchInterpolationType"** %688, align 8
  store %"class.blink::CSSFontStretchInterpolationType"* null, %"class.blink::CSSFontStretchInterpolationType"** %688, align 8
  %706 = icmp eq %"class.blink::CSSFontStretchInterpolationType"* %705, null
  br i1 %706, label %712, label %707

707:                                              ; preds = %704
  %708 = bitcast %"class.blink::CSSFontStretchInterpolationType"* %705 to void (%"class.blink::CSSFontStretchInterpolationType"*)***
  %709 = load void (%"class.blink::CSSFontStretchInterpolationType"*)**, void (%"class.blink::CSSFontStretchInterpolationType"*)*** %708, align 8
  %710 = getelementptr inbounds void (%"class.blink::CSSFontStretchInterpolationType"*)*, void (%"class.blink::CSSFontStretchInterpolationType"*)** %709, i64 1
  %711 = load void (%"class.blink::CSSFontStretchInterpolationType"*)*, void (%"class.blink::CSSFontStretchInterpolationType"*)** %710, align 8
  call void %711(%"class.blink::CSSFontStretchInterpolationType"* nonnull %705) #11
  br label %712

712:                                              ; preds = %704, %707
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %686) #11
  br label %1321

713:                                              ; preds = %201
  %714 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %715 = bitcast %"class.std::__1::unique_ptr.915"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %715) #11
  %716 = call %"class.blink::CSSFontVariationSettingsInterpolationType"* @_ZNSt3__111make_uniqueIN5blink41CSSFontVariationSettingsInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %717 = getelementptr inbounds %"class.std::__1::unique_ptr.915", %"class.std::__1::unique_ptr.915"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSFontVariationSettingsInterpolationType"* %716, %"class.blink::CSSFontVariationSettingsInterpolationType"** %717, align 8
  %718 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %714, i64 0, i32 0, i32 0, i32 2
  %719 = load i32, i32* %718, align 4
  %720 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %714, i64 0, i32 0, i32 0, i32 1
  %721 = load i32, i32* %720, align 8
  %722 = icmp eq i32 %719, %721
  br i1 %722, label %732, label %723, !prof !4

723:                                              ; preds = %713
  %724 = ptrtoint %"class.blink::CSSFontVariationSettingsInterpolationType"* %716 to i64
  %725 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %714, i64 0, i32 0, i32 0, i32 0
  %726 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %725, align 8
  %727 = zext i32 %719 to i64
  %728 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %726, i64 %727
  store %"class.blink::CSSFontVariationSettingsInterpolationType"* null, %"class.blink::CSSFontVariationSettingsInterpolationType"** %717, align 8
  %729 = bitcast %"class.std::__1::unique_ptr.778"* %728 to i64*
  store i64 %724, i64* %729, align 8
  %730 = load i32, i32* %718, align 4
  %731 = add i32 %730, 1
  store i32 %731, i32* %718, align 4
  br label %733

732:                                              ; preds = %713
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_41CSSFontVariationSettingsInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %714, %"class.std::__1::unique_ptr.915"* nonnull dereferenceable(8) %24) #11
  br label %733

733:                                              ; preds = %723, %732
  %734 = load %"class.blink::CSSFontVariationSettingsInterpolationType"*, %"class.blink::CSSFontVariationSettingsInterpolationType"** %717, align 8
  store %"class.blink::CSSFontVariationSettingsInterpolationType"* null, %"class.blink::CSSFontVariationSettingsInterpolationType"** %717, align 8
  %735 = icmp eq %"class.blink::CSSFontVariationSettingsInterpolationType"* %734, null
  br i1 %735, label %741, label %736

736:                                              ; preds = %733
  %737 = bitcast %"class.blink::CSSFontVariationSettingsInterpolationType"* %734 to void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)***
  %738 = load void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)**, void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)*** %737, align 8
  %739 = getelementptr inbounds void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)*, void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)** %738, i64 1
  %740 = load void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)*, void (%"class.blink::CSSFontVariationSettingsInterpolationType"*)** %739, align 8
  call void %740(%"class.blink::CSSFontVariationSettingsInterpolationType"* nonnull %734) #11
  br label %741

741:                                              ; preds = %733, %736
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %715) #11
  br label %1321

742:                                              ; preds = %201
  %743 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %744 = bitcast %"class.std::__1::unique_ptr.921"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %744) #11
  %745 = call %"class.blink::CSSVisibilityInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSVisibilityInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %746 = getelementptr inbounds %"class.std::__1::unique_ptr.921", %"class.std::__1::unique_ptr.921"* %25, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSVisibilityInterpolationType"* %745, %"class.blink::CSSVisibilityInterpolationType"** %746, align 8
  %747 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %743, i64 0, i32 0, i32 0, i32 2
  %748 = load i32, i32* %747, align 4
  %749 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %743, i64 0, i32 0, i32 0, i32 1
  %750 = load i32, i32* %749, align 8
  %751 = icmp eq i32 %748, %750
  br i1 %751, label %761, label %752, !prof !4

752:                                              ; preds = %742
  %753 = ptrtoint %"class.blink::CSSVisibilityInterpolationType"* %745 to i64
  %754 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %743, i64 0, i32 0, i32 0, i32 0
  %755 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %754, align 8
  %756 = zext i32 %748 to i64
  %757 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %755, i64 %756
  store %"class.blink::CSSVisibilityInterpolationType"* null, %"class.blink::CSSVisibilityInterpolationType"** %746, align 8
  %758 = bitcast %"class.std::__1::unique_ptr.778"* %757 to i64*
  store i64 %753, i64* %758, align 8
  %759 = load i32, i32* %747, align 4
  %760 = add i32 %759, 1
  store i32 %760, i32* %747, align 4
  br label %762

761:                                              ; preds = %742
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSVisibilityInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %743, %"class.std::__1::unique_ptr.921"* nonnull dereferenceable(8) %25) #11
  br label %762

762:                                              ; preds = %752, %761
  %763 = load %"class.blink::CSSVisibilityInterpolationType"*, %"class.blink::CSSVisibilityInterpolationType"** %746, align 8
  store %"class.blink::CSSVisibilityInterpolationType"* null, %"class.blink::CSSVisibilityInterpolationType"** %746, align 8
  %764 = icmp eq %"class.blink::CSSVisibilityInterpolationType"* %763, null
  br i1 %764, label %770, label %765

765:                                              ; preds = %762
  %766 = bitcast %"class.blink::CSSVisibilityInterpolationType"* %763 to void (%"class.blink::CSSVisibilityInterpolationType"*)***
  %767 = load void (%"class.blink::CSSVisibilityInterpolationType"*)**, void (%"class.blink::CSSVisibilityInterpolationType"*)*** %766, align 8
  %768 = getelementptr inbounds void (%"class.blink::CSSVisibilityInterpolationType"*)*, void (%"class.blink::CSSVisibilityInterpolationType"*)** %767, i64 1
  %769 = load void (%"class.blink::CSSVisibilityInterpolationType"*)*, void (%"class.blink::CSSVisibilityInterpolationType"*)** %768, align 8
  call void %769(%"class.blink::CSSVisibilityInterpolationType"* nonnull %763) #11
  br label %770

770:                                              ; preds = %762, %765
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %744) #11
  br label %1321

771:                                              ; preds = %201
  %772 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %773 = bitcast %"class.std::__1::unique_ptr.927"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %773) #11
  %774 = call %"class.blink::CSSClipInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSClipInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %775 = getelementptr inbounds %"class.std::__1::unique_ptr.927", %"class.std::__1::unique_ptr.927"* %26, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSClipInterpolationType"* %774, %"class.blink::CSSClipInterpolationType"** %775, align 8
  %776 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %772, i64 0, i32 0, i32 0, i32 2
  %777 = load i32, i32* %776, align 4
  %778 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %772, i64 0, i32 0, i32 0, i32 1
  %779 = load i32, i32* %778, align 8
  %780 = icmp eq i32 %777, %779
  br i1 %780, label %790, label %781, !prof !4

781:                                              ; preds = %771
  %782 = ptrtoint %"class.blink::CSSClipInterpolationType"* %774 to i64
  %783 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %772, i64 0, i32 0, i32 0, i32 0
  %784 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %783, align 8
  %785 = zext i32 %777 to i64
  %786 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %784, i64 %785
  store %"class.blink::CSSClipInterpolationType"* null, %"class.blink::CSSClipInterpolationType"** %775, align 8
  %787 = bitcast %"class.std::__1::unique_ptr.778"* %786 to i64*
  store i64 %782, i64* %787, align 8
  %788 = load i32, i32* %776, align 4
  %789 = add i32 %788, 1
  store i32 %789, i32* %776, align 4
  br label %791

790:                                              ; preds = %771
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSClipInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %772, %"class.std::__1::unique_ptr.927"* nonnull dereferenceable(8) %26) #11
  br label %791

791:                                              ; preds = %781, %790
  %792 = load %"class.blink::CSSClipInterpolationType"*, %"class.blink::CSSClipInterpolationType"** %775, align 8
  store %"class.blink::CSSClipInterpolationType"* null, %"class.blink::CSSClipInterpolationType"** %775, align 8
  %793 = icmp eq %"class.blink::CSSClipInterpolationType"* %792, null
  br i1 %793, label %799, label %794

794:                                              ; preds = %791
  %795 = bitcast %"class.blink::CSSClipInterpolationType"* %792 to void (%"class.blink::CSSClipInterpolationType"*)***
  %796 = load void (%"class.blink::CSSClipInterpolationType"*)**, void (%"class.blink::CSSClipInterpolationType"*)*** %795, align 8
  %797 = getelementptr inbounds void (%"class.blink::CSSClipInterpolationType"*)*, void (%"class.blink::CSSClipInterpolationType"*)** %796, i64 1
  %798 = load void (%"class.blink::CSSClipInterpolationType"*)*, void (%"class.blink::CSSClipInterpolationType"*)** %797, align 8
  call void %798(%"class.blink::CSSClipInterpolationType"* nonnull %792) #11
  br label %799

799:                                              ; preds = %791, %794
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %773) #11
  br label %1321

800:                                              ; preds = %201
  %801 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %802 = bitcast %"class.std::__1::unique_ptr.933"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %802) #11
  %803 = call %"class.blink::CSSOffsetRotateInterpolationType"* @_ZNSt3__111make_uniqueIN5blink32CSSOffsetRotateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %804 = getelementptr inbounds %"class.std::__1::unique_ptr.933", %"class.std::__1::unique_ptr.933"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSOffsetRotateInterpolationType"* %803, %"class.blink::CSSOffsetRotateInterpolationType"** %804, align 8
  %805 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %801, i64 0, i32 0, i32 0, i32 2
  %806 = load i32, i32* %805, align 4
  %807 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %801, i64 0, i32 0, i32 0, i32 1
  %808 = load i32, i32* %807, align 8
  %809 = icmp eq i32 %806, %808
  br i1 %809, label %819, label %810, !prof !4

810:                                              ; preds = %800
  %811 = ptrtoint %"class.blink::CSSOffsetRotateInterpolationType"* %803 to i64
  %812 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %801, i64 0, i32 0, i32 0, i32 0
  %813 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %812, align 8
  %814 = zext i32 %806 to i64
  %815 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %813, i64 %814
  store %"class.blink::CSSOffsetRotateInterpolationType"* null, %"class.blink::CSSOffsetRotateInterpolationType"** %804, align 8
  %816 = bitcast %"class.std::__1::unique_ptr.778"* %815 to i64*
  store i64 %811, i64* %816, align 8
  %817 = load i32, i32* %805, align 4
  %818 = add i32 %817, 1
  store i32 %818, i32* %805, align 4
  br label %820

819:                                              ; preds = %800
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_32CSSOffsetRotateInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %801, %"class.std::__1::unique_ptr.933"* nonnull dereferenceable(8) %27) #11
  br label %820

820:                                              ; preds = %810, %819
  %821 = load %"class.blink::CSSOffsetRotateInterpolationType"*, %"class.blink::CSSOffsetRotateInterpolationType"** %804, align 8
  store %"class.blink::CSSOffsetRotateInterpolationType"* null, %"class.blink::CSSOffsetRotateInterpolationType"** %804, align 8
  %822 = icmp eq %"class.blink::CSSOffsetRotateInterpolationType"* %821, null
  br i1 %822, label %828, label %823

823:                                              ; preds = %820
  %824 = bitcast %"class.blink::CSSOffsetRotateInterpolationType"* %821 to void (%"class.blink::CSSOffsetRotateInterpolationType"*)***
  %825 = load void (%"class.blink::CSSOffsetRotateInterpolationType"*)**, void (%"class.blink::CSSOffsetRotateInterpolationType"*)*** %824, align 8
  %826 = getelementptr inbounds void (%"class.blink::CSSOffsetRotateInterpolationType"*)*, void (%"class.blink::CSSOffsetRotateInterpolationType"*)** %825, i64 1
  %827 = load void (%"class.blink::CSSOffsetRotateInterpolationType"*)*, void (%"class.blink::CSSOffsetRotateInterpolationType"*)** %826, align 8
  call void %827(%"class.blink::CSSOffsetRotateInterpolationType"* nonnull %821) #11
  br label %828

828:                                              ; preds = %820, %823
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %802) #11
  br label %1321

829:                                              ; preds = %201, %201, %201, %201
  %830 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %831 = bitcast %"class.std::__1::unique_ptr.939"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %831) #11
  %832 = call %"class.blink::CSSPositionAxisListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink36CSSPositionAxisListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %833 = getelementptr inbounds %"class.std::__1::unique_ptr.939", %"class.std::__1::unique_ptr.939"* %28, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSPositionAxisListInterpolationType"* %832, %"class.blink::CSSPositionAxisListInterpolationType"** %833, align 8
  %834 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %830, i64 0, i32 0, i32 0, i32 2
  %835 = load i32, i32* %834, align 4
  %836 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %830, i64 0, i32 0, i32 0, i32 1
  %837 = load i32, i32* %836, align 8
  %838 = icmp eq i32 %835, %837
  br i1 %838, label %848, label %839, !prof !4

839:                                              ; preds = %829
  %840 = ptrtoint %"class.blink::CSSPositionAxisListInterpolationType"* %832 to i64
  %841 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %830, i64 0, i32 0, i32 0, i32 0
  %842 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %841, align 8
  %843 = zext i32 %835 to i64
  %844 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %842, i64 %843
  store %"class.blink::CSSPositionAxisListInterpolationType"* null, %"class.blink::CSSPositionAxisListInterpolationType"** %833, align 8
  %845 = bitcast %"class.std::__1::unique_ptr.778"* %844 to i64*
  store i64 %840, i64* %845, align 8
  %846 = load i32, i32* %834, align 4
  %847 = add i32 %846, 1
  store i32 %847, i32* %834, align 4
  br label %849

848:                                              ; preds = %829
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_36CSSPositionAxisListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %830, %"class.std::__1::unique_ptr.939"* nonnull dereferenceable(8) %28) #11
  br label %849

849:                                              ; preds = %839, %848
  %850 = load %"class.blink::CSSPositionAxisListInterpolationType"*, %"class.blink::CSSPositionAxisListInterpolationType"** %833, align 8
  store %"class.blink::CSSPositionAxisListInterpolationType"* null, %"class.blink::CSSPositionAxisListInterpolationType"** %833, align 8
  %851 = icmp eq %"class.blink::CSSPositionAxisListInterpolationType"* %850, null
  br i1 %851, label %857, label %852

852:                                              ; preds = %849
  %853 = bitcast %"class.blink::CSSPositionAxisListInterpolationType"* %850 to void (%"class.blink::CSSPositionAxisListInterpolationType"*)***
  %854 = load void (%"class.blink::CSSPositionAxisListInterpolationType"*)**, void (%"class.blink::CSSPositionAxisListInterpolationType"*)*** %853, align 8
  %855 = getelementptr inbounds void (%"class.blink::CSSPositionAxisListInterpolationType"*)*, void (%"class.blink::CSSPositionAxisListInterpolationType"*)** %854, i64 1
  %856 = load void (%"class.blink::CSSPositionAxisListInterpolationType"*)*, void (%"class.blink::CSSPositionAxisListInterpolationType"*)** %855, align 8
  call void %856(%"class.blink::CSSPositionAxisListInterpolationType"* nonnull %850) #11
  br label %857

857:                                              ; preds = %849, %852
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %831) #11
  br label %1321

858:                                              ; preds = %201, %201, %201, %201
  %859 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %860 = bitcast %"class.std::__1::unique_ptr.945"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %860) #11
  %861 = call %"class.blink::CSSPositionInterpolationType"* @_ZNSt3__111make_uniqueIN5blink28CSSPositionInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %862 = getelementptr inbounds %"class.std::__1::unique_ptr.945", %"class.std::__1::unique_ptr.945"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSPositionInterpolationType"* %861, %"class.blink::CSSPositionInterpolationType"** %862, align 8
  %863 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %859, i64 0, i32 0, i32 0, i32 2
  %864 = load i32, i32* %863, align 4
  %865 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %859, i64 0, i32 0, i32 0, i32 1
  %866 = load i32, i32* %865, align 8
  %867 = icmp eq i32 %864, %866
  br i1 %867, label %877, label %868, !prof !4

868:                                              ; preds = %858
  %869 = ptrtoint %"class.blink::CSSPositionInterpolationType"* %861 to i64
  %870 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %859, i64 0, i32 0, i32 0, i32 0
  %871 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %870, align 8
  %872 = zext i32 %864 to i64
  %873 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %871, i64 %872
  store %"class.blink::CSSPositionInterpolationType"* null, %"class.blink::CSSPositionInterpolationType"** %862, align 8
  %874 = bitcast %"class.std::__1::unique_ptr.778"* %873 to i64*
  store i64 %869, i64* %874, align 8
  %875 = load i32, i32* %863, align 4
  %876 = add i32 %875, 1
  store i32 %876, i32* %863, align 4
  br label %878

877:                                              ; preds = %858
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSPositionInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %859, %"class.std::__1::unique_ptr.945"* nonnull dereferenceable(8) %29) #11
  br label %878

878:                                              ; preds = %868, %877
  %879 = load %"class.blink::CSSPositionInterpolationType"*, %"class.blink::CSSPositionInterpolationType"** %862, align 8
  store %"class.blink::CSSPositionInterpolationType"* null, %"class.blink::CSSPositionInterpolationType"** %862, align 8
  %880 = icmp eq %"class.blink::CSSPositionInterpolationType"* %879, null
  br i1 %880, label %886, label %881

881:                                              ; preds = %878
  %882 = bitcast %"class.blink::CSSPositionInterpolationType"* %879 to void (%"class.blink::CSSPositionInterpolationType"*)***
  %883 = load void (%"class.blink::CSSPositionInterpolationType"*)**, void (%"class.blink::CSSPositionInterpolationType"*)*** %882, align 8
  %884 = getelementptr inbounds void (%"class.blink::CSSPositionInterpolationType"*)*, void (%"class.blink::CSSPositionInterpolationType"*)** %883, i64 1
  %885 = load void (%"class.blink::CSSPositionInterpolationType"*)*, void (%"class.blink::CSSPositionInterpolationType"*)** %884, align 8
  call void %885(%"class.blink::CSSPositionInterpolationType"* nonnull %879) #11
  br label %886

886:                                              ; preds = %878, %881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %860) #11
  br label %1321

887:                                              ; preds = %201, %201, %201, %201, %201
  %888 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %889 = bitcast %"class.std::__1::unique_ptr.951"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %889) #11
  %890 = call %"class.blink::CSSLengthPairInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSLengthPairInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %891 = getelementptr inbounds %"class.std::__1::unique_ptr.951", %"class.std::__1::unique_ptr.951"* %30, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSLengthPairInterpolationType"* %890, %"class.blink::CSSLengthPairInterpolationType"** %891, align 8
  %892 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %888, i64 0, i32 0, i32 0, i32 2
  %893 = load i32, i32* %892, align 4
  %894 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %888, i64 0, i32 0, i32 0, i32 1
  %895 = load i32, i32* %894, align 8
  %896 = icmp eq i32 %893, %895
  br i1 %896, label %906, label %897, !prof !4

897:                                              ; preds = %887
  %898 = ptrtoint %"class.blink::CSSLengthPairInterpolationType"* %890 to i64
  %899 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %888, i64 0, i32 0, i32 0, i32 0
  %900 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %899, align 8
  %901 = zext i32 %893 to i64
  %902 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %900, i64 %901
  store %"class.blink::CSSLengthPairInterpolationType"* null, %"class.blink::CSSLengthPairInterpolationType"** %891, align 8
  %903 = bitcast %"class.std::__1::unique_ptr.778"* %902 to i64*
  store i64 %898, i64* %903, align 8
  %904 = load i32, i32* %892, align 4
  %905 = add i32 %904, 1
  store i32 %905, i32* %892, align 4
  br label %907

906:                                              ; preds = %887
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSLengthPairInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %888, %"class.std::__1::unique_ptr.951"* nonnull dereferenceable(8) %30) #11
  br label %907

907:                                              ; preds = %897, %906
  %908 = load %"class.blink::CSSLengthPairInterpolationType"*, %"class.blink::CSSLengthPairInterpolationType"** %891, align 8
  store %"class.blink::CSSLengthPairInterpolationType"* null, %"class.blink::CSSLengthPairInterpolationType"** %891, align 8
  %909 = icmp eq %"class.blink::CSSLengthPairInterpolationType"* %908, null
  br i1 %909, label %915, label %910

910:                                              ; preds = %907
  %911 = bitcast %"class.blink::CSSLengthPairInterpolationType"* %908 to void (%"class.blink::CSSLengthPairInterpolationType"*)***
  %912 = load void (%"class.blink::CSSLengthPairInterpolationType"*)**, void (%"class.blink::CSSLengthPairInterpolationType"*)*** %911, align 8
  %913 = getelementptr inbounds void (%"class.blink::CSSLengthPairInterpolationType"*)*, void (%"class.blink::CSSLengthPairInterpolationType"*)** %912, i64 1
  %914 = load void (%"class.blink::CSSLengthPairInterpolationType"*)*, void (%"class.blink::CSSLengthPairInterpolationType"*)** %913, align 8
  call void %914(%"class.blink::CSSLengthPairInterpolationType"* nonnull %908) #11
  br label %915

915:                                              ; preds = %907, %910
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %889) #11
  br label %1321

916:                                              ; preds = %201
  %917 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %918 = bitcast %"class.std::__1::unique_ptr.957"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %918) #11
  %919 = call %"class.blink::CSSTranslateInterpolationType"* @_ZNSt3__111make_uniqueIN5blink29CSSTranslateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %920 = getelementptr inbounds %"class.std::__1::unique_ptr.957", %"class.std::__1::unique_ptr.957"* %31, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSTranslateInterpolationType"* %919, %"class.blink::CSSTranslateInterpolationType"** %920, align 8
  %921 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %917, i64 0, i32 0, i32 0, i32 2
  %922 = load i32, i32* %921, align 4
  %923 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %917, i64 0, i32 0, i32 0, i32 1
  %924 = load i32, i32* %923, align 8
  %925 = icmp eq i32 %922, %924
  br i1 %925, label %935, label %926, !prof !4

926:                                              ; preds = %916
  %927 = ptrtoint %"class.blink::CSSTranslateInterpolationType"* %919 to i64
  %928 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %917, i64 0, i32 0, i32 0, i32 0
  %929 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %928, align 8
  %930 = zext i32 %922 to i64
  %931 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %929, i64 %930
  store %"class.blink::CSSTranslateInterpolationType"* null, %"class.blink::CSSTranslateInterpolationType"** %920, align 8
  %932 = bitcast %"class.std::__1::unique_ptr.778"* %931 to i64*
  store i64 %927, i64* %932, align 8
  %933 = load i32, i32* %921, align 4
  %934 = add i32 %933, 1
  store i32 %934, i32* %921, align 4
  br label %936

935:                                              ; preds = %916
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSTranslateInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %917, %"class.std::__1::unique_ptr.957"* nonnull dereferenceable(8) %31) #11
  br label %936

936:                                              ; preds = %926, %935
  %937 = load %"class.blink::CSSTranslateInterpolationType"*, %"class.blink::CSSTranslateInterpolationType"** %920, align 8
  store %"class.blink::CSSTranslateInterpolationType"* null, %"class.blink::CSSTranslateInterpolationType"** %920, align 8
  %938 = icmp eq %"class.blink::CSSTranslateInterpolationType"* %937, null
  br i1 %938, label %944, label %939

939:                                              ; preds = %936
  %940 = bitcast %"class.blink::CSSTranslateInterpolationType"* %937 to void (%"class.blink::CSSTranslateInterpolationType"*)***
  %941 = load void (%"class.blink::CSSTranslateInterpolationType"*)**, void (%"class.blink::CSSTranslateInterpolationType"*)*** %940, align 8
  %942 = getelementptr inbounds void (%"class.blink::CSSTranslateInterpolationType"*)*, void (%"class.blink::CSSTranslateInterpolationType"*)** %941, i64 1
  %943 = load void (%"class.blink::CSSTranslateInterpolationType"*)*, void (%"class.blink::CSSTranslateInterpolationType"*)** %942, align 8
  call void %943(%"class.blink::CSSTranslateInterpolationType"* nonnull %937) #11
  br label %944

944:                                              ; preds = %936, %939
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %918) #11
  br label %1321

945:                                              ; preds = %201
  %946 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %947 = bitcast %"class.std::__1::unique_ptr.963"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %947) #11
  %948 = call %"class.blink::CSSTransformOriginInterpolationType"* @_ZNSt3__111make_uniqueIN5blink35CSSTransformOriginInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %949 = getelementptr inbounds %"class.std::__1::unique_ptr.963", %"class.std::__1::unique_ptr.963"* %32, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSTransformOriginInterpolationType"* %948, %"class.blink::CSSTransformOriginInterpolationType"** %949, align 8
  %950 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %946, i64 0, i32 0, i32 0, i32 2
  %951 = load i32, i32* %950, align 4
  %952 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %946, i64 0, i32 0, i32 0, i32 1
  %953 = load i32, i32* %952, align 8
  %954 = icmp eq i32 %951, %953
  br i1 %954, label %964, label %955, !prof !4

955:                                              ; preds = %945
  %956 = ptrtoint %"class.blink::CSSTransformOriginInterpolationType"* %948 to i64
  %957 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %946, i64 0, i32 0, i32 0, i32 0
  %958 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %957, align 8
  %959 = zext i32 %951 to i64
  %960 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %958, i64 %959
  store %"class.blink::CSSTransformOriginInterpolationType"* null, %"class.blink::CSSTransformOriginInterpolationType"** %949, align 8
  %961 = bitcast %"class.std::__1::unique_ptr.778"* %960 to i64*
  store i64 %956, i64* %961, align 8
  %962 = load i32, i32* %950, align 4
  %963 = add i32 %962, 1
  store i32 %963, i32* %950, align 4
  br label %965

964:                                              ; preds = %945
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_35CSSTransformOriginInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %946, %"class.std::__1::unique_ptr.963"* nonnull dereferenceable(8) %32) #11
  br label %965

965:                                              ; preds = %955, %964
  %966 = load %"class.blink::CSSTransformOriginInterpolationType"*, %"class.blink::CSSTransformOriginInterpolationType"** %949, align 8
  store %"class.blink::CSSTransformOriginInterpolationType"* null, %"class.blink::CSSTransformOriginInterpolationType"** %949, align 8
  %967 = icmp eq %"class.blink::CSSTransformOriginInterpolationType"* %966, null
  br i1 %967, label %973, label %968

968:                                              ; preds = %965
  %969 = bitcast %"class.blink::CSSTransformOriginInterpolationType"* %966 to void (%"class.blink::CSSTransformOriginInterpolationType"*)***
  %970 = load void (%"class.blink::CSSTransformOriginInterpolationType"*)**, void (%"class.blink::CSSTransformOriginInterpolationType"*)*** %969, align 8
  %971 = getelementptr inbounds void (%"class.blink::CSSTransformOriginInterpolationType"*)*, void (%"class.blink::CSSTransformOriginInterpolationType"*)** %970, i64 1
  %972 = load void (%"class.blink::CSSTransformOriginInterpolationType"*)*, void (%"class.blink::CSSTransformOriginInterpolationType"*)** %971, align 8
  call void %972(%"class.blink::CSSTransformOriginInterpolationType"* nonnull %966) #11
  br label %973

973:                                              ; preds = %965, %968
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %947) #11
  br label %1321

974:                                              ; preds = %201, %201
  %975 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %976 = bitcast %"class.std::__1::unique_ptr.969"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %976) #11
  %977 = call %"class.blink::CSSSizeListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink28CSSSizeListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %978 = getelementptr inbounds %"class.std::__1::unique_ptr.969", %"class.std::__1::unique_ptr.969"* %33, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSSizeListInterpolationType"* %977, %"class.blink::CSSSizeListInterpolationType"** %978, align 8
  %979 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %975, i64 0, i32 0, i32 0, i32 2
  %980 = load i32, i32* %979, align 4
  %981 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %975, i64 0, i32 0, i32 0, i32 1
  %982 = load i32, i32* %981, align 8
  %983 = icmp eq i32 %980, %982
  br i1 %983, label %993, label %984, !prof !4

984:                                              ; preds = %974
  %985 = ptrtoint %"class.blink::CSSSizeListInterpolationType"* %977 to i64
  %986 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %975, i64 0, i32 0, i32 0, i32 0
  %987 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %986, align 8
  %988 = zext i32 %980 to i64
  %989 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %987, i64 %988
  store %"class.blink::CSSSizeListInterpolationType"* null, %"class.blink::CSSSizeListInterpolationType"** %978, align 8
  %990 = bitcast %"class.std::__1::unique_ptr.778"* %989 to i64*
  store i64 %985, i64* %990, align 8
  %991 = load i32, i32* %979, align 4
  %992 = add i32 %991, 1
  store i32 %992, i32* %979, align 4
  br label %994

993:                                              ; preds = %974
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSSizeListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %975, %"class.std::__1::unique_ptr.969"* nonnull dereferenceable(8) %33) #11
  br label %994

994:                                              ; preds = %984, %993
  %995 = load %"class.blink::CSSSizeListInterpolationType"*, %"class.blink::CSSSizeListInterpolationType"** %978, align 8
  store %"class.blink::CSSSizeListInterpolationType"* null, %"class.blink::CSSSizeListInterpolationType"** %978, align 8
  %996 = icmp eq %"class.blink::CSSSizeListInterpolationType"* %995, null
  br i1 %996, label %1002, label %997

997:                                              ; preds = %994
  %998 = bitcast %"class.blink::CSSSizeListInterpolationType"* %995 to void (%"class.blink::CSSSizeListInterpolationType"*)***
  %999 = load void (%"class.blink::CSSSizeListInterpolationType"*)**, void (%"class.blink::CSSSizeListInterpolationType"*)*** %998, align 8
  %1000 = getelementptr inbounds void (%"class.blink::CSSSizeListInterpolationType"*)*, void (%"class.blink::CSSSizeListInterpolationType"*)** %999, i64 1
  %1001 = load void (%"class.blink::CSSSizeListInterpolationType"*)*, void (%"class.blink::CSSSizeListInterpolationType"*)** %1000, align 8
  call void %1001(%"class.blink::CSSSizeListInterpolationType"* nonnull %995) #11
  br label %1002

1002:                                             ; preds = %994, %997
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %976) #11
  br label %1321

1003:                                             ; preds = %201, %201, %201, %201
  %1004 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1005 = bitcast %"class.std::__1::unique_ptr.975"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1005) #11
  %1006 = call %"class.blink::CSSBorderImageLengthBoxInterpolationType"* @_ZNSt3__111make_uniqueIN5blink40CSSBorderImageLengthBoxInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1007 = getelementptr inbounds %"class.std::__1::unique_ptr.975", %"class.std::__1::unique_ptr.975"* %34, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSBorderImageLengthBoxInterpolationType"* %1006, %"class.blink::CSSBorderImageLengthBoxInterpolationType"** %1007, align 8
  %1008 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1004, i64 0, i32 0, i32 0, i32 2
  %1009 = load i32, i32* %1008, align 4
  %1010 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1004, i64 0, i32 0, i32 0, i32 1
  %1011 = load i32, i32* %1010, align 8
  %1012 = icmp eq i32 %1009, %1011
  br i1 %1012, label %1022, label %1013, !prof !4

1013:                                             ; preds = %1003
  %1014 = ptrtoint %"class.blink::CSSBorderImageLengthBoxInterpolationType"* %1006 to i64
  %1015 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1004, i64 0, i32 0, i32 0, i32 0
  %1016 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1015, align 8
  %1017 = zext i32 %1009 to i64
  %1018 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1016, i64 %1017
  store %"class.blink::CSSBorderImageLengthBoxInterpolationType"* null, %"class.blink::CSSBorderImageLengthBoxInterpolationType"** %1007, align 8
  %1019 = bitcast %"class.std::__1::unique_ptr.778"* %1018 to i64*
  store i64 %1014, i64* %1019, align 8
  %1020 = load i32, i32* %1008, align 4
  %1021 = add i32 %1020, 1
  store i32 %1021, i32* %1008, align 4
  br label %1023

1022:                                             ; preds = %1003
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_40CSSBorderImageLengthBoxInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1004, %"class.std::__1::unique_ptr.975"* nonnull dereferenceable(8) %34) #11
  br label %1023

1023:                                             ; preds = %1013, %1022
  %1024 = load %"class.blink::CSSBorderImageLengthBoxInterpolationType"*, %"class.blink::CSSBorderImageLengthBoxInterpolationType"** %1007, align 8
  store %"class.blink::CSSBorderImageLengthBoxInterpolationType"* null, %"class.blink::CSSBorderImageLengthBoxInterpolationType"** %1007, align 8
  %1025 = icmp eq %"class.blink::CSSBorderImageLengthBoxInterpolationType"* %1024, null
  br i1 %1025, label %1031, label %1026

1026:                                             ; preds = %1023
  %1027 = bitcast %"class.blink::CSSBorderImageLengthBoxInterpolationType"* %1024 to void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)***
  %1028 = load void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)**, void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)*** %1027, align 8
  %1029 = getelementptr inbounds void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)*, void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)** %1028, i64 1
  %1030 = load void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)*, void (%"class.blink::CSSBorderImageLengthBoxInterpolationType"*)** %1029, align 8
  call void %1030(%"class.blink::CSSBorderImageLengthBoxInterpolationType"* nonnull %1024) #11
  br label %1031

1031:                                             ; preds = %1023, %1026
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1005) #11
  br label %1321

1032:                                             ; preds = %201
  %1033 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1034 = bitcast %"class.std::__1::unique_ptr.981"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1034) #11
  %1035 = call %"class.blink::CSSScaleInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSScaleInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1036 = getelementptr inbounds %"class.std::__1::unique_ptr.981", %"class.std::__1::unique_ptr.981"* %35, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSScaleInterpolationType"* %1035, %"class.blink::CSSScaleInterpolationType"** %1036, align 8
  %1037 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1033, i64 0, i32 0, i32 0, i32 2
  %1038 = load i32, i32* %1037, align 4
  %1039 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1033, i64 0, i32 0, i32 0, i32 1
  %1040 = load i32, i32* %1039, align 8
  %1041 = icmp eq i32 %1038, %1040
  br i1 %1041, label %1051, label %1042, !prof !4

1042:                                             ; preds = %1032
  %1043 = ptrtoint %"class.blink::CSSScaleInterpolationType"* %1035 to i64
  %1044 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1033, i64 0, i32 0, i32 0, i32 0
  %1045 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1044, align 8
  %1046 = zext i32 %1038 to i64
  %1047 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1045, i64 %1046
  store %"class.blink::CSSScaleInterpolationType"* null, %"class.blink::CSSScaleInterpolationType"** %1036, align 8
  %1048 = bitcast %"class.std::__1::unique_ptr.778"* %1047 to i64*
  store i64 %1043, i64* %1048, align 8
  %1049 = load i32, i32* %1037, align 4
  %1050 = add i32 %1049, 1
  store i32 %1050, i32* %1037, align 4
  br label %1052

1051:                                             ; preds = %1032
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSScaleInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1033, %"class.std::__1::unique_ptr.981"* nonnull dereferenceable(8) %35) #11
  br label %1052

1052:                                             ; preds = %1042, %1051
  %1053 = load %"class.blink::CSSScaleInterpolationType"*, %"class.blink::CSSScaleInterpolationType"** %1036, align 8
  store %"class.blink::CSSScaleInterpolationType"* null, %"class.blink::CSSScaleInterpolationType"** %1036, align 8
  %1054 = icmp eq %"class.blink::CSSScaleInterpolationType"* %1053, null
  br i1 %1054, label %1060, label %1055

1055:                                             ; preds = %1052
  %1056 = bitcast %"class.blink::CSSScaleInterpolationType"* %1053 to void (%"class.blink::CSSScaleInterpolationType"*)***
  %1057 = load void (%"class.blink::CSSScaleInterpolationType"*)**, void (%"class.blink::CSSScaleInterpolationType"*)*** %1056, align 8
  %1058 = getelementptr inbounds void (%"class.blink::CSSScaleInterpolationType"*)*, void (%"class.blink::CSSScaleInterpolationType"*)** %1057, i64 1
  %1059 = load void (%"class.blink::CSSScaleInterpolationType"*)*, void (%"class.blink::CSSScaleInterpolationType"*)** %1058, align 8
  call void %1059(%"class.blink::CSSScaleInterpolationType"* nonnull %1053) #11
  br label %1060

1060:                                             ; preds = %1052, %1055
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1034) #11
  br label %1321

1061:                                             ; preds = %201
  %1062 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1063 = bitcast %"class.std::__1::unique_ptr.987"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1063) #11
  %1064 = call %"class.blink::CSSFontSizeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink28CSSFontSizeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1065 = getelementptr inbounds %"class.std::__1::unique_ptr.987", %"class.std::__1::unique_ptr.987"* %36, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSFontSizeInterpolationType"* %1064, %"class.blink::CSSFontSizeInterpolationType"** %1065, align 8
  %1066 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1062, i64 0, i32 0, i32 0, i32 2
  %1067 = load i32, i32* %1066, align 4
  %1068 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1062, i64 0, i32 0, i32 0, i32 1
  %1069 = load i32, i32* %1068, align 8
  %1070 = icmp eq i32 %1067, %1069
  br i1 %1070, label %1080, label %1071, !prof !4

1071:                                             ; preds = %1061
  %1072 = ptrtoint %"class.blink::CSSFontSizeInterpolationType"* %1064 to i64
  %1073 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1062, i64 0, i32 0, i32 0, i32 0
  %1074 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1073, align 8
  %1075 = zext i32 %1067 to i64
  %1076 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1074, i64 %1075
  store %"class.blink::CSSFontSizeInterpolationType"* null, %"class.blink::CSSFontSizeInterpolationType"** %1065, align 8
  %1077 = bitcast %"class.std::__1::unique_ptr.778"* %1076 to i64*
  store i64 %1072, i64* %1077, align 8
  %1078 = load i32, i32* %1066, align 4
  %1079 = add i32 %1078, 1
  store i32 %1079, i32* %1066, align 4
  br label %1081

1080:                                             ; preds = %1061
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSFontSizeInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1062, %"class.std::__1::unique_ptr.987"* nonnull dereferenceable(8) %36) #11
  br label %1081

1081:                                             ; preds = %1071, %1080
  %1082 = load %"class.blink::CSSFontSizeInterpolationType"*, %"class.blink::CSSFontSizeInterpolationType"** %1065, align 8
  store %"class.blink::CSSFontSizeInterpolationType"* null, %"class.blink::CSSFontSizeInterpolationType"** %1065, align 8
  %1083 = icmp eq %"class.blink::CSSFontSizeInterpolationType"* %1082, null
  br i1 %1083, label %1089, label %1084

1084:                                             ; preds = %1081
  %1085 = bitcast %"class.blink::CSSFontSizeInterpolationType"* %1082 to void (%"class.blink::CSSFontSizeInterpolationType"*)***
  %1086 = load void (%"class.blink::CSSFontSizeInterpolationType"*)**, void (%"class.blink::CSSFontSizeInterpolationType"*)*** %1085, align 8
  %1087 = getelementptr inbounds void (%"class.blink::CSSFontSizeInterpolationType"*)*, void (%"class.blink::CSSFontSizeInterpolationType"*)** %1086, i64 1
  %1088 = load void (%"class.blink::CSSFontSizeInterpolationType"*)*, void (%"class.blink::CSSFontSizeInterpolationType"*)** %1087, align 8
  call void %1088(%"class.blink::CSSFontSizeInterpolationType"* nonnull %1082) #11
  br label %1089

1089:                                             ; preds = %1081, %1084
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1063) #11
  br label %1321

1090:                                             ; preds = %201
  %1091 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1092 = bitcast %"class.std::__1::unique_ptr.993"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1092) #11
  %1093 = call %"class.blink::CSSTextIndentInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSTextIndentInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1094 = getelementptr inbounds %"class.std::__1::unique_ptr.993", %"class.std::__1::unique_ptr.993"* %37, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSTextIndentInterpolationType"* %1093, %"class.blink::CSSTextIndentInterpolationType"** %1094, align 8
  %1095 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1091, i64 0, i32 0, i32 0, i32 2
  %1096 = load i32, i32* %1095, align 4
  %1097 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1091, i64 0, i32 0, i32 0, i32 1
  %1098 = load i32, i32* %1097, align 8
  %1099 = icmp eq i32 %1096, %1098
  br i1 %1099, label %1109, label %1100, !prof !4

1100:                                             ; preds = %1090
  %1101 = ptrtoint %"class.blink::CSSTextIndentInterpolationType"* %1093 to i64
  %1102 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1091, i64 0, i32 0, i32 0, i32 0
  %1103 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1102, align 8
  %1104 = zext i32 %1096 to i64
  %1105 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1103, i64 %1104
  store %"class.blink::CSSTextIndentInterpolationType"* null, %"class.blink::CSSTextIndentInterpolationType"** %1094, align 8
  %1106 = bitcast %"class.std::__1::unique_ptr.778"* %1105 to i64*
  store i64 %1101, i64* %1106, align 8
  %1107 = load i32, i32* %1095, align 4
  %1108 = add i32 %1107, 1
  store i32 %1108, i32* %1095, align 4
  br label %1110

1109:                                             ; preds = %1090
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSTextIndentInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1091, %"class.std::__1::unique_ptr.993"* nonnull dereferenceable(8) %37) #11
  br label %1110

1110:                                             ; preds = %1100, %1109
  %1111 = load %"class.blink::CSSTextIndentInterpolationType"*, %"class.blink::CSSTextIndentInterpolationType"** %1094, align 8
  store %"class.blink::CSSTextIndentInterpolationType"* null, %"class.blink::CSSTextIndentInterpolationType"** %1094, align 8
  %1112 = icmp eq %"class.blink::CSSTextIndentInterpolationType"* %1111, null
  br i1 %1112, label %1118, label %1113

1113:                                             ; preds = %1110
  %1114 = bitcast %"class.blink::CSSTextIndentInterpolationType"* %1111 to void (%"class.blink::CSSTextIndentInterpolationType"*)***
  %1115 = load void (%"class.blink::CSSTextIndentInterpolationType"*)**, void (%"class.blink::CSSTextIndentInterpolationType"*)*** %1114, align 8
  %1116 = getelementptr inbounds void (%"class.blink::CSSTextIndentInterpolationType"*)*, void (%"class.blink::CSSTextIndentInterpolationType"*)** %1115, i64 1
  %1117 = load void (%"class.blink::CSSTextIndentInterpolationType"*)*, void (%"class.blink::CSSTextIndentInterpolationType"*)** %1116, align 8
  call void %1117(%"class.blink::CSSTextIndentInterpolationType"* nonnull %1111) #11
  br label %1118

1118:                                             ; preds = %1110, %1113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1092) #11
  br label %1321

1119:                                             ; preds = %201, %201
  %1120 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1121 = bitcast %"class.std::__1::unique_ptr.999"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1121) #11
  %1122 = call %"class.blink::CSSImageSliceInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSImageSliceInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1123 = getelementptr inbounds %"class.std::__1::unique_ptr.999", %"class.std::__1::unique_ptr.999"* %38, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSImageSliceInterpolationType"* %1122, %"class.blink::CSSImageSliceInterpolationType"** %1123, align 8
  %1124 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1120, i64 0, i32 0, i32 0, i32 2
  %1125 = load i32, i32* %1124, align 4
  %1126 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1120, i64 0, i32 0, i32 0, i32 1
  %1127 = load i32, i32* %1126, align 8
  %1128 = icmp eq i32 %1125, %1127
  br i1 %1128, label %1138, label %1129, !prof !4

1129:                                             ; preds = %1119
  %1130 = ptrtoint %"class.blink::CSSImageSliceInterpolationType"* %1122 to i64
  %1131 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1120, i64 0, i32 0, i32 0, i32 0
  %1132 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1131, align 8
  %1133 = zext i32 %1125 to i64
  %1134 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1132, i64 %1133
  store %"class.blink::CSSImageSliceInterpolationType"* null, %"class.blink::CSSImageSliceInterpolationType"** %1123, align 8
  %1135 = bitcast %"class.std::__1::unique_ptr.778"* %1134 to i64*
  store i64 %1130, i64* %1135, align 8
  %1136 = load i32, i32* %1124, align 4
  %1137 = add i32 %1136, 1
  store i32 %1137, i32* %1124, align 4
  br label %1139

1138:                                             ; preds = %1119
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSImageSliceInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1120, %"class.std::__1::unique_ptr.999"* nonnull dereferenceable(8) %38) #11
  br label %1139

1139:                                             ; preds = %1129, %1138
  %1140 = load %"class.blink::CSSImageSliceInterpolationType"*, %"class.blink::CSSImageSliceInterpolationType"** %1123, align 8
  store %"class.blink::CSSImageSliceInterpolationType"* null, %"class.blink::CSSImageSliceInterpolationType"** %1123, align 8
  %1141 = icmp eq %"class.blink::CSSImageSliceInterpolationType"* %1140, null
  br i1 %1141, label %1147, label %1142

1142:                                             ; preds = %1139
  %1143 = bitcast %"class.blink::CSSImageSliceInterpolationType"* %1140 to void (%"class.blink::CSSImageSliceInterpolationType"*)***
  %1144 = load void (%"class.blink::CSSImageSliceInterpolationType"*)**, void (%"class.blink::CSSImageSliceInterpolationType"*)*** %1143, align 8
  %1145 = getelementptr inbounds void (%"class.blink::CSSImageSliceInterpolationType"*)*, void (%"class.blink::CSSImageSliceInterpolationType"*)** %1144, i64 1
  %1146 = load void (%"class.blink::CSSImageSliceInterpolationType"*)*, void (%"class.blink::CSSImageSliceInterpolationType"*)** %1145, align 8
  call void %1146(%"class.blink::CSSImageSliceInterpolationType"* nonnull %1140) #11
  br label %1147

1147:                                             ; preds = %1139, %1142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1121) #11
  br label %1321

1148:                                             ; preds = %201
  %1149 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1150 = bitcast %"class.std::__1::unique_ptr.1005"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1150) #11
  %1151 = call %"class.blink::CSSBasicShapeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSBasicShapeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1152 = getelementptr inbounds %"class.std::__1::unique_ptr.1005", %"class.std::__1::unique_ptr.1005"* %39, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSBasicShapeInterpolationType"* %1151, %"class.blink::CSSBasicShapeInterpolationType"** %1152, align 8
  %1153 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1149, i64 0, i32 0, i32 0, i32 2
  %1154 = load i32, i32* %1153, align 4
  %1155 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1149, i64 0, i32 0, i32 0, i32 1
  %1156 = load i32, i32* %1155, align 8
  %1157 = icmp eq i32 %1154, %1156
  br i1 %1157, label %1167, label %1158, !prof !4

1158:                                             ; preds = %1148
  %1159 = ptrtoint %"class.blink::CSSBasicShapeInterpolationType"* %1151 to i64
  %1160 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1149, i64 0, i32 0, i32 0, i32 0
  %1161 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1160, align 8
  %1162 = zext i32 %1154 to i64
  %1163 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1161, i64 %1162
  store %"class.blink::CSSBasicShapeInterpolationType"* null, %"class.blink::CSSBasicShapeInterpolationType"** %1152, align 8
  %1164 = bitcast %"class.std::__1::unique_ptr.778"* %1163 to i64*
  store i64 %1159, i64* %1164, align 8
  %1165 = load i32, i32* %1153, align 4
  %1166 = add i32 %1165, 1
  store i32 %1166, i32* %1153, align 4
  br label %1168

1167:                                             ; preds = %1148
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSBasicShapeInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1149, %"class.std::__1::unique_ptr.1005"* nonnull dereferenceable(8) %39) #11
  br label %1168

1168:                                             ; preds = %1158, %1167
  %1169 = load %"class.blink::CSSBasicShapeInterpolationType"*, %"class.blink::CSSBasicShapeInterpolationType"** %1152, align 8
  store %"class.blink::CSSBasicShapeInterpolationType"* null, %"class.blink::CSSBasicShapeInterpolationType"** %1152, align 8
  %1170 = icmp eq %"class.blink::CSSBasicShapeInterpolationType"* %1169, null
  br i1 %1170, label %1176, label %1171

1171:                                             ; preds = %1168
  %1172 = bitcast %"class.blink::CSSBasicShapeInterpolationType"* %1169 to void (%"class.blink::CSSBasicShapeInterpolationType"*)***
  %1173 = load void (%"class.blink::CSSBasicShapeInterpolationType"*)**, void (%"class.blink::CSSBasicShapeInterpolationType"*)*** %1172, align 8
  %1174 = getelementptr inbounds void (%"class.blink::CSSBasicShapeInterpolationType"*)*, void (%"class.blink::CSSBasicShapeInterpolationType"*)** %1173, i64 1
  %1175 = load void (%"class.blink::CSSBasicShapeInterpolationType"*)*, void (%"class.blink::CSSBasicShapeInterpolationType"*)** %1174, align 8
  call void %1175(%"class.blink::CSSBasicShapeInterpolationType"* nonnull %1169) #11
  br label %1176

1176:                                             ; preds = %1168, %1171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1150) #11
  %1177 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1178 = bitcast %"class.std::__1::unique_ptr.873"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1178) #11
  %1179 = call %"class.blink::CSSPathInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSPathInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1180 = getelementptr inbounds %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.873"* %40, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSPathInterpolationType"* %1179, %"class.blink::CSSPathInterpolationType"** %1180, align 8
  %1181 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1177, i64 0, i32 0, i32 0, i32 2
  %1182 = load i32, i32* %1181, align 4
  %1183 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1177, i64 0, i32 0, i32 0, i32 1
  %1184 = load i32, i32* %1183, align 8
  %1185 = icmp eq i32 %1182, %1184
  br i1 %1185, label %1195, label %1186, !prof !4

1186:                                             ; preds = %1176
  %1187 = ptrtoint %"class.blink::CSSPathInterpolationType"* %1179 to i64
  %1188 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1177, i64 0, i32 0, i32 0, i32 0
  %1189 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1188, align 8
  %1190 = zext i32 %1182 to i64
  %1191 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1189, i64 %1190
  store %"class.blink::CSSPathInterpolationType"* null, %"class.blink::CSSPathInterpolationType"** %1180, align 8
  %1192 = bitcast %"class.std::__1::unique_ptr.778"* %1191 to i64*
  store i64 %1187, i64* %1192, align 8
  %1193 = load i32, i32* %1181, align 4
  %1194 = add i32 %1193, 1
  store i32 %1194, i32* %1181, align 4
  br label %1196

1195:                                             ; preds = %1176
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSPathInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1177, %"class.std::__1::unique_ptr.873"* nonnull dereferenceable(8) %40) #11
  br label %1196

1196:                                             ; preds = %1186, %1195
  %1197 = load %"class.blink::CSSPathInterpolationType"*, %"class.blink::CSSPathInterpolationType"** %1180, align 8
  store %"class.blink::CSSPathInterpolationType"* null, %"class.blink::CSSPathInterpolationType"** %1180, align 8
  %1198 = icmp eq %"class.blink::CSSPathInterpolationType"* %1197, null
  br i1 %1198, label %1204, label %1199

1199:                                             ; preds = %1196
  %1200 = bitcast %"class.blink::CSSPathInterpolationType"* %1197 to void (%"class.blink::CSSPathInterpolationType"*)***
  %1201 = load void (%"class.blink::CSSPathInterpolationType"*)**, void (%"class.blink::CSSPathInterpolationType"*)*** %1200, align 8
  %1202 = getelementptr inbounds void (%"class.blink::CSSPathInterpolationType"*)*, void (%"class.blink::CSSPathInterpolationType"*)** %1201, i64 1
  %1203 = load void (%"class.blink::CSSPathInterpolationType"*)*, void (%"class.blink::CSSPathInterpolationType"*)** %1202, align 8
  call void %1203(%"class.blink::CSSPathInterpolationType"* nonnull %1197) #11
  br label %1204

1204:                                             ; preds = %1196, %1199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1178) #11
  br label %1321

1205:                                             ; preds = %201
  %1206 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1207 = bitcast %"class.std::__1::unique_ptr.1005"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1207) #11
  %1208 = call %"class.blink::CSSBasicShapeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSBasicShapeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1209 = getelementptr inbounds %"class.std::__1::unique_ptr.1005", %"class.std::__1::unique_ptr.1005"* %41, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSBasicShapeInterpolationType"* %1208, %"class.blink::CSSBasicShapeInterpolationType"** %1209, align 8
  %1210 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1206, i64 0, i32 0, i32 0, i32 2
  %1211 = load i32, i32* %1210, align 4
  %1212 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1206, i64 0, i32 0, i32 0, i32 1
  %1213 = load i32, i32* %1212, align 8
  %1214 = icmp eq i32 %1211, %1213
  br i1 %1214, label %1224, label %1215, !prof !4

1215:                                             ; preds = %1205
  %1216 = ptrtoint %"class.blink::CSSBasicShapeInterpolationType"* %1208 to i64
  %1217 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1206, i64 0, i32 0, i32 0, i32 0
  %1218 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1217, align 8
  %1219 = zext i32 %1211 to i64
  %1220 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1218, i64 %1219
  store %"class.blink::CSSBasicShapeInterpolationType"* null, %"class.blink::CSSBasicShapeInterpolationType"** %1209, align 8
  %1221 = bitcast %"class.std::__1::unique_ptr.778"* %1220 to i64*
  store i64 %1216, i64* %1221, align 8
  %1222 = load i32, i32* %1210, align 4
  %1223 = add i32 %1222, 1
  store i32 %1223, i32* %1210, align 4
  br label %1225

1224:                                             ; preds = %1205
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSBasicShapeInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1206, %"class.std::__1::unique_ptr.1005"* nonnull dereferenceable(8) %41) #11
  br label %1225

1225:                                             ; preds = %1215, %1224
  %1226 = load %"class.blink::CSSBasicShapeInterpolationType"*, %"class.blink::CSSBasicShapeInterpolationType"** %1209, align 8
  store %"class.blink::CSSBasicShapeInterpolationType"* null, %"class.blink::CSSBasicShapeInterpolationType"** %1209, align 8
  %1227 = icmp eq %"class.blink::CSSBasicShapeInterpolationType"* %1226, null
  br i1 %1227, label %1233, label %1228

1228:                                             ; preds = %1225
  %1229 = bitcast %"class.blink::CSSBasicShapeInterpolationType"* %1226 to void (%"class.blink::CSSBasicShapeInterpolationType"*)***
  %1230 = load void (%"class.blink::CSSBasicShapeInterpolationType"*)**, void (%"class.blink::CSSBasicShapeInterpolationType"*)*** %1229, align 8
  %1231 = getelementptr inbounds void (%"class.blink::CSSBasicShapeInterpolationType"*)*, void (%"class.blink::CSSBasicShapeInterpolationType"*)** %1230, i64 1
  %1232 = load void (%"class.blink::CSSBasicShapeInterpolationType"*)*, void (%"class.blink::CSSBasicShapeInterpolationType"*)** %1231, align 8
  call void %1232(%"class.blink::CSSBasicShapeInterpolationType"* nonnull %1226) #11
  br label %1233

1233:                                             ; preds = %1225, %1228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1207) #11
  br label %1321

1234:                                             ; preds = %201
  %1235 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1236 = bitcast %"class.std::__1::unique_ptr.1011"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1236) #11
  %1237 = call %"class.blink::CSSRotateInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSRotateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1238 = getelementptr inbounds %"class.std::__1::unique_ptr.1011", %"class.std::__1::unique_ptr.1011"* %42, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSRotateInterpolationType"* %1237, %"class.blink::CSSRotateInterpolationType"** %1238, align 8
  %1239 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1235, i64 0, i32 0, i32 0, i32 2
  %1240 = load i32, i32* %1239, align 4
  %1241 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1235, i64 0, i32 0, i32 0, i32 1
  %1242 = load i32, i32* %1241, align 8
  %1243 = icmp eq i32 %1240, %1242
  br i1 %1243, label %1253, label %1244, !prof !4

1244:                                             ; preds = %1234
  %1245 = ptrtoint %"class.blink::CSSRotateInterpolationType"* %1237 to i64
  %1246 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1235, i64 0, i32 0, i32 0, i32 0
  %1247 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1246, align 8
  %1248 = zext i32 %1240 to i64
  %1249 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1247, i64 %1248
  store %"class.blink::CSSRotateInterpolationType"* null, %"class.blink::CSSRotateInterpolationType"** %1238, align 8
  %1250 = bitcast %"class.std::__1::unique_ptr.778"* %1249 to i64*
  store i64 %1245, i64* %1250, align 8
  %1251 = load i32, i32* %1239, align 4
  %1252 = add i32 %1251, 1
  store i32 %1252, i32* %1239, align 4
  br label %1254

1253:                                             ; preds = %1234
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSRotateInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1235, %"class.std::__1::unique_ptr.1011"* nonnull dereferenceable(8) %42) #11
  br label %1254

1254:                                             ; preds = %1244, %1253
  %1255 = load %"class.blink::CSSRotateInterpolationType"*, %"class.blink::CSSRotateInterpolationType"** %1238, align 8
  store %"class.blink::CSSRotateInterpolationType"* null, %"class.blink::CSSRotateInterpolationType"** %1238, align 8
  %1256 = icmp eq %"class.blink::CSSRotateInterpolationType"* %1255, null
  br i1 %1256, label %1262, label %1257

1257:                                             ; preds = %1254
  %1258 = bitcast %"class.blink::CSSRotateInterpolationType"* %1255 to void (%"class.blink::CSSRotateInterpolationType"*)***
  %1259 = load void (%"class.blink::CSSRotateInterpolationType"*)**, void (%"class.blink::CSSRotateInterpolationType"*)*** %1258, align 8
  %1260 = getelementptr inbounds void (%"class.blink::CSSRotateInterpolationType"*)*, void (%"class.blink::CSSRotateInterpolationType"*)** %1259, i64 1
  %1261 = load void (%"class.blink::CSSRotateInterpolationType"*)*, void (%"class.blink::CSSRotateInterpolationType"*)** %1260, align 8
  call void %1261(%"class.blink::CSSRotateInterpolationType"* nonnull %1255) #11
  br label %1262

1262:                                             ; preds = %1254, %1257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1236) #11
  br label %1321

1263:                                             ; preds = %201, %201
  %1264 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1265 = bitcast %"class.std::__1::unique_ptr.1017"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1265) #11
  %1266 = call %"class.blink::CSSFilterListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSFilterListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1267 = getelementptr inbounds %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1017"* %43, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSFilterListInterpolationType"* %1266, %"class.blink::CSSFilterListInterpolationType"** %1267, align 8
  %1268 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1264, i64 0, i32 0, i32 0, i32 2
  %1269 = load i32, i32* %1268, align 4
  %1270 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1264, i64 0, i32 0, i32 0, i32 1
  %1271 = load i32, i32* %1270, align 8
  %1272 = icmp eq i32 %1269, %1271
  br i1 %1272, label %1282, label %1273, !prof !4

1273:                                             ; preds = %1263
  %1274 = ptrtoint %"class.blink::CSSFilterListInterpolationType"* %1266 to i64
  %1275 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1264, i64 0, i32 0, i32 0, i32 0
  %1276 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1275, align 8
  %1277 = zext i32 %1269 to i64
  %1278 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1276, i64 %1277
  store %"class.blink::CSSFilterListInterpolationType"* null, %"class.blink::CSSFilterListInterpolationType"** %1267, align 8
  %1279 = bitcast %"class.std::__1::unique_ptr.778"* %1278 to i64*
  store i64 %1274, i64* %1279, align 8
  %1280 = load i32, i32* %1268, align 4
  %1281 = add i32 %1280, 1
  store i32 %1281, i32* %1268, align 4
  br label %1283

1282:                                             ; preds = %1263
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSFilterListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1264, %"class.std::__1::unique_ptr.1017"* nonnull dereferenceable(8) %43) #11
  br label %1283

1283:                                             ; preds = %1273, %1282
  %1284 = load %"class.blink::CSSFilterListInterpolationType"*, %"class.blink::CSSFilterListInterpolationType"** %1267, align 8
  store %"class.blink::CSSFilterListInterpolationType"* null, %"class.blink::CSSFilterListInterpolationType"** %1267, align 8
  %1285 = icmp eq %"class.blink::CSSFilterListInterpolationType"* %1284, null
  br i1 %1285, label %1291, label %1286

1286:                                             ; preds = %1283
  %1287 = bitcast %"class.blink::CSSFilterListInterpolationType"* %1284 to void (%"class.blink::CSSFilterListInterpolationType"*)***
  %1288 = load void (%"class.blink::CSSFilterListInterpolationType"*)**, void (%"class.blink::CSSFilterListInterpolationType"*)*** %1287, align 8
  %1289 = getelementptr inbounds void (%"class.blink::CSSFilterListInterpolationType"*)*, void (%"class.blink::CSSFilterListInterpolationType"*)** %1288, i64 1
  %1290 = load void (%"class.blink::CSSFilterListInterpolationType"*)*, void (%"class.blink::CSSFilterListInterpolationType"*)** %1289, align 8
  call void %1290(%"class.blink::CSSFilterListInterpolationType"* nonnull %1284) #11
  br label %1291

1291:                                             ; preds = %1283, %1286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1265) #11
  br label %1321

1292:                                             ; preds = %201
  %1293 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1294 = bitcast %"class.std::__1::unique_ptr.1023"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1294) #11
  %1295 = call %"class.blink::CSSTransformInterpolationType"* @_ZNSt3__111make_uniqueIN5blink29CSSTransformInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %8)
  %1296 = getelementptr inbounds %"class.std::__1::unique_ptr.1023", %"class.std::__1::unique_ptr.1023"* %44, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::CSSTransformInterpolationType"* %1295, %"class.blink::CSSTransformInterpolationType"** %1296, align 8
  %1297 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1293, i64 0, i32 0, i32 0, i32 2
  %1298 = load i32, i32* %1297, align 4
  %1299 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1293, i64 0, i32 0, i32 0, i32 1
  %1300 = load i32, i32* %1299, align 8
  %1301 = icmp eq i32 %1298, %1300
  br i1 %1301, label %1311, label %1302, !prof !4

1302:                                             ; preds = %1292
  %1303 = ptrtoint %"class.blink::CSSTransformInterpolationType"* %1295 to i64
  %1304 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1293, i64 0, i32 0, i32 0, i32 0
  %1305 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1304, align 8
  %1306 = zext i32 %1298 to i64
  %1307 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1305, i64 %1306
  store %"class.blink::CSSTransformInterpolationType"* null, %"class.blink::CSSTransformInterpolationType"** %1296, align 8
  %1308 = bitcast %"class.std::__1::unique_ptr.778"* %1307 to i64*
  store i64 %1303, i64* %1308, align 8
  %1309 = load i32, i32* %1297, align 4
  %1310 = add i32 %1309, 1
  store i32 %1310, i32* %1297, align 4
  br label %1312

1311:                                             ; preds = %1292
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSTransformInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1293, %"class.std::__1::unique_ptr.1023"* nonnull dereferenceable(8) %44) #11
  br label %1312

1312:                                             ; preds = %1302, %1311
  %1313 = load %"class.blink::CSSTransformInterpolationType"*, %"class.blink::CSSTransformInterpolationType"** %1296, align 8
  store %"class.blink::CSSTransformInterpolationType"* null, %"class.blink::CSSTransformInterpolationType"** %1296, align 8
  %1314 = icmp eq %"class.blink::CSSTransformInterpolationType"* %1313, null
  br i1 %1314, label %1320, label %1315

1315:                                             ; preds = %1312
  %1316 = bitcast %"class.blink::CSSTransformInterpolationType"* %1313 to void (%"class.blink::CSSTransformInterpolationType"*)***
  %1317 = load void (%"class.blink::CSSTransformInterpolationType"*)**, void (%"class.blink::CSSTransformInterpolationType"*)*** %1316, align 8
  %1318 = getelementptr inbounds void (%"class.blink::CSSTransformInterpolationType"*)*, void (%"class.blink::CSSTransformInterpolationType"*)** %1317, i64 1
  %1319 = load void (%"class.blink::CSSTransformInterpolationType"*)*, void (%"class.blink::CSSTransformInterpolationType"*)** %1318, align 8
  call void %1319(%"class.blink::CSSTransformInterpolationType"* nonnull %1313) #11
  br label %1320

1320:                                             ; preds = %1312, %1315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1294) #11
  br label %1321

1321:                                             ; preds = %195, %257, %286, %315, %397, %426, %455, %513, %542, %571, %600, %654, %683, %712, %741, %770, %799, %828, %857, %886, %915, %944, %973, %1002, %1031, %1060, %1089, %1118, %1147, %1204, %1233, %1262, %1291, %1320, %201
  %1322 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  %1323 = bitcast %"class.std::__1::unique_ptr.1029"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1323) #11
  %1324 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1324)
  %1325 = call noalias i8* @malloc(i64 32) #11
  %1326 = bitcast i8* %1325 to %"class.blink::CSSDefaultInterpolationType"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1324, i8* nonnull align 8 %103, i64 16, i1 false) #11
  %1327 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %1328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1327, align 8
  %1329 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1328, %"class.WTF::StringImpl"** %1329, align 8
  %1330 = icmp eq %"class.WTF::StringImpl"* %1328, null
  br i1 %1330, label %1348, label %1331

1331:                                             ; preds = %1321
  %1332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1333 = load atomic i32, i32* %1332 monotonic, align 4
  %1334 = and i32 %1333, 2
  %1335 = icmp eq i32 %1334, 0
  br i1 %1335, label %1336, label %1348

1336:                                             ; preds = %1331
  %1337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1328, i64 0, i32 0
  %1338 = load i32, i32* %1337, align 4
  %1339 = zext i32 %1338 to i33
  %1340 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1339, i33 1) #11
  %1341 = extractvalue { i33, i1 } %1340, 1
  %1342 = extractvalue { i33, i1 } %1340, 0
  %1343 = icmp slt i33 %1342, 0
  %1344 = or i1 %1341, %1343
  br i1 %1344, label %1345, label %1346, !prof !4

1345:                                             ; preds = %1336
  call void @llvm.trap() #11
  unreachable

1346:                                             ; preds = %1336
  %1347 = trunc i33 %1342 to i32
  store i32 %1347, i32* %1337, align 4
  br label %1348

1348:                                             ; preds = %1321, %1331, %1346
  call void @_ZN5blink27CSSDefaultInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSDefaultInterpolationType"* %1326, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1324)
  %1349 = getelementptr inbounds %"class.std::__1::unique_ptr.1029", %"class.std::__1::unique_ptr.1029"* %45, i64 0, i32 0, i32 0, i32 0
  %1350 = bitcast %"class.std::__1::unique_ptr.1029"* %45 to i8**
  store i8* %1325, i8** %1350, align 8
  %1351 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1322, i64 0, i32 0, i32 0, i32 2
  %1352 = load i32, i32* %1351, align 4
  %1353 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1322, i64 0, i32 0, i32 0, i32 1
  %1354 = load i32, i32* %1353, align 8
  %1355 = icmp eq i32 %1352, %1354
  br i1 %1355, label %1365, label %1356, !prof !4

1356:                                             ; preds = %1348
  %1357 = ptrtoint i8* %1325 to i64
  %1358 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1322, i64 0, i32 0, i32 0, i32 0
  %1359 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1358, align 8
  %1360 = zext i32 %1352 to i64
  %1361 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1359, i64 %1360
  store %"class.blink::CSSDefaultInterpolationType"* null, %"class.blink::CSSDefaultInterpolationType"** %1349, align 8
  %1362 = bitcast %"class.std::__1::unique_ptr.778"* %1361 to i64*
  store i64 %1357, i64* %1362, align 8
  %1363 = load i32, i32* %1351, align 4
  %1364 = add i32 %1363, 1
  store i32 %1364, i32* %1351, align 4
  br label %1366

1365:                                             ; preds = %1348
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27CSSDefaultInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %1322, %"class.std::__1::unique_ptr.1029"* nonnull dereferenceable(8) %45) #11
  br label %1366

1366:                                             ; preds = %1356, %1365
  %1367 = load %"class.blink::CSSDefaultInterpolationType"*, %"class.blink::CSSDefaultInterpolationType"** %1349, align 8
  store %"class.blink::CSSDefaultInterpolationType"* null, %"class.blink::CSSDefaultInterpolationType"** %1349, align 8
  %1368 = icmp eq %"class.blink::CSSDefaultInterpolationType"* %1367, null
  br i1 %1368, label %1374, label %1369

1369:                                             ; preds = %1366
  %1370 = bitcast %"class.blink::CSSDefaultInterpolationType"* %1367 to void (%"class.blink::CSSDefaultInterpolationType"*)***
  %1371 = load void (%"class.blink::CSSDefaultInterpolationType"*)**, void (%"class.blink::CSSDefaultInterpolationType"*)*** %1370, align 8
  %1372 = getelementptr inbounds void (%"class.blink::CSSDefaultInterpolationType"*)*, void (%"class.blink::CSSDefaultInterpolationType"*)** %1371, i64 1
  %1373 = load void (%"class.blink::CSSDefaultInterpolationType"*)*, void (%"class.blink::CSSDefaultInterpolationType"*)** %1372, align 8
  call void %1373(%"class.blink::CSSDefaultInterpolationType"* nonnull %1367) #11
  br label %1374

1374:                                             ; preds = %1366, %1369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1323) #11
  %1375 = call { %"struct.WTF::KeyValuePair.793"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6insertINS_17HashMapTranslatorISQ_SL_SC_EERKS2_NS5_ISD_NS9_ISD_EEEEEENS_18HashTableAddResultISR_SH_EEOT0_OT1_(%"class.WTF::HashTable.790"* %78, %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.std::__1::unique_ptr.825"* nonnull dereferenceable(8) %7) #11
  %1376 = extractvalue { %"struct.WTF::KeyValuePair.793"*, i8 } %1375, 0
  %1377 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %1376, i64 0, i32 1, i32 0, i32 0, i32 0
  %1378 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %1377, align 8
  %1379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1327, align 8
  %1380 = icmp eq %"class.WTF::StringImpl"* %1379, null
  br i1 %1380, label %1394, label %1381

1381:                                             ; preds = %1374
  %1382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1383 = load atomic i32, i32* %1382 monotonic, align 4
  %1384 = and i32 %1383, 2
  %1385 = icmp eq i32 %1384, 0
  %1386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 0
  %1387 = load i32, i32* %1386, align 4
  br i1 %1385, label %1388, label %1390

1388:                                             ; preds = %1381
  %1389 = add i32 %1387, -1
  store i32 %1389, i32* %1386, align 4
  br label %1390

1390:                                             ; preds = %1388, %1381
  %1391 = phi i32 [ %1389, %1388 ], [ %1387, %1381 ]
  %1392 = icmp eq i32 %1391, 0
  br i1 %1392, label %1393, label %1394

1393:                                             ; preds = %1390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1379) #11
  br label %1394

1394:                                             ; preds = %1374, %1390, %1393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #11
  %1395 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %94, align 8
  store %"class.WTF::Vector.775"* null, %"class.WTF::Vector.775"** %94, align 8
  %1396 = icmp eq %"class.WTF::Vector.775"* %1395, null
  br i1 %1396, label %1429, label %1397

1397:                                             ; preds = %1394
  %1398 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1395, i64 0, i32 0, i32 0, i32 0
  %1399 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %1398, align 8
  %1400 = icmp eq %"class.std::__1::unique_ptr.778"* %1399, null
  br i1 %1400, label %1427, label %1401, !prof !5

1401:                                             ; preds = %1397
  %1402 = bitcast %"class.std::__1::unique_ptr.778"* %1399 to i8*
  %1403 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %1395, i64 0, i32 0, i32 0, i32 2
  %1404 = load i32, i32* %1403, align 4
  %1405 = icmp eq i32 %1404, 0
  br i1 %1405, label %1425, label %1406, !prof !4

1406:                                             ; preds = %1401
  %1407 = zext i32 %1404 to i64
  %1408 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1399, i64 %1407
  br label %1409

1409:                                             ; preds = %1419, %1406
  %1410 = phi %"class.std::__1::unique_ptr.778"* [ %1420, %1419 ], [ %1399, %1406 ]
  %1411 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1410, i64 0, i32 0, i32 0, i32 0
  %1412 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %1411, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %1411, align 8
  %1413 = icmp eq %"class.blink::InterpolationType"* %1412, null
  br i1 %1413, label %1419, label %1414

1414:                                             ; preds = %1409
  %1415 = bitcast %"class.blink::InterpolationType"* %1412 to void (%"class.blink::InterpolationType"*)***
  %1416 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %1415, align 8
  %1417 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %1416, i64 1
  %1418 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %1417, align 8
  call void %1418(%"class.blink::InterpolationType"* nonnull %1412) #11
  br label %1419

1419:                                             ; preds = %1414, %1409
  %1420 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %1410, i64 1
  %1421 = icmp eq %"class.std::__1::unique_ptr.778"* %1420, %1408
  br i1 %1421, label %1422, label %1409

1422:                                             ; preds = %1419
  store i32 0, i32* %1403, align 4
  %1423 = bitcast %"class.WTF::Vector.775"* %1395 to i8**
  %1424 = load i8*, i8** %1423, align 8
  br label %1425

1425:                                             ; preds = %1422, %1401
  %1426 = phi i8* [ %1424, %1422 ], [ %1402, %1401 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1426) #11
  store %"class.std::__1::unique_ptr.778"* null, %"class.std::__1::unique_ptr.778"** %1398, align 8
  br label %1427

1427:                                             ; preds = %1425, %1397
  %1428 = bitcast %"class.WTF::Vector.775"* %1395 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %1428) #11
  br label %1429

1429:                                             ; preds = %1394, %1427
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  br label %1430

1430:                                             ; preds = %89, %1429, %71
  %1431 = phi %"class.WTF::Vector.775"* [ %72, %71 ], [ %91, %89 ], [ %1378, %1429 ]
  ret %"class.WTF::Vector.775"* %1431
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(24) %"class.WTF::HashSet.831"* @_ZN5blink22LayoutAnimationsPolicy21AffectedCSSPropertiesEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSAspectRatioInterpolationType"* @_ZNSt3__111make_uniqueIN5blink31CSSAspectRatioInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSAspectRatioInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSAspectRatioInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSAspectRatioInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSAspectRatioInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 56) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSNumberInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %63, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %50 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = getelementptr inbounds i8, i8* %4, i64 48
  store i8 0, i8* %51, align 8
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %49
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %49
  %60 = phi i32 [ %58, %57 ], [ %56, %49 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %70

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %70

63:                                               ; preds = %1
  %64 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64)
  %65 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %7, i64 16, i1 false)
  %66 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %67 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %67, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %66, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %68 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = getelementptr inbounds i8, i8* %4, i64 48
  store i8 0, i8* %69, align 8
  br label %70

70:                                               ; preds = %59, %62, %63
  %71 = phi i8* [ %29, %59 ], [ %29, %62 ], [ %64, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71)
  ret %"class.blink::CSSNumberInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSColorInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSColorInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSColorInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSColorInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSColorInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSColorInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPaintInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSPaintInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSPaintInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSPaintInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSPaintInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSPaintInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRayInterpolationType"* @_ZNSt3__111make_uniqueIN5blink23CSSRayInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSRayInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink23CSSRayInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink23CSSRayInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSRayInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPathInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSPathInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSPathInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink24CSSPathInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink24CSSPathInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSPathInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSShadowListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSShadowListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSShadowListInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSShadowListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSShadowListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSShadowListInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSImageInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSImageInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSImageInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSImageInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSImageInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSImageInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSImageListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink29CSSImageListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSImageListInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink29CSSImageListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink29CSSImageListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSImageListInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSFontWeightInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSFontWeightInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSFontWeightInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSFontWeightInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSFontWeightInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSFontWeightInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSFontStretchInterpolationType"* @_ZNSt3__111make_uniqueIN5blink31CSSFontStretchInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSFontStretchInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSFontStretchInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink31CSSFontStretchInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSFontStretchInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSFontVariationSettingsInterpolationType"* @_ZNSt3__111make_uniqueIN5blink41CSSFontVariationSettingsInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSFontVariationSettingsInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink41CSSFontVariationSettingsInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink41CSSFontVariationSettingsInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSFontVariationSettingsInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSVisibilityInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSVisibilityInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSVisibilityInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSVisibilityInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSVisibilityInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSVisibilityInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSClipInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSClipInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSClipInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink24CSSClipInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink24CSSClipInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSClipInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSOffsetRotateInterpolationType"* @_ZNSt3__111make_uniqueIN5blink32CSSOffsetRotateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSOffsetRotateInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSOffsetRotateInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSOffsetRotateInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSOffsetRotateInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPositionAxisListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink36CSSPositionAxisListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 56) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSPositionAxisListInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink36CSSPositionAxisListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink36CSSPositionAxisListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSPositionAxisListInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPositionInterpolationType"* @_ZNSt3__111make_uniqueIN5blink28CSSPositionInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 56) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSPositionInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink28CSSPositionInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink28CSSPositionInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSPositionInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSLengthPairInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSLengthPairInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 56) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSLengthPairInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSLengthPairInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSLengthPairInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSLengthPairInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSTranslateInterpolationType"* @_ZNSt3__111make_uniqueIN5blink29CSSTranslateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSTranslateInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink29CSSTranslateInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink29CSSTranslateInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSTranslateInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSTransformOriginInterpolationType"* @_ZNSt3__111make_uniqueIN5blink35CSSTransformOriginInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 56) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSTransformOriginInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSLengthListInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink35CSSTransformOriginInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink35CSSTransformOriginInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSTransformOriginInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSSizeListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink28CSSSizeListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSSizeListInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink28CSSSizeListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink28CSSSizeListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSSizeListInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSBorderImageLengthBoxInterpolationType"* @_ZNSt3__111make_uniqueIN5blink40CSSBorderImageLengthBoxInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSBorderImageLengthBoxInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink40CSSBorderImageLengthBoxInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink40CSSBorderImageLengthBoxInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSBorderImageLengthBoxInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSScaleInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSScaleInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSScaleInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSScaleInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSScaleInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSScaleInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSFontSizeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink28CSSFontSizeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSFontSizeInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink28CSSFontSizeInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink28CSSFontSizeInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSFontSizeInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSTextIndentInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSTextIndentInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSTextIndentInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSTextIndentInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSTextIndentInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSTextIndentInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSImageSliceInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSImageSliceInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSImageSliceInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSImageSliceInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSImageSliceInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSImageSliceInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSBasicShapeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSBasicShapeInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSBasicShapeInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSBasicShapeInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSBasicShapeInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSBasicShapeInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRotateInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSRotateInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSRotateInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSRotateInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSRotateInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSRotateInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSFilterListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSFilterListInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSFilterListInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSFilterListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSFilterListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSFilterListInterpolationType"* %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSTransformInterpolationType"* @_ZNSt3__111make_uniqueIN5blink29CSSTransformInterpolationTypeEJRNS1_14PropertyHandleEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = tail call noalias i8* @malloc(i64 48) #11
  %5 = bitcast i8* %4 to %"class.blink::CSSTransformInterpolationType"*
  %6 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %7 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %6, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !4

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %11, %26
  %29 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %7, i64 16, i1 false)
  %31 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %55

49:                                               ; preds = %1
  %50 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* nonnull align 8 %7, i64 16, i1 false)
  %52 = bitcast i8* %4 to %"class.blink::CSSInterpolationType"*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %53, align 8
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %52, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %54 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink29CSSTransformInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  br label %68

55:                                               ; preds = %47, %28
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %31, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %2, %"class.blink::PropertyRegistration"* null) #11
  %56 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink29CSSTransformInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = load atomic i32, i32* %33 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #11
  br label %68

68:                                               ; preds = %49, %64, %67
  %69 = phi i8* [ %50, %49 ], [ %29, %64 ], [ %29, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  ret %"class.blink::CSSTransformInterpolationType"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24CSSInterpolationTypesMap7VersionEv(%"class.blink::CSSInterpolationTypesMap"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationTypesMap", %"class.blink::CSSInterpolationTypesMap"* %0, i64 0, i32 1
  %3 = load %"class.blink::PropertyRegistry"*, %"class.blink::PropertyRegistry"** %2, align 8
  %4 = icmp eq %"class.blink::PropertyRegistry"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PropertyRegistry", %"class.blink::PropertyRegistry"* %3, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24CSSInterpolationTypesMap36CreateInterpolationTypesForCSSSyntaxERKN3WTF12AtomicStringERKNS_19CSSSyntaxDefinitionERKNS_20PropertyRegistrationE(%"class.WTF::Vector.775"* noalias sret, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CSSSyntaxDefinition"* nocapture readonly dereferenceable(16), %"class.blink::PropertyRegistration"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.blink::PropertyRegistration"*, align 8
  %7 = alloca %"class.blink::PropertyRegistration"*, align 8
  %8 = alloca %"class.blink::PropertyRegistration"*, align 8
  %9 = alloca %"class.blink::PropertyRegistration"*, align 8
  %10 = alloca %"class.blink::PropertyRegistration"*, align 8
  %11 = alloca %"class.blink::PropertyRegistration"*, align 8
  %12 = alloca %"class.blink::PropertyRegistration"*, align 8
  %13 = alloca %"class.blink::PropertyRegistration"*, align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.blink::PropertyHandle", align 8
  %16 = alloca %"class.blink::PropertyHandle", align 8
  %17 = alloca %"class.blink::PropertyHandle", align 8
  %18 = alloca %"class.std::__1::unique_ptr.1035", align 8
  %19 = alloca %"class.std::__1::unique_ptr.1041", align 8
  %20 = alloca { i32, %union.anon.781 }, align 8
  %21 = alloca %"class.blink::PropertyRegistration"*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::__1::unique_ptr.1029", align 8
  %25 = bitcast %"class.blink::PropertyHandle"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = bitcast %"class.blink::PropertyHandle"* %17 to i64*
  store i64 -6148914691236517206, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %17, i64 0, i32 0
  store i32 3, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %17, i64 0, i32 1, i32 0
  %29 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() #11
  store %"class.blink::CSSProperty"* %29, %"class.blink::CSSProperty"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #11
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !4

48:                                               ; preds = %39
  tail call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %4, %34, %49
  %52 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %55 = bitcast %"class.WTF::Vector.775"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  %56 = bitcast %"class.std::__1::unique_ptr.1035"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = tail call noalias i8* @malloc(i64 48) #11
  %58 = bitcast i8* %57 to %"class.blink::CSSVarCycleInterpolationType"*
  call void @_ZN5blink28CSSVarCycleInterpolationTypeC1ERKNS_14PropertyHandleERKNS_20PropertyRegistrationE(%"class.blink::CSSVarCycleInterpolationType"* %58, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %17, %"class.blink::PropertyRegistration"* dereferenceable(64) %3) #11
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1035", %"class.std::__1::unique_ptr.1035"* %18, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::unique_ptr.1035"* %18 to i8**
  store i8* %57, i8** %60, align 8
  %61 = load i32, i32* %54, align 4
  %62 = load i32, i32* %53, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %72, label %64, !prof !4

64:                                               ; preds = %51
  %65 = ptrtoint i8* %57 to i64
  %66 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %52, align 8
  %67 = zext i32 %61 to i64
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %66, i64 %67
  store %"class.blink::CSSVarCycleInterpolationType"* null, %"class.blink::CSSVarCycleInterpolationType"** %59, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.778"* %68 to i64*
  store i64 %65, i64* %69, align 8
  %70 = load i32, i32* %54, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %54, align 4
  br label %73

72:                                               ; preds = %51
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSVarCycleInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %0, %"class.std::__1::unique_ptr.1035"* nonnull dereferenceable(8) %18) #11
  br label %73

73:                                               ; preds = %64, %72
  %74 = load %"class.blink::CSSVarCycleInterpolationType"*, %"class.blink::CSSVarCycleInterpolationType"** %59, align 8
  store %"class.blink::CSSVarCycleInterpolationType"* null, %"class.blink::CSSVarCycleInterpolationType"** %59, align 8
  %75 = icmp eq %"class.blink::CSSVarCycleInterpolationType"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::CSSVarCycleInterpolationType"* %74 to void (%"class.blink::CSSVarCycleInterpolationType"*)***
  %78 = load void (%"class.blink::CSSVarCycleInterpolationType"*)**, void (%"class.blink::CSSVarCycleInterpolationType"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::CSSVarCycleInterpolationType"*)*, void (%"class.blink::CSSVarCycleInterpolationType"*)** %78, i64 1
  %80 = load void (%"class.blink::CSSVarCycleInterpolationType"*)*, void (%"class.blink::CSSVarCycleInterpolationType"*)** %79, align 8
  call void %80(%"class.blink::CSSVarCycleInterpolationType"* nonnull %74) #11
  br label %81

81:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %82 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::CSSSyntaxComponent"*, %"class.blink::CSSSyntaxComponent"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %83, i64 %86
  %88 = icmp eq i32 %85, 0
  br i1 %88, label %109, label %89

89:                                               ; preds = %81
  %90 = bitcast %"class.std::__1::unique_ptr.1041"* %19 to i8*
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1041", %"class.std::__1::unique_ptr.1041"* %19, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast { i32, %union.anon.781 }* %20 to i8*
  %93 = bitcast %"class.blink::PropertyHandle"* %15 to i8*
  %94 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %95 = bitcast %"class.blink::PropertyRegistration"** %13 to i8*
  %96 = bitcast %"class.blink::PropertyRegistration"** %12 to i8*
  %97 = bitcast %"class.blink::PropertyRegistration"** %11 to i8*
  %98 = bitcast %"class.blink::PropertyRegistration"** %10 to i8*
  %99 = bitcast %"class.blink::PropertyRegistration"** %9 to i8*
  %100 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %101 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %102 = bitcast %"class.blink::PropertyRegistration"** %8 to i8*
  %103 = bitcast %"class.blink::PropertyRegistration"** %7 to i8*
  %104 = bitcast %"class.blink::PropertyRegistration"** %6 to i8*
  %105 = bitcast %"class.blink::PropertyRegistration"** %21 to i8*
  %106 = bitcast i32* %22 to i8*
  %107 = bitcast i32* %23 to i8*
  %108 = bitcast %"class.std::__1::unique_ptr.1041"* %19 to i64*
  br label %174

109:                                              ; preds = %304, %81
  %110 = bitcast %"class.std::__1::unique_ptr.1029"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  %111 = bitcast %"class.blink::PropertyHandle"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111)
  %112 = call noalias i8* @malloc(i64 32) #11
  %113 = bitcast i8* %112 to %"class.blink::CSSDefaultInterpolationType"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %111, i8* nonnull align 8 %25, i64 16, i1 false) #11
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %115 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #11
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !4

131:                                              ; preds = %122
  call void @llvm.trap() #11
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4
  br label %134

134:                                              ; preds = %109, %117, %132
  call void @_ZN5blink27CSSDefaultInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSDefaultInterpolationType"* %113, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111)
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.1029", %"class.std::__1::unique_ptr.1029"* %24, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.1029"* %24 to i8**
  store i8* %112, i8** %136, align 8
  %137 = load i32, i32* %54, align 4
  %138 = load i32, i32* %53, align 8
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %148, label %140, !prof !4

140:                                              ; preds = %134
  %141 = ptrtoint i8* %112 to i64
  %142 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %52, align 8
  %143 = zext i32 %137 to i64
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %142, i64 %143
  store %"class.blink::CSSDefaultInterpolationType"* null, %"class.blink::CSSDefaultInterpolationType"** %135, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.778"* %144 to i64*
  store i64 %141, i64* %145, align 8
  %146 = load i32, i32* %54, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %54, align 4
  br label %149

148:                                              ; preds = %134
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27CSSDefaultInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %0, %"class.std::__1::unique_ptr.1029"* nonnull dereferenceable(8) %24) #11
  br label %149

149:                                              ; preds = %140, %148
  %150 = load %"class.blink::CSSDefaultInterpolationType"*, %"class.blink::CSSDefaultInterpolationType"** %135, align 8
  store %"class.blink::CSSDefaultInterpolationType"* null, %"class.blink::CSSDefaultInterpolationType"** %135, align 8
  %151 = icmp eq %"class.blink::CSSDefaultInterpolationType"* %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.blink::CSSDefaultInterpolationType"* %150 to void (%"class.blink::CSSDefaultInterpolationType"*)***
  %154 = load void (%"class.blink::CSSDefaultInterpolationType"*)**, void (%"class.blink::CSSDefaultInterpolationType"*)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::CSSDefaultInterpolationType"*)*, void (%"class.blink::CSSDefaultInterpolationType"*)** %154, i64 1
  %156 = load void (%"class.blink::CSSDefaultInterpolationType"*)*, void (%"class.blink::CSSDefaultInterpolationType"*)** %155, align 8
  call void %156(%"class.blink::CSSDefaultInterpolationType"* nonnull %150) #11
  br label %157

157:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #11
  br label %173

173:                                              ; preds = %157, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  ret void

174:                                              ; preds = %89, %304
  %175 = phi %"class.blink::CSSSyntaxComponent"* [ %83, %89 ], [ %305, %304 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  store %"class.blink::CSSInterpolationType"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSInterpolationType"*), %"class.blink::CSSInterpolationType"** %91, align 8
  %176 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %175, i64 0, i32 0
  %177 = load i32, i32* %176, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 8 %25, i64 16, i1 false)
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %197, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %197

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i33
  %189 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %188, i33 1) #11
  %190 = extractvalue { i33, i1 } %189, 1
  %191 = extractvalue { i33, i1 } %189, 0
  %192 = icmp slt i33 %191, 0
  %193 = or i1 %190, %192
  br i1 %193, label %194, label %195, !prof !4

194:                                              ; preds = %185
  call void @llvm.trap() #11
  unreachable

195:                                              ; preds = %185
  %196 = trunc i33 %191 to i32
  store i32 %196, i32* %186, align 4
  br label %197

197:                                              ; preds = %174, %180, %195
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* nonnull align 8 %92, i64 16, i1 false)
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %94, align 8
  switch i32 %177, label %247 [
    i32 10, label %198
    i32 6, label %201
    i32 2, label %204
    i32 5, label %207
    i32 4, label %229
    i32 3, label %232
    i32 12, label %235
    i32 11, label %238
    i32 9, label %241
  ]

198:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %6, align 8
  %199 = call %"class.blink::CSSAngleInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSAngleInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %6) #11
  %200 = ptrtoint %"class.blink::CSSAngleInterpolationType"* %199 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #11
  br label %244

201:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %7, align 8
  %202 = call %"class.blink::CSSColorInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSColorInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %7) #11
  %203 = ptrtoint %"class.blink::CSSColorInterpolationType"* %202 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #11
  br label %244

204:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %8, align 8
  %205 = call %"class.blink::CSSCustomLengthInterpolationType"* @_ZNSt3__111make_uniqueIN5blink32CSSCustomLengthInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %8) #11
  %206 = ptrtoint %"class.blink::CSSCustomLengthInterpolationType"* %205 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %244

207:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %208 = call noalias i8* @malloc(i64 56) #11
  %209 = bitcast i8* %208 to %"class.blink::CSSLengthInterpolationType"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* nonnull align 8 %93, i64 16, i1 false) #11
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %101, align 8
  br i1 %179, label %227, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %227

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #11
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !4

224:                                              ; preds = %215
  call void @llvm.trap() #11
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %227

227:                                              ; preds = %225, %210, %207
  call void @_ZN5blink26CSSLengthInterpolationTypeC1ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSLengthInterpolationType"* %209, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %5, %"class.blink::PropertyRegistration"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  %228 = ptrtoint i8* %208 to i64
  br label %244

229:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %9, align 8
  %230 = call %"class.blink::CSSPercentageInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSPercentageInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %9) #11
  %231 = ptrtoint %"class.blink::CSSPercentageInterpolationType"* %230 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  br label %244

232:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %10, align 8
  %233 = call %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %10) #11
  %234 = ptrtoint %"class.blink::CSSNumberInterpolationType"* %233 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #11
  br label %244

235:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %11, align 8
  %236 = call %"class.blink::CSSResolutionInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSResolutionInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %11) #11
  %237 = ptrtoint %"class.blink::CSSResolutionInterpolationType"* %236 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  br label %244

238:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %12, align 8
  %239 = call %"class.blink::CSSTimeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSTimeInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %12) #11
  %240 = ptrtoint %"class.blink::CSSTimeInterpolationType"* %239 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #11
  br label %244

241:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  store i8 1, i8* %14, align 1
  %242 = call %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %15, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %13, i8* nonnull dereferenceable(1) %14) #11
  %243 = ptrtoint %"class.blink::CSSNumberInterpolationType"* %242 to i64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #11
  br label %244

244:                                              ; preds = %198, %201, %204, %227, %229, %232, %235, %238, %241
  %245 = phi i64 [ %200, %198 ], [ %203, %201 ], [ %206, %204 ], [ %228, %227 ], [ %231, %229 ], [ %234, %232 ], [ %237, %235 ], [ %240, %238 ], [ %243, %241 ]
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  br label %247

247:                                              ; preds = %244, %197
  %248 = phi %"class.WTF::StringImpl"* [ %246, %244 ], [ %178, %197 ]
  %249 = phi i64 [ %245, %244 ], [ 0, %197 ]
  %250 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %248) #11
  br label %264

264:                                              ; preds = %247, %260, %263
  %265 = inttoptr i64 %249 to %"class.blink::CSSInterpolationType"*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  store %"class.blink::CSSInterpolationType"* %265, %"class.blink::CSSInterpolationType"** %91, align 8
  %266 = icmp eq i64 %249, 0
  br i1 %266, label %304, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %175, i64 0, i32 3
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %283, label %271

271:                                              ; preds = %267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #11
  store %"class.blink::PropertyRegistration"* %3, %"class.blink::PropertyRegistration"** %21, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #11
  %272 = load i32, i32* %176, align 8
  store i32 %272, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #11
  store i32 %269, i32* %23, align 4
  %273 = call %"class.blink::CSSCustomListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSCustomListInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationENS_10unique_ptrINS1_20CSSInterpolationTypeENS_14default_deleteIS9_EEEENS1_13CSSSyntaxTypeENS1_15CSSSyntaxRepeatEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %17, %"class.blink::PropertyRegistration"** nonnull dereferenceable(8) %21, %"class.std::__1::unique_ptr.1041"* nonnull dereferenceable(8) %19, i32* nonnull dereferenceable(4) %22, i32* nonnull dereferenceable(4) %23)
  %274 = getelementptr inbounds %"class.blink::CSSCustomListInterpolationType", %"class.blink::CSSCustomListInterpolationType"* %273, i64 0, i32 0
  %275 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %91, align 8
  store %"class.blink::CSSInterpolationType"* %274, %"class.blink::CSSInterpolationType"** %91, align 8
  %276 = icmp eq %"class.blink::CSSInterpolationType"* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %271
  %278 = bitcast %"class.blink::CSSInterpolationType"* %275 to void (%"class.blink::CSSInterpolationType"*)***
  %279 = load void (%"class.blink::CSSInterpolationType"*)**, void (%"class.blink::CSSInterpolationType"*)*** %278, align 8
  %280 = getelementptr inbounds void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %279, i64 1
  %281 = load void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %280, align 8
  call void %281(%"class.blink::CSSInterpolationType"* nonnull %275) #11
  br label %282

282:                                              ; preds = %277, %271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #11
  br label %283

283:                                              ; preds = %267, %282
  %284 = load i32, i32* %54, align 4
  %285 = load i32, i32* %53, align 8
  %286 = icmp eq i32 %284, %285
  br i1 %286, label %295, label %287, !prof !4

287:                                              ; preds = %283
  %288 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %52, align 8
  %289 = zext i32 %284 to i64
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %288, i64 %289
  %291 = load i64, i64* %108, align 8
  store %"class.blink::CSSInterpolationType"* null, %"class.blink::CSSInterpolationType"** %91, align 8
  %292 = bitcast %"class.std::__1::unique_ptr.778"* %290 to i64*
  store i64 %291, i64* %292, align 8
  %293 = load i32, i32* %54, align 4
  %294 = add i32 %293, 1
  store i32 %294, i32* %54, align 4
  br label %296

295:                                              ; preds = %283
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_20CSSInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"* %0, %"class.std::__1::unique_ptr.1041"* nonnull dereferenceable(8) %19) #11
  br label %296

296:                                              ; preds = %287, %295
  %297 = load %"class.blink::CSSInterpolationType"*, %"class.blink::CSSInterpolationType"** %91, align 8
  store %"class.blink::CSSInterpolationType"* null, %"class.blink::CSSInterpolationType"** %91, align 8
  %298 = icmp eq %"class.blink::CSSInterpolationType"* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %296
  %300 = bitcast %"class.blink::CSSInterpolationType"* %297 to void (%"class.blink::CSSInterpolationType"*)***
  %301 = load void (%"class.blink::CSSInterpolationType"*)**, void (%"class.blink::CSSInterpolationType"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %301, i64 1
  %303 = load void (%"class.blink::CSSInterpolationType"*)*, void (%"class.blink::CSSInterpolationType"*)** %302, align 8
  call void %303(%"class.blink::CSSInterpolationType"* nonnull %297) #11
  br label %304

304:                                              ; preds = %264, %299, %296
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  %305 = getelementptr inbounds %"class.blink::CSSSyntaxComponent", %"class.blink::CSSSyntaxComponent"* %175, i64 1
  %306 = icmp eq %"class.blink::CSSSyntaxComponent"* %305, %87
  br i1 %306, label %109, label %174
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSCustomListInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSCustomListInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationENS_10unique_ptrINS1_20CSSInterpolationTypeENS_14default_deleteIS9_EEEENS1_13CSSSyntaxTypeENS1_15CSSSyntaxRepeatEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8), %"class.std::__1::unique_ptr.1041"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #4 comdat {
  %6 = alloca %"class.blink::PropertyHandle", align 8
  %7 = alloca { i32, %union.anon.781 }, align 8
  %8 = tail call noalias i8* @malloc(i64 64) #11
  %9 = bitcast i8* %8 to %"class.blink::CSSCustomListInterpolationType"*
  %10 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %11 = bitcast { i32, %union.anon.781 }* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %10, i64 16, i1 false)
  %12 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !4

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %5, %15, %30
  %33 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.1041", %"class.std::__1::unique_ptr.1041"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::unique_ptr.1041"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store %"class.blink::CSSInterpolationType"* null, %"class.blink::CSSInterpolationType"** %34, align 8
  %37 = load i32, i32* %4, align 4
  %38 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %39 = bitcast %"class.blink::PropertyHandle"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %11, i64 16, i1 false)
  %40 = bitcast i8* %8 to %"class.blink::CSSInterpolationType"*
  %41 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %41, align 8
  br i1 %14, label %76, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #11
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !4

56:                                               ; preds = %47
  tail call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %57, %42
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %40, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %6, %"class.blink::PropertyRegistration"* %33) #11
  %60 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSCustomListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %61 = getelementptr inbounds i8, i8* %8, i64 48
  %62 = bitcast i8* %61 to i64*
  store i64 %36, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %8, i64 56
  %64 = bitcast i8* %63 to i32*
  store i32 %37, i32* %64, align 8
  %65 = load atomic i32, i32* %43 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %59
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %59
  %73 = phi i32 [ %71, %70 ], [ %69, %59 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #11
  br label %82

76:                                               ; preds = %32
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %40, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %6, %"class.blink::PropertyRegistration"* %33) #11
  %77 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSCustomListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds i8, i8* %8, i64 48
  %79 = bitcast i8* %78 to i64*
  store i64 %36, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %8, i64 56
  %81 = bitcast i8* %80 to i32*
  store i32 %37, i32* %81, align 8
  br label %82

82:                                               ; preds = %72, %75, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  ret %"class.blink::CSSCustomListInterpolationType"* %9
}

declare void @__cxa_pure_virtual() unnamed_addr

declare %"class.blink::PropertyRegistration"* @_ZNK5blink16PropertyRegistry12RegistrationERKN3WTF12AtomicStringE(%"class.blink::PropertyRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink22GetCSSPropertyVariableEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSAngleInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSAngleInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSAngleInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSAngleInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  br label %67

54:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %55 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSAngleInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %67

67:                                               ; preds = %52, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSAngleInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSColorInterpolationType"* @_ZNSt3__111make_uniqueIN5blink25CSSColorInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSColorInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSColorInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  br label %67

54:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %55 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink25CSSColorInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %67

67:                                               ; preds = %52, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSColorInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSCustomLengthInterpolationType"* @_ZNSt3__111make_uniqueIN5blink32CSSCustomLengthInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSCustomLengthInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSCustomLengthInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  br label %67

54:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %55 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink32CSSCustomLengthInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %67

67:                                               ; preds = %52, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSCustomLengthInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPercentageInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSPercentageInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSPercentageInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSPercentageInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  br label %67

54:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %55 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSPercentageInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %67

67:                                               ; preds = %52, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSPercentageInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 56) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSNumberInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %66, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %5, i64 48
  store i8 0, i8* %54, align 8
  %55 = load atomic i32, i32* %36 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %52
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %52
  %63 = phi i32 [ %61, %60 ], [ %59, %52 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %69

66:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %67 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %5, i64 48
  store i8 0, i8* %68, align 8
  br label %69

69:                                               ; preds = %62, %65, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSNumberInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSResolutionInterpolationType"* @_ZNSt3__111make_uniqueIN5blink30CSSResolutionInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSResolutionInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSResolutionInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  br label %67

54:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %55 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSResolutionInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %67

67:                                               ; preds = %52, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSResolutionInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSTimeInterpolationType"* @_ZNSt3__111make_uniqueIN5blink24CSSTimeInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8)) local_unnamed_addr #4 comdat {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca { i32, %union.anon.781 }, align 8
  %5 = tail call noalias i8* @malloc(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::CSSTimeInterpolationType"*
  %7 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %8 = bitcast { i32, %union.anon.781 }* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %7, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !4

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %31 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %8, i64 16, i1 false)
  %33 = bitcast i8* %5 to %"class.blink::CSSInterpolationType"*
  %34 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %34, align 8
  br i1 %11, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !4

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %29
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %53 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink24CSSTimeInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  br label %67

54:                                               ; preds = %50, %35
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %33, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* %30) #11
  %55 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink24CSSTimeInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #11
  br label %67

67:                                               ; preds = %52, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  ret %"class.blink::CSSTimeInterpolationType"* %6
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSNumberInterpolationType"* @_ZNSt3__111make_uniqueIN5blink26CSSNumberInterpolationTypeEJRNS1_14PropertyHandleEPKNS1_20PropertyRegistrationEbEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"** dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca { i32, %union.anon.781 }, align 8
  %6 = tail call noalias i8* @malloc(i64 56) #11
  %7 = bitcast i8* %6 to %"class.blink::CSSNumberInterpolationType"*
  %8 = bitcast %"class.blink::PropertyHandle"* %0 to i8*
  %9 = bitcast { i32, %union.anon.781 }* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %8, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !4

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %3, %13, %28
  %31 = load %"class.blink::PropertyRegistration"*, %"class.blink::PropertyRegistration"** %1, align 8
  %32 = load i8, i8* %2, align 1, !range !3
  %33 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %34 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %9, i64 16, i1 false)
  %35 = bitcast i8* %6 to %"class.blink::CSSInterpolationType"*
  %36 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %36, align 8
  br i1 %12, label %68, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #11
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !4

51:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %35, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %4, %"class.blink::PropertyRegistration"* %31) #11
  %55 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %55, align 8
  %56 = getelementptr inbounds i8, i8* %6, i64 48
  store i8 %32, i8* %56, align 8
  %57 = load atomic i32, i32* %38 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %54
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %54
  %65 = phi i32 [ %63, %62 ], [ %61, %54 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #11
  br label %71

68:                                               ; preds = %30
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %35, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %4, %"class.blink::PropertyRegistration"* %31) #11
  %69 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink26CSSNumberInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %6, i64 48
  store i8 %32, i8* %70, align 8
  br label %71

71:                                               ; preds = %64, %67, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  ret %"class.blink::CSSNumberInterpolationType"* %7
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8, %"class.blink::PropertyRegistration"*) unnamed_addr #1

declare void @_ZN5blink26CSSLengthInterpolationTypeC1ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSLengthInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8, %"class.blink::PropertyRegistration"*) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.793"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6LookupINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EEPKSH_RKT0_(%"class.WTF::HashTable.790"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.793"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #11
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.781* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  store i32 0, i32* %20, align 8, !alias.scope !6
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11, !alias.scope !6
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #11
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #11
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair.793"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair.793"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSLengthInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.835"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.835", %"class.std::__1::unique_ptr.835"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.835"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSLengthInterpolationType"* null, %"class.blink::CSSLengthInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_31CSSAspectRatioInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.843"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.843", %"class.std::__1::unique_ptr.843"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.843"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSAspectRatioInterpolationType"* null, %"class.blink::CSSAspectRatioInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSNumberInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.849"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.849", %"class.std::__1::unique_ptr.849"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.849"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSNumberInterpolationType"* null, %"class.blink::CSSNumberInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSColorInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.855"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.855", %"class.std::__1::unique_ptr.855"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.855"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSColorInterpolationType"* null, %"class.blink::CSSColorInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSPaintInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.861"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.861", %"class.std::__1::unique_ptr.861"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.861"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSPaintInterpolationType"* null, %"class.blink::CSSPaintInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23CSSRayInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.867"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.867", %"class.std::__1::unique_ptr.867"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.867"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSRayInterpolationType"* null, %"class.blink::CSSRayInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSPathInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.873"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.873"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.873"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSPathInterpolationType"* null, %"class.blink::CSSPathInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSShadowListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.879"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.879", %"class.std::__1::unique_ptr.879"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.879"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSShadowListInterpolationType"* null, %"class.blink::CSSShadowListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSImageInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.885"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.885", %"class.std::__1::unique_ptr.885"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.885"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSImageInterpolationType"* null, %"class.blink::CSSImageInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSImageListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.891"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.891", %"class.std::__1::unique_ptr.891"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.891"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSImageListInterpolationType"* null, %"class.blink::CSSImageListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare void @_ZN5blink30CSSLengthListInterpolationTypeC1ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSLengthListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.897"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.897"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.897"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSLengthListInterpolationType"* null, %"class.blink::CSSLengthListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSFontWeightInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.903"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.903", %"class.std::__1::unique_ptr.903"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.903"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSFontWeightInterpolationType"* null, %"class.blink::CSSFontWeightInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_31CSSFontStretchInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.909"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.909", %"class.std::__1::unique_ptr.909"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.909"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSFontStretchInterpolationType"* null, %"class.blink::CSSFontStretchInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_41CSSFontVariationSettingsInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.915"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.915", %"class.std::__1::unique_ptr.915"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.915"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSFontVariationSettingsInterpolationType"* null, %"class.blink::CSSFontVariationSettingsInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSVisibilityInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.921"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.921", %"class.std::__1::unique_ptr.921"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.921"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSVisibilityInterpolationType"* null, %"class.blink::CSSVisibilityInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_24CSSClipInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.927"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.927", %"class.std::__1::unique_ptr.927"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.927"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSClipInterpolationType"* null, %"class.blink::CSSClipInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_32CSSOffsetRotateInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.933"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.933", %"class.std::__1::unique_ptr.933"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.933"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSOffsetRotateInterpolationType"* null, %"class.blink::CSSOffsetRotateInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_36CSSPositionAxisListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.939"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.939", %"class.std::__1::unique_ptr.939"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.939"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSPositionAxisListInterpolationType"* null, %"class.blink::CSSPositionAxisListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28CSSPositionInterpolationTypeD0Ev(%"class.blink::CSSPositionInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPositionInterpolationType", %"class.blink::CSSPositionInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSPositionInterpolationType", %"class.blink::CSSPositionInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSPositionInterpolationType", %"class.blink::CSSPositionInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSPositionInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1106"*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1106"* %6) #11
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.1106"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.1106"* %6) #11
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #11
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #11
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #11
  %45 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.1105"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.1105"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #11
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #11
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #11
  %70 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.1105"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.1105"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #11
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #11
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1106"*) unnamed_addr #1

declare void @_ZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* sret, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink30CSSLengthListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #1

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.1106"*) unnamed_addr #1

declare void @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.1106"*) unnamed_addr #1

declare void @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"class.WTF::Vector.1106"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSPositionInterpolationType"*, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 9
  %9 = icmp eq %"class.blink::CSSValue"* %2, null
  %10 = or i1 %9, %8
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  br label %15

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSValuePair"*
  tail call void @_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUlmE_EENS_18InterpolationValueEjT_(%"struct.blink::InterpolationValue"* sret %0, i32 2, %"class.blink::CSSValuePair"* nonnull %14)
  br label %15

15:                                               ; preds = %13, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.1106"*) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

declare void @_ZNK5blink30CSSLengthListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

declare void @_ZNK5blink30CSSLengthListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.1097"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.1103* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #11
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #11
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUlmE_EENS_18InterpolationValueEjT_(%"struct.blink::InterpolationValue"* noalias sret, i32, %"class.blink::CSSValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.1848", align 8
  %5 = alloca %"struct.blink::InterpolationValue", align 8
  %6 = icmp eq i32 %1, 0
  %7 = tail call noalias i8* @malloc(i64 24) #11
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  br i1 %6, label %10, label %15

10:                                               ; preds = %3
  %11 = ptrtoint i8* %7 to i64
  %12 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11, !noalias !11
  store i64 %11, i64* %12, align 8, !alias.scope !11
  %13 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %14 = bitcast %class.scoped_refptr.1103* %13 to i64*
  store i64 0, i64* %14, align 8, !alias.scope !11
  br label %213

15:                                               ; preds = %3
  %16 = bitcast i8* %9 to %"class.std::__1::unique_ptr.1097"**
  store %"class.std::__1::unique_ptr.1097"* null, %"class.std::__1::unique_ptr.1097"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = zext i32 %1 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %19) #11
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8* %9 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %18, align 8
  %26 = shl nuw nsw i64 %19, 3
  %27 = getelementptr inbounds i8, i8* %7, i64 20
  %28 = bitcast i8* %27 to i32*
  store i32 %1, i32* %28, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 %26, i1 false) #11
  %29 = ptrtoint i8* %7 to i64
  %30 = bitcast %"class.WTF::Vector.1848"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %19) #11
  %35 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11
  %36 = ptrtoint i8* %35 to i64
  %37 = bitcast %"class.WTF::Vector.1848"* %4 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %34, 3
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %32, align 8
  store i32 %1, i32* %33, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %26, i1 false) #11
  %40 = bitcast %"struct.blink::InterpolationValue"* %5 to i8*
  %41 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1
  %43 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %2, i64 0, i32 2, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %2, i64 0, i32 3, i32 0, i32 0
  %46 = bitcast i8* %9 to %"class.WTF::Vector.1840"*
  %47 = bitcast %class.scoped_refptr.1103* %42 to i64*
  %48 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %49 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1, i32 0
  %50 = bitcast %"struct.blink::InterpolationValue"* %5 to i8*
  br label %53

51:                                               ; preds = %118
  %52 = icmp eq i32 %120, %1
  br i1 %52, label %121, label %53

53:                                               ; preds = %51, %15
  %54 = phi i32 [ 0, %15 ], [ %120, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #11
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %55, %"class.blink::CSSValue"** %44, %"class.blink::CSSValue"** %45
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  %57 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %56, align 8, !noalias !14
  call void @_ZN5blink36CSSPositionAxisListInterpolationType27ConvertPositionAxisCSSValueERKNS_8CSSValueE(%"struct.blink::InterpolationValue"* nonnull sret %5, %"class.blink::CSSValue"* dereferenceable(3) %57) #11
  %58 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %41, align 8
  %59 = icmp eq %"class.blink::InterpolableValue"* %58, null
  br i1 %59, label %60, label %61

60:                                               ; preds = %53
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #11
  br label %93

61:                                               ; preds = %53
  %62 = ptrtoint %"class.blink::InterpolableValue"* %58 to i64
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %41, align 8
  %63 = call dereferenceable(8) %"class.std::__1::unique_ptr.1097"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1840"* %46, i32 %54) #11
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1097"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %64, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.1097"* %63 to i64*
  store i64 %62, i64* %66, align 8
  %67 = icmp eq %"class.blink::InterpolableValue"* %65, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.blink::InterpolableValue"* %65 to void (%"class.blink::InterpolableValue"*)***
  %70 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %70, i64 1
  %72 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %71, align 8
  call void %72(%"class.blink::InterpolableValue"* nonnull %65) #11
  br label %73

73:                                               ; preds = %61, %68
  %74 = load i64, i64* %47, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %43, align 8
  %75 = call dereferenceable(8) %class.scoped_refptr.1103* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1848"* nonnull %4, i32 %54) #11
  %76 = bitcast %class.scoped_refptr.1103* %75 to i64*
  %77 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %75, i64 0, i32 0
  %78 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %77, align 8
  store i64 %74, i64* %76, align 8
  %79 = icmp eq %"class.blink::NonInterpolableValue"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %81, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #11
  %83 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.1105"* %87 to %"class.blink::NonInterpolableValue"*
  %89 = bitcast %"class.base::RefCounted.1105"* %87 to void (%"class.blink::NonInterpolableValue"*)***
  %90 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %90, i64 1
  %92 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %91, align 8
  call void %92(%"class.blink::NonInterpolableValue"* nonnull %88) #11
  br label %93

93:                                               ; preds = %86, %80, %73, %60
  %94 = phi i32 [ 1, %60 ], [ 0, %73 ], [ 0, %80 ], [ 0, %86 ]
  %95 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %49, align 8
  %96 = icmp eq %"class.blink::NonInterpolableValue"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %95, i64 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %98, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %99) #11
  %100 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %98, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %98, i64 -2
  %105 = bitcast %"class.base::RefCounted.1105"* %104 to %"class.blink::NonInterpolableValue"*
  %106 = bitcast %"class.base::RefCounted.1105"* %104 to void (%"class.blink::NonInterpolableValue"*)***
  %107 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %107, i64 1
  %109 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %108, align 8
  call void %109(%"class.blink::NonInterpolableValue"* nonnull %105) #11
  br label %110

110:                                              ; preds = %103, %97, %93
  %111 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %41, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %41, align 8
  %112 = icmp eq %"class.blink::InterpolableValue"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %110
  %114 = bitcast %"class.blink::InterpolableValue"* %111 to void (%"class.blink::InterpolableValue"*)***
  %115 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %115, i64 1
  %117 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %116, align 8
  call void %117(%"class.blink::InterpolableValue"* nonnull %111) #11
  br label %118

118:                                              ; preds = %110, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #11
  %119 = icmp eq i32 %94, 0
  %120 = add nuw i32 %54, 1
  br i1 %119, label %51, label %168

121:                                              ; preds = %51
  %122 = load i32, i32* %32, align 8
  %123 = call noalias i8* @malloc(i64 32) #11
  %124 = getelementptr inbounds i8, i8* %123, i64 8
  %125 = bitcast i8* %124 to i32*
  store i32 1, i32* %125, align 4
  %126 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %123, i64 16
  %128 = bitcast i8* %127 to %class.scoped_refptr.1103**
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %128, align 8
  %129 = getelementptr inbounds i8, i8* %123, i64 24
  %130 = bitcast i8* %129 to i32*
  store i32 0, i32* %130, align 8
  %131 = icmp eq i32 %122, 0
  br i1 %131, label %141, label %132

132:                                              ; preds = %121
  %133 = zext i32 %122 to i64
  %134 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %133) #11
  %135 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %134, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11
  %136 = ptrtoint i8* %135 to i64
  %137 = bitcast i8* %127 to i64*
  store atomic i64 %136, i64* %137 monotonic, align 8
  %138 = lshr i64 %134, 3
  %139 = trunc i64 %138 to i32
  store i32 %139, i32* %130, align 8
  %140 = bitcast i8* %135 to %class.scoped_refptr.1103*
  br label %141

141:                                              ; preds = %132, %121
  %142 = phi %class.scoped_refptr.1103* [ null, %121 ], [ %140, %132 ]
  %143 = load i32, i32* %33, align 4
  %144 = getelementptr inbounds i8, i8* %123, i64 28
  %145 = bitcast i8* %144 to i32*
  store i32 %143, i32* %145, align 4
  %146 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %31, align 8
  %147 = zext i32 %143 to i64
  %148 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %146, i64 %147
  %149 = icmp eq i32 %143, 0
  br i1 %149, label %163, label %150

150:                                              ; preds = %141, %159
  %151 = phi %class.scoped_refptr.1103* [ %160, %159 ], [ %142, %141 ]
  %152 = phi %class.scoped_refptr.1103* [ %161, %159 ], [ %146, %141 ]
  %153 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %152, i64 0, i32 0
  %154 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %153, align 8
  %155 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %151, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %154, %"class.blink::NonInterpolableValue"** %155, align 8
  %156 = icmp eq %"class.blink::NonInterpolableValue"* %154, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %154, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %158) #11
  br label %159

159:                                              ; preds = %157, %150
  %160 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %151, i64 1
  %161 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %152, i64 1
  %162 = icmp eq %class.scoped_refptr.1103* %161, %148
  br i1 %162, label %163, label %150

163:                                              ; preds = %159, %141
  %164 = ptrtoint i8* %123 to i64
  %165 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %29, i64* %165, align 8
  %166 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %167 = bitcast %class.scoped_refptr.1103* %166 to i64*
  store i64 %164, i64* %167, align 8
  br label %168

168:                                              ; preds = %118, %163
  %169 = phi i64 [ 0, %163 ], [ %29, %118 ]
  %170 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %31, align 8
  %171 = icmp eq %class.scoped_refptr.1103* %170, null
  br i1 %171, label %205, label %172, !prof !5

172:                                              ; preds = %168
  %173 = bitcast %class.scoped_refptr.1103* %170 to i8*
  %174 = load i32, i32* %33, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %203, label %176, !prof !4

176:                                              ; preds = %172
  %177 = zext i32 %174 to i64
  %178 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %170, i64 %177
  br label %179

179:                                              ; preds = %197, %176
  %180 = phi %class.scoped_refptr.1103* [ %198, %197 ], [ %170, %176 ]
  %181 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %180, i64 0, i32 0
  %182 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %181, align 8
  %183 = icmp eq %"class.blink::NonInterpolableValue"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %182, i64 0, i32 1, i32 0
  %186 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %185, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %186) #11
  %187 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %185, i64 0, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %197

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %185, i64 -2
  %192 = bitcast %"class.base::RefCounted.1105"* %191 to %"class.blink::NonInterpolableValue"*
  %193 = bitcast %"class.base::RefCounted.1105"* %191 to void (%"class.blink::NonInterpolableValue"*)***
  %194 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %194, i64 1
  %196 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %195, align 8
  call void %196(%"class.blink::NonInterpolableValue"* nonnull %192) #11
  br label %197

197:                                              ; preds = %190, %184, %179
  %198 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %180, i64 1
  %199 = icmp eq %class.scoped_refptr.1103* %198, %178
  br i1 %199, label %200, label %179

200:                                              ; preds = %197
  store i32 0, i32* %33, align 4
  %201 = bitcast %"class.WTF::Vector.1848"* %4 to i8**
  %202 = load i8*, i8** %201, align 8
  br label %203

203:                                              ; preds = %200, %172
  %204 = phi i8* [ %202, %200 ], [ %173, %172 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %204) #11
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %31, align 8
  br label %205

205:                                              ; preds = %168, %203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  %206 = icmp eq i64 %169, 0
  br i1 %206, label %213, label %207

207:                                              ; preds = %205
  %208 = inttoptr i64 %169 to %"class.blink::InterpolableList"*
  %209 = inttoptr i64 %169 to void (%"class.blink::InterpolableList"*)***
  %210 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %210, i64 1
  %212 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %211, align 8
  call void %212(%"class.blink::InterpolableList"* nonnull %208) #11
  br label %213

213:                                              ; preds = %207, %205, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN5blink36CSSPositionAxisListInterpolationType27ConvertPositionAxisCSSValueERKNS_8CSSValueE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.1097"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1840"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1840", %"class.WTF::Vector.1840"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1840", %"class.WTF::Vector.1840"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.1097"*, %"class.std::__1::unique_ptr.1097"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1097"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.1097"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.1103* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1848"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %24, i64 %25
  ret %class.scoped_refptr.1103* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD2Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %4, align 8
  %6 = icmp eq %class.scoped_refptr.1103* %5, null
  br i1 %6, label %41, label %7, !prof !5

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.1103* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !4

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr.1103* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  %23 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.1105"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted.1105"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #11
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %16, i64 1
  %35 = icmp eq %class.scoped_refptr.1103* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.1848"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD0Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %4, align 8
  %6 = icmp eq %class.scoped_refptr.1103* %5, null
  br i1 %6, label %41, label %7, !prof !5

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.1103* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !4

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr.1103* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  %23 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.1105"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted.1105"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #11
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %16, i64 1
  %35 = icmp eq %class.scoped_refptr.1103* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.1848"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  br label %41

41:                                               ; preds = %1, %39
  %42 = bitcast %"class.blink::NonInterpolableList"* %0 to i8*
  tail call void @free(i8* %42) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink19NonInterpolableList7GetTypeEv(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink19NonInterpolableList12static_type_E, align 8
  ret i8* %2
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSPositionInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.945"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.945", %"class.std::__1::unique_ptr.945"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.945"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSPositionInterpolationType"* null, %"class.blink::CSSPositionInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CSSLengthPairInterpolationTypeD0Ev(%"class.blink::CSSLengthPairInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSLengthPairInterpolationType", %"class.blink::CSSLengthPairInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSLengthPairInterpolationType", %"class.blink::CSSLengthPairInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSLengthPairInterpolationType", %"class.blink::CSSLengthPairInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSLengthPairInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSLengthPairInterpolationType"*, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.blink::CSSValuePair"*, align 8
  %7 = bitcast %"class.blink::CSSValuePair"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 9
  %11 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSValuePair"*
  %12 = select i1 %10, %"class.blink::CSSValuePair"* %11, %"class.blink::CSSValuePair"* null
  store %"class.blink::CSSValuePair"* %12, %"class.blink::CSSValuePair"** %6, align 8
  %13 = icmp eq %"class.blink::CSSValuePair"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %5
  %15 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  br label %17

16:                                               ; preds = %5
  call void @_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUlmE_EENS_18InterpolationValueEjT_(%"struct.blink::InterpolationValue"* sret %0, i32 2, %"class.blink::CSSValuePair"** nonnull %6)
  br label %17

17:                                               ; preds = %16, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUlmE_EENS_18InterpolationValueEjT_(%"struct.blink::InterpolationValue"* noalias sret, i32, %"class.blink::CSSValuePair"**) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.1848", align 8
  %5 = icmp eq i32 %1, 0
  %6 = tail call noalias i8* @malloc(i64 24) #11
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  br i1 %5, label %9, label %14

9:                                                ; preds = %3
  %10 = ptrtoint i8* %6 to i64
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11, !noalias !17
  store i64 %10, i64* %11, align 8, !alias.scope !17
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %class.scoped_refptr.1103* %12 to i64*
  store i64 0, i64* %13, align 8, !alias.scope !17
  br label %178

14:                                               ; preds = %3
  %15 = bitcast i8* %8 to %"class.std::__1::unique_ptr.1097"**
  store %"class.std::__1::unique_ptr.1097"* null, %"class.std::__1::unique_ptr.1097"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = zext i32 %1 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %18) #11
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast i8* %8 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = lshr i64 %19, 3
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %17, align 8
  %25 = shl nuw nsw i64 %18, 3
  %26 = getelementptr inbounds i8, i8* %6, i64 20
  %27 = bitcast i8* %26 to i32*
  store i32 %1, i32* %27, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 %25, i1 false) #11
  %28 = ptrtoint i8* %6 to i64
  %29 = bitcast %"class.WTF::Vector.1848"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 2
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %18) #11
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast %"class.WTF::Vector.1848"* %4 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = lshr i64 %33, 3
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %31, align 8
  store i32 %1, i32* %32, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 %25, i1 false) #11
  %39 = bitcast i8* %8 to %"class.WTF::Vector.1840"*
  br label %40

40:                                               ; preds = %83, %14
  %41 = phi i32 [ 0, %14 ], [ %84, %83 ]
  %42 = icmp eq i32 %41, 0
  %43 = load %"class.blink::CSSValuePair"*, %"class.blink::CSSValuePair"** %2, align 8, !noalias !20
  %44 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %43, i64 0, i32 3, i32 0, i32 0
  %46 = select i1 %42, %"class.blink::CSSValue"** %44, %"class.blink::CSSValue"** %45
  %47 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %46, align 8, !noalias !20
  %48 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %47) #11, !noalias !20
  %49 = icmp eq %"class.blink::InterpolableLength"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %40
  %51 = ptrtoint %"class.blink::InterpolableLength"* %48 to i64
  %52 = call dereferenceable(8) %"class.std::__1::unique_ptr.1097"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1840"* %39, i32 %41) #11
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1097"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.1097"* %52 to i64*
  store i64 %51, i64* %55, align 8
  %56 = icmp eq %"class.blink::InterpolableValue"* %54, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %50
  %58 = bitcast %"class.blink::InterpolableValue"* %54 to void (%"class.blink::InterpolableValue"*)***
  %59 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %59, i64 1
  %61 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, align 8
  call void %61(%"class.blink::InterpolableValue"* nonnull %54) #11
  br label %62

62:                                               ; preds = %50, %57
  %63 = call dereferenceable(8) %class.scoped_refptr.1103* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1848"* nonnull %4, i32 %41) #11
  %64 = bitcast %class.scoped_refptr.1103* %63 to i64*
  %65 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %63, i64 0, i32 0
  %66 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %65, align 8
  store i64 0, i64* %64, align 8
  %67 = icmp eq %"class.blink::NonInterpolableValue"* %66, null
  br i1 %67, label %83, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %66, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %69, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %70) #11
  %71 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %69, i64 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %83

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %69, i64 -2
  %76 = bitcast %"class.base::RefCounted.1105"* %75 to %"class.blink::NonInterpolableValue"*
  %77 = bitcast %"class.base::RefCounted.1105"* %75 to void (%"class.blink::NonInterpolableValue"*)***
  %78 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, i64 1
  %80 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %79, align 8
  call void %80(%"class.blink::NonInterpolableValue"* nonnull %76) #11
  br label %83

81:                                               ; preds = %40
  %82 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #11
  br label %133

83:                                               ; preds = %74, %68, %62
  %84 = add nuw i32 %41, 1
  %85 = icmp eq i32 %84, %1
  br i1 %85, label %86, label %40

86:                                               ; preds = %83
  %87 = load i32, i32* %31, align 8
  %88 = call noalias i8* @malloc(i64 32) #11
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = bitcast i8* %89 to i32*
  store i32 1, i32* %90, align 4
  %91 = bitcast i8* %88 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 16
  %93 = bitcast i8* %92 to %class.scoped_refptr.1103**
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %93, align 8
  %94 = getelementptr inbounds i8, i8* %88, i64 24
  %95 = bitcast i8* %94 to i32*
  store i32 0, i32* %95, align 8
  %96 = icmp eq i32 %87, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %86
  %98 = zext i32 %87 to i64
  %99 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %98) #11
  %100 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %99, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11
  %101 = ptrtoint i8* %100 to i64
  %102 = bitcast i8* %92 to i64*
  store atomic i64 %101, i64* %102 monotonic, align 8
  %103 = lshr i64 %99, 3
  %104 = trunc i64 %103 to i32
  store i32 %104, i32* %95, align 8
  %105 = bitcast i8* %100 to %class.scoped_refptr.1103*
  br label %106

106:                                              ; preds = %97, %86
  %107 = phi %class.scoped_refptr.1103* [ null, %86 ], [ %105, %97 ]
  %108 = load i32, i32* %32, align 4
  %109 = getelementptr inbounds i8, i8* %88, i64 28
  %110 = bitcast i8* %109 to i32*
  store i32 %108, i32* %110, align 4
  %111 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %30, align 8
  %112 = zext i32 %108 to i64
  %113 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %111, i64 %112
  %114 = icmp eq i32 %108, 0
  br i1 %114, label %128, label %115

115:                                              ; preds = %106, %124
  %116 = phi %class.scoped_refptr.1103* [ %125, %124 ], [ %107, %106 ]
  %117 = phi %class.scoped_refptr.1103* [ %126, %124 ], [ %111, %106 ]
  %118 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %117, i64 0, i32 0
  %119 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %118, align 8
  %120 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %116, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %119, %"class.blink::NonInterpolableValue"** %120, align 8
  %121 = icmp eq %"class.blink::NonInterpolableValue"* %119, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %119, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %123) #11
  br label %124

124:                                              ; preds = %122, %115
  %125 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %116, i64 1
  %126 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %117, i64 1
  %127 = icmp eq %class.scoped_refptr.1103* %126, %113
  br i1 %127, label %128, label %115

128:                                              ; preds = %124, %106
  %129 = ptrtoint i8* %88 to i64
  %130 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %28, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %132 = bitcast %class.scoped_refptr.1103* %131 to i64*
  store i64 %129, i64* %132, align 8
  br label %133

133:                                              ; preds = %81, %128
  %134 = phi i64 [ 0, %128 ], [ %28, %81 ]
  %135 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %30, align 8
  %136 = icmp eq %class.scoped_refptr.1103* %135, null
  br i1 %136, label %170, label %137, !prof !5

137:                                              ; preds = %133
  %138 = bitcast %class.scoped_refptr.1103* %135 to i8*
  %139 = load i32, i32* %32, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %168, label %141, !prof !4

141:                                              ; preds = %137
  %142 = zext i32 %139 to i64
  %143 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %135, i64 %142
  br label %144

144:                                              ; preds = %162, %141
  %145 = phi %class.scoped_refptr.1103* [ %163, %162 ], [ %135, %141 ]
  %146 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %145, i64 0, i32 0
  %147 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %146, align 8
  %148 = icmp eq %"class.blink::NonInterpolableValue"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %147, i64 0, i32 1, i32 0
  %151 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %150, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %151) #11
  %152 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %150, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %162

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %150, i64 -2
  %157 = bitcast %"class.base::RefCounted.1105"* %156 to %"class.blink::NonInterpolableValue"*
  %158 = bitcast %"class.base::RefCounted.1105"* %156 to void (%"class.blink::NonInterpolableValue"*)***
  %159 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %159, i64 1
  %161 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %160, align 8
  call void %161(%"class.blink::NonInterpolableValue"* nonnull %157) #11
  br label %162

162:                                              ; preds = %155, %149, %144
  %163 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %145, i64 1
  %164 = icmp eq %class.scoped_refptr.1103* %163, %143
  br i1 %164, label %165, label %144

165:                                              ; preds = %162
  store i32 0, i32* %32, align 4
  %166 = bitcast %"class.WTF::Vector.1848"* %4 to i8**
  %167 = load i8*, i8** %166, align 8
  br label %168

168:                                              ; preds = %165, %137
  %169 = phi i8* [ %167, %165 ], [ %138, %137 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %169) #11
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %30, align 8
  br label %170

170:                                              ; preds = %133, %168
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  %171 = icmp eq i64 %134, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %170
  %173 = inttoptr i64 %134 to %"class.blink::InterpolableList"*
  %174 = inttoptr i64 %134 to void (%"class.blink::InterpolableList"*)***
  %175 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %175, i64 1
  %177 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %176, align 8
  call void %177(%"class.blink::InterpolableList"* nonnull %173) #11
  br label %178

178:                                              ; preds = %172, %170, %9
  ret void
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSLengthPairInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.951"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.951", %"class.std::__1::unique_ptr.951"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.951"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSLengthPairInterpolationType"* null, %"class.blink::CSSLengthPairInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSTranslateInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.957"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.957", %"class.std::__1::unique_ptr.957"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.957"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSTranslateInterpolationType"* null, %"class.blink::CSSTranslateInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink35CSSTransformOriginInterpolationTypeD0Ev(%"class.blink::CSSTransformOriginInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTransformOriginInterpolationType", %"class.blink::CSSTransformOriginInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSTransformOriginInterpolationType", %"class.blink::CSSTransformOriginInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSTransformOriginInterpolationType", %"class.blink::CSSTransformOriginInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSTransformOriginInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSTransformOriginInterpolationType"*, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"*, %"class.WTF::Vector.1106"*) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.blink::CSSValue"* %2 to %"class.blink::CSSValueList"*
  tail call void @_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUljE_EENS_18InterpolationValueEjT_(%"struct.blink::InterpolationValue"* sret %0, i32 3, %"class.blink::CSSValueList"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEEUljE_EENS_18InterpolationValueEjT_(%"struct.blink::InterpolationValue"* noalias sret, i32, %"class.blink::CSSValueList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.1848", align 8
  %5 = alloca %"struct.blink::InterpolationValue", align 8
  %6 = icmp eq i32 %1, 0
  %7 = tail call noalias i8* @malloc(i64 24) #11
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  br i1 %6, label %10, label %15

10:                                               ; preds = %3
  %11 = ptrtoint i8* %7 to i64
  %12 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11, !noalias !23
  store i64 %11, i64* %12, align 8, !alias.scope !23
  %13 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %14 = bitcast %class.scoped_refptr.1103* %13 to i64*
  store i64 0, i64* %14, align 8, !alias.scope !23
  br label %232

15:                                               ; preds = %3
  %16 = bitcast i8* %9 to %"class.std::__1::unique_ptr.1097"**
  store %"class.std::__1::unique_ptr.1097"* null, %"class.std::__1::unique_ptr.1097"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = zext i32 %1 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %19) #11
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast i8* %9 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %18, align 8
  %26 = shl nuw nsw i64 %19, 3
  %27 = getelementptr inbounds i8, i8* %7, i64 20
  %28 = bitcast i8* %27 to i32*
  store i32 %1, i32* %28, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 %26, i1 false) #11
  %29 = ptrtoint i8* %7 to i64
  %30 = bitcast %"class.WTF::Vector.1848"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.1848", %"class.WTF::Vector.1848"* %4, i64 0, i32 0, i32 0, i32 2
  %34 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %19) #11
  %35 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11
  %36 = ptrtoint i8* %35 to i64
  %37 = bitcast %"class.WTF::Vector.1848"* %4 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %34, 3
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %32, align 8
  store i32 %1, i32* %33, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 %26, i1 false) #11
  %40 = bitcast %"struct.blink::InterpolationValue"* %5 to i8*
  %41 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1
  %43 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %2, i64 0, i32 1, i32 0
  %46 = bitcast %"struct.blink::InterpolationValue"* %5 to i64*
  %47 = bitcast %class.scoped_refptr.1103* %42 to i64*
  %48 = bitcast i8* %9 to %"class.WTF::Vector.1840"*
  %49 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  %50 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %5, i64 0, i32 1, i32 0
  %51 = bitcast %"struct.blink::InterpolationValue"* %5 to i8*
  br label %54

52:                                               ; preds = %137
  %53 = icmp eq i32 %139, %1
  br i1 %53, label %140, label %54

54:                                               ; preds = %52, %15
  %55 = phi i32 [ 0, %15 ], [ %139, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  %56 = load i32, i32* %44, align 4, !noalias !26
  %57 = icmp eq i32 %56, %55
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = call %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double 0.000000e+00, i32 5) #11
  %60 = getelementptr inbounds %"class.blink::CSSNumericLiteralValue", %"class.blink::CSSNumericLiteralValue"* %59, i64 0, i32 0, i32 0
  %61 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %60) #11
  %62 = ptrtoint %"class.blink::InterpolableLength"* %61 to i64
  store i64 %62, i64* %46, align 8, !alias.scope !26
  store i64 0, i64* %47, align 8, !alias.scope !26
  %63 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %61, i64 0, i32 0
  br label %76

64:                                               ; preds = %54
  %65 = call dereferenceable(8) %"class.blink::Member.811"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1878"* %45, i32 %55) #11, !noalias !26
  %66 = getelementptr inbounds %"class.blink::Member.811", %"class.blink::Member.811"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %66, align 8, !noalias !26
  %68 = icmp ult i32 %55, 2
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  call void @_ZN5blink36CSSPositionAxisListInterpolationType27ConvertPositionAxisCSSValueERKNS_8CSSValueE(%"struct.blink::InterpolationValue"* nonnull sret %5, %"class.blink::CSSValue"* dereferenceable(3) %67) #11
  %70 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %41, align 8
  %71 = ptrtoint %"class.blink::InterpolableValue"* %70 to i64
  br label %76

72:                                               ; preds = %64
  %73 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %67) #11
  %74 = ptrtoint %"class.blink::InterpolableLength"* %73 to i64
  store i64 %74, i64* %46, align 8, !alias.scope !26
  store i64 0, i64* %47, align 8, !alias.scope !26
  %75 = getelementptr inbounds %"class.blink::InterpolableLength", %"class.blink::InterpolableLength"* %73, i64 0, i32 0
  br label %76

76:                                               ; preds = %58, %69, %72
  %77 = phi i64 [ %62, %58 ], [ %71, %69 ], [ %74, %72 ]
  %78 = phi %"class.blink::InterpolableValue"* [ %63, %58 ], [ %70, %69 ], [ %75, %72 ]
  %79 = icmp eq %"class.blink::InterpolableValue"* %78, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %76
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #11
  br label %112

81:                                               ; preds = %76
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %41, align 8
  %82 = call dereferenceable(8) %"class.std::__1::unique_ptr.1097"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1840"* %48, i32 %55) #11
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.1097", %"class.std::__1::unique_ptr.1097"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %83, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.1097"* %82 to i64*
  store i64 %77, i64* %85, align 8
  %86 = icmp eq %"class.blink::InterpolableValue"* %84, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.blink::InterpolableValue"* %84 to void (%"class.blink::InterpolableValue"*)***
  %89 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %89, i64 1
  %91 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %90, align 8
  call void %91(%"class.blink::InterpolableValue"* nonnull %84) #11
  br label %92

92:                                               ; preds = %81, %87
  %93 = load i64, i64* %47, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %43, align 8
  %94 = call dereferenceable(8) %class.scoped_refptr.1103* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1848"* nonnull %4, i32 %55) #11
  %95 = bitcast %class.scoped_refptr.1103* %94 to i64*
  %96 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %94, i64 0, i32 0
  %97 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %96, align 8
  store i64 %93, i64* %95, align 8
  %98 = icmp eq %"class.blink::NonInterpolableValue"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %97, i64 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %100, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %101) #11
  %102 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %100, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %112

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %100, i64 -2
  %107 = bitcast %"class.base::RefCounted.1105"* %106 to %"class.blink::NonInterpolableValue"*
  %108 = bitcast %"class.base::RefCounted.1105"* %106 to void (%"class.blink::NonInterpolableValue"*)***
  %109 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %109, i64 1
  %111 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %110, align 8
  call void %111(%"class.blink::NonInterpolableValue"* nonnull %107) #11
  br label %112

112:                                              ; preds = %105, %99, %92, %80
  %113 = phi i32 [ 1, %80 ], [ 0, %92 ], [ 0, %99 ], [ 0, %105 ]
  %114 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %50, align 8
  %115 = icmp eq %"class.blink::NonInterpolableValue"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %114, i64 0, i32 1, i32 0
  %118 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %117, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #11
  %119 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %117, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %117, i64 -2
  %124 = bitcast %"class.base::RefCounted.1105"* %123 to %"class.blink::NonInterpolableValue"*
  %125 = bitcast %"class.base::RefCounted.1105"* %123 to void (%"class.blink::NonInterpolableValue"*)***
  %126 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %126, i64 1
  %128 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %127, align 8
  call void %128(%"class.blink::NonInterpolableValue"* nonnull %124) #11
  br label %129

129:                                              ; preds = %122, %116, %112
  %130 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %41, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %41, align 8
  %131 = icmp eq %"class.blink::InterpolableValue"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %129
  %133 = bitcast %"class.blink::InterpolableValue"* %130 to void (%"class.blink::InterpolableValue"*)***
  %134 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %134, i64 1
  %136 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %135, align 8
  call void %136(%"class.blink::InterpolableValue"* nonnull %130) #11
  br label %137

137:                                              ; preds = %129, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #11
  %138 = icmp eq i32 %113, 0
  %139 = add nuw i32 %55, 1
  br i1 %138, label %52, label %187

140:                                              ; preds = %52
  %141 = load i32, i32* %32, align 8
  %142 = call noalias i8* @malloc(i64 32) #11
  %143 = getelementptr inbounds i8, i8* %142, i64 8
  %144 = bitcast i8* %143 to i32*
  store i32 1, i32* %144, align 4
  %145 = bitcast i8* %142 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds i8, i8* %142, i64 16
  %147 = bitcast i8* %146 to %class.scoped_refptr.1103**
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %147, align 8
  %148 = getelementptr inbounds i8, i8* %142, i64 24
  %149 = bitcast i8* %148 to i32*
  store i32 0, i32* %149, align 8
  %150 = icmp eq i32 %141, 0
  br i1 %150, label %160, label %151

151:                                              ; preds = %140
  %152 = zext i32 %141 to i64
  %153 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %152) #11
  %154 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %153, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11
  %155 = ptrtoint i8* %154 to i64
  %156 = bitcast i8* %146 to i64*
  store atomic i64 %155, i64* %156 monotonic, align 8
  %157 = lshr i64 %153, 3
  %158 = trunc i64 %157 to i32
  store i32 %158, i32* %149, align 8
  %159 = bitcast i8* %154 to %class.scoped_refptr.1103*
  br label %160

160:                                              ; preds = %151, %140
  %161 = phi %class.scoped_refptr.1103* [ null, %140 ], [ %159, %151 ]
  %162 = load i32, i32* %33, align 4
  %163 = getelementptr inbounds i8, i8* %142, i64 28
  %164 = bitcast i8* %163 to i32*
  store i32 %162, i32* %164, align 4
  %165 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %31, align 8
  %166 = zext i32 %162 to i64
  %167 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %165, i64 %166
  %168 = icmp eq i32 %162, 0
  br i1 %168, label %182, label %169

169:                                              ; preds = %160, %178
  %170 = phi %class.scoped_refptr.1103* [ %179, %178 ], [ %161, %160 ]
  %171 = phi %class.scoped_refptr.1103* [ %180, %178 ], [ %165, %160 ]
  %172 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %171, i64 0, i32 0
  %173 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %172, align 8
  %174 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %170, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %173, %"class.blink::NonInterpolableValue"** %174, align 8
  %175 = icmp eq %"class.blink::NonInterpolableValue"* %173, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %173, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %177) #11
  br label %178

178:                                              ; preds = %176, %169
  %179 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %170, i64 1
  %180 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %171, i64 1
  %181 = icmp eq %class.scoped_refptr.1103* %180, %167
  br i1 %181, label %182, label %169

182:                                              ; preds = %178, %160
  %183 = ptrtoint i8* %142 to i64
  %184 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %29, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %186 = bitcast %class.scoped_refptr.1103* %185 to i64*
  store i64 %183, i64* %186, align 8
  br label %187

187:                                              ; preds = %137, %182
  %188 = phi i64 [ 0, %182 ], [ %29, %137 ]
  %189 = load %class.scoped_refptr.1103*, %class.scoped_refptr.1103** %31, align 8
  %190 = icmp eq %class.scoped_refptr.1103* %189, null
  br i1 %190, label %224, label %191, !prof !5

191:                                              ; preds = %187
  %192 = bitcast %class.scoped_refptr.1103* %189 to i8*
  %193 = load i32, i32* %33, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %222, label %195, !prof !4

195:                                              ; preds = %191
  %196 = zext i32 %193 to i64
  %197 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %189, i64 %196
  br label %198

198:                                              ; preds = %216, %195
  %199 = phi %class.scoped_refptr.1103* [ %217, %216 ], [ %189, %195 ]
  %200 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %199, i64 0, i32 0
  %201 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %200, align 8
  %202 = icmp eq %"class.blink::NonInterpolableValue"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %201, i64 0, i32 1, i32 0
  %205 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %204, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %205) #11
  %206 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %204, i64 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %216

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.base::RefCounted.1105", %"class.base::RefCounted.1105"* %204, i64 -2
  %211 = bitcast %"class.base::RefCounted.1105"* %210 to %"class.blink::NonInterpolableValue"*
  %212 = bitcast %"class.base::RefCounted.1105"* %210 to void (%"class.blink::NonInterpolableValue"*)***
  %213 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %213, i64 1
  %215 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %214, align 8
  call void %215(%"class.blink::NonInterpolableValue"* nonnull %211) #11
  br label %216

216:                                              ; preds = %209, %203, %198
  %217 = getelementptr inbounds %class.scoped_refptr.1103, %class.scoped_refptr.1103* %199, i64 1
  %218 = icmp eq %class.scoped_refptr.1103* %217, %197
  br i1 %218, label %219, label %198

219:                                              ; preds = %216
  store i32 0, i32* %33, align 4
  %220 = bitcast %"class.WTF::Vector.1848"* %4 to i8**
  %221 = load i8*, i8** %220, align 8
  br label %222

222:                                              ; preds = %219, %191
  %223 = phi i8* [ %221, %219 ], [ %192, %191 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %223) #11
  store %class.scoped_refptr.1103* null, %class.scoped_refptr.1103** %31, align 8
  br label %224

224:                                              ; preds = %187, %222
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  %225 = icmp eq i64 %188, 0
  br i1 %225, label %232, label %226

226:                                              ; preds = %224
  %227 = inttoptr i64 %188 to %"class.blink::InterpolableList"*
  %228 = inttoptr i64 %188 to void (%"class.blink::InterpolableList"*)***
  %229 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %229, i64 1
  %231 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %230, align 8
  call void %231(%"class.blink::InterpolableList"* nonnull %227) #11
  br label %232

232:                                              ; preds = %226, %224, %10
  ret void
}

declare %"class.blink::CSSNumericLiteralValue"* @_ZN5blink22CSSNumericLiteralValue6CreateEdNS_17CSSPrimitiveValue8UnitTypeE(double, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.811"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1878"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1878", %"class.WTF::Vector.1878"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1878", %"class.WTF::Vector.1878"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.811"*, %"class.blink::Member.811"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.811", %"class.blink::Member.811"* %24, i64 %25
  ret %"class.blink::Member.811"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_35CSSTransformOriginInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.963"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.963", %"class.std::__1::unique_ptr.963"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.963"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSTransformOriginInterpolationType"* null, %"class.blink::CSSTransformOriginInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSSizeListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.969"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.969", %"class.std::__1::unique_ptr.969"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.969"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSSizeListInterpolationType"* null, %"class.blink::CSSSizeListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_40CSSBorderImageLengthBoxInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.975"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.975", %"class.std::__1::unique_ptr.975"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.975"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSBorderImageLengthBoxInterpolationType"* null, %"class.blink::CSSBorderImageLengthBoxInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_25CSSScaleInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.981"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.981", %"class.std::__1::unique_ptr.981"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.981"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSScaleInterpolationType"* null, %"class.blink::CSSScaleInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSFontSizeInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.987"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.987", %"class.std::__1::unique_ptr.987"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.987"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSFontSizeInterpolationType"* null, %"class.blink::CSSFontSizeInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSTextIndentInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.993"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.993", %"class.std::__1::unique_ptr.993"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.993"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSTextIndentInterpolationType"* null, %"class.blink::CSSTextIndentInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSImageSliceInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.999"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.999", %"class.std::__1::unique_ptr.999"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.999"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSImageSliceInterpolationType"* null, %"class.blink::CSSImageSliceInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSBasicShapeInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1005"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1005", %"class.std::__1::unique_ptr.1005"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1005"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSBasicShapeInterpolationType"* null, %"class.blink::CSSBasicShapeInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26CSSRotateInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1011"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1011", %"class.std::__1::unique_ptr.1011"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1011"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSRotateInterpolationType"* null, %"class.blink::CSSRotateInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_30CSSFilterListInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1017"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1017"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1017"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSFilterListInterpolationType"* null, %"class.blink::CSSFilterListInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_29CSSTransformInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1023"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1023", %"class.std::__1::unique_ptr.1023"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1023"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSTransformInterpolationType"* null, %"class.blink::CSSTransformInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27CSSDefaultInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSDefaultInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8) unnamed_addr #0 comdat align 2 {
  %3 = alloca { i32, %union.anon.781 }, align 8
  %4 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  %5 = bitcast { i32, %union.anon.781 }* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %4, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !4

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.blink::CSSDefaultInterpolationType", %"class.blink::CSSDefaultInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSDefaultInterpolationType", %"class.blink::CSSDefaultInterpolationType"* %0, i64 0, i32 0, i32 1
  %29 = bitcast %"class.blink::PropertyHandle"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %5, i64 16, i1 false)
  %30 = getelementptr inbounds %"class.blink::CSSDefaultInterpolationType", %"class.blink::CSSDefaultInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %30, align 8
  br i1 %8, label %59, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !4

45:                                               ; preds = %38
  tail call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = add i32 %49, -1
  store i32 %54, i32* %36, align 4
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i32 [ %54, %53 ], [ %49, %48 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %60

59:                                               ; preds = %26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink27CSSDefaultInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  br label %71

60:                                               ; preds = %55, %58
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink27CSSDefaultInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %61 = load atomic i32, i32* %32 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = load i32, i32* %36, align 4
  br i1 %63, label %65, label %67

65:                                               ; preds = %60
  %66 = add i32 %64, -1
  store i32 %66, i32* %36, align 4
  br label %67

67:                                               ; preds = %65, %60
  %68 = phi i32 [ %66, %65 ], [ %64, %60 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %71

71:                                               ; preds = %59, %67, %70
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_27CSSDefaultInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1029"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1029", %"class.std::__1::unique_ptr.1029"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1029"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSDefaultInterpolationType"* null, %"class.blink::CSSDefaultInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.793"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6insertINS_17HashMapTranslatorISQ_SL_SC_EERKS2_NS5_ISD_NS9_ISD_EEEEEENS_18HashTableAddResultISR_SH_EEOT0_OT1_(%"class.WTF::HashTable.790"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.std::__1::unique_ptr.825"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.793"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.793"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_(%"class.WTF::HashTable.790"* %0, %"struct.WTF::KeyValuePair.793"* null)
  %10 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.793"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #11
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.781* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair.793"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  store i32 0, i32* %21, align 8, !alias.scope !29
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #11, !alias.scope !29
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #11
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #11
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  br i1 %62, label %95, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.793"* %42, %"struct.WTF::KeyValuePair.793"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair.793"* %41, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair.793"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 32, i1 false) #11
  %76 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %72, %74
  %83 = phi %"struct.WTF::KeyValuePair.793"* [ %41, %74 ], [ %42, %72 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink14PropertyHandleEEENS2_INSt3__110unique_ptrIKNS_6VectorINS7_IKNS3_17InterpolationTypeENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEENSB_ISG_EEEEEEEENS_11DefaultHashIS4_E4HashESE_E9TranslateINS_12KeyValuePairIS4_SI_EERKS4_NS7_ISF_NSB_ISF_EEEEEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.793"* dereferenceable(32) %83, %"class.blink::PropertyHandle"* dereferenceable(24) %1, %"class.std::__1::unique_ptr.825"* dereferenceable(8) %2)
  %84 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, %86
  %90 = shl i32 %89, 1
  %91 = load i32, i32* %13, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %82
  %94 = call %"struct.WTF::KeyValuePair.793"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_(%"class.WTF::HashTable.790"* %0, %"struct.WTF::KeyValuePair.793"* %83)
  br label %95

95:                                               ; preds = %61, %82, %93
  %96 = phi i8 [ 1, %82 ], [ 1, %93 ], [ 0, %61 ]
  %97 = phi %"struct.WTF::KeyValuePair.793"* [ %83, %82 ], [ %94, %93 ], [ %42, %61 ]
  %98 = insertvalue { %"struct.WTF::KeyValuePair.793"*, i8 } undef, %"struct.WTF::KeyValuePair.793"* %97, 0
  %99 = insertvalue { %"struct.WTF::KeyValuePair.793"*, i8 } %98, i8 %96, 1
  ret { %"struct.WTF::KeyValuePair.793"*, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.793"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E6ExpandEPSH_(%"class.WTF::HashTable.790"*, %"struct.WTF::KeyValuePair.793"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([459 x i8], [459 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.793"*
  %37 = call %"struct.WTF::KeyValuePair.793"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E8RehashToEPSH_jSS_(%"class.WTF::HashTable.790"* %0, %"struct.WTF::KeyValuePair.793"* %36, i32 %32, %"struct.WTF::KeyValuePair.793"* %1) #11
  ret %"struct.WTF::KeyValuePair.793"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsIN5blink14PropertyHandleEEENS2_INSt3__110unique_ptrIKNS_6VectorINS7_IKNS3_17InterpolationTypeENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEENSB_ISG_EEEEEEEENS_11DefaultHashIS4_E4HashESE_E9TranslateINS_12KeyValuePairIS4_SI_EERKS4_NS7_ISF_NSB_ISF_EEEEEEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.793"* dereferenceable(32), %"class.blink::PropertyHandle"* dereferenceable(24), %"class.std::__1::unique_ptr.825"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.WTF::KeyValuePair.793"* %0 to i8*
  %5 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false) #11
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !4

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %3
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.825"* %2, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.825"* %2 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.WTF::Vector.775"* null, %"class.WTF::Vector.775"** %47, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %0, i64 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.794", %"class.std::__1::unique_ptr.794"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.794"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.WTF::Vector.775"* %52, null
  br i1 %54, label %87, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %52, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.778"* %57, null
  br i1 %58, label %85, label %59, !prof !5

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::unique_ptr.778"* %57 to i8*
  %61 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %52, i64 0, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %83, label %64, !prof !4

64:                                               ; preds = %59
  %65 = zext i32 %62 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %57, i64 %65
  br label %67

67:                                               ; preds = %77, %64
  %68 = phi %"class.std::__1::unique_ptr.778"* [ %78, %77 ], [ %57, %64 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %69, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %69, align 8
  %71 = icmp eq %"class.blink::InterpolationType"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.blink::InterpolationType"* %70 to void (%"class.blink::InterpolationType"*)***
  %74 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %74, i64 1
  %76 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %75, align 8
  tail call void %76(%"class.blink::InterpolationType"* nonnull %70) #11
  br label %77

77:                                               ; preds = %72, %67
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %68, i64 1
  %79 = icmp eq %"class.std::__1::unique_ptr.778"* %78, %66
  br i1 %79, label %80, label %67

80:                                               ; preds = %77
  store i32 0, i32* %61, align 4
  %81 = bitcast %"class.WTF::Vector.775"* %52 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %59
  %84 = phi i8* [ %82, %80 ], [ %60, %59 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #11
  store %"class.std::__1::unique_ptr.778"* null, %"class.std::__1::unique_ptr.778"** %56, align 8
  br label %85

85:                                               ; preds = %83, %55
  %86 = bitcast %"class.WTF::Vector.775"* %52 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %86) #11
  br label %87

87:                                               ; preds = %85, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.793"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E8RehashToEPSH_jSS_(%"class.WTF::HashTable.790"*, %"struct.WTF::KeyValuePair.793"*, i32, %"struct.WTF::KeyValuePair.793"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.790", align 8
  %7 = bitcast %"class.WTF::HashTable.790"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.790"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.793"* %1, %"struct.WTF::KeyValuePair.793"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 0
  br i1 %15, label %17, label %20

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.WTF::KeyValuePair.793"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable.790"* %6 to i64*
  br label %29

20:                                               ; preds = %4
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.781* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %109

26:                                               ; preds = %147
  %27 = bitcast %"class.WTF::HashTable.790"* %6 to i64*
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi i64* [ %19, %17 ], [ %27, %26 ]
  %31 = phi i64 [ %18, %17 ], [ %28, %26 ]
  %32 = phi %"struct.WTF::KeyValuePair.793"* [ null, %17 ], [ %148, %26 ]
  %33 = phi i32 [ 0, %17 ], [ %149, %26 ]
  %34 = bitcast %"class.WTF::HashTable.790"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  store atomic i64 %31, i64* %34 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %35, i64* %30, align 8
  store i32 %33, i32* %9, align 8
  %36 = inttoptr i64 %35 to %"struct.WTF::KeyValuePair.793"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %105, label %38

38:                                               ; preds = %29
  %39 = icmp eq i32 %33, 0
  br i1 %39, label %103, label %40

40:                                               ; preds = %38
  %41 = zext i32 %33 to i64
  br label %42

42:                                               ; preds = %100, %40
  %43 = phi i64 [ 0, %40 ], [ %101, %100 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %36, i64 %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %100, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %36, i64 %43, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %48, align 8
  store %"class.WTF::Vector.775"* null, %"class.WTF::Vector.775"** %48, align 8
  %50 = icmp eq %"class.WTF::Vector.775"* %49, null
  br i1 %50, label %83, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %49, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr.778"* %53, null
  br i1 %54, label %81, label %55, !prof !5

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::unique_ptr.778"* %53 to i8*
  %57 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %49, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %79, label %60, !prof !4

60:                                               ; preds = %55
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %53, i64 %61
  br label %63

63:                                               ; preds = %73, %60
  %64 = phi %"class.std::__1::unique_ptr.778"* [ %74, %73 ], [ %53, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %65, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %65, align 8
  %67 = icmp eq %"class.blink::InterpolationType"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::InterpolationType"* %66 to void (%"class.blink::InterpolationType"*)***
  %70 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %70, i64 1
  %72 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %71, align 8
  call void %72(%"class.blink::InterpolationType"* nonnull %66) #11
  br label %73

73:                                               ; preds = %68, %63
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %64, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr.778"* %74, %62
  br i1 %75, label %76, label %63

76:                                               ; preds = %73
  store i32 0, i32* %57, align 4
  %77 = bitcast %"class.WTF::Vector.775"* %49 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %55
  %80 = phi i8* [ %78, %76 ], [ %56, %55 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #11
  store %"class.std::__1::unique_ptr.778"* null, %"class.std::__1::unique_ptr.778"** %52, align 8
  br label %81

81:                                               ; preds = %79, %51
  %82 = bitcast %"class.WTF::Vector.775"* %49 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %82) #11
  br label %83

83:                                               ; preds = %81, %47
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %36, i64 %43, i32 0, i32 2, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #11
  br label %100

100:                                              ; preds = %99, %96, %83, %42
  %101 = add nuw nsw i64 %43, 1
  %102 = icmp eq i64 %101, %41
  br i1 %102, label %103, label %42

103:                                              ; preds = %100, %38
  %104 = inttoptr i64 %35 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #11
  store atomic i64 0, i64* %30 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %105

105:                                              ; preds = %29, %103
  %106 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, -2147483648
  store i32 %108, i32* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"struct.WTF::KeyValuePair.793"* %32

109:                                              ; preds = %20, %147
  %110 = phi %"struct.WTF::KeyValuePair.793"* [ null, %20 ], [ %148, %147 ]
  %111 = phi i32 [ 0, %20 ], [ %149, %147 ]
  %112 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %16, align 8
  %113 = zext i32 %111 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %112, i64 %113
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %114, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  store i32 0, i32* %22, align 8, !alias.scope !34
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11, !alias.scope !34
  %116 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %115, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #11
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #11
  br label %132

132:                                              ; preds = %109, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %114, i64 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 1
  %136 = or i1 %116, %135
  br i1 %136, label %147, label %137

137:                                              ; preds = %132
  %138 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %16, align 8
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %138, i64 %113
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %139, i64 0, i32 0
  %141 = call { %"struct.WTF::KeyValuePair.793"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E16LookupForWritingINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EENS4_4pairIPSH_bEERKT0_(%"class.WTF::HashTable.790"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %140) #11
  %142 = extractvalue { %"struct.WTF::KeyValuePair.793"*, i8 } %141, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSJ_ISG_EEEELb0EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair.793"* dereferenceable(32) %139, %"struct.WTF::KeyValuePair.793"* dereferenceable(32) %142) #11
  %143 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %16, align 8
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %143, i64 %113
  %145 = icmp eq %"struct.WTF::KeyValuePair.793"* %144, %3
  %146 = select i1 %145, %"struct.WTF::KeyValuePair.793"* %142, %"struct.WTF::KeyValuePair.793"* %110
  br label %147

147:                                              ; preds = %132, %137
  %148 = phi %"struct.WTF::KeyValuePair.793"* [ %110, %132 ], [ %146, %137 ]
  %149 = add i32 %111, 1
  %150 = load i32, i32* %13, align 8
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %26, label %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIN5blink14PropertyHandleENSt3__110unique_ptrIKNS_6VectorINS5_IKNS2_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSJ_ISG_EEEELb0EE4MoveEOSH_RSH_(%"struct.WTF::KeyValuePair.793"* dereferenceable(32), %"struct.WTF::KeyValuePair.793"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::Vector.775"*, %"class.WTF::Vector.775"** %3, align 8
  store %"class.WTF::Vector.775"* null, %"class.WTF::Vector.775"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector.775"* %4, null
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.778"* %8, null
  br i1 %9, label %36, label %10, !prof !5

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::unique_ptr.778"* %8 to i8*
  %12 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15, !prof !4

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %8, i64 %16
  br label %18

18:                                               ; preds = %28, %15
  %19 = phi %"class.std::__1::unique_ptr.778"* [ %29, %28 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::InterpolationType"*, %"class.blink::InterpolationType"** %20, align 8
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %20, align 8
  %22 = icmp eq %"class.blink::InterpolationType"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::InterpolationType"* %21 to void (%"class.blink::InterpolationType"*)***
  %25 = load void (%"class.blink::InterpolationType"*)**, void (%"class.blink::InterpolationType"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %25, i64 1
  %27 = load void (%"class.blink::InterpolationType"*)*, void (%"class.blink::InterpolationType"*)** %26, align 8
  tail call void %27(%"class.blink::InterpolationType"* nonnull %21) #11
  br label %28

28:                                               ; preds = %23, %18
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %19, i64 1
  %30 = icmp eq %"class.std::__1::unique_ptr.778"* %29, %17
  br i1 %30, label %31, label %18

31:                                               ; preds = %28
  store i32 0, i32* %12, align 4
  %32 = bitcast %"class.WTF::Vector.775"* %4 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %10
  %35 = phi i8* [ %33, %31 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %35) #11
  store %"class.std::__1::unique_ptr.778"* null, %"class.std::__1::unique_ptr.778"** %7, align 8
  br label %36

36:                                               ; preds = %34, %6
  %37 = bitcast %"class.WTF::Vector.775"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %37) #11
  br label %38

38:                                               ; preds = %36, %2
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #11
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"struct.WTF::KeyValuePair.793"* %1 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.793"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %1, i64 0, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %0, i64 0, i32 0, i32 2
  %60 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.WTF::AtomicString"* %58 to i64*
  store i64 %62, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %60, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %1, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %0, i64 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.794", %"class.std::__1::unique_ptr.794"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr.794"* %65 to i64*
  %68 = load i64, i64* %67, align 8
  store %"class.WTF::Vector.775"* null, %"class.WTF::Vector.775"** %66, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.794"* %64 to i64*
  store i64 %68, i64* %69, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.793"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NSt3__110unique_ptrIKNS_6VectorINS5_IKNS1_17InterpolationTypeENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEENS9_ISE_EEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSN_ISG_EEEESO_SC_E16LookupForWritingINS_22IdentityHashTranslatorISL_SQ_SC_EES2_EENS4_4pairIPSH_bEERKT0_(%"class.WTF::HashTable.790"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.793"*, %"struct.WTF::KeyValuePair.793"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.790", %"class.WTF::HashTable.790"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #11
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.781* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %61, %2
  %32 = phi i64 [ 0, %2 ], [ %65, %61 ]
  %33 = phi i64 [ 0, %2 ], [ %67, %61 ]
  %34 = phi i64 [ %12, %2 ], [ %69, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %5, i64 %34
  %36 = ptrtoint %"struct.WTF::KeyValuePair.793"* %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  store i32 0, i32* %14, align 8, !alias.scope !39
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11, !alias.scope !39
  %38 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #11
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %54

54:                                               ; preds = %31, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  br i1 %38, label %55, label %59

55:                                               ; preds = %54
  %56 = ptrtoint %"struct.WTF::KeyValuePair.793"* %35 to i64
  %57 = icmp eq i64 %32, 0
  %58 = select i1 %57, i64 %56, i64 %32
  br label %72

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #11
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.793", %"struct.WTF::KeyValuePair.793"* %35, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  %65 = select i1 %64, i64 %36, i64 %32
  %66 = icmp eq i64 %33, 0
  %67 = select i1 %66, i64 %30, i64 %33
  %68 = add i64 %67, %34
  %69 = and i64 %68, %9
  br label %31

70:                                               ; preds = %59
  %71 = ptrtoint %"struct.WTF::KeyValuePair.793"* %35 to i64
  br label %72

72:                                               ; preds = %70, %55
  %73 = phi i64 [ %58, %55 ], [ %71, %70 ]
  %74 = phi i8 [ 0, %55 ], [ 1, %70 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.793"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.793"*, i8 } undef, %"struct.WTF::KeyValuePair.793"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.793"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.793"*, i8 } %77
}

declare void @_ZN5blink28CSSVarCycleInterpolationTypeC1ERKNS_14PropertyHandleERKNS_20PropertyRegistrationE(%"class.blink::CSSVarCycleInterpolationType"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::PropertyRegistration"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_28CSSVarCycleInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1035"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1035", %"class.std::__1::unique_ptr.1035"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1035"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSVarCycleInterpolationType"* null, %"class.blink::CSSVarCycleInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_20CSSInterpolationTypeENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.775"*, %"class.std::__1::unique_ptr.1041"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.775", %"class.WTF::Vector.775"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  br i1 %15, label %18, label %45, !prof !5

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.778"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIKN5blink17InterpolationTypeENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([159 x i8], [159 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIKN5blink17InterpolationTypeENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.778"*, %"class.std::__1::unique_ptr.778"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.778"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.778"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !5

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.775"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.775"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.778"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.778"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.778"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1041", %"class.std::__1::unique_ptr.1041"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1041"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::CSSInterpolationType"* null, %"class.blink::CSSInterpolationType"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.778"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!9 = distinct !{!9, !10, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZZNK5blink28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENKUlmE_clEm: argument 0"}
!16 = distinct !{!16, !"_ZZNK5blink28CSSPositionInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENKUlmE_clEm"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!19 = distinct !{!19, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZZNK5blink30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENKUlmE_clEm: argument 0"}
!22 = distinct !{!22, !"_ZZNK5blink30CSSLengthPairInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENKUlmE_clEm"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!25 = distinct !{!25, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZZNK5blink35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENKUljE_clEj: argument 0"}
!28 = distinct !{!28, !"_ZZNK5blink35CSSTransformOriginInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENKUljE_clEj"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!31 = distinct !{!31, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!32 = distinct !{!32, !33, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!34 = !{!35, !37}
!35 = distinct !{!35, !36, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!36 = distinct !{!36, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!37 = distinct !{!37, !38, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!39 = !{!40, !42}
!40 = distinct !{!40, !41, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!41 = distinct !{!41, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!42 = distinct !{!42, !43, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
