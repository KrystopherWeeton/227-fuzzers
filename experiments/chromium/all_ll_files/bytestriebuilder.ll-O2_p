; ModuleID = '../../third_party/icu/source/common/bytestriebuilder.cpp'
source_filename = "../../third_party/icu/source/common/bytestriebuilder.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::BytesTrieBuilder" = type { %"class.icu_69::StringTrieBuilder", %"class.icu_69::CharString"*, %"class.icu_69::BytesTrieElement"*, i32, i32, i8*, i32, i32 }
%"class.icu_69::StringTrieBuilder" = type { %"class.icu_69::UObject", %struct.UHashtable* }
%"class.icu_69::UObject" = type { i32 (...)** }
%struct.UHashtable = type { %struct.UHashElement*, i32 (i8*)*, i8 (i8*, i8*)*, i8 (i8*, i8*)*, void (i8*)*, void (i8*)*, i32, i32, i32, i32, float, float, i8, i8 }
%struct.UHashElement = type { i32, %union.UElement, %union.UElement }
%union.UElement = type { i8* }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::BytesTrieElement" = type { i32, i32 }
%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode" = type { %"class.icu_69::StringTrieBuilder::LinearMatchNode", i8* }
%"class.icu_69::StringTrieBuilder::LinearMatchNode" = type { %"class.icu_69::StringTrieBuilder::ValueNode", i32, %"class.icu_69::StringTrieBuilder::Node"* }
%"class.icu_69::StringTrieBuilder::ValueNode" = type { %"class.icu_69::StringTrieBuilder::Node", i8, i32 }
%"class.icu_69::StringTrieBuilder::Node" = type { %"class.icu_69::UObject", i32, i32 }
%"class.icu_69::BytesTrie" = type <{ i8*, i8*, i8*, i32, [4 x i8] }>
%"class.icu_69::StringPiece" = type <{ i8*, i32, [4 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZNK6icu_6916BytesTrieBuilder23matchNodesCanHaveValuesEv = comdat any

$_ZNK6icu_6916BytesTrieBuilder31getMaxBranchLinearSubNodeLengthEv = comdat any

$_ZNK6icu_6916BytesTrieBuilder17getMinLinearMatchEv = comdat any

$_ZNK6icu_6916BytesTrieBuilder23getMaxLinearMatchLengthEv = comdat any

$_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNodeD0Ev = comdat any

@_ZTVN6icu_6916BytesTrieBuilderE = hidden unnamed_addr constant { [22 x i8*] } { [22 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6916BytesTrieBuilderE to i8*), i8* bitcast (void (%"class.icu_69::BytesTrieBuilder"*)* @_ZN6icu_6916BytesTrieBuilderD2Ev to i8*), i8* bitcast (void (%"class.icu_69::BytesTrieBuilder"*)* @_ZN6icu_6916BytesTrieBuilderD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32)* @_ZNK6icu_6916BytesTrieBuilder22getElementStringLengthEi to i8*), i8* bitcast (i16 (%"class.icu_69::BytesTrieBuilder"*, i32, i32)* @_ZNK6icu_6916BytesTrieBuilder14getElementUnitEii to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32)* @_ZNK6icu_6916BytesTrieBuilder15getElementValueEi to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i32, i32)* @_ZNK6icu_6916BytesTrieBuilder21getLimitOfLinearMatchEiii to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i32, i32)* @_ZNK6icu_6916BytesTrieBuilder17countElementUnitsEiii to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i32, i32)* @_ZNK6icu_6916BytesTrieBuilder23skipElementsBySomeUnitsEiii to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i32, i16)* @_ZNK6icu_6916BytesTrieBuilder26indexOfElementWithNextUnitEiiDs to i8*), i8* bitcast (i8 (%"class.icu_69::BytesTrieBuilder"*)* @_ZNK6icu_6916BytesTrieBuilder23matchNodesCanHaveValuesEv to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*)* @_ZNK6icu_6916BytesTrieBuilder31getMaxBranchLinearSubNodeLengthEv to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*)* @_ZNK6icu_6916BytesTrieBuilder17getMinLinearMatchEv to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*)* @_ZNK6icu_6916BytesTrieBuilder23getMaxLinearMatchLengthEv to i8*), i8* bitcast (%"class.icu_69::StringTrieBuilder::Node"* (%"class.icu_69::BytesTrieBuilder"*, i32, i32, i32, %"class.icu_69::StringTrieBuilder::Node"*)* @_ZNK6icu_6916BytesTrieBuilder21createLinearMatchNodeEiiiPNS_17StringTrieBuilder4NodeE to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32)* @_ZN6icu_6916BytesTrieBuilder5writeEi to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i32, i32)* @_ZN6icu_6916BytesTrieBuilder17writeElementUnitsEiii to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)* @_ZN6icu_6916BytesTrieBuilder18writeValueAndFinalEia to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i8, i32, i32)* @_ZN6icu_6916BytesTrieBuilder17writeValueAndTypeEaii to i8*), i8* bitcast (i32 (%"class.icu_69::BytesTrieBuilder"*, i32)* @_ZN6icu_6916BytesTrieBuilder12writeDeltaToEi to i8*)] }, align 8
@_ZTVN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE to i8*), i8* bitcast (void (%"class.icu_69::UObject"*)* @_ZN6icu_697UObjectD2Ev to i8*), i8* bitcast (void (%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*)* @_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNodeD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*), i8* bitcast (i8 (%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*, %"class.icu_69::StringTrieBuilder::Node"*)* @_ZNK6icu_6916BytesTrieBuilder17BTLinearMatchNodeeqERKNS_17StringTrieBuilder4NodeE to i8*), i8* bitcast (i32 (%"class.icu_69::StringTrieBuilder::LinearMatchNode"*, i32)* @_ZN6icu_6917StringTrieBuilder15LinearMatchNode19markRightEdgesFirstEi to i8*), i8* bitcast (void (%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*, %"class.icu_69::StringTrieBuilder"*)* @_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNode5writeERNS_17StringTrieBuilderE to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6916BytesTrieBuilderE = hidden constant [28 x i8] c"N6icu_6916BytesTrieBuilderE\00", align 1
@_ZTIN6icu_6917StringTrieBuilderE = external constant i8*
@_ZTIN6icu_6916BytesTrieBuilderE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN6icu_6916BytesTrieBuilderE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917StringTrieBuilderE to i8*) }, align 8
@_ZTSN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE = hidden constant [47 x i8] c"N6icu_6916BytesTrieBuilder17BTLinearMatchNodeE\00", align 1
@_ZTIN6icu_6917StringTrieBuilder15LinearMatchNodeE = external constant i8*
@_ZTIN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZTSN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_6917StringTrieBuilder15LinearMatchNodeE to i8*) }, align 8

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_6916BytesTrieBuilderC1ER10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::BytesTrieBuilder"*, i32*), void (%"class.icu_69::BytesTrieBuilder"*, i32*)* @_ZN6icu_6916BytesTrieBuilderC2ER10UErrorCode
@_ZN6icu_6916BytesTrieBuilderD1Ev = hidden unnamed_addr alias void (%"class.icu_69::BytesTrieBuilder"*), void (%"class.icu_69::BytesTrieBuilder"*)* @_ZN6icu_6916BytesTrieBuilderD2Ev
@_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNodeC1EPKciPNS_17StringTrieBuilder4NodeE = hidden unnamed_addr alias void (%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*, i8*, i32, %"class.icu_69::StringTrieBuilder::Node"*), void (%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*, i8*, i32, %"class.icu_69::StringTrieBuilder::Node"*)* @_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNodeC2EPKciPNS_17StringTrieBuilder4NodeE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #13
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #14
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #14
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #14
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #14
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #13
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #14
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieElement5setToENS_11StringPieceEiRNS_10CharStringER10UErrorCode(%"class.icu_69::BytesTrieElement"* nocapture, i8*, i32, i32, %"class.icu_69::CharString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %7 = load i32, i32* %5, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %28

9:                                                ; preds = %6
  %10 = icmp sgt i32 %2, 65535
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  store i32 8, i32* %5, align 4
  br label %28

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %2, 255
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = xor i32 %14, -1
  %18 = lshr i32 %2, 8
  %19 = trunc i32 %18 to i8
  %20 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %4, i8 signext %19, i32* dereferenceable(4) %5) #14
  br label %21

21:                                               ; preds = %16, %12
  %22 = phi i32 [ %17, %16 ], [ %14, %12 ]
  %23 = trunc i32 %2 to i8
  %24 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %4, i8 signext %23, i32* dereferenceable(4) %5) #14
  %25 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %0, i64 0, i32 0
  store i32 %22, i32* %25, align 4
  %26 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %0, i64 0, i32 1
  store i32 %3, i32* %26, align 4
  %27 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %4, i8* %1, i32 %2, i32* dereferenceable(4) %5) #14
  br label %28

28:                                               ; preds = %11, %21, %6
  ret void
}

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"*, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieElement15compareStringToERKS0_RKNS_10CharStringE(%"class.icu_69::BytesTrieElement"* nocapture readonly, %"class.icu_69::BytesTrieElement"* nocapture readonly dereferenceable(8), %"class.icu_69::CharString"* nocapture readonly dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = add nuw nsw i32 %5, 1
  %9 = sext i32 %5 to i64
  %10 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %2, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  br label %31

15:                                               ; preds = %3
  %16 = xor i32 %5, -1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %2, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 8
  %24 = sub i32 0, %5
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %23, %28
  %30 = sub i32 1, %5
  br label %31

31:                                               ; preds = %7, %15
  %32 = phi i8* [ %11, %7 ], [ %19, %15 ]
  %33 = phi i32 [ %8, %7 ], [ %30, %15 ]
  %34 = phi i32 [ %14, %7 ], [ %29, %15 ]
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  %37 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %46

40:                                               ; preds = %31
  %41 = add nuw nsw i32 %38, 1
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds i8, i8* %32, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  br label %60

46:                                               ; preds = %31
  %47 = xor i32 %38, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %32, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = sub i32 0, %38
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %32, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %52, %57
  %59 = sub i32 1, %38
  br label %60

60:                                               ; preds = %40, %46
  %61 = phi i32 [ %41, %40 ], [ %59, %46 ]
  %62 = phi i32 [ %45, %40 ], [ %58, %46 ]
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, i8* %32, i64 %63
  %65 = sub nsw i32 %34, %62
  %66 = icmp slt i32 %65, 1
  %67 = select i1 %66, i32 %34, i32 %62
  %68 = sext i32 %67 to i64
  %69 = tail call i32 @memcmp(i8* %36, i8* %64, i64 %68) #15
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 %65, i32 %69
  ret i32 %71
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieBuilderC2ER10UErrorCode(%"class.icu_69::BytesTrieBuilder"*, i32* nocapture dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6917StringTrieBuilderC2Ev(%"class.icu_69::StringTrieBuilder"* %3) #14
  %4 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6icu_6916BytesTrieBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %6 = bitcast %"class.icu_69::CharString"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  %7 = load i32, i32* %1, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %22

9:                                                ; preds = %2
  %10 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #14
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store %"class.icu_69::CharString"* null, %"class.icu_69::CharString"** %5, align 8
  store i32 7, i32* %1, align 4
  br label %22

13:                                               ; preds = %9
  %14 = bitcast i8* %10 to i8**
  %15 = getelementptr inbounds i8, i8* %10, i64 13
  store i8* %15, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 40, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 12
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %10, i64 56
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 8
  store i8 0, i8* %15, align 1
  %21 = bitcast %"class.icu_69::CharString"** %5 to i8**
  store i8* %10, i8** %21, align 8
  br label %22

22:                                               ; preds = %13, %2, %12
  ret void
}

declare void @_ZN6icu_6917StringTrieBuilderC2Ev(%"class.icu_69::StringTrieBuilder"*) unnamed_addr #4

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieBuilderD2Ev(%"class.icu_69::BytesTrieBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6icu_6916BytesTrieBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %3, align 8
  %5 = icmp eq %"class.icu_69::CharString"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @uprv_free_69(i8* %12) #14
  br label %13

13:                                               ; preds = %6, %10
  %14 = bitcast %"class.icu_69::CharString"* %4 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %14) #14
  br label %15

15:                                               ; preds = %13, %1
  %16 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %17 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %16, align 8
  %18 = icmp eq %"class.icu_69::BytesTrieElement"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.icu_69::BytesTrieElement"* %17 to i8*
  tail call void @_ZN6icu_697UMemorydaEPv(i8* nonnull %20) #14
  br label %21

21:                                               ; preds = %19, %15
  %22 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %23 = load i8*, i8** %22, align 8
  tail call void @uprv_free_69(i8* %23) #14
  %24 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6917StringTrieBuilderD2Ev(%"class.icu_69::StringTrieBuilder"* %24) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydaEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6icu_6917StringTrieBuilderD2Ev(%"class.icu_69::StringTrieBuilder"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieBuilderD0Ev(%"class.icu_69::BytesTrieBuilder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN6icu_6916BytesTrieBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %3, align 8
  %5 = icmp eq %"class.icu_69::CharString"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %4, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @uprv_free_69(i8* %12) #14
  br label %13

13:                                               ; preds = %10, %6
  %14 = bitcast %"class.icu_69::CharString"* %4 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %14) #14
  br label %15

15:                                               ; preds = %13, %1
  %16 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %17 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %16, align 8
  %18 = icmp eq %"class.icu_69::BytesTrieElement"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.icu_69::BytesTrieElement"* %17 to i8*
  tail call void @_ZN6icu_697UMemorydaEPv(i8* nonnull %20) #14
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %23 = load i8*, i8** %22, align 8
  tail call void @uprv_free_69(i8* %23) #14
  %24 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0
  tail call void @_ZN6icu_6917StringTrieBuilderD2Ev(%"class.icu_69::StringTrieBuilder"* %24) #14
  %25 = bitcast %"class.icu_69::BytesTrieBuilder"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %25) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.icu_69::BytesTrieBuilder"* @_ZN6icu_6916BytesTrieBuilder3addENS_11StringPieceEiR10UErrorCode(%"class.icu_69::BytesTrieBuilder"* returned, i8*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %81

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store i32 30, i32* %4, align 4
  br label %81

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %21 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %20, align 8
  br label %53

22:                                               ; preds = %13
  %23 = icmp eq i32 %15, 0
  %24 = shl nsw i32 %15, 2
  %25 = select i1 %23, i32 1024, i32 %24
  %26 = sext i32 %25 to i64
  %27 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %26, i64 8)
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 -1, i64 %29
  %31 = tail call i8* @_ZN6icu_697UMemorynaEm(i64 %30) #14
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %22
  store i32 7, i32* %4, align 4
  br label %81

34:                                               ; preds = %22
  %35 = load i32, i32* %14, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %39 = bitcast %"class.icu_69::BytesTrieElement"** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = sext i32 %35 to i64
  %42 = shl nsw i64 %41, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %40, i64 %42, i1 false)
  br label %43

43:                                               ; preds = %37, %34
  %44 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %45 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %44, align 8
  %46 = icmp eq %"class.icu_69::BytesTrieElement"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.icu_69::BytesTrieElement"* %45 to i8*
  tail call void @_ZN6icu_697UMemorydaEPv(i8* nonnull %48) #14
  br label %49

49:                                               ; preds = %47, %43
  %50 = bitcast %"class.icu_69::BytesTrieElement"** %44 to i8**
  store i8* %31, i8** %50, align 8
  store i32 %25, i32* %16, align 8
  %51 = bitcast i8* %31 to %"class.icu_69::BytesTrieElement"*
  %52 = load i32, i32* %14, align 4
  br label %53

53:                                               ; preds = %19, %49
  %54 = phi i32 [ %15, %19 ], [ %52, %49 ]
  %55 = phi %"class.icu_69::BytesTrieElement"* [ %21, %19 ], [ %51, %49 ]
  %56 = add nsw i32 %54, 1
  store i32 %56, i32* %14, align 4
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %59 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %58, align 8
  %60 = load i32, i32* %4, align 4
  %61 = icmp slt i32 %60, 1
  br i1 %61, label %62, label %81

62:                                               ; preds = %53
  %63 = icmp sgt i32 %2, 65535
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  store i32 8, i32* %4, align 4
  br label %81

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %59, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %2, 255
  br i1 %68, label %69, label %74

69:                                               ; preds = %65
  %70 = xor i32 %67, -1
  %71 = lshr i32 %2, 8
  %72 = trunc i32 %71 to i8
  %73 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %59, i8 signext %72, i32* dereferenceable(4) %4) #14
  br label %74

74:                                               ; preds = %69, %65
  %75 = phi i32 [ %70, %69 ], [ %67, %65 ]
  %76 = trunc i32 %2 to i8
  %77 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %59, i8 signext %76, i32* dereferenceable(4) %4) #14
  %78 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %55, i64 %57, i32 0
  store i32 %75, i32* %78, align 4
  %79 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %55, i64 %57, i32 1
  store i32 %3, i32* %79, align 4
  %80 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %59, i8* %1, i32 %2, i32* dereferenceable(4) %4) #14
  br label %81

81:                                               ; preds = %74, %64, %53, %33, %5, %12
  ret %"class.icu_69::BytesTrieBuilder"* %0
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynaEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::BytesTrie"* @_ZN6icu_6916BytesTrieBuilder5buildE22UStringTrieBuildOptionR10UErrorCode(%"class.icu_69::BytesTrieBuilder"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN6icu_6916BytesTrieBuilder10buildBytesE22UStringTrieBuildOptionR10UErrorCode(%"class.icu_69::BytesTrieBuilder"* %0, i32 %1, i32* dereferenceable(4) %2)
  %4 = load i32, i32* %2, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #14
  %8 = icmp eq i8* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 6
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %13, %15
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %11, i64 %17
  %19 = bitcast i8* %7 to i8**
  store i8* %11, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 8
  %21 = bitcast i8* %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = getelementptr inbounds i8, i8* %7, i64 16
  %23 = bitcast i8* %22 to i8**
  store i8* %18, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 -1, i32* %25, align 8
  %26 = bitcast i8* %7 to %"class.icu_69::BytesTrie"*
  store i8* null, i8** %10, align 8
  store i32 0, i32* %12, align 8
  br label %28

27:                                               ; preds = %6
  store i32 7, i32* %2, align 4
  br label %28

28:                                               ; preds = %3, %27, %9
  %29 = phi %"class.icu_69::BytesTrie"* [ null, %27 ], [ %26, %9 ], [ null, %3 ]
  ret %"class.icu_69::BytesTrie"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieBuilder10buildBytesE22UStringTrieBuildOptionR10UErrorCode(%"class.icu_69::BytesTrieBuilder"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca { i8*, i32 }, align 8
  %5 = bitcast { i8*, i32 }* %4 to %"class.icu_69::StringPiece"*
  %6 = alloca { i8*, i32 }, align 8
  %7 = bitcast { i8*, i32 }* %6 to %"class.icu_69::StringPiece"*
  %8 = load i32, i32* %2, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %155

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %12 = load i8*, i8** %11, align 8
  %13 = icmp ne i8* %12, null
  %14 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  %17 = and i1 %13, %16
  br i1 %17, label %155, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %20 = icmp eq i32 %15, 0
  br i1 %20, label %21, label %131

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  store i32 8, i32* %2, align 4
  br label %155

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %28 = bitcast %"class.icu_69::BytesTrieElement"** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %31 = bitcast %"class.icu_69::CharString"** %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @uprv_sortArray_69(i8* %29, i32 %23, i32 8, i32 (i8*, i8*, i8*)* nonnull @_ZN6icu_69L21compareElementStringsEPKvS1_S1_, i8* %32, i8 signext 0, i32* %2) #14
  %33 = load i32, i32* %2, align 4
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %155

35:                                               ; preds = %26
  %36 = bitcast { i8*, i32 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #14
  %37 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i64 0, i32 0
  %38 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i64 0, i32 1
  %39 = bitcast { i8*, i32 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  %40 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %27, align 8
  %41 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %30, align 8
  %42 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %40, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %53

45:                                               ; preds = %35
  %46 = add nuw nsw i32 %43, 1
  %47 = sext i32 %43 to i64
  %48 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %41, i64 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 %47
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  br label %69

53:                                               ; preds = %35
  %54 = xor i32 %43, -1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %41, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %55
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 8
  %62 = sub i32 0, %43
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %57, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %61, %66
  %68 = sub i32 1, %43
  br label %69

69:                                               ; preds = %45, %53
  %70 = phi i8* [ %49, %45 ], [ %57, %53 ]
  %71 = phi i32 [ %46, %45 ], [ %68, %53 ]
  %72 = phi i32 [ %52, %45 ], [ %67, %53 ]
  %73 = sext i32 %71 to i64
  %74 = getelementptr inbounds i8, i8* %70, i64 %73
  store i8* %74, i8** %37, align 8
  store i32 %72, i32* %38, align 8
  %75 = load i32, i32* %22, align 4
  %76 = icmp sgt i32 %75, 1
  br i1 %76, label %77, label %82

77:                                               ; preds = %69
  %78 = bitcast { i8*, i32 }* %6 to i8*
  %79 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i64 0, i32 0
  %80 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %6, i64 0, i32 1
  %81 = bitcast { i8*, i32 }* %6 to i8*
  br label %83

82:                                               ; preds = %122, %69
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  br label %131

83:                                               ; preds = %127, %77
  %84 = phi %"class.icu_69::CharString"* [ %41, %77 ], [ %129, %127 ]
  %85 = phi %"class.icu_69::BytesTrieElement"* [ %40, %77 ], [ %128, %127 ]
  %86 = phi i64 [ 1, %77 ], [ %123, %127 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #14
  %87 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %85, i64 %86, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %90, label %98

90:                                               ; preds = %83
  %91 = add nuw nsw i32 %88, 1
  %92 = sext i32 %88 to i64
  %93 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %84, i64 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 %92
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  br label %114

98:                                               ; preds = %83
  %99 = xor i32 %88, -1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %84, i64 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr inbounds i8, i8* %102, i64 %100
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw nsw i32 %105, 8
  %107 = sub i32 0, %88
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %102, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = or i32 %106, %111
  %113 = sub i32 1, %88
  br label %114

114:                                              ; preds = %90, %98
  %115 = phi i8* [ %94, %90 ], [ %102, %98 ]
  %116 = phi i32 [ %91, %90 ], [ %113, %98 ]
  %117 = phi i32 [ %97, %90 ], [ %112, %98 ]
  %118 = sext i32 %116 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 %118
  store i8* %119, i8** %79, align 8
  store i32 %117, i32* %80, align 8
  %120 = call signext i8 @_ZN6icu_69eqERKNS_11StringPieceES2_(%"class.icu_69::StringPiece"* nonnull dereferenceable(16) %5, %"class.icu_69::StringPiece"* nonnull dereferenceable(16) %7) #14
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %130

122:                                              ; preds = %114
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %78, i64 12, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #14
  %123 = add nuw nsw i64 %86, 1
  %124 = load i32, i32* %22, align 4
  %125 = sext i32 %124 to i64
  %126 = icmp slt i64 %123, %125
  br i1 %126, label %127, label %82

127:                                              ; preds = %122
  %128 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %27, align 8
  %129 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %30, align 8
  br label %83

130:                                              ; preds = %114
  store i32 1, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  br label %155

131:                                              ; preds = %82, %18
  store i32 0, i32* %19, align 4
  %132 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %133 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %132, align 8
  %134 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %133, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = icmp sgt i32 %135, 1024
  %137 = select i1 %136, i32 %135, i32 1024
  %138 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 6
  %139 = load i32, i32* %138, align 8
  %140 = icmp slt i32 %139, %137
  br i1 %140, label %141, label %148

141:                                              ; preds = %131
  %142 = load i8*, i8** %11, align 8
  call void @uprv_free_69(i8* %142) #14
  %143 = zext i32 %137 to i64
  %144 = call noalias i8* @uprv_malloc_69(i64 %143) #13
  store i8* %144, i8** %11, align 8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %146, label %147

146:                                              ; preds = %141
  store i32 7, i32* %2, align 4
  store i32 0, i32* %138, align 8
  br label %155

147:                                              ; preds = %141
  store i32 %137, i32* %138, align 8
  br label %148

148:                                              ; preds = %147, %131
  %149 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 0
  %150 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 4
  %151 = load i32, i32* %150, align 4
  call void @_ZN6icu_6917StringTrieBuilder5buildE22UStringTrieBuildOptioniR10UErrorCode(%"class.icu_69::StringTrieBuilder"* %149, i32 %1, i32 %151, i32* dereferenceable(4) %2) #14
  %152 = load i8*, i8** %11, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %155

154:                                              ; preds = %148
  store i32 7, i32* %2, align 4
  br label %155

155:                                              ; preds = %10, %130, %146, %154, %148, %26, %3, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i32 } @_ZN6icu_6916BytesTrieBuilder16buildStringPieceE22UStringTrieBuildOptionR10UErrorCode(%"class.icu_69::BytesTrieBuilder"*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN6icu_6916BytesTrieBuilder10buildBytesE22UStringTrieBuildOptionR10UErrorCode(%"class.icu_69::BytesTrieBuilder"* %0, i32 %1, i32* dereferenceable(4) %2)
  %4 = load i32, i32* %2, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %12 = load i32, i32* %11, align 4
  %13 = sub nsw i32 %10, %12
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %8, i64 %14
  br label %16

16:                                               ; preds = %3, %6
  %17 = phi i32 [ 0, %3 ], [ %12, %6 ]
  %18 = phi i8* [ null, %3 ], [ %15, %6 ]
  %19 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %20 = insertvalue { i8*, i32 } %19, i32 %17, 1
  ret { i8*, i32 } %20
}

declare void @uprv_sortArray_69(i8*, i32, i32, i32 (i8*, i8*, i8*)*, i8*, i8 signext, i32*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @_ZN6icu_69L21compareElementStringsEPKvS1_S1_(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #5 {
  %4 = bitcast i8* %1 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = add nuw nsw i32 %5, 1
  %9 = sext i32 %5 to i64
  %10 = bitcast i8* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  br label %31

15:                                               ; preds = %3
  %16 = xor i32 %5, -1
  %17 = sext i32 %16 to i64
  %18 = bitcast i8* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 8
  %24 = sub i32 0, %5
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %19, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %23, %28
  %30 = sub i32 1, %5
  br label %31

31:                                               ; preds = %15, %7
  %32 = phi i8* [ %11, %7 ], [ %19, %15 ]
  %33 = phi i32 [ %8, %7 ], [ %30, %15 ]
  %34 = phi i32 [ %14, %7 ], [ %29, %15 ]
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  %37 = bitcast i8* %2 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %46

40:                                               ; preds = %31
  %41 = add nuw nsw i32 %38, 1
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds i8, i8* %32, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  br label %60

46:                                               ; preds = %31
  %47 = xor i32 %38, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %32, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = sub i32 0, %38
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %32, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %52, %57
  %59 = sub i32 1, %38
  br label %60

60:                                               ; preds = %40, %46
  %61 = phi i32 [ %41, %40 ], [ %59, %46 ]
  %62 = phi i32 [ %45, %40 ], [ %58, %46 ]
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, i8* %32, i64 %63
  %65 = sub nsw i32 %34, %62
  %66 = icmp slt i32 %65, 1
  %67 = select i1 %66, i32 %34, i32 %62
  %68 = sext i32 %67 to i64
  %69 = tail call i32 @memcmp(i8* %36, i8* %64, i64 %68) #15
  %70 = icmp eq i32 %69, 0
  %71 = select i1 %70, i32 %65, i32 %69
  ret i32 %71
}

declare signext i8 @_ZN6icu_69eqERKNS_11StringPieceES2_(%"class.icu_69::StringPiece"* dereferenceable(16), %"class.icu_69::StringPiece"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN6icu_6917StringTrieBuilder5buildE22UStringTrieBuildOptioniR10UErrorCode(%"class.icu_69::StringTrieBuilder"*, i32, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(56) %"class.icu_69::BytesTrieBuilder"* @_ZN6icu_6916BytesTrieBuilder5clearEv(%"class.icu_69::BytesTrieBuilder"* returned) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %3 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %3, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %3, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 4
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  store i32 0, i32* %8, align 4
  ret %"class.icu_69::BytesTrieBuilder"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieBuilder22getElementStringLengthEi(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %7 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %4, i64 %5, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  br label %33

18:                                               ; preds = %2
  %19 = xor i32 %9, -1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %7, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %20
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = sub i32 0, %9
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %22, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = or i32 %26, %31
  br label %33

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %17, %11 ], [ %32, %18 ]
  ret i32 %34
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @_ZNK6icu_6916BytesTrieBuilder14getElementUnitEii(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32, i32) unnamed_addr #10 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %5 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %4, align 8
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %8 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %5, i64 %6, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 0
  %12 = sub i32 0, %10
  %13 = select i1 %11, i32 %12, i32 %10
  %14 = add nuw i32 %13, 1
  %15 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = sext i32 %2 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i16
  ret i16 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieBuilder15getElementValueEi(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %4 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %4, i64 %5, i32 1
  %7 = load i32, i32* %6, align 4
  ret i32 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieBuilder21getLimitOfLinearMatchEiii(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32, i32, i32) unnamed_addr #10 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %6 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %10 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %7, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %22

14:                                               ; preds = %4
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %10, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %15
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = sub nsw i32 0, %12
  br label %37

22:                                               ; preds = %4
  %23 = xor i32 %12, -1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %10, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 8
  %31 = sub i32 0, %12
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %26, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = or i32 %30, %35
  br label %37

37:                                               ; preds = %14, %22
  %38 = phi i32 [ %21, %14 ], [ %31, %22 ]
  %39 = phi i8* [ %17, %14 ], [ %26, %22 ]
  %40 = phi i32 [ %20, %14 ], [ %36, %22 ]
  %41 = icmp slt i32 %12, 0
  %42 = select i1 %41, i32 %38, i32 %12
  %43 = add nuw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %8, i32 0
  %46 = sext i32 %3 to i64
  %47 = sext i32 %40 to i64
  %48 = getelementptr inbounds i8, i8* %39, i64 %44
  br label %49

49:                                               ; preds = %53, %37
  %50 = phi i64 [ %51, %53 ], [ %46, %37 ]
  %51 = add nsw i64 %50, 1
  %52 = icmp slt i64 %51, %47
  br i1 %52, label %53, label %66

53:                                               ; preds = %49
  %54 = getelementptr inbounds i8, i8* %48, i64 %51
  %55 = load i8, i8* %54, align 1
  %56 = load i32, i32* %45, align 4
  %57 = icmp slt i32 %56, 0
  %58 = sub i32 0, %56
  %59 = select i1 %57, i32 %58, i32 %56
  %60 = add nuw i32 %59, 1
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %39, i64 %61
  %63 = getelementptr inbounds i8, i8* %62, i64 %51
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %55, %64
  br i1 %65, label %49, label %66

66:                                               ; preds = %49, %53
  %67 = trunc i64 %51 to i32
  ret i32 %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieBuilder17countElementUnitsEiii(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32, i32, i32) unnamed_addr #10 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %6 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %8 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %3 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  %13 = sext i32 %2 to i64
  br label %14

14:                                               ; preds = %42, %4
  %15 = phi i32 [ 1, %4 ], [ %44, %42 ]
  %16 = phi i32 [ %1, %4 ], [ %43, %42 ]
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %17, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, 0
  %21 = sub i32 0, %19
  %22 = select i1 %20, i32 %21, i32 %19
  %23 = add nuw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %12, i64 %24
  %26 = load i8, i8* %25, align 1
  br label %27

27:                                               ; preds = %31, %14
  %28 = phi i64 [ %29, %31 ], [ %17, %14 ]
  %29 = add nsw i64 %28, 1
  %30 = icmp slt i64 %29, %13
  br i1 %30, label %31, label %45

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %29, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  %35 = sub i32 0, %33
  %36 = select i1 %34, i32 %35, i32 %33
  %37 = add nuw i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %12, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %26, %40
  br i1 %41, label %27, label %42

42:                                               ; preds = %31
  %43 = trunc i64 %29 to i32
  %44 = add i32 %15, 1
  br label %14

45:                                               ; preds = %27
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieBuilder23skipElementsBySomeUnitsEiii(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32, i32, i32) unnamed_addr #10 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %6 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %8 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %7, align 8
  %9 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %2 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  br label %13

13:                                               ; preds = %39, %4
  %14 = phi i32 [ %1, %4 ], [ %40, %39 ]
  %15 = phi i32 [ %3, %4 ], [ %41, %39 ]
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %16, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  %20 = sub i32 0, %18
  %21 = select i1 %19, i32 %20, i32 %18
  %22 = add nuw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %12, i64 %23
  %25 = load i8, i8* %24, align 1
  br label %26

26:                                               ; preds = %26, %13
  %27 = phi i64 [ %28, %26 ], [ %16, %13 ]
  %28 = add nsw i64 %27, 1
  %29 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %28, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  %32 = sub i32 0, %30
  %33 = select i1 %31, i32 %32, i32 %30
  %34 = add nuw i32 %33, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %12, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %25, %37
  br i1 %38, label %26, label %39

39:                                               ; preds = %26
  %40 = trunc i64 %28 to i32
  %41 = add nsw i32 %15, -1
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %13, label %43

43:                                               ; preds = %39
  %44 = trunc i64 %28 to i32
  ret i32 %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6icu_6916BytesTrieBuilder26indexOfElementWithNextUnitEiiDs(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32, i32, i16 zeroext) unnamed_addr #10 align 2 {
  %5 = zext i16 %3 to i32
  %6 = shl i32 %5, 24
  %7 = ashr exact i32 %6, 24
  %8 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %9 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %11 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %11, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %2 to i64
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %14
  br label %17

17:                                               ; preds = %17, %4
  %18 = phi i64 [ %30, %17 ], [ %15, %4 ]
  %19 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %9, i64 %18, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 0
  %22 = sub i32 0, %20
  %23 = select i1 %21, i32 %22, i32 %20
  %24 = add nuw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %16, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %7, %28
  %30 = add i64 %18, 1
  br i1 %29, label %17, label %31

31:                                               ; preds = %17
  %32 = trunc i64 %18 to i32
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNodeC2EPKciPNS_17StringTrieBuilder4NodeE(%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* nocapture, i8*, i32, %"class.icu_69::StringTrieBuilder::Node"*) unnamed_addr #0 align 2 {
  %5 = mul i32 %2, 37
  %6 = add i32 %5, 298634171
  %7 = icmp eq %"class.icu_69::StringTrieBuilder::Node"* %3, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.icu_69::StringTrieBuilder::Node", %"class.icu_69::StringTrieBuilder::Node"* %3, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %4, %8
  %12 = phi i32 [ %10, %8 ], [ 0, %4 ]
  %13 = add i32 %6, %12
  %14 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %13, i32* %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 1
  store i32 %2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 2
  store %"class.icu_69::StringTrieBuilder::Node"* %3, %"class.icu_69::StringTrieBuilder::Node"** %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %21 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 1
  store i8* %1, i8** %21, align 8
  %22 = mul i32 %13, 37
  %23 = tail call i32 @ustr_hashCharsN_69(i8* %1, i32 %2) #14
  %24 = add i32 %22, %23
  store i32 %24, i32* %15, align 8
  ret void
}

declare i32 @ustr_hashCharsN_69(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6916BytesTrieBuilder17BTLinearMatchNodeeqERKNS_17StringTrieBuilder4NodeE(%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*, %"class.icu_69::StringTrieBuilder::Node"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = icmp eq %"class.icu_69::StringTrieBuilder::Node"* %3, %1
  br i1 %4, label %21, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0
  %7 = tail call signext i8 @_ZNK6icu_6917StringTrieBuilder15LinearMatchNodeeqERKNS0_4NodeE(%"class.icu_69::StringTrieBuilder::LinearMatchNode"* %6, %"class.icu_69::StringTrieBuilder::Node"* dereferenceable(16) %1) #14
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::StringTrieBuilder::Node", %"class.icu_69::StringTrieBuilder::Node"* %1, i64 2, i32 1
  %13 = bitcast i32* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = tail call i32 @bcmp(i8* %11, i8* %14, i64 %17)
  %19 = icmp eq i32 %18, 0
  %20 = zext i1 %19 to i8
  br label %21

21:                                               ; preds = %5, %2, %9
  %22 = phi i8 [ %20, %9 ], [ 1, %2 ], [ 0, %5 ]
  ret i8 %22
}

declare signext i8 @_ZNK6icu_6917StringTrieBuilder15LinearMatchNodeeqERKNS0_4NodeE(%"class.icu_69::StringTrieBuilder::LinearMatchNode"*, %"class.icu_69::StringTrieBuilder::Node"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNode5writeERNS_17StringTrieBuilderE(%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* nocapture, %"class.icu_69::StringTrieBuilder"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.icu_69::StringTrieBuilder"* %1 to %"class.icu_69::BytesTrieBuilder"*
  %4 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder::Node"** %4, align 8
  %6 = bitcast %"class.icu_69::StringTrieBuilder::Node"* %5 to void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)***
  %7 = load void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)**, void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)*, void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)** %7, i64 5
  %9 = load void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)*, void (%"class.icu_69::StringTrieBuilder::Node"*, %"class.icu_69::StringTrieBuilder"*)** %8, align 8
  tail call void %9(%"class.icu_69::StringTrieBuilder::Node"* %5, %"class.icu_69::StringTrieBuilder"* dereferenceable(16) %1) #14
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = tail call i32 @_ZN6icu_6916BytesTrieBuilder5writeEPKci(%"class.icu_69::BytesTrieBuilder"* %3, i8* %11, i32 %13)
  %15 = bitcast %"class.icu_69::StringTrieBuilder"* %1 to i32 (%"class.icu_69::BytesTrieBuilder"*)***
  %16 = load i32 (%"class.icu_69::BytesTrieBuilder"*)**, i32 (%"class.icu_69::BytesTrieBuilder"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.icu_69::BytesTrieBuilder"*)*, i32 (%"class.icu_69::BytesTrieBuilder"*)** %16, i64 12
  %18 = load i32 (%"class.icu_69::BytesTrieBuilder"*)*, i32 (%"class.icu_69::BytesTrieBuilder"*)** %17, align 8
  %19 = tail call i32 %18(%"class.icu_69::BytesTrieBuilder"* %3) #14
  %20 = load i32, i32* %12, align 8
  %21 = add i32 %19, -1
  %22 = add i32 %21, %20
  %23 = bitcast %"class.icu_69::StringTrieBuilder"* %1 to i32 (%"class.icu_69::BytesTrieBuilder"*, i32)***
  %24 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)**, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %24, i64 15
  %26 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %25, align 8
  %27 = tail call i32 %26(%"class.icu_69::BytesTrieBuilder"* %3, i32 %22) #14
  %28 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916BytesTrieBuilder5writeEPKci(%"class.icu_69::BytesTrieBuilder"* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, %2
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %42, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, %6
  br i1 %13, label %14, label %35

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %16, %14 ], [ %12, %10 ]
  %16 = shl nsw i32 %15, 1
  %17 = icmp sgt i32 %16, %6
  br i1 %17, label %18, label %14

18:                                               ; preds = %14
  %19 = sext i32 %16 to i64
  %20 = tail call noalias i8* @uprv_malloc_69(i64 %19) #13
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %23) #14
  store i8* null, i8** %7, align 8
  store i32 0, i32* %11, align 8
  br label %42

24:                                               ; preds = %18
  %25 = load i32, i32* %4, align 4
  %26 = sub nsw i32 %16, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %20, i64 %27
  %29 = load i8*, i8** %7, align 8
  %30 = load i32, i32* %11, align 8
  %31 = sub nsw i32 %30, %25
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %29, i64 %32
  %34 = sext i32 %25 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %33, i64 %34, i1 false) #14
  tail call void @uprv_free_69(i8* %29) #14
  store i8* %20, i8** %7, align 8
  store i32 %16, i32* %11, align 8
  br label %35

35:                                               ; preds = %24, %10
  %36 = phi i32 [ %16, %24 ], [ %12, %10 ]
  %37 = phi i8* [ %20, %24 ], [ %8, %10 ]
  store i32 %6, i32* %4, align 4
  %38 = sub nsw i32 %36, %6
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  %41 = sext i32 %2 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %1, i64 %41, i1 false)
  br label %42

42:                                               ; preds = %22, %3, %35
  %43 = load i32, i32* %4, align 4
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.icu_69::StringTrieBuilder::Node"* @_ZNK6icu_6916BytesTrieBuilder21createLinearMatchNodeEiiiPNS_17StringTrieBuilder4NodeE(%"class.icu_69::BytesTrieBuilder"* nocapture readonly, i32, i32, i32, %"class.icu_69::StringTrieBuilder::Node"*) unnamed_addr #0 align 2 {
  %6 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 48) #14
  %7 = icmp eq i8* %6, null
  br i1 %7, label %53, label %8

8:                                                ; preds = %5
  %9 = bitcast i8* %6 to %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %11 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %14 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %13, align 8
  %15 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %11, i64 %12, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  %18 = sub i32 0, %16
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = add nuw i32 %19, 1
  %21 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %14, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = sext i32 %2 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = mul i32 %3, 37
  %28 = add i32 %27, 298634171
  %29 = icmp eq %"class.icu_69::StringTrieBuilder::Node"* %4, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"class.icu_69::StringTrieBuilder::Node", %"class.icu_69::StringTrieBuilder::Node"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  br label %33

33:                                               ; preds = %8, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %8 ]
  %35 = add i32 %28, %34
  %36 = bitcast i8* %6 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %6, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 %35, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %6, i64 12
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %6, i64 16
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds i8, i8* %6, i64 20
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %6, i64 24
  %45 = bitcast i8* %44 to i32*
  store i32 %3, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %6, i64 32
  %47 = bitcast i8* %46 to %"class.icu_69::StringTrieBuilder::Node"**
  store %"class.icu_69::StringTrieBuilder::Node"* %4, %"class.icu_69::StringTrieBuilder::Node"** %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN6icu_6916BytesTrieBuilder17BTLinearMatchNodeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %48 = getelementptr inbounds i8, i8* %6, i64 40
  %49 = bitcast i8* %48 to i8**
  store i8* %26, i8** %49, align 8
  %50 = mul i32 %35, 37
  %51 = tail call i32 @ustr_hashCharsN_69(i8* %26, i32 %3) #14
  %52 = add i32 %51, %50
  store i32 %52, i32* %38, align 8
  br label %53

53:                                               ; preds = %33, %5
  %54 = phi %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* [ %9, %33 ], [ null, %5 ]
  %55 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %54, i64 0, i32 0, i32 0, i32 0
  ret %"class.icu_69::StringTrieBuilder::Node"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6916BytesTrieBuilder14ensureCapacityEi(%"class.icu_69::BytesTrieBuilder"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, %1
  br i1 %9, label %10, label %32

10:                                               ; preds = %6, %10
  %11 = phi i32 [ %12, %10 ], [ %8, %6 ]
  %12 = shl nsw i32 %11, 1
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = sext i32 %12 to i64
  %16 = tail call noalias i8* @uprv_malloc_69(i64 %15) #13
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = load i8*, i8** %3, align 8
  tail call void @uprv_free_69(i8* %19) #14
  store i8* null, i8** %3, align 8
  store i32 0, i32* %7, align 8
  br label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = sub nsw i32 %12, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %16, i64 %24
  %26 = load i8*, i8** %3, align 8
  %27 = load i32, i32* %7, align 8
  %28 = sub nsw i32 %27, %22
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %30, i64 %31, i1 false)
  tail call void @uprv_free_69(i8* %26) #14
  store i8* %16, i8** %3, align 8
  store i32 %12, i32* %7, align 8
  br label %32

32:                                               ; preds = %6, %20, %18, %2
  %33 = phi i8 [ 0, %2 ], [ 0, %18 ], [ 1, %20 ], [ 1, %6 ]
  ret i8 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916BytesTrieBuilder5writeEi(%"class.icu_69::BytesTrieBuilder"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  %6 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 5
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, %4
  br i1 %12, label %34, label %13

13:                                               ; preds = %9, %13
  %14 = phi i32 [ %15, %13 ], [ %11, %9 ]
  %15 = shl nsw i32 %14, 1
  %16 = icmp sgt i32 %15, %5
  br i1 %16, label %17, label %13

17:                                               ; preds = %13
  %18 = sext i32 %15 to i64
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #13
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %22) #14
  store i8* null, i8** %6, align 8
  store i32 0, i32* %10, align 8
  br label %41

23:                                               ; preds = %17
  %24 = load i32, i32* %3, align 4
  %25 = sub nsw i32 %15, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %19, i64 %26
  %28 = load i8*, i8** %6, align 8
  %29 = load i32, i32* %10, align 8
  %30 = sub nsw i32 %29, %24
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = sext i32 %24 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %32, i64 %33, i1 false) #14
  tail call void @uprv_free_69(i8* %28) #14
  store i8* %19, i8** %6, align 8
  store i32 %15, i32* %10, align 8
  br label %34

34:                                               ; preds = %9, %23
  %35 = phi i32 [ %11, %9 ], [ %15, %23 ]
  %36 = phi i8* [ %7, %9 ], [ %19, %23 ]
  store i32 %5, i32* %3, align 4
  %37 = trunc i32 %1 to i8
  %38 = sub nsw i32 %35, %5
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  store i8 %37, i8* %40, align 1
  br label %41

41:                                               ; preds = %21, %2, %34
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916BytesTrieBuilder17writeElementUnitsEiii(%"class.icu_69::BytesTrieBuilder"* nocapture, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 2
  %6 = load %"class.icu_69::BytesTrieElement"*, %"class.icu_69::BytesTrieElement"** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 1
  %9 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %8, align 8
  %10 = getelementptr inbounds %"class.icu_69::BytesTrieElement", %"class.icu_69::BytesTrieElement"* %6, i64 %7, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = sub i32 0, %11
  %14 = select i1 %12, i32 %13, i32 %11
  %15 = add nuw i32 %14, 1
  %16 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %9, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = sext i32 %2 to i64
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = tail call i32 @_ZN6icu_6916BytesTrieBuilder5writeEPKci(%"class.icu_69::BytesTrieBuilder"* %0, i8* %21, i32 %3)
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916BytesTrieBuilder18writeValueAndFinalEia(%"class.icu_69::BytesTrieBuilder"*, i32, i8 signext) unnamed_addr #0 align 2 {
  %4 = alloca [5 x i8], align 1
  %5 = icmp ult i32 %1, 65
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = shl i32 %1, 1
  %8 = add nuw nsw i32 %7, 32
  %9 = sext i8 %2 to i32
  %10 = or i32 %8, %9
  %11 = bitcast %"class.icu_69::BytesTrieBuilder"* %0 to i32 (%"class.icu_69::BytesTrieBuilder"*, i32)***
  %12 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)**, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %12, i64 15
  %14 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.icu_69::BytesTrieBuilder"* %0, i32 %10) #14
  br label %66

16:                                               ; preds = %3
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %17) #14
  %18 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 1
  %19 = icmp ugt i32 %1, 16777215
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %17, i8 -86, i64 5, i1 false)
  br i1 %19, label %20, label %31

20:                                               ; preds = %16
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 4
  %22 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 3
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 2
  store i8 127, i8* %17, align 1
  %24 = lshr i32 %1, 24
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %18, align 1
  %26 = lshr i32 %1, 16
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %23, align 1
  %28 = lshr i32 %1, 8
  %29 = trunc i32 %28 to i8
  store i8 %29, i8* %22, align 1
  %30 = trunc i32 %1 to i8
  store i8 %30, i8* %21, align 1
  br label %61

31:                                               ; preds = %16
  %32 = icmp slt i32 %1, 6912
  br i1 %32, label %33, label %37

33:                                               ; preds = %31
  %34 = lshr i32 %1, 8
  %35 = trunc i32 %34 to i8
  %36 = add nuw nsw i8 %35, 81
  store i8 %36, i8* %17, align 1
  br label %53

37:                                               ; preds = %31
  %38 = icmp slt i32 %1, 1179648
  br i1 %38, label %39, label %43

39:                                               ; preds = %37
  %40 = lshr i32 %1, 16
  %41 = trunc i32 %40 to i8
  %42 = add nuw nsw i8 %41, 108
  store i8 %42, i8* %17, align 1
  br label %46

43:                                               ; preds = %37
  store i8 126, i8* %17, align 1
  %44 = lshr i32 %1, 16
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* %18, align 1
  br label %46

46:                                               ; preds = %43, %39
  %47 = phi i32 [ 1, %39 ], [ 2, %43 ]
  %48 = lshr i32 %1, 8
  %49 = trunc i32 %48 to i8
  %50 = add nuw nsw i32 %47, 1
  %51 = zext i32 %47 to i64
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %51
  store i8 %49, i8* %52, align 1
  br label %53

53:                                               ; preds = %46, %33
  %54 = phi i32 [ 1, %33 ], [ %50, %46 ]
  %55 = trunc i32 %1 to i8
  %56 = add nuw nsw i32 %54, 1
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 %57
  store i8 %55, i8* %58, align 1
  %59 = load i8, i8* %17, align 1
  %60 = shl i8 %59, 1
  br label %61

61:                                               ; preds = %53, %20
  %62 = phi i8 [ -2, %20 ], [ %60, %53 ]
  %63 = phi i32 [ 5, %20 ], [ %56, %53 ]
  %64 = or i8 %62, %2
  store i8 %64, i8* %17, align 1
  %65 = call i32 @_ZN6icu_6916BytesTrieBuilder5writeEPKci(%"class.icu_69::BytesTrieBuilder"* %0, i8* nonnull %17, i32 %63)
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %17) #14
  br label %66

66:                                               ; preds = %61, %6
  %67 = phi i32 [ %15, %6 ], [ %65, %61 ]
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916BytesTrieBuilder17writeValueAndTypeEaii(%"class.icu_69::BytesTrieBuilder"*, i8 signext, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.icu_69::BytesTrieBuilder"* %0 to i32 (%"class.icu_69::BytesTrieBuilder"*, i32)***
  %6 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)**, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %6, i64 15
  %8 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.icu_69::BytesTrieBuilder"* %0, i32 %3) #14
  %10 = icmp eq i8 %1, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.icu_69::BytesTrieBuilder"* %0 to i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)***
  %13 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)**, i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)** %13, i64 17
  %15 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32, i8)** %14, align 8
  %16 = tail call i32 %15(%"class.icu_69::BytesTrieBuilder"* %0, i32 %2, i8 signext 0) #14
  br label %17

17:                                               ; preds = %4, %11
  %18 = phi i32 [ %16, %11 ], [ %9, %4 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6916BytesTrieBuilder12writeDeltaToEi(%"class.icu_69::BytesTrieBuilder"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca [5 x i8], align 1
  %4 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder", %"class.icu_69::BytesTrieBuilder"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %5, %1
  %7 = icmp slt i32 %6, 192
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = bitcast %"class.icu_69::BytesTrieBuilder"* %0 to i32 (%"class.icu_69::BytesTrieBuilder"*, i32)***
  %10 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)**, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %10, i64 15
  %12 = load i32 (%"class.icu_69::BytesTrieBuilder"*, i32)*, i32 (%"class.icu_69::BytesTrieBuilder"*, i32)** %11, align 8
  %13 = tail call i32 %12(%"class.icu_69::BytesTrieBuilder"* %0, i32 %6) #14
  br label %55

14:                                               ; preds = %2
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %15) #14
  %16 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 1
  %17 = icmp slt i32 %6, 12288
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %15, i8 -86, i64 5, i1 false)
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = lshr i32 %6, 8
  %20 = trunc i32 %19 to i8
  %21 = add nuw nsw i8 %20, -64
  store i8 %21, i8* %15, align 1
  br label %48

22:                                               ; preds = %14
  %23 = icmp slt i32 %6, 917504
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = lshr i32 %6, 16
  %26 = trunc i32 %25 to i8
  %27 = add nuw nsw i8 %26, -16
  store i8 %27, i8* %15, align 1
  br label %41

28:                                               ; preds = %22
  %29 = icmp slt i32 %6, 16777216
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  store i8 -2, i8* %15, align 1
  br label %34

31:                                               ; preds = %28
  store i8 -1, i8* %15, align 1
  %32 = lshr i32 %6, 24
  %33 = trunc i32 %32 to i8
  store i8 %33, i8* %16, align 1
  br label %34

34:                                               ; preds = %31, %30
  %35 = phi i32 [ 1, %30 ], [ 2, %31 ]
  %36 = lshr i32 %6, 16
  %37 = trunc i32 %36 to i8
  %38 = add nuw nsw i32 %35, 1
  %39 = zext i32 %35 to i64
  %40 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 %39
  store i8 %37, i8* %40, align 1
  br label %41

41:                                               ; preds = %34, %24
  %42 = phi i32 [ 1, %24 ], [ %38, %34 ]
  %43 = lshr i32 %6, 8
  %44 = trunc i32 %43 to i8
  %45 = add nuw nsw i32 %42, 1
  %46 = sext i32 %42 to i64
  %47 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 %46
  store i8 %44, i8* %47, align 1
  br label %48

48:                                               ; preds = %18, %41
  %49 = phi i32 [ 1, %18 ], [ %45, %41 ]
  %50 = trunc i32 %6 to i8
  %51 = add nuw nsw i32 %49, 1
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds [5 x i8], [5 x i8]* %3, i64 0, i64 %52
  store i8 %50, i8* %53, align 1
  %54 = call i32 @_ZN6icu_6916BytesTrieBuilder5writeEPKci(%"class.icu_69::BytesTrieBuilder"* %0, i8* nonnull %15, i32 %51)
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %15) #14
  br label %55

55:                                               ; preds = %48, %8
  %56 = phi i32 [ %13, %8 ], [ %54, %48 ]
  ret i32 %56
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6icu_6916BytesTrieBuilder19internalEncodeDeltaEiPc(i32, i8* nocapture) local_unnamed_addr #11 align 2 {
  %3 = icmp slt i32 %0, 192
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = trunc i32 %0 to i8
  store i8 %5, i8* %1, align 1
  br label %45

6:                                                ; preds = %2
  %7 = icmp slt i32 %0, 12288
  br i1 %7, label %8, label %12

8:                                                ; preds = %6
  %9 = lshr i32 %0, 8
  %10 = trunc i32 %9 to i8
  %11 = add nuw nsw i8 %10, -64
  store i8 %11, i8* %1, align 1
  br label %39

12:                                               ; preds = %6
  %13 = icmp slt i32 %0, 917504
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = lshr i32 %0, 16
  %16 = trunc i32 %15 to i8
  %17 = add nuw nsw i8 %16, -16
  store i8 %17, i8* %1, align 1
  br label %32

18:                                               ; preds = %12
  %19 = icmp slt i32 %0, 16777216
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  store i8 -2, i8* %1, align 1
  br label %25

21:                                               ; preds = %18
  store i8 -1, i8* %1, align 1
  %22 = lshr i32 %0, 24
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %23, i8* %24, align 1
  br label %25

25:                                               ; preds = %21, %20
  %26 = phi i32 [ 1, %20 ], [ 2, %21 ]
  %27 = lshr i32 %0, 16
  %28 = trunc i32 %27 to i8
  %29 = add nuw nsw i32 %26, 1
  %30 = zext i32 %26 to i64
  %31 = getelementptr inbounds i8, i8* %1, i64 %30
  store i8 %28, i8* %31, align 1
  br label %32

32:                                               ; preds = %25, %14
  %33 = phi i32 [ 1, %14 ], [ %29, %25 ]
  %34 = lshr i32 %0, 8
  %35 = trunc i32 %34 to i8
  %36 = add nuw nsw i32 %33, 1
  %37 = sext i32 %33 to i64
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  store i8 %35, i8* %38, align 1
  br label %39

39:                                               ; preds = %32, %8
  %40 = phi i32 [ 1, %8 ], [ %36, %32 ]
  %41 = trunc i32 %0 to i8
  %42 = add nuw nsw i32 %40, 1
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds i8, i8* %1, i64 %43
  store i8 %41, i8* %44, align 1
  br label %45

45:                                               ; preds = %39, %4
  %46 = phi i32 [ 1, %4 ], [ %42, %39 ]
  ret i32 %46
}

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden signext i8 @_ZNK6icu_6916BytesTrieBuilder23matchNodesCanHaveValuesEv(%"class.icu_69::BytesTrieBuilder"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6916BytesTrieBuilder31getMaxBranchLinearSubNodeLengthEv(%"class.icu_69::BytesTrieBuilder"*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6916BytesTrieBuilder17getMinLinearMatchEv(%"class.icu_69::BytesTrieBuilder"*) unnamed_addr #0 comdat align 2 {
  ret i32 16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK6icu_6916BytesTrieBuilder23getMaxLinearMatchLengthEv(%"class.icu_69::BytesTrieBuilder"*) unnamed_addr #0 comdat align 2 {
  ret i32 16
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6icu_6916BytesTrieBuilder17BTLinearMatchNodeD0Ev(%"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode", %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %2) #14
  %3 = bitcast %"class.icu_69::BytesTrieBuilder::BTLinearMatchNode"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %3) #14
  ret void
}

declare i32 @_ZN6icu_6917StringTrieBuilder15LinearMatchNode19markRightEdgesFirstEi(%"class.icu_69::StringTrieBuilder::LinearMatchNode"*, i32) unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind allocsize(0) }
attributes #14 = { nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
