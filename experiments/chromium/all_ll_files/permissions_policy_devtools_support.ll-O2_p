; ModuleID = '../../third_party/blink/renderer/core/permissions_policy/permissions_policy_devtools_support.cc'
source_filename = "../../third_party/blink/renderer/core/permissions_policy/permissions_policy_devtools_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, [7 x i8], %union.anon.34 }
%union.anon.34 = type { %"struct.blink::PermissionsPolicyBlockLocator" }
%"struct.blink::PermissionsPolicyBlockLocator" = type <{ %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1", %"class.blink::Member.3", %"class.blink::Member.5", i8, i32, i8, i32, %"class.blink::Member.7", %"class.blink::Member.9", %"class.blink::FrameLifecycle", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.11", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.14", i8, %"class.base::UnguessableToken", %"class.absl::optional", %"class.absl::optional.22", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Frame"* }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.18 }
%union.anon.18 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::PermissionsPolicy::Allowlist" = type <{ %"class.std::__1::vector.74", i8, i8, [6 x i8] }>
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.76" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.35" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.url::Origin"* }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.58, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.63", %"class.blink::Member.69", i32, [4 x i8], %"class.WTF::HashSet.71", i32, i32 }
%class.scoped_refptr.58 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.35", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.59 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.59 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.48", %"class.std::__1::map.57"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.std::__1::map.48" = type { %"class.std::__1::__tree.49" }
%"class.std::__1::__tree.49" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::map.57" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.WTF::HashSet.71" = type { %"class.WTF::HashTable.72" }
%"class.WTF::HashTable.72" = type <{ i32*, i32, i32, i32, [4 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33TracePermissionsPolicyBlockSourceEPNS_5FrameENS_5mojom24PermissionsPolicyFeatureE(%"class.absl::optional.30"* noalias nocapture sret, %"class.blink::Frame"*, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::PermissionsPolicy::Allowlist", align 8
  %5 = alloca %"class.url::Origin", align 8
  %6 = alloca %"class.url::Origin", align 8
  %7 = bitcast %"class.blink::Frame"* %1 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %8 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %8, i64 10
  %10 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %9, align 8
  %11 = tail call %"class.blink::SecurityContext"* %10(%"class.blink::Frame"* %1) #4
  %12 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"* %13, i32 %2) #4
  br i1 %14, label %23, label %15

15:                                               ; preds = %3
  %16 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %7, align 8
  %17 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %16, i64 10
  %18 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %17, align 8
  %19 = tail call %"class.blink::SecurityContext"* %18(%"class.blink::Frame"* %1) #4
  %20 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %20, align 8
  %22 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy33IsFeatureEnabledByInheritedPolicyENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"* %21, i32 %2) #4
  br i1 %22, label %39, label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  br label %79

25:                                               ; preds = %15, %25
  %26 = phi %"class.blink::Frame"* [ %28, %25 ], [ %1, %15 ]
  %27 = getelementptr inbounds %"class.blink::Frame", %"class.blink::Frame"* %26, i64 0, i32 1
  %28 = tail call %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"* %27) #4
  %29 = bitcast %"class.blink::Frame"* %28 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %30 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %30, i64 10
  %32 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %31, align 8
  %33 = tail call %"class.blink::SecurityContext"* %32(%"class.blink::Frame"* %28) #4
  %34 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %34, align 8
  %36 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy33IsFeatureEnabledByInheritedPolicyENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"* %35, i32 %2) #4
  br i1 %36, label %37, label %25

37:                                               ; preds = %25
  %38 = bitcast %"class.blink::Frame"* %28 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  br label %39

39:                                               ; preds = %37, %15
  %40 = phi %"class.blink::Frame"* [ %1, %15 ], [ %28, %37 ]
  %41 = phi %"class.blink::Frame"* [ null, %15 ], [ %26, %37 ]
  %42 = phi %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** [ %7, %15 ], [ %38, %37 ]
  %43 = phi %"class.blink::PermissionsPolicy"* [ %21, %15 ], [ %35, %37 ]
  %44 = bitcast %"class.blink::PermissionsPolicy::Allowlist"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #4
  %45 = bitcast %"class.blink::PermissionsPolicy::Allowlist"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 32, i1 false)
  call void @_ZNK5blink17PermissionsPolicy23GetAllowlistForDevToolsENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy::Allowlist"* nonnull sret %4, %"class.blink::PermissionsPolicy"* %43, i32 %2) #4
  %46 = bitcast %"class.url::Origin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %46) #4
  %47 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %42, align 8
  %48 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %47, i64 10
  %49 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %48, align 8
  %50 = call %"class.blink::SecurityContext"* %49(%"class.blink::Frame"* %40) #4
  %51 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %50, i64 0, i32 2, i32 0
  %52 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %51, align 8
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %5, %"class.blink::SecurityOrigin"* %52) #4
  %53 = call zeroext i1 @_ZNK5blink17PermissionsPolicy9Allowlist8ContainsERKN3url6OriginE(%"class.blink::PermissionsPolicy::Allowlist"* nonnull %4, %"class.url::Origin"* nonnull dereferenceable(80) %5) #4
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %46) #4
  %54 = icmp eq %"class.blink::Frame"* %41, null
  br i1 %54, label %66, label %55

55:                                               ; preds = %39
  %56 = bitcast %"class.url::Origin"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %56) #4
  %57 = bitcast %"class.blink::Frame"* %41 to %"class.blink::SecurityContext"* (%"class.blink::Frame"*)***
  %58 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)**, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*** %57, align 8
  %59 = getelementptr inbounds %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %58, i64 10
  %60 = load %"class.blink::SecurityContext"* (%"class.blink::Frame"*)*, %"class.blink::SecurityContext"* (%"class.blink::Frame"*)** %59, align 8
  %61 = call %"class.blink::SecurityContext"* %60(%"class.blink::Frame"* nonnull %41) #4
  %62 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %61, i64 0, i32 2, i32 0
  %63 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %62, align 8
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %6, %"class.blink::SecurityOrigin"* %63) #4
  %64 = call zeroext i1 @_ZNK5blink17PermissionsPolicy9Allowlist8ContainsERKN3url6OriginE(%"class.blink::PermissionsPolicy::Allowlist"* nonnull %4, %"class.url::Origin"* nonnull dereferenceable(80) %6) #4
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %56) #4
  %65 = xor i1 %64, true
  br label %66

66:                                               ; preds = %39, %55
  %67 = phi i1 [ %65, %55 ], [ false, %39 ]
  %68 = xor i1 %53, true
  %69 = or i1 %67, %68
  %70 = select i1 %69, %"class.blink::Frame"* %40, %"class.blink::Frame"* %41
  %71 = xor i1 %69, true
  %72 = zext i1 %71 to i32
  %73 = call %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"* %70) #4
  %74 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %75 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %75, align 8
  %76 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %77 = bitcast %"struct.blink::PermissionsPolicyBlockLocator"* %76 to i64*
  store i64 %74, i64* %77, align 8
  %78 = getelementptr inbounds %"class.absl::optional.30", %"class.absl::optional.30"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  store i32 %72, i32* %78, align 8
  call void @_ZN5blink17PermissionsPolicy9AllowlistD1Ev(%"class.blink::PermissionsPolicy::Allowlist"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #4
  br label %79

79:                                               ; preds = %66, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK5blink17PermissionsPolicy16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17PermissionsPolicy33IsFeatureEnabledByInheritedPolicyENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"*, i32) local_unnamed_addr #2

declare %"class.blink::Frame"* @_ZNK5blink9FrameTree6ParentEv(%"class.blink::FrameTree"*) local_unnamed_addr #2

declare void @_ZNK5blink17PermissionsPolicy23GetAllowlistForDevToolsENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy::Allowlist"* sret, %"class.blink::PermissionsPolicy"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17PermissionsPolicy9Allowlist8ContainsERKN3url6OriginE(%"class.blink::PermissionsPolicy::Allowlist"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZN5blink18IdentifiersFactory7FrameIdEPNS_5FrameE(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17PermissionsPolicy9AllowlistD1Ev(%"class.blink::PermissionsPolicy::Allowlist"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
