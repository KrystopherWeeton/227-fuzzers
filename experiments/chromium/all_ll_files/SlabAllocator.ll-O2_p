; ModuleID = '../../third_party/dawn/src/common/SlabAllocator.cpp'
source_filename = "../../third_party/dawn/src/common/SlabAllocator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.SlabAllocatorImpl::IndexLinkNode" = type { i16, i16 }
%"struct.SlabAllocatorImpl::Slab" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16, [6 x i8] }>
%"struct.SlabAllocatorImpl::SentinelSlab" = type { %"struct.SlabAllocatorImpl::Slab.base", [6 x i8] }
%"struct.SlabAllocatorImpl::Slab.base" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16 }>
%class.SlabAllocatorImpl = type { i32, i32, i32, i32, i16, i64, %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab" }

@_ZN17SlabAllocatorImpl13kInvalidIndexE = hidden local_unnamed_addr global i16 -1, align 2

@_ZN17SlabAllocatorImpl13IndexLinkNodeC1Ett = hidden unnamed_addr alias void (%"struct.SlabAllocatorImpl::IndexLinkNode"*, i16, i16), void (%"struct.SlabAllocatorImpl::IndexLinkNode"*, i16, i16)* @_ZN17SlabAllocatorImpl13IndexLinkNodeC2Ett
@_ZN17SlabAllocatorImpl4SlabC1EPcPNS_13IndexLinkNodeE = hidden unnamed_addr alias void (%"struct.SlabAllocatorImpl::Slab"*, i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*), void (%"struct.SlabAllocatorImpl::Slab"*, i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*)* @_ZN17SlabAllocatorImpl4SlabC2EPcPNS_13IndexLinkNodeE
@_ZN17SlabAllocatorImpl4SlabC1EOS0_ = hidden unnamed_addr alias void (%"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*), void (%"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*)* @_ZN17SlabAllocatorImpl4SlabC2EOS0_
@_ZN17SlabAllocatorImpl12SentinelSlabC1Ev = hidden unnamed_addr alias void (%"struct.SlabAllocatorImpl::SentinelSlab"*), void (%"struct.SlabAllocatorImpl::SentinelSlab"*)* @_ZN17SlabAllocatorImpl12SentinelSlabC2Ev
@_ZN17SlabAllocatorImpl12SentinelSlabC1EOS0_ = hidden unnamed_addr alias void (%"struct.SlabAllocatorImpl::SentinelSlab"*, %"struct.SlabAllocatorImpl::SentinelSlab"*), void (%"struct.SlabAllocatorImpl::SentinelSlab"*, %"struct.SlabAllocatorImpl::SentinelSlab"*)* @_ZN17SlabAllocatorImpl12SentinelSlabC2EOS0_
@_ZN17SlabAllocatorImpl12SentinelSlabD1Ev = hidden unnamed_addr alias void (%"struct.SlabAllocatorImpl::SentinelSlab"*), void (%"struct.SlabAllocatorImpl::SentinelSlab"*)* @_ZN17SlabAllocatorImpl12SentinelSlabD2Ev
@_ZN17SlabAllocatorImplC1Etjj = hidden unnamed_addr alias void (%class.SlabAllocatorImpl*, i16, i32, i32), void (%class.SlabAllocatorImpl*, i16, i32, i32)* @_ZN17SlabAllocatorImplC2Etjj
@_ZN17SlabAllocatorImplC1EOS_ = hidden unnamed_addr alias void (%class.SlabAllocatorImpl*, %class.SlabAllocatorImpl*), void (%class.SlabAllocatorImpl*, %class.SlabAllocatorImpl*)* @_ZN17SlabAllocatorImplC2EOS_
@_ZN17SlabAllocatorImplD1Ev = hidden unnamed_addr alias void (%class.SlabAllocatorImpl*), void (%class.SlabAllocatorImpl*)* @_ZN17SlabAllocatorImplD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17SlabAllocatorImpl13IndexLinkNodeC2Ett(%"struct.SlabAllocatorImpl::IndexLinkNode"* nocapture, i16 zeroext, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %0, i64 0, i32 0
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %0, i64 0, i32 1
  store i16 %2, i16* %5, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17SlabAllocatorImpl4SlabC2EPcPNS_13IndexLinkNodeE(%"struct.SlabAllocatorImpl::Slab"* nocapture, i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %0, i64 0, i32 1
  store %"struct.SlabAllocatorImpl::IndexLinkNode"* %2, %"struct.SlabAllocatorImpl::IndexLinkNode"** %5, align 8
  %6 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %0, i64 0, i32 2
  %7 = bitcast %"struct.SlabAllocatorImpl::Slab"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 18, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl4SlabC2EOS0_(%"struct.SlabAllocatorImpl::Slab"* nocapture, %"struct.SlabAllocatorImpl::Slab"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.SlabAllocatorImpl::Slab"* %0 to i8*
  %4 = bitcast %"struct.SlabAllocatorImpl::Slab"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 34, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl12SentinelSlabC2Ev(%"struct.SlabAllocatorImpl::SentinelSlab"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 34, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl12SentinelSlabC2EOS0_(%"struct.SlabAllocatorImpl::SentinelSlab"* nocapture, %"struct.SlabAllocatorImpl::SentinelSlab"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %0 to i8*
  %4 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 34, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl12SentinelSlabD2Ev(%"struct.SlabAllocatorImpl::SentinelSlab"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab"* %0, i64 0, i32 0, i32 3
  %3 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  %4 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1, %13
  %6 = phi %"struct.SlabAllocatorImpl::Slab"* [ %8, %13 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %6, i64 0, i32 3
  %8 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %7, align 8
  %9 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %6, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %10) #8
  br label %13

13:                                               ; preds = %12, %5
  %14 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %8, null
  br i1 %14, label %15, label %5

15:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImplC2Etjj(%class.SlabAllocatorImpl* nocapture, i16 zeroext, i32, i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 0
  %6 = icmp ugt i32 %3, 8
  %7 = select i1 %6, i32 %3, i32 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 1
  %9 = zext i32 %3 to i64
  %10 = add nuw nsw i64 %9, 39
  %11 = sub nsw i64 0, %9
  %12 = and i64 %10, %11
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %8, align 4
  %14 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %15 = add i32 %2, 1
  %16 = and i32 %15, -2
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %18 = zext i32 %16 to i64
  %19 = add nuw nsw i64 %9, 3
  %20 = add nuw nsw i64 %19, %18
  %21 = and i64 %20, %11
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %17, align 4
  %23 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  store i16 %1, i16* %23, align 8
  %24 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 5
  %25 = and i64 %12, 4294967295
  %26 = zext i16 %1 to i64
  %27 = mul nuw nsw i64 %21, %26
  %28 = and i64 %27, 4294967295
  %29 = zext i32 %7 to i64
  %30 = add nuw nsw i64 %25, %29
  %31 = add nuw nsw i64 %30, %28
  store i64 %31, i64* %24, align 8
  %32 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6
  %33 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 34, i1 false) #7
  %34 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 7
  %35 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 34, i1 false) #7
  %36 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8
  %37 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 34, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImplC2EOS_(%class.SlabAllocatorImpl* nocapture, %class.SlabAllocatorImpl* nocapture readonly dereferenceable(152)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 1
  %7 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  %16 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 4
  %17 = load i16, i16* %16, align 8
  store i16 %17, i16* %15, align 8
  %18 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 5
  %19 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6
  %22 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 6
  %23 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %21 to i8*
  %24 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 34, i1 false) #7
  %25 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 7
  %26 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 7
  %27 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %25 to i8*
  %28 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 34, i1 false) #7
  %29 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8
  %30 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %1, i64 0, i32 8
  %31 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %29 to i8*
  %32 = bitcast %"struct.SlabAllocatorImpl::SentinelSlab"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 34, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImplD2Ev(%class.SlabAllocatorImpl* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8, i32 0, i32 3
  %3 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  %4 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1, %13
  %6 = phi %"struct.SlabAllocatorImpl::Slab"* [ %8, %13 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %6, i64 0, i32 3
  %8 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %7, align 8
  %9 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %6, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  tail call void @_ZdaPv(i8* nonnull %10) #8
  br label %13

13:                                               ; preds = %12, %5
  %14 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %8, null
  br i1 %14, label %15, label %5

15:                                               ; preds = %13, %1
  %16 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 7, i32 0, i32 3
  %17 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %16, align 8
  %18 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15, %27
  %20 = phi %"struct.SlabAllocatorImpl::Slab"* [ %22, %27 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %20, i64 0, i32 3
  %22 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %21, align 8
  %23 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %20, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %19
  tail call void @_ZdaPv(i8* nonnull %24) #8
  br label %27

27:                                               ; preds = %26, %19
  %28 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %22, null
  br i1 %28, label %29, label %19

29:                                               ; preds = %27, %15
  %30 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6, i32 0, i32 3
  %31 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %30, align 8
  %32 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %29, %41
  %34 = phi %"struct.SlabAllocatorImpl::Slab"* [ %36, %41 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %34, i64 0, i32 3
  %36 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %35, align 8
  %37 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %34, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %33
  tail call void @_ZdaPv(i8* nonnull %38) #8
  br label %41

41:                                               ; preds = %40, %33
  %42 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %36, null
  br i1 %42, label %43, label %33

43:                                               ; preds = %41, %29
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.SlabAllocatorImpl::IndexLinkNode"* @_ZNK17SlabAllocatorImpl10OffsetFromEPNS_13IndexLinkNodeEs(%class.SlabAllocatorImpl* nocapture readonly, %"struct.SlabAllocatorImpl::IndexLinkNode"* readnone, i16 signext) local_unnamed_addr #4 align 2 {
  %4 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"* %1 to i8*
  %5 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = sext i16 %2 to i64
  %9 = mul nsw i64 %7, %8
  %10 = getelementptr inbounds i8, i8* %4, i64 %9
  %11 = bitcast i8* %10 to %"struct.SlabAllocatorImpl::IndexLinkNode"*
  ret %"struct.SlabAllocatorImpl::IndexLinkNode"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.SlabAllocatorImpl::IndexLinkNode"* @_ZNK17SlabAllocatorImpl14NodeFromObjectEPv(%class.SlabAllocatorImpl* nocapture readonly, i8* readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = bitcast i8* %6 to %"struct.SlabAllocatorImpl::IndexLinkNode"*
  ret %"struct.SlabAllocatorImpl::IndexLinkNode"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK17SlabAllocatorImpl14ObjectFromNodeEPNS_13IndexLinkNodeE(%class.SlabAllocatorImpl* nocapture readonly, %"struct.SlabAllocatorImpl::IndexLinkNode"* readnone) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"* %1 to i8*
  %4 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = sub nsw i64 0, %6
  %8 = getelementptr inbounds i8, i8* %3, i64 %7
  ret i8* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK17SlabAllocatorImpl12IsNodeInSlabEPNS_4SlabEPNS_13IndexLinkNodeE(%class.SlabAllocatorImpl* nocapture readonly, %"struct.SlabAllocatorImpl::Slab"* readnone, %"struct.SlabAllocatorImpl::IndexLinkNode"* readonly) local_unnamed_addr #4 align 2 {
  %4 = bitcast %"struct.SlabAllocatorImpl::Slab"* %1 to i8*
  %5 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %4, i64 %7
  %9 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %8, i64 %11
  %13 = bitcast i8* %12 to %"struct.SlabAllocatorImpl::IndexLinkNode"*
  %14 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  %15 = load i16, i16* %14, align 8
  %16 = add i16 %15, -1
  %17 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = sext i16 %16 to i64
  %21 = mul nsw i64 %19, %20
  %22 = getelementptr inbounds i8, i8* %12, i64 %21
  %23 = bitcast i8* %22 to %"struct.SlabAllocatorImpl::IndexLinkNode"*
  %24 = icmp ugt %"struct.SlabAllocatorImpl::IndexLinkNode"* %13, %2
  %25 = icmp ult %"struct.SlabAllocatorImpl::IndexLinkNode"* %23, %2
  %26 = or i1 %24, %25
  br i1 %26, label %31, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %2, i64 0, i32 0
  %29 = load i16, i16* %28, align 2
  %30 = icmp ult i16 %29, %15
  br label %31

31:                                               ; preds = %3, %27
  %32 = phi i1 [ false, %3 ], [ %30, %27 ]
  ret i1 %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK17SlabAllocatorImpl9PushFrontEPNS_4SlabEPNS_13IndexLinkNodeE(%class.SlabAllocatorImpl* nocapture readnone, %"struct.SlabAllocatorImpl::Slab"* nocapture, %"struct.SlabAllocatorImpl::IndexLinkNode"*) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %1, i64 0, i32 1
  %5 = load %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::IndexLinkNode"** %4, align 8
  %6 = icmp eq %"struct.SlabAllocatorImpl::IndexLinkNode"* %5, null
  %7 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %5, i64 0, i32 0
  %8 = select i1 %6, i16* @_ZN17SlabAllocatorImpl13kInvalidIndexE, i16* %7
  %9 = load i16, i16* %8, align 2
  %10 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %2, i64 0, i32 1
  store i16 %9, i16* %10, align 2
  store %"struct.SlabAllocatorImpl::IndexLinkNode"* %2, %"struct.SlabAllocatorImpl::IndexLinkNode"** %4, align 8
  %11 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %1, i64 0, i32 4
  %12 = load i16, i16* %11, align 8
  %13 = add i16 %12, -1
  store i16 %13, i16* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"struct.SlabAllocatorImpl::IndexLinkNode"* @_ZNK17SlabAllocatorImpl8PopFrontEPNS_4SlabE(%class.SlabAllocatorImpl* nocapture readonly, %"struct.SlabAllocatorImpl::Slab"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %1, i64 0, i32 1
  %4 = load %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::IndexLinkNode"** %3, align 8
  %5 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %4, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = load i16, i16* @_ZN17SlabAllocatorImpl13kInvalidIndexE, align 2
  %8 = icmp eq i16 %6, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %4, i64 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = sub i16 %6, %11
  %13 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"* %4 to i8*
  %14 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = sext i16 %12 to i64
  %18 = mul nsw i64 %16, %17
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = bitcast i8* %19 to %"struct.SlabAllocatorImpl::IndexLinkNode"*
  br label %21

21:                                               ; preds = %2, %9
  %22 = phi %"struct.SlabAllocatorImpl::IndexLinkNode"* [ %20, %9 ], [ null, %2 ]
  store %"struct.SlabAllocatorImpl::IndexLinkNode"* %22, %"struct.SlabAllocatorImpl::IndexLinkNode"** %3, align 8
  %23 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %1, i64 0, i32 4
  %24 = load i16, i16* %23, align 8
  %25 = add i16 %24, 1
  store i16 %25, i16* %23, align 8
  ret %"struct.SlabAllocatorImpl::IndexLinkNode"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl12SentinelSlab7PrependEPNS_4SlabE(%"struct.SlabAllocatorImpl::SentinelSlab"*, %"struct.SlabAllocatorImpl::Slab"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab"* %0, i64 0, i32 0, i32 3
  %4 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %3, align 8
  %5 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %4, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %1, %"struct.SlabAllocatorImpl::Slab"** %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %1, i64 0, i32 2
  %10 = bitcast %"struct.SlabAllocatorImpl::Slab"** %9 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %0, %"struct.SlabAllocatorImpl::SentinelSlab"** %10, align 8
  %11 = bitcast %"struct.SlabAllocatorImpl::Slab"** %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %1, i64 0, i32 3
  %14 = bitcast %"struct.SlabAllocatorImpl::Slab"** %13 to i64*
  store i64 %12, i64* %14, align 8
  store %"struct.SlabAllocatorImpl::Slab"* %1, %"struct.SlabAllocatorImpl::Slab"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl4Slab6SpliceEv(%"struct.SlabAllocatorImpl::Slab"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %0, i64 0, i32 2
  %3 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  %4 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %0, i64 0, i32 3
  %5 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %4, align 8
  %6 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %5, null
  %7 = bitcast %"struct.SlabAllocatorImpl::Slab"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %5, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %3, %"struct.SlabAllocatorImpl::Slab"** %9, align 8
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %3, i64 0, i32 3
  store %"struct.SlabAllocatorImpl::Slab"* %5, %"struct.SlabAllocatorImpl::Slab"** %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN17SlabAllocatorImpl8AllocateEv(%class.SlabAllocatorImpl*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6, i32 0, i32 3
  %3 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  %4 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %3, null
  %5 = ptrtoint %"struct.SlabAllocatorImpl::Slab"* %3 to i64
  br i1 %4, label %6, label %90

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8, i32 0, i32 3
  %8 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %7, align 8
  %9 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = ptrtoint %"struct.SlabAllocatorImpl::Slab"* %8 to i64
  %12 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6
  %13 = bitcast %"struct.SlabAllocatorImpl::Slab"** %2 to i64*
  %14 = bitcast %"struct.SlabAllocatorImpl::Slab"** %7 to i64*
  store i64 %11, i64* %13, align 8
  store i64 %5, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %8, i64 0, i32 2
  %16 = bitcast %"struct.SlabAllocatorImpl::Slab"** %15 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %12, %"struct.SlabAllocatorImpl::SentinelSlab"** %16, align 8
  %17 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  br label %90

18:                                               ; preds = %6
  %19 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 5
  %20 = load i64, i64* %19, align 8
  %21 = tail call i8* @_Znam(i64 %20) #8
  %22 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = ptrtoint i8* %21 to i64
  %26 = add i64 %25, -1
  %27 = add i64 %26, %24
  %28 = sub nsw i64 0, %24
  %29 = and i64 %27, %28
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  %35 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  %40 = load i16, i16* %39, align 8
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %18
  %43 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  br label %74

44:                                               ; preds = %74
  %45 = add i16 %87, -1
  %46 = sext i16 %45 to i64
  br label %47

47:                                               ; preds = %44, %18
  %48 = phi i64 [ -1, %18 ], [ %46, %44 ]
  %49 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = mul nsw i64 %48, %51
  %53 = getelementptr inbounds i8, i8* %38, i64 %52
  %54 = load i16, i16* @_ZN17SlabAllocatorImpl13kInvalidIndexE, align 2
  %55 = getelementptr inbounds i8, i8* %53, i64 2
  %56 = bitcast i8* %55 to i16*
  store i16 %54, i16* %56, align 2
  %57 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6
  %58 = inttoptr i64 %29 to %"struct.SlabAllocatorImpl::Slab"*
  %59 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %58, i64 0, i32 0
  store i8* %21, i8** %59, align 8
  %60 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %58, i64 0, i32 1
  %61 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"** %60 to i8**
  store i8* %38, i8** %61, align 8
  %62 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %58, i64 0, i32 2
  %63 = bitcast %"struct.SlabAllocatorImpl::Slab"** %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 18, i1 false) #7
  %64 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  %65 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %47
  %67 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %64, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %58, %"struct.SlabAllocatorImpl::Slab"** %67, align 8
  br label %68

68:                                               ; preds = %66, %47
  %69 = bitcast %"struct.SlabAllocatorImpl::Slab"** %62 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %57, %"struct.SlabAllocatorImpl::SentinelSlab"** %69, align 8
  %70 = bitcast %"struct.SlabAllocatorImpl::Slab"** %2 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %58, i64 0, i32 3
  %73 = bitcast %"struct.SlabAllocatorImpl::Slab"** %72 to i64*
  store i64 %71, i64* %73, align 8
  store %"struct.SlabAllocatorImpl::Slab"* %58, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  br label %90

74:                                               ; preds = %74, %42
  %75 = phi i32 [ 0, %42 ], [ %82, %74 ]
  %76 = trunc i32 %75 to i16
  %77 = load i32, i32* %43, align 4
  %78 = zext i32 %77 to i64
  %79 = sext i16 %76 to i64
  %80 = mul nsw i64 %78, %79
  %81 = getelementptr inbounds i8, i8* %38, i64 %80
  %82 = add nuw nsw i32 %75, 1
  %83 = trunc i32 %82 to i16
  %84 = bitcast i8* %81 to i16*
  store i16 %76, i16* %84, align 2
  %85 = getelementptr inbounds i8, i8* %81, i64 2
  %86 = bitcast i8* %85 to i16*
  store i16 %83, i16* %86, align 2
  %87 = load i16, i16* %39, align 8
  %88 = zext i16 %87 to i32
  %89 = icmp ult i32 %82, %88
  br i1 %89, label %74, label %44

90:                                               ; preds = %68, %10, %1
  %91 = phi %"struct.SlabAllocatorImpl::Slab"* [ %58, %68 ], [ %17, %10 ], [ %3, %1 ]
  %92 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %91, i64 0, i32 1
  %93 = load %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::IndexLinkNode"** %92, align 8
  %94 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %93, i64 0, i32 1
  %95 = load i16, i16* %94, align 2
  %96 = load i16, i16* @_ZN17SlabAllocatorImpl13kInvalidIndexE, align 2
  %97 = icmp eq i16 %95, %96
  br i1 %97, label %110, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %93, i64 0, i32 0
  %100 = load i16, i16* %99, align 2
  %101 = sub i16 %95, %100
  %102 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"* %93 to i8*
  %103 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i64
  %106 = sext i16 %101 to i64
  %107 = mul nsw i64 %105, %106
  %108 = getelementptr inbounds i8, i8* %102, i64 %107
  %109 = bitcast i8* %108 to %"struct.SlabAllocatorImpl::IndexLinkNode"*
  br label %110

110:                                              ; preds = %90, %98
  %111 = phi %"struct.SlabAllocatorImpl::IndexLinkNode"* [ %109, %98 ], [ null, %90 ]
  store %"struct.SlabAllocatorImpl::IndexLinkNode"* %111, %"struct.SlabAllocatorImpl::IndexLinkNode"** %92, align 8
  %112 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %91, i64 0, i32 4
  %113 = load i16, i16* %112, align 8
  %114 = add i16 %113, 1
  store i16 %114, i16* %112, align 8
  %115 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  %116 = load i16, i16* %115, align 8
  %117 = icmp eq i16 %114, %116
  br i1 %117, label %118, label %140

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %91, i64 0, i32 2
  %120 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %119, align 8
  %121 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %91, i64 0, i32 3
  %122 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %121, align 8
  %123 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %122, null
  %124 = bitcast %"struct.SlabAllocatorImpl::Slab"** %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 16, i1 false) #7
  br i1 %123, label %127, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %122, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %120, %"struct.SlabAllocatorImpl::Slab"** %126, align 8
  br label %127

127:                                              ; preds = %118, %125
  %128 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %120, i64 0, i32 3
  store %"struct.SlabAllocatorImpl::Slab"* %122, %"struct.SlabAllocatorImpl::Slab"** %128, align 8
  %129 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 7
  %130 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 7, i32 0, i32 3
  %131 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %130, align 8
  %132 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %131, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %91, %"struct.SlabAllocatorImpl::Slab"** %134, align 8
  br label %135

135:                                              ; preds = %127, %133
  %136 = bitcast %"struct.SlabAllocatorImpl::Slab"** %119 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %129, %"struct.SlabAllocatorImpl::SentinelSlab"** %136, align 8
  %137 = bitcast %"struct.SlabAllocatorImpl::Slab"** %130 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.SlabAllocatorImpl::Slab"** %121 to i64*
  store i64 %138, i64* %139, align 8
  store %"struct.SlabAllocatorImpl::Slab"* %91, %"struct.SlabAllocatorImpl::Slab"** %130, align 8
  br label %140

140:                                              ; preds = %135, %110
  %141 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"* %93 to i8*
  %142 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %143 = load i32, i32* %142, align 8
  %144 = zext i32 %143 to i64
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i8, i8* %141, i64 %145
  ret i8* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl10GetNewSlabEv(%class.SlabAllocatorImpl*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8, i32 0, i32 3
  %3 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %2, align 8
  %4 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.SlabAllocatorImpl::Slab"* %3 to i64
  %7 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6
  %8 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6, i32 0, i32 3
  %9 = bitcast %"struct.SlabAllocatorImpl::Slab"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.SlabAllocatorImpl::Slab"** %2 to i64*
  store i64 %6, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %3, i64 0, i32 2
  %13 = bitcast %"struct.SlabAllocatorImpl::Slab"** %12 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %7, %"struct.SlabAllocatorImpl::SentinelSlab"** %13, align 8
  br label %87

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = tail call i8* @_Znam(i64 %16) #8
  %18 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = ptrtoint i8* %17 to i64
  %22 = add i64 %21, -1
  %23 = add i64 %22, %20
  %24 = sub nsw i64 0, %20
  %25 = and i64 %23, %24
  %26 = inttoptr i64 %25 to i8*
  %27 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  %35 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  %36 = load i16, i16* %35, align 8
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %14
  %39 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  br label %71

40:                                               ; preds = %71
  %41 = add i16 %84, -1
  %42 = sext i16 %41 to i64
  br label %43

43:                                               ; preds = %40, %14
  %44 = phi i64 [ -1, %14 ], [ %42, %40 ]
  %45 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = mul nsw i64 %44, %47
  %49 = getelementptr inbounds i8, i8* %34, i64 %48
  %50 = load i16, i16* @_ZN17SlabAllocatorImpl13kInvalidIndexE, align 2
  %51 = getelementptr inbounds i8, i8* %49, i64 2
  %52 = bitcast i8* %51 to i16*
  store i16 %50, i16* %52, align 2
  %53 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6
  %54 = inttoptr i64 %25 to %"struct.SlabAllocatorImpl::Slab"*
  %55 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %54, i64 0, i32 0
  store i8* %17, i8** %55, align 8
  %56 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %54, i64 0, i32 1
  %57 = bitcast %"struct.SlabAllocatorImpl::IndexLinkNode"** %56 to i8**
  store i8* %34, i8** %57, align 8
  %58 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %54, i64 0, i32 2
  %59 = bitcast %"struct.SlabAllocatorImpl::Slab"** %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 18, i1 false) #7
  %60 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 6, i32 0, i32 3
  %61 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %60, align 8
  %62 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %43
  %64 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %61, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %54, %"struct.SlabAllocatorImpl::Slab"** %64, align 8
  br label %65

65:                                               ; preds = %43, %63
  %66 = bitcast %"struct.SlabAllocatorImpl::Slab"** %58 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %53, %"struct.SlabAllocatorImpl::SentinelSlab"** %66, align 8
  %67 = bitcast %"struct.SlabAllocatorImpl::Slab"** %60 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %54, i64 0, i32 3
  %70 = bitcast %"struct.SlabAllocatorImpl::Slab"** %69 to i64*
  store i64 %68, i64* %70, align 8
  store %"struct.SlabAllocatorImpl::Slab"* %54, %"struct.SlabAllocatorImpl::Slab"** %60, align 8
  br label %87

71:                                               ; preds = %38, %71
  %72 = phi i32 [ 0, %38 ], [ %79, %71 ]
  %73 = trunc i32 %72 to i16
  %74 = load i32, i32* %39, align 4
  %75 = zext i32 %74 to i64
  %76 = sext i16 %73 to i64
  %77 = mul nsw i64 %75, %76
  %78 = getelementptr inbounds i8, i8* %34, i64 %77
  %79 = add nuw nsw i32 %72, 1
  %80 = trunc i32 %79 to i16
  %81 = bitcast i8* %78 to i16*
  store i16 %73, i16* %81, align 2
  %82 = getelementptr inbounds i8, i8* %78, i64 2
  %83 = bitcast i8* %82 to i16*
  store i16 %80, i16* %83, align 2
  %84 = load i16, i16* %35, align 8
  %85 = zext i16 %84 to i32
  %86 = icmp ult i32 %79, %85
  br i1 %86, label %71, label %40

87:                                               ; preds = %65, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SlabAllocatorImpl10DeallocateEPv(%class.SlabAllocatorImpl*, i8*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds i8, i8* %1, i64 %5
  %7 = bitcast i8* %6 to i16*
  %8 = load i16, i16* %7, align 2
  %9 = sub i16 0, %8
  %10 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = sext i16 %9 to i64
  %14 = mul nsw i64 %12, %13
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = sub nsw i64 0, %5
  %17 = getelementptr inbounds i8, i8* %15, i64 %16
  %18 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = sub nsw i64 0, %20
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  %24 = bitcast i8* %23 to i16*
  %25 = load i16, i16* %24, align 8
  %26 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 4
  %27 = load i16, i16* %26, align 8
  %28 = icmp eq i16 %25, %27
  %29 = getelementptr inbounds i8, i8* %22, i64 8
  %30 = bitcast i8* %29 to %"struct.SlabAllocatorImpl::IndexLinkNode"**
  %31 = load %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::IndexLinkNode"** %30, align 8
  %32 = icmp eq %"struct.SlabAllocatorImpl::IndexLinkNode"* %31, null
  %33 = getelementptr inbounds %"struct.SlabAllocatorImpl::IndexLinkNode", %"struct.SlabAllocatorImpl::IndexLinkNode"* %31, i64 0, i32 0
  %34 = select i1 %32, i16* @_ZN17SlabAllocatorImpl13kInvalidIndexE, i16* %33
  %35 = load i16, i16* %34, align 2
  %36 = getelementptr inbounds i8, i8* %6, i64 2
  %37 = bitcast i8* %36 to i16*
  store i16 %35, i16* %37, align 2
  %38 = bitcast i8* %29 to i8**
  store i8* %6, i8** %38, align 8
  %39 = load i16, i16* %24, align 8
  %40 = add i16 %39, -1
  store i16 %40, i16* %24, align 8
  br i1 %28, label %41, label %66

41:                                               ; preds = %2
  %42 = getelementptr inbounds i8, i8* %22, i64 16
  %43 = bitcast i8* %42 to %"struct.SlabAllocatorImpl::Slab"**
  %44 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %43, align 8
  %45 = getelementptr inbounds i8, i8* %22, i64 24
  %46 = bitcast i8* %45 to %"struct.SlabAllocatorImpl::Slab"**
  %47 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %46, align 8
  %48 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %47, null
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #7
  br i1 %48, label %51, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %47, i64 0, i32 2
  store %"struct.SlabAllocatorImpl::Slab"* %44, %"struct.SlabAllocatorImpl::Slab"** %50, align 8
  br label %51

51:                                               ; preds = %41, %49
  %52 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %44, i64 0, i32 3
  store %"struct.SlabAllocatorImpl::Slab"* %47, %"struct.SlabAllocatorImpl::Slab"** %52, align 8
  %53 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8
  %54 = getelementptr inbounds %class.SlabAllocatorImpl, %class.SlabAllocatorImpl* %0, i64 0, i32 8, i32 0, i32 3
  %55 = load %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"** %54, align 8
  %56 = icmp eq %"struct.SlabAllocatorImpl::Slab"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"struct.SlabAllocatorImpl::Slab", %"struct.SlabAllocatorImpl::Slab"* %55, i64 0, i32 2
  %59 = bitcast %"struct.SlabAllocatorImpl::Slab"** %58 to i8**
  store i8* %22, i8** %59, align 8
  br label %60

60:                                               ; preds = %51, %57
  %61 = bitcast i8* %42 to %"struct.SlabAllocatorImpl::SentinelSlab"**
  store %"struct.SlabAllocatorImpl::SentinelSlab"* %53, %"struct.SlabAllocatorImpl::SentinelSlab"** %61, align 8
  %62 = bitcast %"struct.SlabAllocatorImpl::Slab"** %54 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8* %45 to i64*
  store i64 %63, i64* %64, align 8
  %65 = bitcast %"struct.SlabAllocatorImpl::Slab"** %54 to i8**
  store i8* %22, i8** %65, align 8
  br label %66

66:                                               ; preds = %60, %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
