; ModuleID = '../../third_party/skia/src/core/SkBitmapDevice.cpp'
source_filename = "../../third_party/skia/src/core/SkBitmapDevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.43, %class.sk_sp.8, %class.sk_sp.44, %class.sk_sp.73, %class.sk_sp.74, %struct.SkRGBA4f, float, float, %union.anon.75, [4 x i8] }>
%class.sk_sp.43 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.44 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.73 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.74 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.75 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkSimpleMatrixProvider = type { %class.SkMatrixProvider }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkBitmapDevice = type { %class.SkBaseDevice, %class.SkBitmap, i8*, %class.SkRasterClipStack, %"class.std::__1::unique_ptr", %class.SkGlyphRunListPainter }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMarkerStack = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp.6, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp.6 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8 }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.SkRasterClipStack = type { i32, [160 x i8*], %class.SkTStack, %struct.SkIRect }
%class.SkTStack = type { %class.SkDeque, %"struct.SkRasterClipStack::Rec"* }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"struct.SkRasterClipStack::Rec" = type <{ %class.SkRasterClip, i32, [4 x i8] }>
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.8 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkBitmap* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.13 }
%union.anon.13 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.14, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.14 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.15, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.16, %class.SkTDArray.17, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.15 = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.16 = type { i8*, i32, i32 }
%class.SkTDArray.17 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.18 }
%class.SkTDArray.18 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.19", [3 x i8] }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.31, %class.SkSTArray, %class.SkSTArray.36 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.30" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.30" = type { %struct.SkPoint* }
%class.SkZip.31 = type { %"class.std::__1::tuple.32", i64 }
%"class.std::__1::tuple.32" = type { %"struct.std::__1::__tuple_impl.33" }
%"struct.std::__1::__tuple_impl.33" = type { %"class.std::__1::__tuple_leaf.34", %"class.std::__1::__tuple_leaf.35" }
%"class.std::__1::__tuple_leaf.34" = type { i16* }
%"class.std::__1::__tuple_leaf.35" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.36 = type { %class.SkAlignedSTStorage.37, %class.SkTArray.38 }
%class.SkAlignedSTStorage.37 = type { [32 x i8] }
%class.SkTArray.38 = type { %struct.SkPoint*, i64 }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.65, i64, i64, i32, i32 }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.59", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.39", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap, %"class.std::__1::vector", %class.SkArenaAlloc }
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.42, %class.sk_sp.43, %class.sk_sp.44, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.sk_sp.42 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkTMaskPreBlend = type { %class.sk_sp.45, i8*, i8*, i8* }
%class.sk_sp.45 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray.49 }
%class.SkAutoTArray.49 = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkTHashTable.65 = type { i32, i32, %class.SkAutoTArray.66 }
%class.SkAutoTArray.66 = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkRasterHandleAllocator = type { i32 (...)** }
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%"class.SkBitmapDevice::BDDraw" = type { %class.SkDraw }
%class.SkDraw = type { %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkPixmap, %class.SkMatrixProvider*, %class.SkRasterClip*, %class.SkPixmap* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkDrawTiler = type <{ %class.SkBitmapDevice*, %class.SkPixmap, %struct.SkIRect, %class.SkDraw, %class.SkTLazy, %class.SkRasterClip, %struct.SkIPoint, i8, i8, [6 x i8] }>
%class.SkTLazy = type { [120 x i8], %class.SkPostTranslateMatrixProvider* }
%class.SkPostTranslateMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider* }
%struct.Bounder = type <{ %struct.SkRect, i8, [3 x i8] }>
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.230", i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { i8* }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.19", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.114", %class.sk_sp.120, %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.161", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.77", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.102" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.76 }
%class.sk_sp.76 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.83", %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.92 }
%class.SkFibBlockSizes.92 = type { i32 }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.120 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.124, %class.SkTMultiMap, %class.SkTDynamicHash.136, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.149, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.124 }
%class.SkTDArray.124 = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.125, [4 x i8] }>
%union.anon.125 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.126, i8* }
%class.sk_sp.126 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.127, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.127 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.128 }
%class.SkTHashTable.128 = type { i32, i32, %class.SkAutoTArray.129 }
%class.SkAutoTArray.129 = type { %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.136 = type { %class.SkTHashTable.137 }
%class.SkTHashTable.137 = type { i32, i32, %class.SkAutoTArray.138 }
%class.SkAutoTArray.138 = type { %"class.std::__1::unique_ptr.139" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.145, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.145 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.146, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.146 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.147 }
%class.sk_sp.147 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.148, void (i8*)*, i8* }
%class.SkNVRefCnt.148 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.149 = type { %class.SkTHashTable.150 }
%class.SkTHashTable.150 = type { i32, i32, %class.SkAutoTArray.151 }
%class.SkAutoTArray.151 = type { %"class.std::__1::unique_ptr.152" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.164, %class.sk_sp.166, %class.sk_sp.166 }
%class.sk_sp.164 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.165, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.165 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.166 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkGlyphRunList = type { %class.SkSpan, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan = type { %class.SkGlyphRun*, i64 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan.188, %class.SkSpan.189, %class.SkSpan.190, %class.SkFont }
%class.SkSpan.188 = type { i8*, i64 }
%class.SkSpan.189 = type { i32*, i64 }
%class.SkSpan.190 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.42, float, float, float, i8, i8, i8, i8 }>
%class.SkTextBlob = type { %class.SkNVRefCnt.191, %struct.SkRect, i32, %"struct.std::__1::atomic.192" }
%class.SkNVRefCnt.191 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i32 }
%class.SkVertices = type <{ %class.SkNVRefCnt.197, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.197 = type { %"struct.std::__1::atomic" }
%struct.SkRSXform = type { float, float, float, float }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.sk_sp.198 = type { %class.SkSpecialImage* }
%class.sk_sp.199 = type { %class.SkImage* }
%class.sk_sp.200 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkImageFilterCache = type { %class.SkRefCnt.base, [4 x i8] }
%class.GrSurfaceDrawContext = type opaque
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%struct.SkDrawShadowRec = type opaque
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.201, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.201 = type { %class.SkImage* }
%class.SkDrawable = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.202, [384 x i64], %class.sk_sp.203, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.204", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.210" }
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.202 = type { %class.SkMarkerStack* }
%class.sk_sp.203 = type { %class.SkBaseDevice* }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.SkRasterHandleAllocator* }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.213", %class.SkGlyphRunList, %"class.std::__1::vector.220" }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %class.SkGlyphRun* }
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { i16*, i16*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i16* }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }

$_ZN6SkDrawD2Ev = comdat any

$_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect = comdat any

$_ZN17SkRasterClipStack11replaceClipERK7SkIRect = comdat any

$_ZN14SkBitmapDeviceD2Ev = comdat any

$_ZN14SkBitmapDeviceD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK14SkBitmapDevice15getRasterHandleEv = comdat any

$_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkBaseDevice29android_utils_clipWithStencilEv = comdat any

$_ZNK12SkBaseDevice16recordingContextEv = comdat any

$_ZN12SkBaseDevice18surfaceDrawContextEv = comdat any

$_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData = comdat any

$_ZN14SkBitmapDevice12setImmutableEv = comdat any

$_ZNK12SkBaseDevice16isNoPixelsDeviceEv = comdat any

$_ZNK12SkBaseDevice27forceConservativeRasterClipEv = comdat any

$_ZThn16_N14SkBitmapDeviceD1Ev = comdat any

$_ZThn16_N14SkBitmapDeviceD0Ev = comdat any

$_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN14SkBitmapDevice6BDDrawD0Ev = comdat any

$_ZN11SkDrawTiler20stepAndSetupTileDrawEv = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN29SkPostTranslateMatrixProviderD0Ev = comdat any

$_ZNK29SkPostTranslateMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK29SkPostTranslateMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN22SkSimpleMatrixProviderD0Ev = comdat any

$_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZTVN14SkBitmapDevice6BDDrawE = comdat any

$_ZTV29SkPostTranslateMatrixProvider = comdat any

$_ZTV22SkSimpleMatrixProvider = comdat any

@_ZTV14SkBitmapDevice = hidden unnamed_addr constant { [63 x i8*], [6 x i8*] } { [63 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBitmapDevice*)* @_ZN14SkBitmapDeviceD2Ev to i8*), i8* bitcast (void (%class.SkBitmapDevice*)* @_ZN14SkBitmapDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBitmapDevice*)* @_ZNK14SkBitmapDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %struct.SkIRect*)* @_ZN14SkBitmapDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*)* @_ZN14SkBitmapDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*)* @_ZN14SkBitmapDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %struct.SkRect*, i32, i1)* @_ZN14SkBitmapDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkRRect*, i32, i1)* @_ZN14SkBitmapDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkPath*, i32, i1)* @_ZN14SkBitmapDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.sk_sp.8*)* @_ZN14SkBitmapDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkRegion*, i32)* @_ZN14SkBitmapDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %struct.SkIRect*)* @_ZN14SkBitmapDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %struct.SkIRect*)* @_ZN14SkBitmapDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkBitmapDevice*)* @_ZNK14SkBitmapDevice10onClipIsAAEv to i8*), i8* bitcast (i1 (%class.SkBitmapDevice*)* @_ZNK14SkBitmapDevice16onClipIsWideOpenEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkRegion*)* @_ZNK14SkBitmapDevice11onAsRgnClipEP8SkRegion to i8*), i8* bitcast (i32 (%class.SkBitmapDevice*)* @_ZNK14SkBitmapDevice13onGetClipTypeEv to i8*), i8* bitcast ({ i64, i64 } (%class.SkBitmapDevice*)* @_ZNK14SkBitmapDevice15onDevClipBoundsEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkPaint*)* @_ZN14SkBitmapDevice9drawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN14SkBitmapDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN14SkBitmapDevice8drawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN14SkBitmapDevice8drawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkRRect*, %class.SkPaint*)* @_ZN14SkBitmapDevice9drawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)* @_ZN14SkBitmapDevice8drawPathERK6SkPathRK7SkPaintb to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN14SkBitmapDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN14SkBitmapDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN14SkBitmapDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN14SkBitmapDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN14SkBitmapDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN14SkBitmapDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.sk_sp.198*, %class.SkBitmapDevice*, %class.SkBitmap*)* @_ZN14SkBitmapDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void (%class.sk_sp.198*, %class.SkBitmapDevice*, %class.SkImage*)* @_ZN14SkBitmapDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void (%class.sk_sp.198*, %class.SkBitmapDevice*, %struct.SkIRect*, i1)* @_ZN14SkBitmapDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBitmapDevice*)* @_ZN14SkBitmapDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.200*, %class.SkBitmapDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN14SkBitmapDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBitmapDevice*, %class.SkPixmap*)* @_ZN14SkBitmapDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBitmapDevice*, %class.SkPixmap*, i32, i32)* @_ZN14SkBitmapDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBitmapDevice*, %class.SkPixmap*, i32, i32)* @_ZN14SkBitmapDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBitmapDevice*, %class.SkPixmap*)* @_ZN14SkBitmapDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.SkBitmapDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN14SkBitmapDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBitmapDevice*, %class.SkBitmap*)* @_ZN14SkBitmapDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkBitmapDevice*)* @_ZN14SkBitmapDevice19getImageFilterCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.SkBitmapDevice*)* @_ZThn16_N14SkBitmapDeviceD1Ev to i8*), i8* bitcast (void (%class.SkBitmapDevice*)* @_ZThn16_N14SkBitmapDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)] }, align 8
@__const._ZN14SkBitmapDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint.deviceAsShader = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.43 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.8 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.44 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.73 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.74 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.75 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN14SkBitmapDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.matrixProvider = private unnamed_addr constant %class.SkSimpleMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } } }, align 8
@_ZTVN14SkBitmapDevice6BDDrawE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkDraw*)* @_ZN6SkDrawD2Ev to i8*), i8* bitcast (void (%"class.SkBitmapDevice::BDDraw"*)* @_ZN14SkBitmapDevice6BDDrawD0Ev to i8*), i8* bitcast (void (%class.SkDraw*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)* @_ZNK6SkDraw10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkDraw*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)* @_ZNK6SkDraw10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint to i8*), i8* bitcast (void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint to i8*)] }, comdat, align 8
@_ZTV6SkDraw = external unnamed_addr constant { [7 x i8*] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/core/SkBitmapDevice.cpp\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@_ZTV29SkPostTranslateMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkPostTranslateMatrixProvider*)* @_ZN29SkPostTranslateMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkPostTranslateMatrixProvider*, i32, %class.SkM44*)* @_ZNK29SkPostTranslateMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkPostTranslateMatrixProvider*)* @_ZNK29SkPostTranslateMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV22SkSimpleMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkSimpleMatrixProvider*)* @_ZN22SkSimpleMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*, i32, %class.SkM44*)* @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*)* @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV12SkBaseDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8

@_ZN14SkBitmapDeviceC1ERK8SkBitmap = hidden unnamed_addr alias void (%class.SkBitmapDevice*, %class.SkBitmap*), void (%class.SkBitmapDevice*, %class.SkBitmap*)* @_ZN14SkBitmapDeviceC2ERK8SkBitmap
@_ZN14SkBitmapDeviceC1ERK8SkBitmapRK14SkSurfacePropsPvPS1_ = hidden unnamed_addr alias void (%class.SkBitmapDevice*, %class.SkBitmap*, %class.SkSurfaceProps*, i8*, %class.SkBitmap*), void (%class.SkBitmapDevice*, %class.SkBitmap*, %class.SkSurfaceProps*, i8*, %class.SkBitmap*)* @_ZN14SkBitmapDeviceC2ERK8SkBitmapRK14SkSurfacePropsPvPS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDeviceC2ERK8SkBitmap(%class.SkBitmapDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkSurfaceProps, align 4
  %4 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  %6 = bitcast %class.SkSurfaceProps* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %3) #14
  call void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice* %4, %struct.SkImageInfo* dereferenceable(24) %5, %class.SkSurfaceProps* nonnull dereferenceable(8) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV14SkBitmapDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV14SkBitmapDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %9, %class.SkBitmap* dereferenceable(56) %1) #14
  %10 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 2
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 1, i64 0
  %17 = bitcast i8** %16 to i8*
  %18 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %18, i64 80, i8* %17, i64 1280, i32 1) #14
  %19 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3
  %21 = zext i32 %14 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %12 to i64
  %24 = or i64 %22, %23
  %25 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3, i32 2
  %26 = bitcast i32* %25 to i64*
  %27 = bitcast %"struct.SkRasterClipStack::Rec"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #14
  store i64 %24, i64* %26, align 8
  %28 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %18) #14
  %29 = bitcast %"struct.SkRasterClipStack::Rec"** %19 to i8**
  store i8* %28, i8** %29, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 80, i1 false) #14
  %30 = bitcast i8* %28 to %class.SkRasterClip*
  call void @_ZN12SkRasterClipC1Ev(%class.SkRasterClip* %30) #14
  %31 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %19, align 8
  %32 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %31, i64 0, i32 0
  %33 = call zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip* %32, %struct.SkIRect* dereferenceable(16) %20) #14
  %34 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %31, i64 0, i32 1
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 4
  %36 = bitcast %"class.std::__1::unique_ptr"* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5
  %38 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 4
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %42 = load %class.SkColorSpace*, %class.SkColorSpace** %41, align 8
  %43 = call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  %44 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %43, i64 0, i32 0
  call void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter* %37, %class.SkSurfaceProps* dereferenceable(8) %38, i32 %40, %class.SkColorSpace* %42, %class.SkStrikeForGPUCacheInterface* %44) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #2

declare void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

declare %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() local_unnamed_addr #2

declare void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter*, %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkColorSpace*, %class.SkStrikeForGPUCacheInterface*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBitmapDevice* @_ZN14SkBitmapDevice6CreateERK11SkImageInfo(%struct.SkImageInfo* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkSurfaceProps, align 4
  %3 = bitcast %class.SkSurfaceProps* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %2) #14
  %4 = call %class.SkBitmapDevice* @_ZN14SkBitmapDevice6CreateERK11SkImageInfoRK14SkSurfacePropsbP23SkRasterHandleAllocator(%struct.SkImageInfo* dereferenceable(24) %0, %class.SkSurfaceProps* nonnull dereferenceable(8) %2, i1 zeroext false, %class.SkRasterHandleAllocator* null) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  ret %class.SkBitmapDevice* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDeviceC2ERK8SkBitmapRK14SkSurfacePropsPvPS1_(%class.SkBitmapDevice*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8), i8*, %class.SkBitmap*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2
  tail call void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice* %6, %struct.SkImageInfo* dereferenceable(24) %7, %class.SkSurfaceProps* dereferenceable(8) %2) #14
  %8 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV14SkBitmapDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV14SkBitmapDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %10, %class.SkBitmap* dereferenceable(56) %1) #14
  %11 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 2
  store i8* %3, i8** %11, align 8
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 1, i64 0
  %18 = bitcast i8** %17 to i8*
  %19 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  tail call void @_ZN7SkDequeC1EmPvmi(%class.SkDeque* %19, i64 80, i8* %18, i64 1280, i32 1) #14
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %21 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3
  %22 = zext i32 %15 to i64
  %23 = shl nuw i64 %22, 32
  %24 = zext i32 %13 to i64
  %25 = or i64 %23, %24
  %26 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3, i32 2
  %27 = bitcast i32* %26 to i64*
  %28 = bitcast %"struct.SkRasterClipStack::Rec"** %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #14
  store i64 %25, i64* %27, align 8
  %29 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %19) #14
  %30 = bitcast %"struct.SkRasterClipStack::Rec"** %20 to i8**
  store i8* %29, i8** %30, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 80, i1 false) #14
  %31 = bitcast i8* %29 to %class.SkRasterClip*
  tail call void @_ZN12SkRasterClipC1Ev(%class.SkRasterClip* %31) #14
  %32 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %33 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %32, i64 0, i32 0
  %34 = tail call zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip* %33, %struct.SkIRect* dereferenceable(16) %21) #14
  %35 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %32, i64 0, i32 1
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 4
  %37 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5
  %39 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 4
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %43 = load %class.SkColorSpace*, %class.SkColorSpace** %42, align 8
  %44 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #14
  %45 = getelementptr inbounds %class.SkStrikeCache, %class.SkStrikeCache* %44, i64 0, i32 0
  tail call void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter* %38, %class.SkSurfaceProps* dereferenceable(8) %39, i32 %41, %class.SkColorSpace* %43, %class.SkStrikeForGPUCacheInterface* %45) #14
  %46 = icmp eq %class.SkBitmap* %4, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %5
  %48 = tail call i8* @_Znwm(i64 56) #15
  %49 = bitcast i8* %48 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %49, %class.SkBitmap* nonnull dereferenceable(56) %4) #14
  %50 = ptrtoint i8* %48 to i64
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 0, i32 0, i32 0, i32 0
  %52 = load %class.SkBitmap*, %class.SkBitmap** %51, align 8
  store i64 %50, i64* %37, align 8
  %53 = icmp eq %class.SkBitmap* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %47
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %52) #14
  %55 = bitcast %class.SkBitmap* %52 to i8*
  tail call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %47, %54, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBitmapDevice* @_ZN14SkBitmapDevice6CreateERK11SkImageInfoRK14SkSurfacePropsbP23SkRasterHandleAllocator(%struct.SkImageInfo* nocapture readonly dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8), i1 zeroext, %class.SkRasterHandleAllocator*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %struct.SkImageInfo, align 16
  %9 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %115, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %115, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %115, label %21

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %19) #14
  %23 = load i32, i32* %9, align 4
  %24 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1
  %29 = bitcast %struct.SkISize* %28 to i64*
  %30 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 24, i1 false)
  %31 = load i64, i64* %29, align 8, !noalias !2
  %32 = load i32, i32* %18, align 8, !noalias !5
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8, !noalias !8
  %35 = icmp eq %class.SkColorSpace* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %21
  %37 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 1 monotonic, !noalias !8
  br label %39

39:                                               ; preds = %21, %36
  %40 = ptrtoint %class.SkColorSpace* %34 to i64
  %41 = zext i32 %32 to i64
  %42 = zext i32 %23 to i64
  %43 = shl nuw i64 %42, 32
  %44 = select i1 %22, i64 4294967296, i64 %43
  %45 = or i64 %44, %41
  %46 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %40, i64* %46, align 8, !alias.scope !11
  %47 = bitcast i32* %26 to i64*
  store i64 %45, i64* %47, align 8, !alias.scope !11
  %48 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %49 = bitcast %struct.SkISize* %48 to i64*
  store i64 %31, i64* %49, align 8, !alias.scope !11
  %50 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %50) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #14
  %51 = icmp eq i32 %32, 0
  %52 = trunc i64 %31 to i32
  br i1 %51, label %53, label %55

53:                                               ; preds = %39
  %54 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 0) #14
  br i1 %54, label %78, label %104

55:                                               ; preds = %39
  %56 = icmp eq %class.SkRasterHandleAllocator* %3, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %55
  %58 = call i8* @_ZN23SkRasterHandleAllocator11allocBitmapERK11SkImageInfoP8SkBitmap(%class.SkRasterHandleAllocator* nonnull %3, %struct.SkImageInfo* nonnull dereferenceable(24) %5, %class.SkBitmap* nonnull %6) #14
  %59 = icmp eq i8* %58, null
  br i1 %59, label %104, label %78

60:                                               ; preds = %55
  %61 = icmp eq i64 %44, 4294967296
  br i1 %61, label %66, label %62

62:                                               ; preds = %60
  %63 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %32) #14
  br i1 %63, label %64, label %76

64:                                               ; preds = %62
  %65 = load i32, i32* %27, align 8
  br label %66

66:                                               ; preds = %64, %60
  %67 = phi i32 [ %65, %64 ], [ %52, %60 ]
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0
  %70 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %69) #14
  %71 = sext i32 %70 to i64
  %72 = mul nsw i64 %71, %68
  %73 = icmp ult i64 %72, 2147483648
  %74 = select i1 %73, i64 %72, i64 0
  %75 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 %74) #14
  br i1 %75, label %78, label %104

76:                                               ; preds = %62
  %77 = call zeroext i1 @_ZN8SkBitmap19tryAllocPixelsFlagsERK11SkImageInfoj(%class.SkBitmap* nonnull %6, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i32 1) #14
  br i1 %77, label %78, label %104

78:                                               ; preds = %57, %76, %66, %53
  %79 = phi i8* [ null, %53 ], [ %58, %57 ], [ null, %66 ], [ null, %76 ]
  %80 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %80) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #14
  br i1 %2, label %81, label %98

81:                                               ; preds = %78
  %82 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #14
  %83 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %49, align 8
  %85 = bitcast %struct.SkImageInfo* %8 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %85, align 16, !alias.scope !14
  %86 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %87 = bitcast %struct.SkISize* %86 to i64*
  store i64 %84, i64* %87, align 16, !alias.scope !14
  %88 = call zeroext i1 @_ZN8SkBitmap19tryAllocPixelsFlagsERK11SkImageInfoj(%class.SkBitmap* nonnull %7, %struct.SkImageInfo* nonnull dereferenceable(24) %8, i32 1) #14
  %89 = load %class.SkColorSpace*, %class.SkColorSpace** %83, align 16
  %90 = icmp eq %class.SkColorSpace* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = bitcast %class.SkColorSpace* %89 to i8*
  call void @_ZdlPv(i8* %96) #15
  br label %97

97:                                               ; preds = %81, %91, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #14
  br i1 %88, label %98, label %102

98:                                               ; preds = %97, %78
  %99 = call i8* @_Znwm(i64 1944) #15
  %100 = bitcast i8* %99 to %class.SkBitmapDevice*
  %101 = select i1 %2, %class.SkBitmap* %7, %class.SkBitmap* null
  call void @_ZN14SkBitmapDeviceC2ERK8SkBitmapRK14SkSurfacePropsPvPS1_(%class.SkBitmapDevice* nonnull %100, %class.SkBitmap* nonnull dereferenceable(56) %6, %class.SkSurfaceProps* dereferenceable(8) %1, i8* %79, %class.SkBitmap* %101)
  br label %102

102:                                              ; preds = %97, %98
  %103 = phi %class.SkBitmapDevice* [ %100, %98 ], [ null, %97 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #14
  br label %104

104:                                              ; preds = %76, %66, %57, %53, %102
  %105 = phi %class.SkBitmapDevice* [ %103, %102 ], [ null, %53 ], [ null, %57 ], [ null, %66 ], [ null, %76 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %50) #14
  %106 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %107 = icmp eq %class.SkColorSpace* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  %113 = bitcast %class.SkColorSpace* %106 to i8*
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %104, %108, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  br label %115

115:                                              ; preds = %4, %13, %17, %114
  %116 = phi %class.SkBitmapDevice* [ %105, %114 ], [ null, %17 ], [ null, %13 ], [ null, %4 ]
  ret %class.SkBitmapDevice* %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i8* @_ZN23SkRasterHandleAllocator11allocBitmapERK11SkImageInfoP8SkBitmap(%class.SkRasterHandleAllocator*, %struct.SkImageInfo* dereferenceable(24), %class.SkBitmap*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap19tryAllocPixelsFlagsERK11SkImageInfoj(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap(%class.SkBitmapDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  %4 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %3, %class.SkBitmap* dereferenceable(56) %1) #14
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3
  %10 = zext i32 %8 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %6 to i64
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %9, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %19 = bitcast i32* %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !17
  %21 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 0, i64* %21, align 8
  br label %38

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !17
  %25 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %26 = ptrtoint %class.SkColorSpace* %15 to i64
  %27 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 1
  %28 = bitcast i32* %27 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !17
  %30 = bitcast %struct.SkImageInfo* %9 to i64*
  store i64 %26, i64* %30, align 8
  %31 = icmp eq %class.SkColorSpace* %25, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = bitcast %class.SkColorSpace* %25 to i8*
  tail call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %17, %22, %32, %36
  %39 = phi i64 [ %20, %17 ], [ %29, %22 ], [ %29, %32 ], [ %29, %36 ]
  %40 = phi i64* [ %19, %17 ], [ %28, %22 ], [ %28, %32 ], [ %28, %36 ]
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1
  %42 = bitcast %struct.SkISize* %41 to i64*
  store i64 %13, i64* %42, align 8
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBaseDevice* @_ZN14SkBitmapDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint(%class.SkBitmapDevice* nocapture readonly, %"struct.SkBaseDevice::CreateInfo"* nocapture readonly dereferenceable(48), %class.SkPaint* readonly) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkSurfaceProps, align 4
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = bitcast %class.SkSurfaceProps* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %4, i64 0, i32 0
  store i32 -1431655766, i32* %7, align 4
  %8 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %4, i64 0, i32 1
  store i32 -1431655766, i32* %8, align 4
  %9 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 4, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %4, i32 %10, i32 %12) #14
  %13 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic
  br label %23

23:                                               ; preds = %3, %20
  store %class.SkColorSpace* %18, %class.SkColorSpace** %14, align 8
  %24 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast i32* %24 to i64*
  %26 = bitcast i32* %15 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0, i32 1
  %30 = bitcast %struct.SkISize* %29 to i64*
  %31 = bitcast %struct.SkISize* %28 to i64*
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  %33 = icmp eq %class.SkPaint* %2, null
  %34 = and i64 %27, -4294967296
  br i1 %33, label %57, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %37 = load %class.SkImageFilter*, %class.SkImageFilter** %36, align 8
  %38 = icmp eq %class.SkImageFilter* %37, null
  br i1 %38, label %57, label %39

39:                                               ; preds = %35
  br i1 %19, label %40, label %43

40:                                               ; preds = %39
  %41 = or i64 %34, 6
  %42 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 0, i64* %42, align 8
  br label %54

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 1 monotonic, !noalias !22
  %46 = ptrtoint %class.SkColorSpace* %18 to i64
  %47 = and i64 %27, -4294967296
  %48 = or i64 %47, 6
  %49 = bitcast %struct.SkImageInfo* %5 to i64*
  store i64 %46, i64* %49, align 8
  %50 = atomicrmw add i32* %44, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = bitcast %class.SkColorSpace* %18 to i8*
  call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %52, %43, %40
  %55 = phi i64 [ %41, %40 ], [ %48, %43 ], [ %48, %52 ]
  store i64 %55, i64* %26, align 8
  store i64 %32, i64* %31, align 8
  %56 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  br label %57

57:                                               ; preds = %35, %23, %54
  %58 = phi %class.SkColorSpace* [ %18, %35 ], [ %18, %23 ], [ %56, %54 ]
  %59 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 3
  %60 = load i8, i8* %59, align 8, !range !29
  %61 = icmp ne i8 %60, 0
  %62 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 4
  %63 = load %class.SkRasterHandleAllocator*, %class.SkRasterHandleAllocator** %62, align 8
  %64 = call %class.SkBitmapDevice* @_ZN14SkBitmapDevice6CreateERK11SkImageInfoRK14SkSurfacePropsbP23SkRasterHandleAllocator(%struct.SkImageInfo* nonnull dereferenceable(24) %5, %class.SkSurfaceProps* nonnull dereferenceable(8) %4, i1 zeroext %61, %class.SkRasterHandleAllocator* %63)
  %65 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %64, i64 0, i32 0
  %66 = icmp eq %class.SkColorSpace* %58, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = bitcast %class.SkColorSpace* %58 to i8*
  call void @_ZdlPv(i8* %72) #15
  br label %73

73:                                               ; preds = %57, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret %class.SkBaseDevice* %65
}

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkBitmapDevice14onAccessPixelsEP8SkPixmap(%class.SkBitmapDevice*, %class.SkPixmap*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkBitmapDevice* %0 to i1 (%class.SkBitmapDevice*, %class.SkPixmap*)***
  %4 = load i1 (%class.SkBitmapDevice*, %class.SkPixmap*)**, i1 (%class.SkBitmapDevice*, %class.SkPixmap*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkBitmapDevice*, %class.SkPixmap*)*, i1 (%class.SkBitmapDevice*, %class.SkPixmap*)** %4, i64 52
  %6 = load i1 (%class.SkBitmapDevice*, %class.SkPixmap*)*, i1 (%class.SkBitmapDevice*, %class.SkPixmap*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkBitmapDevice* %0, %class.SkPixmap* %1) #14
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  tail call void @_ZNK8SkBitmap19notifyPixelsChangedEv(%class.SkBitmap* %9) #14
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i1 [ true, %8 ], [ false, %2 ]
  ret i1 %11
}

declare void @_ZNK8SkBitmap19notifyPixelsChangedEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkBitmapDevice12onPeekPixelsEP8SkPixmap(%class.SkBitmapDevice*, %class.SkPixmap*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2
  %4 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  %18 = icmp eq i32 %14, 0
  %19 = or i1 %17, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %1, %struct.SkImageInfo* dereferenceable(24) %3, i8* nonnull %16, i64 %22) #14
  br label %23

23:                                               ; preds = %10, %20
  %24 = phi i1 [ true, %20 ], [ false, %10 ]
  br i1 %6, label %31, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = bitcast %class.SkColorSpace* %5 to i8*
  tail call void @_ZdlPv(i8* %30) #15
  br label %31

31:                                               ; preds = %23, %25, %29
  ret i1 %24
}

declare void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkBitmapDevice13onWritePixelsERK8SkPixmapii(%class.SkBitmapDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZN8SkBitmap11writePixelsERK8SkPixmapii(%class.SkBitmap* %5, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #14
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @_ZNK8SkBitmap19notifyPixelsChangedEv(%class.SkBitmap* %5) #14
  br label %12

12:                                               ; preds = %9, %4, %11
  %13 = phi i1 [ true, %11 ], [ false, %4 ], [ false, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZN8SkBitmap11writePixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkBitmapDevice12onReadPixelsERK8SkPixmapii(%class.SkBitmapDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap* %5, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #14
  ret i1 %6
}

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice9drawPaintERK7SkPaint(%class.SkBitmapDevice*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkBitmapDevice::BDDraw", align 8
  %4 = bitcast %"class.SkBitmapDevice::BDDraw"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0
  call void @_ZN6SkDrawC2Ev(%class.SkDraw* nonnull %5) #14
  %6 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN14SkBitmapDevice6BDDrawE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0, i32 1
  %9 = call zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice* %7, %class.SkPixmap* %8) #14
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %8, %struct.SkImageInfo* dereferenceable(24) %11, i8* null, i64 0) #14
  br label %12

12:                                               ; preds = %2, %10
  %13 = icmp eq %class.SkBitmapDevice* %0, null
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1
  %15 = select i1 %13, %class.SkMatrixProvider* null, %class.SkMatrixProvider* %14
  %16 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0, i32 2
  store %class.SkMatrixProvider* %15, %class.SkMatrixProvider** %16, align 8
  %17 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %18 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %17, align 8
  %19 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0, i32 3
  store %class.SkRasterClip* %19, %class.SkRasterClip** %20, align 8
  %21 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %class.SkBitmap*, %class.SkBitmap** %21, align 8
  %23 = icmp eq %class.SkBitmap* %22, null
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %22, i64 0, i32 1
  %25 = select i1 %23, %class.SkPixmap* null, %class.SkPixmap* %24
  %26 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0, i32 4
  store %class.SkPixmap* %25, %class.SkPixmap** %26, align 8
  call void @_ZNK6SkDraw9drawPaintERK7SkPaint(%class.SkDraw* nonnull %5, %class.SkPaint* dereferenceable(72) %1) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %27 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %3, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %29 = icmp eq %class.SkColorSpace* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %12
  %31 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %class.SkColorSpace* %28 to i8*
  call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %12, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #14
  ret void
}

declare void @_ZNK6SkDraw9drawPaintERK7SkPaint(%class.SkDraw*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6SkDrawD2Ev(%class.SkDraw*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkBitmapDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkDrawTiler, align 8
  %7 = bitcast %class.SkDrawTiler* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 352, i1 false)
  call void @_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect(%class.SkDrawTiler* nonnull %6, %class.SkBitmapDevice* %0, %struct.SkRect* null)
  %8 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 7
  %9 = load i8, i8* %8, align 8, !range !29
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %33

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 8
  %13 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 5, i32 3
  %14 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 3
  %15 = icmp eq %class.SkDraw* %14, null
  br label %16

16:                                               ; preds = %11, %30
  %17 = load i8, i8* %12, align 1, !range !29
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16, %24
  call void @_ZN11SkDrawTiler20stepAndSetupTileDrawEv(%class.SkDrawTiler* nonnull %6) #14
  %20 = load i8, i8* %8, align 8, !range !29
  %21 = icmp eq i8 %20, 0
  %22 = load i8, i8* %13, align 1, !range !29
  %23 = icmp eq i8 %22, 0
  br i1 %21, label %24, label %25

24:                                               ; preds = %19
  br i1 %23, label %29, label %19

25:                                               ; preds = %19
  %26 = xor i1 %23, true
  %27 = or i1 %15, %26
  br i1 %27, label %33, label %30

28:                                               ; preds = %16
  store i8 1, i8* %8, align 8
  br label %29

29:                                               ; preds = %24, %28
  br i1 %15, label %33, label %30

30:                                               ; preds = %25, %29
  call void @_ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice(%class.SkDraw* nonnull %14, i32 %1, i64 %2, %struct.SkPoint* %3, %class.SkPaint* dereferenceable(72) %4, %class.SkBaseDevice* null) #14
  %31 = load i8, i8* %8, align 8, !range !29
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %16, label %33

33:                                               ; preds = %25, %29, %30, %5
  %34 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 5
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %34) #14
  %35 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 4, i32 1
  %36 = load %class.SkPostTranslateMatrixProvider*, %class.SkPostTranslateMatrixProvider** %35, align 8
  %37 = icmp eq %class.SkPostTranslateMatrixProvider* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = bitcast %class.SkPostTranslateMatrixProvider* %36 to void (%class.SkPostTranslateMatrixProvider*)***
  %40 = load void (%class.SkPostTranslateMatrixProvider*)**, void (%class.SkPostTranslateMatrixProvider*)*** %39, align 8
  %41 = load void (%class.SkPostTranslateMatrixProvider*)*, void (%class.SkPostTranslateMatrixProvider*)** %40, align 8
  call void %41(%class.SkPostTranslateMatrixProvider* nonnull %36) #14
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %35, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %45 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %46 = icmp eq %class.SkColorSpace* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = bitcast %class.SkColorSpace* %45 to i8*
  call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %51, %47, %42
  %54 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %6, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %55 = load %class.SkColorSpace*, %class.SkColorSpace** %54, align 8
  %56 = icmp eq %class.SkColorSpace* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 -1 acq_rel
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = bitcast %class.SkColorSpace* %55 to i8*
  call void @_ZdlPv(i8* %62) #15
  br label %63

63:                                               ; preds = %53, %57, %61
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect(%class.SkDrawTiler*, %class.SkBitmapDevice*, %struct.SkRect*) unnamed_addr #0 comdat align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %struct.SkIRect, align 4
  %6 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 0
  store %class.SkBitmapDevice* %1, %class.SkBitmapDevice** %6, align 8
  %7 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 1
  %8 = bitcast %class.SkPixmap* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false) #14
  %9 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3
  tail call void @_ZN6SkDrawC1Ev(%class.SkDraw* %9) #14
  %10 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 1
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %10, align 8
  %11 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 5
  tail call void @_ZN12SkRasterClipC1Ev(%class.SkRasterClip* %11) #14
  %12 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 7
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice* %13, %class.SkPixmap* %7) #14
  br i1 %14, label %17, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0, i32 3
  tail call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %7, %struct.SkImageInfo* dereferenceable(24) %16, i8* null, i64 0) #14
  br label %17

17:                                               ; preds = %15, %3
  %18 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #14
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 3, i32 2, i32 1
  %21 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -86, i64 16, i1 false)
  %22 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %23 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %22, i64 0, i32 0
  %24 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %23) #14
  %25 = bitcast %struct.SkIRect* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %25, i64 16, i1 false)
  %26 = load i32, i32* %19, align 4
  %27 = icmp sgt i32 %26, 8191
  br i1 %27, label %28, label %30

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 8
  store i8 1, i8* %29, align 1
  br label %36

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 8191
  %34 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 8
  %35 = zext i1 %33 to i8
  store i8 %35, i8* %34, align 1
  br i1 %33, label %36, label %111

36:                                               ; preds = %28, %30
  %37 = phi i8* [ %29, %28 ], [ %34, %30 ]
  %38 = icmp eq %struct.SkRect* %2, null
  br i1 %38, label %94, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0, i32 1, i32 2
  %41 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %42 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -1, i64 16, i1 false) #14
  %43 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %40, %struct.SkRect* nonnull %42, %struct.SkRect* nonnull dereferenceable(16) %2, i32 1) #14
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %45 = load <2 x float>, <2 x float>* %44, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %47 = load <2 x float>, <2 x float>* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  %48 = extractelement <2 x float> %45, i32 0
  %49 = call float @llvm.floor.f32(float %48) #14
  %50 = fcmp olt float %49, 0x41DFFFFFE0000000
  %51 = select i1 %50, float %49, float 0x41DFFFFFE0000000
  %52 = fcmp ogt float %51, 0xC1DFFFFFE0000000
  %53 = select i1 %52, float %51, float 0xC1DFFFFFE0000000
  %54 = fptosi float %53 to i32
  %55 = extractelement <2 x float> %45, i32 1
  %56 = call float @llvm.floor.f32(float %55) #14
  %57 = fcmp olt float %56, 0x41DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0x41DFFFFFE0000000
  %59 = fcmp ogt float %58, 0xC1DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0xC1DFFFFFE0000000
  %61 = fptosi float %60 to i32
  %62 = extractelement <2 x float> %47, i32 0
  %63 = call float @llvm.ceil.f32(float %62) #14
  %64 = fcmp olt float %63, 0x41DFFFFFE0000000
  %65 = select i1 %64, float %63, float 0x41DFFFFFE0000000
  %66 = fcmp ogt float %65, 0xC1DFFFFFE0000000
  %67 = select i1 %66, float %65, float 0xC1DFFFFFE0000000
  %68 = fptosi float %67 to i32
  %69 = extractelement <2 x float> %47, i32 1
  %70 = call float @llvm.ceil.f32(float %69) #14
  %71 = fcmp olt float %70, 0x41DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0x41DFFFFFE0000000
  %73 = fcmp ogt float %72, 0xC1DFFFFFE0000000
  %74 = select i1 %73, float %72, float 0xC1DFFFFFE0000000
  %75 = fptosi float %74 to i32
  %76 = zext i32 %61 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %54 to i64
  %79 = or i64 %77, %78
  %80 = zext i32 %75 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %68 to i64
  %83 = or i64 %81, %82
  %84 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2
  %85 = bitcast %struct.SkIRect* %84 to i64*
  store i64 %79, i64* %85, align 8
  %86 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 2
  %87 = bitcast i32* %86 to i64*
  store i64 %83, i64* %87, align 8
  %88 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %84, %struct.SkIRect* dereferenceable(16) %84, %struct.SkIRect* nonnull dereferenceable(16) %5) #14
  br i1 %88, label %89, label %93

89:                                               ; preds = %39
  %90 = load i32, i32* %86, align 4
  %91 = icmp sgt i32 %90, 8191
  br i1 %91, label %92, label %97

92:                                               ; preds = %89
  store i8 1, i8* %37, align 1
  br label %102

93:                                               ; preds = %39
  store i8 0, i8* %37, align 1
  store i8 1, i8* %12, align 8
  br label %111

94:                                               ; preds = %36
  %95 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2
  %96 = bitcast %struct.SkIRect* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 4 %18, i64 16, i1 false)
  br label %102

97:                                               ; preds = %89
  %98 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, 8191
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %37, align 1
  br i1 %100, label %102, label %111

102:                                              ; preds = %97, %92, %94
  %103 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 3
  store %class.SkRasterClip* %11, %class.SkRasterClip** %103, align 8
  %104 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %105, -8191
  %107 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 0
  store i32 %106, i32* %109, align 4
  %110 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 1
  store i32 %108, i32* %110, align 4
  br label %151

111:                                              ; preds = %97, %30, %93
  %112 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 1
  %113 = bitcast %class.SkPixmap* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %8, i64 16, i1 false) #14
  %114 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %114, align 8
  %116 = icmp eq %class.SkColorSpace* %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 1 monotonic
  br label %120

120:                                              ; preds = %117, %111
  %121 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %122 = load %class.SkColorSpace*, %class.SkColorSpace** %121, align 8
  store %class.SkColorSpace* %115, %class.SkColorSpace** %121, align 8
  %123 = icmp eq %class.SkColorSpace* %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %130

128:                                              ; preds = %124
  %129 = bitcast %class.SkColorSpace* %122 to i8*
  call void @_ZdlPv(i8* %129) #15
  br label %130

130:                                              ; preds = %120, %124, %128
  %131 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 1, i32 2, i32 0, i32 1
  %132 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %133 = bitcast i32* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  %135 = bitcast i32* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %135, align 8
  %136 = icmp eq %class.SkBitmapDevice* %1, null
  %137 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0, i32 1
  %138 = select i1 %136, %class.SkMatrixProvider* null, %class.SkMatrixProvider* %137
  %139 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 2
  store %class.SkMatrixProvider* %138, %class.SkMatrixProvider** %139, align 8
  %140 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %141 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %140, i64 0, i32 0
  %142 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 3
  store %class.SkRasterClip* %141, %class.SkRasterClip** %142, align 8
  %143 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 0
  store i32 0, i32* %143, align 4
  %144 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 1
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %146 = load %class.SkBitmap*, %class.SkBitmap** %145, align 8
  %147 = icmp eq %class.SkBitmap* %146, null
  %148 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %146, i64 0, i32 1
  %149 = select i1 %147, %class.SkPixmap* null, %class.SkPixmap* %148
  %150 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 4
  store %class.SkPixmap* %149, %class.SkPixmap** %150, align 8
  br label %151

151:                                              ; preds = %130, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #14
  ret void
}

declare void @_ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice(%class.SkDraw*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72), %class.SkBaseDevice*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice8drawRectERK6SkRectRK7SkPaint(%class.SkBitmapDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkDrawTiler, align 8
  %5 = alloca %struct.Bounder, align 4
  %6 = bitcast %class.SkDrawTiler* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 352, i1 false)
  %7 = bitcast %struct.Bounder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #14
  %8 = tail call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %2) #14
  %9 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %5, i64 0, i32 1
  %10 = zext i1 %8 to i8
  store i8 %10, i8* %9, align 4
  br i1 %8, label %11, label %38

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %5, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 6
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %21 = bitcast %class.SkMaskFilter** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %class.SkPaint* %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = or i64 %24, %22
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %27 = bitcast %class.SkImageFilter** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = or i64 %25, %28
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %19, %11
  %32 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %2, %struct.SkRect* dereferenceable(16) %1, %struct.SkRect* nonnull %12, i8 zeroext %17) #14
  %33 = load i8, i8* %9, align 4, !range !29
  br label %34

34:                                               ; preds = %31, %19
  %35 = phi i8 [ %33, %31 ], [ 1, %19 ]
  %36 = phi %struct.SkRect* [ %32, %31 ], [ %1, %19 ]
  %37 = bitcast %struct.SkRect* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %37, i64 16, i1 false) #14
  br label %38

38:                                               ; preds = %3, %34
  %39 = phi i8 [ 0, %3 ], [ %35, %34 ]
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %5, i64 0, i32 0
  %42 = select i1 %40, %struct.SkRect* null, %struct.SkRect* %41
  call void @_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect(%class.SkDrawTiler* nonnull %4, %class.SkBitmapDevice* %0, %struct.SkRect* %42)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #14
  %43 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 7
  %44 = load i8, i8* %43, align 8, !range !29
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %68

46:                                               ; preds = %38
  %47 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 8
  %48 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 5, i32 3
  %49 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 3
  %50 = icmp eq %class.SkDraw* %49, null
  br label %51

51:                                               ; preds = %46, %65
  %52 = load i8, i8* %47, align 1, !range !29
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %51, %59
  call void @_ZN11SkDrawTiler20stepAndSetupTileDrawEv(%class.SkDrawTiler* nonnull %4) #14
  %55 = load i8, i8* %43, align 8, !range !29
  %56 = icmp eq i8 %55, 0
  %57 = load i8, i8* %48, align 1, !range !29
  %58 = icmp eq i8 %57, 0
  br i1 %56, label %59, label %60

59:                                               ; preds = %54
  br i1 %58, label %64, label %54

60:                                               ; preds = %54
  %61 = xor i1 %58, true
  %62 = or i1 %50, %61
  br i1 %62, label %68, label %65

63:                                               ; preds = %51
  store i8 1, i8* %43, align 8
  br label %64

64:                                               ; preds = %59, %63
  br i1 %50, label %68, label %65

65:                                               ; preds = %60, %64
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* nonnull %49, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null, %struct.SkRect* null) #14
  %66 = load i8, i8* %43, align 8, !range !29
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %51, label %68

68:                                               ; preds = %60, %64, %65, %38
  %69 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 5
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %69) #14
  %70 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 4, i32 1
  %71 = load %class.SkPostTranslateMatrixProvider*, %class.SkPostTranslateMatrixProvider** %70, align 8
  %72 = icmp eq %class.SkPostTranslateMatrixProvider* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = bitcast %class.SkPostTranslateMatrixProvider* %71 to void (%class.SkPostTranslateMatrixProvider*)***
  %75 = load void (%class.SkPostTranslateMatrixProvider*)**, void (%class.SkPostTranslateMatrixProvider*)*** %74, align 8
  %76 = load void (%class.SkPostTranslateMatrixProvider*)*, void (%class.SkPostTranslateMatrixProvider*)** %75, align 8
  call void %76(%class.SkPostTranslateMatrixProvider* nonnull %71) #14
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %70, align 8
  br label %77

77:                                               ; preds = %73, %68
  %78 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %80 = load %class.SkColorSpace*, %class.SkColorSpace** %79, align 8
  %81 = icmp eq %class.SkColorSpace* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = bitcast %class.SkColorSpace* %80 to i8*
  call void @_ZdlPv(i8* %87) #15
  br label %88

88:                                               ; preds = %86, %82, %77
  %89 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %89, align 8
  %91 = icmp eq %class.SkColorSpace* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = bitcast %class.SkColorSpace* %90 to i8*
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %88, %92, %96
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice8drawOvalERK6SkRectRK7SkPaint(%class.SkBitmapDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @_ZN6SkPath4OvalERK6SkRect15SkPathDirection(%class.SkPath* nonnull sret %4, %struct.SkRect* dereferenceable(16) %1, i32 0) #14
  %6 = bitcast %class.SkBitmapDevice* %0 to void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %7 = load void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)** %7, i64 32
  %9 = load void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)** %8, align 8
  call void %9(%class.SkBitmapDevice* %0, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret void
}

declare void @_ZN6SkPath4OvalERK6SkRect15SkPathDirection(%class.SkPath* sret, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice9drawRRectERK7SkRRectRK7SkPaint(%class.SkBitmapDevice*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull sret %4, %class.SkRRect* dereferenceable(52) %1, i32 0) #14
  %6 = bitcast %class.SkBitmapDevice* %0 to void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %7 = load void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)** %7, i64 32
  %9 = load void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBitmapDevice*, %class.SkPath*, %class.SkPaint*, i1)** %8, align 8
  call void %9(%class.SkBitmapDevice* %0, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret void
}

declare void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* sret, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice8drawPathERK6SkPathRK7SkPaintb(%class.SkBitmapDevice*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkDrawTiler, align 8
  %6 = alloca %struct.Bounder, align 4
  %7 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 8191
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 8191
  br i1 %13, label %14, label %36

14:                                               ; preds = %4, %10
  %15 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 2
  %17 = and i8 %16, 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %21 = load %class.SkPathRef*, %class.SkPathRef** %20, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 9
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 1
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 3, i32 0
  %28 = load %struct.SkPoint*, %struct.SkPoint** %27, align 8
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 3, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %26, %struct.SkPoint* %28, i32 %30) #14
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 10
  %33 = zext i1 %31 to i8
  store i8 %33, i8* %32, align 1
  store i8 0, i8* %22, align 8
  br label %34

34:                                               ; preds = %19, %25
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 1
  br label %36

36:                                               ; preds = %14, %34, %10
  %37 = phi %struct.SkRect* [ null, %14 ], [ %35, %34 ], [ null, %10 ]
  %38 = bitcast %class.SkDrawTiler* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %38) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 352, i1 false)
  %39 = icmp eq %struct.SkRect* %37, null
  %40 = bitcast %struct.Bounder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %40) #14
  br i1 %39, label %77, label %41

41:                                               ; preds = %36
  %42 = tail call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %2) #14
  %43 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %6, i64 0, i32 1
  %44 = zext i1 %42 to i8
  store i8 %44, i8* %43, align 4
  br i1 %42, label %45, label %72

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %6, i64 0, i32 0
  %47 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = lshr i32 %48, 6
  %50 = trunc i32 %49 to i8
  %51 = and i8 %50, 3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %45
  %54 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %55 = bitcast %class.SkMaskFilter** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %class.SkPaint* %2 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = or i64 %58, %56
  %60 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 4, i32 0
  %61 = bitcast %class.SkImageFilter** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = or i64 %59, %62
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %53, %45
  %66 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %2, %struct.SkRect* nonnull dereferenceable(16) %37, %struct.SkRect* nonnull %46, i8 zeroext %51) #14
  %67 = load i8, i8* %43, align 4, !range !29
  br label %68

68:                                               ; preds = %65, %53
  %69 = phi i8 [ %67, %65 ], [ 1, %53 ]
  %70 = phi %struct.SkRect* [ %66, %65 ], [ %37, %53 ]
  %71 = bitcast %struct.SkRect* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %71, i64 16, i1 false) #14
  br label %72

72:                                               ; preds = %41, %68
  %73 = phi i8 [ 0, %41 ], [ %69, %68 ]
  %74 = icmp eq i8 %73, 0
  %75 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %6, i64 0, i32 0
  %76 = select i1 %74, %struct.SkRect* null, %struct.SkRect* %75
  br label %77

77:                                               ; preds = %36, %72
  %78 = phi %struct.SkRect* [ %76, %72 ], [ null, %36 ]
  call void @_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect(%class.SkDrawTiler* nonnull %5, %class.SkBitmapDevice* %0, %struct.SkRect* %78)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %40) #14
  %79 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 8
  %80 = load i8, i8* %79, align 1, !range !29
  %81 = icmp eq i8 %80, 0
  %82 = and i1 %81, %3
  %83 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 7
  %84 = load i8, i8* %83, align 8, !range !29
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %109

86:                                               ; preds = %77
  %87 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 5, i32 3
  %88 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 3
  %89 = icmp eq %class.SkDraw* %88, null
  br label %90

90:                                               ; preds = %107, %86
  %91 = phi i8 [ %108, %107 ], [ %80, %86 ]
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %102, label %93

93:                                               ; preds = %90, %98
  call void @_ZN11SkDrawTiler20stepAndSetupTileDrawEv(%class.SkDrawTiler* nonnull %5) #14
  %94 = load i8, i8* %83, align 8, !range !29
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %87, align 1, !range !29
  %97 = icmp eq i8 %96, 0
  br i1 %95, label %98, label %99

98:                                               ; preds = %93
  br i1 %97, label %103, label %93

99:                                               ; preds = %93
  %100 = xor i1 %97, true
  %101 = or i1 %89, %100
  br i1 %101, label %109, label %104

102:                                              ; preds = %90
  store i8 1, i8* %83, align 8
  br label %103

103:                                              ; preds = %98, %102
  br i1 %89, label %109, label %104

104:                                              ; preds = %99, %103
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* nonnull %88, %class.SkPath* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null, i1 zeroext %82, i1 zeroext false, %class.SkBlitter* null) #14
  %105 = load i8, i8* %83, align 8, !range !29
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  %108 = load i8, i8* %79, align 1, !range !29
  br label %90

109:                                              ; preds = %99, %103, %104, %77
  %110 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 5
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %110) #14
  %111 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 4, i32 1
  %112 = load %class.SkPostTranslateMatrixProvider*, %class.SkPostTranslateMatrixProvider** %111, align 8
  %113 = icmp eq %class.SkPostTranslateMatrixProvider* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %109
  %115 = bitcast %class.SkPostTranslateMatrixProvider* %112 to void (%class.SkPostTranslateMatrixProvider*)***
  %116 = load void (%class.SkPostTranslateMatrixProvider*)**, void (%class.SkPostTranslateMatrixProvider*)*** %115, align 8
  %117 = load void (%class.SkPostTranslateMatrixProvider*)*, void (%class.SkPostTranslateMatrixProvider*)** %116, align 8
  call void %117(%class.SkPostTranslateMatrixProvider* nonnull %112) #14
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %111, align 8
  br label %118

118:                                              ; preds = %114, %109
  %119 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %121 = load %class.SkColorSpace*, %class.SkColorSpace** %120, align 8
  %122 = icmp eq %class.SkColorSpace* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = bitcast %class.SkColorSpace* %121 to i8*
  call void @_ZdlPv(i8* %128) #15
  br label %129

129:                                              ; preds = %127, %123, %118
  %130 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %131 = load %class.SkColorSpace*, %class.SkColorSpace** %130, align 8
  %132 = icmp eq %class.SkColorSpace* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = bitcast %class.SkColorSpace* %131 to i8*
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %129, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %38) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%class.SkBitmapDevice*, %class.SkBitmap* dereferenceable(56), %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %10 = alloca %struct.Bounder, align 4
  %11 = alloca %class.SkDrawTiler, align 8
  %12 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = icmp eq %struct.SkRect* %3, null
  %14 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -1, i64 16, i1 false)
  br i1 %13, label %15, label %71

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 8191
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 8191
  br i1 %22, label %23, label %71

23:                                               ; preds = %15, %19
  %24 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sitofp i32 %26 to float
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = sitofp i32 %28 to float
  %32 = insertelement <2 x float> %30, float %31, i32 1
  %33 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %33, align 8
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %32, <2 x float>* %34, align 8
  %35 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %9, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  %36 = bitcast %struct.Bounder* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %36) #14
  %37 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %10, i64 0, i32 1
  %38 = bitcast %struct.Bounder* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 -1, i64 16, i1 false)
  %39 = bitcast i8* %37 to i32*
  store i32 -1431655766, i32* %39, align 4
  %40 = call zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint* %5) #14
  %41 = zext i1 %40 to i8
  store i8 %41, i8* %37, align 4
  br i1 %40, label %42, label %69

42:                                               ; preds = %23
  %43 = getelementptr inbounds %struct.Bounder, %struct.Bounder* %10, i64 0, i32 0
  %44 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = lshr i32 %45, 6
  %47 = trunc i32 %46 to i8
  %48 = and i8 %47, 3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %42
  %51 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 2, i32 0
  %52 = bitcast %class.SkMaskFilter** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %class.SkPaint* %5 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = or i64 %55, %53
  %57 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 4, i32 0
  %58 = bitcast %class.SkImageFilter** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = or i64 %56, %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %12, i64 16, i1 false) #14
  br label %68

63:                                               ; preds = %42, %50
  %64 = call dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint* %5, %struct.SkRect* nonnull dereferenceable(16) %7, %struct.SkRect* nonnull %43, i8 zeroext %48) #14
  %65 = load i8, i8* %37, align 4
  %66 = bitcast %struct.SkRect* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %66, i64 16, i1 false) #14
  %67 = icmp eq i8 %65, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %62, %63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* nonnull align 4 %36, i64 16, i1 false)
  br label %69

69:                                               ; preds = %63, %23, %68
  %70 = phi %struct.SkRect* [ %7, %68 ], [ null, %63 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %36) #14
  br label %71

71:                                               ; preds = %6, %69, %19
  %72 = phi %struct.SkRect* [ %3, %6 ], [ %70, %69 ], [ null, %19 ]
  %73 = bitcast %class.SkDrawTiler* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %73) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 352, i1 false)
  call void @_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect(%class.SkDrawTiler* nonnull %11, %class.SkBitmapDevice* %0, %struct.SkRect* %72)
  %74 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 7
  %75 = load i8, i8* %74, align 8, !range !29
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %103

77:                                               ; preds = %71
  %78 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 8
  %79 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 5, i32 3
  %80 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 3
  %81 = icmp eq %class.SkDraw* %80, null
  %82 = bitcast %class.SkDraw* %80 to void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  br label %83

83:                                               ; preds = %77, %97
  %84 = load i8, i8* %78, align 1, !range !29
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %95, label %86

86:                                               ; preds = %83, %91
  call void @_ZN11SkDrawTiler20stepAndSetupTileDrawEv(%class.SkDrawTiler* nonnull %11) #14
  %87 = load i8, i8* %74, align 8, !range !29
  %88 = icmp eq i8 %87, 0
  %89 = load i8, i8* %79, align 1, !range !29
  %90 = icmp eq i8 %89, 0
  br i1 %88, label %91, label %92

91:                                               ; preds = %86
  br i1 %90, label %96, label %86

92:                                               ; preds = %86
  %93 = xor i1 %90, true
  %94 = or i1 %81, %93
  br i1 %94, label %103, label %97

95:                                               ; preds = %83
  store i8 1, i8* %74, align 8
  br label %96

96:                                               ; preds = %91, %95
  br i1 %81, label %103, label %97

97:                                               ; preds = %92, %96
  %98 = load void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %82, align 8
  %99 = getelementptr inbounds void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)** %98, i64 4
  %100 = load void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)** %99, align 8
  call void %100(%class.SkDraw* nonnull %80, %class.SkBitmap* dereferenceable(56) %1, %class.SkMatrix* dereferenceable(40) %2, %struct.SkRect* %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* dereferenceable(72) %5) #14
  %101 = load i8, i8* %74, align 8, !range !29
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %83, label %103

103:                                              ; preds = %92, %96, %97, %71
  %104 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 5
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %104) #14
  %105 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 4, i32 1
  %106 = load %class.SkPostTranslateMatrixProvider*, %class.SkPostTranslateMatrixProvider** %105, align 8
  %107 = icmp eq %class.SkPostTranslateMatrixProvider* %106, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %103
  %109 = bitcast %class.SkPostTranslateMatrixProvider* %106 to void (%class.SkPostTranslateMatrixProvider*)***
  %110 = load void (%class.SkPostTranslateMatrixProvider*)**, void (%class.SkPostTranslateMatrixProvider*)*** %109, align 8
  %111 = load void (%class.SkPostTranslateMatrixProvider*)*, void (%class.SkPostTranslateMatrixProvider*)** %110, align 8
  call void %111(%class.SkPostTranslateMatrixProvider* nonnull %106) #14
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %105, align 8
  br label %112

112:                                              ; preds = %108, %103
  %113 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %114 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %115 = load %class.SkColorSpace*, %class.SkColorSpace** %114, align 8
  %116 = icmp eq %class.SkColorSpace* %115, null
  br i1 %116, label %123, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw add i32* %118, i32 -1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = bitcast %class.SkColorSpace* %115 to i8*
  call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %121, %117, %112
  %124 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %11, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %125 = load %class.SkColorSpace*, %class.SkColorSpace** %124, align 8
  %126 = icmp eq %class.SkColorSpace* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 -1 acq_rel
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %133

131:                                              ; preds = %127
  %132 = bitcast %class.SkColorSpace* %125 to i8*
  call void @_ZdlPv(i8* %132) #15
  br label %133

133:                                              ; preds = %123, %127, %131
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %73) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  ret void
}

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkBitmapDevice*, %class.SkImage*, %struct.SkRect* readonly, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkBitmap, align 8
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca %struct.SkRect, align 4
  %12 = alloca %class.SkBitmap, align 8
  %13 = alloca %class.SkMatrix, align 16
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.SkIRect*
  %16 = alloca %class.sk_sp.8, align 8
  %17 = alloca %class.SkPaint, align 8
  %18 = alloca %class.sk_sp.8, align 8
  %19 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #14
  %20 = bitcast %class.SkImage* %1 to %class.SkImage_Base*
  %21 = call %class.GrDirectContext* @_ZNK12SkImage_Base13directContextEv(%class.SkImage_Base* %20) #14
  %22 = bitcast %class.SkImage* %1 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %23 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %23, i64 18
  %25 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %24, align 8
  %26 = call zeroext i1 %25(%class.SkImage_Base* %20, %class.GrDirectContext* %21, %class.SkBitmap* nonnull %8, i32 0) #14
  br i1 %26, label %27, label %300

27:                                               ; preds = %7
  %28 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #14
  %29 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 0
  %30 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 1
  %31 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 2
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 3
  %33 = bitcast %struct.SkRect* %10 to i8*
  %34 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  %36 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %38 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %39 = bitcast %struct.SkRect* %11 to i8*
  %40 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #14
  %41 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 0
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 1
  %43 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 2
  %44 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 3
  %45 = bitcast %class.SkBitmap* %12 to i8*
  %46 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %45) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %12) #14
  %47 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %48 to float
  %52 = sitofp i32 %50 to float
  store float 0.000000e+00, float* %29, align 4
  store float 0.000000e+00, float* %30, align 4
  store float %51, float* %31, align 4
  store float %52, float* %32, align 4
  %53 = icmp ne %struct.SkRect* %2, null
  %54 = bitcast %struct.SkRect* %2 to i8*
  %55 = select i1 %53, i8* %54, i8* %28
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* nonnull align 4 %55, i64 16, i1 false)
  %56 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #14
  %57 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 1
  %58 = bitcast %class.SkMatrix* %13 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %58, align 16, !alias.scope !30
  %59 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 4
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %60, align 16, !alias.scope !30
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %13, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %61, align 16, !alias.scope !30
  store i32 16, i32* %57, align 4, !alias.scope !30
  %62 = call zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %10, %struct.SkRect* dereferenceable(16) %3, i32 0) #14
  br i1 %53, label %63, label %238

63:                                               ; preds = %27
  %64 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %67 = load float, float* %66, align 4
  %68 = fcmp olt float %65, %67
  br i1 %68, label %69, label %91

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %73 = load float, float* %72, align 4
  %74 = fcmp uge float %71, %73
  br i1 %74, label %91, label %75

75:                                               ; preds = %69
  %76 = load float, float* %29, align 4
  %77 = load float, float* %31, align 4
  %78 = fcmp olt float %76, %77
  br i1 %78, label %79, label %91

79:                                               ; preds = %75
  %80 = load float, float* %30, align 4
  %81 = load float, float* %32, align 4
  %82 = fcmp uge float %80, %81
  %83 = fcmp ugt float %76, %65
  %84 = or i1 %83, %82
  br i1 %84, label %91, label %85

85:                                               ; preds = %79
  %86 = fcmp ole float %80, %71
  %87 = fcmp oge float %77, %67
  %88 = fcmp oge float %81, %73
  %89 = and i1 %87, %86
  %90 = and i1 %88, %89
  br i1 %90, label %107, label %91

91:                                               ; preds = %63, %69, %75, %79, %85
  %92 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %10, %struct.SkRect* nonnull dereferenceable(16) %9) #14
  br i1 %92, label %93, label %299

93:                                               ; preds = %91
  %94 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %13, %struct.SkRect* nonnull %11, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1) #14
  %95 = load float, float* %41, align 4
  %96 = fmul float %95, 0.000000e+00
  %97 = load float, float* %42, align 4
  %98 = fmul float %96, %97
  %99 = load float, float* %43, align 4
  %100 = fmul float %98, %99
  %101 = load float, float* %44, align 4
  %102 = fmul float %100, %101
  %103 = fcmp ord float %102, 0.000000e+00
  br i1 %103, label %104, label %299

104:                                              ; preds = %93
  %105 = load float, float* %29, align 4
  %106 = load float, float* %31, align 4
  br label %107

107:                                              ; preds = %104, %85
  %108 = phi float [ %106, %104 ], [ %77, %85 ]
  %109 = phi float [ %105, %104 ], [ %76, %85 ]
  %110 = phi %struct.SkRect* [ %11, %104 ], [ %3, %85 ]
  %111 = fcmp olt float %109, %108
  br i1 %111, label %112, label %135

112:                                              ; preds = %107
  %113 = load float, float* %30, align 4
  %114 = load float, float* %32, align 4
  %115 = fcmp uge float %113, %114
  br i1 %115, label %135, label %116

116:                                              ; preds = %112
  %117 = load float, float* %64, align 4
  %118 = load float, float* %66, align 4
  %119 = fcmp olt float %117, %118
  br i1 %119, label %120, label %135

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %122 = load float, float* %121, align 4
  %123 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %124 = load float, float* %123, align 4
  %125 = fcmp uge float %122, %124
  %126 = fcmp ugt float %117, %109
  %127 = or i1 %126, %125
  br i1 %127, label %135, label %128

128:                                              ; preds = %120
  %129 = fcmp ole float %122, %113
  %130 = fcmp oge float %118, %108
  %131 = fcmp oge float %124, %114
  %132 = and i1 %130, %129
  %133 = and i1 %131, %132
  %134 = xor i1 %133, true
  br label %135

135:                                              ; preds = %107, %112, %116, %120, %128
  %136 = phi i1 [ %134, %128 ], [ true, %120 ], [ true, %116 ], [ true, %112 ], [ true, %107 ]
  %137 = icmp eq i32 %6, 1
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %159

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  %141 = load i8, i8* %140, align 4, !range !29
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %256

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 1, i32 0
  %145 = load float, float* %144, align 4
  %146 = fcmp oeq float %145, 0.000000e+00
  br i1 %146, label %147, label %256

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 1, i32 1
  %149 = load float, float* %148, align 4
  %150 = fcmp oeq float %149, 0.000000e+00
  br i1 %150, label %151, label %256

151:                                              ; preds = %147
  %152 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %256

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %256

159:                                              ; preds = %135, %155
  %160 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #14
  %161 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %162 = load float, float* %35, align 4
  %163 = call float @llvm.floor.f32(float %162) #14
  %164 = fcmp olt float %163, 0x41DFFFFFE0000000
  %165 = select i1 %164, float %163, float 0x41DFFFFFE0000000
  %166 = fcmp ogt float %165, 0xC1DFFFFFE0000000
  %167 = select i1 %166, float %165, float 0xC1DFFFFFE0000000
  %168 = fptosi float %167 to i32
  %169 = load float, float* %36, align 4
  %170 = call float @llvm.floor.f32(float %169) #14
  %171 = fcmp olt float %170, 0x41DFFFFFE0000000
  %172 = select i1 %171, float %170, float 0x41DFFFFFE0000000
  %173 = fcmp ogt float %172, 0xC1DFFFFFE0000000
  %174 = select i1 %173, float %172, float 0xC1DFFFFFE0000000
  %175 = fptosi float %174 to i32
  %176 = load float, float* %37, align 4
  %177 = call float @llvm.ceil.f32(float %176) #14
  %178 = fcmp olt float %177, 0x41DFFFFFE0000000
  %179 = select i1 %178, float %177, float 0x41DFFFFFE0000000
  %180 = fcmp ogt float %179, 0xC1DFFFFFE0000000
  %181 = select i1 %180, float %179, float 0xC1DFFFFFE0000000
  %182 = fptosi float %181 to i32
  %183 = load float, float* %38, align 4
  %184 = call float @llvm.ceil.f32(float %183) #14
  %185 = fcmp olt float %184, 0x41DFFFFFE0000000
  %186 = select i1 %185, float %184, float 0x41DFFFFFE0000000
  %187 = fcmp ogt float %186, 0xC1DFFFFFE0000000
  %188 = select i1 %187, float %186, float 0xC1DFFFFFE0000000
  %189 = fptosi float %188 to i32
  %190 = zext i32 %175 to i64
  %191 = shl nuw i64 %190, 32
  %192 = zext i32 %168 to i64
  %193 = or i64 %191, %192
  %194 = zext i32 %189 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %182 to i64
  %197 = or i64 %195, %196
  %198 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %193, i64* %198, align 8
  store i64 %197, i64* %161, align 8
  %199 = call zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap* nonnull %8, %class.SkBitmap* nonnull %12, %struct.SkIRect* nonnull dereferenceable(16) %15) #14
  br i1 %199, label %201, label %200

200:                                              ; preds = %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #14
  br label %299

201:                                              ; preds = %159
  %202 = bitcast { i64, i64 }* %14 to i32*
  %203 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %15, i64 0, i32 1
  %204 = load i32, i32* %202, align 8
  %205 = icmp sgt i32 %204, 0
  %206 = load i32, i32* %203, align 4
  %207 = icmp sgt i32 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %209, label %215

209:                                              ; preds = %201
  %210 = select i1 %207, i32 %206, i32 0
  %211 = sitofp i32 %210 to float
  %212 = select i1 %205, i32 %204, i32 0
  %213 = sitofp i32 %212 to float
  %214 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %13, float %213, float %211) #14
  br label %215

215:                                              ; preds = %201, %209
  %216 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 0, i32 1, i32 2, i32 1, i32 0
  %217 = load i32, i32* %216, align 8
  %218 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 0, i32 1, i32 2, i32 1, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sitofp i32 %217 to float
  %221 = sitofp i32 %219 to float
  %222 = load float, float* %35, align 4
  %223 = fcmp une float %222, 0.000000e+00
  br i1 %223, label %236, label %224

224:                                              ; preds = %215
  %225 = getelementptr inbounds float, float* %35, i64 1
  %226 = load float, float* %225, align 4
  %227 = fcmp une float %226, 0.000000e+00
  br i1 %227, label %236, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds float, float* %35, i64 2
  %230 = load float, float* %229, align 4
  %231 = fcmp une float %230, %220
  br i1 %231, label %236, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds float, float* %35, i64 3
  %234 = load float, float* %233, align 4
  %235 = fcmp une float %234, %221
  br i1 %235, label %236, label %237

236:                                              ; preds = %232, %228, %224, %215
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #14
  br label %256

237:                                              ; preds = %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #14
  br label %238

238:                                              ; preds = %27, %237
  %239 = phi %struct.SkRect* [ %110, %237 ], [ %3, %27 ]
  %240 = phi %class.SkBitmap* [ %12, %237 ], [ %8, %27 ]
  %241 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 2, i32 0
  %242 = load %class.SkMaskFilter*, %class.SkMaskFilter** %241, align 8
  %243 = icmp eq %class.SkMaskFilter* %242, null
  br i1 %243, label %255, label %244

244:                                              ; preds = %238
  %245 = load i32, i32* %57, align 4
  %246 = trunc i32 %245 to i8
  %247 = icmp slt i8 %246, 0
  br i1 %247, label %248, label %251

248:                                              ; preds = %244
  %249 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %13) #14
  %250 = zext i8 %249 to i32
  store i32 %250, i32* %57, align 4
  br label %251

251:                                              ; preds = %244, %248
  %252 = phi i32 [ %250, %248 ], [ %245, %244 ]
  %253 = and i32 %252, 14
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %238, %251
  call void @_ZN14SkBitmapDevice10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%class.SkBitmapDevice* %0, %class.SkBitmap* nonnull dereferenceable(56) %240, %class.SkMatrix* nonnull dereferenceable(40) %13, %struct.SkRect* %239, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* dereferenceable(72) %5)
  br label %299

256:                                              ; preds = %139, %143, %147, %151, %155, %236, %251
  %257 = phi %struct.SkRect* [ %110, %155 ], [ %239, %251 ], [ %110, %236 ], [ %110, %151 ], [ %110, %147 ], [ %110, %143 ], [ %110, %139 ]
  %258 = phi %class.SkBitmap* [ %8, %155 ], [ %240, %251 ], [ %12, %236 ], [ %8, %151 ], [ %8, %147 ], [ %8, %143 ], [ %8, %139 ]
  %259 = bitcast %class.sk_sp.8* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #14
  %260 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %16, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %260, align 8
  call void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.8* nonnull sret %16, %class.SkPaint* dereferenceable(72) %5, %class.SkBitmap* nonnull dereferenceable(56) %258, i32 0, i32 0, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkMatrix* nonnull %13, i32 2) #14
  %261 = load %class.SkShader*, %class.SkShader** %260, align 8
  %262 = icmp eq %class.SkShader* %261, null
  br i1 %262, label %298, label %263

263:                                              ; preds = %256
  %264 = bitcast %class.SkPaint* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %264) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %264, i8* align 8 bitcast (%class.SkPaint* @__const._ZN14SkBitmapDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint.deviceAsShader to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %17, %class.SkPaint* dereferenceable(72) %5) #14
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %17, i8 zeroext 0) #14
  %265 = bitcast %class.sk_sp.8* %16 to i64*
  %266 = load i64, i64* %265, align 8
  store %class.SkShader* null, %class.SkShader** %260, align 8
  %267 = bitcast %class.sk_sp.8* %18 to i64*
  store i64 %266, i64* %267, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %17, %class.sk_sp.8* nonnull %18) #14
  %268 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %18, i64 0, i32 0
  %269 = load %class.SkShader*, %class.SkShader** %268, align 8
  %270 = icmp eq %class.SkShader* %269, null
  br i1 %270, label %281, label %271

271:                                              ; preds = %263
  %272 = getelementptr inbounds %class.SkShader, %class.SkShader* %269, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = atomicrmw add i32* %272, i32 -1 acq_rel
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %281

275:                                              ; preds = %271
  %276 = bitcast %class.SkShader* %269 to %class.SkRefCntBase*
  %277 = bitcast %class.SkShader* %269 to void (%class.SkRefCntBase*)***
  %278 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %277, align 8
  %279 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %278, i64 2
  %280 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %279, align 8
  call void %280(%class.SkRefCntBase* nonnull %276) #14
  br label %281

281:                                              ; preds = %275, %271, %263
  %282 = bitcast %class.SkBitmapDevice* %0 to void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)***
  %283 = load void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)*** %282, align 8
  %284 = getelementptr inbounds void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)** %283, i64 26
  %285 = load void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBitmapDevice*, %struct.SkRect*, %class.SkPaint*)** %284, align 8
  call void %285(%class.SkBitmapDevice* %0, %struct.SkRect* dereferenceable(16) %257, %class.SkPaint* nonnull dereferenceable(72) %17) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %264) #14
  %286 = load %class.SkShader*, %class.SkShader** %260, align 8
  %287 = icmp eq %class.SkShader* %286, null
  br i1 %287, label %298, label %288

288:                                              ; preds = %281
  %289 = getelementptr inbounds %class.SkShader, %class.SkShader* %286, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = atomicrmw add i32* %289, i32 -1 acq_rel
  %291 = icmp eq i32 %290, 1
  br i1 %291, label %292, label %298

292:                                              ; preds = %288
  %293 = bitcast %class.SkShader* %286 to %class.SkRefCntBase*
  %294 = bitcast %class.SkShader* %286 to void (%class.SkRefCntBase*)***
  %295 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %294, align 8
  %296 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %295, i64 2
  %297 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %296, align 8
  call void %297(%class.SkRefCntBase* nonnull %293) #14
  br label %298

298:                                              ; preds = %256, %281, %288, %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #14
  br label %299

299:                                              ; preds = %200, %93, %91, %298, %255
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #14
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %45) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #14
  br label %300

300:                                              ; preds = %7, %299
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #14
  ret void
}

declare %class.GrDirectContext* @_ZNK12SkImage_Base13directContextEv(%class.SkImage_Base*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap13extractSubsetEPS_RK7SkIRect(%class.SkBitmap*, %class.SkBitmap*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.8* sret, %class.SkPaint* dereferenceable(72), %class.SkBitmap* dereferenceable(56), i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*, i32) local_unnamed_addr #2

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkBitmapDevice*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkDrawTiler, align 8
  %5 = bitcast %class.SkDrawTiler* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 352, i1 false)
  call void @_ZN11SkDrawTilerC2EP14SkBitmapDevicePK6SkRect(%class.SkDrawTiler* nonnull %4, %class.SkBitmapDevice* %0, %struct.SkRect* null)
  %6 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 7
  %7 = load i8, i8* %6, align 8, !range !29
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 8
  %11 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 5, i32 3
  %12 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 3
  %13 = icmp eq %class.SkDraw* %12, null
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5
  br label %15

15:                                               ; preds = %9, %29
  %16 = load i8, i8* %10, align 1, !range !29
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %15, %23
  call void @_ZN11SkDrawTiler20stepAndSetupTileDrawEv(%class.SkDrawTiler* nonnull %4) #14
  %19 = load i8, i8* %6, align 8, !range !29
  %20 = icmp eq i8 %19, 0
  %21 = load i8, i8* %11, align 1, !range !29
  %22 = icmp eq i8 %21, 0
  br i1 %20, label %23, label %24

23:                                               ; preds = %18
  br i1 %22, label %28, label %18

24:                                               ; preds = %18
  %25 = xor i1 %22, true
  %26 = or i1 %13, %25
  br i1 %26, label %32, label %29

27:                                               ; preds = %15
  store i8 1, i8* %6, align 8
  br label %28

28:                                               ; preds = %23, %27
  br i1 %13, label %32, label %29

29:                                               ; preds = %24, %28
  call void @_ZNK6SkDraw16drawGlyphRunListERK14SkGlyphRunListRK7SkPaintP21SkGlyphRunListPainter(%class.SkDraw* nonnull %12, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkGlyphRunListPainter* %14) #14
  %30 = load i8, i8* %6, align 8, !range !29
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %15, label %32

32:                                               ; preds = %24, %28, %29, %3
  %33 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 5
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %33) #14
  %34 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 4, i32 1
  %35 = load %class.SkPostTranslateMatrixProvider*, %class.SkPostTranslateMatrixProvider** %34, align 8
  %36 = icmp eq %class.SkPostTranslateMatrixProvider* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = bitcast %class.SkPostTranslateMatrixProvider* %35 to void (%class.SkPostTranslateMatrixProvider*)***
  %39 = load void (%class.SkPostTranslateMatrixProvider*)**, void (%class.SkPostTranslateMatrixProvider*)*** %38, align 8
  %40 = load void (%class.SkPostTranslateMatrixProvider*)*, void (%class.SkPostTranslateMatrixProvider*)** %39, align 8
  call void %40(%class.SkPostTranslateMatrixProvider* nonnull %35) #14
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %34, align 8
  br label %41

41:                                               ; preds = %37, %32
  %42 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 3, i32 1, i32 2, i32 0, i32 0, i32 0
  %44 = load %class.SkColorSpace*, %class.SkColorSpace** %43, align 8
  %45 = icmp eq %class.SkColorSpace* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = bitcast %class.SkColorSpace* %44 to i8*
  call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %50, %46, %41
  %53 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %54 = load %class.SkColorSpace*, %class.SkColorSpace** %53, align 8
  %55 = icmp eq %class.SkColorSpace* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorSpace* %54 to i8*
  call void @_ZdlPv(i8* %61) #15
  br label %62

62:                                               ; preds = %52, %56, %60
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %5) #14
  ret void
}

declare void @_ZNK6SkDraw16drawGlyphRunListERK14SkGlyphRunListRK7SkPaintP21SkGlyphRunListPainter(%class.SkDraw*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72), %class.SkGlyphRunListPainter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkBitmapDevice*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkBitmapDevice::BDDraw", align 8
  %6 = bitcast %"class.SkBitmapDevice::BDDraw"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0
  call void @_ZN6SkDrawC2Ev(%class.SkDraw* nonnull %7) #14
  %8 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN14SkBitmapDevice6BDDrawE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0, i32 1
  %11 = call zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice* %9, %class.SkPixmap* %10) #14
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %10, %struct.SkImageInfo* dereferenceable(24) %13, i8* null, i64 0) #14
  br label %14

14:                                               ; preds = %4, %12
  %15 = icmp eq %class.SkBitmapDevice* %0, null
  %16 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1
  %17 = select i1 %15, %class.SkMatrixProvider* null, %class.SkMatrixProvider* %16
  %18 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0, i32 2
  store %class.SkMatrixProvider* %17, %class.SkMatrixProvider** %18, align 8
  %19 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %20 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %19, align 8
  %21 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0, i32 3
  store %class.SkRasterClip* %21, %class.SkRasterClip** %22, align 8
  %23 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %class.SkBitmap*, %class.SkBitmap** %23, align 8
  %25 = icmp eq %class.SkBitmap* %24, null
  %26 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %24, i64 0, i32 1
  %27 = select i1 %25, %class.SkPixmap* null, %class.SkPixmap* %26
  %28 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0, i32 4
  store %class.SkPixmap* %27, %class.SkPixmap** %28, align 8
  call void @_ZNK6SkDraw12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkDraw* nonnull %7, %class.SkVertices* %1, i32 %2, %class.SkPaint* dereferenceable(72) %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %29 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %5, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %30 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %31 = icmp eq %class.SkColorSpace* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = bitcast %class.SkColorSpace* %30 to i8*
  call void @_ZdlPv(i8* %37) #15
  br label %38

38:                                               ; preds = %14, %32, %36
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #14
  ret void
}

declare void @_ZNK6SkDraw12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkDraw*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkBitmapDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %10 = alloca %"class.SkBitmapDevice::BDDraw", align 8
  %11 = bitcast %"class.SkBitmapDevice::BDDraw"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0
  call void @_ZN6SkDrawC2Ev(%class.SkDraw* nonnull %12) #14
  %13 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN14SkBitmapDevice6BDDrawE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0, i32 1
  %16 = call zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice* %14, %class.SkPixmap* %15) #14
  br i1 %16, label %19, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3
  call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %15, %struct.SkImageInfo* dereferenceable(24) %18, i8* null, i64 0) #14
  br label %19

19:                                               ; preds = %9, %17
  %20 = icmp eq %class.SkBitmapDevice* %0, null
  %21 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1
  %22 = select i1 %20, %class.SkMatrixProvider* null, %class.SkMatrixProvider* %21
  %23 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0, i32 2
  store %class.SkMatrixProvider* %22, %class.SkMatrixProvider** %23, align 8
  %24 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %25 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %24, align 8
  %26 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0, i32 3
  store %class.SkRasterClip* %26, %class.SkRasterClip** %27, align 8
  %28 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %class.SkBitmap*, %class.SkBitmap** %28, align 8
  %30 = icmp eq %class.SkBitmap* %29, null
  %31 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 0, i32 1
  %32 = select i1 %30, %class.SkPixmap* null, %class.SkPixmap* %31
  %33 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0, i32 4
  store %class.SkPixmap* %32, %class.SkPixmap** %33, align 8
  call void @_ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw* nonnull %12, %class.SkImage* %1, %struct.SkRSXform* %2, %struct.SkRect* %3, i32* %4, i32 %5, i32 %6, %struct.SkSamplingOptions* dereferenceable(20) %7, %class.SkPaint* dereferenceable(72) %8) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %34 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %10, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %35 = load %class.SkColorSpace*, %class.SkColorSpace** %34, align 8
  %36 = icmp eq %class.SkColorSpace* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %19
  %38 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = bitcast %class.SkColorSpace* %35 to i8*
  call void @_ZdlPv(i8* %42) #15
  br label %43

43:                                               ; preds = %19, %37, %41
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #14
  ret void
}

declare void @_ZN6SkDraw9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint(%class.SkBitmapDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkDraw, align 8
  %6 = alloca %class.SkSimpleMatrixProvider, align 8
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %class.SkPaint, align 8
  %9 = alloca %struct.SkSamplingOptions, align 4
  %10 = alloca %class.sk_sp.8, align 8
  %11 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 5, i32 6, i32 0, i64 4
  %12 = bitcast float* %11 to %class.SkBitmap**
  %13 = load %class.SkBitmap*, %class.SkBitmap** %12, align 8
  %14 = icmp eq %class.SkBitmap* %13, null
  br i1 %14, label %140, label %15

15:                                               ; preds = %4
  %16 = bitcast %class.SkDraw* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 72, i1 false)
  call void @_ZN6SkDrawC1Ev(%class.SkDraw* nonnull %5) #14
  %17 = bitcast %class.SkSimpleMatrixProvider* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZN14SkBitmapDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.matrixProvider to i8*), i64 112, i1 false)
  %18 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #14
  %19 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  call void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* nonnull sret %7, %class.SkBaseDevice* %1, %class.SkBaseDevice* dereferenceable(296) %19) #14
  %20 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1
  %22 = bitcast %class.SkMatrix* %7 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 1
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 2
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 3
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 5
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 6
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 7
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %class.SkM44* %21 to i32*
  store i32 %23, i32* %48, align 8
  %49 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 1
  %50 = bitcast float* %49 to i32*
  store i32 %32, i32* %50, align 4
  %51 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %51, align 8
  %52 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 3
  %53 = bitcast float* %52 to i32*
  store i32 %41, i32* %53, align 4
  %54 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 4
  %55 = bitcast float* %54 to i32*
  store i32 %26, i32* %55, align 8
  %56 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 5
  %57 = bitcast float* %56 to i32*
  store i32 %35, i32* %57, align 4
  %58 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %58, align 8
  %59 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 7
  %60 = bitcast float* %59 to i32*
  store i32 %44, i32* %60, align 4
  %61 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 8
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %62, align 8
  %63 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 12
  %64 = bitcast float* %63 to i32*
  store i32 %29, i32* %64, align 8
  %65 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 13
  %66 = bitcast float* %65 to i32*
  store i32 %38, i32* %66, align 4
  %67 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %67, align 8
  %68 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 15
  %69 = bitcast float* %68 to i32*
  store i32 %47, i32* %69, align 4
  %70 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0, i32 2
  %71 = bitcast %class.SkMatrix* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 4 %18, i64 40, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #14
  %72 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1
  %73 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1
  %74 = bitcast %class.SkPixmap* %73 to i8*
  %75 = bitcast %class.SkPixmap* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #14
  %76 = icmp eq %class.SkPixmap* %73, %72
  br i1 %76, label %94, label %77

77:                                               ; preds = %15
  %78 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0
  %79 = load %class.SkColorSpace*, %class.SkColorSpace** %78, align 8
  %80 = icmp eq %class.SkColorSpace* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  br label %84

84:                                               ; preds = %81, %77
  %85 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %86 = load %class.SkColorSpace*, %class.SkColorSpace** %85, align 8
  store %class.SkColorSpace* %79, %class.SkColorSpace** %85, align 8
  %87 = icmp eq %class.SkColorSpace* %86, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = bitcast %class.SkColorSpace* %86 to i8*
  call void @_ZdlPv(i8* %93) #15
  br label %94

94:                                               ; preds = %15, %84, %88, %92
  %95 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1, i32 2, i32 0, i32 1
  %96 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %97 = bitcast i32* %96 to <2 x i64>*
  %98 = load <2 x i64>, <2 x i64>* %97, align 8
  %99 = bitcast i32* %95 to <2 x i64>*
  store <2 x i64> %98, <2 x i64>* %99, align 8
  %100 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %6, i64 0, i32 0
  %101 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 2
  store %class.SkMatrixProvider* %100, %class.SkMatrixProvider** %101, align 8
  %102 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %103 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %102, align 8
  %104 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %103, i64 0, i32 0
  %105 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 3
  store %class.SkRasterClip* %104, %class.SkRasterClip** %105, align 8
  %106 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %106) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* align 8 bitcast (%class.SkPaint* @__const._ZN14SkBitmapDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint.deviceAsShader to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %8, %class.SkPaint* dereferenceable(72) %3) #14
  %107 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %107) #14
  %108 = bitcast %struct.SkSamplingOptions* %9 to i32*
  store i32 -1431655766, i32* %108, align 4
  store i8 0, i8* %107, align 4
  %109 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %9, i64 0, i32 1, i32 0
  %110 = bitcast float* %109 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %110, i8 0, i64 16, i1 false) #14
  %111 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 1
  %112 = bitcast %class.SkBaseDevice* %111 to %class.SkBitmap*
  call void @_ZNK8SkBitmap10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.8* nonnull sret %10, %class.SkBitmap* %112, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %9, %class.SkMatrix* null) #14
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %8, %class.sk_sp.8* nonnull %10) #14
  %113 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %10, i64 0, i32 0
  %114 = load %class.SkShader*, %class.SkShader** %113, align 8
  %115 = icmp eq %class.SkShader* %114, null
  br i1 %115, label %126, label %116

116:                                              ; preds = %94
  %117 = getelementptr inbounds %class.SkShader, %class.SkShader* %114, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %126

120:                                              ; preds = %116
  %121 = bitcast %class.SkShader* %114 to %class.SkRefCntBase*
  %122 = bitcast %class.SkShader* %114 to void (%class.SkRefCntBase*)***
  %123 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, i64 2
  %125 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %124, align 8
  call void %125(%class.SkRefCntBase* nonnull %121) #14
  br label %126

126:                                              ; preds = %94, %116, %120
  %127 = load %class.SkBitmap*, %class.SkBitmap** %12, align 8
  %128 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw* nonnull %5, %class.SkBitmap* dereferenceable(56) %127, %class.SkMatrix* dereferenceable(40) %128, %struct.SkRect* null, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* nonnull dereferenceable(72) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %107) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %106) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #14
  %129 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %131 = load %class.SkColorSpace*, %class.SkColorSpace** %130, align 8
  %132 = icmp eq %class.SkColorSpace* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = bitcast %class.SkColorSpace* %131 to i8*
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %126, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %16) #14
  br label %142

140:                                              ; preds = %4
  %141 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  tail call void @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice* %141, %class.SkBaseDevice* %1, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* dereferenceable(72) %3) #14
  br label %142

142:                                              ; preds = %140, %139
  ret void
}

declare void @_ZN6SkDrawC1Ev(%class.SkDraw*) unnamed_addr #2

declare void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* sret, %class.SkBaseDevice*, %class.SkBaseDevice* dereferenceable(296)) local_unnamed_addr #2

declare void @_ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw*, %class.SkBitmap* dereferenceable(56), %class.SkMatrix* dereferenceable(40), %struct.SkRect*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkBitmapDevice* readonly, %class.SkSpecialImage*, %class.SkMatrix* nocapture readonly dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %class.SkBitmap, align 8
  %7 = alloca %class.SkDraw, align 8
  %8 = alloca %class.SkSimpleMatrixProvider, align 8
  %9 = bitcast %class.SkBitmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %6) #14
  %10 = call zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage* %1, %class.SkBitmap* nonnull %6) #14
  br i1 %10, label %11, label %113

11:                                               ; preds = %5
  %12 = bitcast %class.SkDraw* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 72, i1 false)
  call void @_ZN6SkDrawC1Ev(%class.SkDraw* nonnull %7) #14
  %13 = bitcast %class.SkSimpleMatrixProvider* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZN14SkBitmapDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint.matrixProvider to i8*), i64 112, i1 false)
  %14 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1
  %16 = bitcast %class.SkMatrix* %2 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 2
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %28 = bitcast float* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 5
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 6
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 7
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 8
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = bitcast %class.SkM44* %15 to i32*
  store i32 %17, i32* %42, align 8
  %43 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 1
  %44 = bitcast float* %43 to i32*
  store i32 %26, i32* %44, align 4
  %45 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %45, align 8
  %46 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 3
  %47 = bitcast float* %46 to i32*
  store i32 %35, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 4
  %49 = bitcast float* %48 to i32*
  store i32 %20, i32* %49, align 8
  %50 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 5
  %51 = bitcast float* %50 to i32*
  store i32 %29, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %52, align 8
  %53 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 7
  %54 = bitcast float* %53 to i32*
  store i32 %38, i32* %54, align 4
  %55 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 8
  %56 = bitcast float* %55 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %56, align 8
  %57 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 12
  %58 = bitcast float* %57 to i32*
  store i32 %23, i32* %58, align 8
  %59 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 13
  %60 = bitcast float* %59 to i32*
  store i32 %32, i32* %60, align 4
  %61 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %61, align 8
  %62 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 1, i32 0, i64 15
  %63 = bitcast float* %62 to i32*
  store i32 %41, i32* %63, align 4
  %64 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0, i32 2
  %65 = bitcast %class.SkMatrix* %64 to i8*
  %66 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 4 %66, i64 40, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %67 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1
  %68 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 1
  %69 = bitcast %class.SkPixmap* %68 to i8*
  %70 = bitcast %class.SkPixmap* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #14
  %71 = icmp eq %class.SkPixmap* %68, %67
  br i1 %71, label %89, label %72

72:                                               ; preds = %11
  %73 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0
  %74 = load %class.SkColorSpace*, %class.SkColorSpace** %73, align 8
  %75 = icmp eq %class.SkColorSpace* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 1 monotonic
  br label %79

79:                                               ; preds = %76, %72
  %80 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %81 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 8
  store %class.SkColorSpace* %74, %class.SkColorSpace** %80, align 8
  %82 = icmp eq %class.SkColorSpace* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = bitcast %class.SkColorSpace* %81 to i8*
  call void @_ZdlPv(i8* %88) #15
  br label %89

89:                                               ; preds = %11, %79, %83, %87
  %90 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 1, i32 2, i32 0, i32 1
  %91 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %92 = bitcast i32* %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8
  %94 = bitcast i32* %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %94, align 8
  %95 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %8, i64 0, i32 0
  %96 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 2
  store %class.SkMatrixProvider* %95, %class.SkMatrixProvider** %96, align 8
  %97 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %98 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %97, align 8
  %99 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %98, i64 0, i32 0
  %100 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 3
  store %class.SkRasterClip* %99, %class.SkRasterClip** %100, align 8
  %101 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  call void @_ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw* nonnull %7, %class.SkBitmap* nonnull dereferenceable(56) %6, %class.SkMatrix* dereferenceable(40) %101, %struct.SkRect* null, %struct.SkSamplingOptions* dereferenceable(20) %3, %class.SkPaint* dereferenceable(72) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #14
  %102 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %7, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %89
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = bitcast %class.SkColorSpace* %104 to i8*
  call void @_ZdlPv(i8* %111) #15
  br label %112

112:                                              ; preds = %89, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #14
  br label %113

113:                                              ; preds = %112, %5
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #14
  ret void
}

declare zeroext i1 @_ZNK14SkSpecialImage11getROPixelsEP8SkBitmap(%class.SkSpecialImage*, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice11makeSpecialERK8SkBitmap(%class.sk_sp.198* noalias sret, %class.SkBitmapDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  %13 = zext i32 %8 to i64
  %14 = or i64 %12, %13
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0, i32 4
  call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.198* sret %0, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.SkBitmap* dereferenceable(56) %2, %class.SkSurfaceProps* dereferenceable(8) %17) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

declare void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.198* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice11makeSpecialEPK7SkImage(%class.sk_sp.198* noalias sret, %class.SkBitmapDevice*, %class.SkImage*) unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca %class.sk_sp.199, align 8
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkImage, %class.SkImage* %2, i64 0, i32 2, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i32 %9 to i64
  %15 = or i64 %13, %14
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %15, i64* %17, align 8
  call void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp.199* nonnull sret %6, %class.SkImage* %2) #14
  %18 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0, i32 4
  call void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.198* sret %0, %class.GrRecordingContext* null, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.sk_sp.199* nonnull %6, %class.SkSurfaceProps* dereferenceable(8) %18) #14
  %19 = getelementptr inbounds %class.sk_sp.199, %class.sk_sp.199* %6, i64 0, i32 0
  %20 = load %class.SkImage*, %class.SkImage** %19, align 8
  %21 = icmp eq %class.SkImage* %20, null
  br i1 %21, label %32, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkImage, %class.SkImage* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = bitcast %class.SkImage* %20 to %class.SkRefCntBase*
  %28 = bitcast %class.SkImage* %20 to void (%class.SkRefCntBase*)***
  %29 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %29, i64 2
  %31 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, align 8
  call void %31(%class.SkRefCntBase* nonnull %27) #14
  br label %32

32:                                               ; preds = %3, %22, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZN14SkSpecialImage13MakeFromImageEP18GrRecordingContextRK7SkIRect5sk_spI7SkImageERK14SkSurfaceProps(%class.sk_sp.198* sret, %class.GrRecordingContext*, %struct.SkIRect* dereferenceable(16), %class.sk_sp.199*, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK7SkImage19makeNonTextureImageEv(%class.sk_sp.199* sret, %class.SkImage*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice11snapSpecialERK7SkIRectb(%class.sk_sp.198* noalias sret, %class.SkBitmapDevice*, %struct.SkIRect* dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 1
  %6 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %1, i64 0, i32 0, i32 4
  br i1 %3, label %7, label %8

7:                                                ; preds = %4
  tail call void @_ZN14SkSpecialImage14CopyFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.198* sret %0, %struct.SkIRect* dereferenceable(16) %2, %class.SkBitmap* dereferenceable(56) %5, %class.SkSurfaceProps* dereferenceable(8) %6) #14
  br label %9

8:                                                ; preds = %4
  tail call void @_ZN14SkSpecialImage14MakeFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.198* sret %0, %struct.SkIRect* dereferenceable(16) %2, %class.SkBitmap* dereferenceable(56) %5, %class.SkSurfaceProps* dereferenceable(8) %6) #14
  br label %9

9:                                                ; preds = %8, %7
  ret void
}

declare void @_ZN14SkSpecialImage14CopyFromRasterERK7SkIRectRK8SkBitmapRK14SkSurfaceProps(%class.sk_sp.198* sret, %struct.SkIRect* dereferenceable(16), %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.200* noalias sret, %class.SkBitmapDevice* nocapture readnone, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 align 2 {
  tail call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.200* sret %0, %struct.SkImageInfo* dereferenceable(24) %2, i64 0, %class.SkSurfaceProps* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkImageFilterCache* @_ZN14SkBitmapDevice19getImageFilterCacheEv(%class.SkBitmapDevice* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call %class.SkImageFilterCache* @_ZN18SkImageFilterCache3GetEv() #14
  %3 = getelementptr inbounds %class.SkImageFilterCache, %class.SkImageFilterCache* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i32* %3, i32 1 monotonic
  ret %class.SkImageFilterCache* %2
}

declare %class.SkImageFilterCache* @_ZN18SkImageFilterCache3GetEv() local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice6onSaveEv(%class.SkBitmapDevice* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %6 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice9onRestoreEv(%class.SkBitmapDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 8
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %6 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %7, align 8
  %10 = icmp slt i32 %8, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %1
  %12 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %5, align 8
  %13 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %12, i64 0, i32 0
  tail call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %13) #14
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  tail call void @_ZN7SkDeque8pop_backEv(%class.SkDeque* %14) #14
  %15 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0, i32 6
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  %20 = bitcast i8** %19 to %"struct.SkRasterClipStack::Rec"**
  %21 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  br label %22

22:                                               ; preds = %18, %11
  %23 = phi %"struct.SkRasterClipStack::Rec"* [ %21, %18 ], [ null, %11 ]
  store %"struct.SkRasterClipStack::Rec"* %23, %"struct.SkRasterClipStack::Rec"** %5, align 8
  br label %24

24:                                               ; preds = %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkBitmapDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1, i32 2
  %6 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %7 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %4
  %12 = add nsw i32 %9, -1
  store i32 %12, i32* %8, align 8
  %13 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %15 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %14) #14
  %16 = bitcast %"struct.SkRasterClipStack::Rec"** %6 to i8**
  store i8* %15, i8** %16, align 8
  %17 = bitcast i8* %15 to %class.SkRasterClip*
  %18 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %13, i64 0, i32 0
  tail call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %17, %class.SkRasterClip* dereferenceable(72) %18) #14
  %19 = getelementptr inbounds i8, i8* %15, i64 72
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %24 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %23, i64 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  br label %26

26:                                               ; preds = %11, %4
  %27 = phi %"struct.SkRasterClipStack::Rec"* [ %25, %11 ], [ %7, %4 ]
  %28 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3
  %30 = tail call zeroext i1 @_ZN12SkRasterClip2opERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip* %28, %struct.SkRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* dereferenceable(16) %29, i32 %2, i1 zeroext %3) #14
  %31 = icmp sgt i32 %2, 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %34 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %33, i64 0, i32 0
  %35 = tail call zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip* %34, %struct.SkIRect* dereferenceable(16) %29, i32 1) #14
  br label %36

36:                                               ; preds = %26, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkBitmapDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1, i32 2
  %6 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %7 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %4
  %12 = add nsw i32 %9, -1
  store i32 %12, i32* %8, align 8
  %13 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %15 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %14) #14
  %16 = bitcast %"struct.SkRasterClipStack::Rec"** %6 to i8**
  store i8* %15, i8** %16, align 8
  %17 = bitcast i8* %15 to %class.SkRasterClip*
  %18 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %13, i64 0, i32 0
  tail call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %17, %class.SkRasterClip* dereferenceable(72) %18) #14
  %19 = getelementptr inbounds i8, i8* %15, i64 72
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %24 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %23, i64 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  br label %26

26:                                               ; preds = %11, %4
  %27 = phi %"struct.SkRasterClipStack::Rec"* [ %25, %11 ], [ %7, %4 ]
  %28 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3
  %30 = tail call zeroext i1 @_ZN12SkRasterClip2opERK7SkRRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip* %28, %class.SkRRect* dereferenceable(52) %1, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* dereferenceable(16) %29, i32 %2, i1 zeroext %3) #14
  %31 = icmp sgt i32 %2, 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %34 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %33, i64 0, i32 0
  %35 = tail call zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip* %34, %struct.SkIRect* dereferenceable(16) %29, i32 1) #14
  br label %36

36:                                               ; preds = %26, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkBitmapDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1, i32 2
  %6 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %7 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %4
  %12 = add nsw i32 %9, -1
  store i32 %12, i32* %8, align 8
  %13 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %15 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %14) #14
  %16 = bitcast %"struct.SkRasterClipStack::Rec"** %6 to i8**
  store i8* %15, i8** %16, align 8
  %17 = bitcast i8* %15 to %class.SkRasterClip*
  %18 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %13, i64 0, i32 0
  tail call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %17, %class.SkRasterClip* dereferenceable(72) %18) #14
  %19 = getelementptr inbounds i8, i8* %15, i64 72
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %24 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %23, i64 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  br label %26

26:                                               ; preds = %11, %4
  %27 = phi %"struct.SkRasterClipStack::Rec"* [ %25, %11 ], [ %7, %4 ]
  %28 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %27, i64 0, i32 0
  %29 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3
  %30 = tail call zeroext i1 @_ZN12SkRasterClip2opERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip* %28, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %5, %struct.SkIRect* dereferenceable(16) %29, i32 %2, i1 zeroext %3) #14
  %31 = icmp sgt i32 %2, 1
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %6, align 8
  %34 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %33, i64 0, i32 0
  %35 = tail call zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip* %34, %struct.SkIRect* dereferenceable(16) %29, i32 1) #14
  br label %36

36:                                               ; preds = %26, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkBitmapDevice*, %class.sk_sp.8* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.8, align 8
  %4 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %5 = bitcast %class.sk_sp.8* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store %class.SkShader* null, %class.SkShader** %4, align 8
  %7 = bitcast %class.sk_sp.8* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %9 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %2
  %14 = add nsw i32 %11, -1
  store i32 %14, i32* %10, align 8
  %15 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  %16 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %17 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %16) #14
  %18 = bitcast %"struct.SkRasterClipStack::Rec"** %8 to i8**
  store i8* %17, i8** %18, align 8
  %19 = bitcast i8* %17 to %class.SkRasterClip*
  %20 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %15, i64 0, i32 0
  tail call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %19, %class.SkRasterClip* dereferenceable(72) %20) #14
  %21 = getelementptr inbounds i8, i8* %17, i64 72
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  %26 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %25, i64 0, i32 1
  store i32 0, i32* %26, align 8
  %27 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  br label %28

28:                                               ; preds = %13, %2
  %29 = phi %"struct.SkRasterClipStack::Rec"* [ %27, %13 ], [ %9, %2 ]
  %30 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %29, i64 0, i32 0
  %31 = bitcast %class.sk_sp.8* %3 to i64*
  store i64 %6, i64* %31, align 8
  %32 = call zeroext i1 @_ZN12SkRasterClip2opE5sk_spI8SkShaderE(%class.SkRasterClip* %30, %class.sk_sp.8* nonnull %3) #14
  %33 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %3, i64 0, i32 0
  %34 = load %class.SkShader*, %class.SkShader** %33, align 8
  %35 = icmp eq %class.SkShader* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %class.SkShader, %class.SkShader* %34, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %46

40:                                               ; preds = %36
  %41 = bitcast %class.SkShader* %34 to %class.SkRefCntBase*
  %42 = bitcast %class.SkShader* %34 to void (%class.SkRefCntBase*)***
  %43 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %43, i64 2
  %45 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, align 8
  call void %45(%class.SkRefCntBase* nonnull %41) #14
  br label %46

46:                                               ; preds = %40, %36, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkBitmapDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRegion, align 8
  %5 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0
  %6 = tail call i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* %5) #14
  %7 = lshr i64 %6, 32
  %8 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = bitcast %class.SkRegion* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %4) #14
  %10 = or i64 %7, %6
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %3
  %14 = trunc i64 %6 to i32
  %15 = trunc i64 %7 to i32
  %16 = sub nsw i32 0, %14
  %17 = sub nsw i32 0, %15
  call void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion* %1, i32 %16, i32 %17, %class.SkRegion* nonnull %4) #14
  br label %18

18:                                               ; preds = %3, %13
  %19 = phi %class.SkRegion* [ %4, %13 ], [ %1, %3 ]
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %21 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %22 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %40

25:                                               ; preds = %18
  %26 = add nsw i32 %23, -1
  store i32 %26, i32* %22, align 8
  %27 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %28 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %29 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %28) #14
  %30 = bitcast %"struct.SkRasterClipStack::Rec"** %20 to i8**
  store i8* %29, i8** %30, align 8
  %31 = bitcast i8* %29 to %class.SkRasterClip*
  %32 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %27, i64 0, i32 0
  call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %31, %class.SkRasterClip* dereferenceable(72) %32) #14
  %33 = getelementptr inbounds i8, i8* %29, i64 72
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %27, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %38 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %37, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  br label %40

40:                                               ; preds = %25, %18
  %41 = phi %"struct.SkRasterClipStack::Rec"* [ %39, %25 ], [ %21, %18 ]
  %42 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %41, i64 0, i32 0
  %43 = call zeroext i1 @_ZN12SkRasterClip2opERK8SkRegionNS0_2OpE(%class.SkRasterClip* %42, %class.SkRegion* dereferenceable(24) %19, i32 %2) #14
  %44 = icmp sgt i32 %2, 1
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %20, align 8
  %47 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 3
  %49 = call zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip* %47, %struct.SkIRect* dereferenceable(16) %48, i32 1) #14
  br label %50

50:                                               ; preds = %40, %45
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void
}

declare i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice*) local_unnamed_addr #2

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #2

declare void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion*, i32, i32, %class.SkRegion*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice13onReplaceClipERK7SkIRect(%class.SkBitmapDevice*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.SkIRect*
  %7 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 6
  %8 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = insertelement <2 x float> undef, float %11, i32 0
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = insertelement <2 x float> %12, float %15, i32 1
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = insertelement <2 x float> undef, float %19, i32 0
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = sitofp i32 %22 to float
  %24 = insertelement <2 x float> %20, float %23, i32 1
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %16, <2 x float>* %25, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %24, <2 x float>* %26, align 8
  %27 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %7, %struct.SkRect* nonnull dereferenceable(16) %4) #14
  %28 = extractvalue { <2 x float>, <2 x float> } %27, 0
  %29 = extractvalue { <2 x float>, <2 x float> } %27, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  %30 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3
  %31 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #14
  %32 = extractelement <2 x float> %28, i32 0
  %33 = fadd float %32, 5.000000e-01
  %34 = call float @llvm.floor.f32(float %33) #14
  %35 = fcmp olt float %34, 0x41DFFFFFE0000000
  %36 = select i1 %35, float %34, float 0x41DFFFFFE0000000
  %37 = fcmp ogt float %36, 0xC1DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0xC1DFFFFFE0000000
  %39 = fptosi float %38 to i32
  %40 = extractelement <2 x float> %28, i32 1
  %41 = fadd float %40, 5.000000e-01
  %42 = call float @llvm.floor.f32(float %41) #14
  %43 = fcmp olt float %42, 0x41DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0x41DFFFFFE0000000
  %45 = fcmp ogt float %44, 0xC1DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0xC1DFFFFFE0000000
  %47 = fptosi float %46 to i32
  %48 = extractelement <2 x float> %29, i32 0
  %49 = fadd float %48, 5.000000e-01
  %50 = call float @llvm.floor.f32(float %49) #14
  %51 = fcmp olt float %50, 0x41DFFFFFE0000000
  %52 = select i1 %51, float %50, float 0x41DFFFFFE0000000
  %53 = fcmp ogt float %52, 0xC1DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0xC1DFFFFFE0000000
  %55 = fptosi float %54 to i32
  %56 = extractelement <2 x float> %29, i32 1
  %57 = fadd float %56, 5.000000e-01
  %58 = call float @llvm.floor.f32(float %57) #14
  %59 = fcmp olt float %58, 0x41DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0x41DFFFFFE0000000
  %61 = fcmp ogt float %60, 0xC1DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0xC1DFFFFFE0000000
  %63 = fptosi float %62 to i32
  %64 = zext i32 %47 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %39 to i64
  %67 = or i64 %65, %66
  %68 = zext i32 %63 to i64
  %69 = shl nuw i64 %68, 32
  %70 = zext i32 %55 to i64
  %71 = or i64 %69, %70
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %67, i64* %72, align 8
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %71, i64* %73, align 8
  call void @_ZN17SkRasterClipStack11replaceClipERK7SkIRect(%class.SkRasterClipStack* %30, %struct.SkIRect* nonnull dereferenceable(16) %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #14
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkRasterClipStack11replaceClipERK7SkIRect(%class.SkRasterClipStack*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %struct.SkIRect, align 4
  %4 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #14
  %5 = bitcast %struct.SkIRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %5, i64 16, i1 false)
  %6 = getelementptr inbounds %class.SkRasterClipStack, %class.SkRasterClipStack* %0, i64 0, i32 3
  %7 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %3, %struct.SkIRect* nonnull dereferenceable(16) %3, %struct.SkIRect* dereferenceable(16) %6) #14
  %8 = getelementptr inbounds %class.SkRasterClipStack, %class.SkRasterClipStack* %0, i64 0, i32 2, i32 1
  %9 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %2
  %14 = add nsw i32 %11, -1
  store i32 %14, i32* %10, align 8
  %15 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  %16 = getelementptr inbounds %class.SkRasterClipStack, %class.SkRasterClipStack* %0, i64 0, i32 2, i32 0
  %17 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %16) #14
  %18 = bitcast %"struct.SkRasterClipStack::Rec"** %8 to i8**
  store i8* %17, i8** %18, align 8
  %19 = bitcast i8* %17 to %class.SkRasterClip*
  %20 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %15, i64 0, i32 0
  call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %19, %class.SkRasterClip* dereferenceable(72) %20) #14
  %21 = getelementptr inbounds i8, i8* %17, i64 72
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %15, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %22, align 8
  %25 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  %26 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %25, i64 0, i32 1
  store i32 0, i32* %26, align 8
  %27 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %8, align 8
  br label %28

28:                                               ; preds = %2, %13
  %29 = phi %"struct.SkRasterClipStack::Rec"* [ %27, %13 ], [ %9, %2 ]
  %30 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %29, i64 0, i32 0
  br i1 %7, label %33, label %31

31:                                               ; preds = %28
  %32 = call zeroext i1 @_ZN12SkRasterClip8setEmptyEv(%class.SkRasterClip* %30) #14
  br label %35

33:                                               ; preds = %28
  %34 = call zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip* %30, %struct.SkIRect* nonnull dereferenceable(16) %3) #14
  br label %35

35:                                               ; preds = %33, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkBitmapDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkBitmapDevice*, %struct.SkIRect*) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkRegion, align 8
  %4 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %5 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %2
  %10 = add nsw i32 %7, -1
  store i32 %10, i32* %6, align 8
  %11 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  %12 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %13 = tail call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %12) #14
  %14 = bitcast %"struct.SkRasterClipStack::Rec"** %4 to i8**
  store i8* %13, i8** %14, align 8
  %15 = bitcast i8* %13 to %class.SkRasterClip*
  %16 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %11, i64 0, i32 0
  tail call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %15, %class.SkRasterClip* dereferenceable(72) %16) #14
  %17 = getelementptr inbounds i8, i8* %13, i64 72
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %11, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  %22 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %21, i64 0, i32 1
  store i32 0, i32* %22, align 8
  %23 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  br label %24

24:                                               ; preds = %2, %9
  %25 = phi %"struct.SkRasterClipStack::Rec"* [ %23, %9 ], [ %5, %2 ]
  %26 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %25, i64 0, i32 0, i32 5
  store %struct.SkIRect* %1, %struct.SkIRect** %26, align 8
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = sub nsw i64 %29, %32
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = sub nsw i64 %36, %39
  %41 = icmp slt i64 %33, 1
  %42 = icmp slt i64 %40, 1
  %43 = or i1 %41, %42
  br i1 %43, label %74, label %44

44:                                               ; preds = %24
  %45 = or i64 %40, %33
  %46 = add nsw i64 %45, 2147483648
  %47 = icmp ugt i64 %46, 4294967295
  br i1 %47, label %74, label %48

48:                                               ; preds = %44
  %49 = bitcast %class.SkRegion* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %50 = bitcast %class.SkRegion* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion* nonnull %3, %struct.SkIRect* dereferenceable(16) %1) #14
  %51 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  %52 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %51, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %70

55:                                               ; preds = %48
  %56 = add nsw i32 %53, -1
  store i32 %56, i32* %52, align 8
  %57 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  %58 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %59 = call i8* @_ZN7SkDeque9push_backEv(%class.SkDeque* %58) #14
  %60 = bitcast %"struct.SkRasterClipStack::Rec"** %4 to i8**
  store i8* %59, i8** %60, align 8
  %61 = bitcast i8* %59 to %class.SkRasterClip*
  %62 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %57, i64 0, i32 0
  call void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip* %61, %class.SkRasterClip* dereferenceable(72) %62) #14
  %63 = getelementptr inbounds i8, i8* %59, i64 72
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %57, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %64, align 8
  %67 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  %68 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %67, i64 0, i32 1
  store i32 0, i32* %68, align 8
  %69 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %4, align 8
  br label %70

70:                                               ; preds = %48, %55
  %71 = phi %"struct.SkRasterClipStack::Rec"* [ %69, %55 ], [ %51, %48 ]
  %72 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %71, i64 0, i32 0
  %73 = call zeroext i1 @_ZN12SkRasterClip2opERK8SkRegionNS0_2OpE(%class.SkRasterClip* %72, %class.SkRegion* nonnull dereferenceable(24) %3, i32 1) #14
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  br label %74

74:                                               ; preds = %24, %70, %44
  ret void
}

declare void @_ZN8SkRegionC1ERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14SkBitmapDevice16onClipIsWideOpenEv(%class.SkBitmapDevice* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = alloca %struct.SkIRect, align 4
  %3 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %4 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %4, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !29
  %7 = icmp eq i8 %6, 0
  %8 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  br i1 %7, label %25, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %4, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %10, align 8
  %12 = icmp eq %"struct.SkRegion::RunHead"* %11, null
  br i1 %12, label %13, label %25

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %17 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  %22 = bitcast %"struct.SkRasterClipStack::Rec"* %4 to i8*
  %23 = call i32 @bcmp(i8* %22, i8* nonnull %8, i64 16) #14
  %24 = icmp eq i32 %23, 0
  br label %25

25:                                               ; preds = %1, %13, %9
  %26 = phi i1 [ false, %9 ], [ false, %1 ], [ %24, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  ret i1 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK14SkBitmapDevice10onClipIsAAEv(%class.SkBitmapDevice* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %3 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %3, i64 0, i32 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !29
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %3, i64 0, i32 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !29
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14SkBitmapDevice11onAsRgnClipEP8SkRegion(%class.SkBitmapDevice* nocapture readonly, %class.SkRegion*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %4 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %3, align 8
  %5 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %4, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !29
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %4, i64 0, i32 0
  %10 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %9) #14
  %11 = tail call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %1, %struct.SkIRect* dereferenceable(16) %10) #14
  br label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %4, i64 0, i32 0, i32 0
  %14 = tail call dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion* %1, %class.SkRegion* dereferenceable(24) %13) #14
  br label %15

15:                                               ; preds = %12, %8
  ret void
}

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip*) local_unnamed_addr #2

declare dereferenceable(24) %class.SkRegion* @_ZN8SkRegionaSERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN14SkBitmapDevice17validateDevBoundsERK7SkIRect(%class.SkBitmapDevice* nocapture, %struct.SkIRect* nocapture dereferenceable(16)) unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK14SkBitmapDevice13onGetClipTypeEv(%class.SkBitmapDevice* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %3 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %3, i64 0, i32 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !29
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %3, i64 0, i32 0, i32 4
  %9 = load i8, i8* %8, align 2, !range !29
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 2, i32 1
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ 0, %1 ], [ %11, %7 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK14SkBitmapDevice15onDevClipBoundsEv(%class.SkBitmapDevice* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 1
  %3 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %4) #14
  %6 = bitcast %struct.SkIRect* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %9 = bitcast i32* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = insertvalue { i64, i64 } undef, i64 %7, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkBitmapDeviceD2Ev(%class.SkBitmapDevice*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV14SkBitmapDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV14SkBitmapDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5, i32 6, i32 6, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5, i32 6, i32 6, i32 0, i32 0, i64 32
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #14
  br label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5, i32 6, i32 5, i32 0, i32 0, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5, i32 6, i32 5, i32 0, i32 0, i64 8
  %21 = bitcast i8* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_Z7sk_freePv(i8* %22) #14
  br label %23

23:                                               ; preds = %19, %13
  %24 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5, i32 5, i32 4
  %25 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %class.SkAutoTMalloc* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = inttoptr i64 %27 to i8*
  tail call void @_Z7sk_freePv(i8* %30) #14
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 5, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %32, align 8
  store %class.SkGlyphVariant* null, %class.SkGlyphVariant** %32, align 8
  %34 = icmp eq %class.SkGlyphVariant* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = bitcast %class.SkGlyphVariant* %33 to i8*
  tail call void @_ZdaPv(i8* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %class.SkBitmap*, %class.SkBitmap** %38, align 8
  store %class.SkBitmap* null, %class.SkBitmap** %38, align 8
  %40 = icmp eq %class.SkBitmap* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %39) #14
  %42 = bitcast %class.SkBitmap* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0
  %45 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0, i32 6
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  %50 = bitcast i8** %49 to %"struct.SkRasterClipStack::Rec"**
  br label %51

51:                                               ; preds = %51, %48
  %52 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %50, align 8
  %53 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %52, i64 0, i32 0
  tail call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* %53) #14
  tail call void @_ZN7SkDeque8pop_backEv(%class.SkDeque* %44) #14
  %54 = load i32, i32* %45, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %51

56:                                               ; preds = %51, %43
  tail call void @_ZN7SkDequeD1Ev(%class.SkDeque* %44) #14
  %57 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %57) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %58 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %class.SkColorSpace*, %class.SkColorSpace** %58, align 8
  %60 = icmp eq %class.SkColorSpace* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = bitcast %class.SkColorSpace* %59 to i8*
  tail call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %56, %61, %65
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkBitmapDeviceD0Ev(%class.SkBitmapDevice*) unnamed_addr #5 comdat align 2 {
  tail call void @_ZN14SkBitmapDeviceD2Ev(%class.SkBitmapDevice* %0) #14
  %2 = bitcast %class.SkBitmapDevice* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK14SkBitmapDevice15getRasterHandleEv(%class.SkBitmapDevice*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

declare zeroext i1 @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice29android_utils_clipWithStencilEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK12SkBaseDevice16recordingContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrSurfaceDrawContext* @_ZN12SkBaseDevice18surfaceDrawContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrSurfaceDrawContext* null
}

declare void @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #2

declare void @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #2

declare void @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas(%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*) unnamed_addr #2

declare void @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %"class.skif::Mapping"* dereferenceable(80), %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkBitmapDevice12setImmutableEv(%class.SkBitmapDevice*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice16isNoPixelsDeviceEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice27forceConservativeRasterClipEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N14SkBitmapDeviceD1Ev(%class.SkBitmapDevice*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 -1, i32 5, i32 6, i32 6, i32 1
  %3 = bitcast %class.SkTArray.38* %2 to %class.SkBitmapDevice*
  tail call void @_ZN14SkBitmapDeviceD2Ev(%class.SkBitmapDevice* %3) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N14SkBitmapDeviceD0Ev(%class.SkBitmapDevice*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %0, i64 -1, i32 5, i32 6, i32 6, i32 1
  %3 = bitcast %class.SkTArray.38* %2 to %class.SkBitmapDevice*
  tail call void @_ZN14SkBitmapDeviceD2Ev(%class.SkBitmapDevice* %3) #14
  %4 = bitcast %class.SkTArray.38* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN7SkDequeC1EmPvmi(%class.SkDeque*, i64, i8*, i64, i32) unnamed_addr #2

declare i8* @_ZN7SkDeque9push_backEv(%class.SkDeque*) local_unnamed_addr #2

declare void @_ZN12SkRasterClipC1Ev(%class.SkRasterClip*) unnamed_addr #2

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN6SkDrawC2Ev(%class.SkDraw*) unnamed_addr #2

declare zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkBitmapDevice6BDDrawD0Ev(%"class.SkBitmapDevice::BDDraw"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkBitmapDevice::BDDraw", %"class.SkBitmapDevice::BDDraw"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #15
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.SkBitmapDevice::BDDraw"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  ret void
}

declare void @_ZNK6SkDraw10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint(%class.SkDraw*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZNK6SkDraw10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint(%class.SkDraw*, %class.SkDrawableGlyphBuffer*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11SkDrawTiler20stepAndSetupTileDrawEv(%class.SkDrawTiler*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.SkM44, align 4
  %3 = alloca %class.SkM44, align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -8191
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %8, align 8
  %17 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, 8191
  store i32 %19, i32* %17, align 4
  br label %22

20:                                               ; preds = %1
  %21 = add nsw i32 %9, 8191
  store i32 %21, i32* %8, align 8
  br label %22

22:                                               ; preds = %20, %14
  %23 = phi i32 [ %21, %20 ], [ %16, %14 ]
  %24 = icmp slt i32 %23, %12
  %25 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 1
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %33, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 2, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -8191
  %31 = icmp sge i32 %26, %30
  %32 = zext i1 %31 to i8
  br label %33

33:                                               ; preds = %22, %27
  %34 = phi i8 [ %32, %27 ], [ 0, %22 ]
  %35 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 7
  store i8 %34, i8* %35, align 8
  %36 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #14
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %38 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 6, i32 1
  %39 = sext i32 %23 to i64
  %40 = icmp slt i64 %39, 2147475456
  %41 = select i1 %40, i64 %39, i64 2147475456
  %42 = add nsw i64 %41, 8191
  %43 = sext i32 %26 to i64
  %44 = icmp slt i64 %43, 2147475456
  %45 = select i1 %44, i64 %43, i64 2147475456
  %46 = zext i32 %26 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %23 to i64
  %49 = or i64 %47, %48
  %50 = shl nsw i64 %45, 32
  %51 = add i64 %50, 35180077121536
  %52 = and i64 %42, 4294967295
  %53 = or i64 %51, %52
  %54 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %49, i64* %54, align 8
  store i64 %53, i64* %37, align 8
  %55 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 1
  %56 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 1
  %57 = call zeroext i1 @_ZNK8SkPixmap13extractSubsetEPS_RK7SkIRect(%class.SkPixmap* %55, %class.SkPixmap* %56, %struct.SkIRect* nonnull dereferenceable(16) %5) #14
  br i1 %57, label %59, label %58

58:                                               ; preds = %33
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 164, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

59:                                               ; preds = %33
  %60 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4
  %61 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 0
  %62 = bitcast %class.SkDrawTiler* %0 to %class.SkBaseDevice**
  %63 = load %class.SkBaseDevice*, %class.SkBaseDevice** %62, align 8
  %64 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %63, i64 0, i32 1
  %65 = load i32, i32* %8, align 4
  %66 = sub nsw i32 0, %65
  %67 = sitofp i32 %66 to float
  %68 = load i32, i32* %38, align 4
  %69 = sub nsw i32 0, %68
  %70 = sitofp i32 %69 to float
  %71 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 1
  %72 = load %class.SkPostTranslateMatrixProvider*, %class.SkPostTranslateMatrixProvider** %71, align 8
  %73 = icmp eq %class.SkPostTranslateMatrixProvider* %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %59
  %75 = bitcast %class.SkPostTranslateMatrixProvider* %72 to void (%class.SkPostTranslateMatrixProvider*)***
  %76 = load void (%class.SkPostTranslateMatrixProvider*)**, void (%class.SkPostTranslateMatrixProvider*)*** %75, align 8
  %77 = load void (%class.SkPostTranslateMatrixProvider*)*, void (%class.SkPostTranslateMatrixProvider*)** %76, align 8
  call void %77(%class.SkPostTranslateMatrixProvider* nonnull %72) #14
  store %class.SkPostTranslateMatrixProvider* null, %class.SkPostTranslateMatrixProvider** %71, align 8
  br label %78

78:                                               ; preds = %59, %74
  %79 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %79) #14
  %80 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %80) #14
  %81 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 0
  store float 1.000000e+00, float* %81, align 4, !alias.scope !35
  %82 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 1
  %83 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 5
  %84 = bitcast float* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %84, i8 0, i64 16, i1 false) #14, !alias.scope !35
  store float 1.000000e+00, float* %83, align 4, !alias.scope !35
  %85 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 6
  %86 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 10
  %87 = bitcast float* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %87, i8 0, i64 16, i1 false) #14, !alias.scope !35
  store float 1.000000e+00, float* %86, align 4, !alias.scope !35
  %88 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 11
  store float 0.000000e+00, float* %88, align 4, !alias.scope !35
  %89 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 12
  store float %67, float* %89, align 4, !alias.scope !35
  %90 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 13
  store float %70, float* %90, align 4, !alias.scope !35
  %91 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %91, align 4, !alias.scope !35
  %92 = getelementptr inbounds %class.SkM44, %class.SkM44* %3, i64 0, i32 0, i64 15
  store float 1.000000e+00, float* %92, align 4, !alias.scope !35
  %93 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %63, i64 0, i32 1, i32 1
  %94 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %2, %class.SkM44* nonnull dereferenceable(64) %3, %class.SkM44* dereferenceable(64) %93) #14
  %95 = bitcast %class.SkTLazy* %60 to i32 (...)***
  %96 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 4 %79, i64 64, i1 false) #14
  %97 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 72
  %98 = bitcast %class.SkM44* %2 to i32*
  %99 = load i32, i32* %98, align 4, !noalias !38
  %100 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 4
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4, !noalias !38
  %103 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 12
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4, !noalias !38
  %106 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 1
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4, !noalias !38
  %109 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 5
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 4, !noalias !38
  %112 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 13
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4, !noalias !38
  %115 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 3
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4, !noalias !38
  %118 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 7
  %119 = bitcast float* %118 to i32*
  %120 = load i32, i32* %119, align 4, !noalias !38
  %121 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 15
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4, !noalias !38
  %124 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 108
  %125 = bitcast i8* %124 to i32*
  %126 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 76
  %127 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 80
  %128 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 84
  %129 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 88
  %130 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 92
  %131 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 96
  %132 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 100
  %133 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 104
  %134 = bitcast i8* %97 to i32*
  store i32 %99, i32* %134, align 4, !alias.scope !41
  %135 = bitcast i8* %126 to i32*
  store i32 %102, i32* %135, align 4, !alias.scope !41
  %136 = bitcast i8* %127 to i32*
  store i32 %105, i32* %136, align 4, !alias.scope !41
  %137 = bitcast i8* %128 to i32*
  store i32 %108, i32* %137, align 4, !alias.scope !41
  %138 = bitcast i8* %129 to i32*
  store i32 %111, i32* %138, align 4, !alias.scope !41
  %139 = bitcast i8* %130 to i32*
  store i32 %114, i32* %139, align 4, !alias.scope !41
  %140 = bitcast i8* %131 to i32*
  store i32 %117, i32* %140, align 4, !alias.scope !41
  %141 = bitcast i8* %132 to i32*
  store i32 %120, i32* %141, align 4, !alias.scope !41
  %142 = bitcast i8* %133 to i32*
  store i32 %123, i32* %142, align 4, !alias.scope !41
  store i32 128, i32* %125, align 4, !alias.scope !41
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %79) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV29SkPostTranslateMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %143 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 4, i32 0, i64 112
  %144 = bitcast i8* %143 to %class.SkMatrixProvider**
  store %class.SkMatrixProvider* %64, %class.SkMatrixProvider** %144, align 8
  %145 = bitcast %class.SkPostTranslateMatrixProvider** %71 to %class.SkTLazy**
  store %class.SkTLazy* %60, %class.SkTLazy** %145, align 8
  %146 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 2
  %147 = bitcast %class.SkMatrixProvider** %146 to %class.SkTLazy**
  store %class.SkTLazy* %60, %class.SkTLazy** %147, align 8
  %148 = load %class.SkBitmapDevice*, %class.SkBitmapDevice** %61, align 8
  %149 = getelementptr inbounds %class.SkBitmapDevice, %class.SkBitmapDevice* %148, i64 0, i32 3, i32 2, i32 1
  %150 = load %"struct.SkRasterClipStack::Rec"*, %"struct.SkRasterClipStack::Rec"** %149, align 8
  %151 = getelementptr inbounds %"struct.SkRasterClipStack::Rec", %"struct.SkRasterClipStack::Rec"* %150, i64 0, i32 0
  %152 = load i32, i32* %8, align 4
  %153 = sub nsw i32 0, %152
  %154 = load i32, i32* %38, align 4
  %155 = sub nsw i32 0, %154
  %156 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 5
  call void @_ZNK12SkRasterClip9translateEiiPS_(%class.SkRasterClip* %151, i32 %153, i32 %155, %class.SkRasterClip* %156) #14
  %157 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %157) #14
  %158 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 1, i32 2, i32 1, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %class.SkDrawTiler, %class.SkDrawTiler* %0, i64 0, i32 3, i32 1, i32 2, i32 1, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = zext i32 %161 to i64
  %163 = shl nuw i64 %162, 32
  %164 = zext i32 %159 to i64
  %165 = or i64 %163, %164
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %166, align 8
  %167 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %165, i64* %167, align 8
  %168 = call zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip* %156, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %157) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #14
  ret void
}

declare zeroext i1 @_ZNK8SkPixmap13extractSubsetEPS_RK7SkIRect(%class.SkPixmap*, %class.SkPixmap*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK12SkRasterClip9translateEiiPS_(%class.SkRasterClip*, i32, i32, %class.SkRasterClip*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip2opERK7SkIRectN8SkRegion2OpE(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29SkPostTranslateMatrixProviderD0Ev(%class.SkPostTranslateMatrixProvider*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkPostTranslateMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK29SkPostTranslateMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkPostTranslateMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPostTranslateMatrixProvider, %class.SkPostTranslateMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #14
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK29SkPostTranslateMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkPostTranslateMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip*) unnamed_addr #4

declare zeroext i1 @_ZNK7SkPaint20canComputeFastBoundsEv(%class.SkPaint*) local_unnamed_addr #2

declare dereferenceable(16) %struct.SkRect* @_ZNK7SkPaint19doComputeFastBoundsERK6SkRectPS0_NS_5StyleE(%class.SkPaint*, %struct.SkRect* dereferenceable(16), %struct.SkRect*, i8 zeroext) local_unnamed_addr #2

declare void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, i1 zeroext, i1 zeroext, %class.SkBlitter*) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkMatrix13setRectToRectERK6SkRectS2_NS_10ScaleToFitE(%class.SkMatrix*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSimpleMatrixProviderD0Ev(%class.SkSimpleMatrixProvider*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkSimpleMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkSimpleMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkSimpleMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK8SkBitmap10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.8* sret, %class.SkBitmap*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.200* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #2

declare void @_ZN7SkDeque8pop_backEv(%class.SkDeque*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip2opERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN12SkRasterClipC1ERKS_(%class.SkRasterClip*, %class.SkRasterClip* dereferenceable(72)) unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip2opERK7SkRRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip2opERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkRasterClip*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip2opE5sk_spI8SkShaderE(%class.SkRasterClip*, %class.sk_sp.8*) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip2opERK8SkRegionNS0_2OpE(%class.SkRasterClip*, %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip8setEmptyEv(%class.SkRasterClip*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN7SkDequeD1Ev(%class.SkDeque*) unnamed_addr #4

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!8 = !{!9, !6, !3}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!11 = !{!12, !3}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!16 = distinct !{!16, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!19 = distinct !{!19, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!20 = distinct !{!20, !21, !"_ZNK11SkImageInfo6makeWHEii: argument 0"}
!21 = distinct !{!21, !"_ZNK11SkImageInfo6makeWHEii"}
!22 = !{!23, !25, !27}
!23 = distinct !{!23, !24, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!24 = distinct !{!24, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!25 = distinct !{!25, !26, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType: argument 0"}
!26 = distinct !{!26, !"_ZNK11SkColorInfo13makeColorTypeE11SkColorType"}
!27 = distinct !{!27, !28, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType: argument 0"}
!28 = distinct !{!28, !"_ZNK11SkImageInfo13makeColorTypeE11SkColorType"}
!29 = !{i8 0, i8 2}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!32 = distinct !{!32, !"_ZN8SkMatrix14MakeRectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!33 = distinct !{!33, !34, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE: argument 0"}
!34 = distinct !{!34, !"_ZN8SkMatrix10RectToRectERK6SkRectS2_NS_10ScaleToFitE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5SkM449TranslateEfff: argument 0"}
!37 = distinct !{!37, !"_ZN5SkM449TranslateEfff"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5SkM445asM33Ev: argument 0"}
!40 = distinct !{!40, !"_ZNK5SkM445asM33Ev"}
!41 = !{!42, !39}
!42 = distinct !{!42, !43, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!43 = distinct !{!43, !"_ZN8SkMatrix7MakeAllEfffffffff"}
