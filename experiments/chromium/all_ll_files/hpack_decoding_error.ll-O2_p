; ModuleID = '../../net/third_party/quiche/src/http2/hpack/decoder/hpack_decoding_error.cc'
source_filename = "../../net/third_party/quiche/src/http2/hpack/decoder/hpack_decoding_error.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [18 x i8] c"No error detected\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"Index varint beyond implementation limit\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"Name length varint beyond implementation limit\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"Value length varint beyond implementation limit\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"Name length exceeds buffer limit\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"Value length exceeds buffer limit\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Name Huffman encoding error\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"Value Huffman encoding error\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"Missing dynamic table size update\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"Invalid index in indexed header field representation\00", align 1
@.str.10 = private unnamed_addr constant [71 x i8] c"Invalid index in literal header field with indexed name representation\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Dynamic table size update not allowed\00", align 1
@.str.12 = private unnamed_addr constant [58 x i8] c"Initial dynamic table size update is above low water mark\00", align 1
@.str.13 = private unnamed_addr constant [56 x i8] c"Dynamic table size update is above acknowledged setting\00", align 1
@.str.14 = private unnamed_addr constant [43 x i8] c"Block ends in the middle of an instruction\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"Incoming data fragment exceeds buffer limit\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"Total compressed HPACK data size exceeds limit\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"invalid HpackDecodingError value\00", align 1
@switch.table._ZN5http226HpackDecodingErrorToStringENS_18HpackDecodingErrorE = private unnamed_addr constant [17 x i64] [i64 17, i64 40, i64 46, i64 47, i64 32, i64 33, i64 27, i64 28, i64 33, i64 52, i64 70, i64 37, i64 57, i64 55, i64 42, i64 43, i64 46], align 8
@switch.table._ZN5http226HpackDecodingErrorToStringENS_18HpackDecodingErrorE.18 = private unnamed_addr constant [17 x i8*] [i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN5http226HpackDecodingErrorToStringENS_18HpackDecodingErrorE(i32) local_unnamed_addr #0 {
  %2 = icmp ult i32 %0, 17
  br i1 %2, label %3, label %10

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [17 x i64], [17 x i64]* @switch.table._ZN5http226HpackDecodingErrorToStringENS_18HpackDecodingErrorE, i64 0, i64 %4
  %6 = load i64, i64* %5, align 8
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds [17 x i8*], [17 x i8*]* @switch.table._ZN5http226HpackDecodingErrorToStringENS_18HpackDecodingErrorE.18, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi i64 [ %6, %3 ], [ 32, %1 ]
  %12 = phi i8* [ %9, %3 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), %1 ]
  %13 = insertvalue { i8*, i64 } undef, i8* %12, 0
  %14 = insertvalue { i8*, i64 } %13, i64 %11, 1
  ret { i8*, i64 } %14
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
