; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_open_db_request.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_open_db_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.240", i32, [4 x i8], %"class.std::__1::unique_ptr.376", %"class.std::__1::unique_ptr.376", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.382", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.394", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.412", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.419", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.305", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.333", %"class.std::__1::unique_ptr.356", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i64 }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::Worklist.287"* }
%"class.blink::Worklist.287" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::Worklist.294"* }
%"class.blink::Worklist.294" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::Worklist.301"* }
%"class.blink::Worklist.301" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::Worklist.308"* }
%"class.blink::Worklist.308" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::Worklist.315"* }
%"class.blink::Worklist.315" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::Worklist.322"* }
%"class.blink::Worklist.322" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::Worklist.329"* }
%"class.blink::Worklist.329" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.276" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.336", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.350", [4 x i8] }>
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { i64 }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { float }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.359", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.382" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"struct.std::__1::pair.387"*, i32, i32 }
%"struct.std::__1::pair.387" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.400" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.287"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.294"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.301"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.308"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.315"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.428" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.418 }
%class.scoped_refptr.418 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.419" = type { %"struct.std::__1::__atomic_base.420" }
%"struct.std::__1::__atomic_base.420" = type { %"struct.std::__1::__cxx_atomic_impl.421" }
%"struct.std::__1::__cxx_atomic_impl.421" = type { %"struct.std::__1::__cxx_atomic_base_impl.422" }
%"struct.std::__1::__cxx_atomic_base_impl.422" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.423" }
%"class.base::time_internal::TimeBase.423" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.227", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.227" = type { %"class.base::RefCounted.228" }
%"class.base::RefCounted.228" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.231" }
%"class.blink::HeapHashMap.231" = type { %"class.WTF::HashMap.234" }
%"class.WTF::HashMap.234" = type { %"class.WTF::HashTable.235" }
%"class.WTF::HashTable.235" = type <{ %"struct.WTF::KeyValuePair.237"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.237" = type { %"class.blink::WeakMember.238", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.112" }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i32 }
%"class.blink::IDBOpenDBRequest" = type <{ %"class.blink::IDBRequest", %"class.mojo::PendingAssociatedReceiver", %"class.std::__1::unique_ptr.16", i64, i64, %"class.mojo::PendingRemote.185", %"class.base::Time", i8, [7 x i8] }>
%"class.blink::IDBRequest" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.13", i32, i8, %"class.v8::Isolate"*, %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::Member.122", %"class.blink::Member.124", %"class.blink::Member.30", i8, %"class.blink::Member.93", i32, i32, %"class.blink::Member.128", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.155", %"class.WTF::Vector.176", i8, i8, i8, %"class.blink::WebIDBCallbacks"*, %"class.blink::IDBRequestQueueItem"* }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::IDBTransaction"* }
%"class.blink::IDBTransaction" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.15", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.16", i64, %"class.blink::Member.22", %"class.blink::Member.24", i32, i32, %"class.WTF::HashSet.26", i32, i8, i64, %"class.blink::Member.30", %"class.blink::HeapLinkedHashSet", %"class.WTF::Deque", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.56", %"class.WTF::Vector.63", %"class.blink::HeapVector.79", %"struct.blink::IDBDatabaseMetadata", %"class.blink::Member.93", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ActiveScriptWrappable.15" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::IDBDatabase"* }
%"class.blink::IDBDatabase" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.208", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::mojom::blink::IDBDatabaseCallbacks", %"struct.blink::IDBDatabaseMetadata", %"class.std::__1::unique_ptr.209", %"class.blink::Member.13", %"class.blink::HeapHashMap.215", %"class.mojo::PendingRemote.185", i8, %"class.blink::Member.93", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%"class.blink::ActiveScriptWrappable.208" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::mojom::blink::IDBDatabaseCallbacks" = type { i32 (...)** }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::WebIDBDatabase"* }
%"class.blink::WebIDBDatabase" = type { i32 (...)** }
%"class.blink::HeapHashMap.215" = type { %"class.WTF::HashMap.218" }
%"class.WTF::HashMap.218" = type { %"class.WTF::HashTable.219" }
%"class.WTF::HashTable.219" = type <{ %"struct.WTF::KeyValuePair.221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.221" = type opaque
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.222" }
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::IDBDatabaseCallbacks, blink::IDBDatabase, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::IDBOpenDBRequest"* }
%"class.WTF::HashSet.26" = type { %"class.WTF::HashTable.27" }
%"class.WTF::HashTable.27" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.36", i32, i32 }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::IDBRequestQueueItem, std::__1::default_delete<blink::IDBRequestQueueItem> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.std::__1::unique_ptr.44"*, i32, i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::IDBRequestQueueItem"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.52" }
%"class.WTF::HashMap.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"struct.WTF::KeyValuePair.55"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.55" = type opaque
%"class.blink::HeapHashMap.56" = type { %"class.WTF::HashMap.59" }
%"class.WTF::HashMap.59" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.WTF::KeyValuePair.62"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.62" = type opaque
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %class.scoped_refptr.66*, i32, i32 }
%class.scoped_refptr.66 = type { %"class.blink::IDBObjectStoreMetadata"* }
%"class.blink::IDBObjectStoreMetadata" = type { %"class.WTF::RefCounted", %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i64, %"class.WTF::HashMap.72" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector.67" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type { i64, %class.scoped_refptr.196 }
%class.scoped_refptr.196 = type { %"class.blink::IDBIndexMetadata"* }
%"class.blink::IDBIndexMetadata" = type <{ %"class.WTF::RefCounted.197", [4 x i8], %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i8, [6 x i8] }>
%"class.WTF::RefCounted.197" = type { %"class.base::RefCounted.198" }
%"class.base::RefCounted.198" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HeapVector.79" = type { %"class.WTF::Vector.82" }
%"class.WTF::Vector.82" = type { %"class.WTF::VectorBuffer.83" }
%"class.WTF::VectorBuffer.83" = type { %"class.WTF::VectorBufferBase.84" }
%"class.WTF::VectorBufferBase.84" = type { %"class.blink::Member.85"*, i32, i32 }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::IDBIndex"* }
%"class.blink::IDBIndex" = type <{ %"class.blink::ScriptWrappable", %class.scoped_refptr.196, %"class.blink::Member.199", %"class.blink::Member.13", i8, [7 x i8] }>
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::IDBObjectStore"* }
%"class.blink::IDBObjectStore" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.66, %"class.blink::Member.13", i8, [7 x i8], %"class.blink::HeapHashMap.201" }
%"class.blink::HeapHashMap.201" = type { %"class.WTF::HashMap.204" }
%"class.WTF::HashMap.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"struct.WTF::KeyValuePair.207"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.207" = type opaque
%"struct.blink::IDBDatabaseMetadata" = type <{ %"class.WTF::String", i64, i64, i64, %"class.WTF::HashMap.88", i8, [7 x i8] }>
%"class.WTF::HashMap.88" = type { %"class.WTF::HashTable.89" }
%"class.WTF::HashTable.89" = type <{ %"struct.WTF::KeyValuePair.92"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.92" = type { i64, %class.scoped_refptr.66 }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.112" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.117" }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i8 }
%"class.blink::IDBRequest::AsyncTraceState" = type { i8*, i64 }
%"class.blink::Member.122" = type { %"class.blink::MemberBase.123" }
%"class.blink::MemberBase.123" = type { %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"* }
%"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore" = type opaque
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::IDBAny"* }
%"class.blink::IDBAny" = type { i32, %"class.blink::Member.128", %"class.blink::Member.22", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.155", %"class.WTF::Vector.171", i64 }
%"class.WTF::Vector.171" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"class.std::__1::unique_ptr.155"*, i32, i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type <{ %"class.blink::ExecutionContextLifecycleObserver.base", i8, [3 x i8], %"class.blink::HeapLinkedHashSet.97", i8, [7 x i8] }>
%"class.blink::HeapLinkedHashSet.97" = type { %"class.WTF::LinkedHashSet.100" }
%"class.WTF::LinkedHashSet.100" = type { %"class.WTF::HashMap.101", %"class.WTF::VectorBackedLinkedList.105" }
%"class.WTF::HashMap.101" = type { %"class.WTF::HashTable.102" }
%"class.WTF::HashTable.102" = type <{ %"struct.WTF::KeyValuePair.104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.104" = type opaque
%"class.WTF::VectorBackedLinkedList.105" = type { %"class.WTF::Vector.106", i32, i32 }
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"class.WTF::VectorBackedLinkedListNode.109"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.109" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::IDBCursor"* }
%"class.blink::IDBCursor" = type { %"class.blink::ScriptWrappable", %"class.std::__1::unique_ptr.186", %"class.blink::Member.192", i32, %"class.blink::Member.194", %"class.blink::Member.13", i8, i8, i8, i8, %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.blink::Member.124" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::WebIDBCursor"* }
%"class.blink::WebIDBCursor" = type { i32 (...)** }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::IDBRequest"* }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::V8UnionIDBIndexOrIDBObjectStore"* }
%"class.blink::V8UnionIDBIndexOrIDBObjectStore" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::IDBKey"* }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector.133", %class.scoped_refptr.138, %"class.WTF::String", double, i64 }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.std::__1::unique_ptr.130"*, i32, i32 }
%class.scoped_refptr.138 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.139", i64, %"class.WTF::Vector.141", %"class.WTF::Vector.146" }
%"class.WTF::RefCounted.139" = type { %"class.base::RefCounted.140" }
%"class.base::RefCounted.140" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.141" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { i8*, i32, i32 }
%"class.WTF::Vector.146" = type { %"class.WTF::VectorBuffer.147" }
%"class.WTF::VectorBuffer.147" = type { %"class.WTF::VectorBufferBase.148" }
%"class.WTF::VectorBufferBase.148" = type { %"class.std::__1::unique_ptr.149"*, i32, i32 }
%"class.std::__1::unique_ptr.149" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::IDBValue"* }
%"class.blink::IDBValue" = type { %class.scoped_refptr.138, %"class.WTF::Vector.158", %"class.WTF::Vector.163", %"class.std::__1::unique_ptr.130", %"class.blink::IDBKeyPath", %"class.v8::Isolate"*, i64 }
%"class.WTF::Vector.158" = type { %"class.WTF::VectorBuffer.159" }
%"class.WTF::VectorBuffer.159" = type { %"class.WTF::VectorBufferBase.160" }
%"class.WTF::VectorBufferBase.160" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type opaque
%"class.WTF::Vector.163" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.176" = type { %"class.WTF::VectorBuffer.177" }
%"class.WTF::VectorBuffer.177" = type { %"class.WTF::VectorBufferBase.178" }
%"class.WTF::VectorBufferBase.178" = type { %class.scoped_refptr.179*, i32, i32 }
%class.scoped_refptr.179 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.181", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.180" }
%"class.base::RefCountedThreadSafe.180" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.181" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::WebIDBCallbacks" = type { %"class.blink::mojom::blink::IDBCallbacks" }
%"class.blink::mojom::blink::IDBCallbacks" = type { i32 (...)** }
%"class.blink::IDBRequestQueueItem" = type opaque
%"class.mojo::PendingAssociatedReceiver" = type { %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::WebIDBTransaction"* }
%"class.mojo::PendingRemote.185" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.226, %"class.blink::Member.424", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.226 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.426" }
%"class.blink::Persistent.426" = type { %"class.blink::PersistentBase.427" }
%"class.blink::PersistentBase.427" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::WebIDBTransaction" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.481", i32, i8, [3 x i8], %"class.blink::HeapVector.483", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.491", %"class.blink::Member.493", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.502", %"class.blink::Member.508", %"class.blink::Member.510", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.439" }
%"class.blink::HeapHashMap.439" = type { %"class.WTF::HashMap.442" }
%"class.WTF::HashMap.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"struct.WTF::KeyValuePair.445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.445" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.446" }
%"class.blink::Supplementable.446" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.447" }
%"class.blink::HeapHashMap.447" = type { %"class.WTF::HashMap.450" }
%"class.WTF::HashMap.450" = type { %"class.WTF::HashTable.451" }
%"class.WTF::HashTable.451" = type <{ %"struct.WTF::KeyValuePair.453"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.453" = type { i8*, %"class.blink::Member.573" }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.575" }
%"class.blink::Member.575" = type { %"class.blink::MemberBase.576" }
%"class.blink::MemberBase.576" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.454, %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.469", %"class.blink::Member.475", i32, [4 x i8], %"class.WTF::HashSet.477", i32, i32 }
%class.scoped_refptr.454 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.455", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.457", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.462 }
%"class.WTF::RefCounted.455" = type { %"class.base::RefCounted.456" }
%"class.base::RefCounted.456" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.457" = type { %"class.absl::optional_internal::optional_data.458" }
%"class.absl::optional_internal::optional_data.458" = type { %"class.absl::optional_internal::optional_data_base.459" }
%"class.absl::optional_internal::optional_data_base.459" = type { %"class.absl::optional_internal::optional_data_dtor_base.460" }
%"class.absl::optional_internal::optional_data_dtor_base.460" = type { i8, %union.anon.461 }
%union.anon.461 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.462 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.483" = type { %"class.WTF::Vector.486" }
%"class.WTF::Vector.486" = type { %"class.WTF::VectorBuffer.487" }
%"class.WTF::VectorBuffer.487" = type { %"class.WTF::VectorBufferBase.488" }
%"class.WTF::VectorBufferBase.488" = type { %"class.blink::Member.489"*, i32, i32 }
%"class.blink::Member.489" = type opaque
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.495", i32, i32 }
%"class.blink::HeapHashMap.495" = type { %"class.WTF::HashMap.498" }
%"class.WTF::HashMap.498" = type { %"class.WTF::HashTable.499" }
%"class.WTF::HashTable.499" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::IDBVersionChangeEvent" = type { %"class.blink::Event", i64, %"class.absl::optional", i32, %"class.WTF::String" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.433", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::Event"* }
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.514", %"class.blink::Member.516", %"class.blink::Member.514", %"class.blink::Member.514", %"class.blink::Member.518" }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.522", %"class.blink::Member.524", %"class.blink::Member.516", %"class.blink::Member.526", %"class.blink::Member.526", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.554", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.559", %"class.blink::HeapVector.561" }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.524" = type { %"class.blink::MemberBase.525" }
%"class.blink::MemberBase.525" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.526" = type { %"class.blink::MemberBase.527" }
%"class.blink::MemberBase.527" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.530" }
%"class.blink::HeapHashMap.530" = type { %"class.WTF::HashMap.533" }
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.536" = type { %"class.WTF::AtomicString", %"class.blink::Member.537" }
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.541", i32, %"class.blink::HeapVector.543" }
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.543" = type { %"class.WTF::Vector.546" }
%"class.WTF::Vector.546" = type { %"class.WTF::VectorBuffer.547" }
%"class.WTF::VectorBuffer.547" = type { %"class.WTF::VectorBufferBase.548" }
%"class.WTF::VectorBufferBase.548" = type { %"class.blink::Member.541"*, i32, i32 }
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.556" }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::HeapHashMap.558"* }
%"class.blink::HeapHashMap.558" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.561" = type { %"class.WTF::Vector.564" }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566" }
%"class.WTF::VectorBufferBase.566" = type { %"class.blink::Member.567"*, i32, i32 }
%"class.blink::Member.567" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::Node"* }
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.571", i8, [7 x i8] }>
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::EventListener"* }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.611 }
%union.anon.611 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink16IDBOpenDBRequest18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_10IDBRequestEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_10IDBRequestEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink22IDBObjectStoreMetadataD2Ev = comdat any

$_ZN5blink16IDBIndexMetadataD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_6IDBAnyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_6IDBAnyEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA27_KcEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink16IDBOpenDBRequestE = hidden unnamed_addr constant { [35 x i8*], [7 x i8*], [8 x i8*] } { [35 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZN5blink16IDBOpenDBRequestD2Ev to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZN5blink16IDBOpenDBRequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::IDBRequest"*)* @_ZNK5blink10IDBRequest18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, %"class.blink::Visitor"*)* @_ZNK5blink16IDBOpenDBRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::IDBOpenDBRequest"*)* @_ZNK5blink16IDBOpenDBRequest18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::IDBOpenDBRequest"*)* @_ZNK5blink16IDBOpenDBRequest13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::IDBRequest"*)* @_ZNK5blink10IDBRequest19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::IDBOpenDBRequest"*, %"class.blink::Event"*)* @_ZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, i64)* @_ZN5blink16IDBOpenDBRequest14EnqueueBlockedEl to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, i64, %"class.blink::WebIDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"*, i32, %"class.WTF::StringImpl"*)* @_ZN5blink16IDBOpenDBRequest20EnqueueUpgradeNeededElNSt3__110unique_ptrINS_14WebIDBDatabaseENS1_14default_deleteIS3_EEEERKNS_19IDBDatabaseMetadataENS_5mojom11IDBDataLossEN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, %"class.blink::WebIDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"*)* @_ZN5blink16IDBOpenDBRequest15EnqueueResponseENSt3__110unique_ptrINS_14WebIDBDatabaseENS1_14default_deleteIS3_EEEERKNS_19IDBDatabaseMetadataE to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZN5blink16IDBOpenDBRequest16ContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::IDBOpenDBRequest"*)* @_ZNK5blink16IDBOpenDBRequest18ShouldEnqueueEventEv to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, i64)* @_ZN5blink16IDBOpenDBRequest15EnqueueResponseEl to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink16IDBOpenDBRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZThn72_N5blink16IDBOpenDBRequestD1Ev to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZThn72_N5blink16IDBOpenDBRequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_10IDBRequestEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_10IDBRequestEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink16IDBOpenDBRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZThn80_N5blink16IDBOpenDBRequestD1Ev to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZThn80_N5blink16IDBOpenDBRequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::IDBOpenDBRequest"*)* @_ZThn80_N5blink16IDBOpenDBRequest16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@_ZN5blink18event_target_names17kIDBOpenDBRequestE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [30 x i8] c"IDBOpenDBRequest::onBlocked()\00", align 1
@_ZN5blink16event_type_names8kBlockedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [36 x i8] c"IDBOpenDBRequest::onUpgradeNeeded()\00", align 1
@_ZN5blink16event_type_names14kUpgradeneededE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [30 x i8] c"IDBOpenDBRequest::onSuccess()\00", align 1
@_ZN5blink16event_type_names8kSuccessE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"The connection was closed.\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"WebCore.IndexedDB.OpenTime.Cold\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"WebCore.IndexedDB.OpenTime.Warm\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink16IDBOpenDBRequest18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.8 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.9 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6IDBAnyEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDBAny]\00", align 1
@_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_6IDBAnyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_6IDBAnyEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink16IDBOpenDBRequestC1EPNS_11ScriptStateEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENSt3__110unique_ptrINS_17WebIDBTransactionENS9_14default_deleteISB_EEEEllNS_10IDBRequest15AsyncTraceStateENS3_13PendingRemoteINS6_15ObservedFeatureEEE = hidden unnamed_addr alias void (%"class.blink::IDBOpenDBRequest"*, %"class.blink::ScriptState"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.blink::WebIDBTransaction"*, i64, i64, %"class.blink::IDBRequest::AsyncTraceState"*, %"class.mojo::PendingRemote.185"*), void (%"class.blink::IDBOpenDBRequest"*, %"class.blink::ScriptState"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.blink::WebIDBTransaction"*, i64, i64, %"class.blink::IDBRequest::AsyncTraceState"*, %"class.mojo::PendingRemote.185"*)* @_ZN5blink16IDBOpenDBRequestC2EPNS_11ScriptStateEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENSt3__110unique_ptrINS_17WebIDBTransactionENS9_14default_deleteISB_EEEEllNS_10IDBRequest15AsyncTraceStateENS3_13PendingRemoteINS6_15ObservedFeatureEEE
@_ZN5blink16IDBOpenDBRequestD1Ev = hidden unnamed_addr alias void (%"class.blink::IDBOpenDBRequest"*), void (%"class.blink::IDBOpenDBRequest"*)* @_ZN5blink16IDBOpenDBRequestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequestC2EPNS_11ScriptStateEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENSt3__110unique_ptrINS_17WebIDBTransactionENS9_14default_deleteISB_EEEEllNS_10IDBRequest15AsyncTraceStateENS3_13PendingRemoteINS6_15ObservedFeatureEEE(%"class.blink::IDBOpenDBRequest"*, %"class.blink::ScriptState"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.blink::WebIDBTransaction"*, i64, i64, %"class.blink::IDBRequest::AsyncTraceState"* nocapture, %"class.mojo::PendingRemote.185"*) unnamed_addr #0 align 2 {
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.blink::IDBRequest::AsyncTraceState"*
  %11 = ptrtoint %"class.blink::WebIDBTransaction"* %3 to i64
  %12 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::IDBRequest::AsyncTraceState", %"class.blink::IDBRequest::AsyncTraceState"* %6, i64 0, i32 0
  %14 = bitcast %"class.blink::IDBRequest::AsyncTraceState"* %6 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  store <2 x i64> %15, <2 x i64>* %9, align 16
  store i8* null, i8** %13, align 8
  call void @_ZN5blink10IDBRequestC2EPNS_11ScriptStateEPKNS_42V8UnionIDBCursorOrIDBIndexOrIDBObjectStoreEPNS_14IDBTransactionENS0_15AsyncTraceStateE(%"class.blink::IDBRequest"* %12, %"class.blink::ScriptState"* %1, %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"* null, %"class.blink::IDBTransaction"* null, %"class.blink::IDBRequest::AsyncTraceState"* nonnull %10) #6
  call void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"* nonnull %10) #6
  %16 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = bitcast i32 (...)*** %17 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* %19, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %20) #6
  %21 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::unique_ptr.16"* %21 to i64*
  store i64 %11, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 3
  store i64 %4, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 4
  store i64 %5, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 5, i32 0
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.185", %"class.mojo::PendingRemote.185"* %7, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %25, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %26) #6
  %27 = call i64 @_ZN4base4Time3NowEv() #6
  %28 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 7
  store i8 0, i8* %29, align 8
  ret void
}

declare void @_ZN5blink10IDBRequestC2EPNS_11ScriptStateEPKNS_42V8UnionIDBCursorOrIDBIndexOrIDBObjectStoreEPNS_14IDBTransactionENS0_15AsyncTraceStateE(%"class.blink::IDBRequest"*, %"class.blink::ScriptState"*, %"class.blink::V8UnionIDBCursorOrIDBIndexOrIDBObjectStore"*, %"class.blink::IDBTransaction"*, %"class.blink::IDBRequest::AsyncTraceState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink10IDBRequest15AsyncTraceStateD1Ev(%"class.blink::IDBRequest::AsyncTraceState"*) unnamed_addr #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequestD2Ev(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %5) #6
  %6 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %6, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %6, align 8
  %8 = icmp eq %"class.blink::WebIDBTransaction"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::WebIDBTransaction"* %7 to void (%"class.blink::WebIDBTransaction"*)***
  %11 = load void (%"class.blink::WebIDBTransaction"*)**, void (%"class.blink::WebIDBTransaction"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %11, i64 1
  %13 = load void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %12, align 8
  tail call void %13(%"class.blink::WebIDBTransaction"* nonnull %7) #6
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %15) #6
  %16 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  tail call void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"* %16) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink16IDBOpenDBRequestD1Ev(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 23
  %3 = bitcast %"class.blink::WebIDBCallbacks"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 9
  %5 = bitcast %"class.blink::WebIDBCallbacks"** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 37
  %7 = bitcast %"class.blink::WebIDBCallbacks"** %6 to %"struct.mojo::internal::PendingRemoteState"*
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %7) #6
  %8 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 34
  %9 = bitcast %"class.blink::WebIDBCallbacks"** %8 to %"class.blink::WebIDBTransaction"**
  %10 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %9, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %9, align 8
  %11 = icmp eq %"class.blink::WebIDBTransaction"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::WebIDBTransaction"* %10 to void (%"class.blink::WebIDBTransaction"*)***
  %14 = load void (%"class.blink::WebIDBTransaction"*)**, void (%"class.blink::WebIDBTransaction"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %14, i64 1
  %16 = load void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %15, align 8
  tail call void %16(%"class.blink::WebIDBTransaction"* nonnull %10) #6
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 33
  %19 = bitcast %"class.blink::WebIDBCallbacks"** %18 to %"class.mojo::ScopedInterfaceEndpointHandle"*
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %19) #6
  %20 = bitcast %"class.blink::WebIDBCallbacks"** %2 to %"class.blink::IDBRequest"*
  tail call void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"* %20) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink16IDBOpenDBRequestD1Ev(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 72
  %5 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 296
  %7 = bitcast i8* %6 to %"struct.mojo::internal::PendingRemoteState"*
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %7) #6
  %8 = getelementptr inbounds i8, i8* %2, i64 272
  %9 = bitcast i8* %8 to %"class.blink::WebIDBTransaction"**
  %10 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %9, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %9, align 8
  %11 = icmp eq %"class.blink::WebIDBTransaction"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::WebIDBTransaction"* %10 to void (%"class.blink::WebIDBTransaction"*)***
  %14 = load void (%"class.blink::WebIDBTransaction"*)**, void (%"class.blink::WebIDBTransaction"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %14, i64 1
  %16 = load void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %15, align 8
  tail call void %16(%"class.blink::WebIDBTransaction"* nonnull %10) #6
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds i8, i8* %2, i64 264
  %19 = bitcast i8* %18 to %"class.mojo::ScopedInterfaceEndpointHandle"*
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %19) #6
  %20 = bitcast i8* %2 to %"class.blink::IDBRequest"*
  tail call void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"* %20) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequestD0Ev(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %5) #6
  %6 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %6, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %6, align 8
  %8 = icmp eq %"class.blink::WebIDBTransaction"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::WebIDBTransaction"* %7 to void (%"class.blink::WebIDBTransaction"*)***
  %11 = load void (%"class.blink::WebIDBTransaction"*)**, void (%"class.blink::WebIDBTransaction"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %11, i64 1
  %13 = load void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %12, align 8
  tail call void %13(%"class.blink::WebIDBTransaction"* nonnull %7) #6
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %15) #6
  %16 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  tail call void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"* %16) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink16IDBOpenDBRequestD0Ev(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 23
  %3 = bitcast %"class.blink::WebIDBCallbacks"** %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 9
  %5 = bitcast %"class.blink::WebIDBCallbacks"** %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 37
  %7 = bitcast %"class.blink::WebIDBCallbacks"** %6 to %"struct.mojo::internal::PendingRemoteState"*
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %7) #6
  %8 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 34
  %9 = bitcast %"class.blink::WebIDBCallbacks"** %8 to %"class.blink::WebIDBTransaction"**
  %10 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %9, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %9, align 8
  %11 = icmp eq %"class.blink::WebIDBTransaction"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::WebIDBTransaction"* %10 to void (%"class.blink::WebIDBTransaction"*)***
  %14 = load void (%"class.blink::WebIDBTransaction"*)**, void (%"class.blink::WebIDBTransaction"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %14, i64 1
  %16 = load void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %15, align 8
  tail call void %16(%"class.blink::WebIDBTransaction"* nonnull %10) #6
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.blink::WebIDBCallbacks"*, %"class.blink::WebIDBCallbacks"** %2, i64 33
  %19 = bitcast %"class.blink::WebIDBCallbacks"** %18 to %"class.mojo::ScopedInterfaceEndpointHandle"*
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %19) #6
  %20 = bitcast %"class.blink::WebIDBCallbacks"** %2 to %"class.blink::IDBRequest"*
  tail call void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"* %20) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink16IDBOpenDBRequestD0Ev(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 72
  %5 = bitcast i8* %4 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink16IDBOpenDBRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 296
  %7 = bitcast i8* %6 to %"struct.mojo::internal::PendingRemoteState"*
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %7) #6
  %8 = getelementptr inbounds i8, i8* %2, i64 272
  %9 = bitcast i8* %8 to %"class.blink::WebIDBTransaction"**
  %10 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %9, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %9, align 8
  %11 = icmp eq %"class.blink::WebIDBTransaction"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::WebIDBTransaction"* %10 to void (%"class.blink::WebIDBTransaction"*)***
  %14 = load void (%"class.blink::WebIDBTransaction"*)**, void (%"class.blink::WebIDBTransaction"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %14, i64 1
  %16 = load void (%"class.blink::WebIDBTransaction"*)*, void (%"class.blink::WebIDBTransaction"*)** %15, align 8
  tail call void %16(%"class.blink::WebIDBTransaction"* nonnull %10) #6
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds i8, i8* %2, i64 264
  %19 = bitcast i8* %18 to %"class.mojo::ScopedInterfaceEndpointHandle"*
  tail call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* %19) #6
  %20 = bitcast i8* %2 to %"class.blink::IDBRequest"*
  tail call void @_ZN5blink10IDBRequestD2Ev(%"class.blink::IDBRequest"* %20) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16IDBOpenDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBOpenDBRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  tail call void @_ZNK5blink10IDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBRequest"* %3, %"class.blink::Visitor"* %1) #6
  ret void
}

declare void @_ZNK5blink10IDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBRequest"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink16IDBOpenDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBOpenDBRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 23
  %4 = bitcast %"class.blink::WebIDBCallbacks"** %3 to %"class.blink::IDBRequest"*
  tail call void @_ZNK5blink10IDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBRequest"* %4, %"class.blink::Visitor"* %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink16IDBOpenDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBOpenDBRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 20
  %4 = bitcast i8* %3 to %"class.blink::IDBRequest"*
  tail call void @_ZNK5blink10IDBRequest5TraceEPNS_7VisitorE(%"class.blink::IDBRequest"* %4, %"class.blink::Visitor"* %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequest16ContextDestroyedEv(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  tail call void @_ZN5blink10IDBRequest16ContextDestroyedEv(%"class.blink::IDBRequest"* %2) #6
  ret void
}

declare void @_ZN5blink10IDBRequest16ContextDestroyedEv(%"class.blink::IDBRequest"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink16IDBOpenDBRequest16ContextDestroyedEv(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 -1, i32 0, i32 20
  %3 = bitcast i8* %2 to %"class.blink::IDBRequest"*
  tail call void @_ZN5blink10IDBRequest16ContextDestroyedEv(%"class.blink::IDBRequest"* %3) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16IDBOpenDBRequest13InterfaceNameEv(%"class.blink::IDBOpenDBRequest"* nocapture readnone) unnamed_addr #3 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names17kIDBOpenDBRequestE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequest14EnqueueBlockedEl(%"class.blink::IDBOpenDBRequest"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.absl::optional", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !2

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %11 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %20 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %19) #6
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  br i1 %21, label %60, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 5
  %24 = load i8, i8* %23, align 4, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %60

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 4
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  store i8 1, i8* %27, align 8
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %29, i64* %32, align 8
  br label %33

33:                                               ; preds = %26, %31
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kBlockedE, align 8
  %35 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #6
  %36 = bitcast i8* %35 to %"class.blink::IDBVersionChangeEvent"*
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink21IDBVersionChangeEventC1ERKN3WTF12AtomicStringEmRKN4absl8optionalImEENS_5mojom11IDBDataLossERKNS1_6StringE(%"class.blink::IDBVersionChangeEvent"* %36, %"class.WTF::AtomicString"* dereferenceable(8) %34, i64 %1, %"class.absl::optional"* nonnull dereferenceable(16) %5, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %33, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  %55 = getelementptr inbounds i8, i8* %35, i64 -4
  %56 = bitcast i8* %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = or i16 %57, 1
  store atomic i16 %58, i16* %56 release, align 2
  %59 = bitcast i8* %35 to %"class.blink::Event"*
  call void @_ZN5blink10IDBRequest12EnqueueEventEPNS_5EventE(%"class.blink::IDBRequest"* %19, %"class.blink::Event"* %59) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #6
  br label %60

60:                                               ; preds = %15, %22, %54
  %61 = icmp eq i8* %18, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %60
  %63 = load i8, i8* %18, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #6
  br label %66

66:                                               ; preds = %60, %62, %65
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16IDBOpenDBRequest18ShouldEnqueueEventEv(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %2) #6
  %4 = icmp eq %"class.blink::ExecutionContext"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 5
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare void @_ZN5blink10IDBRequest12EnqueueEventEPNS_5EventE(%"class.blink::IDBRequest"*, %"class.blink::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequest20EnqueueUpgradeNeededElNSt3__110unique_ptrINS_14WebIDBDatabaseENS1_14default_deleteIS3_EEEERKNS_19IDBDatabaseMetadataENS_5mojom11IDBDataLossEN3WTF6StringE(%"class.blink::IDBOpenDBRequest"*, i64, %"class.blink::WebIDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64), i32, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.absl::optional", align 8
  %8 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %9 = alloca %"class.mojo::PendingRemote.185", align 4
  %10 = alloca %"class.base::TimeTicks", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"struct.blink::IDBDatabaseMetadata", align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %13, align 8
  %14 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17, !prof !2

17:                                               ; preds = %6
  %18 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %19 = bitcast %"class.base::TimeTicks"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %21 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %21, i64* %20, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %18, %"class.base::TimeTicks"* nonnull dereferenceable(8) %10, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  br label %23

23:                                               ; preds = %6, %17
  %24 = phi i64 [ -6148914691236517206, %6 ], [ %22, %17 ]
  %25 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), %17 ]
  %26 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %17 ]
  %27 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %28 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %27) #6
  %29 = icmp eq %"class.blink::ExecutionContext"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 5
  %32 = load i8, i8* %31, align 4, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %23, %30
  %35 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 7
  call void @_ZN5blink10IDBRequest15AsyncTraceState14RecordAndResetEv(%"class.blink::IDBRequest::AsyncTraceState"* %35) #6
  br label %148

36:                                               ; preds = %30
  %37 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %27) #6
  %38 = bitcast %"class.mojo::PendingAssociatedReceiver"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6
  %39 = bitcast %"class.mojo::PendingRemote.185"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 272) #6
  %41 = bitcast i8* %40 to %"class.blink::IDBDatabase"*
  %42 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %8, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 1, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %42, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %43) #6
  %44 = getelementptr inbounds %"class.mojo::PendingRemote.185", %"class.mojo::PendingRemote.185"* %9, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 5, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %44, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %45) #6
  call void @_ZN5blink11IDBDatabaseC1EPNS_16ExecutionContextENSt3__110unique_ptrINS_14WebIDBDatabaseENS3_14default_deleteIS5_EEEEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENS9_13PendingRemoteINSC_15ObservedFeatureEEE(%"class.blink::IDBDatabase"* %41, %"class.blink::ExecutionContext"* %37, %"class.blink::WebIDBDatabase"* %2, %"class.mojo::PendingAssociatedReceiver"* nonnull %8, %"class.mojo::PendingRemote.185"* nonnull %9) #6
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %44) #6
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %42) #6
  %46 = getelementptr inbounds i8, i8* %40, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  %50 = getelementptr inbounds i8, i8* %40, i64 72
  %51 = bitcast i8* %50 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %51) #6
  call void @_ZN5blink11IDBDatabase11SetMetadataERKNS_19IDBDatabaseMetadataE(%"class.blink::IDBDatabase"* %41, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64) %3) #6
  %52 = icmp eq i64 %1, -1
  %53 = select i1 %52, i64 0, i64 %1
  %54 = bitcast %"struct.blink::IDBDatabaseMetadata"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %54) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 64, i1 false)
  %55 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %3, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %3, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %3, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %3, i64 0, i32 5
  %61 = load i8, i8* %60, align 8, !range !3
  %62 = icmp ne i8 %61, 0
  call void @_ZN5blink19IDBDatabaseMetadataC1ERKN3WTF6StringElllb(%"struct.blink::IDBDatabaseMetadata"* nonnull %12, %"class.WTF::String"* dereferenceable(8) %55, i64 %57, i64 %53, i64 %59, i1 zeroext %62) #6
  %63 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %27) #6
  %64 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %65 = load %"class.blink::WebIDBTransaction"*, %"class.blink::WebIDBTransaction"** %64, align 8
  store %"class.blink::WebIDBTransaction"* null, %"class.blink::WebIDBTransaction"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = call %"class.blink::IDBTransaction"* @_ZN5blink14IDBTransaction19CreateVersionChangeEPNS_16ExecutionContextENSt3__110unique_ptrINS_17WebIDBTransactionENS3_14default_deleteIS5_EEEElPNS_11IDBDatabaseEPNS_16IDBOpenDBRequestERKNS_19IDBDatabaseMetadataE(%"class.blink::ExecutionContext"* %63, %"class.blink::WebIDBTransaction"* %65, i64 %67, %"class.blink::IDBDatabase"* %41, %"class.blink::IDBOpenDBRequest"* %0, %"struct.blink::IDBDatabaseMetadata"* nonnull dereferenceable(64) %12) #6
  %69 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 3
  %70 = ptrtoint %"class.blink::IDBTransaction"* %68 to i64
  %71 = bitcast %"class.blink::Member.13"* %69 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %36
  %75 = bitcast %"class.blink::IDBTransaction"* %68 to i8*
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #6
  br label %77

77:                                               ; preds = %36, %74
  %78 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64 64) #6
  %79 = bitcast i8* %78 to %"class.blink::IDBAny"*
  call void @_ZN5blink6IDBAnyC1EPNS_11IDBDatabaseE(%"class.blink::IDBAny"* %79, %"class.blink::IDBDatabase"* %41) #6
  %80 = getelementptr inbounds i8, i8* %78, i64 -4
  %81 = bitcast i8* %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = or i16 %82, 1
  store atomic i16 %83, i16* %81 release, align 2
  call void @_ZN5blink10IDBRequest9SetResultEPNS_6IDBAnyE(%"class.blink::IDBRequest"* %27, %"class.blink::IDBAny"* %79) #6
  %84 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 4
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, -1
  br i1 %86, label %87, label %88

87:                                               ; preds = %77
  store i64 1, i64* %84, align 8
  br label %88

88:                                               ; preds = %87, %77
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kUpgradeneededE, align 8
  %90 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #6
  %91 = bitcast i8* %90 to %"class.blink::IDBVersionChangeEvent"*
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #6
  store i8 1, i8* %92, align 8
  %93 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %94 = load i64, i64* %84, align 8
  store i64 %94, i64* %93, align 8
  call void @_ZN5blink21IDBVersionChangeEventC1ERKN3WTF12AtomicStringEmRKN4absl8optionalImEENS_5mojom11IDBDataLossERKNS1_6StringE(%"class.blink::IDBVersionChangeEvent"* %91, %"class.WTF::AtomicString"* dereferenceable(8) %89, i64 %53, %"class.absl::optional"* nonnull dereferenceable(16) %7, i32 %4, %"class.WTF::String"* nonnull dereferenceable(8) %11) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #6
  %95 = getelementptr inbounds i8, i8* %90, i64 -4
  %96 = bitcast i8* %95 to i16*
  %97 = load atomic i16, i16* %96 monotonic, align 2
  %98 = or i16 %97, 1
  store atomic i16 %98, i16* %96 release, align 2
  %99 = bitcast i8* %90 to %"class.blink::Event"*
  call void @_ZN5blink10IDBRequest12EnqueueEventEPNS_5EventE(%"class.blink::IDBRequest"* %27, %"class.blink::Event"* %99) #6
  %100 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %12, i64 0, i32 4, i32 0, i32 0
  %101 = load %"struct.WTF::KeyValuePair.92"*, %"struct.WTF::KeyValuePair.92"** %100, align 8
  %102 = icmp eq %"struct.WTF::KeyValuePair.92"* %101, null
  br i1 %102, label %130, label %103, !prof !2

103:                                              ; preds = %88
  %104 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %12, i64 0, i32 4, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %128, label %107

107:                                              ; preds = %103
  %108 = zext i32 %105 to i64
  br label %109

109:                                              ; preds = %125, %107
  %110 = phi i64 [ 0, %107 ], [ %126, %125 ]
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.92", %"struct.WTF::KeyValuePair.92"* %101, i64 %110, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, -1
  br i1 %113, label %125, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.92", %"struct.WTF::KeyValuePair.92"* %101, i64 %110, i32 1, i32 0
  %116 = load %"class.blink::IDBObjectStoreMetadata"*, %"class.blink::IDBObjectStoreMetadata"** %115, align 8
  %117 = icmp eq %"class.blink::IDBObjectStoreMetadata"* %116, null
  br i1 %117, label %125, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %116, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %119) #6
  %120 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  call void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"* nonnull %116) #6
  %124 = bitcast %"class.blink::IDBObjectStoreMetadata"* %116 to i8*
  call void @free(i8* %124) #6
  br label %125

125:                                              ; preds = %123, %118, %114, %109
  %126 = add nuw nsw i64 %110, 1
  %127 = icmp eq i64 %126, %108
  br i1 %127, label %128, label %109

128:                                              ; preds = %125, %103
  %129 = bitcast %"struct.WTF::KeyValuePair.92"* %101 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #6
  store %"struct.WTF::KeyValuePair.92"* null, %"struct.WTF::KeyValuePair.92"** %100, align 8
  br label %130

130:                                              ; preds = %128, %88
  %131 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %12, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #6
  br label %147

147:                                              ; preds = %130, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %54) #6
  br label %148

148:                                              ; preds = %147, %34
  %149 = phi %"class.blink::WebIDBDatabase"* [ null, %147 ], [ %2, %34 ]
  %150 = icmp eq i8* %26, null
  br i1 %150, label %155, label %151

151:                                              ; preds = %148
  %152 = load i8, i8* %26, align 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %26, i8* %25, i64 %24) #6
  br label %155

155:                                              ; preds = %148, %151, %154
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #6
  br label %171

171:                                              ; preds = %155, %167, %170
  %172 = icmp eq %"class.blink::WebIDBDatabase"* %149, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %171
  %174 = bitcast %"class.blink::WebIDBDatabase"* %149 to void (%"class.blink::WebIDBDatabase"*)***
  %175 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %175, i64 1
  %177 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %176, align 8
  call void %177(%"class.blink::WebIDBDatabase"* nonnull %149) #6
  br label %178

178:                                              ; preds = %171, %173
  ret void
}

declare void @_ZN5blink10IDBRequest15AsyncTraceState14RecordAndResetEv(%"class.blink::IDBRequest::AsyncTraceState"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"*) unnamed_addr #1

declare void @_ZN5blink11IDBDatabase11SetMetadataERKNS_19IDBDatabaseMetadataE(%"class.blink::IDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN5blink19IDBDatabaseMetadataC1ERKN3WTF6StringElllb(%"struct.blink::IDBDatabaseMetadata"*, %"class.WTF::String"* dereferenceable(8), i64, i64, i64, i1 zeroext) unnamed_addr #1

declare %"class.blink::IDBTransaction"* @_ZN5blink14IDBTransaction19CreateVersionChangeEPNS_16ExecutionContextENSt3__110unique_ptrINS_17WebIDBTransactionENS3_14default_deleteIS5_EEEElPNS_11IDBDatabaseEPNS_16IDBOpenDBRequestERKNS_19IDBDatabaseMetadataE(%"class.blink::ExecutionContext"*, %"class.blink::WebIDBTransaction"*, i64, %"class.blink::IDBDatabase"*, %"class.blink::IDBOpenDBRequest"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN5blink10IDBRequest9SetResultEPNS_6IDBAnyE(%"class.blink::IDBRequest"*, %"class.blink::IDBAny"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequest15EnqueueResponseENSt3__110unique_ptrINS_14WebIDBDatabaseENS1_14default_deleteIS3_EEEERKNS_19IDBDatabaseMetadataE(%"class.blink::IDBOpenDBRequest"*, %"class.blink::WebIDBDatabase"*, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::PendingAssociatedReceiver", align 8
  %5 = alloca %"class.mojo::PendingRemote.185", align 4
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %12 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  br label %16

16:                                               ; preds = %3, %10
  %17 = phi i64 [ -6148914691236517206, %3 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %10 ]
  %20 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %21 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %20) #6
  %22 = icmp eq %"class.blink::ExecutionContext"* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 5
  %25 = load i8, i8* %24, align 4, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %16, %23
  %28 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 7
  call void @_ZN5blink10IDBRequest15AsyncTraceState14RecordAndResetEv(%"class.blink::IDBRequest::AsyncTraceState"* %28) #6
  br label %67

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %31 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %30, align 8
  %32 = icmp eq %"class.blink::IDBAny"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = call %"class.blink::IDBDatabase"* @_ZNK5blink6IDBAny11IdbDatabaseEv(%"class.blink::IDBAny"* nonnull %31) #6
  br label %57

35:                                               ; preds = %29
  %36 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %20) #6
  %37 = bitcast %"class.mojo::PendingAssociatedReceiver"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  %38 = bitcast %"class.mojo::PendingRemote.185"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6
  %39 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 272) #6
  %40 = bitcast i8* %39 to %"class.blink::IDBDatabase"*
  %41 = getelementptr inbounds %"class.mojo::PendingAssociatedReceiver", %"class.mojo::PendingAssociatedReceiver"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 1, i32 0
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %41, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8) %42) #6
  %43 = getelementptr inbounds %"class.mojo::PendingRemote.185", %"class.mojo::PendingRemote.185"* %5, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 5, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %43, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %44) #6
  call void @_ZN5blink11IDBDatabaseC1EPNS_16ExecutionContextENSt3__110unique_ptrINS_14WebIDBDatabaseENS3_14default_deleteIS5_EEEEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENS9_13PendingRemoteINSC_15ObservedFeatureEEE(%"class.blink::IDBDatabase"* %40, %"class.blink::ExecutionContext"* %36, %"class.blink::WebIDBDatabase"* %1, %"class.mojo::PendingAssociatedReceiver"* nonnull %4, %"class.mojo::PendingRemote.185"* nonnull %5) #6
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %43) #6
  call void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"* nonnull %41) #6
  %45 = getelementptr inbounds i8, i8* %39, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6
  %49 = getelementptr inbounds i8, i8* %39, i64 72
  %50 = bitcast i8* %49 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %50) #6
  %51 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64 64) #6
  %52 = bitcast i8* %51 to %"class.blink::IDBAny"*
  call void @_ZN5blink6IDBAnyC1EPNS_11IDBDatabaseE(%"class.blink::IDBAny"* %52, %"class.blink::IDBDatabase"* %40) #6
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  call void @_ZN5blink10IDBRequest9SetResultEPNS_6IDBAnyE(%"class.blink::IDBRequest"* %20, %"class.blink::IDBAny"* %52) #6
  br label %57

57:                                               ; preds = %35, %33
  %58 = phi %"class.blink::IDBDatabase"* [ %40, %35 ], [ %34, %33 ]
  %59 = phi %"class.blink::WebIDBDatabase"* [ null, %35 ], [ %1, %33 ]
  call void @_ZN5blink11IDBDatabase11SetMetadataERKNS_19IDBDatabaseMetadataE(%"class.blink::IDBDatabase"* %58, %"struct.blink::IDBDatabaseMetadata"* dereferenceable(64) %2) #6
  %60 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kSuccessE, align 8
  %61 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #6
  %62 = bitcast i8* %61 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %62, %"class.WTF::AtomicString"* dereferenceable(8) %60, i32 1, i32 1, i32 1) #6
  %63 = getelementptr inbounds i8, i8* %61, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  call void @_ZN5blink10IDBRequest12EnqueueEventEPNS_5EventE(%"class.blink::IDBRequest"* %20, %"class.blink::Event"* %62) #6
  br label %67

67:                                               ; preds = %57, %27
  %68 = phi %"class.blink::WebIDBDatabase"* [ %59, %57 ], [ %1, %27 ]
  %69 = icmp eq i8* %19, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = load i8, i8* %19, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %74, label %73

73:                                               ; preds = %70
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #6
  br label %74

74:                                               ; preds = %67, %70, %73
  %75 = icmp eq %"class.blink::WebIDBDatabase"* %68, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %74
  %77 = bitcast %"class.blink::WebIDBDatabase"* %68 to void (%"class.blink::WebIDBDatabase"*)***
  %78 = load void (%"class.blink::WebIDBDatabase"*)**, void (%"class.blink::WebIDBDatabase"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %78, i64 1
  %80 = load void (%"class.blink::WebIDBDatabase"*)*, void (%"class.blink::WebIDBDatabase"*)** %79, align 8
  call void %80(%"class.blink::WebIDBDatabase"* nonnull %68) #6
  br label %81

81:                                               ; preds = %74, %76
  ret void
}

declare %"class.blink::IDBDatabase"* @_ZNK5blink6IDBAny11IdbDatabaseEv(%"class.blink::IDBAny"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBOpenDBRequest15EnqueueResponseEl(%"class.blink::IDBOpenDBRequest"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !2

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #6
  %11 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #6
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #6
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 66, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %20 = call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %19) #6
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 5
  %24 = load i8, i8* %23, align 4, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %15, %22
  %27 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 7
  call void @_ZN5blink10IDBRequest15AsyncTraceState14RecordAndResetEv(%"class.blink::IDBRequest::AsyncTraceState"* %27) #6
  br label %64

28:                                               ; preds = %22
  %29 = icmp eq i64 %1, -1
  %30 = select i1 %29, i64 0, i64 %1
  %31 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64 64) #6
  %32 = bitcast i8* %31 to %"class.blink::IDBAny"*
  call void @_ZN5blink6IDBAnyC1ENS0_4TypeE(%"class.blink::IDBAny"* %32, i32 0) #6
  %33 = getelementptr inbounds i8, i8* %31, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  call void @_ZN5blink10IDBRequest9SetResultEPNS_6IDBAnyE(%"class.blink::IDBRequest"* %19, %"class.blink::IDBAny"* %32) #6
  %37 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kSuccessE, align 8
  %38 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #6
  %39 = bitcast i8* %38 to %"class.blink::IDBVersionChangeEvent"*
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #6
  store i8 0, i8* %40, align 8
  %41 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #6
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink21IDBVersionChangeEventC1ERKN3WTF12AtomicStringEmRKN4absl8optionalImEENS_5mojom11IDBDataLossERKNS1_6StringE(%"class.blink::IDBVersionChangeEvent"* %39, %"class.WTF::AtomicString"* dereferenceable(8) %37, i64 %30, %"class.absl::optional"* nonnull dereferenceable(16) %3, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %28
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #6
  br label %58

58:                                               ; preds = %28, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #6
  %59 = getelementptr inbounds i8, i8* %38, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  %63 = bitcast i8* %38 to %"class.blink::Event"*
  call void @_ZN5blink10IDBRequest12EnqueueEventEPNS_5EventE(%"class.blink::IDBRequest"* %19, %"class.blink::Event"* %63) #6
  br label %64

64:                                               ; preds = %58, %26
  %65 = icmp eq i8* %18, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = load i8, i8* %18, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #6
  br label %70

70:                                               ; preds = %64, %66, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventE(%"class.blink::IDBOpenDBRequest"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = and i16 %6, 256
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %11 = tail call i32 @_ZN5blink10IDBRequest21DispatchEventInternalERNS_5EventE(%"class.blink::IDBRequest"* %10, %"class.blink::Event"* dereferenceable(104) %1) #6
  br label %83

12:                                               ; preds = %2
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kSuccessE, align 8
  %14 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, %17
  br i1 %18, label %19, label %34

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %22 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %26, label %34

26:                                               ; preds = %19
  %27 = tail call %"class.blink::IDBDatabase"* @_ZNK5blink6IDBAny11IdbDatabaseEv(%"class.blink::IDBAny"* %22) #6
  %28 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %27, i64 0, i32 9
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  tail call void @_ZN5blink10IDBRequest9SetResultEPNS_6IDBAnyE(%"class.blink::IDBRequest"* %20, %"class.blink::IDBAny"* null) #6
  %32 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #6
  store i32 20, i32* %3, align 4
  %33 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA27_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, [27 x i8]* nonnull dereferenceable(27) @.str.3) #6
  call void @_ZN5blink10IDBRequest14HandleResponseEPNS_12DOMExceptionE(%"class.blink::IDBRequest"* %20, %"class.blink::DOMException"* %33) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  br label %83

34:                                               ; preds = %26, %19, %12
  %35 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 7
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %80

38:                                               ; preds = %34
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %39, %40
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kUpgradeneededE, align 8
  %44 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %39, %45
  br i1 %46, label %47, label %80

47:                                               ; preds = %42, %38
  %48 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %49 = load %"class.blink::IDBAny"*, %"class.blink::IDBAny"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::IDBAny", %"class.blink::IDBAny"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 4
  br i1 %52, label %53, label %80

53:                                               ; preds = %47
  store i8 1, i8* %35, align 8
  %54 = tail call %"class.blink::IDBDatabase"* @_ZNK5blink6IDBAny11IdbDatabaseEv(%"class.blink::IDBAny"* %49) #6
  %55 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #6
  %56 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %57 = tail call i64 @_ZN4base4Time3NowEv() #6
  %58 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = sub nsw i64 %57, %59
  store i64 %60, i64* %56, align 8
  %61 = getelementptr inbounds %"class.blink::IDBDatabase", %"class.blink::IDBDatabase"* %54, i64 0, i32 4, i32 5
  %62 = load i8, i8* %61, align 8, !range !3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %53
  %65 = load atomic i64, i64* @_ZZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %66 = inttoptr i64 %65 to %"class.base::HistogramBase"*
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %64
  %69 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #6
  %70 = ptrtoint %"class.base::HistogramBase"* %69 to i64
  store atomic i64 %70, i64* @_ZZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %78

71:                                               ; preds = %53
  %72 = load atomic i64, i64* @_ZZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %73 = inttoptr i64 %72 to %"class.base::HistogramBase"*
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %71
  %76 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #6
  %77 = ptrtoint %"class.base::HistogramBase"* %76 to i64
  store atomic i64 %77, i64* @_ZZN5blink16IDBOpenDBRequest21DispatchEventInternalERNS_5EventEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %78

78:                                               ; preds = %75, %71, %68, %64
  %79 = phi %"class.base::HistogramBase"* [ %66, %64 ], [ %69, %68 ], [ %73, %71 ], [ %76, %75 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %79, %"class.base::TimeDelta"* nonnull dereferenceable(8) %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #6
  br label %80

80:                                               ; preds = %34, %78, %47, %42
  %81 = getelementptr inbounds %"class.blink::IDBOpenDBRequest", %"class.blink::IDBOpenDBRequest"* %0, i64 0, i32 0
  %82 = call i32 @_ZN5blink10IDBRequest21DispatchEventInternalERNS_5EventE(%"class.blink::IDBRequest"* %81, %"class.blink::Event"* dereferenceable(104) %1) #6
  br label %83

83:                                               ; preds = %80, %31, %9
  %84 = phi i32 [ 3, %31 ], [ %82, %80 ], [ %11, %9 ]
  ret i32 %84
}

declare i32 @_ZN5blink10IDBRequest21DispatchEventInternalERNS_5EventE(%"class.blink::IDBRequest"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare void @_ZN5blink10IDBRequest14HandleResponseEPNS_12DOMExceptionE(%"class.blink::IDBRequest"*, %"class.blink::DOMException"*) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10IDBRequest18HasPendingActivityEv(%"class.blink::IDBRequest"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #6
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16IDBOpenDBRequest18GetWrapperTypeInfoEv(%"class.blink::IDBOpenDBRequest"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16IDBOpenDBRequest18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.9, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.9, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_10IDBRequestEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::IDBRequest"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink10IDBRequest19GetExecutionContextEv(%"class.blink::IDBRequest"* %3) #6
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #6
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_10IDBRequestEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::IDBRequest"*
  %4 = tail call zeroext i1 @_ZNK5blink10IDBRequest18HasPendingActivityEv(%"class.blink::IDBRequest"* %3) #6
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo29ScopedInterfaceEndpointHandleD1Ev(%"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22IDBObjectStoreMetadataD2Ev(%"class.blink::IDBObjectStoreMetadata"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.76"*, %"struct.WTF::KeyValuePair.76"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.76"* %3, null
  br i1 %4, label %32, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.76", %"struct.WTF::KeyValuePair.76"* %3, i64 %12, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, -1
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.76", %"struct.WTF::KeyValuePair.76"* %3, i64 %12, i32 1, i32 0
  %18 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %17, align 8
  %19 = icmp eq %"class.blink::IDBIndexMetadata"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #6
  %22 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  tail call void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"* nonnull %18) #6
  %26 = bitcast %"class.blink::IDBIndexMetadata"* %18 to i8*
  tail call void @free(i8* %26) #6
  br label %27

27:                                               ; preds = %25, %20, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair.76"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #6
  store %"struct.WTF::KeyValuePair.76"* null, %"struct.WTF::KeyValuePair.76"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2
  %34 = getelementptr inbounds %"class.WTF::Vector.67", %"class.WTF::Vector.67"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %36 = icmp eq %"class.WTF::String"* %35, null
  br i1 %36, label %71, label %37, !prof !2

37:                                               ; preds = %32
  %38 = bitcast %"class.WTF::String"* %35 to i8*
  %39 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %69, label %42, !prof !4

42:                                               ; preds = %37
  %43 = zext i32 %40 to i64
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %43
  br label %45

45:                                               ; preds = %63, %42
  %46 = phi %"class.WTF::String"* [ %64, %63 ], [ %35, %42 ]
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #6
  br label %63

63:                                               ; preds = %62, %59, %45
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 1
  %65 = icmp eq %"class.WTF::String"* %64, %44
  br i1 %65, label %66, label %45

66:                                               ; preds = %63
  store i32 0, i32* %39, align 4
  %67 = bitcast %"class.WTF::Vector.67"* %33 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %37
  %70 = phi i8* [ %68, %66 ], [ %38, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %70) #6
  store %"class.WTF::String"* null, %"class.WTF::String"** %34, align 8
  br label %71

71:                                               ; preds = %69, %32
  %72 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #6
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 1, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #6
  br label %105

105:                                              ; preds = %88, %101, %104
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.67", %"class.WTF::Vector.67"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !2

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #6
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.67"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #6
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %38, %1
  %41 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #6
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #6
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #6
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #6

declare void @_ZN4mojo29ScopedInterfaceEndpointHandleC1EOS0_(%"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink21IDBVersionChangeEventC1ERKN3WTF12AtomicStringEmRKN4absl8optionalImEENS_5mojom11IDBDataLossERKNS1_6StringE(%"class.blink::IDBVersionChangeEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i64, %"class.absl::optional"* dereferenceable(16), i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11IDBDatabaseC1EPNS_16ExecutionContextENSt3__110unique_ptrINS_14WebIDBDatabaseENS3_14default_deleteIS5_EEEEN4mojo25PendingAssociatedReceiverINS_5mojom5blink20IDBDatabaseCallbacksEEENS9_13PendingRemoteINSC_15ObservedFeatureEEE(%"class.blink::IDBDatabase"*, %"class.blink::ExecutionContext"*, %"class.blink::WebIDBDatabase"*, %"class.mojo::PendingAssociatedReceiver"*, %"class.mojo::PendingRemote.185"*) unnamed_addr #1

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink6IDBAnyC1EPNS_11IDBDatabaseE(%"class.blink::IDBAny"*, %"class.blink::IDBDatabase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_6IDBAnyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_6IDBAnyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6IDBAnyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_6IDBAnyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDBAny"*
  tail call void @_ZNK5blink6IDBAny5TraceEPNS_7VisitorE(%"class.blink::IDBAny"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_6IDBAnyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDBAny"*
  tail call void @_ZN5blink6IDBAnyD1Ev(%"class.blink::IDBAny"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_6IDBAnyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink6IDBAny5TraceEPNS_7VisitorE(%"class.blink::IDBAny"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink6IDBAnyD1Ev(%"class.blink::IDBAny"*) unnamed_addr #2

declare void @_ZN5blink6IDBAnyC1ENS0_4TypeE(%"class.blink::IDBAny"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA27_KcEEEPS1_DpOT_(i32* dereferenceable(4), [27 x i8]* dereferenceable(27)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #6
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  %9 = getelementptr inbounds [27 x i8], [27 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [27 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #8
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #6
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #6
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #6
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
