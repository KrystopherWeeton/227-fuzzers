; ModuleID = '../../third_party/opus/src/silk/NSQ_del_dec.c'
source_filename = "../../third_party/opus/src/silk/NSQ_del_dec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.silk_encoder_state = type { [2 x i32], i32, i32, %struct.silk_LP_state, %struct.silk_VAD_state, %struct.silk_nsq_state, [16 x i16], i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.silk_NLSF_CB_struct*, [4 x i32], i32, i32, [3 x i8], i8, [3 x i32], %struct.SideInfoIndices, [320 x i8], i32, [322 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16, %struct._silk_resampler_state_struct, i32, i32, i32, i32, i32, i32, [3 x %struct.SideInfoIndices], [3 x [320 x i8]] }
%struct.silk_LP_state = type { [2 x i32], i32, i32, i32 }
%struct.silk_VAD_state = type { [2 x i32], [2 x i32], [2 x i32], [4 x i32], [4 x i32], i16, [4 x i32], [4 x i32], [4 x i32], i32 }
%struct.silk_nsq_state = type { [640 x i16], [640 x i32], [96 x i32], [24 x i32], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.silk_NLSF_CB_struct = type { i16, i16, i16, i16, i8*, i16*, i8*, i8*, i8*, i8*, i8*, i16* }
%struct.SideInfoIndices = type { [4 x i8], [4 x i8], [17 x i8], i16, i8, i8, i8, i8, i8, i8, i8 }
%struct._silk_resampler_state_struct = type { [6 x i32], %union.anon, [48 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i16* }
%union.anon = type { [36 x i32] }
%struct.NSQ_del_dec_struct = type { [96 x i32], [40 x i32], [40 x i32], [40 x i32], [40 x i32], [40 x i32], [24 x i32], i32, i32, i32, i32, i32 }
%struct.NSQ_sample_struct = type { i32, i32, i32, i32, i32, i32, i32 }

@silk_Quantization_Offsets_Q10 = external local_unnamed_addr constant [2 x [2 x i16]], align 2
@.str = private unnamed_addr constant [32 x i8] c"assertion failed: start_idx > 0\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../third_party/opus/src/silk/NSQ_del_dec.c\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"assertion failed: nStatesDelayedDecision > 0\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"assertion failed: ( shapingLPCOrder & 1 ) == 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_NSQ_del_dec_c(%struct.silk_encoder_state* nocapture readonly, %struct.silk_nsq_state*, %struct.SideInfoIndices* nocapture, i16* nocapture readonly, i8* nocapture, i16*, i16* nocapture readonly, i16* nocapture readonly, i32* nocapture readonly, i32* nocapture readonly, i32* nocapture readonly, i32* nocapture readonly, i32* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %16 = alloca i32, align 4
  %17 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #6
  store i32 -1431655766, i32* %16, align 4
  %18 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 32
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = mul nsw i64 %22, 1300
  %24 = alloca %struct.NSQ_del_dec_struct, i64 %22, align 16
  %25 = bitcast %struct.NSQ_del_dec_struct* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 %23, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 0, i64 %23, i1 false)
  %26 = icmp sgt i32 %21, 0
  br i1 %26, label %27, label %63

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %2, i64 0, i32 10
  %29 = load i8, i8* %28, align 2
  %30 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 23
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, -1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 1, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 2, i64 0
  %41 = bitcast i32* %40 to i8*
  %42 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 3, i64 0
  %43 = bitcast i32* %42 to i8*
  %44 = zext i8 %29 to i64
  %45 = zext i32 %21 to i64
  br label %46

46:                                               ; preds = %46, %27
  %47 = phi i64 [ 0, %27 ], [ %61, %46 ]
  %48 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47
  %49 = add nuw nsw i64 %47, %44
  %50 = trunc i64 %49 to i32
  %51 = and i32 %50, 3
  %52 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 9
  store i32 %51, i32* %52, align 4
  %53 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 10
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 11
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 7
  store i32 %31, i32* %55, align 4
  %56 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 8
  store i32 %33, i32* %56, align 4
  %57 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 5, i64 0
  store i32 %39, i32* %57, align 4
  %58 = bitcast %struct.NSQ_del_dec_struct* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %41, i64 64, i1 false)
  %59 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %47, i32 6, i64 0
  %60 = bitcast i32* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %43, i64 96, i1 false)
  %61 = add nuw nsw i64 %47, 1
  %62 = icmp eq i64 %61, %45
  br i1 %62, label %63, label %46

63:                                               ; preds = %46, %15
  %64 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %2, i64 0, i32 5
  %65 = load i8, i8* %64, align 1
  %66 = ashr i8 %65, 1
  %67 = sext i8 %66 to i64
  %68 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %2, i64 0, i32 6
  %69 = load i8, i8* %68, align 2
  %70 = sext i8 %69 to i64
  %71 = getelementptr inbounds [2 x [2 x i16]], [2 x [2 x i16]]* @silk_Quantization_Offsets_Q10, i64 0, i64 %67, i64 %70
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i32
  store i32 0, i32* %16, align 4
  %74 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 22
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 40
  %77 = select i1 %76, i32 %75, i32 40
  %78 = icmp eq i8 %65, 2
  br i1 %78, label %79, label %176

79:                                               ; preds = %63
  %80 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 20
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %182

83:                                               ; preds = %79
  %84 = sext i32 %81 to i64
  %85 = icmp ult i32 %81, 8
  br i1 %85, label %163, label %86

86:                                               ; preds = %83
  %87 = and i64 %84, -8
  %88 = insertelement <4 x i32> undef, i32 %77, i32 0
  %89 = shufflevector <4 x i32> %88, <4 x i32> undef, <4 x i32> zeroinitializer
  %90 = add nsw i64 %87, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 1
  %94 = icmp eq i64 %90, 0
  br i1 %94, label %130, label %95

95:                                               ; preds = %86
  %96 = sub nuw nsw i64 %92, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %127, %97 ]
  %99 = phi <4 x i32> [ %89, %95 ], [ %125, %97 ]
  %100 = phi <4 x i32> [ %89, %95 ], [ %126, %97 ]
  %101 = phi i64 [ %96, %95 ], [ %128, %97 ]
  %102 = getelementptr inbounds i32, i32* %12, i64 %98
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4
  %105 = getelementptr inbounds i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4
  %108 = add nsw <4 x i32> %104, <i32 -3, i32 -3, i32 -3, i32 -3>
  %109 = add nsw <4 x i32> %107, <i32 -3, i32 -3, i32 -3, i32 -3>
  %110 = icmp slt <4 x i32> %99, %108
  %111 = icmp slt <4 x i32> %100, %109
  %112 = select <4 x i1> %110, <4 x i32> %99, <4 x i32> %108
  %113 = select <4 x i1> %111, <4 x i32> %100, <4 x i32> %109
  %114 = or i64 %98, 8
  %115 = getelementptr inbounds i32, i32* %12, i64 %114
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = add nsw <4 x i32> %117, <i32 -3, i32 -3, i32 -3, i32 -3>
  %122 = add nsw <4 x i32> %120, <i32 -3, i32 -3, i32 -3, i32 -3>
  %123 = icmp slt <4 x i32> %112, %121
  %124 = icmp slt <4 x i32> %113, %122
  %125 = select <4 x i1> %123, <4 x i32> %112, <4 x i32> %121
  %126 = select <4 x i1> %124, <4 x i32> %113, <4 x i32> %122
  %127 = add i64 %98, 16
  %128 = add i64 %101, -2
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %97, !llvm.loop !2

130:                                              ; preds = %97, %86
  %131 = phi <4 x i32> [ undef, %86 ], [ %125, %97 ]
  %132 = phi <4 x i32> [ undef, %86 ], [ %126, %97 ]
  %133 = phi i64 [ 0, %86 ], [ %127, %97 ]
  %134 = phi <4 x i32> [ %89, %86 ], [ %125, %97 ]
  %135 = phi <4 x i32> [ %89, %86 ], [ %126, %97 ]
  %136 = icmp eq i64 %93, 0
  br i1 %136, label %150, label %137

137:                                              ; preds = %130
  %138 = getelementptr inbounds i32, i32* %12, i64 %133
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4
  %141 = getelementptr inbounds i32, i32* %138, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = add nsw <4 x i32> %140, <i32 -3, i32 -3, i32 -3, i32 -3>
  %145 = add nsw <4 x i32> %143, <i32 -3, i32 -3, i32 -3, i32 -3>
  %146 = icmp slt <4 x i32> %135, %145
  %147 = select <4 x i1> %146, <4 x i32> %135, <4 x i32> %145
  %148 = icmp slt <4 x i32> %134, %144
  %149 = select <4 x i1> %148, <4 x i32> %134, <4 x i32> %144
  br label %150

150:                                              ; preds = %130, %137
  %151 = phi <4 x i32> [ %131, %130 ], [ %149, %137 ]
  %152 = phi <4 x i32> [ %132, %130 ], [ %147, %137 ]
  %153 = icmp slt <4 x i32> %151, %152
  %154 = select <4 x i1> %153, <4 x i32> %151, <4 x i32> %152
  %155 = shufflevector <4 x i32> %154, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %156 = icmp slt <4 x i32> %154, %155
  %157 = select <4 x i1> %156, <4 x i32> %154, <4 x i32> %155
  %158 = shufflevector <4 x i32> %157, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %159 = icmp slt <4 x i32> %157, %158
  %160 = select <4 x i1> %159, <4 x i32> %157, <4 x i32> %158
  %161 = extractelement <4 x i32> %160, i32 0
  %162 = icmp eq i64 %87, %84
  br i1 %162, label %182, label %163

163:                                              ; preds = %150, %83
  %164 = phi i64 [ 0, %83 ], [ %87, %150 ]
  %165 = phi i32 [ %77, %83 ], [ %161, %150 ]
  br label %166

166:                                              ; preds = %163, %166
  %167 = phi i64 [ %174, %166 ], [ %164, %163 ]
  %168 = phi i32 [ %173, %166 ], [ %165, %163 ]
  %169 = getelementptr inbounds i32, i32* %12, i64 %167
  %170 = load i32, i32* %169, align 4
  %171 = add nsw i32 %170, -3
  %172 = icmp slt i32 %168, %171
  %173 = select i1 %172, i32 %168, i32 %171
  %174 = add nuw nsw i64 %167, 1
  %175 = icmp slt i64 %174, %84
  br i1 %175, label %166, label %182, !llvm.loop !4

176:                                              ; preds = %63
  %177 = icmp sgt i32 %19, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %176
  %179 = add nsw i32 %19, -3
  %180 = icmp slt i32 %77, %179
  %181 = select i1 %180, i32 %77, i32 %179
  br label %182

182:                                              ; preds = %166, %150, %79, %176, %178
  %183 = phi i32 [ %181, %178 ], [ %77, %176 ], [ %77, %79 ], [ %161, %150 ], [ %173, %166 ]
  %184 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %2, i64 0, i32 7
  %185 = load i8, i8* %184, align 1
  %186 = icmp ne i8 %185, 4
  %187 = zext i1 %186 to i32
  %188 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 23
  %189 = load i32, i32* %188, align 8
  %190 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 21
  %191 = load i32, i32* %190, align 8
  %192 = add nsw i32 %191, %189
  %193 = sext i32 %192 to i64
  %194 = shl nsw i64 %193, 2
  %195 = alloca i32, i64 %193, align 16
  %196 = bitcast i32* %195 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %196, i8 -86, i64 %194, i1 false)
  %197 = shl nsw i64 %193, 1
  %198 = alloca i16, i64 %193, align 16
  %199 = bitcast i16* %198 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %199, i8 -86, i64 %197, i1 false)
  %200 = sext i32 %75 to i64
  %201 = shl nsw i64 %200, 2
  %202 = alloca i32, i64 %200, align 16
  %203 = bitcast i32* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %203, i8 -86, i64 %201, i1 false)
  %204 = alloca [160 x i8], align 16
  %205 = getelementptr inbounds [160 x i8], [160 x i8]* %204, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %205, i8 -86, i64 160, i1 false)
  %206 = bitcast [160 x i8]* %204 to i32*
  %207 = sext i32 %189 to i64
  %208 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 0, i64 %207
  %209 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 8
  store i32 %189, i32* %209, align 4
  %210 = load i32, i32* %188, align 8
  %211 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 7
  store i32 %210, i32* %211, align 4
  %212 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 20
  %213 = load i32, i32* %212, align 4
  %214 = icmp sgt i32 %213, 0
  br i1 %214, label %215, label %1059

215:                                              ; preds = %182
  %216 = xor i32 %187, 1
  %217 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 11
  %218 = shl nuw nsw i32 %187, 1
  %219 = xor i32 %218, 3
  %220 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 0, i32 11
  %221 = icmp sgt i32 %183, 0
  %222 = getelementptr inbounds i32, i32* %11, i64 1
  %223 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 35
  %224 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 57
  %225 = zext i32 %14 to i64
  %226 = shl i64 %225, 48
  %227 = ashr exact i64 %226, 48
  %228 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 10
  %229 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 34
  %230 = getelementptr inbounds %struct.silk_encoder_state, %struct.silk_encoder_state* %0, i64 0, i32 43
  %231 = sext i32 %183 to i64
  %232 = zext i32 %183 to i64
  br label %233

233:                                              ; preds = %215, %1036
  %234 = phi i64 [ 0, %215 ], [ %1055, %1036 ]
  %235 = phi i16* [ %208, %215 ], [ %1054, %1036 ]
  %236 = phi i32 [ 0, %215 ], [ %1046, %1036 ]
  %237 = phi i32 [ %19, %215 ], [ %438, %1036 ]
  %238 = phi i16* [ %3, %215 ], [ %1052, %1036 ]
  %239 = phi i8* [ %4, %215 ], [ %1053, %1036 ]
  %240 = trunc i64 %234 to i32
  %241 = lshr i32 %240, 1
  %242 = or i32 %241, %216
  %243 = shl nsw i32 %242, 4
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds i16, i16* %5, i64 %244
  %246 = mul i64 %234, 5
  %247 = and i64 %246, 4294967295
  %248 = getelementptr inbounds i16, i16* %6, i64 %247
  %249 = mul i64 %234, 24
  %250 = and i64 %249, 4294967288
  %251 = getelementptr inbounds i16, i16* %7, i64 %250
  %252 = getelementptr inbounds i32, i32* %8, i64 %234
  %253 = load i32, i32* %252, align 4
  %254 = ashr i32 %253, 2
  %255 = lshr i32 %253, 1
  %256 = shl i32 %255, 16
  %257 = or i32 %256, %254
  store i32 0, i32* %217, align 4
  %258 = load i8, i8* %64, align 1
  %259 = icmp eq i8 %258, 2
  br i1 %259, label %260, label %435

260:                                              ; preds = %233
  %261 = getelementptr inbounds i32, i32* %12, i64 %234
  %262 = load i32, i32* %261, align 4
  %263 = and i32 %219, %240
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %435

265:                                              ; preds = %260
  %266 = icmp eq i64 %234, 2
  br i1 %266, label %267, label %414

267:                                              ; preds = %265
  %268 = load i32, i32* %20, align 4
  %269 = icmp sgt i32 %268, 1
  br i1 %269, label %270, label %299

270:                                              ; preds = %267
  %271 = load i32, i32* %220, align 16
  %272 = sext i32 %268 to i64
  %273 = add nsw i64 %272, -1
  %274 = add nsw i64 %272, -2
  %275 = and i64 %273, 3
  %276 = icmp ult i64 %274, 3
  br i1 %276, label %279, label %277

277:                                              ; preds = %270
  %278 = sub nsw i64 %273, %275
  br label %309

279:                                              ; preds = %309, %270
  %280 = phi i32 [ undef, %270 ], [ %339, %309 ]
  %281 = phi i64 [ 1, %270 ], [ %341, %309 ]
  %282 = phi i32 [ %271, %270 ], [ %340, %309 ]
  %283 = phi i32 [ 0, %270 ], [ %339, %309 ]
  %284 = icmp eq i64 %275, 0
  br i1 %284, label %299, label %285

285:                                              ; preds = %279, %285
  %286 = phi i64 [ %296, %285 ], [ %281, %279 ]
  %287 = phi i32 [ %295, %285 ], [ %282, %279 ]
  %288 = phi i32 [ %294, %285 ], [ %283, %279 ]
  %289 = phi i64 [ %297, %285 ], [ %275, %279 ]
  %290 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %286, i32 11
  %291 = load i32, i32* %290, align 4
  %292 = icmp slt i32 %291, %287
  %293 = trunc i64 %286 to i32
  %294 = select i1 %292, i32 %293, i32 %288
  %295 = select i1 %292, i32 %291, i32 %287
  %296 = add nuw nsw i64 %286, 1
  %297 = add i64 %289, -1
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %285, !llvm.loop !6

299:                                              ; preds = %279, %285, %267
  %300 = phi i32 [ 0, %267 ], [ %280, %279 ], [ %294, %285 ]
  %301 = icmp sgt i32 %268, 0
  br i1 %301, label %302, label %364

302:                                              ; preds = %299
  %303 = zext i32 %300 to i64
  %304 = zext i32 %268 to i64
  %305 = and i64 %304, 1
  %306 = icmp eq i32 %268, 1
  br i1 %306, label %355, label %307

307:                                              ; preds = %302
  %308 = sub nsw i64 %304, %305
  br label %344

309:                                              ; preds = %309, %277
  %310 = phi i64 [ 1, %277 ], [ %341, %309 ]
  %311 = phi i32 [ %271, %277 ], [ %340, %309 ]
  %312 = phi i32 [ 0, %277 ], [ %339, %309 ]
  %313 = phi i64 [ %278, %277 ], [ %342, %309 ]
  %314 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %310, i32 11
  %315 = load i32, i32* %314, align 4
  %316 = icmp slt i32 %315, %311
  %317 = trunc i64 %310 to i32
  %318 = select i1 %316, i32 %317, i32 %312
  %319 = select i1 %316, i32 %315, i32 %311
  %320 = add nuw nsw i64 %310, 1
  %321 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %320, i32 11
  %322 = load i32, i32* %321, align 4
  %323 = icmp slt i32 %322, %319
  %324 = trunc i64 %320 to i32
  %325 = select i1 %323, i32 %324, i32 %318
  %326 = select i1 %323, i32 %322, i32 %319
  %327 = add nuw nsw i64 %310, 2
  %328 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %327, i32 11
  %329 = load i32, i32* %328, align 4
  %330 = icmp slt i32 %329, %326
  %331 = trunc i64 %327 to i32
  %332 = select i1 %330, i32 %331, i32 %325
  %333 = select i1 %330, i32 %329, i32 %326
  %334 = add nuw nsw i64 %310, 3
  %335 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %334, i32 11
  %336 = load i32, i32* %335, align 4
  %337 = icmp slt i32 %336, %333
  %338 = trunc i64 %334 to i32
  %339 = select i1 %337, i32 %338, i32 %332
  %340 = select i1 %337, i32 %336, i32 %333
  %341 = add nuw nsw i64 %310, 4
  %342 = add i64 %313, -4
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %279, label %309

344:                                              ; preds = %1237, %307
  %345 = phi i64 [ 0, %307 ], [ %1238, %1237 ]
  %346 = phi i64 [ %308, %307 ], [ %1239, %1237 ]
  %347 = icmp eq i64 %345, %303
  br i1 %347, label %352, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %345, i32 11
  %350 = load i32, i32* %349, align 8
  %351 = add nsw i32 %350, 134217727
  store i32 %351, i32* %349, align 8
  br label %352

352:                                              ; preds = %344, %348
  %353 = or i64 %345, 1
  %354 = icmp eq i64 %353, %303
  br i1 %354, label %1237, label %1233

355:                                              ; preds = %1237, %302
  %356 = phi i64 [ 0, %302 ], [ %1238, %1237 ]
  %357 = icmp eq i64 %305, 0
  %358 = icmp eq i64 %356, %303
  %359 = or i1 %357, %358
  br i1 %359, label %364, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %356, i32 11
  %362 = load i32, i32* %361, align 4
  %363 = add nsw i32 %362, 134217727
  store i32 %363, i32* %361, align 4
  br label %364

364:                                              ; preds = %355, %360, %299
  %365 = sext i32 %300 to i64
  br i1 %221, label %366, label %414

366:                                              ; preds = %364
  %367 = load i32, i32* %16, align 4
  %368 = add nsw i32 %367, %183
  br label %369

369:                                              ; preds = %369, %366
  %370 = phi i64 [ 0, %366 ], [ %411, %369 ]
  %371 = phi i32 [ %368, %366 ], [ %377, %369 ]
  %372 = phi i32 [ 0, %366 ], [ %412, %369 ]
  %373 = add nsw i32 %371, -1
  %374 = srem i32 %373, 40
  %375 = icmp slt i32 %374, 0
  %376 = add nsw i32 %374, 40
  %377 = select i1 %375, i32 %376, i32 %374
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %365, i32 2, i64 %378
  %380 = load i32, i32* %379, align 4
  %381 = lshr i32 %380, 9
  %382 = add nuw nsw i32 %381, 1
  %383 = lshr i32 %382, 1
  %384 = trunc i32 %383 to i8
  %385 = sub nsw i64 %370, %231
  %386 = getelementptr inbounds i8, i8* %239, i64 %385
  store i8 %384, i8* %386, align 1
  %387 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %365, i32 3, i64 %378
  %388 = load i32, i32* %387, align 4
  %389 = sext i32 %388 to i64
  %390 = load i32, i32* %222, align 4
  %391 = sext i32 %390 to i64
  %392 = mul nsw i64 %391, %389
  %393 = lshr i64 %392, 16
  %394 = trunc i64 %393 to i32
  %395 = ashr i32 %394, 13
  %396 = add nsw i32 %395, 1
  %397 = lshr i32 %396, 1
  %398 = icmp sgt i32 %394, 536862719
  %399 = icmp slt i32 %396, -65536
  %400 = select i1 %399, i32 32768, i32 %397
  %401 = select i1 %398, i32 32767, i32 %400
  %402 = trunc i32 %401 to i16
  %403 = getelementptr inbounds i16, i16* %235, i64 %385
  store i16 %402, i16* %403, align 2
  %404 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %365, i32 5, i64 %378
  %405 = load i32, i32* %404, align 4
  %406 = load i32, i32* %209, align 4
  %407 = sub i32 %372, %183
  %408 = add i32 %407, %406
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 1, i64 %409
  store i32 %405, i32* %410, align 4
  %411 = add nuw nsw i64 %370, 1
  %412 = add nuw nsw i32 %372, 1
  %413 = icmp eq i64 %411, %232
  br i1 %413, label %414, label %369

414:                                              ; preds = %369, %364, %265
  %415 = phi i32 [ %236, %265 ], [ 0, %364 ], [ 0, %369 ]
  %416 = load i32, i32* %188, align 8
  %417 = load i32, i32* %223, align 8
  %418 = sub i32 -2, %262
  %419 = add i32 %418, %416
  %420 = sub i32 %419, %417
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %423, label %422

422:                                              ; preds = %414
  call void @celt_fatal(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 253) #7
  unreachable

423:                                              ; preds = %414
  %424 = sext i32 %420 to i64
  %425 = getelementptr inbounds i16, i16* %198, i64 %424
  %426 = load i32, i32* %74, align 4
  %427 = mul nsw i32 %426, %240
  %428 = add nsw i32 %427, %420
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 0, i64 %429
  %431 = sub nsw i32 %416, %420
  %432 = load i32, i32* %224, align 4
  call void @silk_LPC_analysis_filter(i16* %425, i16* %430, i16* %245, i32 %431, i32 %417, i32 %432) #6
  %433 = load i32, i32* %188, align 8
  store i32 %433, i32* %211, align 4
  store i32 1, i32* %217, align 4
  %434 = load i8, i8* %64, align 1
  br label %435

435:                                              ; preds = %260, %423, %233
  %436 = phi i32 [ 1, %423 ], [ 0, %260 ], [ 0, %233 ]
  %437 = phi i8 [ %434, %423 ], [ 2, %260 ], [ %258, %233 ]
  %438 = phi i32 [ %262, %423 ], [ %262, %260 ], [ %237, %233 ]
  %439 = phi i32 [ %415, %423 ], [ %236, %260 ], [ %236, %233 ]
  %440 = load i32, i32* %20, align 4
  %441 = getelementptr inbounds i32, i32* %12, i64 %234
  %442 = load i32, i32* %441, align 4
  %443 = getelementptr inbounds i32, i32* %11, i64 %234
  %444 = load i32, i32* %443, align 4
  %445 = icmp sgt i32 %444, 1
  %446 = select i1 %445, i32 %444, i32 1
  %447 = call i32 @llvm.ctlz.i32(i32 %446, i1 false) #6, !range !8
  %448 = add nsw i32 %447, -1
  %449 = shl i32 %446, %448
  %450 = ashr i32 %449, 16
  %451 = sdiv i32 536870911, %450
  %452 = shl i32 %451, 16
  %453 = sext i32 %449 to i64
  %454 = zext i32 %451 to i64
  %455 = shl i64 %454, 48
  %456 = ashr exact i64 %455, 29
  %457 = mul i64 %456, %453
  %458 = and i64 %457, -34359738368
  %459 = sub i64 0, %458
  %460 = ashr exact i64 %459, 32
  %461 = sext i32 %451 to i64
  %462 = mul nsw i64 %460, %461
  %463 = lshr i64 %462, 16
  %464 = trunc i64 %463 to i32
  %465 = add i32 %452, %464
  %466 = icmp ult i32 %446, 131072
  br i1 %466, label %467, label %485

467:                                              ; preds = %435
  %468 = add nsw i32 %447, -15
  %469 = ashr i32 -2147483648, %468
  %470 = lshr i32 2147483647, %468
  %471 = icmp sgt i32 %469, %470
  br i1 %471, label %472, label %477

472:                                              ; preds = %467
  %473 = icmp sgt i32 %465, %469
  br i1 %473, label %482, label %474

474:                                              ; preds = %472
  %475 = icmp slt i32 %465, %470
  %476 = select i1 %475, i32 %470, i32 %465
  br label %482

477:                                              ; preds = %467
  %478 = icmp sgt i32 %465, %470
  br i1 %478, label %482, label %479

479:                                              ; preds = %477
  %480 = icmp slt i32 %465, %469
  %481 = select i1 %480, i32 %469, i32 %465
  br label %482

482:                                              ; preds = %479, %477, %474, %472
  %483 = phi i32 [ %469, %472 ], [ %476, %474 ], [ %470, %477 ], [ %481, %479 ]
  %484 = shl i32 %483, %468
  br label %488

485:                                              ; preds = %435
  %486 = sub nsw i32 15, %447
  %487 = ashr i32 %465, %486
  br label %488

488:                                              ; preds = %485, %482
  %489 = phi i32 [ %484, %482 ], [ %487, %485 ]
  %490 = load i32, i32* %74, align 4
  %491 = icmp sgt i32 %490, 0
  br i1 %491, label %492, label %556

492:                                              ; preds = %488
  %493 = ashr i32 %489, 4
  %494 = add nsw i32 %493, 1
  %495 = ashr i32 %494, 1
  %496 = sext i32 %495 to i64
  %497 = sext i32 %490 to i64
  %498 = add nsw i64 %497, -1
  %499 = and i64 %497, 3
  %500 = icmp ult i64 %498, 3
  br i1 %500, label %540, label %501

501:                                              ; preds = %492
  %502 = sub nsw i64 %497, %499
  br label %503

503:                                              ; preds = %503, %501
  %504 = phi i64 [ 0, %501 ], [ %537, %503 ]
  %505 = phi i64 [ %502, %501 ], [ %538, %503 ]
  %506 = getelementptr inbounds i16, i16* %238, i64 %504
  %507 = load i16, i16* %506, align 2
  %508 = sext i16 %507 to i64
  %509 = mul nsw i64 %508, %496
  %510 = ashr i64 %509, 16
  %511 = trunc i64 %510 to i32
  %512 = getelementptr inbounds i32, i32* %202, i64 %504
  store i32 %511, i32* %512, align 16
  %513 = or i64 %504, 1
  %514 = getelementptr inbounds i16, i16* %238, i64 %513
  %515 = load i16, i16* %514, align 2
  %516 = sext i16 %515 to i64
  %517 = mul nsw i64 %516, %496
  %518 = ashr i64 %517, 16
  %519 = trunc i64 %518 to i32
  %520 = getelementptr inbounds i32, i32* %202, i64 %513
  store i32 %519, i32* %520, align 4
  %521 = or i64 %504, 2
  %522 = getelementptr inbounds i16, i16* %238, i64 %521
  %523 = load i16, i16* %522, align 2
  %524 = sext i16 %523 to i64
  %525 = mul nsw i64 %524, %496
  %526 = ashr i64 %525, 16
  %527 = trunc i64 %526 to i32
  %528 = getelementptr inbounds i32, i32* %202, i64 %521
  store i32 %527, i32* %528, align 8
  %529 = or i64 %504, 3
  %530 = getelementptr inbounds i16, i16* %238, i64 %529
  %531 = load i16, i16* %530, align 2
  %532 = sext i16 %531 to i64
  %533 = mul nsw i64 %532, %496
  %534 = ashr i64 %533, 16
  %535 = trunc i64 %534 to i32
  %536 = getelementptr inbounds i32, i32* %202, i64 %529
  store i32 %535, i32* %536, align 4
  %537 = add nuw nsw i64 %504, 4
  %538 = add i64 %505, -4
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %503

540:                                              ; preds = %503, %492
  %541 = phi i64 [ 0, %492 ], [ %537, %503 ]
  %542 = icmp eq i64 %499, 0
  br i1 %542, label %556, label %543

543:                                              ; preds = %540, %543
  %544 = phi i64 [ %553, %543 ], [ %541, %540 ]
  %545 = phi i64 [ %554, %543 ], [ %499, %540 ]
  %546 = getelementptr inbounds i16, i16* %238, i64 %544
  %547 = load i16, i16* %546, align 2
  %548 = sext i16 %547 to i64
  %549 = mul nsw i64 %548, %496
  %550 = ashr i64 %549, 16
  %551 = trunc i64 %550 to i32
  %552 = getelementptr inbounds i32, i32* %202, i64 %544
  store i32 %551, i32* %552, align 4
  %553 = add nuw nsw i64 %544, 1
  %554 = add i64 %545, -1
  %555 = icmp eq i64 %554, 0
  br i1 %555, label %556, label %543, !llvm.loop !9

556:                                              ; preds = %540, %543, %488
  %557 = icmp eq i32 %436, 0
  br i1 %557, label %632, label %558

558:                                              ; preds = %556
  %559 = icmp eq i64 %234, 0
  br i1 %559, label %560, label %566

560:                                              ; preds = %558
  %561 = sext i32 %489 to i64
  %562 = mul nsw i64 %227, %561
  %563 = lshr i64 %562, 14
  %564 = trunc i64 %563 to i32
  %565 = and i32 %564, -4
  br label %566

566:                                              ; preds = %560, %558
  %567 = phi i32 [ %565, %560 ], [ %489, %558 ]
  %568 = load i32, i32* %211, align 4
  %569 = sub i32 -2, %442
  %570 = add i32 %568, %569
  %571 = icmp slt i32 %570, %568
  br i1 %571, label %572, label %632

572:                                              ; preds = %566
  %573 = sext i32 %567 to i64
  %574 = sext i32 %570 to i64
  %575 = sext i32 %568 to i64
  %576 = sub nsw i64 %575, %574
  %577 = xor i64 %574, -1
  %578 = add nsw i64 %577, %575
  %579 = and i64 %576, 3
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %594, label %581

581:                                              ; preds = %572, %581
  %582 = phi i64 [ %591, %581 ], [ %574, %572 ]
  %583 = phi i64 [ %592, %581 ], [ %579, %572 ]
  %584 = getelementptr inbounds i16, i16* %198, i64 %582
  %585 = load i16, i16* %584, align 2
  %586 = sext i16 %585 to i64
  %587 = mul nsw i64 %586, %573
  %588 = lshr i64 %587, 16
  %589 = trunc i64 %588 to i32
  %590 = getelementptr inbounds i32, i32* %195, i64 %582
  store i32 %589, i32* %590, align 4
  %591 = add nsw i64 %582, 1
  %592 = add i64 %583, -1
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %594, label %581, !llvm.loop !10

594:                                              ; preds = %581, %572
  %595 = phi i64 [ %574, %572 ], [ %591, %581 ]
  %596 = icmp ult i64 %578, 3
  br i1 %596, label %632, label %597

597:                                              ; preds = %594, %597
  %598 = phi i64 [ %630, %597 ], [ %595, %594 ]
  %599 = getelementptr inbounds i16, i16* %198, i64 %598
  %600 = load i16, i16* %599, align 2
  %601 = sext i16 %600 to i64
  %602 = mul nsw i64 %601, %573
  %603 = lshr i64 %602, 16
  %604 = trunc i64 %603 to i32
  %605 = getelementptr inbounds i32, i32* %195, i64 %598
  store i32 %604, i32* %605, align 4
  %606 = add nsw i64 %598, 1
  %607 = getelementptr inbounds i16, i16* %198, i64 %606
  %608 = load i16, i16* %607, align 2
  %609 = sext i16 %608 to i64
  %610 = mul nsw i64 %609, %573
  %611 = lshr i64 %610, 16
  %612 = trunc i64 %611 to i32
  %613 = getelementptr inbounds i32, i32* %195, i64 %606
  store i32 %612, i32* %613, align 4
  %614 = add nsw i64 %598, 2
  %615 = getelementptr inbounds i16, i16* %198, i64 %614
  %616 = load i16, i16* %615, align 2
  %617 = sext i16 %616 to i64
  %618 = mul nsw i64 %617, %573
  %619 = lshr i64 %618, 16
  %620 = trunc i64 %619 to i32
  %621 = getelementptr inbounds i32, i32* %195, i64 %614
  store i32 %620, i32* %621, align 4
  %622 = add nsw i64 %598, 3
  %623 = getelementptr inbounds i16, i16* %198, i64 %622
  %624 = load i16, i16* %623, align 2
  %625 = sext i16 %624 to i64
  %626 = mul nsw i64 %625, %573
  %627 = lshr i64 %626, 16
  %628 = trunc i64 %627 to i32
  %629 = getelementptr inbounds i32, i32* %195, i64 %622
  store i32 %628, i32* %629, align 4
  %630 = add nsw i64 %598, 4
  %631 = icmp eq i64 %630, %575
  br i1 %631, label %632, label %597

632:                                              ; preds = %594, %597, %566, %556
  %633 = load i32, i32* %228, align 4
  %634 = icmp eq i32 %444, %633
  br i1 %634, label %1036, label %635

635:                                              ; preds = %632
  %636 = icmp slt i32 %633, 0
  %637 = sub nsw i32 0, %633
  %638 = select i1 %636, i32 %637, i32 %633
  %639 = call i32 @llvm.ctlz.i32(i32 %638, i1 false) #6, !range !8
  %640 = add nsw i32 %639, -1
  %641 = shl i32 %633, %640
  %642 = icmp slt i32 %444, 0
  %643 = sub nsw i32 0, %444
  %644 = select i1 %642, i32 %643, i32 %444
  %645 = call i32 @llvm.ctlz.i32(i32 %644, i1 false) #6, !range !8
  %646 = add nsw i32 %645, -1
  %647 = shl i32 %444, %646
  %648 = ashr i32 %647, 16
  %649 = sdiv i32 536870911, %648
  %650 = sext i32 %641 to i64
  %651 = zext i32 %649 to i64
  %652 = shl i64 %651, 48
  %653 = ashr exact i64 %652, 48
  %654 = mul nsw i64 %653, %650
  %655 = sext i32 %647 to i64
  %656 = ashr i64 %654, 16
  %657 = mul nsw i64 %656, %655
  %658 = lshr i64 %657, 29
  %659 = trunc i64 %658 to i32
  %660 = and i32 %659, -8
  %661 = sub i32 %641, %660
  %662 = sext i32 %661 to i64
  %663 = mul nsw i64 %653, %662
  %664 = lshr i64 %663, 16
  %665 = add nsw i64 %664, %656
  %666 = trunc i64 %665 to i32
  %667 = sub nsw i32 29, %645
  %668 = add nsw i32 %667, %639
  %669 = add nsw i32 %668, -16
  %670 = icmp slt i32 %669, 0
  br i1 %670, label %671, label %689

671:                                              ; preds = %635
  %672 = sub nsw i32 16, %668
  %673 = ashr i32 -2147483648, %672
  %674 = lshr i32 2147483647, %672
  %675 = icmp sgt i32 %673, %674
  br i1 %675, label %676, label %681

676:                                              ; preds = %671
  %677 = icmp slt i32 %673, %666
  br i1 %677, label %686, label %678

678:                                              ; preds = %676
  %679 = icmp sgt i32 %674, %666
  %680 = select i1 %679, i32 %674, i32 %666
  br label %686

681:                                              ; preds = %671
  %682 = icmp slt i32 %674, %666
  br i1 %682, label %686, label %683

683:                                              ; preds = %681
  %684 = icmp sgt i32 %673, %666
  %685 = select i1 %684, i32 %673, i32 %666
  br label %686

686:                                              ; preds = %683, %681, %678, %676
  %687 = phi i32 [ %673, %676 ], [ %680, %678 ], [ %674, %681 ], [ %685, %683 ]
  %688 = shl i32 %687, %672
  br label %693

689:                                              ; preds = %635
  %690 = icmp slt i32 %669, 32
  %691 = ashr i32 %666, %669
  %692 = select i1 %690, i32 %691, i32 0
  br label %693

693:                                              ; preds = %689, %686
  %694 = phi i32 [ %688, %686 ], [ %692, %689 ]
  %695 = load i32, i32* %188, align 8
  %696 = icmp sgt i32 %695, 0
  br i1 %696, label %697, label %714

697:                                              ; preds = %693
  %698 = load i32, i32* %209, align 4
  %699 = sext i32 %694 to i64
  %700 = sub i32 %698, %695
  %701 = sext i32 %700 to i64
  br label %702

702:                                              ; preds = %702, %697
  %703 = phi i64 [ %701, %697 ], [ %710, %702 ]
  %704 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 1, i64 %703
  %705 = load i32, i32* %704, align 4
  %706 = sext i32 %705 to i64
  %707 = mul nsw i64 %706, %699
  %708 = lshr i64 %707, 16
  %709 = trunc i64 %708 to i32
  store i32 %709, i32* %704, align 4
  %710 = add nsw i64 %703, 1
  %711 = load i32, i32* %209, align 4
  %712 = sext i32 %711 to i64
  %713 = icmp slt i64 %710, %712
  br i1 %713, label %702, label %714

714:                                              ; preds = %702, %693
  %715 = icmp eq i8 %437, 2
  br i1 %715, label %716, label %739

716:                                              ; preds = %714
  %717 = load i32, i32* %217, align 4
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %739

719:                                              ; preds = %716
  %720 = load i32, i32* %211, align 4
  %721 = sub i32 -2, %442
  %722 = add i32 %720, %721
  %723 = sub nsw i32 %720, %183
  %724 = icmp slt i32 %722, %723
  br i1 %724, label %725, label %739

725:                                              ; preds = %719
  %726 = sext i32 %694 to i64
  %727 = sext i32 %722 to i64
  %728 = sext i32 %723 to i64
  br label %729

729:                                              ; preds = %729, %725
  %730 = phi i64 [ %727, %725 ], [ %737, %729 ]
  %731 = getelementptr inbounds i32, i32* %195, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = sext i32 %732 to i64
  %734 = mul nsw i64 %733, %726
  %735 = lshr i64 %734, 16
  %736 = trunc i64 %735 to i32
  store i32 %736, i32* %731, align 4
  %737 = add nsw i64 %730, 1
  %738 = icmp slt i64 %737, %728
  br i1 %738, label %729, label %739

739:                                              ; preds = %729, %719, %716, %714
  %740 = icmp sgt i32 %440, 0
  br i1 %740, label %741, label %1030

741:                                              ; preds = %739
  %742 = sext i32 %694 to i64
  %743 = zext i32 %440 to i64
  br label %744

744:                                              ; preds = %1027, %741
  %745 = phi i64 [ 0, %741 ], [ %1028, %1027 ]
  %746 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 7
  %747 = load i32, i32* %746, align 4
  %748 = sext i32 %747 to i64
  %749 = mul nsw i64 %748, %742
  %750 = lshr i64 %749, 16
  %751 = trunc i64 %750 to i32
  store i32 %751, i32* %746, align 4
  %752 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 8
  %753 = load i32, i32* %752, align 4
  %754 = sext i32 %753 to i64
  %755 = mul nsw i64 %754, %742
  %756 = lshr i64 %755, 16
  %757 = trunc i64 %756 to i32
  store i32 %757, i32* %752, align 4
  %758 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 0
  %759 = load i32, i32* %758, align 4
  %760 = sext i32 %759 to i64
  %761 = mul nsw i64 %760, %742
  %762 = lshr i64 %761, 16
  %763 = trunc i64 %762 to i32
  store i32 %763, i32* %758, align 4
  %764 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 1
  %765 = load i32, i32* %764, align 4
  %766 = sext i32 %765 to i64
  %767 = mul nsw i64 %766, %742
  %768 = lshr i64 %767, 16
  %769 = trunc i64 %768 to i32
  store i32 %769, i32* %764, align 4
  %770 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 2
  %771 = load i32, i32* %770, align 4
  %772 = sext i32 %771 to i64
  %773 = mul nsw i64 %772, %742
  %774 = lshr i64 %773, 16
  %775 = trunc i64 %774 to i32
  store i32 %775, i32* %770, align 4
  %776 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 3
  %777 = load i32, i32* %776, align 4
  %778 = sext i32 %777 to i64
  %779 = mul nsw i64 %778, %742
  %780 = lshr i64 %779, 16
  %781 = trunc i64 %780 to i32
  store i32 %781, i32* %776, align 4
  %782 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 4
  %783 = load i32, i32* %782, align 4
  %784 = sext i32 %783 to i64
  %785 = mul nsw i64 %784, %742
  %786 = lshr i64 %785, 16
  %787 = trunc i64 %786 to i32
  store i32 %787, i32* %782, align 4
  %788 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 5
  %789 = load i32, i32* %788, align 4
  %790 = sext i32 %789 to i64
  %791 = mul nsw i64 %790, %742
  %792 = lshr i64 %791, 16
  %793 = trunc i64 %792 to i32
  store i32 %793, i32* %788, align 4
  %794 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 6
  %795 = load i32, i32* %794, align 4
  %796 = sext i32 %795 to i64
  %797 = mul nsw i64 %796, %742
  %798 = lshr i64 %797, 16
  %799 = trunc i64 %798 to i32
  store i32 %799, i32* %794, align 4
  %800 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 7
  %801 = load i32, i32* %800, align 4
  %802 = sext i32 %801 to i64
  %803 = mul nsw i64 %802, %742
  %804 = lshr i64 %803, 16
  %805 = trunc i64 %804 to i32
  store i32 %805, i32* %800, align 4
  %806 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 8
  %807 = load i32, i32* %806, align 4
  %808 = sext i32 %807 to i64
  %809 = mul nsw i64 %808, %742
  %810 = lshr i64 %809, 16
  %811 = trunc i64 %810 to i32
  store i32 %811, i32* %806, align 4
  %812 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 9
  %813 = load i32, i32* %812, align 4
  %814 = sext i32 %813 to i64
  %815 = mul nsw i64 %814, %742
  %816 = lshr i64 %815, 16
  %817 = trunc i64 %816 to i32
  store i32 %817, i32* %812, align 4
  %818 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 10
  %819 = load i32, i32* %818, align 4
  %820 = sext i32 %819 to i64
  %821 = mul nsw i64 %820, %742
  %822 = lshr i64 %821, 16
  %823 = trunc i64 %822 to i32
  store i32 %823, i32* %818, align 4
  %824 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 11
  %825 = load i32, i32* %824, align 4
  %826 = sext i32 %825 to i64
  %827 = mul nsw i64 %826, %742
  %828 = lshr i64 %827, 16
  %829 = trunc i64 %828 to i32
  store i32 %829, i32* %824, align 4
  %830 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 12
  %831 = load i32, i32* %830, align 4
  %832 = sext i32 %831 to i64
  %833 = mul nsw i64 %832, %742
  %834 = lshr i64 %833, 16
  %835 = trunc i64 %834 to i32
  store i32 %835, i32* %830, align 4
  %836 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 13
  %837 = load i32, i32* %836, align 4
  %838 = sext i32 %837 to i64
  %839 = mul nsw i64 %838, %742
  %840 = lshr i64 %839, 16
  %841 = trunc i64 %840 to i32
  store i32 %841, i32* %836, align 4
  %842 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 14
  %843 = load i32, i32* %842, align 4
  %844 = sext i32 %843 to i64
  %845 = mul nsw i64 %844, %742
  %846 = lshr i64 %845, 16
  %847 = trunc i64 %846 to i32
  store i32 %847, i32* %842, align 4
  %848 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 0, i64 15
  %849 = load i32, i32* %848, align 4
  %850 = sext i32 %849 to i64
  %851 = mul nsw i64 %850, %742
  %852 = lshr i64 %851, 16
  %853 = trunc i64 %852 to i32
  store i32 %853, i32* %848, align 4
  %854 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 0
  %855 = load i32, i32* %854, align 4
  %856 = sext i32 %855 to i64
  %857 = mul nsw i64 %856, %742
  %858 = lshr i64 %857, 16
  %859 = trunc i64 %858 to i32
  store i32 %859, i32* %854, align 4
  %860 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 1
  %861 = load i32, i32* %860, align 4
  %862 = sext i32 %861 to i64
  %863 = mul nsw i64 %862, %742
  %864 = lshr i64 %863, 16
  %865 = trunc i64 %864 to i32
  store i32 %865, i32* %860, align 4
  %866 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 2
  %867 = load i32, i32* %866, align 4
  %868 = sext i32 %867 to i64
  %869 = mul nsw i64 %868, %742
  %870 = lshr i64 %869, 16
  %871 = trunc i64 %870 to i32
  store i32 %871, i32* %866, align 4
  %872 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 3
  %873 = load i32, i32* %872, align 4
  %874 = sext i32 %873 to i64
  %875 = mul nsw i64 %874, %742
  %876 = lshr i64 %875, 16
  %877 = trunc i64 %876 to i32
  store i32 %877, i32* %872, align 4
  %878 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 4
  %879 = load i32, i32* %878, align 4
  %880 = sext i32 %879 to i64
  %881 = mul nsw i64 %880, %742
  %882 = lshr i64 %881, 16
  %883 = trunc i64 %882 to i32
  store i32 %883, i32* %878, align 4
  %884 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 5
  %885 = load i32, i32* %884, align 4
  %886 = sext i32 %885 to i64
  %887 = mul nsw i64 %886, %742
  %888 = lshr i64 %887, 16
  %889 = trunc i64 %888 to i32
  store i32 %889, i32* %884, align 4
  %890 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 6
  %891 = load i32, i32* %890, align 4
  %892 = sext i32 %891 to i64
  %893 = mul nsw i64 %892, %742
  %894 = lshr i64 %893, 16
  %895 = trunc i64 %894 to i32
  store i32 %895, i32* %890, align 4
  %896 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 7
  %897 = load i32, i32* %896, align 4
  %898 = sext i32 %897 to i64
  %899 = mul nsw i64 %898, %742
  %900 = lshr i64 %899, 16
  %901 = trunc i64 %900 to i32
  store i32 %901, i32* %896, align 4
  %902 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 8
  %903 = load i32, i32* %902, align 4
  %904 = sext i32 %903 to i64
  %905 = mul nsw i64 %904, %742
  %906 = lshr i64 %905, 16
  %907 = trunc i64 %906 to i32
  store i32 %907, i32* %902, align 4
  %908 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 9
  %909 = load i32, i32* %908, align 4
  %910 = sext i32 %909 to i64
  %911 = mul nsw i64 %910, %742
  %912 = lshr i64 %911, 16
  %913 = trunc i64 %912 to i32
  store i32 %913, i32* %908, align 4
  %914 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 10
  %915 = load i32, i32* %914, align 4
  %916 = sext i32 %915 to i64
  %917 = mul nsw i64 %916, %742
  %918 = lshr i64 %917, 16
  %919 = trunc i64 %918 to i32
  store i32 %919, i32* %914, align 4
  %920 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 11
  %921 = load i32, i32* %920, align 4
  %922 = sext i32 %921 to i64
  %923 = mul nsw i64 %922, %742
  %924 = lshr i64 %923, 16
  %925 = trunc i64 %924 to i32
  store i32 %925, i32* %920, align 4
  %926 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 12
  %927 = load i32, i32* %926, align 4
  %928 = sext i32 %927 to i64
  %929 = mul nsw i64 %928, %742
  %930 = lshr i64 %929, 16
  %931 = trunc i64 %930 to i32
  store i32 %931, i32* %926, align 4
  %932 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 13
  %933 = load i32, i32* %932, align 4
  %934 = sext i32 %933 to i64
  %935 = mul nsw i64 %934, %742
  %936 = lshr i64 %935, 16
  %937 = trunc i64 %936 to i32
  store i32 %937, i32* %932, align 4
  %938 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 14
  %939 = load i32, i32* %938, align 4
  %940 = sext i32 %939 to i64
  %941 = mul nsw i64 %940, %742
  %942 = lshr i64 %941, 16
  %943 = trunc i64 %942 to i32
  store i32 %943, i32* %938, align 4
  %944 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 15
  %945 = load i32, i32* %944, align 4
  %946 = sext i32 %945 to i64
  %947 = mul nsw i64 %946, %742
  %948 = lshr i64 %947, 16
  %949 = trunc i64 %948 to i32
  store i32 %949, i32* %944, align 4
  %950 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 16
  %951 = load i32, i32* %950, align 4
  %952 = sext i32 %951 to i64
  %953 = mul nsw i64 %952, %742
  %954 = lshr i64 %953, 16
  %955 = trunc i64 %954 to i32
  store i32 %955, i32* %950, align 4
  %956 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 17
  %957 = load i32, i32* %956, align 4
  %958 = sext i32 %957 to i64
  %959 = mul nsw i64 %958, %742
  %960 = lshr i64 %959, 16
  %961 = trunc i64 %960 to i32
  store i32 %961, i32* %956, align 4
  %962 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 18
  %963 = load i32, i32* %962, align 4
  %964 = sext i32 %963 to i64
  %965 = mul nsw i64 %964, %742
  %966 = lshr i64 %965, 16
  %967 = trunc i64 %966 to i32
  store i32 %967, i32* %962, align 4
  %968 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 19
  %969 = load i32, i32* %968, align 4
  %970 = sext i32 %969 to i64
  %971 = mul nsw i64 %970, %742
  %972 = lshr i64 %971, 16
  %973 = trunc i64 %972 to i32
  store i32 %973, i32* %968, align 4
  %974 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 20
  %975 = load i32, i32* %974, align 4
  %976 = sext i32 %975 to i64
  %977 = mul nsw i64 %976, %742
  %978 = lshr i64 %977, 16
  %979 = trunc i64 %978 to i32
  store i32 %979, i32* %974, align 4
  %980 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 21
  %981 = load i32, i32* %980, align 4
  %982 = sext i32 %981 to i64
  %983 = mul nsw i64 %982, %742
  %984 = lshr i64 %983, 16
  %985 = trunc i64 %984 to i32
  store i32 %985, i32* %980, align 4
  %986 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 22
  %987 = load i32, i32* %986, align 4
  %988 = sext i32 %987 to i64
  %989 = mul nsw i64 %988, %742
  %990 = lshr i64 %989, 16
  %991 = trunc i64 %990 to i32
  store i32 %991, i32* %986, align 4
  %992 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 6, i64 23
  %993 = load i32, i32* %992, align 4
  %994 = sext i32 %993 to i64
  %995 = mul nsw i64 %994, %742
  %996 = lshr i64 %995, 16
  %997 = trunc i64 %996 to i32
  store i32 %997, i32* %992, align 4
  br label %998

998:                                              ; preds = %998, %744
  %999 = phi i64 [ 0, %744 ], [ %1025, %998 ]
  %1000 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 4, i64 %999
  %1001 = load i32, i32* %1000, align 4
  %1002 = sext i32 %1001 to i64
  %1003 = mul nsw i64 %1002, %742
  %1004 = lshr i64 %1003, 16
  %1005 = trunc i64 %1004 to i32
  store i32 %1005, i32* %1000, align 4
  %1006 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 5, i64 %999
  %1007 = load i32, i32* %1006, align 4
  %1008 = sext i32 %1007 to i64
  %1009 = mul nsw i64 %1008, %742
  %1010 = lshr i64 %1009, 16
  %1011 = trunc i64 %1010 to i32
  store i32 %1011, i32* %1006, align 4
  %1012 = or i64 %999, 1
  %1013 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 4, i64 %1012
  %1014 = load i32, i32* %1013, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = mul nsw i64 %1015, %742
  %1017 = lshr i64 %1016, 16
  %1018 = trunc i64 %1017 to i32
  store i32 %1018, i32* %1013, align 4
  %1019 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %745, i32 5, i64 %1012
  %1020 = load i32, i32* %1019, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = mul nsw i64 %1021, %742
  %1023 = lshr i64 %1022, 16
  %1024 = trunc i64 %1023 to i32
  store i32 %1024, i32* %1019, align 4
  %1025 = add nuw nsw i64 %999, 2
  %1026 = icmp eq i64 %1025, 40
  br i1 %1026, label %1027, label %998

1027:                                             ; preds = %998
  %1028 = add nuw nsw i64 %745, 1
  %1029 = icmp eq i64 %1028, %743
  br i1 %1029, label %1030, label %744

1030:                                             ; preds = %1027, %739
  %1031 = load i32, i32* %443, align 4
  store i32 %1031, i32* %228, align 4
  %1032 = load i8, i8* %64, align 1
  %1033 = load i32, i32* %443, align 4
  %1034 = load i32, i32* %74, align 4
  %1035 = load i32, i32* %20, align 4
  br label %1036

1036:                                             ; preds = %632, %1030
  %1037 = phi i32 [ %440, %632 ], [ %1035, %1030 ]
  %1038 = phi i32 [ %490, %632 ], [ %1034, %1030 ]
  %1039 = phi i32 [ %444, %632 ], [ %1033, %1030 ]
  %1040 = phi i8 [ %437, %632 ], [ %1032, %1030 ]
  %1041 = sext i8 %1040 to i32
  %1042 = getelementptr inbounds i32, i32* %9, i64 %234
  %1043 = load i32, i32* %1042, align 4
  %1044 = getelementptr inbounds i32, i32* %10, i64 %234
  %1045 = load i32, i32* %1044, align 4
  %1046 = add nsw i32 %439, 1
  %1047 = load i32, i32* %229, align 4
  %1048 = load i32, i32* %223, align 8
  %1049 = load i32, i32* %230, align 8
  call fastcc void @silk_noise_shape_quantizer_del_dec(%struct.silk_nsq_state* %1, %struct.NSQ_del_dec_struct* nonnull %24, i32 %1041, i32* nonnull %202, i8* %239, i16* %235, i32* nonnull %195, i32* nonnull %206, i16* %245, i16* %248, i16* %251, i32 %438, i32 %257, i32 %1043, i32 %1045, i32 %1039, i32 %13, i32 %73, i32 %1038, i32 %439, i32 %1047, i32 %1048, i32 %1049, i32 %1037, i32* nonnull %16, i32 %183)
  %1050 = load i32, i32* %74, align 4
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds i16, i16* %238, i64 %1051
  %1053 = getelementptr inbounds i8, i8* %239, i64 %1051
  %1054 = getelementptr inbounds i16, i16* %235, i64 %1051
  %1055 = add nuw nsw i64 %234, 1
  %1056 = load i32, i32* %212, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = icmp slt i64 %1055, %1057
  br i1 %1058, label %233, label %1059

1059:                                             ; preds = %1036, %182
  %1060 = phi i8* [ %4, %182 ], [ %1053, %1036 ]
  %1061 = phi i16* [ %208, %182 ], [ %1054, %1036 ]
  %1062 = load i32, i32* %20, align 4
  %1063 = icmp sgt i32 %1062, 1
  br i1 %1063, label %1064, label %1132

1064:                                             ; preds = %1059
  %1065 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 0, i32 11
  %1066 = load i32, i32* %1065, align 16
  %1067 = sext i32 %1062 to i64
  %1068 = add nsw i64 %1067, -1
  %1069 = add nsw i64 %1067, -2
  %1070 = and i64 %1068, 3
  %1071 = icmp ult i64 %1069, 3
  br i1 %1071, label %1109, label %1072

1072:                                             ; preds = %1064
  %1073 = sub nsw i64 %1068, %1070
  br label %1074

1074:                                             ; preds = %1074, %1072
  %1075 = phi i64 [ 1, %1072 ], [ %1106, %1074 ]
  %1076 = phi i32 [ %1066, %1072 ], [ %1105, %1074 ]
  %1077 = phi i32 [ 0, %1072 ], [ %1104, %1074 ]
  %1078 = phi i64 [ %1073, %1072 ], [ %1107, %1074 ]
  %1079 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1075, i32 11
  %1080 = load i32, i32* %1079, align 4
  %1081 = icmp slt i32 %1080, %1076
  %1082 = trunc i64 %1075 to i32
  %1083 = select i1 %1081, i32 %1082, i32 %1077
  %1084 = select i1 %1081, i32 %1080, i32 %1076
  %1085 = add nuw nsw i64 %1075, 1
  %1086 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1085, i32 11
  %1087 = load i32, i32* %1086, align 4
  %1088 = icmp slt i32 %1087, %1084
  %1089 = trunc i64 %1085 to i32
  %1090 = select i1 %1088, i32 %1089, i32 %1083
  %1091 = select i1 %1088, i32 %1087, i32 %1084
  %1092 = add nuw nsw i64 %1075, 2
  %1093 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1092, i32 11
  %1094 = load i32, i32* %1093, align 4
  %1095 = icmp slt i32 %1094, %1091
  %1096 = trunc i64 %1092 to i32
  %1097 = select i1 %1095, i32 %1096, i32 %1090
  %1098 = select i1 %1095, i32 %1094, i32 %1091
  %1099 = add nuw nsw i64 %1075, 3
  %1100 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1099, i32 11
  %1101 = load i32, i32* %1100, align 4
  %1102 = icmp slt i32 %1101, %1098
  %1103 = trunc i64 %1099 to i32
  %1104 = select i1 %1102, i32 %1103, i32 %1097
  %1105 = select i1 %1102, i32 %1101, i32 %1098
  %1106 = add nuw nsw i64 %1075, 4
  %1107 = add i64 %1078, -4
  %1108 = icmp eq i64 %1107, 0
  br i1 %1108, label %1109, label %1074

1109:                                             ; preds = %1074, %1064
  %1110 = phi i32 [ undef, %1064 ], [ %1104, %1074 ]
  %1111 = phi i64 [ 1, %1064 ], [ %1106, %1074 ]
  %1112 = phi i32 [ %1066, %1064 ], [ %1105, %1074 ]
  %1113 = phi i32 [ 0, %1064 ], [ %1104, %1074 ]
  %1114 = icmp eq i64 %1070, 0
  br i1 %1114, label %1129, label %1115

1115:                                             ; preds = %1109, %1115
  %1116 = phi i64 [ %1126, %1115 ], [ %1111, %1109 ]
  %1117 = phi i32 [ %1125, %1115 ], [ %1112, %1109 ]
  %1118 = phi i32 [ %1124, %1115 ], [ %1113, %1109 ]
  %1119 = phi i64 [ %1127, %1115 ], [ %1070, %1109 ]
  %1120 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1116, i32 11
  %1121 = load i32, i32* %1120, align 4
  %1122 = icmp slt i32 %1121, %1117
  %1123 = trunc i64 %1116 to i32
  %1124 = select i1 %1122, i32 %1123, i32 %1118
  %1125 = select i1 %1122, i32 %1121, i32 %1117
  %1126 = add nuw nsw i64 %1116, 1
  %1127 = add i64 %1119, -1
  %1128 = icmp eq i64 %1127, 0
  br i1 %1128, label %1129, label %1115, !llvm.loop !11

1129:                                             ; preds = %1115, %1109
  %1130 = phi i32 [ %1110, %1109 ], [ %1124, %1115 ]
  %1131 = sext i32 %1130 to i64
  br label %1132

1132:                                             ; preds = %1129, %1059
  %1133 = phi i64 [ 0, %1059 ], [ %1131, %1129 ]
  %1134 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 10
  %1135 = load i32, i32* %1134, align 4
  %1136 = trunc i32 %1135 to i8
  %1137 = getelementptr inbounds %struct.SideInfoIndices, %struct.SideInfoIndices* %2, i64 0, i32 10
  store i8 %1136, i8* %1137, align 2
  %1138 = icmp sgt i32 %183, 0
  br i1 %1138, label %1139, label %1194

1139:                                             ; preds = %1132
  %1140 = load i32, i32* %212, align 4
  %1141 = add nsw i32 %1140, -1
  %1142 = sext i32 %1141 to i64
  %1143 = getelementptr inbounds i32, i32* %11, i64 %1142
  %1144 = load i32, i32* %1143, align 4
  %1145 = ashr i32 %1144, 6
  %1146 = load i32, i32* %16, align 4
  %1147 = add nsw i32 %1146, %183
  %1148 = sext i32 %1145 to i64
  %1149 = sext i32 %183 to i64
  %1150 = zext i32 %183 to i64
  br label %1151

1151:                                             ; preds = %1151, %1139
  %1152 = phi i64 [ 0, %1139 ], [ %1191, %1151 ]
  %1153 = phi i32 [ %1147, %1139 ], [ %1159, %1151 ]
  %1154 = phi i32 [ 0, %1139 ], [ %1192, %1151 ]
  %1155 = add nsw i32 %1153, -1
  %1156 = srem i32 %1155, 40
  %1157 = icmp slt i32 %1156, 0
  %1158 = add nsw i32 %1156, 40
  %1159 = select i1 %1157, i32 %1158, i32 %1156
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 2, i64 %1160
  %1162 = load i32, i32* %1161, align 4
  %1163 = lshr i32 %1162, 9
  %1164 = add nuw nsw i32 %1163, 1
  %1165 = lshr i32 %1164, 1
  %1166 = trunc i32 %1165 to i8
  %1167 = sub nsw i64 %1152, %1149
  %1168 = getelementptr inbounds i8, i8* %1060, i64 %1167
  store i8 %1166, i8* %1168, align 1
  %1169 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 3, i64 %1160
  %1170 = load i32, i32* %1169, align 4
  %1171 = sext i32 %1170 to i64
  %1172 = mul nsw i64 %1171, %1148
  %1173 = lshr i64 %1172, 16
  %1174 = trunc i64 %1173 to i32
  %1175 = ashr i32 %1174, 7
  %1176 = add nsw i32 %1175, 1
  %1177 = lshr i32 %1176, 1
  %1178 = icmp sgt i32 %1174, 8388479
  %1179 = icmp slt i32 %1176, -65536
  %1180 = select i1 %1179, i32 32768, i32 %1177
  %1181 = select i1 %1178, i32 32767, i32 %1180
  %1182 = trunc i32 %1181 to i16
  %1183 = getelementptr inbounds i16, i16* %1061, i64 %1167
  store i16 %1182, i16* %1183, align 2
  %1184 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 5, i64 %1160
  %1185 = load i32, i32* %1184, align 4
  %1186 = load i32, i32* %209, align 4
  %1187 = sub i32 %1154, %183
  %1188 = add i32 %1187, %1186
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 1, i64 %1189
  store i32 %1185, i32* %1190, align 4
  %1191 = add nuw nsw i64 %1152, 1
  %1192 = add nuw nsw i32 %1154, 1
  %1193 = icmp eq i64 %1191, %1150
  br i1 %1193, label %1194, label %1151

1194:                                             ; preds = %1151, %1132
  %1195 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 2, i64 0
  %1196 = bitcast i32* %1195 to i8*
  %1197 = load i32, i32* %74, align 4
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 0, i64 %1198
  %1200 = bitcast i32* %1199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1196, i8* align 4 %1200, i64 64, i1 false)
  %1201 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 3, i64 0
  %1202 = bitcast i32* %1201 to i8*
  %1203 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 6, i64 0
  %1204 = bitcast i32* %1203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1202, i8* align 4 %1204, i64 96, i1 false)
  %1205 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 7
  %1206 = load i32, i32* %1205, align 4
  %1207 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 4
  store i32 %1206, i32* %1207, align 4
  %1208 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %1133, i32 8
  %1209 = load i32, i32* %1208, align 4
  %1210 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 5
  store i32 %1209, i32* %1210, align 4
  %1211 = load i32, i32* %212, align 4
  %1212 = add nsw i32 %1211, -1
  %1213 = sext i32 %1212 to i64
  %1214 = getelementptr inbounds i32, i32* %12, i64 %1213
  %1215 = load i32, i32* %1214, align 4
  store i32 %1215, i32* %18, align 4
  %1216 = bitcast %struct.silk_nsq_state* %1 to i8*
  %1217 = load i32, i32* %190, align 8
  %1218 = sext i32 %1217 to i64
  %1219 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 0, i64 %1218
  %1220 = bitcast i16* %1219 to i8*
  %1221 = load i32, i32* %188, align 8
  %1222 = sext i32 %1221 to i64
  %1223 = shl nsw i64 %1222, 1
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1216, i8* align 2 %1220, i64 %1223, i1 false)
  %1224 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 1
  %1225 = bitcast [640 x i32]* %1224 to i8*
  %1226 = load i32, i32* %190, align 8
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %1, i64 0, i32 1, i64 %1227
  %1229 = bitcast i32* %1228 to i8*
  %1230 = load i32, i32* %188, align 8
  %1231 = sext i32 %1230 to i64
  %1232 = shl nsw i64 %1231, 2
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1225, i8* align 4 %1229, i64 %1232, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #6
  ret void

1233:                                             ; preds = %352
  %1234 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %24, i64 %353, i32 11
  %1235 = load i32, i32* %1234, align 4
  %1236 = add nsw i32 %1235, 134217727
  store i32 %1236, i32* %1234, align 4
  br label %1237

1237:                                             ; preds = %1233, %352
  %1238 = add nuw nsw i64 %345, 2
  %1239 = add i64 %346, -2
  %1240 = icmp eq i64 %1239, 0
  br i1 %1240, label %355, label %344
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #2

declare void @silk_LPC_analysis_filter(i16*, i16*, i16*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @silk_noise_shape_quantizer_del_dec(%struct.silk_nsq_state* nocapture, %struct.NSQ_del_dec_struct*, i32, i32* nocapture readonly, i8* nocapture, i16* nocapture, i32* nocapture, i32* nocapture, i16* nocapture readonly, i16* nocapture readonly, i16* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32* nocapture, i32) unnamed_addr #4 {
  %27 = icmp sgt i32 %23, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %26
  tail call void @celt_fatal(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 364) #7
  unreachable

29:                                               ; preds = %26
  %30 = sext i32 %23 to i64
  %31 = mul nsw i64 %30, 56
  %32 = alloca [2 x %struct.NSQ_sample_struct], i64 %30, align 16
  %33 = bitcast [2 x %struct.NSQ_sample_struct]* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 %31, i1 false)
  %34 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %0, i64 0, i32 8
  %35 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %0, i64 0, i32 7
  %36 = ashr i32 %15, 6
  %37 = icmp sgt i32 %18, 0
  br i1 %37, label %38, label %133

38:                                               ; preds = %29
  %39 = sub i32 2, %11
  %40 = load i32, i32* %35, align 4
  %41 = add i32 %39, %40
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %6, i64 %42
  %44 = sub i32 1, %11
  %45 = load i32, i32* %34, align 4
  %46 = add i32 %44, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %0, i64 0, i32 1, i64 %47
  %49 = icmp eq i32 %2, 2
  %50 = getelementptr inbounds i16, i16* %9, i64 1
  %51 = getelementptr inbounds i16, i16* %9, i64 2
  %52 = getelementptr inbounds i16, i16* %9, i64 3
  %53 = getelementptr inbounds i16, i16* %9, i64 4
  %54 = icmp sgt i32 %11, 0
  %55 = zext i32 %12 to i64
  %56 = shl i64 %55, 48
  %57 = ashr exact i64 %56, 48
  %58 = ashr i32 %12, 16
  %59 = sext i32 %58 to i64
  %60 = ashr i32 %21, 1
  %61 = getelementptr inbounds i16, i16* %8, i64 1
  %62 = getelementptr inbounds i16, i16* %8, i64 2
  %63 = getelementptr inbounds i16, i16* %8, i64 3
  %64 = getelementptr inbounds i16, i16* %8, i64 4
  %65 = getelementptr inbounds i16, i16* %8, i64 5
  %66 = getelementptr inbounds i16, i16* %8, i64 6
  %67 = getelementptr inbounds i16, i16* %8, i64 7
  %68 = getelementptr inbounds i16, i16* %8, i64 8
  %69 = getelementptr inbounds i16, i16* %8, i64 9
  %70 = icmp eq i32 %21, 16
  %71 = getelementptr inbounds i16, i16* %8, i64 10
  %72 = getelementptr inbounds i16, i16* %8, i64 11
  %73 = getelementptr inbounds i16, i16* %8, i64 12
  %74 = getelementptr inbounds i16, i16* %8, i64 13
  %75 = getelementptr inbounds i16, i16* %8, i64 14
  %76 = getelementptr inbounds i16, i16* %8, i64 15
  %77 = and i32 %20, 1
  %78 = icmp eq i32 %77, 0
  %79 = zext i32 %22 to i64
  %80 = shl i64 %79, 48
  %81 = ashr exact i64 %80, 48
  %82 = ashr i32 %20, 1
  %83 = icmp sgt i32 %20, 2
  %84 = add nsw i32 %20, -1
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i16, i16* %10, i64 %85
  %87 = zext i32 %13 to i64
  %88 = shl i64 %87, 48
  %89 = ashr exact i64 %88, 48
  %90 = zext i32 %14 to i64
  %91 = shl i64 %90, 48
  %92 = ashr exact i64 %91, 48
  %93 = ashr i32 %14, 16
  %94 = sext i32 %93 to i64
  %95 = icmp sgt i32 %16, 2048
  %96 = lshr i32 %16, 1
  %97 = add nsw i32 %96, -512
  %98 = sub nsw i32 512, %96
  %99 = add nsw i32 %17, -944
  %100 = shl i32 %17, 16
  %101 = sub i32 61865984, %100
  %102 = ashr exact i32 %101, 16
  %103 = shl i32 %16, 16
  %104 = ashr exact i32 %103, 16
  %105 = mul nsw i32 %102, %104
  %106 = ashr exact i32 %100, 16
  %107 = mul nsw i32 %106, %104
  %108 = add nsw i32 %17, 944
  %109 = shl i32 %108, 16
  %110 = ashr exact i32 %109, 16
  %111 = mul nsw i32 %110, %104
  %112 = add i32 %17, -80
  %113 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 0, i64 0, i32 1
  %114 = icmp sgt i32 %23, 1
  %115 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 0, i64 1, i32 1
  %116 = icmp slt i32 %19, 1
  %117 = sext i32 %20 to i64
  %118 = sext i32 %25 to i64
  %119 = zext i32 %18 to i64
  %120 = zext i32 %23 to i64
  %121 = zext i32 %23 to i64
  %122 = zext i32 %23 to i64
  %123 = add nsw i64 %120, -1
  %124 = add nsw i64 %120, -2
  %125 = and i64 %123, 3
  %126 = icmp ult i64 %124, 3
  %127 = sub nsw i64 %123, %125
  %128 = icmp eq i64 %125, 0
  %129 = and i64 %123, 1
  %130 = icmp eq i64 %124, 0
  %131 = sub nsw i64 %123, %129
  %132 = icmp eq i64 %129, 0
  br label %140

133:                                              ; preds = %889, %29
  %134 = sext i32 %18 to i64
  %135 = zext i32 %23 to i64
  %136 = and i64 %135, 1
  %137 = icmp eq i32 %23, 1
  br i1 %137, label %910, label %138

138:                                              ; preds = %133
  %139 = sub nsw i64 %135, %136
  br label %895

140:                                              ; preds = %889, %38
  %141 = phi i64 [ 0, %38 ], [ %893, %889 ]
  %142 = phi i32* [ %48, %38 ], [ %223, %889 ]
  %143 = phi i32* [ %43, %38 ], [ %191, %889 ]
  br i1 %49, label %144, label %189

144:                                              ; preds = %140
  %145 = load i32, i32* %143, align 4
  %146 = sext i32 %145 to i64
  %147 = load i16, i16* %9, align 2
  %148 = sext i16 %147 to i64
  %149 = mul nsw i64 %148, %146
  %150 = lshr i64 %149, 16
  %151 = getelementptr inbounds i32, i32* %143, i64 -1
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = load i16, i16* %50, align 2
  %155 = sext i16 %154 to i64
  %156 = mul nsw i64 %155, %153
  %157 = lshr i64 %156, 16
  %158 = getelementptr inbounds i32, i32* %143, i64 -2
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = load i16, i16* %51, align 2
  %162 = sext i16 %161 to i64
  %163 = mul nsw i64 %162, %160
  %164 = lshr i64 %163, 16
  %165 = getelementptr inbounds i32, i32* %143, i64 -3
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = load i16, i16* %52, align 2
  %169 = sext i16 %168 to i64
  %170 = mul nsw i64 %169, %167
  %171 = lshr i64 %170, 16
  %172 = add nuw nsw i64 %157, %150
  %173 = add nuw nsw i64 %172, %164
  %174 = add nuw nsw i64 %173, %171
  %175 = shl i64 %174, 32
  %176 = add i64 %175, 8589934592
  %177 = lshr exact i64 %176, 32
  %178 = getelementptr inbounds i32, i32* %143, i64 -4
  %179 = load i32, i32* %178, align 4
  %180 = sext i32 %179 to i64
  %181 = load i16, i16* %53, align 2
  %182 = sext i16 %181 to i64
  %183 = mul nsw i64 %182, %180
  %184 = lshr i64 %183, 16
  %185 = add nuw nsw i64 %177, %184
  %186 = trunc i64 %185 to i32
  %187 = shl i32 %186, 1
  %188 = getelementptr inbounds i32, i32* %143, i64 1
  br label %189

189:                                              ; preds = %140, %144
  %190 = phi i32 [ %187, %144 ], [ 0, %140 ]
  %191 = phi i32* [ %188, %144 ], [ %143, %140 ]
  br i1 %54, label %192, label %221

192:                                              ; preds = %189
  %193 = load i32, i32* %142, align 4
  %194 = getelementptr inbounds i32, i32* %142, i64 -2
  %195 = load i32, i32* %194, align 4
  %196 = add i32 %195, %193
  %197 = icmp sgt i32 %196, -1
  br i1 %197, label %198, label %202

198:                                              ; preds = %192
  %199 = and i32 %195, %193
  %200 = icmp slt i32 %199, 0
  %201 = select i1 %200, i32 -2147483648, i32 %196
  br label %206

202:                                              ; preds = %192
  %203 = or i32 %195, %193
  %204 = icmp sgt i32 %203, -1
  %205 = select i1 %204, i32 2147483647, i32 %196
  br label %206

206:                                              ; preds = %202, %198
  %207 = phi i32 [ %201, %198 ], [ %205, %202 ]
  %208 = sext i32 %207 to i64
  %209 = mul nsw i64 %57, %208
  %210 = lshr i64 %209, 16
  %211 = getelementptr inbounds i32, i32* %142, i64 -1
  %212 = load i32, i32* %211, align 4
  %213 = sext i32 %212 to i64
  %214 = mul nsw i64 %213, %59
  %215 = lshr i64 %214, 16
  %216 = add nuw nsw i64 %215, %210
  %217 = trunc i64 %216 to i32
  %218 = shl i32 %217, 2
  %219 = sub nsw i32 %190, %218
  %220 = getelementptr inbounds i32, i32* %142, i64 1
  br label %221

221:                                              ; preds = %206, %189
  %222 = phi i32 [ %219, %206 ], [ 0, %189 ]
  %223 = phi i32* [ %220, %206 ], [ %142, %189 ]
  %224 = add nuw nsw i64 %141, 15
  %225 = getelementptr inbounds i32, i32* %3, i64 %141
  br label %226

226:                                              ; preds = %555, %221
  %227 = phi i64 [ 0, %221 ], [ %630, %555 ]
  %228 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 9
  %229 = load i32, i32* %228, align 4
  %230 = mul i32 %229, 196314165
  %231 = add i32 %230, 907633515
  store i32 %231, i32* %228, align 4
  %232 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 0, i64 %224
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = load i16, i16* %8, align 2
  %236 = sext i16 %235 to i64
  %237 = mul nsw i64 %236, %234
  %238 = lshr i64 %237, 16
  %239 = trunc i64 %238 to i32
  %240 = add i32 %60, %239
  %241 = getelementptr inbounds i32, i32* %232, i64 -1
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %242 to i64
  %244 = load i16, i16* %61, align 2
  %245 = sext i16 %244 to i64
  %246 = mul nsw i64 %245, %243
  %247 = lshr i64 %246, 16
  %248 = trunc i64 %247 to i32
  %249 = add i32 %240, %248
  %250 = getelementptr inbounds i32, i32* %232, i64 -2
  %251 = load i32, i32* %250, align 4
  %252 = sext i32 %251 to i64
  %253 = load i16, i16* %62, align 2
  %254 = sext i16 %253 to i64
  %255 = mul nsw i64 %254, %252
  %256 = lshr i64 %255, 16
  %257 = trunc i64 %256 to i32
  %258 = add i32 %249, %257
  %259 = getelementptr inbounds i32, i32* %232, i64 -3
  %260 = load i32, i32* %259, align 4
  %261 = sext i32 %260 to i64
  %262 = load i16, i16* %63, align 2
  %263 = sext i16 %262 to i64
  %264 = mul nsw i64 %263, %261
  %265 = lshr i64 %264, 16
  %266 = trunc i64 %265 to i32
  %267 = add i32 %258, %266
  %268 = getelementptr inbounds i32, i32* %232, i64 -4
  %269 = load i32, i32* %268, align 4
  %270 = sext i32 %269 to i64
  %271 = load i16, i16* %64, align 2
  %272 = sext i16 %271 to i64
  %273 = mul nsw i64 %272, %270
  %274 = lshr i64 %273, 16
  %275 = trunc i64 %274 to i32
  %276 = add i32 %267, %275
  %277 = getelementptr inbounds i32, i32* %232, i64 -5
  %278 = load i32, i32* %277, align 4
  %279 = sext i32 %278 to i64
  %280 = load i16, i16* %65, align 2
  %281 = sext i16 %280 to i64
  %282 = mul nsw i64 %281, %279
  %283 = lshr i64 %282, 16
  %284 = trunc i64 %283 to i32
  %285 = add i32 %276, %284
  %286 = getelementptr inbounds i32, i32* %232, i64 -6
  %287 = load i32, i32* %286, align 4
  %288 = sext i32 %287 to i64
  %289 = load i16, i16* %66, align 2
  %290 = sext i16 %289 to i64
  %291 = mul nsw i64 %290, %288
  %292 = lshr i64 %291, 16
  %293 = trunc i64 %292 to i32
  %294 = add i32 %285, %293
  %295 = getelementptr inbounds i32, i32* %232, i64 -7
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %296 to i64
  %298 = load i16, i16* %67, align 2
  %299 = sext i16 %298 to i64
  %300 = mul nsw i64 %299, %297
  %301 = lshr i64 %300, 16
  %302 = trunc i64 %301 to i32
  %303 = add i32 %294, %302
  %304 = getelementptr inbounds i32, i32* %232, i64 -8
  %305 = load i32, i32* %304, align 4
  %306 = sext i32 %305 to i64
  %307 = load i16, i16* %68, align 2
  %308 = sext i16 %307 to i64
  %309 = mul nsw i64 %308, %306
  %310 = lshr i64 %309, 16
  %311 = trunc i64 %310 to i32
  %312 = add i32 %303, %311
  %313 = getelementptr inbounds i32, i32* %232, i64 -9
  %314 = load i32, i32* %313, align 4
  %315 = sext i32 %314 to i64
  %316 = load i16, i16* %69, align 2
  %317 = sext i16 %316 to i64
  %318 = mul nsw i64 %317, %315
  %319 = lshr i64 %318, 16
  %320 = trunc i64 %319 to i32
  %321 = add i32 %312, %320
  br i1 %70, label %322, label %377

322:                                              ; preds = %226
  %323 = getelementptr inbounds i32, i32* %232, i64 -10
  %324 = load i32, i32* %323, align 4
  %325 = sext i32 %324 to i64
  %326 = load i16, i16* %71, align 2
  %327 = sext i16 %326 to i64
  %328 = mul nsw i64 %327, %325
  %329 = lshr i64 %328, 16
  %330 = trunc i64 %329 to i32
  %331 = add i32 %321, %330
  %332 = getelementptr inbounds i32, i32* %232, i64 -11
  %333 = load i32, i32* %332, align 4
  %334 = sext i32 %333 to i64
  %335 = load i16, i16* %72, align 2
  %336 = sext i16 %335 to i64
  %337 = mul nsw i64 %336, %334
  %338 = lshr i64 %337, 16
  %339 = trunc i64 %338 to i32
  %340 = add i32 %331, %339
  %341 = getelementptr inbounds i32, i32* %232, i64 -12
  %342 = load i32, i32* %341, align 4
  %343 = sext i32 %342 to i64
  %344 = load i16, i16* %73, align 2
  %345 = sext i16 %344 to i64
  %346 = mul nsw i64 %345, %343
  %347 = lshr i64 %346, 16
  %348 = trunc i64 %347 to i32
  %349 = add i32 %340, %348
  %350 = getelementptr inbounds i32, i32* %232, i64 -13
  %351 = load i32, i32* %350, align 4
  %352 = sext i32 %351 to i64
  %353 = load i16, i16* %74, align 2
  %354 = sext i16 %353 to i64
  %355 = mul nsw i64 %354, %352
  %356 = lshr i64 %355, 16
  %357 = trunc i64 %356 to i32
  %358 = add i32 %349, %357
  %359 = getelementptr inbounds i32, i32* %232, i64 -14
  %360 = load i32, i32* %359, align 4
  %361 = sext i32 %360 to i64
  %362 = load i16, i16* %75, align 2
  %363 = sext i16 %362 to i64
  %364 = mul nsw i64 %363, %361
  %365 = lshr i64 %364, 16
  %366 = trunc i64 %365 to i32
  %367 = add i32 %358, %366
  %368 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 0, i64 %141
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  %371 = load i16, i16* %76, align 2
  %372 = sext i16 %371 to i64
  %373 = mul nsw i64 %372, %370
  %374 = lshr i64 %373, 16
  %375 = trunc i64 %374 to i32
  %376 = add i32 %367, %375
  br label %377

377:                                              ; preds = %226, %322
  %378 = phi i32 [ %376, %322 ], [ %321, %226 ]
  %379 = shl i32 %378, 4
  br i1 %78, label %381, label %380

380:                                              ; preds = %377
  tail call void @celt_fatal(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 422) #7
  unreachable

381:                                              ; preds = %377
  %382 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 8
  %383 = load i32, i32* %382, align 4
  %384 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 6, i64 0
  %385 = load i32, i32* %384, align 4
  %386 = sext i32 %385 to i64
  %387 = mul nsw i64 %81, %386
  %388 = lshr i64 %387, 16
  %389 = trunc i64 %388 to i32
  %390 = add i32 %383, %389
  %391 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 6, i64 1
  %392 = load i32, i32* %391, align 4
  %393 = sub nsw i32 %392, %390
  %394 = sext i32 %393 to i64
  %395 = mul nsw i64 %81, %394
  %396 = lshr i64 %395, 16
  %397 = trunc i64 %396 to i32
  %398 = add i32 %385, %397
  store i32 %390, i32* %384, align 4
  %399 = sext i32 %390 to i64
  %400 = load i16, i16* %10, align 2
  %401 = sext i16 %400 to i64
  %402 = mul nsw i64 %399, %401
  %403 = lshr i64 %402, 16
  %404 = trunc i64 %403 to i32
  %405 = add i32 %82, %404
  br i1 %83, label %406, label %448

406:                                              ; preds = %381, %406
  %407 = phi i64 [ %446, %406 ], [ 2, %381 ]
  %408 = phi i32 [ %437, %406 ], [ %398, %381 ]
  %409 = phi i32 [ %445, %406 ], [ %405, %381 ]
  %410 = add nsw i64 %407, -1
  %411 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 6, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 6, i64 %407
  %414 = load i32, i32* %413, align 4
  %415 = sub nsw i32 %414, %408
  %416 = sext i32 %415 to i64
  %417 = mul nsw i64 %81, %416
  %418 = lshr i64 %417, 16
  %419 = trunc i64 %418 to i32
  %420 = add i32 %412, %419
  store i32 %408, i32* %411, align 4
  %421 = sext i32 %408 to i64
  %422 = getelementptr inbounds i16, i16* %10, i64 %410
  %423 = load i16, i16* %422, align 2
  %424 = sext i16 %423 to i64
  %425 = mul nsw i64 %424, %421
  %426 = lshr i64 %425, 16
  %427 = trunc i64 %426 to i32
  %428 = add i32 %409, %427
  %429 = or i64 %407, 1
  %430 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 6, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = sub nsw i32 %431, %420
  %433 = sext i32 %432 to i64
  %434 = mul nsw i64 %81, %433
  %435 = lshr i64 %434, 16
  %436 = trunc i64 %435 to i32
  %437 = add i32 %414, %436
  store i32 %420, i32* %413, align 4
  %438 = sext i32 %420 to i64
  %439 = getelementptr inbounds i16, i16* %10, i64 %407
  %440 = load i16, i16* %439, align 2
  %441 = sext i16 %440 to i64
  %442 = mul nsw i64 %438, %441
  %443 = lshr i64 %442, 16
  %444 = trunc i64 %443 to i32
  %445 = add i32 %428, %444
  %446 = add nuw nsw i64 %407, 2
  %447 = icmp slt i64 %446, %117
  br i1 %447, label %406, label %448

448:                                              ; preds = %406, %381
  %449 = phi i32 [ %405, %381 ], [ %445, %406 ]
  %450 = phi i32 [ %398, %381 ], [ %437, %406 ]
  %451 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 6, i64 %85
  store i32 %450, i32* %451, align 4
  %452 = sext i32 %450 to i64
  %453 = load i16, i16* %86, align 2
  %454 = sext i16 %453 to i64
  %455 = mul nsw i64 %454, %452
  %456 = lshr i64 %455, 16
  %457 = trunc i64 %456 to i32
  %458 = add i32 %449, %457
  %459 = shl i32 %458, 1
  %460 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 7
  %461 = load i32, i32* %460, align 4
  %462 = sext i32 %461 to i64
  %463 = mul nsw i64 %89, %462
  %464 = lshr i64 %463, 16
  %465 = trunc i64 %464 to i32
  %466 = add i32 %459, %465
  %467 = shl i32 %466, 2
  %468 = load i32, i32* %24, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 5, i64 %469
  %471 = load i32, i32* %470, align 4
  %472 = sext i32 %471 to i64
  %473 = mul nsw i64 %92, %472
  %474 = lshr i64 %473, 16
  %475 = mul nsw i64 %462, %94
  %476 = lshr i64 %475, 16
  %477 = add nuw nsw i64 %474, %476
  %478 = trunc i64 %477 to i32
  %479 = shl i32 %478, 2
  %480 = add i32 %479, %467
  %481 = icmp sgt i32 %480, -1
  br i1 %481, label %482, label %486

482:                                              ; preds = %448
  %483 = and i32 %479, %467
  %484 = icmp slt i32 %483, 0
  %485 = select i1 %484, i32 -2147483648, i32 %480
  br label %490

486:                                              ; preds = %448
  %487 = or i32 %479, %467
  %488 = icmp sgt i32 %487, -1
  %489 = select i1 %488, i32 2147483647, i32 %480
  br label %490

490:                                              ; preds = %486, %482
  %491 = phi i32 [ %485, %482 ], [ %489, %486 ]
  %492 = add nsw i32 %379, %222
  %493 = sub i32 %492, %491
  %494 = icmp sgt i32 %493, -1
  %495 = xor i32 %492, -2147483648
  %496 = xor i32 %491, -2147483648
  %497 = select i1 %494, i32 %492, i32 %495
  %498 = select i1 %494, i32 %496, i32 %491
  %499 = select i1 %494, i32 -2147483648, i32 2147483640
  %500 = and i32 %498, %497
  %501 = icmp slt i32 %500, 0
  %502 = select i1 %501, i32 %499, i32 %493
  %503 = ashr i32 %502, 3
  %504 = add nsw i32 %503, 1
  %505 = ashr i32 %504, 1
  %506 = load i32, i32* %225, align 4
  %507 = sub nsw i32 %506, %505
  %508 = load i32, i32* %228, align 4
  %509 = icmp slt i32 %508, 0
  %510 = sub nsw i32 0, %507
  %511 = select i1 %509, i32 %510, i32 %507
  %512 = icmp sgt i32 %511, -31744
  %513 = select i1 %512, i32 %511, i32 -31744
  %514 = icmp slt i32 %513, 30720
  %515 = select i1 %514, i32 %513, i32 30720
  %516 = sub nsw i32 %515, %17
  br i1 %95, label %517, label %527

517:                                              ; preds = %490
  %518 = icmp sgt i32 %516, %97
  br i1 %518, label %519, label %521

519:                                              ; preds = %517
  %520 = sub nsw i32 %516, %97
  br label %527

521:                                              ; preds = %517
  %522 = icmp slt i32 %516, %98
  br i1 %522, label %523, label %525

523:                                              ; preds = %521
  %524 = add nsw i32 %516, %97
  br label %527

525:                                              ; preds = %521
  %526 = icmp slt i32 %516, 0
  br i1 %526, label %542, label %555

527:                                              ; preds = %519, %523, %490
  %528 = phi i32 [ %516, %490 ], [ %520, %519 ], [ %524, %523 ]
  %529 = icmp sgt i32 %528, 1023
  br i1 %529, label %530, label %540

530:                                              ; preds = %527
  %531 = and i32 %528, -1024
  %532 = add i32 %112, %531
  %533 = add nsw i32 %532, 1024
  %534 = shl i32 %532, 16
  %535 = ashr exact i32 %534, 16
  %536 = mul nsw i32 %535, %104
  %537 = shl i32 %533, 16
  %538 = ashr exact i32 %537, 16
  %539 = mul nsw i32 %538, %104
  br label %555

540:                                              ; preds = %527
  %541 = ashr i32 %528, 10
  switch i32 %541, label %543 [
    i32 0, label %555
    i32 -1, label %542
  ]

542:                                              ; preds = %525, %540
  br label %555

543:                                              ; preds = %540
  %544 = and i32 %528, -1024
  %545 = or i32 %544, 80
  %546 = add nsw i32 %545, %17
  %547 = add nsw i32 %546, 1024
  %548 = shl i32 %546, 16
  %549 = sub i32 0, %548
  %550 = ashr exact i32 %549, 16
  %551 = mul nsw i32 %550, %104
  %552 = sub i32 -67108864, %548
  %553 = ashr exact i32 %552, 16
  %554 = mul nsw i32 %553, %104
  br label %555

555:                                              ; preds = %540, %525, %543, %542, %530
  %556 = phi i32 [ %536, %530 ], [ %105, %542 ], [ %551, %543 ], [ %107, %525 ], [ %107, %540 ]
  %557 = phi i32 [ %539, %530 ], [ %107, %542 ], [ %554, %543 ], [ %111, %525 ], [ %111, %540 ]
  %558 = phi i32 [ %532, %530 ], [ %99, %542 ], [ %546, %543 ], [ %17, %525 ], [ %17, %540 ]
  %559 = phi i32 [ %533, %530 ], [ %17, %542 ], [ %547, %543 ], [ %108, %525 ], [ %108, %540 ]
  %560 = sub nsw i32 %515, %558
  %561 = shl i32 %560, 16
  %562 = ashr exact i32 %561, 16
  %563 = mul nsw i32 %562, %562
  %564 = add nsw i32 %563, %556
  %565 = ashr i32 %564, 10
  %566 = sub nsw i32 %515, %559
  %567 = shl i32 %566, 16
  %568 = ashr exact i32 %567, 16
  %569 = mul nsw i32 %568, %568
  %570 = add nsw i32 %569, %557
  %571 = ashr i32 %570, 10
  %572 = icmp slt i32 %565, %571
  %573 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %227, i32 11
  %574 = load i32, i32* %573, align 4
  %575 = select i1 %572, i32 %565, i32 %571
  %576 = select i1 %572, i32 %571, i32 %565
  %577 = select i1 %572, i32 %558, i32 %559
  %578 = select i1 %572, i32 %559, i32 %558
  %579 = add nsw i32 %576, %574
  %580 = add nsw i32 %575, %574
  %581 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 1
  store i32 %580, i32* %581, align 4
  %582 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 1
  store i32 %579, i32* %582, align 4
  %583 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 0
  store i32 %577, i32* %583, align 8
  %584 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 0
  store i32 %578, i32* %584, align 4
  %585 = shl i32 %577, 4
  %586 = sub nsw i32 0, %585
  %587 = select i1 %509, i32 %586, i32 %585
  %588 = add nsw i32 %587, %190
  %589 = add nsw i32 %588, %379
  %590 = shl i32 %506, 4
  %591 = sub nsw i32 %589, %590
  %592 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 4
  store i32 %591, i32* %592, align 8
  %593 = sub nsw i32 %591, %467
  %594 = sub i32 %593, %479
  %595 = icmp sgt i32 %594, -1
  %596 = xor i32 %593, -2147483648
  %597 = xor i32 %479, -2147483648
  %598 = select i1 %595, i32 %597, i32 %479
  %599 = select i1 %595, i32 %593, i32 %596
  %600 = select i1 %595, i32 -2147483648, i32 2147483647
  %601 = and i32 %599, %598
  %602 = icmp slt i32 %601, 0
  %603 = select i1 %602, i32 %600, i32 %594
  %604 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 5
  store i32 %603, i32* %604, align 4
  %605 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 3
  store i32 %593, i32* %605, align 4
  %606 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 6
  store i32 %588, i32* %606, align 8
  %607 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 0, i32 2
  store i32 %589, i32* %607, align 8
  %608 = shl i32 %578, 4
  %609 = sub nsw i32 0, %608
  %610 = select i1 %509, i32 %609, i32 %608
  %611 = add nsw i32 %610, %190
  %612 = add nsw i32 %611, %379
  %613 = sub nsw i32 %612, %590
  %614 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 4
  store i32 %613, i32* %614, align 4
  %615 = sub nsw i32 %613, %467
  %616 = sub i32 %615, %479
  %617 = icmp sgt i32 %616, -1
  %618 = xor i32 %615, -2147483648
  %619 = xor i32 %479, -2147483648
  %620 = select i1 %617, i32 %619, i32 %479
  %621 = select i1 %617, i32 %615, i32 %618
  %622 = select i1 %617, i32 -2147483648, i32 2147483647
  %623 = and i32 %621, %620
  %624 = icmp slt i32 %623, 0
  %625 = select i1 %624, i32 %622, i32 %616
  %626 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 5
  store i32 %625, i32* %626, align 4
  %627 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 3
  store i32 %615, i32* %627, align 4
  %628 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 6
  store i32 %611, i32* %628, align 4
  %629 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %227, i64 1, i32 2
  store i32 %612, i32* %629, align 4
  %630 = add nuw nsw i64 %227, 1
  %631 = icmp eq i64 %630, %120
  br i1 %631, label %632, label %226

632:                                              ; preds = %555
  %633 = add nsw i32 %468, -1
  %634 = srem i32 %633, 40
  %635 = icmp slt i32 %634, 0
  %636 = add nsw i32 %634, 40
  %637 = select i1 %635, i32 %636, i32 %634
  store i32 %637, i32* %24, align 4
  %638 = add nsw i32 %637, %25
  %639 = srem i32 %638, 40
  br i1 %114, label %640, label %696

640:                                              ; preds = %632
  %641 = load i32, i32* %113, align 4
  br i1 %126, label %677, label %642

642:                                              ; preds = %640, %642
  %643 = phi i64 [ %674, %642 ], [ 1, %640 ]
  %644 = phi i32 [ %673, %642 ], [ %641, %640 ]
  %645 = phi i32 [ %672, %642 ], [ 0, %640 ]
  %646 = phi i64 [ %675, %642 ], [ %127, %640 ]
  %647 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %643, i64 0, i32 1
  %648 = load i32, i32* %647, align 4
  %649 = icmp slt i32 %648, %644
  %650 = trunc i64 %643 to i32
  %651 = select i1 %649, i32 %650, i32 %645
  %652 = select i1 %649, i32 %648, i32 %644
  %653 = add nuw nsw i64 %643, 1
  %654 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %653, i64 0, i32 1
  %655 = load i32, i32* %654, align 4
  %656 = icmp slt i32 %655, %652
  %657 = trunc i64 %653 to i32
  %658 = select i1 %656, i32 %657, i32 %651
  %659 = select i1 %656, i32 %655, i32 %652
  %660 = add nuw nsw i64 %643, 2
  %661 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %660, i64 0, i32 1
  %662 = load i32, i32* %661, align 4
  %663 = icmp slt i32 %662, %659
  %664 = trunc i64 %660 to i32
  %665 = select i1 %663, i32 %664, i32 %658
  %666 = select i1 %663, i32 %662, i32 %659
  %667 = add nuw nsw i64 %643, 3
  %668 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %667, i64 0, i32 1
  %669 = load i32, i32* %668, align 4
  %670 = icmp slt i32 %669, %666
  %671 = trunc i64 %667 to i32
  %672 = select i1 %670, i32 %671, i32 %665
  %673 = select i1 %670, i32 %669, i32 %666
  %674 = add nuw nsw i64 %643, 4
  %675 = add i64 %646, -4
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %642

677:                                              ; preds = %642, %640
  %678 = phi i32 [ undef, %640 ], [ %672, %642 ]
  %679 = phi i64 [ 1, %640 ], [ %674, %642 ]
  %680 = phi i32 [ %641, %640 ], [ %673, %642 ]
  %681 = phi i32 [ 0, %640 ], [ %672, %642 ]
  br i1 %128, label %696, label %682

682:                                              ; preds = %677, %682
  %683 = phi i64 [ %693, %682 ], [ %679, %677 ]
  %684 = phi i32 [ %692, %682 ], [ %680, %677 ]
  %685 = phi i32 [ %691, %682 ], [ %681, %677 ]
  %686 = phi i64 [ %694, %682 ], [ %125, %677 ]
  %687 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %683, i64 0, i32 1
  %688 = load i32, i32* %687, align 4
  %689 = icmp slt i32 %688, %684
  %690 = trunc i64 %683 to i32
  %691 = select i1 %689, i32 %690, i32 %685
  %692 = select i1 %689, i32 %688, i32 %684
  %693 = add nuw nsw i64 %683, 1
  %694 = add i64 %686, -1
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %696, label %682, !llvm.loop !12

696:                                              ; preds = %677, %682, %632
  %697 = phi i32 [ 0, %632 ], [ %678, %677 ], [ %691, %682 ]
  %698 = sext i32 %697 to i64
  %699 = sext i32 %639 to i64
  %700 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %698, i32 1, i64 %699
  %701 = load i32, i32* %700, align 4
  br label %702

702:                                              ; preds = %714, %696
  %703 = phi i64 [ 0, %696 ], [ %715, %714 ]
  %704 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %703, i32 1, i64 %699
  %705 = load i32, i32* %704, align 4
  %706 = icmp eq i32 %705, %701
  br i1 %706, label %714, label %707

707:                                              ; preds = %702
  %708 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %703, i64 0, i32 1
  %709 = load i32, i32* %708, align 4
  %710 = add nsw i32 %709, 134217727
  store i32 %710, i32* %708, align 4
  %711 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %703, i64 1, i32 1
  %712 = load i32, i32* %711, align 4
  %713 = add nsw i32 %712, 134217727
  store i32 %713, i32* %711, align 4
  br label %714

714:                                              ; preds = %702, %707
  %715 = add nuw nsw i64 %703, 1
  %716 = icmp eq i64 %715, %121
  br i1 %716, label %717, label %702

717:                                              ; preds = %714
  %718 = load i32, i32* %113, align 4
  %719 = load i32, i32* %115, align 4
  br i1 %114, label %720, label %776

720:                                              ; preds = %717
  br i1 %130, label %754, label %721

721:                                              ; preds = %720, %721
  %722 = phi i64 [ %751, %721 ], [ 1, %720 ]
  %723 = phi i32 [ %745, %721 ], [ %718, %720 ]
  %724 = phi i32 [ %750, %721 ], [ %719, %720 ]
  %725 = phi i32 [ %744, %721 ], [ 0, %720 ]
  %726 = phi i32 [ %749, %721 ], [ 0, %720 ]
  %727 = phi i64 [ %752, %721 ], [ %131, %720 ]
  %728 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %722, i64 0, i32 1
  %729 = load i32, i32* %728, align 4
  %730 = icmp sgt i32 %729, %723
  %731 = trunc i64 %722 to i32
  %732 = select i1 %730, i32 %731, i32 %725
  %733 = select i1 %730, i32 %729, i32 %723
  %734 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %722, i64 1, i32 1
  %735 = load i32, i32* %734, align 4
  %736 = icmp slt i32 %735, %724
  %737 = select i1 %736, i32 %731, i32 %726
  %738 = select i1 %736, i32 %735, i32 %724
  %739 = add nuw nsw i64 %722, 1
  %740 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %739, i64 0, i32 1
  %741 = load i32, i32* %740, align 4
  %742 = icmp sgt i32 %741, %733
  %743 = trunc i64 %739 to i32
  %744 = select i1 %742, i32 %743, i32 %732
  %745 = select i1 %742, i32 %741, i32 %733
  %746 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %739, i64 1, i32 1
  %747 = load i32, i32* %746, align 4
  %748 = icmp slt i32 %747, %738
  %749 = select i1 %748, i32 %743, i32 %737
  %750 = select i1 %748, i32 %747, i32 %738
  %751 = add nuw nsw i64 %722, 2
  %752 = add i64 %727, -2
  %753 = icmp eq i64 %752, 0
  br i1 %753, label %754, label %721

754:                                              ; preds = %721, %720
  %755 = phi i32 [ undef, %720 ], [ %744, %721 ]
  %756 = phi i32 [ undef, %720 ], [ %745, %721 ]
  %757 = phi i32 [ undef, %720 ], [ %749, %721 ]
  %758 = phi i32 [ undef, %720 ], [ %750, %721 ]
  %759 = phi i64 [ 1, %720 ], [ %751, %721 ]
  %760 = phi i32 [ %718, %720 ], [ %745, %721 ]
  %761 = phi i32 [ %719, %720 ], [ %750, %721 ]
  %762 = phi i32 [ 0, %720 ], [ %744, %721 ]
  %763 = phi i32 [ 0, %720 ], [ %749, %721 ]
  br i1 %132, label %776, label %764

764:                                              ; preds = %754
  %765 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %759, i64 0, i32 1
  %766 = load i32, i32* %765, align 4
  %767 = icmp sgt i32 %766, %760
  %768 = trunc i64 %759 to i32
  %769 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %759, i64 1, i32 1
  %770 = load i32, i32* %769, align 4
  %771 = icmp slt i32 %770, %761
  %772 = select i1 %771, i32 %770, i32 %761
  %773 = select i1 %771, i32 %768, i32 %763
  %774 = select i1 %767, i32 %766, i32 %760
  %775 = select i1 %767, i32 %768, i32 %762
  br label %776

776:                                              ; preds = %764, %754, %717
  %777 = phi i32 [ 0, %717 ], [ %757, %754 ], [ %773, %764 ]
  %778 = phi i32 [ 0, %717 ], [ %755, %754 ], [ %775, %764 ]
  %779 = phi i32 [ %719, %717 ], [ %758, %754 ], [ %772, %764 ]
  %780 = phi i32 [ %718, %717 ], [ %756, %754 ], [ %774, %764 ]
  %781 = icmp slt i32 %779, %780
  br i1 %781, label %782, label %795

782:                                              ; preds = %776
  %783 = sext i32 %778 to i64
  %784 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %783, i32 0, i64 %141
  %785 = bitcast i32* %784 to i8*
  %786 = sext i32 %777 to i64
  %787 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %786, i32 0, i64 %141
  %788 = bitcast i32* %787 to i8*
  %789 = shl nuw nsw i64 %141, 2
  %790 = sub nsw i64 1300, %789
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %785, i8* align 4 %788, i64 %790, i1 false)
  %791 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %783, i64 0
  %792 = bitcast %struct.NSQ_sample_struct* %791 to i8*
  %793 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %786, i64 1
  %794 = bitcast %struct.NSQ_sample_struct* %793 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %792, i8* align 4 %794, i64 28, i1 false)
  br label %795

795:                                              ; preds = %782, %776
  %796 = icmp slt i64 %141, %118
  %797 = and i1 %116, %796
  br i1 %797, label %839, label %798

798:                                              ; preds = %795
  %799 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %698, i32 2, i64 %699
  %800 = load i32, i32* %799, align 4
  %801 = lshr i32 %800, 9
  %802 = add nuw nsw i32 %801, 1
  %803 = lshr i32 %802, 1
  %804 = trunc i32 %803 to i8
  %805 = trunc i64 %141 to i32
  %806 = sub nsw i32 %805, %25
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds i8, i8* %4, i64 %807
  store i8 %804, i8* %808, align 1
  %809 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %698, i32 3, i64 %699
  %810 = load i32, i32* %809, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds i32, i32* %7, i64 %699
  %813 = load i32, i32* %812, align 4
  %814 = sext i32 %813 to i64
  %815 = mul nsw i64 %814, %811
  %816 = lshr i64 %815, 16
  %817 = trunc i64 %816 to i32
  %818 = ashr i32 %817, 7
  %819 = add nsw i32 %818, 1
  %820 = lshr i32 %819, 1
  %821 = icmp sgt i32 %817, 8388479
  %822 = icmp slt i32 %819, -65536
  %823 = select i1 %822, i32 32768, i32 %820
  %824 = select i1 %821, i32 32767, i32 %823
  %825 = trunc i32 %824 to i16
  %826 = getelementptr inbounds i16, i16* %5, i64 %807
  store i16 %825, i16* %826, align 2
  %827 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %698, i32 5, i64 %699
  %828 = load i32, i32* %827, align 4
  %829 = load i32, i32* %34, align 4
  %830 = sub nsw i32 %829, %25
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds %struct.silk_nsq_state, %struct.silk_nsq_state* %0, i64 0, i32 1, i64 %831
  store i32 %828, i32* %832, align 4
  %833 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %698, i32 4, i64 %699
  %834 = load i32, i32* %833, align 4
  %835 = load i32, i32* %35, align 4
  %836 = sub nsw i32 %835, %25
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds i32, i32* %6, i64 %837
  store i32 %834, i32* %838, align 4
  br label %839

839:                                              ; preds = %798, %795
  %840 = load i32, i32* %34, align 4
  %841 = add nsw i32 %840, 1
  store i32 %841, i32* %34, align 4
  %842 = load i32, i32* %35, align 4
  %843 = add nsw i32 %842, 1
  store i32 %843, i32* %35, align 4
  %844 = add nuw nsw i64 %141, 16
  br label %845

845:                                              ; preds = %845, %839
  %846 = phi i64 [ 0, %839 ], [ %887, %845 ]
  %847 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 3
  %848 = load i32, i32* %847, align 4
  %849 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 7
  store i32 %848, i32* %849, align 4
  %850 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 4
  %851 = load i32, i32* %850, align 8
  %852 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 8
  store i32 %851, i32* %852, align 4
  %853 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 2
  %854 = load i32, i32* %853, align 8
  %855 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 0, i64 %844
  store i32 %854, i32* %855, align 4
  %856 = load i32, i32* %24, align 4
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 3, i64 %857
  store i32 %854, i32* %858, align 4
  %859 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 0
  %860 = load i32, i32* %859, align 8
  %861 = load i32, i32* %24, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 2, i64 %862
  store i32 %860, i32* %863, align 4
  %864 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 6
  %865 = load i32, i32* %864, align 8
  %866 = shl i32 %865, 1
  %867 = load i32, i32* %24, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 4, i64 %868
  store i32 %866, i32* %869, align 4
  %870 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 5
  %871 = load i32, i32* %870, align 4
  %872 = load i32, i32* %24, align 4
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 5, i64 %873
  store i32 %871, i32* %874, align 4
  %875 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 9
  %876 = load i32, i32* %875, align 4
  %877 = ashr i32 %860, 9
  %878 = add nsw i32 %877, 1
  %879 = ashr i32 %878, 1
  %880 = add i32 %876, %879
  store i32 %880, i32* %875, align 4
  %881 = load i32, i32* %24, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 1, i64 %882
  store i32 %880, i32* %883, align 4
  %884 = getelementptr inbounds [2 x %struct.NSQ_sample_struct], [2 x %struct.NSQ_sample_struct]* %32, i64 %846, i64 0, i32 1
  %885 = load i32, i32* %884, align 4
  %886 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %846, i32 11
  store i32 %885, i32* %886, align 4
  %887 = add nuw nsw i64 %846, 1
  %888 = icmp eq i64 %887, %122
  br i1 %888, label %889, label %845

889:                                              ; preds = %845
  %890 = load i32, i32* %24, align 4
  %891 = sext i32 %890 to i64
  %892 = getelementptr inbounds i32, i32* %7, i64 %891
  store i32 %36, i32* %892, align 4
  %893 = add nuw nsw i64 %141, 1
  %894 = icmp eq i64 %893, %119
  br i1 %894, label %133, label %140

895:                                              ; preds = %895, %138
  %896 = phi i64 [ 0, %138 ], [ %907, %895 ]
  %897 = phi i64 [ %139, %138 ], [ %908, %895 ]
  %898 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %896, i32 0
  %899 = bitcast [96 x i32]* %898 to i8*
  %900 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %896, i32 0, i64 %134
  %901 = bitcast i32* %900 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %899, i8* align 4 %901, i64 64, i1 false)
  %902 = or i64 %896, 1
  %903 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %902, i32 0
  %904 = bitcast [96 x i32]* %903 to i8*
  %905 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %902, i32 0, i64 %134
  %906 = bitcast i32* %905 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %904, i8* align 4 %906, i64 64, i1 false)
  %907 = add nuw nsw i64 %896, 2
  %908 = add i64 %897, -2
  %909 = icmp eq i64 %908, 0
  br i1 %909, label %910, label %895

910:                                              ; preds = %895, %133
  %911 = phi i64 [ 0, %133 ], [ %907, %895 ]
  %912 = icmp eq i64 %136, 0
  br i1 %912, label %918, label %913

913:                                              ; preds = %910
  %914 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %911, i32 0
  %915 = bitcast [96 x i32]* %914 to i8*
  %916 = getelementptr inbounds %struct.NSQ_del_dec_struct, %struct.NSQ_del_dec_struct* %1, i64 %911, i32 0, i64 %134
  %917 = bitcast i32* %916 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %915, i8* align 4 %917, i64 64, i1 false)
  br label %918

918:                                              ; preds = %910, %913
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{i32 0, i32 33}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !7}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !7}
