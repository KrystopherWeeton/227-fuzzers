; ModuleID = 'gen/headless/public/devtools/domains/performance.cc'
source_filename = "gen/headless/public/devtools/domains/performance.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::performance::Domain" = type <{ %"class.headless::internal::MessageDispatcher"*, %"class.base::ObserverList", i8, [7 x i8] }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.headless::internal::MessageDispatcher" = type { i32 (...)** }
%"class.headless::performance::ExperimentalDomain" = type { %"class.headless::performance::Domain.base", [7 x i8] }
%"class.headless::performance::Domain.base" = type <{ %"class.headless::internal::MessageDispatcher"*, %"class.base::ObserverList", i8 }>
%"class.headless::performance::Observer" = type { %"class.headless::performance::ExperimentalObserver" }
%"class.headless::performance::ExperimentalObserver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.headless::ErrorReporter" = type { %"class.std::__1::vector.74", %"class.std::__1::vector.81" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { i8**, i8**, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { i8** }
%"class.std::__1::vector.81" = type { %"class.std::__1::__vector_base.82" }
%"class.std::__1::__vector_base.82" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.headless::performance::MetricsParams"* }
%"class.headless::performance::MetricsParams" = type { %"class.std::__1::vector.103", %"class.std::__1::basic_string" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"*, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.headless::performance::Metric"* }
%"class.headless::performance::Metric" = type { %"class.std::__1::basic_string", double }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::unique_ptr.105"* }
%"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"struct.std::__1::default_delete.123" = type { i8 }
%"class.headless::performance::DisableParams" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.44" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.headless::performance::DisableResult"* }
%"class.headless::performance::DisableResult" = type { i8 }
%"class.base::OnceCallback.45" = type { %"class.base::internal::CallbackBase" }
%"class.headless::performance::EnableParams" = type { %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.49 }
%union.anon.49 = type { i32 }
%"class.base::OnceCallback.53" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.headless::performance::EnableResult"* }
%"class.headless::performance::EnableResult" = type { i8 }
%"class.headless::performance::SetTimeDomainParams" = type { i32 }
%"class.base::OnceCallback.60" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.headless::performance::SetTimeDomainResult"* }
%"class.headless::performance::SetTimeDomainResult" = type { i8 }
%"class.headless::performance::GetMetricsParams" = type { i8 }
%"class.base::OnceCallback.67" = type { %"class.base::internal::CallbackBase" }
%"class.headless::performance::GetMetricsResult" = type { %"class.std::__1::vector.103" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.headless::performance::GetMetricsResult"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS1_14default_deleteIS5_EEEEEE3RunES8_ = comdat any

$_ZNKSt3__114default_deleteIN8headless11performance13MetricsParamsEEclEPS3_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [20 x i8] c"Performance.metrics\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Performance.disable\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Performance.enable\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"Performance.setTimeDomain\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Performance.getMetrics\00", align 1

@_ZN8headless11performance6DomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::performance::Domain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::performance::Domain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless11performance6DomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless11performance6DomainD1Ev = hidden unnamed_addr alias void (%"class.headless::performance::Domain"*), void (%"class.headless::performance::Domain"*)* @_ZN8headless11performance6DomainD2Ev
@_ZN8headless11performance18ExperimentalDomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::performance::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::performance::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless11performance18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless11performance18ExperimentalDomainD2Ev = hidden unnamed_addr alias void (%"class.headless::performance::ExperimentalDomain"*), bitcast (void (%"class.headless::performance::Domain"*)* @_ZN8headless11performance6DomainD2Ev to void (%"class.headless::performance::ExperimentalDomain"*)*)
@_ZN8headless11performance18ExperimentalDomainD1Ev = hidden unnamed_addr alias void (%"class.headless::performance::ExperimentalDomain"*), bitcast (void (%"class.headless::performance::Domain"*)* @_ZN8headless11performance6DomainD2Ev to void (%"class.headless::performance::ExperimentalDomain"*)*)

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.headless::performance::ExperimentalDomain"* @_ZN8headless11performance6Domain15GetExperimentalEv(%"class.headless::performance::Domain"* readnone) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.headless::performance::Domain"* %0 to %"class.headless::performance::ExperimentalDomain"*
  ret %"class.headless::performance::ExperimentalDomain"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain11AddObserverEPNS0_8ObserverE(%"class.headless::performance::Domain"*, %"class.headless::performance::Observer"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  store i8 1, i8* %5, align 8
  %9 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %10 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %11 = ptrtoint %"class.headless::performance::Domain"* %0 to i64
  %12 = tail call i8* @_Znwm(i64 56) #9, !noalias !3
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !3
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::performance::Domain"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain20DispatchMetricsEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !3
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !3
  %18 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !3
  %19 = bitcast %"class.headless::internal::MessageDispatcher"* %10 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %20, i64 2
  %22 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %21, align 8
  call void %22(%"class.headless::internal::MessageDispatcher"* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  br label %24

24:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  %25 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1
  %26 = icmp eq %"class.headless::performance::Observer"* %1, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %28, align 8
  br label %48

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %34
  %36 = bitcast %"class.headless::performance::Observer"* %1 to i8*
  br i1 %35, label %45, label %37

37:                                               ; preds = %30, %42
  %38 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %43, %42 ], [ %32, %30 ]
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, %36
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 1
  %44 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %43, %34
  br i1 %44, label %48, label %37

45:                                               ; preds = %37, %30
  %46 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %32, %30 ], [ %38, %37 ]
  %47 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %46, %34
  br i1 %47, label %48, label %121

48:                                               ; preds = %42, %27, %45
  %49 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %29, %27 ], [ %34, %45 ], [ %34, %42 ]
  %50 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  %53 = ptrtoint %"class.headless::performance::Observer"* %1 to i64
  %54 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  %57 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %49, %56
  %58 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %56 to i64
  br i1 %57, label %59, label %64

59:                                               ; preds = %48
  %60 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %49 to i64*
  store i64 %53, i64* %60, align 8
  %61 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 1
  %62 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %61 to i64
  %63 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  store i64 %62, i64* %63, align 8
  br label %121

64:                                               ; preds = %48
  %65 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %49 to i64
  %66 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  %67 = bitcast %"class.base::ObserverList"* %25 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %65, %68
  %70 = ashr exact i64 %69, 3
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 2305843009213693951
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = bitcast %"class.base::ObserverList"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %74) #11
  unreachable

75:                                               ; preds = %64
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %55 to i64*
  %77 = sub i64 %58, %68
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, 1152921504606846975
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = ashr exact i64 %77, 2
  %82 = icmp ult i64 %81, %71
  %83 = select i1 %82, i64 %71, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 2305843009213693951
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #11
  unreachable

88:                                               ; preds = %85, %75
  %89 = phi i64 [ %83, %85 ], [ 2305843009213693951, %75 ]
  %90 = shl i64 %89, 3
  %91 = call i8* @_Znwm(i64 %90) #9
  %92 = bitcast i8* %91 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %70
  %97 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %94
  %98 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %97 to i64
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %96 to i64*
  store i64 %53, i64* %99, align 8
  %100 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 1
  %101 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %100 to i64
  %102 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  %104 = load i64, i64* %66, align 8
  %105 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 %108
  %110 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %93
  %113 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %109 to i8*
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #10
  %115 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  br label %116

116:                                              ; preds = %112, %93
  %117 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %103, %93 ], [ %115, %112 ]
  store i64 %110, i64* %67, align 8
  store i64 %101, i64* %66, align 8
  store i64 %98, i64* %76, align 8
  %118 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %117 to i8*
  call void @_ZdlPv(i8* %120) #9
  br label %121

121:                                              ; preds = %119, %116, %59, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain29RegisterEventHandlersIfNeededEv(%"class.headless::performance::Domain"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  store i8 1, i8* %3, align 8
  %7 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %8 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %7, align 8
  %9 = ptrtoint %"class.headless::performance::Domain"* %0 to i64
  %10 = tail call i8* @_Znwm(i64 56) #9, !noalias !8
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !8
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::performance::Domain"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain20DispatchMetricsEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !8
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to i64*
  store i64 %9, i64* %15, align 8, !noalias !8
  %16 = bitcast %"class.base::RepeatingCallback"* %2 to i8**
  store i8* %10, i8** %16, align 8, !alias.scope !8
  %17 = bitcast %"class.headless::internal::MessageDispatcher"* %8 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %18 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %18, i64 2
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %2) #10
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  br label %22

22:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain14RemoveObserverEPNS0_8ObserverE(%"class.headless::performance::Domain"*, %"class.headless::performance::Observer"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.headless::performance::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain20DispatchMetricsEventERKN4base5ValueE(%"class.headless::performance::Domain"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = alloca %"class.std::__1::unique_ptr.119", align 8
  %5 = alloca %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #10
  %8 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #10
  %9 = bitcast %"class.std::__1::unique_ptr.119"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %4, i64 0, i32 0, i32 0, i32 0
  %11 = call %"class.headless::performance::MetricsParams"* @_ZN8headless11performance13MetricsParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #10
  store %"class.headless::performance::MetricsParams"* %11, %"class.headless::performance::MetricsParams"** %10, align 8
  %12 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1
  %13 = bitcast %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %17 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %12, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false)
  %19 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !13
  %20 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8, !noalias !13
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %21
  %23 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %23) #10
  br i1 %22, label %24, label %26

24:                                               ; preds = %2
  %25 = bitcast %"class.base::ObserverList"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #10, !alias.scope !13
  br label %66

26:                                               ; preds = %2
  store %"class.base::ObserverList"* %12, %"class.base::ObserverList"** %14, align 8
  %27 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %23, %"class.base::internal::LinkNodeBase"* %27) #10
  store i64 0, i64* %15, align 8
  %28 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::ObserverList"* %12 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 3
  br label %38

38:                                               ; preds = %31, %26
  %39 = phi i64 [ %37, %31 ], [ -1, %26 ]
  store i64 %39, i64* %16, align 8
  %40 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %14, align 8
  %41 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %40, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.base::ObserverList"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, %39
  %49 = select i1 %48, i64 %47, i64 %39
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %38
  %52 = inttoptr i64 %45 to %"class.base::internal::UncheckedObserverAdapter"*
  %53 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %40, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %52, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %66

57:                                               ; preds = %51, %61
  %58 = phi i64 [ %59, %61 ], [ 0, %51 ]
  %59 = add nuw i64 %58, 1
  store i64 %59, i64* %15, align 8
  %60 = icmp ult i64 %59, %49
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %53, align 8
  %63 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %62, i64 %59, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %57, label %66

66:                                               ; preds = %61, %57, %51, %38, %24
  %67 = bitcast %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #10
  %68 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %70 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %71 = getelementptr inbounds %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.base::ObserverList<headless::performance::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %71) #10
  %73 = bitcast %"class.base::ObserverList"** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #10, !alias.scope !16
  %74 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %14, align 8
  br label %75

75:                                               ; preds = %321, %66
  %76 = phi %"class.base::ObserverList"* [ %74, %66 ], [ %319, %321 ]
  %77 = icmp eq %"class.base::ObserverList"* %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %75
  %79 = load i64, i64* %15, align 8
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %76, i64 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.base::ObserverList"* %76 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %82, %84
  %86 = ashr exact i64 %85, 3
  %87 = load i64, i64* %16, align 8
  %88 = icmp ult i64 %86, %87
  %89 = select i1 %88, i64 %86, i64 %87
  %90 = icmp eq i64 %79, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %78
  %92 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %68, align 8
  br label %109

93:                                               ; preds = %78, %75
  %94 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %68, align 8
  %95 = icmp eq %"class.base::ObserverList"* %94, null
  br i1 %95, label %209, label %96

96:                                               ; preds = %93
  %97 = load i64, i64* %69, align 8
  %98 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %94, i64 0, i32 0, i32 0, i32 1
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.base::ObserverList"* %94 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = ashr exact i64 %103, 3
  %105 = load i64, i64* %70, align 8
  %106 = icmp ult i64 %104, %105
  %107 = select i1 %106, i64 %104, i64 %105
  %108 = icmp eq i64 %97, %107
  br i1 %108, label %118, label %109

109:                                              ; preds = %96, %91
  %110 = phi %"class.base::ObserverList"* [ %92, %91 ], [ %94, %96 ]
  %111 = icmp eq %"class.base::ObserverList"* %76, %110
  %112 = load i64, i64* %15, align 8
  %113 = load i64, i64* %69, align 8
  %114 = icmp eq i64 %112, %113
  %115 = and i1 %111, %114
  br i1 %115, label %116, label %308

116:                                              ; preds = %109
  %117 = icmp eq %"class.base::ObserverList"* %76, null
  br i1 %117, label %209, label %118

118:                                              ; preds = %96, %116
  %119 = phi %"class.base::ObserverList"* [ %76, %116 ], [ %94, %96 ]
  %120 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 1
  %121 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 1, i32 0, i32 0, i32 1
  %122 = bitcast %"class.base::internal::LinkNodeBase"** %121 to %"class.base::LinkNode"**
  %123 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %122, align 8
  %124 = bitcast %"class.base::LinkedList"* %120 to %"class.base::LinkNode"**
  %125 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %124, align 8
  %126 = icmp eq %"class.base::LinkNode"* %123, %125
  br i1 %126, label %127, label %205

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %128, align 8
  %130 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %119, i64 0, i32 0, i32 0, i32 1
  %131 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  %132 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %129, %131
  br i1 %132, label %141, label %133

133:                                              ; preds = %127, %138
  %134 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %138 ], [ %129, %127 ]
  %135 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = icmp eq i8* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %134, i64 1
  %140 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %131
  br i1 %140, label %205, label %133

141:                                              ; preds = %133, %127
  %142 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %129, %127 ], [ %134, %133 ]
  %143 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %142 to i64
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %142, %131
  br i1 %144, label %205, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %142, i64 1
  %147 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %146, %131
  br i1 %147, label %200, label %148

148:                                              ; preds = %145
  %149 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 -2, i32 0
  %150 = ptrtoint i8** %149 to i64
  %151 = sub i64 %150, %143
  %152 = lshr i64 %151, 3
  %153 = add nuw nsw i64 %152, 1
  %154 = and i64 %153, 3
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %174, label %156

156:                                              ; preds = %148, %169
  %157 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %171, %169 ], [ %146, %148 ]
  %158 = phi i64 [ %170, %169 ], [ %143, %148 ]
  %159 = phi i64 [ %172, %169 ], [ %154, %148 ]
  %160 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %156
  %164 = ptrtoint i8* %161 to i64
  %165 = inttoptr i64 %158 to %"class.base::internal::UncheckedObserverAdapter"*
  %166 = inttoptr i64 %158 to i64*
  store i64 %164, i64* %166, align 8
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %165, i64 1
  %168 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %167 to i64
  br label %169

169:                                              ; preds = %163, %156
  %170 = phi i64 [ %158, %156 ], [ %168, %163 ]
  %171 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %157, i64 1
  %172 = add i64 %159, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %156, !llvm.loop !19

174:                                              ; preds = %169, %148
  %175 = phi i64 [ undef, %148 ], [ %170, %169 ]
  %176 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %146, %148 ], [ %171, %169 ]
  %177 = phi i64 [ %143, %148 ], [ %170, %169 ]
  %178 = icmp ult i64 %151, 24
  br i1 %178, label %196, label %179

179:                                              ; preds = %174, %411
  %180 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %413, %411 ], [ %176, %174 ]
  %181 = phi i64 [ %412, %411 ], [ %177, %174 ]
  %182 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = icmp eq i8* %183, null
  br i1 %184, label %191, label %185

185:                                              ; preds = %179
  %186 = ptrtoint i8* %183 to i64
  %187 = inttoptr i64 %181 to %"class.base::internal::UncheckedObserverAdapter"*
  %188 = inttoptr i64 %181 to i64*
  store i64 %186, i64* %188, align 8
  %189 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %187, i64 1
  %190 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %189 to i64
  br label %191

191:                                              ; preds = %185, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %185 ]
  %193 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 1, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = icmp eq i8* %194, null
  br i1 %195, label %389, label %383

196:                                              ; preds = %411, %174
  %197 = phi i64 [ %175, %174 ], [ %412, %411 ]
  %198 = inttoptr i64 %197 to %"class.base::internal::UncheckedObserverAdapter"*
  %199 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  br label %200

200:                                              ; preds = %196, %145
  %201 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %131, %145 ], [ %199, %196 ]
  %202 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %142, %145 ], [ %198, %196 ]
  %203 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %202, %201
  br i1 %203, label %205, label %204

204:                                              ; preds = %200
  store %"class.base::internal::UncheckedObserverAdapter"* %202, %"class.base::internal::UncheckedObserverAdapter"** %130, align 8
  br label %205

205:                                              ; preds = %138, %204, %200, %141, %118
  %206 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %68, align 8
  %207 = icmp eq %"class.base::ObserverList"* %206, null
  br i1 %207, label %209, label %208

208:                                              ; preds = %205
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %68, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %71) #10
  br label %209

209:                                              ; preds = %93, %116, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #10
  %210 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %14, align 8
  %211 = icmp eq %"class.base::ObserverList"* %210, null
  br i1 %211, label %302, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 1
  %214 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 1, i32 0, i32 0, i32 1
  %215 = bitcast %"class.base::internal::LinkNodeBase"** %214 to %"class.base::LinkNode"**
  %216 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %215, align 8
  %217 = bitcast %"class.base::LinkedList"* %213 to %"class.base::LinkNode"**
  %218 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %217, align 8
  %219 = icmp eq %"class.base::LinkNode"* %216, %218
  br i1 %219, label %220, label %298

220:                                              ; preds = %212
  %221 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %221, align 8
  %223 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %210, i64 0, i32 0, i32 0, i32 1
  %224 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  %225 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %222, %224
  br i1 %225, label %234, label %226

226:                                              ; preds = %220, %231
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %231 ], [ %222, %220 ]
  %228 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 0, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = icmp eq i8* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %227, i64 1
  %233 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %224
  br i1 %233, label %298, label %226

234:                                              ; preds = %226, %220
  %235 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %222, %220 ], [ %227, %226 ]
  %236 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %235 to i64
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %235, %224
  br i1 %237, label %298, label %238

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %235, i64 1
  %240 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %239, %224
  br i1 %240, label %293, label %241

241:                                              ; preds = %238
  %242 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 -2, i32 0
  %243 = ptrtoint i8** %242 to i64
  %244 = sub i64 %243, %236
  %245 = lshr i64 %244, 3
  %246 = add nuw nsw i64 %245, 1
  %247 = and i64 %246, 3
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %267, label %249

249:                                              ; preds = %241, %262
  %250 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %264, %262 ], [ %239, %241 ]
  %251 = phi i64 [ %263, %262 ], [ %236, %241 ]
  %252 = phi i64 [ %265, %262 ], [ %247, %241 ]
  %253 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = icmp eq i8* %254, null
  br i1 %255, label %262, label %256

256:                                              ; preds = %249
  %257 = ptrtoint i8* %254 to i64
  %258 = inttoptr i64 %251 to %"class.base::internal::UncheckedObserverAdapter"*
  %259 = inttoptr i64 %251 to i64*
  store i64 %257, i64* %259, align 8
  %260 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %258, i64 1
  %261 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %260 to i64
  br label %262

262:                                              ; preds = %256, %249
  %263 = phi i64 [ %251, %249 ], [ %261, %256 ]
  %264 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %250, i64 1
  %265 = add i64 %252, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %249, !llvm.loop !21

267:                                              ; preds = %262, %241
  %268 = phi i64 [ undef, %241 ], [ %263, %262 ]
  %269 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %239, %241 ], [ %264, %262 ]
  %270 = phi i64 [ %236, %241 ], [ %263, %262 ]
  %271 = icmp ult i64 %244, 24
  br i1 %271, label %289, label %272

272:                                              ; preds = %267, %379
  %273 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %381, %379 ], [ %269, %267 ]
  %274 = phi i64 [ %380, %379 ], [ %270, %267 ]
  %275 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = icmp eq i8* %276, null
  br i1 %277, label %284, label %278

278:                                              ; preds = %272
  %279 = ptrtoint i8* %276 to i64
  %280 = inttoptr i64 %274 to %"class.base::internal::UncheckedObserverAdapter"*
  %281 = inttoptr i64 %274 to i64*
  store i64 %279, i64* %281, align 8
  %282 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %280, i64 1
  %283 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %282 to i64
  br label %284

284:                                              ; preds = %278, %272
  %285 = phi i64 [ %274, %272 ], [ %283, %278 ]
  %286 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 1, i32 0
  %287 = load i8*, i8** %286, align 8
  %288 = icmp eq i8* %287, null
  br i1 %288, label %357, label %351

289:                                              ; preds = %379, %267
  %290 = phi i64 [ %268, %267 ], [ %380, %379 ]
  %291 = inttoptr i64 %290 to %"class.base::internal::UncheckedObserverAdapter"*
  %292 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  br label %293

293:                                              ; preds = %289, %238
  %294 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %224, %238 ], [ %292, %289 ]
  %295 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %235, %238 ], [ %291, %289 ]
  %296 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %295, %294
  br i1 %296, label %298, label %297

297:                                              ; preds = %293
  store %"class.base::internal::UncheckedObserverAdapter"* %295, %"class.base::internal::UncheckedObserverAdapter"** %223, align 8
  br label %298

298:                                              ; preds = %231, %297, %293, %234, %212
  %299 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %14, align 8
  %300 = icmp eq %"class.base::ObserverList"* %299, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %298
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %14, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %23) #10
  br label %302

302:                                              ; preds = %209, %298, %301
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #10
  %303 = load %"class.headless::performance::MetricsParams"*, %"class.headless::performance::MetricsParams"** %10, align 8
  store %"class.headless::performance::MetricsParams"* null, %"class.headless::performance::MetricsParams"** %10, align 8
  %304 = icmp eq %"class.headless::performance::MetricsParams"* %303, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %302
  %306 = bitcast %"class.std::__1::unique_ptr.119"* %4 to %"struct.std::__1::default_delete.123"*
  call void @_ZNKSt3__114default_deleteIN8headless11performance13MetricsParamsEEclEPS3_(%"struct.std::__1::default_delete.123"* nonnull %306, %"class.headless::performance::MetricsParams"* nonnull %303) #10
  br label %307

307:                                              ; preds = %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #10
  ret void

308:                                              ; preds = %109
  %309 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %76, i64 0, i32 0, i32 0, i32 0
  %310 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %309, align 8
  %311 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %310, i64 %112
  %312 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %311 to %"class.headless::performance::ExperimentalObserver"**
  %313 = load %"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::ExperimentalObserver"** %312, align 8
  %314 = load %"class.headless::performance::MetricsParams"*, %"class.headless::performance::MetricsParams"** %10, align 8
  %315 = bitcast %"class.headless::performance::ExperimentalObserver"* %313 to void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)***
  %316 = load void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)**, void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)*** %315, align 8
  %317 = getelementptr inbounds void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)*, void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)** %316, i64 2
  %318 = load void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)*, void (%"class.headless::performance::ExperimentalObserver"*, %"class.headless::performance::MetricsParams"*)** %317, align 8
  call void %318(%"class.headless::performance::ExperimentalObserver"* %313, %"class.headless::performance::MetricsParams"* dereferenceable(48) %314) #10
  %319 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %14, align 8
  %320 = icmp eq %"class.base::ObserverList"* %319, null
  br i1 %320, label %321, label %322

321:                                              ; preds = %346, %342, %308, %322, %336
  br label %75

322:                                              ; preds = %308
  %323 = load i64, i64* %15, align 8
  %324 = add i64 %323, 1
  store i64 %324, i64* %15, align 8
  %325 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %319, i64 0, i32 0, i32 0, i32 1
  %326 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"class.base::ObserverList"* %319 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = sub i64 %327, %329
  %331 = ashr exact i64 %330, 3
  %332 = load i64, i64* %16, align 8
  %333 = icmp ult i64 %331, %332
  %334 = select i1 %333, i64 %331, i64 %332
  %335 = icmp ult i64 %324, %334
  br i1 %335, label %336, label %321

336:                                              ; preds = %322
  %337 = inttoptr i64 %329 to %"class.base::internal::UncheckedObserverAdapter"*
  %338 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %319, i64 0, i32 0, i32 0, i32 0
  %339 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %337, i64 %324, i32 0
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, null
  br i1 %341, label %342, label %321

342:                                              ; preds = %336, %346
  %343 = phi i64 [ %344, %346 ], [ %324, %336 ]
  %344 = add nuw i64 %343, 1
  store i64 %344, i64* %15, align 8
  %345 = icmp ult i64 %344, %334
  br i1 %345, label %346, label %321

346:                                              ; preds = %342
  %347 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %338, align 8
  %348 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %347, i64 %344, i32 0
  %349 = load i8*, i8** %348, align 8
  %350 = icmp eq i8* %349, null
  br i1 %350, label %342, label %321

351:                                              ; preds = %284
  %352 = ptrtoint i8* %287 to i64
  %353 = inttoptr i64 %285 to %"class.base::internal::UncheckedObserverAdapter"*
  %354 = inttoptr i64 %285 to i64*
  store i64 %352, i64* %354, align 8
  %355 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %353, i64 1
  %356 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %355 to i64
  br label %357

357:                                              ; preds = %351, %284
  %358 = phi i64 [ %285, %284 ], [ %356, %351 ]
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 2, i32 0
  %360 = load i8*, i8** %359, align 8
  %361 = icmp eq i8* %360, null
  br i1 %361, label %368, label %362

362:                                              ; preds = %357
  %363 = ptrtoint i8* %360 to i64
  %364 = inttoptr i64 %358 to %"class.base::internal::UncheckedObserverAdapter"*
  %365 = inttoptr i64 %358 to i64*
  store i64 %363, i64* %365, align 8
  %366 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %364, i64 1
  %367 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %366 to i64
  br label %368

368:                                              ; preds = %362, %357
  %369 = phi i64 [ %358, %357 ], [ %367, %362 ]
  %370 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 3, i32 0
  %371 = load i8*, i8** %370, align 8
  %372 = icmp eq i8* %371, null
  br i1 %372, label %379, label %373

373:                                              ; preds = %368
  %374 = ptrtoint i8* %371 to i64
  %375 = inttoptr i64 %369 to %"class.base::internal::UncheckedObserverAdapter"*
  %376 = inttoptr i64 %369 to i64*
  store i64 %374, i64* %376, align 8
  %377 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %375, i64 1
  %378 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %377 to i64
  br label %379

379:                                              ; preds = %373, %368
  %380 = phi i64 [ %369, %368 ], [ %378, %373 ]
  %381 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %273, i64 4
  %382 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %381, %224
  br i1 %382, label %289, label %272

383:                                              ; preds = %191
  %384 = ptrtoint i8* %194 to i64
  %385 = inttoptr i64 %192 to %"class.base::internal::UncheckedObserverAdapter"*
  %386 = inttoptr i64 %192 to i64*
  store i64 %384, i64* %386, align 8
  %387 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %385, i64 1
  %388 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %387 to i64
  br label %389

389:                                              ; preds = %383, %191
  %390 = phi i64 [ %192, %191 ], [ %388, %383 ]
  %391 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 2, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = icmp eq i8* %392, null
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = ptrtoint i8* %392 to i64
  %396 = inttoptr i64 %390 to %"class.base::internal::UncheckedObserverAdapter"*
  %397 = inttoptr i64 %390 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %396, i64 1
  %399 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %398 to i64
  br label %400

400:                                              ; preds = %394, %389
  %401 = phi i64 [ %390, %389 ], [ %399, %394 ]
  %402 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 3, i32 0
  %403 = load i8*, i8** %402, align 8
  %404 = icmp eq i8* %403, null
  br i1 %404, label %411, label %405

405:                                              ; preds = %400
  %406 = ptrtoint i8* %403 to i64
  %407 = inttoptr i64 %401 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = inttoptr i64 %401 to i64*
  store i64 %406, i64* %408, align 8
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 1
  %410 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %409 to i64
  br label %411

411:                                              ; preds = %405, %400
  %412 = phi i64 [ %401, %400 ], [ %410, %405 ]
  %413 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %180, i64 4
  %414 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %413, %131
  br i1 %414, label %196, label %179
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain7DisableENSt3__110unique_ptrINS0_13DisableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_13DisableResultENS5_ISA_EEEEEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.headless::performance::DisableParams"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless11performance13DisableParams9SerializeEv(%"class.headless::performance::DisableParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !22
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !22
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !22
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !22
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !22
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !22
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !22
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::performance::DisableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::performance::DisableParams", %"class.headless::performance::DisableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless11performance13DisableParams9SerializeEv(%"class.headless::performance::DisableParams"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.68", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::unique_ptr.68", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.68"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::DisableResult"* null, %"class.headless::performance::DisableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.68"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.68"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.68"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.68"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::performance::DisableResult"*, %"class.headless::performance::DisableResult"** %19, align 8
  store %"class.headless::performance::DisableResult"* null, %"class.headless::performance::DisableResult"** %19, align 8
  %27 = icmp eq %"class.headless::performance::DisableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::performance::DisableResult", %"class.headless::performance::DisableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::performance::DisableResult"* @_ZN8headless11performance13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.68"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::DisableResult"* %34, %"class.headless::performance::DisableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.68"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.68"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.68"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.68"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::performance::DisableResult"*, %"class.headless::performance::DisableResult"** %36, align 8
  store %"class.headless::performance::DisableResult"* null, %"class.headless::performance::DisableResult"** %36, align 8
  %47 = icmp eq %"class.headless::performance::DisableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::performance::DisableResult", %"class.headless::performance::DisableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain7DisableEN4base12OnceCallbackIFvvEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.45", align 8
  %4 = tail call i8* @_Znwm(i64 1) #9
  %5 = bitcast i8* %4 to %"class.headless::performance::DisableParams"*
  %6 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless11performance13DisableParams9SerializeEv(%"class.headless::performance::DisableParams"* nonnull %5) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.45"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.45"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %14 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, i64 1
  %16 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %15, align 8
  call void %16(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.45"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain7DisableENSt3__110unique_ptrINS0_13DisableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.headless::performance::DisableParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless11performance13DisableParams9SerializeEv(%"class.headless::performance::DisableParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::performance::DisableParams"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::performance::DisableParams", %"class.headless::performance::DisableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain6EnableENSt3__110unique_ptrINS0_12EnableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_12EnableResultENS5_ISA_EEEEEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.headless::performance::EnableParams"*, %"class.base::OnceCallback.53"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless11performance12EnableParams9SerializeEv(%"class.headless::performance::EnableParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !27
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !27
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.53"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !27
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.53"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !27
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !27
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !27
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !27
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::performance::EnableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::performance::EnableParams", %"class.headless::performance::EnableParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless11performance12EnableParams9SerializeEv(%"class.headless::performance::EnableParams"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.53"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.88", align 8
  %4 = alloca %"class.base::OnceCallback.53", align 8
  %5 = alloca %"class.std::__1::unique_ptr.88", align 8
  %6 = alloca %"class.base::OnceCallback.53", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.88"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::EnableResult"* null, %"class.headless::performance::EnableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback.53"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.88"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::performance::EnableResult"*, %"class.headless::performance::EnableResult"** %19, align 8
  store %"class.headless::performance::EnableResult"* null, %"class.headless::performance::EnableResult"** %19, align 8
  %27 = icmp eq %"class.headless::performance::EnableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::performance::EnableResult", %"class.headless::performance::EnableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::performance::EnableResult"* @_ZN8headless11performance12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.88"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::EnableResult"* %34, %"class.headless::performance::EnableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.53"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback.53"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.53"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.88"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::performance::EnableResult"*, %"class.headless::performance::EnableResult"** %36, align 8
  store %"class.headless::performance::EnableResult"* null, %"class.headless::performance::EnableResult"** %36, align 8
  %47 = icmp eq %"class.headless::performance::EnableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::performance::EnableResult", %"class.headless::performance::EnableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain6EnableEN4base12OnceCallbackIFvvEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.45", align 8
  %4 = tail call i8* @_Znwm(i64 8) #9
  store i8 0, i8* %4, align 4
  %5 = bitcast i8* %4 to %"class.headless::performance::EnableParams"*
  %6 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless11performance12EnableParams9SerializeEv(%"class.headless::performance::EnableParams"* nonnull %5) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.45"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.45"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %14 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, i64 1
  %16 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %15, align 8
  call void %16(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.45"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain6EnableENSt3__110unique_ptrINS0_12EnableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.headless::performance::EnableParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless11performance12EnableParams9SerializeEv(%"class.headless::performance::EnableParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::performance::EnableParams"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::performance::EnableParams", %"class.headless::performance::EnableParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance18ExperimentalDomain13SetTimeDomainENSt3__110unique_ptrINS0_19SetTimeDomainParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_19SetTimeDomainResultENS5_ISA_EEEEEEE(%"class.headless::performance::ExperimentalDomain"* nocapture readonly, %"class.headless::performance::SetTimeDomainParams"*, %"class.base::OnceCallback.60"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless11performance19SetTimeDomainParams9SerializeEv(%"class.headless::performance::SetTimeDomainParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !32
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !32
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.60"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain27HandleSetTimeDomainResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_19SetTimeDomainResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !32
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.60"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !32
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !32
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !32
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !32
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::performance::SetTimeDomainParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = bitcast %"class.headless::performance::SetTimeDomainParams"* %1 to i8*
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless11performance19SetTimeDomainParams9SerializeEv(%"class.headless::performance::SetTimeDomainParams"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain27HandleSetTimeDomainResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_19SetTimeDomainResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.60"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.94", align 8
  %4 = alloca %"class.base::OnceCallback.60", align 8
  %5 = alloca %"class.std::__1::unique_ptr.94", align 8
  %6 = alloca %"class.base::OnceCallback.60", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.94"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::SetTimeDomainResult"* null, %"class.headless::performance::SetTimeDomainResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.60"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback.60"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.94"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.94"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.94"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.94"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::performance::SetTimeDomainResult"*, %"class.headless::performance::SetTimeDomainResult"** %19, align 8
  store %"class.headless::performance::SetTimeDomainResult"* null, %"class.headless::performance::SetTimeDomainResult"** %19, align 8
  %27 = icmp eq %"class.headless::performance::SetTimeDomainResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::performance::SetTimeDomainResult", %"class.headless::performance::SetTimeDomainResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::performance::SetTimeDomainResult"* @_ZN8headless11performance19SetTimeDomainResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.94"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::SetTimeDomainResult"* %34, %"class.headless::performance::SetTimeDomainResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.60"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback.60"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.60"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.94"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.94"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.94"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.94"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::performance::SetTimeDomainResult"*, %"class.headless::performance::SetTimeDomainResult"** %36, align 8
  store %"class.headless::performance::SetTimeDomainResult"* null, %"class.headless::performance::SetTimeDomainResult"** %36, align 8
  %47 = icmp eq %"class.headless::performance::SetTimeDomainResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::performance::SetTimeDomainResult", %"class.headless::performance::SetTimeDomainResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain10GetMetricsENSt3__110unique_ptrINS0_16GetMetricsParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_16GetMetricsResultENS5_ISA_EEEEEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.headless::performance::GetMetricsParams"*, %"class.base::OnceCallback.67"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless11performance16GetMetricsParams9SerializeEv(%"class.headless::performance::GetMetricsParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !37
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !37
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.67"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain24HandleGetMetricsResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_16GetMetricsResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !37
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.67", %"class.base::OnceCallback.67"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.67"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !37
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !37
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !37
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !37
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::performance::GetMetricsParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::performance::GetMetricsParams", %"class.headless::performance::GetMetricsParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless11performance16GetMetricsParams9SerializeEv(%"class.headless::performance::GetMetricsParams"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain24HandleGetMetricsResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_16GetMetricsResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.67"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback.67", %"class.base::OnceCallback.67"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.67"* %0, %"class.headless::performance::GetMetricsResult"* null)
  br label %17

13:                                               ; preds = %7
  %14 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #10
  %15 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #10
  %16 = call %"class.headless::performance::GetMetricsResult"* @_ZN8headless11performance16GetMetricsResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #10
  call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.67"* %0, %"class.headless::performance::GetMetricsResult"* %16)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  br label %17

17:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6Domain10GetMetricsEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_16GetMetricsResultENS4_14default_deleteIS6_EEEEEEE(%"class.headless::performance::Domain"* nocapture readonly, %"class.base::OnceCallback.67"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.44", align 8
  %4 = tail call i8* @_Znwm(i64 1) #9
  %5 = bitcast i8* %4 to %"class.headless::performance::GetMetricsParams"*
  %6 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless11performance16GetMetricsParams9SerializeEv(%"class.headless::performance::GetMetricsParams"* nonnull %5) #10
  %9 = tail call i8* @_Znwm(i64 48) #9, !noalias !42
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !42
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.67"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain24HandleGetMetricsResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_16GetMetricsResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %12, align 8, !noalias !42
  %13 = getelementptr inbounds i8, i8* %9, i64 40
  %14 = getelementptr inbounds %"class.base::OnceCallback.67", %"class.base::OnceCallback.67"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback.67"* %1 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !42
  %17 = bitcast i8* %13 to i64*
  store i64 %16, i64* %17, align 8, !noalias !42
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8, !noalias !42
  %18 = bitcast %"class.base::OnceCallback.44"* %3 to i8**
  store i8* %9, i8** %18, align 8, !alias.scope !42
  %19 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %19, align 8
  %21 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %20, align 8
  call void %21(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.44"* nonnull %3) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #3

declare %"class.headless::performance::DisableResult"* @_ZN8headless11performance13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #4

declare %"class.headless::performance::EnableResult"* @_ZN8headless11performance12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #3

declare %"class.headless::performance::SetTimeDomainResult"* @_ZN8headless11performance19SetTimeDomainResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.67"*, %"class.headless::performance::GetMetricsResult"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.100", align 8
  %4 = alloca %"class.base::OnceCallback.67", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::performance::GetMetricsResult"* %1, %"class.headless::performance::GetMetricsResult"** %5, align 8
  %6 = bitcast %"class.base::OnceCallback.67"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.base::OnceCallback.67", %"class.base::OnceCallback.67"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.67"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.67"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.67", %"class.base::OnceCallback.67"* %4, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.100"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.100"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.100"*)** %14, align 8
  call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::unique_ptr.100"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %16 = load %"class.headless::performance::GetMetricsResult"*, %"class.headless::performance::GetMetricsResult"** %5, align 8
  store %"class.headless::performance::GetMetricsResult"* null, %"class.headless::performance::GetMetricsResult"** %5, align 8
  %17 = icmp eq %"class.headless::performance::GetMetricsResult"* %16, null
  br i1 %17, label %52, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::performance::GetMetricsResult", %"class.headless::performance::GetMetricsResult"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.105"* %20, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::unique_ptr.105"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::performance::GetMetricsResult", %"class.headless::performance::GetMetricsResult"* %16, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.105"* %25, %20
  br i1 %26, label %48, label %27

27:                                               ; preds = %22, %43
  %28 = phi %"class.std::__1::unique_ptr.105"* [ %29, %43 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.headless::performance::Metric"*, %"class.headless::performance::Metric"** %30, align 8
  store %"class.headless::performance::Metric"* null, %"class.headless::performance::Metric"** %30, align 8
  %32 = icmp eq %"class.headless::performance::Metric"* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.headless::performance::Metric"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.headless::performance::Metric", %"class.headless::performance::Metric"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #9
  br label %41

41:                                               ; preds = %38, %33
  %42 = bitcast %"class.headless::performance::Metric"* %31 to i8*
  call void @_ZdlPv(i8* %42) #9
  br label %43

43:                                               ; preds = %41, %27
  %44 = icmp eq %"class.std::__1::unique_ptr.105"* %29, %20
  br i1 %44, label %45, label %27

45:                                               ; preds = %43
  %46 = bitcast %"class.headless::performance::GetMetricsResult"* %16 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %22
  %49 = phi i8* [ %47, %45 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.105"* %20, %"class.std::__1::unique_ptr.105"** %24, align 8
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %18
  %51 = bitcast %"class.headless::performance::GetMetricsResult"* %16 to i8*
  call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

declare %"class.headless::performance::GetMetricsResult"* @_ZN8headless11performance16GetMetricsResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #3

declare %"class.headless::performance::MetricsParams"* @_ZN8headless11performance13MetricsParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6DomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::performance::Domain"*, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #10
  %7 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance6DomainD2Ev(%"class.headless::performance::Domain"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #10
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %21 to i64
  %25 = getelementptr inbounds %"class.headless::performance::Domain", %"class.headless::performance::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::performance::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #10
  %7 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance18ExperimentalDomain11AddObserverEPNS0_20ExperimentalObserverE(%"class.headless::performance::ExperimentalDomain"*, %"class.headless::performance::ExperimentalObserver"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  store i8 1, i8* %5, align 8
  %9 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %11 = ptrtoint %"class.headless::performance::ExperimentalDomain"* %0 to i64
  %12 = tail call i8* @_Znwm(i64 56) #9, !noalias !47
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !47
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::performance::Domain"*, %"class.base::Value"*)* @_ZN8headless11performance6Domain20DispatchMetricsEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !47
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !47
  %18 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !47
  %19 = bitcast %"class.headless::internal::MessageDispatcher"* %10 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %20, i64 2
  %22 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %21, align 8
  call void %22(%"class.headless::internal::MessageDispatcher"* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  br label %24

24:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  %25 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1
  %26 = icmp eq %"class.headless::performance::ExperimentalObserver"* %1, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %28, align 8
  br label %48

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %34
  %36 = bitcast %"class.headless::performance::ExperimentalObserver"* %1 to i8*
  br i1 %35, label %45, label %37

37:                                               ; preds = %30, %42
  %38 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %43, %42 ], [ %32, %30 ]
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, %36
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 1
  %44 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %43, %34
  br i1 %44, label %48, label %37

45:                                               ; preds = %37, %30
  %46 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %32, %30 ], [ %38, %37 ]
  %47 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %46, %34
  br i1 %47, label %48, label %121

48:                                               ; preds = %42, %27, %45
  %49 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %29, %27 ], [ %34, %45 ], [ %34, %42 ]
  %50 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  %53 = ptrtoint %"class.headless::performance::ExperimentalObserver"* %1 to i64
  %54 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  %57 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %49, %56
  %58 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %56 to i64
  br i1 %57, label %59, label %64

59:                                               ; preds = %48
  %60 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %49 to i64*
  store i64 %53, i64* %60, align 8
  %61 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 1
  %62 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %61 to i64
  %63 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  store i64 %62, i64* %63, align 8
  br label %121

64:                                               ; preds = %48
  %65 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %49 to i64
  %66 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  %67 = bitcast %"class.base::ObserverList"* %25 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %65, %68
  %70 = ashr exact i64 %69, 3
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 2305843009213693951
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = bitcast %"class.base::ObserverList"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %74) #11
  unreachable

75:                                               ; preds = %64
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %55 to i64*
  %77 = sub i64 %58, %68
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, 1152921504606846975
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = ashr exact i64 %77, 2
  %82 = icmp ult i64 %81, %71
  %83 = select i1 %82, i64 %71, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 2305843009213693951
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #11
  unreachable

88:                                               ; preds = %85, %75
  %89 = phi i64 [ %83, %85 ], [ 2305843009213693951, %75 ]
  %90 = shl i64 %89, 3
  %91 = call i8* @_Znwm(i64 %90) #9
  %92 = bitcast i8* %91 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %70
  %97 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %94
  %98 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %97 to i64
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %96 to i64*
  store i64 %53, i64* %99, align 8
  %100 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 1
  %101 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %100 to i64
  %102 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  %104 = load i64, i64* %66, align 8
  %105 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 %108
  %110 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %93
  %113 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %109 to i8*
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #10
  %115 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  br label %116

116:                                              ; preds = %112, %93
  %117 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %103, %93 ], [ %115, %112 ]
  store i64 %110, i64* %67, align 8
  store i64 %101, i64* %66, align 8
  store i64 %98, i64* %76, align 8
  %118 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %117 to i8*
  call void @_ZdlPv(i8* %120) #9
  br label %121

121:                                              ; preds = %119, %116, %59, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless11performance18ExperimentalDomain14RemoveObserverEPNS0_20ExperimentalObserverE(%"class.headless::performance::ExperimentalDomain"*, %"class.headless::performance::ExperimentalObserver"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.headless::performance::ExperimentalObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::performance::ExperimentalDomain", %"class.headless::performance::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8headless11performance13MetricsParamsEEclEPS3_(%"struct.std::__1::default_delete.123"*, %"class.headless::performance::MetricsParams"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.headless::performance::MetricsParams"* %1, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.headless::performance::MetricsParams", %"class.headless::performance::MetricsParams"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #9
  br label %13

13:                                               ; preds = %10, %4
  %14 = getelementptr inbounds %"class.headless::performance::MetricsParams", %"class.headless::performance::MetricsParams"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.105"* %15, null
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.std::__1::unique_ptr.105"* %15 to i8*
  %19 = getelementptr inbounds %"class.headless::performance::MetricsParams", %"class.headless::performance::MetricsParams"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.105"* %20, %15
  br i1 %21, label %43, label %22

22:                                               ; preds = %17, %38
  %23 = phi %"class.std::__1::unique_ptr.105"* [ %24, %38 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105"* %23, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.105"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.headless::performance::Metric"*, %"class.headless::performance::Metric"** %25, align 8
  store %"class.headless::performance::Metric"* null, %"class.headless::performance::Metric"** %25, align 8
  %27 = icmp eq %"class.headless::performance::Metric"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.headless::performance::Metric"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.headless::performance::Metric", %"class.headless::performance::Metric"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #9
  br label %36

36:                                               ; preds = %33, %28
  %37 = bitcast %"class.headless::performance::Metric"* %26 to i8*
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %36, %22
  %39 = icmp eq %"class.std::__1::unique_ptr.105"* %24, %15
  br i1 %39, label %40, label %22

40:                                               ; preds = %38
  %41 = bitcast %"class.headless::performance::MetricsParams"* %1 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %17
  %44 = phi i8* [ %42, %40 ], [ %18, %17 ]
  store %"class.std::__1::unique_ptr.105"* %15, %"class.std::__1::unique_ptr.105"** %19, align 8
  tail call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %13, %43
  %46 = bitcast %"class.headless::performance::MetricsParams"* %1 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %45, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.headless::performance::Domain"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.headless::performance::Domain"*, %"class.base::Value"*)**
  %22 = load void (%"class.headless::performance::Domain"*, %"class.base::Value"*)*, void (%"class.headless::performance::Domain"*, %"class.base::Value"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.headless::performance::Domain"*, %"class.base::Value"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.headless::performance::Domain"*, %"class.base::Value"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.headless::performance::Domain"* %13, %"class.base::Value"* dereferenceable(32) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.53", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.53"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.53"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.53"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.53"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.53"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.53"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.53", %"class.base::OnceCallback.53"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.60", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.60"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.60"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.60"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.60"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.60"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.60"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.60", %"class.base::OnceCallback.60"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.67", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.67"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.67"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.67"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.67"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.67"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.67"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.67", %"class.base::OnceCallback.67"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #3

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #3

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #3

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base13BindRepeatingIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!12 = distinct !{!12, !"_ZN4base13BindRepeatingIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListIN8headless11performance20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListIN8headless11performance20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListIN8headless11performance20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListIN8headless11performance20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance19SetTimeDomainResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless11performance16GetMetricsResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless11performance6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base13BindRepeatingIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!51 = distinct !{!51, !"_ZN4base13BindRepeatingIMN8headless11performance6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
