; ModuleID = '../../third_party/webrtc/modules/video_coding/include/video_codec_interface.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/include/video_codec_interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::CodecSpecificInfo" = type { i32, %"union.webrtc::CodecSpecificInfoUnion", i8, %"class.absl::optional", %"class.absl::optional.18" }
%"union.webrtc::CodecSpecificInfoUnion" = type { %"struct.webrtc::CodecSpecificInfoVP9" }
%"struct.webrtc::CodecSpecificInfoVP9" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i64, i64, i8, [8 x i16], [8 x i16], %"struct.webrtc::GofInfoVP9", i8, [3 x i8], i8 }
%"struct.webrtc::GofInfoVP9" = type { i64, [255 x i8], [255 x i8], [255 x i8], [255 x [3 x i8]], i16 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.webrtc::GenericFrameInfo" }
%"struct.webrtc::GenericFrameInfo" = type { %"struct.webrtc::FrameDependencyTemplate", %"class.absl::InlinedVector.8", %"class.std::__1::vector", %"class.std::__1::bitset" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.0" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.1" = type { %"class.absl::inlined_vector_internal::Storage.2" }
%"class.absl::inlined_vector_internal::Storage.2" = type { %"class.absl::container_internal::CompressedTuple.3", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.3" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.4" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.8" = type { %"class.absl::inlined_vector_internal::Storage.9" }
%"class.absl::inlined_vector_internal::Storage.9" = type { %"class.absl::container_internal::CompressedTuple.10", %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" }
%"class.absl::container_internal::CompressedTuple.10" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.11" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.11" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated", [48 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated" = type { %"struct.webrtc::CodecBufferUsage"*, i64 }
%"struct.webrtc::CodecBufferUsage" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, %union.anon.22 }
%union.anon.22 = type { %"struct.webrtc::FrameDependencyStructure" }
%"struct.webrtc::FrameDependencyStructure" = type { i32, i32, i32, %"class.absl::InlinedVector.23", %"class.absl::InlinedVector.25", %"class.std::__1::vector.32" }
%"class.absl::InlinedVector.23" = type { %"class.absl::inlined_vector_internal::Storage.24" }
%"class.absl::inlined_vector_internal::Storage.24" = type { %"class.absl::container_internal::CompressedTuple.3", %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" }
%"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.25" = type { %"class.absl::inlined_vector_internal::Storage.26" }
%"class.absl::inlined_vector_internal::Storage.26" = type { %"class.absl::container_internal::CompressedTuple.27", %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" }
%"class.absl::container_internal::CompressedTuple.27" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.28" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.0" }
%"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated" = type { %"class.webrtc::RenderResolution"*, i64 }
%"class.webrtc::RenderResolution" = type { i32, i32 }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.webrtc::FrameDependencyTemplate"* }
%"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction" = type { %"class.std::__1::vector.32"*, %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::allocator.36" = type { i8 }

$_ZN4absl17optional_internal13optional_dataIN6webrtc24FrameDependencyStructureELb0EEC2ERKS4_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE8InitFromERKS5_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE8InitFromERKS7_ = comdat any

$_ZNSt3__125__construct_range_forwardINS_9allocatorIN6webrtc23FrameDependencyTemplateEEEPS3_S5_EEvRT_T0_S8_RT1_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE8InitFromERKS7_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_ = comdat any

$_ZN6webrtc24FrameDependencyStructureD2Ev = comdat any

@_ZN6webrtc17CodecSpecificInfoC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::CodecSpecificInfo"*), void (%"struct.webrtc::CodecSpecificInfo"*)* @_ZN6webrtc17CodecSpecificInfoC2Ev
@_ZN6webrtc17CodecSpecificInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.webrtc::CodecSpecificInfo"*, %"struct.webrtc::CodecSpecificInfo"*), void (%"struct.webrtc::CodecSpecificInfo"*, %"struct.webrtc::CodecSpecificInfo"*)* @_ZN6webrtc17CodecSpecificInfoC2ERKS0_
@_ZN6webrtc17CodecSpecificInfoD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::CodecSpecificInfo"*), void (%"struct.webrtc::CodecSpecificInfo"*)* @_ZN6webrtc17CodecSpecificInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17CodecSpecificInfoC2Ev(%"struct.webrtc::CodecSpecificInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 2
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon.22* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 128, i1 false) #10
  %8 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 1624, i1 false)
  %9 = bitcast %union.anon* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 209, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17CodecSpecificInfoC2ERKS0_(%"struct.webrtc::CodecSpecificInfo"*, %"struct.webrtc::CodecSpecificInfo"* dereferenceable(1992)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.webrtc::CodecSpecificInfo"* %0 to i8*
  %4 = bitcast %"struct.webrtc::CodecSpecificInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 1633, i1 false)
  %5 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 216, i1 false) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN6webrtc16GenericFrameInfoC1ERKS0_(%"struct.webrtc::GenericFrameInfo"* %11, %"struct.webrtc::GenericFrameInfo"* dereferenceable(208) %10) #10
  store i8 1, i8* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 4, i32 0
  tail call void @_ZN4absl17optional_internal13optional_dataIN6webrtc24FrameDependencyStructureELb0EEC2ERKS4_(%"class.absl::optional_internal::optional_data.19"* %13, %"class.absl::optional_internal::optional_data.19"* dereferenceable(136) %14) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc17CodecSpecificInfoD2Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN6webrtc24FrameDependencyStructureD2Ev(%"struct.webrtc::FrameDependencyStructure"* %6) #10
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN6webrtc16GenericFrameInfoD1Ev(%"struct.webrtc::GenericFrameInfo"* %12) #10
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  ret void
}

declare void @_ZN6webrtc16GenericFrameInfoC1ERKS0_(%"struct.webrtc::GenericFrameInfo"*, %"struct.webrtc::GenericFrameInfo"* dereferenceable(208)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal13optional_dataIN6webrtc24FrameDependencyStructureELb0EEC2ERKS4_(%"class.absl::optional_internal::optional_data.19"*, %"class.absl::optional_internal::optional_data.19"* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction", align 8
  %4 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 136, i1 false)
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %89, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %11 = bitcast %"struct.webrtc::FrameDependencyStructure"* %10 to i8*
  %12 = bitcast %"struct.webrtc::FrameDependencyStructure"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false) #10
  %13 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %14 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %15 = getelementptr inbounds %"class.absl::InlinedVector.23", %"class.absl::InlinedVector.23"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"class.absl::InlinedVector.23", %"class.absl::InlinedVector.23"* %13, i64 0, i32 0
  %17 = getelementptr inbounds %"class.absl::InlinedVector.23", %"class.absl::InlinedVector.23"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.absl::InlinedVector.23", %"class.absl::InlinedVector.23"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 2
  br i1 %20, label %30, label %21

21:                                               ; preds = %8
  %22 = and i64 %19, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  store i64 %19, i64* %17, align 8
  %25 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %26 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %27 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %26 to i8*
  %28 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 40, i1 false) #10
  br label %30

29:                                               ; preds = %21
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.24"* %16, %"class.absl::inlined_vector_internal::Storage.24"* dereferenceable(48) %15) #10
  br label %30

30:                                               ; preds = %29, %24, %8
  %31 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %32 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %33 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %31, i64 0, i32 0
  %35 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.absl::InlinedVector.25", %"class.absl::InlinedVector.25"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, 2
  br i1 %38, label %48, label %39

39:                                               ; preds = %30
  %40 = and i64 %37, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  store i64 %37, i64* %35, align 8
  %43 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 1
  %44 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 1
  %45 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %44 to i8*
  %46 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 32, i1 false) #10
  br label %48

47:                                               ; preds = %39
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage.26"* %34, %"class.absl::inlined_vector_internal::Storage.26"* dereferenceable(40) %33) #10
  br label %48

48:                                               ; preds = %30, %42, %47
  %49 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %50 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %51 = bitcast %"class.std::__1::vector.32"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #10
  %52 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1
  %53 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector.32"* %50 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = sdiv exact i64 %57, 104
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %88, label %60

60:                                               ; preds = %48
  %61 = icmp ugt i64 %58, 177372539170284150
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = bitcast %"class.std::__1::vector.32"* %49 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #11
  unreachable

64:                                               ; preds = %60
  %65 = tail call i8* @_Znwm(i64 %57) #12
  %66 = bitcast i8* %65 to %"struct.webrtc::FrameDependencyTemplate"*
  %67 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 1
  %68 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %67 to i8**
  store i8* %65, i8** %68, align 8
  %69 = bitcast %"class.std::__1::vector.32"* %49 to i8**
  store i8* %65, i8** %69, align 8
  %70 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %66, i64 %58
  %71 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::FrameDependencyTemplate"* %70, %"struct.webrtc::FrameDependencyTemplate"** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %50, i64 0, i32 0, i32 0
  %73 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %72, align 8
  %74 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %52, align 8
  %75 = bitcast %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #10
  %76 = getelementptr inbounds %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction", %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction"* %3, i64 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction", %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction"* %3, i64 0, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction", %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction"* %3, i64 0, i32 2
  store %"class.std::__1::vector.32"* %49, %"class.std::__1::vector.32"** %76, align 8
  %79 = ptrtoint i8* %65 to i64
  %80 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %77 to i64*
  store i64 %79, i64* %80, align 8
  store %"struct.webrtc::FrameDependencyTemplate"* %70, %"struct.webrtc::FrameDependencyTemplate"** %78, align 8
  %81 = getelementptr inbounds %"class.absl::optional_internal::optional_data.19", %"class.absl::optional_internal::optional_data.19"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 5, i32 0, i32 2
  %82 = bitcast %"class.std::__1::__compressed_pair.33"* %81 to %"class.std::__1::allocator.36"*
  call void @_ZNSt3__125__construct_range_forwardINS_9allocatorIN6webrtc23FrameDependencyTemplateEEEPS3_S5_EEvRT_T0_S8_RT1_(%"class.std::__1::allocator.36"* dereferenceable(1) %82, %"struct.webrtc::FrameDependencyTemplate"* %73, %"struct.webrtc::FrameDependencyTemplate"* %74, %"struct.webrtc::FrameDependencyTemplate"** dereferenceable(8) %77) #10
  %83 = load i64, i64* %80, align 8
  %84 = bitcast %"struct.std::__1::vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate> >::_ConstructTransaction"* %3 to %"class.std::__1::__vector_base"**
  %85 = load %"class.std::__1::__vector_base"*, %"class.std::__1::__vector_base"** %84, align 8
  %86 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %85, i64 0, i32 1
  %87 = bitcast %"struct.webrtc::FrameDependencyTemplate"** %86 to i64*
  store i64 %83, i64* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #10
  br label %88

88:                                               ; preds = %48, %64
  store i8 1, i8* %4, align 8
  br label %89

89:                                               ; preds = %2, %88
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIiLm10ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.24"*, %"class.absl::inlined_vector_internal::Storage.24"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %9 to i32*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data"* %11 to i32*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 20
  %15 = select i1 %14, i64 %5, i64 20
  %16 = icmp ugt i64 %15, 4611686018427387903
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 2
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi i32* [ %26, %18 ], [ %12, %8 ]
  %29 = phi i32* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast i32* %29 to i8*
  %31 = bitcast i32* %28 to i8*
  %32 = shl i64 %5, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #10
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.24", %"class.absl::inlined_vector_internal::Storage.24"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage.26"*, %"class.absl::inlined_vector_internal::Storage.26"* dereferenceable(40)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %9 to %"class.webrtc::RenderResolution"*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %11 to %"class.webrtc::RenderResolution"*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 8
  %15 = select i1 %14, i64 %5, i64 8
  %16 = icmp ugt i64 %15, 2305843009213693951
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to %"class.webrtc::RenderResolution"*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.webrtc::RenderResolution"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.webrtc::RenderResolution"*, %"class.webrtc::RenderResolution"** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi %"class.webrtc::RenderResolution"* [ %26, %18 ], [ %12, %8 ]
  %29 = phi %"class.webrtc::RenderResolution"* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast %"class.webrtc::RenderResolution"* %29 to i8*
  %31 = bitcast %"class.webrtc::RenderResolution"* %28 to i8*
  %32 = shl i64 %5, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #10
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.26", %"class.absl::inlined_vector_internal::Storage.26"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__construct_range_forwardINS_9allocatorIN6webrtc23FrameDependencyTemplateEEEPS3_S5_EEvRT_T0_S8_RT1_(%"class.std::__1::allocator.36"* dereferenceable(1), %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %1, %2
  br i1 %5, label %72, label %6

6:                                                ; preds = %4
  %7 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %3, align 8
  br label %8

8:                                                ; preds = %6, %67
  %9 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %70, %67 ], [ %7, %6 ]
  %10 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %68, %67 ], [ %1, %6 ]
  %11 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %10 to i64*
  %12 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %9 to i64*
  %13 = load i64, i64* %11, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %9, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 0, i32 2
  %16 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %14, i64 0, i32 0
  %18 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 2
  br i1 %21, label %31, label %22

22:                                               ; preds = %8
  %23 = and i64 %20, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %22
  store i64 %20, i64* %18, align 8
  %26 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 0, i32 2, i32 0, i32 1
  %27 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %9, i64 0, i32 2, i32 0, i32 1
  %28 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %27 to i8*
  %29 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 40, i1 false) #10
  br label %31

30:                                               ; preds = %22
  tail call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage"* %17, %"class.absl::inlined_vector_internal::Storage"* dereferenceable(48) %16) #10
  br label %31

31:                                               ; preds = %30, %25, %8
  %32 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %9, i64 0, i32 3
  %33 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 0, i32 3
  %34 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %32, i64 0, i32 0
  %36 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %38, 2
  br i1 %39, label %49, label %40

40:                                               ; preds = %31
  %41 = and i64 %38, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %40
  store i64 %38, i64* %36, align 8
  %44 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 0, i32 3, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %9, i64 0, i32 3, i32 0, i32 1
  %46 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %45 to i8*
  %47 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 16, i1 false) #10
  br label %49

48:                                               ; preds = %40
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.2"* %35, %"class.absl::inlined_vector_internal::Storage.2"* dereferenceable(24) %34) #10
  br label %49

49:                                               ; preds = %48, %43, %31
  %50 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %9, i64 0, i32 4
  %51 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 0, i32 4
  %52 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %50, i64 0, i32 0
  %54 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds %"class.absl::InlinedVector.1", %"class.absl::InlinedVector.1"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, 2
  br i1 %57, label %67, label %58

58:                                               ; preds = %49
  %59 = and i64 %56, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  store i64 %56, i64* %54, align 8
  %62 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 0, i32 4, i32 0, i32 1
  %63 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %9, i64 0, i32 4, i32 0, i32 1
  %64 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %63 to i8*
  %65 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false) #10
  br label %67

66:                                               ; preds = %58
  tail call void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.2"* %53, %"class.absl::inlined_vector_internal::Storage.2"* dereferenceable(24) %52) #10
  br label %67

67:                                               ; preds = %49, %61, %66
  %68 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %10, i64 1
  %69 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %3, align 8
  %70 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %69, i64 1
  store %"struct.webrtc::FrameDependencyTemplate"* %70, %"struct.webrtc::FrameDependencyTemplate"** %3, align 8
  %71 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %68, %2
  br i1 %71, label %72, label %8

72:                                               ; preds = %67, %4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc22DecodeTargetIndicationELm10ENSt3__19allocatorIS3_EEE8InitFromERKS7_(%"class.absl::inlined_vector_internal::Storage"*, %"class.absl::inlined_vector_internal::Storage"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %9 to i32*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data"* %11 to i32*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 20
  %15 = select i1 %14, i64 %5, i64 20
  %16 = icmp ugt i64 %15, 4611686018427387903
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 2
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi i32* [ %26, %18 ], [ %12, %8 ]
  %29 = phi i32* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast i32* %29 to i8*
  %31 = bitcast i32* %28 to i8*
  %32 = shl i64 %5, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #10
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIiLm4ENSt3__19allocatorIiEEE8InitFromERKS5_(%"class.absl::inlined_vector_internal::Storage.2"*, %"class.absl::inlined_vector_internal::Storage.2"* dereferenceable(24)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 1
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1
  %10 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %9 to i32*
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %1, i64 0, i32 1
  %12 = bitcast %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data"* %11 to i32*
  br label %27

13:                                               ; preds = %2
  %14 = icmp ugt i64 %5, 8
  %15 = select i1 %14, i64 %5, i64 8
  %16 = icmp ugt i64 %15, 4611686018427387903
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %13
  %19 = shl i64 %15, 2
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast i32** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %1, i64 0, i32 1, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %27

27:                                               ; preds = %18, %8
  %28 = phi i32* [ %26, %18 ], [ %12, %8 ]
  %29 = phi i32* [ %21, %18 ], [ %10, %8 ]
  %30 = bitcast i32* %29 to i8*
  %31 = bitcast i32* %28 to i8*
  %32 = shl i64 %5, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 %32, i1 false) #10
  %33 = load i64, i64* %3, align 8
  %34 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.2", %"class.absl::inlined_vector_internal::Storage.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %33, i64* %34, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc24FrameDependencyStructureD2Ev(%"struct.webrtc::FrameDependencyStructure"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %3, align 8
  %5 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.webrtc::FrameDependencyTemplate"* %4 to i8*
  %8 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"** %8, align 8
  %10 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %9, %4
  br i1 %10, label %45, label %11

11:                                               ; preds = %6, %40
  %12 = phi %"struct.webrtc::FrameDependencyTemplate"* [ %13, %40 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 4, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast i32** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %18, %11
  %23 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 3, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast i32** %28 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %27, %22
  %32 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.webrtc::FrameDependencyTemplate", %"struct.webrtc::FrameDependencyTemplate"* %12, i64 -1, i32 2, i32 0, i32 1, i32 0, i32 0
  %38 = bitcast i32** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %36, %31
  %41 = icmp eq %"struct.webrtc::FrameDependencyTemplate"* %13, %4
  br i1 %41, label %42, label %11

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.32"* %2 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %6, %42
  %46 = phi i8* [ %44, %42 ], [ %7, %6 ]
  store %"struct.webrtc::FrameDependencyTemplate"* %4, %"struct.webrtc::FrameDependencyTemplate"** %8, align 8
  tail call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %45
  %48 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %54 = bitcast %"class.webrtc::RenderResolution"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %47, %52
  %57 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.webrtc::FrameDependencyStructure", %"struct.webrtc::FrameDependencyStructure"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %63 = bitcast i32** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %56, %61
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN6webrtc16GenericFrameInfoD1Ev(%"struct.webrtc::GenericFrameInfo"*) unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
