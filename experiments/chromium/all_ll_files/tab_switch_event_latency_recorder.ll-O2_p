; ModuleID = '../../chrome/browser/ui/tabs/tab_switch_event_latency_recorder.cc'
source_filename = "../../chrome/browser/ui/tabs/tab_switch_event_latency_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }

@.str = private unnamed_addr constant [48 x i8] c"Browser.Tabs.InputEventToSelectionTime.Keyboard\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"Browser.Tabs.InputEventToSelectionTime.Mouse\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"Browser.Tabs.InputEventToSelectionTime.Touch\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"Browser.Tabs.InputEventToSelectionTime.Wheel\00", align 1
@_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN29TabSwitchEventLatencyRecorderC1Ev = hidden unnamed_addr alias void (%class.TabSwitchEventLatencyRecorder*), void (%class.TabSwitchEventLatencyRecorder*)* @_ZN29TabSwitchEventLatencyRecorderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN29TabSwitchEventLatencyRecorderC2Ev(%class.TabSwitchEventLatencyRecorder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN29TabSwitchEventLatencyRecorder18BeginLatencyTimingEN4base9TimeTicksENS_9EventTypeE(%class.TabSwitchEventLatencyRecorder* nocapture, i64, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast i8* %5 to i64*
  %7 = zext i32 %2 to i64
  %8 = shl nuw i64 %7, 32
  %9 = or i64 %8, 1
  store i64 %9, i64* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksE(%class.TabSwitchEventLatencyRecorder* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %48, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %class.TabSwitchEventLatencyRecorder, %class.TabSwitchEventLatencyRecorder* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %1, %15
  store i64 %16, i64* %13, align 8
  switch i32 %9, label %47 [
    i32 1, label %17
    i32 0, label %24
    i32 2, label %31
    i32 3, label %38
  ]

17:                                               ; preds = %11
  %18 = load atomic i64, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %45

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i64 100, i64 50000, i32 50, i32 1) #5
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %45

24:                                               ; preds = %11
  %25 = load atomic i64, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %26 = inttoptr i64 %25 to %"class.base::HistogramBase"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %45

28:                                               ; preds = %24
  %29 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i64 100, i64 50000, i32 50, i32 1) #5
  %30 = ptrtoint %"class.base::HistogramBase"* %29 to i64
  store atomic i64 %30, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %45

31:                                               ; preds = %11
  %32 = load atomic i64, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %33 = inttoptr i64 %32 to %"class.base::HistogramBase"*
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %31
  %36 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i64 100, i64 50000, i32 50, i32 1) #5
  %37 = ptrtoint %"class.base::HistogramBase"* %36 to i64
  store atomic i64 %37, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %45

38:                                               ; preds = %11
  %39 = load atomic i64, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %40 = inttoptr i64 %39 to %"class.base::HistogramBase"*
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i64 100, i64 50000, i32 50, i32 1) #5
  %44 = ptrtoint %"class.base::HistogramBase"* %43 to i64
  store atomic i64 %44, i64* @_ZZN29TabSwitchEventLatencyRecorder21OnWillChangeActiveTabEN4base9TimeTicksEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %45

45:                                               ; preds = %42, %38, %35, %31, %28, %24, %21, %17
  %46 = phi %"class.base::HistogramBase"* [ %19, %17 ], [ %22, %21 ], [ %26, %24 ], [ %29, %28 ], [ %33, %31 ], [ %36, %35 ], [ %40, %38 ], [ %43, %42 ]
  call void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %46, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #5
  br label %47

47:                                               ; preds = %45, %11
  store i8 0, i8* %4, align 4
  store i64 0, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  br label %48

48:                                               ; preds = %2, %7, %47
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram26FactoryMicrosecondsTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #4

declare void @_ZN4base13HistogramBase30AddTimeMicrosecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
