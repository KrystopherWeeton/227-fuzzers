; ModuleID = '../../chrome/browser/download/download_target_info.cc'
source_filename = "../../chrome/browser/download/download_target_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.DownloadTargetInfo = type { %"class.base::FilePath", i32, i32, i32, %"class.base::FilePath", %"class.std::__1::basic_string", i8, i32, i32, %"class.absl::optional" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.download::DownloadSchedule" }
%"class.download::DownloadSchedule" = type { i8, %"class.absl::optional.2" }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN18DownloadTargetInfoC1Ev = hidden unnamed_addr alias void (%struct.DownloadTargetInfo*), void (%struct.DownloadTargetInfo*)* @_ZN18DownloadTargetInfoC2Ev
@_ZN18DownloadTargetInfoD1Ev = hidden unnamed_addr alias void (%struct.DownloadTargetInfo*), void (%struct.DownloadTargetInfo*)* @_ZN18DownloadTargetInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18DownloadTargetInfoC2Ev(%struct.DownloadTargetInfo*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %2) #5
  %3 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 4
  tail call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* %6) #5
  %7 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 5
  %8 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 7
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 8
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18DownloadTargetInfoD2Ev(%struct.DownloadTargetInfo*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8download16DownloadScheduleD1Ev(%"class.download::DownloadSchedule"* %6) #5
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 5
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #6
  br label %16

16:                                               ; preds = %7, %13
  %17 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 4
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %17) #5
  %18 = getelementptr inbounds %struct.DownloadTargetInfo, %struct.DownloadTargetInfo* %0, i64 0, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %18) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN8download16DownloadScheduleD1Ev(%"class.download::DownloadSchedule"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
