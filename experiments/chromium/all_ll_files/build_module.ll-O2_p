; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/build_module.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/build_module.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr.0", %"class.std::__1::function", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.155", %"class.std::__1::unordered_map.176", %"class.std::__1::unordered_map.204", i32, [4 x i8], %"class.std::__1::unordered_map.228", %"class.std::__1::unordered_map.252", %"class.std::__1::unique_ptr.276", %"class.std::__1::map", %"class.std::__1::map.367", %"class.std::__1::unordered_map.376", %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.596", %"class.std::__1::unique_ptr.626", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.697", %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.876", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.24", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.29", %"class.std::__1::vector.17", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.17", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.12" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.3" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::vector.6"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i32*, i32*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i32* }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.24", %"class.std::__1::vector.34", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.41", %"class.std::__1::unique_ptr.24", %"class.std::__1::vector.34" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.24", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.43"* }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.24"* }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::unique_ptr.31"* }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.94" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.68", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.84", [4 x i8] }>
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { i64 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::unordered_map.94" = type { %"class.std::__1::__hash_table.95" }
%"class.std::__1::__hash_table.95" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base.99"** }
%"struct.std::__1::__hash_node_base.99" = type { %"struct.std::__1::__hash_node_base.99"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator.101" }
%"class.std::__1::__bucket_list_deallocator.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base.99" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.128", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.128" = type { %"class.std::__1::__hash_table.129" }
%"class.std::__1::__hash_table.129" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.148", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base.133"** }
%"struct.std::__1::__hash_node_base.133" = type { %"struct.std::__1::__hash_node_base.133"* }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::__bucket_list_deallocator.135" }
%"class.std::__1::__bucket_list_deallocator.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::__hash_node_base.133" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.172", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.std::__1::set.161"* }
%"class.std::__1::set.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.spvtools::EnumSet.172" = type { i64, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unordered_map.176" = type { %"class.std::__1::__hash_table.177" }
%"class.std::__1::__hash_table.177" = type <{ %"class.std::__1::unique_ptr.178", %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.198", [4 x i8] }>
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180", %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base.181"** }
%"struct.std::__1::__hash_node_base.181" = type { %"struct.std::__1::__hash_node_base.181"* }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::__bucket_list_deallocator.183" }
%"class.std::__1::__bucket_list_deallocator.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base.181" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.204" = type { %"class.std::__1::__hash_table.205" }
%"class.std::__1::__hash_table.205" = type <{ %"class.std::__1::unique_ptr.206", %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.221", %"class.std::__1::__compressed_pair.224", [4 x i8] }>
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208", %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.std::__1::__hash_node_base.209"** }
%"struct.std::__1::__hash_node_base.209" = type { %"struct.std::__1::__hash_node_base.209"* }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.std::__1::__bucket_list_deallocator.211" }
%"class.std::__1::__bucket_list_deallocator.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.std::__1::__hash_node_base.209" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.228" = type { %"class.std::__1::__hash_table.229" }
%"class.std::__1::__hash_table.229" = type <{ %"class.std::__1::unique_ptr.230", %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.248", [4 x i8] }>
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232", %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::__hash_node_base.233"** }
%"struct.std::__1::__hash_node_base.233" = type { %"struct.std::__1::__hash_node_base.233"* }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.std::__1::__bucket_list_deallocator.235" }
%"class.std::__1::__bucket_list_deallocator.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.std::__1::__hash_node_base.233" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.252" = type { %"class.std::__1::__hash_table.253" }
%"class.std::__1::__hash_table.253" = type <{ %"class.std::__1::unique_ptr.254", %"class.std::__1::__compressed_pair.264", %"class.std::__1::__compressed_pair.269", %"class.std::__1::__compressed_pair.272", [4 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256", %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base.257"** }
%"struct.std::__1::__hash_node_base.257" = type { %"struct.std::__1::__hash_node_base.257"* }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.std::__1::__bucket_list_deallocator.259" }
%"class.std::__1::__bucket_list_deallocator.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.std::__1::__hash_node_base.257" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.279", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.307", %"class.std::__1::unordered_map.331" }
%"class.std::__1::unordered_map.279" = type { %"class.std::__1::__hash_table.280" }
%"class.std::__1::__hash_table.280" = type <{ %"class.std::__1::unique_ptr.281", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.301", [4 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base.284"** }
%"struct.std::__1::__hash_node_base.284" = type { %"struct.std::__1::__hash_node_base.284"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator.286" }
%"class.std::__1::__bucket_list_deallocator.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.284" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.307" = type { %"class.std::__1::__hash_table.308" }
%"class.std::__1::__hash_table.308" = type <{ %"class.std::__1::unique_ptr.309", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.327", [4 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::__hash_node_base.312"** }
%"struct.std::__1::__hash_node_base.312" = type { %"struct.std::__1::__hash_node_base.312"* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__bucket_list_deallocator.314" }
%"class.std::__1::__bucket_list_deallocator.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base.312" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.331" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.358" }
%"class.std::__1::__tree.358" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.359", %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::map.367" = type { %"class.std::__1::__tree.368" }
%"class.std::__1::__tree.368" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::unordered_map.376" = type { %"class.std::__1::__hash_table.377" }
%"class.std::__1::__hash_table.377" = type <{ %"class.std::__1::unique_ptr.378", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.393", %"class.std::__1::__compressed_pair.398", [4 x i8] }>
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380", %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"struct.std::__1::__hash_node_base.381"** }
%"struct.std::__1::__hash_node_base.381" = type { %"struct.std::__1::__hash_node_base.381"* }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.std::__1::__bucket_list_deallocator.383" }
%"class.std::__1::__bucket_list_deallocator.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.std::__1::__hash_node_base.381" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.406", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.461" }
%"class.std::__1::unordered_map.406" = type { %"class.std::__1::__hash_table.407" }
%"class.std::__1::__hash_table.407" = type <{ %"class.std::__1::unique_ptr.408", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.423", %"class.std::__1::__compressed_pair.426", [4 x i8] }>
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410", %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::__hash_node_base.411"** }
%"struct.std::__1::__hash_node_base.411" = type { %"struct.std::__1::__hash_node_base.411"* }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.std::__1::__bucket_list_deallocator.413" }
%"class.std::__1::__bucket_list_deallocator.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.std::__1::__hash_node_base.411" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.430" }
%"class.std::__1::__tree.430" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.431", %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.440" }
%"class.std::__1::__hash_table.440" = type <{ %"class.std::__1::unique_ptr.441", %"class.std::__1::__compressed_pair.451", %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.458", [4 x i8] }>
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443", %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.444"** }
%"struct.std::__1::__hash_node_base.444" = type { %"struct.std::__1::__hash_node_base.444"* }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.std::__1::__bucket_list_deallocator.446" }
%"class.std::__1::__bucket_list_deallocator.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"struct.std::__1::__hash_node_base.444" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::vector.461" = type { %"class.std::__1::__vector_base.462" }
%"class.std::__1::__vector_base.462" = type { %"class.std::__1::unique_ptr.463"*, %"class.std::__1::unique_ptr.463"*, %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.466", i32, [4 x i8] }>
%"class.std::__1::vector.466" = type { %"class.std::__1::__vector_base.467" }
%"class.std::__1::__vector_base.467" = type { %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"*, %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.std::__1::unique_ptr.463"* }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.486", %"class.std::__1::unordered_map.510", %"class.std::__1::unordered_set.534", %"class.std::__1::vector.556", %"class.std::__1::unordered_map.486", %"class.std::__1::unordered_map.569" }
%"class.std::__1::unordered_map.510" = type { %"class.std::__1::__hash_table.511" }
%"class.std::__1::__hash_table.511" = type <{ %"class.std::__1::unique_ptr.512", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.527", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514", %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.515"** }
%"struct.std::__1::__hash_node_base.515" = type { %"struct.std::__1::__hash_node_base.515"* }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.std::__1::__bucket_list_deallocator.517" }
%"class.std::__1::__bucket_list_deallocator.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::__hash_node_base.515" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_set.534" = type { %"class.std::__1::__hash_table.535" }
%"class.std::__1::__hash_table.535" = type <{ %"class.std::__1::unique_ptr.536", %"class.std::__1::__compressed_pair.546", %"class.std::__1::__compressed_pair.551", %"class.std::__1::__compressed_pair.553", [4 x i8] }>
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538", %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node_base.539"** }
%"struct.std::__1::__hash_node_base.539" = type { %"struct.std::__1::__hash_node_base.539"* }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.std::__1::__bucket_list_deallocator.541" }
%"class.std::__1::__bucket_list_deallocator.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"struct.std::__1::__hash_node_base.539" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::vector.556" = type { %"class.std::__1::__vector_base.557" }
%"class.std::__1::__vector_base.557" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.564" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.558" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.486" = type { %"class.std::__1::__hash_table.487" }
%"class.std::__1::__hash_table.487" = type <{ %"class.std::__1::unique_ptr.488", %"class.std::__1::__compressed_pair.498", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.506", [4 x i8] }>
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490", %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::__hash_node_base.491"** }
%"struct.std::__1::__hash_node_base.491" = type { %"struct.std::__1::__hash_node_base.491"* }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::__bucket_list_deallocator.493" }
%"class.std::__1::__bucket_list_deallocator.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"struct.std::__1::__hash_node_base.491" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.569" = type { %"class.std::__1::__hash_table.570" }
%"class.std::__1::__hash_table.570" = type <{ %"class.std::__1::unique_ptr.571", %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.586", %"class.std::__1::__compressed_pair.589", [4 x i8] }>
%"class.std::__1::unique_ptr.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573", %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::__hash_node_base.574"** }
%"struct.std::__1::__hash_node_base.574" = type { %"struct.std::__1::__hash_node_base.574"* }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.std::__1::__bucket_list_deallocator.576" }
%"class.std::__1::__bucket_list_deallocator.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.std::__1::__hash_node_base.574" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.599", %"class.std::__1::unordered_map.599", %"class.std::__1::unordered_map.599", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.599" = type { %"class.std::__1::__hash_table.600" }
%"class.std::__1::__hash_table.600" = type <{ %"class.std::__1::unique_ptr.601", %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.619", [4 x i8] }>
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603", %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"struct.std::__1::__hash_node_base.604"** }
%"struct.std::__1::__hash_node_base.604" = type { %"struct.std::__1::__hash_node_base.604"* }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.std::__1::__bucket_list_deallocator.606" }
%"class.std::__1::__bucket_list_deallocator.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"struct.std::__1::__hash_node_base.604" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.626" = type { %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.std::__1::multimap.629"* }
%"class.std::__1::multimap.629" = type { %"class.std::__1::__tree.630" }
%"class.std::__1::__tree.630" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.631", %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.644", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.661", %"class.std::__1::map.683" }
%"class.std::__1::map.644" = type { %"class.std::__1::__tree.645" }
%"class.std::__1::__tree.645" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.654", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.654" = type { %"class.std::__1::__vector_base.655" }
%"class.std::__1::__vector_base.655" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.661" = type { %"class.std::__1::__hash_table.662" }
%"class.std::__1::__hash_table.662" = type <{ %"class.std::__1::unique_ptr.663", %"class.std::__1::__compressed_pair.673", %"class.std::__1::__compressed_pair.678", %"class.std::__1::__compressed_pair.680", [4 x i8] }>
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665", %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"struct.std::__1::__hash_node_base.666"** }
%"struct.std::__1::__hash_node_base.666" = type { %"struct.std::__1::__hash_node_base.666"* }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.std::__1::__bucket_list_deallocator.668" }
%"class.std::__1::__bucket_list_deallocator.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"struct.std::__1::__hash_node_base.666" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::map.683" = type { %"class.std::__1::__tree.684" }
%"class.std::__1::__tree.684" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.685", %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.700" }
%"class.std::__1::unordered_map.700" = type { %"class.std::__1::__hash_table.701" }
%"class.std::__1::__hash_table.701" = type <{ %"class.std::__1::unique_ptr.702", %"class.std::__1::__compressed_pair.712", %"class.std::__1::__compressed_pair.717", %"class.std::__1::__compressed_pair.720", [4 x i8] }>
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704", %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"struct.std::__1::__hash_node_base.705"** }
%"struct.std::__1::__hash_node_base.705" = type { %"struct.std::__1::__hash_node_base.705"* }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.std::__1::__bucket_list_deallocator.707" }
%"class.std::__1::__bucket_list_deallocator.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"struct.std::__1::__hash_node_base.705" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.730", %"class.std::__1::unordered_map.252", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.730" = type { %"class.std::__1::__hash_table.731" }
%"class.std::__1::__hash_table.731" = type <{ %"class.std::__1::unique_ptr.732", %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.747", %"class.std::__1::__compressed_pair.750", [4 x i8] }>
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734", %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"struct.std::__1::__hash_node_base.735"** }
%"struct.std::__1::__hash_node_base.735" = type { %"struct.std::__1::__hash_node_base.735"* }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.std::__1::__bucket_list_deallocator.737" }
%"class.std::__1::__bucket_list_deallocator.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"struct.std::__1::__hash_node_base.735" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.760", %"class.std::__1::unique_ptr.820" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.763", %"class.std::__1::map.787", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.798" }
%"class.std::__1::unordered_map.763" = type { %"class.std::__1::__hash_table.764" }
%"class.std::__1::__hash_table.764" = type <{ %"class.std::__1::unique_ptr.765", %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.780", %"class.std::__1::__compressed_pair.783", [4 x i8] }>
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767", %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.std::__1::__hash_node_base.768"** }
%"struct.std::__1::__hash_node_base.768" = type { %"struct.std::__1::__hash_node_base.768"* }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.std::__1::__bucket_list_deallocator.770" }
%"class.std::__1::__bucket_list_deallocator.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"struct.std::__1::__hash_node_base.768" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::map.787" = type { %"class.std::__1::__tree.788" }
%"class.std::__1::__tree.788" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.789", %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::vector.798" = type { %"class.std::__1::__vector_base.799" }
%"class.std::__1::__vector_base.799" = type { %"class.std::__1::function.800"*, %"class.std::__1::function.800"*, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::function.800" = type { %"class.std::__1::__function::__policy_func.803" }
%"class.std::__1::__function::__policy_func.803" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.804", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.804" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.805"*)* }
%"class.std::__1::vector.805" = type { %"class.std::__1::__vector_base.806" }
%"class.std::__1::__vector_base.806" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.std::__1::function.800"* }
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.823", %"class.std::__1::map.847", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.858" }
%"class.std::__1::unordered_map.823" = type { %"class.std::__1::__hash_table.824" }
%"class.std::__1::__hash_table.824" = type <{ %"class.std::__1::unique_ptr.825", %"class.std::__1::__compressed_pair.835", %"class.std::__1::__compressed_pair.840", %"class.std::__1::__compressed_pair.843", [4 x i8] }>
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827", %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.std::__1::__hash_node_base.828"** }
%"struct.std::__1::__hash_node_base.828" = type { %"struct.std::__1::__hash_node_base.828"* }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.std::__1::__bucket_list_deallocator.830" }
%"class.std::__1::__bucket_list_deallocator.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"struct.std::__1::__hash_node_base.828" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::map.847" = type { %"class.std::__1::__tree.848" }
%"class.std::__1::__tree.848" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.849", %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::vector.858" = type { %"class.std::__1::__vector_base.859" }
%"class.std::__1::__vector_base.859" = type { %"class.std::__1::function.860"*, %"class.std::__1::function.860"*, %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::function.860" = type { %"class.std::__1::__function::__policy_func.863" }
%"class.std::__1::__function::__policy_func.863" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.864", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.864" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.805"*)* }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.std::__1::function.860"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.879", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.879" = type { %"class.std::__1::__hash_table.880" }
%"class.std::__1::__hash_table.880" = type <{ %"class.std::__1::unique_ptr.881", %"class.std::__1::__compressed_pair.891", %"class.std::__1::__compressed_pair.896", %"class.std::__1::__compressed_pair.899", [4 x i8] }>
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883", %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"struct.std::__1::__hash_node_base.884"** }
%"struct.std::__1::__hash_node_base.884" = type { %"struct.std::__1::__hash_node_base.884"* }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.std::__1::__bucket_list_deallocator.886" }
%"class.std::__1::__bucket_list_deallocator.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"struct.std::__1::__hash_node_base.884" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.903" }
%"class.std::__1::vector.903" = type { %"class.std::__1::__vector_base.904" }
%"class.std::__1::__vector_base.904" = type { i64*, i64*, %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { i64* }
%"class.spvtools::opt::IrLoader" = type <{ %"class.std::__1::function"*, %"class.spvtools::opt::Module"*, %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.43", %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.24", %"class.spvtools::opt::DebugScope", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.spv_diagnostic_t = type { %struct.spv_position_t, i8*, i8 }
%"struct.std::__1::default_delete.47" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.spv_parsed_instruction_t = type { i32*, i16, i16, i32, i32, i32, %struct.spv_parsed_operand_t*, i16 }
%struct.spv_parsed_operand_t = type { i16, i16, i32, i32, i32 }
%"class.spvtools::SpirvTools" = type { %"class.std::__1::unique_ptr.921" }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.spvtools::SpirvTools::Impl"* }
%"struct.spvtools::SpirvTools::Impl" = type opaque
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.755" = type { i8 }
%"struct.std::__1::default_delete.725" = type { i8 }
%"struct.std::__1::default_delete.695" = type { i8 }
%"class.std::__1::__tree_node.1031" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1032" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1032" = type { %"struct.std::__1::pair.1033" }
%"struct.std::__1::pair.1033" = type { i32, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.992", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.1061", %"class.std::__1::vector.1085" }
%"class.std::__1::vector.992" = type { %"class.std::__1::__vector_base.993" }
%"class.std::__1::__vector_base.993" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.992", %"class.std::__1::unordered_set.999", i8, [7 x i8] }>
%"class.std::__1::unordered_set.999" = type { %"class.std::__1::__hash_table.1000" }
%"class.std::__1::__hash_table.1000" = type <{ %"class.std::__1::unique_ptr.1001", %"class.std::__1::__compressed_pair.1011", %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1018", [4 x i8] }>
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003", %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.std::__1::__hash_node_base.1004"** }
%"struct.std::__1::__hash_node_base.1004" = type { %"struct.std::__1::__hash_node_base.1004"* }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.std::__1::__bucket_list_deallocator.1006" }
%"class.std::__1::__bucket_list_deallocator.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"struct.std::__1::__hash_node_base.1004" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::unordered_map.1061" = type { %"class.std::__1::__hash_table.1062" }
%"class.std::__1::__hash_table.1062" = type <{ %"class.std::__1::unique_ptr.1063", %"class.std::__1::__compressed_pair.1073", %"class.std::__1::__compressed_pair.1078", %"class.std::__1::__compressed_pair.1081", [4 x i8] }>
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065", %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"struct.std::__1::__hash_node_base.1066"** }
%"struct.std::__1::__hash_node_base.1066" = type { %"struct.std::__1::__hash_node_base.1066"* }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.std::__1::__bucket_list_deallocator.1068" }
%"class.std::__1::__bucket_list_deallocator.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::__hash_node_base.1066" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::vector.1085" = type { %"class.std::__1::__vector_base.1086" }
%"class.std::__1::__vector_base.1086" = type { %"struct.std::__1::pair.1087"*, %"struct.std::__1::pair.1087"*, %"class.std::__1::__compressed_pair.1094" }
%"struct.std::__1::pair.1087" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.1088" }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::pair.1087"* }
%"class.std::__1::__tree_node.1099" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1100" }
%"struct.std::__1::__value_type.1100" = type { %"struct.std::__1::pair.1101" }
%"struct.std::__1::pair.1101" = type { %"class.spvtools::opt::Function"*, %"class.spvtools::opt::PostDominatorAnalysis" }
%"class.spvtools::opt::PostDominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1102", %"class.std::__1::map.1109", i8, [7 x i8] }>
%"class.std::__1::vector.1102" = type { %"class.std::__1::__vector_base.1103" }
%"class.std::__1::__vector_base.1103" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1104" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1102", i32, i32 }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.1109" = type { %"class.std::__1::__tree.1110" }
%"class.std::__1::__tree.1110" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__tree_node.1121" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1122" }
%"struct.std::__1::__value_type.1122" = type { %"struct.std::__1::pair.1123" }
%"struct.std::__1::pair.1123" = type { %"class.spvtools::opt::Function"*, %"class.spvtools::opt::DominatorAnalysis" }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.std::__1::__tree_node.1154" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"struct.std::__1::default_delete.153" = type { i8 }
%"struct.std::__1::default_delete.123" = type { i8 }
%"struct.std::__1::__hash_node_base.938" = type { %"struct.std::__1::__hash_node_base.938"* }
%"class.std::__1::allocator.948" = type { i8 }
%"struct.std::__1::pair.959" = type { i32, %"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness" }
%"struct.spvtools::opt::RegisterLiveness::RegionRegisterLiveness" = type { %"class.std::__1::unordered_set.960", %"class.std::__1::unordered_set.960", i64, %"class.std::__1::vector.982" }
%"class.std::__1::unordered_set.960" = type { %"class.std::__1::__hash_table.961" }
%"class.std::__1::__hash_table.961" = type <{ %"class.std::__1::unique_ptr.962", %"class.std::__1::__compressed_pair.972", %"class.std::__1::__compressed_pair.977", %"class.std::__1::__compressed_pair.979", [4 x i8] }>
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964", %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.965"** }
%"struct.std::__1::__hash_node_base.965" = type { %"struct.std::__1::__hash_node_base.965"* }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.std::__1::__bucket_list_deallocator.967" }
%"class.std::__1::__bucket_list_deallocator.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.std::__1::__hash_node_base.965" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"*, %"class.std::__1::__compressed_pair.985" }
%"struct.std::__1::pair.984" = type { %"struct.spvtools::opt::RegisterLiveness::RegisterClass", i64 }
%"struct.spvtools::opt::RegisterLiveness::RegisterClass" = type { %"class.spvtools::opt::analysis::Type"*, i8 }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::pair.984"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.991" }
%"struct.std::__1::pair.991" = type { %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__tree_node.1028" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1029" }
%"struct.std::__1::__value_type.1029" = type { %"struct.std::__1::pair.1030" }
%"struct.std::__1::pair.1030" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::SENode"* }
%"class.std::__1::__tree_node.1051" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1052" }
%"struct.std::__1::__value_type.1052" = type { %"struct.std::__1::pair.1053" }
%"struct.std::__1::pair.1053" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node.1118" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1119" }
%"struct.std::__1::__value_type.1119" = type { %"struct.std::__1::pair.1120" }
%"struct.std::__1::pair.1120" = type { i32, %"struct.spvtools::opt::DominatorTreeNode" }
%"class.std::__1::__tree_node.1168" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1169" }
%"struct.std::__1::pair.1169" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt8FunctionD2Ev = comdat any

$_ZN8spvtools3opt9IRContextD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt16ValueNumberTableEEclEPS3_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt16LivenessAnalysisEEclEPS3_ = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjPN8spvtools3opt11InstructionEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_21PostDominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt6ModuleD2Ev = comdat any

$_ZN8spvtools3opt9IRContextC2E14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEE = comdat any

$_ZN8spvtools3opt6ModuleC2Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFv19spv_message_level_tPKcRK14spv_position_tS4_EE12__call_emptyEPKNS0_16__policy_storageES2_S4_S7_S4_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::IRContext"* @_ZN8spvtools11BuildModuleE14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEEPKjm(i32, %"class.std::__1::function"* nocapture readonly, i32*, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = bitcast %"class.std::__1::function"* %5 to i8*
  %7 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %7, i64 16, i1 false) #10
  %8 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__function::__policy_invoker"* %9 to i64*
  %11 = bitcast %"struct.std::__1::__function::__policy_invoker"* %8 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %15 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  store %"struct.std::__1::__function::__policy"* %15, %"struct.std::__1::__function::__policy"** %13, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %15, i64 0, i32 0
  %17 = load i8* (i8*)*, i8* (i8*)** %16, align 8
  %18 = icmp eq i8* (i8*)* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i8* %17(i8* %21) #10
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  br label %24

24:                                               ; preds = %4, %19
  %25 = call %"class.spvtools::opt::IRContext"* @_ZN8spvtools11BuildModuleE14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEEPKjmb(i32 %0, %"class.std::__1::function"* nonnull %5, i32* %2, i64 %3, i1 zeroext true)
  %26 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %26, i64 0, i32 1
  %28 = load void (i8*)*, void (i8*)** %27, align 8
  %29 = icmp eq void (i8*)* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void %28(i8* %32) #10
  br label %33

33:                                               ; preds = %24, %30
  ret %"class.spvtools::opt::IRContext"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::IRContext"* @_ZN8spvtools11BuildModuleE14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEEPKjmb(i32, %"class.std::__1::function"*, i32*, i64, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::function", align 8
  %7 = alloca %"class.std::__1::function", align 8
  %8 = alloca %"class.spvtools::opt::IrLoader", align 8
  %9 = tail call %struct.spv_context_t* @spvContextCreate(i32 %0) #10
  %10 = bitcast %"class.std::__1::function"* %7 to i8*
  %11 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false) #10
  %12 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::__function::__policy_invoker"* %13 to i64*
  %15 = bitcast %"struct.std::__1::__function::__policy_invoker"* %12 to i64*
  %16 = load i64, i64* %14, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %19 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  store %"struct.std::__1::__function::__policy"* %19, %"struct.std::__1::__function::__policy"** %17, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %19, i64 0, i32 0
  %21 = load i8* (i8*)*, i8* (i8*)** %20, align 8
  %22 = icmp eq i8* (i8*)* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i8* %21(i8* %25) #10
  %27 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %26, i8** %27, align 8
  br label %28

28:                                               ; preds = %5, %23
  call void @_ZN8spvtools25SetContextMessageConsumerEP13spv_context_tNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEE(%struct.spv_context_t* %9, %"class.std::__1::function"* nonnull %7) #10
  %29 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %29, i64 0, i32 1
  %31 = load void (i8*)*, void (i8*)** %30, align 8
  %32 = icmp eq void (i8*)* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void %31(i8* %35) #10
  br label %36

36:                                               ; preds = %28, %33
  %37 = bitcast %"class.std::__1::function"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37)
  %38 = call i8* @_Znwm(i64 456) #11
  %39 = bitcast i8* %38 to %"class.spvtools::opt::IRContext"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %11, i64 16, i1 false) #10
  %40 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 1
  %41 = bitcast %"struct.std::__1::__function::__policy_invoker"* %40 to i64*
  %42 = load i64, i64* %14, align 8
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 2
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  store %"struct.std::__1::__function::__policy"* %44, %"struct.std::__1::__function::__policy"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 0
  %46 = load i8* (i8*)*, i8* (i8*)** %45, align 8
  %47 = icmp eq i8* (i8*)* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = call i8* %46(i8* %50) #10
  %52 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %36
  call void @_ZN8spvtools3opt9IRContextC2E14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEE(%"class.spvtools::opt::IRContext"* nonnull %39, i32 %0, %"class.std::__1::function"* nonnull %6) #10
  %54 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %43, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %54, i64 0, i32 1
  %56 = load void (i8*)*, void (i8*)** %55, align 8
  %57 = icmp eq void (i8*)* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  call void %56(i8* %60) #10
  br label %61

61:                                               ; preds = %53, %58
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37)
  %62 = bitcast %"class.spvtools::opt::IrLoader"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %62) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 112, i1 false)
  %63 = getelementptr inbounds i8, i8* %38, i64 48
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Module"**
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  call void @_ZN8spvtools3opt8IrLoaderC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEEPNS0_6ModuleE(%"class.spvtools::opt::IrLoader"* nonnull %8, %"class.std::__1::function"* dereferenceable(32) %1, %"class.spvtools::opt::Module"* %65) #10
  %66 = zext i1 %4 to i8
  %67 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 10
  store i8 %66, i8* %67, align 8
  %68 = call i32 @spvBinaryParse(%struct.spv_context_t* %9, i8* nonnull %62, i32* %2, i64 %3, i32 (i8*, i32, i32, i32, i32, i32, i32)* nonnull @_ZN8spvtools12_GLOBAL__N_112SetSpvHeaderEPv16spv_endianness_tjjjjj, i32 (i8*, %struct.spv_parsed_instruction_t*)* nonnull @_ZN8spvtools12_GLOBAL__N_110SetSpvInstEPvPK24spv_parsed_instruction_t, %struct.spv_diagnostic_t** null) #10
  call void @_ZN8spvtools3opt8IrLoader9EndModuleEv(%"class.spvtools::opt::IrLoader"* nonnull %8) #10
  call void @spvContextDestroy(%struct.spv_context_t* %9) #10
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 8, i32 0, i32 0, i32 0
  %71 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %70, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::Instruction"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %61
  %74 = bitcast %"class.spvtools::opt::Instruction"* %71 to void (%"class.spvtools::opt::Instruction"*)***
  %75 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %76, align 8
  call void %77(%"class.spvtools::opt::Instruction"* nonnull %71) #10
  br label %78

78:                                               ; preds = %73, %61
  %79 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 7
  %80 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %79, i64 0, i32 0, i32 0
  %81 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %82 = icmp eq %"class.spvtools::opt::Instruction"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.spvtools::opt::Instruction"* %81 to i8*
  %85 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 7, i32 0, i32 1
  %86 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %85, align 8
  %87 = icmp eq %"class.spvtools::opt::Instruction"* %86, %81
  br i1 %87, label %98, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::Instruction"* [ %90, %88 ], [ %86, %83 ]
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %89, i64 -1
  %91 = bitcast %"class.spvtools::opt::Instruction"* %90 to void (%"class.spvtools::opt::Instruction"*)***
  %92 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %91, align 8
  %93 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %92, align 8
  call void %93(%"class.spvtools::opt::Instruction"* %90) #10
  %94 = icmp eq %"class.spvtools::opt::Instruction"* %90, %81
  br i1 %94, label %95, label %88

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::vector.17"* %79 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %83
  %99 = phi i8* [ %97, %95 ], [ %84, %83 ]
  store %"class.spvtools::opt::Instruction"* %81, %"class.spvtools::opt::Instruction"** %85, align 8
  call void @_ZdlPv(i8* %99) #11
  br label %100

100:                                              ; preds = %98, %78
  %101 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 6
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %104 = icmp eq %"class.spvtools::opt::BasicBlock"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = bitcast %"class.std::__1::unique_ptr.43"* %101 to %"struct.std::__1::default_delete.47"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.47"* %106, %"class.spvtools::opt::BasicBlock"* nonnull %103) #10
  br label %107

107:                                              ; preds = %105, %100
  %108 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 5, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %108, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Function"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %109) #10
  %112 = bitcast %"class.spvtools::opt::Function"* %109 to i8*
  call void @_ZdlPv(i8* %112) #11
  br label %113

113:                                              ; preds = %111, %107
  %114 = getelementptr inbounds %"class.spvtools::opt::IrLoader", %"class.spvtools::opt::IrLoader"* %8, i64 0, i32 2
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #11
  br label %122

122:                                              ; preds = %113, %119
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %62) #10
  %123 = select i1 %69, %"class.spvtools::opt::IRContext"* null, %"class.spvtools::opt::IRContext"* %39
  br i1 %69, label %126, label %124

124:                                              ; preds = %122
  call void @_ZN8spvtools3opt9IRContextD2Ev(%"class.spvtools::opt::IRContext"* nonnull %123) #10
  %125 = bitcast %"class.spvtools::opt::IRContext"* %123 to i8*
  call void @_ZdlPv(i8* %125) #11
  br label %126

126:                                              ; preds = %122, %124
  %127 = select i1 %69, %"class.spvtools::opt::IRContext"* %39, %"class.spvtools::opt::IRContext"* null
  ret %"class.spvtools::opt::IRContext"* %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.spv_context_t* @spvContextCreate(i32) local_unnamed_addr #2

declare void @_ZN8spvtools25SetContextMessageConsumerEP13spv_context_tNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEE(%struct.spv_context_t*, %"class.std::__1::function"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt8IrLoaderC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEEPNS0_6ModuleE(%"class.spvtools::opt::IrLoader"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::Module"*) unnamed_addr #2

declare i32 @spvBinaryParse(%struct.spv_context_t*, i8*, i32*, i64, i32 (i8*, i32, i32, i32, i32, i32, i32)*, i32 (i8*, %struct.spv_parsed_instruction_t*)*, %struct.spv_diagnostic_t**) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @_ZN8spvtools12_GLOBAL__N_112SetSpvHeaderEPv16spv_endianness_tjjjjj(i8* nocapture readonly, i32, i32, i32, i32, i32, i32) #3 {
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = bitcast i8* %8 to %"class.spvtools::opt::Module"**
  %10 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %10, i64 0, i32 0, i32 0
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %10, i64 0, i32 0, i32 1
  store i32 %3, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %10, i64 0, i32 0, i32 2
  store i32 %4, i32* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %10, i64 0, i32 0, i32 3
  store i32 %5, i32* %14, align 4
  %15 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %10, i64 0, i32 0, i32 4
  store i32 %6, i32* %15, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN8spvtools12_GLOBAL__N_110SetSpvInstEPvPK24spv_parsed_instruction_t(i8*, %struct.spv_parsed_instruction_t*) #0 {
  %3 = bitcast i8* %0 to %"class.spvtools::opt::IrLoader"*
  %4 = tail call zeroext i1 @_ZN8spvtools3opt8IrLoader14AddInstructionEPK24spv_parsed_instruction_t(%"class.spvtools::opt::IrLoader"* %3, %struct.spv_parsed_instruction_t* %1) #10
  %5 = select i1 %4, i32 0, i32 -4
  ret i32 %5
}

declare void @_ZN8spvtools3opt8IrLoader9EndModuleEv(%"class.spvtools::opt::IrLoader"*) local_unnamed_addr #2

declare void @spvContextDestroy(%struct.spv_context_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::IRContext"* @_ZN8spvtools11BuildModuleE14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj(i32, %"class.std::__1::function"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::function", align 8
  %6 = alloca %"class.spvtools::SpirvTools", align 8
  %7 = alloca %"class.std::__1::function", align 8
  %8 = alloca %"class.std::__1::vector.6", align 8
  %9 = bitcast %"class.spvtools::SpirvTools"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.spvtools::SpirvTools", %"class.spvtools::SpirvTools"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.spvtools::SpirvTools::Impl"* inttoptr (i64 -6148914691236517206 to %"struct.spvtools::SpirvTools::Impl"*), %"struct.spvtools::SpirvTools::Impl"** %10, align 8
  call void @_ZN8spvtools10SpirvToolsC1E14spv_target_env(%"class.spvtools::SpirvTools"* nonnull %6, i32 %0) #10
  %11 = bitcast %"class.std::__1::function"* %7 to i8*
  %12 = bitcast %"class.std::__1::function"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 16, i1 false) #10
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::__function::__policy_invoker"* %14 to i64*
  %16 = bitcast %"struct.std::__1::__function::__policy_invoker"* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %20 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  store %"struct.std::__1::__function::__policy"* %20, %"struct.std::__1::__function::__policy"** %18, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %20, i64 0, i32 0
  %22 = load i8* (i8*)*, i8* (i8*)** %21, align 8
  %23 = icmp eq i8* (i8*)* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i8* %22(i8* %26) #10
  %28 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  br label %29

29:                                               ; preds = %4, %24
  call void @_ZN8spvtools10SpirvTools18SetMessageConsumerENSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEE(%"class.spvtools::SpirvTools"* nonnull %6, %"class.std::__1::function"* nonnull %7) #10
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void %32(i8* %36) #10
  br label %37

37:                                               ; preds = %29, %34
  %38 = bitcast %"class.std::__1::vector.6"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #10
  %39 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %8, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #10
  %41 = call zeroext i1 @_ZNK8spvtools10SpirvTools8AssembleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIjNS5_IjEEEEj(%"class.spvtools::SpirvTools"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::vector.6"* nonnull %8, i32 %3) #10
  br i1 %41, label %42, label %85

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 1
  %46 = bitcast [8 x i8]* %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %48, i64 0, i32 0
  %50 = load i8* (i8*)*, i8* (i8*)** %49, align 8
  %51 = icmp eq i8* (i8*)* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %42
  %53 = call i8* %50(i8* %44) #10
  br label %54

54:                                               ; preds = %42, %52
  %55 = phi i8* [ %44, %42 ], [ %53, %52 ]
  %56 = load i32*, i32** %39, align 8
  %57 = bitcast i32** %40 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = ptrtoint i32* %56 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62)
  %63 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %55, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 1
  %65 = bitcast [8 x i8]* %64 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* %48, %"struct.std::__1::__function::__policy"** %66, align 8
  %67 = load i8* (i8*)*, i8* (i8*)** %49, align 8
  %68 = icmp eq i8* (i8*)* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %54
  %70 = call i8* %67(i8* %55) #10
  store i8* %70, i8** %63, align 8
  br label %71

71:                                               ; preds = %69, %54
  %72 = call %"class.spvtools::opt::IRContext"* @_ZN8spvtools11BuildModuleE14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEEPKjmb(i32 %0, %"class.std::__1::function"* nonnull %5, i32* %56, i64 %61, i1 zeroext true) #10
  %73 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %66, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %73, i64 0, i32 1
  %75 = load void (i8*)*, void (i8*)** %74, align 8
  %76 = icmp eq void (i8*)* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = load i8*, i8** %63, align 8
  call void %75(i8* %78) #10
  br label %79

79:                                               ; preds = %71, %77
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62)
  %80 = ptrtoint %"class.spvtools::opt::IRContext"* %72 to i64
  %81 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %48, i64 0, i32 1
  %82 = load void (i8*)*, void (i8*)** %81, align 8
  %83 = icmp eq void (i8*)* %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %79
  call void %82(i8* %55) #10
  br label %85

85:                                               ; preds = %84, %79, %37
  %86 = phi i64 [ 0, %37 ], [ %80, %79 ], [ %80, %84 ]
  %87 = load i32*, i32** %39, align 8
  %88 = icmp eq i32* %87, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = ptrtoint i32* %87 to i64
  %91 = bitcast i32** %40 to i64*
  store i64 %90, i64* %91, align 8
  %92 = bitcast i32* %87 to i8*
  call void @_ZdlPv(i8* %92) #11
  br label %93

93:                                               ; preds = %85, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #10
  call void @_ZN8spvtools10SpirvToolsD1Ev(%"class.spvtools::SpirvTools"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %94 = inttoptr i64 %86 to %"class.spvtools::opt::IRContext"*
  ret %"class.spvtools::opt::IRContext"* %94
}

declare void @_ZN8spvtools10SpirvToolsC1E14spv_target_env(%"class.spvtools::SpirvTools"*, i32) unnamed_addr #2

declare void @_ZN8spvtools10SpirvTools18SetMessageConsumerENSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS5_EEE(%"class.spvtools::SpirvTools"*, %"class.std::__1::function"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools10SpirvTools8AssembleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorIjNS5_IjEEEEj(%"class.spvtools::SpirvTools"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.6"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8spvtools10SpirvToolsD1Ev(%"class.spvtools::SpirvTools"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN8spvtools3opt8IrLoader14AddInstructionEPK24spv_parsed_instruction_t(%"class.spvtools::opt::IrLoader"*, %struct.spv_parsed_instruction_t*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.47"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #10
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #10
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #10
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #10
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #10
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #10
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #10
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #10
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #10
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #10
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.17"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %38, align 8
  store %"class.std::__1::vector.6"* null, %"class.std::__1::vector.6"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.6"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.6"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #11
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #10
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #10
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %3, align 8
  store %"class.std::__1::vector.6"* null, %"class.std::__1::vector.6"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.6"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %3, align 8
  store %"class.std::__1::vector.6"* null, %"class.std::__1::vector.6"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.6"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #11
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.24"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.24"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.24"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.24"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::Instruction"* %15 to void (%"class.spvtools::opt::Instruction"*)***
  %19 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::Instruction"* nonnull %15) #10
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.24"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.34"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.24"* %4, %"class.std::__1::unique_ptr.24"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.spvtools::opt::Instruction"* %31 to void (%"class.spvtools::opt::Instruction"*)***
  %35 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %35, i64 1
  %37 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %36, align 8
  tail call void %37(%"class.spvtools::opt::Instruction"* nonnull %31) #10
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.43"* %41, null
  br i1 %42, label %63, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::unique_ptr.43"* %41 to i8*
  %45 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 3, i32 0, i32 1
  %46 = load %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"** %45, align 8
  %47 = icmp eq %"class.std::__1::unique_ptr.43"* %46, %41
  br i1 %47, label %61, label %48

48:                                               ; preds = %43, %56
  %49 = phi %"class.std::__1::unique_ptr.43"* [ %50, %56 ], [ %46, %43 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.43"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %51, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %51, align 8
  %53 = icmp eq %"class.spvtools::opt::BasicBlock"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::unique_ptr.43"* %50 to %"struct.std::__1::default_delete.47"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.47"* %55, %"class.spvtools::opt::BasicBlock"* nonnull %52) #10
  br label %56

56:                                               ; preds = %54, %48
  %57 = icmp eq %"class.std::__1::unique_ptr.43"* %50, %41
  br i1 %57, label %58, label %48

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.41"* %39 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %43
  %62 = phi i8* [ %60, %58 ], [ %44, %43 ]
  store %"class.std::__1::unique_ptr.43"* %41, %"class.std::__1::unique_ptr.43"** %45, align 8
  tail call void @_ZdlPv(i8* %62) #11
  br label %63

63:                                               ; preds = %38, %61
  %64 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 0, i32 3
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp ne i8 %68, 0
  %70 = icmp eq %"class.spvtools::opt::Instruction"* %66, null
  %71 = or i1 %70, %69
  br i1 %71, label %99, label %72

72:                                               ; preds = %63, %72
  %73 = phi %"class.spvtools::opt::Instruction"* [ %93, %72 ], [ %66, %63 ]
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 2
  %75 = bitcast %"class.spvtools::opt::Instruction"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 1
  %78 = bitcast %"class.spvtools::opt::Instruction"** %77 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %79 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %78, align 8
  %80 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %79, i64 0, i32 2
  %81 = bitcast %"class.spvtools::opt::Instruction"** %80 to i64*
  store i64 %76, i64* %81, align 8
  %82 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.spvtools::opt::Instruction"** %74 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %85 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %85, i64 0, i32 1
  %87 = bitcast %"class.spvtools::opt::Instruction"** %86 to i64*
  store i64 %83, i64* %87, align 8
  %88 = bitcast %"class.spvtools::opt::Instruction"** %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #10
  %89 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %90 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %90, i64 1
  %92 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %91, align 8
  tail call void %92(%"class.spvtools::opt::Instruction"* nonnull %73) #10
  %93 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %93, i64 0, i32 0, i32 3
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp ne i8 %95, 0
  %97 = icmp eq %"class.spvtools::opt::Instruction"* %93, null
  %98 = or i1 %97, %96
  br i1 %98, label %99, label %72

99:                                               ; preds = %72, %63
  %100 = phi %"class.spvtools::opt::Instruction"* [ %66, %63 ], [ %93, %72 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %100, i64 0, i32 0, i32 3
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp ne i8 %102, 0
  %104 = icmp eq %"class.spvtools::opt::Instruction"* %100, null
  %105 = or i1 %104, %103
  br i1 %105, label %129, label %106

106:                                              ; preds = %99, %106
  %107 = phi %"class.spvtools::opt::Instruction"* [ %123, %106 ], [ %100, %99 ]
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 0, i32 2
  %109 = bitcast %"class.spvtools::opt::Instruction"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 0, i32 1
  %112 = bitcast %"class.spvtools::opt::Instruction"** %111 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %113 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %113, i64 0, i32 2
  %115 = bitcast %"class.spvtools::opt::Instruction"** %114 to i64*
  store i64 %110, i64* %115, align 8
  %116 = bitcast %"class.spvtools::opt::Instruction"** %111 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.spvtools::opt::Instruction"** %108 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %119 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %119, i64 0, i32 1
  %121 = bitcast %"class.spvtools::opt::Instruction"** %120 to i64*
  store i64 %117, i64* %121, align 8
  %122 = bitcast %"class.spvtools::opt::Instruction"** %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #10
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 0, i32 3
  %125 = load i8, i8* %124, align 8, !range !2
  %126 = icmp ne i8 %125, 0
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %123, null
  %128 = or i1 %127, %126
  br i1 %128, label %129, label %106

129:                                              ; preds = %106, %99
  %130 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %130) #10
  %131 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 1
  %132 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %131, i64 0, i32 0, i32 0
  %133 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %132, align 8
  %134 = icmp eq %"class.std::__1::unique_ptr.24"* %133, null
  br i1 %134, label %158, label %135

135:                                              ; preds = %129
  %136 = bitcast %"class.std::__1::unique_ptr.24"* %133 to i8*
  %137 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 1, i32 0, i32 1
  %138 = load %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"** %137, align 8
  %139 = icmp eq %"class.std::__1::unique_ptr.24"* %138, %133
  br i1 %139, label %156, label %140

140:                                              ; preds = %135, %151
  %141 = phi %"class.std::__1::unique_ptr.24"* [ %142, %151 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %141, i64 -1
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %143, align 8
  %145 = icmp eq %"class.spvtools::opt::Instruction"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.spvtools::opt::Instruction"* %144 to void (%"class.spvtools::opt::Instruction"*)***
  %148 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %148, i64 1
  %150 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %149, align 8
  tail call void %150(%"class.spvtools::opt::Instruction"* nonnull %144) #10
  br label %151

151:                                              ; preds = %146, %140
  %152 = icmp eq %"class.std::__1::unique_ptr.24"* %142, %133
  br i1 %152, label %153, label %140

153:                                              ; preds = %151
  %154 = bitcast %"class.std::__1::vector.34"* %131 to i8**
  %155 = load i8*, i8** %154, align 8
  br label %156

156:                                              ; preds = %153, %135
  %157 = phi i8* [ %155, %153 ], [ %136, %135 ]
  store %"class.std::__1::unique_ptr.24"* %133, %"class.std::__1::unique_ptr.24"** %137, align 8
  tail call void @_ZdlPv(i8* %157) #11
  br label %158

158:                                              ; preds = %129, %156
  %159 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %159, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %159, align 8
  %161 = icmp eq %"class.spvtools::opt::Instruction"* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = bitcast %"class.spvtools::opt::Instruction"* %160 to void (%"class.spvtools::opt::Instruction"*)***
  %164 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %163, align 8
  %165 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %164, i64 1
  %166 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %165, align 8
  tail call void %166(%"class.spvtools::opt::Instruction"* nonnull %160) #10
  br label %167

167:                                              ; preds = %158, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContextD2Ev(%"class.spvtools::opt::IRContext"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 0
  %3 = load %struct.spv_context_t*, %struct.spv_context_t** %2, align 8
  tail call void @spvContextDestroy(%struct.spv_context_t* %3) #10
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 27, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %4, align 8
  store %"class.spvtools::opt::StructuredCFGAnalysis"* null, %"class.spvtools::opt::StructuredCFGAnalysis"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::StructuredCFGAnalysis"* %5, null
  br i1 %6, label %34, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = icmp eq i64* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i64* %9 to i64
  %13 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %5, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = bitcast i64** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast i64* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #11
  br label %16

16:                                               ; preds = %11, %7
  %17 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.884"*, %"struct.std::__1::__hash_node_base.884"** %17, align 8
  %19 = icmp eq %"struct.std::__1::__hash_node_base.884"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16, %20
  %21 = phi %"struct.std::__1::__hash_node_base.884"* [ %23, %20 ], [ %18, %16 ]
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.884", %"struct.std::__1::__hash_node_base.884"* %21, i64 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.884"*, %"struct.std::__1::__hash_node_base.884"** %22, align 8
  %24 = bitcast %"struct.std::__1::__hash_node_base.884"* %21 to i8*
  tail call void @_ZdlPv(i8* %24) #11
  %25 = icmp eq %"struct.std::__1::__hash_node_base.884"* %23, null
  br i1 %25, label %26, label %20

26:                                               ; preds = %20, %16
  %27 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.884"**, %"struct.std::__1::__hash_node_base.884"*** %27, align 8
  store %"struct.std::__1::__hash_node_base.884"** null, %"struct.std::__1::__hash_node_base.884"*** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.884"** %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"struct.std::__1::__hash_node_base.884"** %28 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %30, %26
  %33 = bitcast %"class.spvtools::opt::StructuredCFGAnalysis"* %5 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %35, align 8
  store %"class.spvtools::opt::InstructionFolder"* null, %"class.spvtools::opt::InstructionFolder"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::InstructionFolder"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %36, i64 0, i32 2, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::FoldingRules"*, %"class.spvtools::opt::FoldingRules"** %39, align 8
  store %"class.spvtools::opt::FoldingRules"* null, %"class.spvtools::opt::FoldingRules"** %39, align 8
  %41 = icmp eq %"class.spvtools::opt::FoldingRules"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.spvtools::opt::FoldingRules"* %40 to void (%"class.spvtools::opt::FoldingRules"*)***
  %44 = load void (%"class.spvtools::opt::FoldingRules"*)**, void (%"class.spvtools::opt::FoldingRules"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %44, i64 1
  %46 = load void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %45, align 8
  tail call void %46(%"class.spvtools::opt::FoldingRules"* nonnull %40) #10
  br label %47

47:                                               ; preds = %42, %38
  %48 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %36, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::ConstantFoldingRules"** %48, align 8
  store %"class.spvtools::opt::ConstantFoldingRules"* null, %"class.spvtools::opt::ConstantFoldingRules"** %48, align 8
  %50 = icmp eq %"class.spvtools::opt::ConstantFoldingRules"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.spvtools::opt::ConstantFoldingRules"* %49 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %53 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %53, i64 1
  %55 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %54, align 8
  tail call void %55(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %49) #10
  br label %56

56:                                               ; preds = %51, %47
  %57 = bitcast %"class.spvtools::opt::InstructionFolder"* %36 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  br label %58

58:                                               ; preds = %34, %56
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 25
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.727", %"class.std::__1::unique_ptr.727"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::ValueNumberTable"*, %"class.spvtools::opt::ValueNumberTable"** %60, align 8
  store %"class.spvtools::opt::ValueNumberTable"* null, %"class.spvtools::opt::ValueNumberTable"** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::ValueNumberTable"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.std::__1::unique_ptr.727"* %59 to %"struct.std::__1::default_delete.755"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt16ValueNumberTableEEclEPS3_(%"struct.std::__1::default_delete.755"* %64, %"class.spvtools::opt::ValueNumberTable"* nonnull %61) #10
  br label %65

65:                                               ; preds = %58, %63
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 24
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.697", %"class.std::__1::unique_ptr.697"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::LivenessAnalysis"*, %"class.spvtools::opt::LivenessAnalysis"** %67, align 8
  store %"class.spvtools::opt::LivenessAnalysis"* null, %"class.spvtools::opt::LivenessAnalysis"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::LivenessAnalysis"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.std::__1::unique_ptr.697"* %66 to %"struct.std::__1::default_delete.725"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt16LivenessAnalysisEEclEPS3_(%"struct.std::__1::default_delete.725"* %71, %"class.spvtools::opt::LivenessAnalysis"* nonnull %68) #10
  br label %72

72:                                               ; preds = %65, %70
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 23
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.641"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::ScalarEvolutionAnalysis"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %74, align 8
  store %"class.spvtools::opt::ScalarEvolutionAnalysis"* null, %"class.spvtools::opt::ScalarEvolutionAnalysis"** %74, align 8
  %76 = icmp eq %"class.spvtools::opt::ScalarEvolutionAnalysis"* %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = bitcast %"class.std::__1::unique_ptr.641"* %73 to %"struct.std::__1::default_delete.695"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_(%"struct.std::__1::default_delete.695"* %78, %"class.spvtools::opt::ScalarEvolutionAnalysis"* nonnull %75) #10
  br label %79

79:                                               ; preds = %72, %77
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::multimap.629"*, %"class.std::__1::multimap.629"** %80, align 8
  store %"class.std::__1::multimap.629"* null, %"class.std::__1::multimap.629"** %80, align 8
  %82 = icmp eq %"class.std::__1::multimap.629"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::multimap.629", %"class.std::__1::multimap.629"* %81, i64 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::multimap.629", %"class.std::__1::multimap.629"* %81, i64 0, i32 0, i32 1, i32 0, i32 0
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %"class.std::__1::__tree_node.1031"**
  %87 = load %"class.std::__1::__tree_node.1031"*, %"class.std::__1::__tree_node.1031"** %86, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN8spvtools3opt11InstructionEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.630"* %84, %"class.std::__1::__tree_node.1031"* %87) #10
  %88 = bitcast %"class.std::__1::multimap.629"* %81 to i8*
  tail call void @_ZdlPv(i8* %88) #11
  br label %89

89:                                               ; preds = %79, %83
  %90 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %90, align 8
  store %"class.spvtools::opt::analysis::DebugInfoManager"* null, %"class.spvtools::opt::analysis::DebugInfoManager"** %90, align 8
  %92 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %91) #10
  %94 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %91 to i8*
  tail call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %89, %93
  %96 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %96, align 8
  store %"class.spvtools::opt::analysis::TypeManager"* null, %"class.spvtools::opt::analysis::TypeManager"** %96, align 8
  %98 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %97) #10
  %100 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %97 to i8*
  tail call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %95, %99
  %102 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %103 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %102, align 8
  store %"class.spvtools::opt::analysis::ConstantManager"* null, %"class.spvtools::opt::analysis::ConstantManager"** %102, align 8
  %104 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %103) #10
  %106 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %103 to i8*
  tail call void @_ZdlPv(i8* %106) #11
  br label %107

107:                                              ; preds = %101, %105
  %108 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.381"*, %"struct.std::__1::__hash_node_base.381"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.381"* %109, null
  br i1 %110, label %119, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"struct.std::__1::__hash_node_base.381"* [ %114, %111 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.381", %"struct.std::__1::__hash_node_base.381"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.381"*, %"struct.std::__1::__hash_node_base.381"** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.381", %"struct.std::__1::__hash_node_base.381"* %112, i64 3
  %116 = bitcast %"struct.std::__1::__hash_node_base.381"* %115 to %"class.spvtools::opt::LoopDescriptor"*
  tail call void @_ZN8spvtools3opt14LoopDescriptorD1Ev(%"class.spvtools::opt::LoopDescriptor"* %116) #10
  %117 = bitcast %"struct.std::__1::__hash_node_base.381"* %112 to i8*
  tail call void @_ZdlPv(i8* %117) #11
  %118 = icmp eq %"struct.std::__1::__hash_node_base.381"* %114, null
  br i1 %118, label %119, label %111

119:                                              ; preds = %111, %107
  %120 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.381"**, %"struct.std::__1::__hash_node_base.381"*** %120, align 8
  store %"struct.std::__1::__hash_node_base.381"** null, %"struct.std::__1::__hash_node_base.381"*** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.381"** %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = bitcast %"struct.std::__1::__hash_node_base.381"** %121 to i8*
  tail call void @_ZdlPv(i8* %124) #11
  br label %125

125:                                              ; preds = %119, %123
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 17, i32 0
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %128 = bitcast %"class.std::__1::__tree_end_node"* %127 to %"class.std::__1::__tree_node.1099"**
  %129 = load %"class.std::__1::__tree_node.1099"*, %"class.std::__1::__tree_node.1099"** %128, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_21PostDominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.368"* %126, %"class.std::__1::__tree_node.1099"* %129) #10
  %130 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 16, i32 0
  %131 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %132 = bitcast %"class.std::__1::__tree_end_node"* %131 to %"class.std::__1::__tree_node.1121"**
  %133 = load %"class.std::__1::__tree_node.1121"*, %"class.std::__1::__tree_node.1121"** %132, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.358"* %130, %"class.std::__1::__tree_node.1121"* %133) #10
  %134 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %135 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %134, align 8
  store %"class.spvtools::opt::CFG"* null, %"class.spvtools::opt::CFG"** %134, align 8
  %136 = icmp eq %"class.spvtools::opt::CFG"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %125
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %135) #10
  %138 = bitcast %"class.spvtools::opt::CFG"* %135 to i8*
  tail call void @_ZdlPv(i8* %138) #11
  br label %139

139:                                              ; preds = %125, %137
  %140 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %141 = load %"struct.std::__1::__hash_node_base.257"*, %"struct.std::__1::__hash_node_base.257"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base.257"* %141, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %139, %143
  %144 = phi %"struct.std::__1::__hash_node_base.257"* [ %146, %143 ], [ %141, %139 ]
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.257", %"struct.std::__1::__hash_node_base.257"* %144, i64 0, i32 0
  %146 = load %"struct.std::__1::__hash_node_base.257"*, %"struct.std::__1::__hash_node_base.257"** %145, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.257"* %144 to i8*
  tail call void @_ZdlPv(i8* %147) #11
  %148 = icmp eq %"struct.std::__1::__hash_node_base.257"* %146, null
  br i1 %148, label %149, label %143

149:                                              ; preds = %143, %139
  %150 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.257"**, %"struct.std::__1::__hash_node_base.257"*** %150, align 8
  store %"struct.std::__1::__hash_node_base.257"** null, %"struct.std::__1::__hash_node_base.257"*** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.257"** %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = bitcast %"struct.std::__1::__hash_node_base.257"** %151 to i8*
  tail call void @_ZdlPv(i8* %154) #11
  br label %155

155:                                              ; preds = %149, %153
  %156 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.233"* %157, null
  br i1 %158, label %183, label %159

159:                                              ; preds = %155, %180
  %160 = phi %"struct.std::__1::__hash_node_base.233"* [ %162, %180 ], [ %157, %155 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %160, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.233"*, %"struct.std::__1::__hash_node_base.233"** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %160, i64 5
  %164 = bitcast %"struct.std::__1::__hash_node_base.233"* %163 to %"struct.std::__1::__hash_node_base.1004"**
  %165 = load %"struct.std::__1::__hash_node_base.1004"*, %"struct.std::__1::__hash_node_base.1004"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.1004"* %165, null
  br i1 %166, label %173, label %167

167:                                              ; preds = %159, %167
  %168 = phi %"struct.std::__1::__hash_node_base.1004"* [ %170, %167 ], [ %165, %159 ]
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1004", %"struct.std::__1::__hash_node_base.1004"* %168, i64 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base.1004"*, %"struct.std::__1::__hash_node_base.1004"** %169, align 8
  %171 = bitcast %"struct.std::__1::__hash_node_base.1004"* %168 to i8*
  tail call void @_ZdlPv(i8* %171) #11
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1004"* %170, null
  br i1 %172, label %173, label %167

173:                                              ; preds = %167, %159
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.233", %"struct.std::__1::__hash_node_base.233"* %160, i64 3
  %175 = bitcast %"struct.std::__1::__hash_node_base.233"* %174 to %"struct.std::__1::__hash_node_base.1004"***
  %176 = load %"struct.std::__1::__hash_node_base.1004"**, %"struct.std::__1::__hash_node_base.1004"*** %175, align 8
  store %"struct.std::__1::__hash_node_base.1004"** null, %"struct.std::__1::__hash_node_base.1004"*** %175, align 8
  %177 = icmp eq %"struct.std::__1::__hash_node_base.1004"** %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %173
  %179 = bitcast %"struct.std::__1::__hash_node_base.1004"** %176 to i8*
  tail call void @_ZdlPv(i8* %179) #11
  br label %180

180:                                              ; preds = %178, %173
  %181 = bitcast %"struct.std::__1::__hash_node_base.233"* %160 to i8*
  tail call void @_ZdlPv(i8* %181) #11
  %182 = icmp eq %"struct.std::__1::__hash_node_base.233"* %162, null
  br i1 %182, label %183, label %159

183:                                              ; preds = %180, %155
  %184 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.233"**, %"struct.std::__1::__hash_node_base.233"*** %184, align 8
  store %"struct.std::__1::__hash_node_base.233"** null, %"struct.std::__1::__hash_node_base.233"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.233"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base.233"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #11
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %"struct.std::__1::__hash_node_base.209"*, %"struct.std::__1::__hash_node_base.209"** %190, align 8
  %192 = icmp eq %"struct.std::__1::__hash_node_base.209"* %191, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %189, %193
  %194 = phi %"struct.std::__1::__hash_node_base.209"* [ %196, %193 ], [ %191, %189 ]
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.209", %"struct.std::__1::__hash_node_base.209"* %194, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.209"*, %"struct.std::__1::__hash_node_base.209"** %195, align 8
  %197 = bitcast %"struct.std::__1::__hash_node_base.209"* %194 to i8*
  tail call void @_ZdlPv(i8* %197) #11
  %198 = icmp eq %"struct.std::__1::__hash_node_base.209"* %196, null
  br i1 %198, label %199, label %193

199:                                              ; preds = %193, %189
  %200 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base.209"**, %"struct.std::__1::__hash_node_base.209"*** %200, align 8
  store %"struct.std::__1::__hash_node_base.209"** null, %"struct.std::__1::__hash_node_base.209"*** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base.209"** %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %199
  %204 = bitcast %"struct.std::__1::__hash_node_base.209"** %201 to i8*
  tail call void @_ZdlPv(i8* %204) #11
  br label %205

205:                                              ; preds = %199, %203
  %206 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %207 = load %"struct.std::__1::__hash_node_base.181"*, %"struct.std::__1::__hash_node_base.181"** %206, align 8
  %208 = icmp eq %"struct.std::__1::__hash_node_base.181"* %207, null
  br i1 %208, label %215, label %209

209:                                              ; preds = %205, %209
  %210 = phi %"struct.std::__1::__hash_node_base.181"* [ %212, %209 ], [ %207, %205 ]
  %211 = getelementptr inbounds %"struct.std::__1::__hash_node_base.181", %"struct.std::__1::__hash_node_base.181"* %210, i64 0, i32 0
  %212 = load %"struct.std::__1::__hash_node_base.181"*, %"struct.std::__1::__hash_node_base.181"** %211, align 8
  %213 = bitcast %"struct.std::__1::__hash_node_base.181"* %210 to i8*
  tail call void @_ZdlPv(i8* %213) #11
  %214 = icmp eq %"struct.std::__1::__hash_node_base.181"* %212, null
  br i1 %214, label %215, label %209

215:                                              ; preds = %209, %205
  %216 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.181"**, %"struct.std::__1::__hash_node_base.181"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.181"** null, %"struct.std::__1::__hash_node_base.181"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.181"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.181"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #11
  br label %221

221:                                              ; preds = %215, %219
  %222 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %223 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %222, align 8
  store %"class.spvtools::opt::FeatureManager"* null, %"class.spvtools::opt::FeatureManager"** %222, align 8
  %224 = icmp eq %"class.spvtools::opt::FeatureManager"* %223, null
  br i1 %224, label %247, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %223, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %227 = load %"class.std::__1::set.161"*, %"class.std::__1::set.161"** %226, align 8
  store %"class.std::__1::set.161"* null, %"class.std::__1::set.161"** %226, align 8
  %228 = icmp eq %"class.std::__1::set.161"* %227, null
  br i1 %228, label %235, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.std::__1::set.161", %"class.std::__1::set.161"* %227, i64 0, i32 0
  %231 = getelementptr inbounds %"class.std::__1::set.161", %"class.std::__1::set.161"* %227, i64 0, i32 0, i32 1, i32 0, i32 0
  %232 = bitcast %"class.std::__1::__tree_end_node"* %231 to %"class.std::__1::__tree_node.1154"**
  %233 = load %"class.std::__1::__tree_node.1154"*, %"class.std::__1::__tree_node.1154"** %232, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.162"* %230, %"class.std::__1::__tree_node.1154"* %233) #10
  %234 = bitcast %"class.std::__1::set.161"* %227 to i8*
  tail call void @_ZdlPv(i8* %234) #11
  br label %235

235:                                              ; preds = %229, %225
  %236 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %223, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %237 = load %"class.std::__1::set.161"*, %"class.std::__1::set.161"** %236, align 8
  store %"class.std::__1::set.161"* null, %"class.std::__1::set.161"** %236, align 8
  %238 = icmp eq %"class.std::__1::set.161"* %237, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %"class.std::__1::set.161", %"class.std::__1::set.161"* %237, i64 0, i32 0
  %241 = getelementptr inbounds %"class.std::__1::set.161", %"class.std::__1::set.161"* %237, i64 0, i32 0, i32 1, i32 0, i32 0
  %242 = bitcast %"class.std::__1::__tree_end_node"* %241 to %"class.std::__1::__tree_node.1154"**
  %243 = load %"class.std::__1::__tree_node.1154"*, %"class.std::__1::__tree_node.1154"** %242, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.162"* %240, %"class.std::__1::__tree_node.1154"* %243) #10
  %244 = bitcast %"class.std::__1::set.161"* %237 to i8*
  tail call void @_ZdlPv(i8* %244) #11
  br label %245

245:                                              ; preds = %239, %235
  %246 = bitcast %"class.spvtools::opt::FeatureManager"* %223 to i8*
  tail call void @_ZdlPv(i8* %246) #11
  br label %247

247:                                              ; preds = %221, %245
  %248 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 7
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125"* %248, i64 0, i32 0, i32 0, i32 0
  %250 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %249, align 8
  store %"class.spvtools::opt::analysis::DecorationManager"* null, %"class.spvtools::opt::analysis::DecorationManager"** %249, align 8
  %251 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %247
  %253 = bitcast %"class.std::__1::unique_ptr.125"* %248 to %"struct.std::__1::default_delete.153"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.153"* %253, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %250) #10
  br label %254

254:                                              ; preds = %247, %252
  %255 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %255, i64 0, i32 0, i32 0, i32 0
  %257 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %256, align 8
  store %"class.spvtools::opt::analysis::DefUseManager"* null, %"class.spvtools::opt::analysis::DefUseManager"** %256, align 8
  %258 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %254
  %260 = bitcast %"class.std::__1::unique_ptr.65"* %255 to %"struct.std::__1::default_delete.123"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.123"* %260, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %257) #10
  br label %261

261:                                              ; preds = %254, %259
  %262 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 5, i32 0, i32 2
  %263 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %262, align 8
  %264 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %263, i64 0, i32 1
  %265 = load void (i8*)*, void (i8*)** %264, align 8
  %266 = icmp eq void (i8*)* %265, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  tail call void %265(i8* %269) #10
  br label %270

270:                                              ; preds = %261, %267
  %271 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %272 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %271, align 8
  store %"class.spvtools::opt::Module"* null, %"class.spvtools::opt::Module"** %271, align 8
  %273 = icmp eq %"class.spvtools::opt::Module"* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %270
  tail call void @_ZN8spvtools3opt6ModuleD2Ev(%"class.spvtools::opt::Module"* nonnull %272) #10
  %275 = bitcast %"class.spvtools::opt::Module"* %272 to i8*
  tail call void @_ZdlPv(i8* %275) #11
  br label %276

276:                                              ; preds = %270, %274
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt16ValueNumberTableEEclEPS3_(%"struct.std::__1::default_delete.755"*, %"class.spvtools::opt::ValueNumberTable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::ValueNumberTable"* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.257"*, %"struct.std::__1::__hash_node_base.257"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.257"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4, %8
  %9 = phi %"struct.std::__1::__hash_node_base.257"* [ %11, %8 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.257", %"struct.std::__1::__hash_node_base.257"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.257"*, %"struct.std::__1::__hash_node_base.257"** %10, align 8
  %12 = bitcast %"struct.std::__1::__hash_node_base.257"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  %13 = icmp eq %"struct.std::__1::__hash_node_base.257"* %11, null
  br i1 %13, label %14, label %8

14:                                               ; preds = %8, %4
  %15 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.257"**, %"struct.std::__1::__hash_node_base.257"*** %15, align 8
  store %"struct.std::__1::__hash_node_base.257"** null, %"struct.std::__1::__hash_node_base.257"*** %15, align 8
  %17 = icmp eq %"struct.std::__1::__hash_node_base.257"** %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.std::__1::__hash_node_base.257"** %16 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.735"*, %"struct.std::__1::__hash_node_base.735"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.735"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20, %24
  %25 = phi %"struct.std::__1::__hash_node_base.735"* [ %27, %24 ], [ %22, %20 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.735", %"struct.std::__1::__hash_node_base.735"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.735"*, %"struct.std::__1::__hash_node_base.735"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.735", %"struct.std::__1::__hash_node_base.735"* %25, i64 2
  %29 = bitcast %"struct.std::__1::__hash_node_base.735"* %28 to %"class.spvtools::opt::Instruction"*
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %29) #10
  %30 = bitcast %"struct.std::__1::__hash_node_base.735"* %25 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  %31 = icmp eq %"struct.std::__1::__hash_node_base.735"* %27, null
  br i1 %31, label %32, label %24

32:                                               ; preds = %24, %20
  %33 = getelementptr inbounds %"class.spvtools::opt::ValueNumberTable", %"class.spvtools::opt::ValueNumberTable"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.735"**, %"struct.std::__1::__hash_node_base.735"*** %33, align 8
  store %"struct.std::__1::__hash_node_base.735"** null, %"struct.std::__1::__hash_node_base.735"*** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.735"** %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.std::__1::__hash_node_base.735"** %34 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %32, %36
  %39 = bitcast %"class.spvtools::opt::ValueNumberTable"* %1 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt16LivenessAnalysisEEclEPS3_(%"struct.std::__1::default_delete.725"*, %"class.spvtools::opt::LivenessAnalysis"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::LivenessAnalysis"* %1, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::LivenessAnalysis", %"class.spvtools::opt::LivenessAnalysis"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.705"*, %"struct.std::__1::__hash_node_base.705"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.705"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %4, %32
  %9 = phi %"struct.std::__1::__hash_node_base.705"* [ %11, %32 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.705", %"struct.std::__1::__hash_node_base.705"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.705"*, %"struct.std::__1::__hash_node_base.705"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.705", %"struct.std::__1::__hash_node_base.705"* %9, i64 6
  %13 = bitcast %"struct.std::__1::__hash_node_base.705"* %12 to %"struct.std::__1::__hash_node_base.938"**
  %14 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %13, align 8
  %15 = bitcast %"struct.std::__1::__hash_node_base.705"* %12 to %"class.std::__1::allocator.948"*
  %16 = icmp eq %"struct.std::__1::__hash_node_base.938"* %14, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %8, %17
  %18 = phi %"struct.std::__1::__hash_node_base.938"* [ %20, %17 ], [ %14, %8 ]
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %18, i64 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.938"*, %"struct.std::__1::__hash_node_base.938"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.938", %"struct.std::__1::__hash_node_base.938"* %18, i64 2
  %22 = bitcast %"struct.std::__1::__hash_node_base.938"* %21 to %"struct.std::__1::pair.959"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_(%"class.std::__1::allocator.948"* dereferenceable(1) %15, %"struct.std::__1::pair.959"* %22) #10
  %23 = bitcast %"struct.std::__1::__hash_node_base.938"* %18 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  %24 = icmp eq %"struct.std::__1::__hash_node_base.938"* %20, null
  br i1 %24, label %25, label %17

25:                                               ; preds = %17, %8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.705", %"struct.std::__1::__hash_node_base.705"* %9, i64 4
  %27 = bitcast %"struct.std::__1::__hash_node_base.705"* %26 to %"struct.std::__1::__hash_node_base.938"***
  %28 = load %"struct.std::__1::__hash_node_base.938"**, %"struct.std::__1::__hash_node_base.938"*** %27, align 8
  store %"struct.std::__1::__hash_node_base.938"** null, %"struct.std::__1::__hash_node_base.938"*** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.938"** %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"struct.std::__1::__hash_node_base.938"** %28 to i8*
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %30, %25
  %33 = bitcast %"struct.std::__1::__hash_node_base.705"* %9 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  %34 = icmp eq %"struct.std::__1::__hash_node_base.705"* %11, null
  br i1 %34, label %35, label %8

35:                                               ; preds = %32, %4
  %36 = getelementptr inbounds %"class.spvtools::opt::LivenessAnalysis", %"class.spvtools::opt::LivenessAnalysis"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.705"**, %"struct.std::__1::__hash_node_base.705"*** %36, align 8
  store %"struct.std::__1::__hash_node_base.705"** null, %"struct.std::__1::__hash_node_base.705"*** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.705"** %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = bitcast %"struct.std::__1::__hash_node_base.705"** %37 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %35, %39
  %42 = bitcast %"class.spvtools::opt::LivenessAnalysis"* %1 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %41, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIjN8spvtools3opt16RegisterLiveness22RegionRegisterLivenessEEEPvEEEEE7destroyINS_4pairIKjS7_EEvvEEvRSB_PT_(%"class.std::__1::allocator.948"* dereferenceable(1), %"struct.std::__1::pair.959"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.959", %"struct.std::__1::pair.959"* %1, i64 0, i32 1, i32 3, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.984"*, %"struct.std::__1::pair.984"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.984"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"struct.std::__1::pair.984"* %4 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.959", %"struct.std::__1::pair.959"* %1, i64 0, i32 1, i32 3, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair.984"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.std::__1::pair.984"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %2
  %12 = getelementptr inbounds %"struct.std::__1::pair.959", %"struct.std::__1::pair.959"* %1, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.965"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11, %15
  %16 = phi %"struct.std::__1::__hash_node_base.965"* [ %18, %15 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.965", %"struct.std::__1::__hash_node_base.965"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base.965"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  %20 = icmp eq %"struct.std::__1::__hash_node_base.965"* %18, null
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %11
  %22 = getelementptr inbounds %"struct.std::__1::pair.959", %"struct.std::__1::pair.959"* %1, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.965"**, %"struct.std::__1::__hash_node_base.965"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.965"** null, %"struct.std::__1::__hash_node_base.965"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.965"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.965"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"struct.std::__1::pair.959", %"struct.std::__1::pair.959"* %1, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.965"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27, %31
  %32 = phi %"struct.std::__1::__hash_node_base.965"* [ %34, %31 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.965", %"struct.std::__1::__hash_node_base.965"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %33, align 8
  %35 = bitcast %"struct.std::__1::__hash_node_base.965"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  %36 = icmp eq %"struct.std::__1::__hash_node_base.965"* %34, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %27
  %38 = getelementptr inbounds %"struct.std::__1::pair.959", %"struct.std::__1::pair.959"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.965"**, %"struct.std::__1::__hash_node_base.965"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.965"** null, %"struct.std::__1::__hash_node_base.965"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.965"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.965"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %37, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt23ScalarEvolutionAnalysisEEclEPS3_(%"struct.std::__1::default_delete.695"*, %"class.spvtools::opt::ScalarEvolutionAnalysis"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 4, i32 0
  %6 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.684"* %5, %"class.std::__1::__tree_node"* %8) #10
  %9 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.666"*, %"struct.std::__1::__hash_node_base.666"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base.666"* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %4, %25
  %13 = phi %"struct.std::__1::__hash_node_base.666"* [ %15, %25 ], [ %10, %4 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.666", %"struct.std::__1::__hash_node_base.666"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.666"*, %"struct.std::__1::__hash_node_base.666"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.666", %"struct.std::__1::__hash_node_base.666"* %13, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base.666"* %16 to %"class.spvtools::opt::SENode"**
  %18 = load %"class.spvtools::opt::SENode"*, %"class.spvtools::opt::SENode"** %17, align 8
  store %"class.spvtools::opt::SENode"* null, %"class.spvtools::opt::SENode"** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::SENode"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.spvtools::opt::SENode"* %18 to void (%"class.spvtools::opt::SENode"*)***
  %22 = load void (%"class.spvtools::opt::SENode"*)**, void (%"class.spvtools::opt::SENode"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %22, i64 2
  %24 = load void (%"class.spvtools::opt::SENode"*)*, void (%"class.spvtools::opt::SENode"*)** %23, align 8
  tail call void %24(%"class.spvtools::opt::SENode"* nonnull %18) #10
  br label %25

25:                                               ; preds = %20, %12
  %26 = bitcast %"struct.std::__1::__hash_node_base.666"* %13 to i8*
  tail call void @_ZdlPv(i8* %26) #11
  %27 = icmp eq %"struct.std::__1::__hash_node_base.666"* %15, null
  br i1 %27, label %28, label %12

28:                                               ; preds = %25, %4
  %29 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.666"**, %"struct.std::__1::__hash_node_base.666"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.666"** null, %"struct.std::__1::__hash_node_base.666"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.666"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.666"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.spvtools::opt::ScalarEvolutionAnalysis", %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node.1028"**
  %38 = load %"class.std::__1::__tree_node.1028"*, %"class.std::__1::__tree_node.1028"** %37, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.645"* %35, %"class.std::__1::__tree_node.1028"* %38) #10
  %39 = bitcast %"class.spvtools::opt::ScalarEvolutionAnalysis"* %1 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %34, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.684"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.684"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt4LoopES6_EENS_19__map_value_compareIS6_S7_NS_4lessIS6_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.684"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.645"*, %"class.std::__1::__tree_node.1028"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1028"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1028"* %1 to %"class.std::__1::__tree_node.1028"**
  %6 = load %"class.std::__1::__tree_node.1028"*, %"class.std::__1::__tree_node.1028"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.645"* %0, %"class.std::__1::__tree_node.1028"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1028", %"class.std::__1::__tree_node.1028"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1028"**
  %9 = load %"class.std::__1::__tree_node.1028"*, %"class.std::__1::__tree_node.1028"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt11InstructionEPNS3_6SENodeEEENS_19__map_value_compareIS6_S9_NS_4lessIS6_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.645"* %0, %"class.std::__1::__tree_node.1028"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1028"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjPN8spvtools3opt11InstructionEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.630"*, %"class.std::__1::__tree_node.1031"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1031"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1031"* %1 to %"class.std::__1::__tree_node.1031"**
  %6 = load %"class.std::__1::__tree_node.1031"*, %"class.std::__1::__tree_node.1031"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN8spvtools3opt11InstructionEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.630"* %0, %"class.std::__1::__tree_node.1031"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1031", %"class.std::__1::__tree_node.1031"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1031"**
  %9 = load %"class.std::__1::__tree_node.1031"*, %"class.std::__1::__tree_node.1031"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjPN8spvtools3opt11InstructionEEENS_19__map_value_compareIjS6_NS_4lessIjEELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.630"* %0, %"class.std::__1::__tree_node.1031"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1031"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.604"*, %"struct.std::__1::__hash_node_base.604"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.604"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.604"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.604"*, %"struct.std::__1::__hash_node_base.604"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.604"* %9 to %"struct.std::__1::__hash_node_base.965"**
  %11 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.965"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.965"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.965", %"struct.std::__1::__hash_node_base.965"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.965"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  %18 = icmp eq %"struct.std::__1::__hash_node_base.965"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.604"* %20 to %"struct.std::__1::__hash_node_base.965"***
  %22 = load %"struct.std::__1::__hash_node_base.965"**, %"struct.std::__1::__hash_node_base.965"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.965"** null, %"struct.std::__1::__hash_node_base.965"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.965"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.965"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.604"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  %28 = icmp eq %"struct.std::__1::__hash_node_base.604"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.604"**, %"struct.std::__1::__hash_node_base.604"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.604"** null, %"struct.std::__1::__hash_node_base.604"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.604"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.604"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.604"*, %"struct.std::__1::__hash_node_base.604"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.604"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.604"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.604"*, %"struct.std::__1::__hash_node_base.604"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.604"* %43 to %"struct.std::__1::__hash_node_base.965"**
  %45 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.965"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.965"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.965", %"struct.std::__1::__hash_node_base.965"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.965"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  %52 = icmp eq %"struct.std::__1::__hash_node_base.965"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.604"* %54 to %"struct.std::__1::__hash_node_base.965"***
  %56 = load %"struct.std::__1::__hash_node_base.965"**, %"struct.std::__1::__hash_node_base.965"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.965"** null, %"struct.std::__1::__hash_node_base.965"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.965"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.965"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #11
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.604"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #11
  %62 = icmp eq %"struct.std::__1::__hash_node_base.604"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.604"**, %"struct.std::__1::__hash_node_base.604"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.604"** null, %"struct.std::__1::__hash_node_base.604"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.604"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.604"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.604"*, %"struct.std::__1::__hash_node_base.604"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.604"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.604"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.604"*, %"struct.std::__1::__hash_node_base.604"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.604"* %77 to %"struct.std::__1::__hash_node_base.965"**
  %79 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.965"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.965"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.965", %"struct.std::__1::__hash_node_base.965"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.965"*, %"struct.std::__1::__hash_node_base.965"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.965"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #11
  %86 = icmp eq %"struct.std::__1::__hash_node_base.965"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.604", %"struct.std::__1::__hash_node_base.604"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.604"* %88 to %"struct.std::__1::__hash_node_base.965"***
  %90 = load %"struct.std::__1::__hash_node_base.965"**, %"struct.std::__1::__hash_node_base.965"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.965"** null, %"struct.std::__1::__hash_node_base.965"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.965"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.965"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #11
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.604"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #11
  %96 = icmp eq %"struct.std::__1::__hash_node_base.604"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.604"**, %"struct.std::__1::__hash_node_base.604"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.604"** null, %"struct.std::__1::__hash_node_base.604"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.604"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.604"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #11
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #11
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #11
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.574"*, %"struct.std::__1::__hash_node_base.574"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.574"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.574"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.574", %"struct.std::__1::__hash_node_base.574"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.574"*, %"struct.std::__1::__hash_node_base.574"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.574"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base.574"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.574"**, %"struct.std::__1::__hash_node_base.574"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.574"** null, %"struct.std::__1::__hash_node_base.574"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.574"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.574"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.491"*, %"struct.std::__1::__hash_node_base.491"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.491"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.491"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.491", %"struct.std::__1::__hash_node_base.491"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.491"*, %"struct.std::__1::__hash_node_base.491"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.491"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  %26 = icmp eq %"struct.std::__1::__hash_node_base.491"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.491"**, %"struct.std::__1::__hash_node_base.491"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.491"** null, %"struct.std::__1::__hash_node_base.491"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.491"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.491"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.556", %"class.std::__1::vector.556"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #10
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.556"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.539"*, %"struct.std::__1::__hash_node_base.539"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.539"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.539"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.539", %"struct.std::__1::__hash_node_base.539"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.539"*, %"struct.std::__1::__hash_node_base.539"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.539", %"struct.std::__1::__hash_node_base.539"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.539"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #10
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.539"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #11
  %80 = icmp eq %"struct.std::__1::__hash_node_base.539"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.539"**, %"struct.std::__1::__hash_node_base.539"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.539"** null, %"struct.std::__1::__hash_node_base.539"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.539"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.539"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #11
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.515"*, %"struct.std::__1::__hash_node_base.515"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.515"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.515"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.515", %"struct.std::__1::__hash_node_base.515"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.515"*, %"struct.std::__1::__hash_node_base.515"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.515"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #11
  %96 = icmp eq %"struct.std::__1::__hash_node_base.515"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.515"**, %"struct.std::__1::__hash_node_base.515"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.515"** null, %"struct.std::__1::__hash_node_base.515"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.515"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.515"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.491"*, %"struct.std::__1::__hash_node_base.491"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.491"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.491"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.491", %"struct.std::__1::__hash_node_base.491"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.491"*, %"struct.std::__1::__hash_node_base.491"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.491"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #11
  %112 = icmp eq %"struct.std::__1::__hash_node_base.491"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.491"**, %"struct.std::__1::__hash_node_base.491"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.491"** null, %"struct.std::__1::__hash_node_base.491"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.491"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.491"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #11
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.461", %"class.std::__1::vector.461"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.463"*, %"class.std::__1::unique_ptr.463"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.463"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.463"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.463"*, %"class.std::__1::unique_ptr.463"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.463"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.463"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.463"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #10
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.463"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.461"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.463"* %4, %"class.std::__1::unique_ptr.463"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.444"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.444"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.444", %"struct.std::__1::__hash_node_base.444"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.444"*, %"struct.std::__1::__hash_node_base.444"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.444"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  %38 = icmp eq %"struct.std::__1::__hash_node_base.444"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.444"**, %"struct.std::__1::__hash_node_base.444"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.444"** null, %"struct.std::__1::__hash_node_base.444"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.444"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.444"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1051"**
  %49 = load %"class.std::__1::__tree_node.1051"*, %"class.std::__1::__tree_node.1051"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.430"* %46, %"class.std::__1::__tree_node.1051"* %49) #10
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.411"*, %"struct.std::__1::__hash_node_base.411"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.411"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.411"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.411", %"struct.std::__1::__hash_node_base.411"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.411"*, %"struct.std::__1::__hash_node_base.411"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.411"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #11
  %58 = icmp eq %"struct.std::__1::__hash_node_base.411"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.411"**, %"struct.std::__1::__hash_node_base.411"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.411"** null, %"struct.std::__1::__hash_node_base.411"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.411"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.411"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.430"*, %"class.std::__1::__tree_node.1051"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1051"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1051"* %1 to %"class.std::__1::__tree_node.1051"**
  %6 = load %"class.std::__1::__tree_node.1051"*, %"class.std::__1::__tree_node.1051"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.430"* %0, %"class.std::__1::__tree_node.1051"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1051", %"class.std::__1::__tree_node.1051"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1051"**
  %9 = load %"class.std::__1::__tree_node.1051"*, %"class.std::__1::__tree_node.1051"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.430"* %0, %"class.std::__1::__tree_node.1051"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1051"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8spvtools3opt14LoopDescriptorD1Ev(%"class.spvtools::opt::LoopDescriptor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_21PostDominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.368"*, %"class.std::__1::__tree_node.1099"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1099"* %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1099"* %1 to %"class.std::__1::__tree_node.1099"**
  %6 = load %"class.std::__1::__tree_node.1099"*, %"class.std::__1::__tree_node.1099"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_21PostDominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.368"* %0, %"class.std::__1::__tree_node.1099"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1099", %"class.std::__1::__tree_node.1099"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1099"**
  %9 = load %"class.std::__1::__tree_node.1099"*, %"class.std::__1::__tree_node.1099"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_21PostDominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.368"* %0, %"class.std::__1::__tree_node.1099"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1099", %"class.std::__1::__tree_node.1099"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.1099", %"class.std::__1::__tree_node.1099"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.1118"**
  %13 = load %"class.std::__1::__tree_node.1118"*, %"class.std::__1::__tree_node.1118"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1110"* %10, %"class.std::__1::__tree_node.1118"* %13) #10
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.1099", %"class.std::__1::__tree_node.1099"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %14, align 8
  %16 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1099", %"class.std::__1::__tree_node.1099"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %15 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %4, %17
  %23 = bitcast %"class.std::__1::__tree_node.1099"* %1 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %2, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1110"*, %"class.std::__1::__tree_node.1118"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1118"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1118"* %1 to %"class.std::__1::__tree_node.1118"**
  %6 = load %"class.std::__1::__tree_node.1118"*, %"class.std::__1::__tree_node.1118"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1110"* %0, %"class.std::__1::__tree_node.1118"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1118", %"class.std::__1::__tree_node.1118"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1118"**
  %9 = load %"class.std::__1::__tree_node.1118"*, %"class.std::__1::__tree_node.1118"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1110"* %0, %"class.std::__1::__tree_node.1118"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1118", %"class.std::__1::__tree_node.1118"* %1, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %11 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %10, align 8
  %12 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1118", %"class.std::__1::__tree_node.1118"* %1, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1
  %16 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.1118"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.358"*, %"class.std::__1::__tree_node.1121"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1121"* %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1121"* %1 to %"class.std::__1::__tree_node.1121"**
  %6 = load %"class.std::__1::__tree_node.1121"*, %"class.std::__1::__tree_node.1121"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.358"* %0, %"class.std::__1::__tree_node.1121"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1121", %"class.std::__1::__tree_node.1121"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1121"**
  %9 = load %"class.std::__1::__tree_node.1121"*, %"class.std::__1::__tree_node.1121"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.358"* %0, %"class.std::__1::__tree_node.1121"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1121", %"class.std::__1::__tree_node.1121"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.1121", %"class.std::__1::__tree_node.1121"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.1118"**
  %13 = load %"class.std::__1::__tree_node.1118"*, %"class.std::__1::__tree_node.1118"** %12, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1110"* %10, %"class.std::__1::__tree_node.1118"* %13) #10
  %14 = getelementptr inbounds %"class.std::__1::__tree_node.1121", %"class.std::__1::__tree_node.1121"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %14, align 8
  %16 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %15 to i64
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.1121", %"class.std::__1::__tree_node.1121"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %15 to i8*
  tail call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %4, %17
  %23 = bitcast %"class.std::__1::__tree_node.1121"* %1 to i8*
  tail call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %2, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.336"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.336"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.336", %"struct.std::__1::__hash_node_base.336"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.336"*, %"struct.std::__1::__hash_node_base.336"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.336"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  %10 = icmp eq %"struct.std::__1::__hash_node_base.336"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.336"**, %"struct.std::__1::__hash_node_base.336"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.336"** null, %"struct.std::__1::__hash_node_base.336"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.336"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.336"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.312"*, %"struct.std::__1::__hash_node_base.312"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.312"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.312"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.312"*, %"struct.std::__1::__hash_node_base.312"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.312"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.312", %"struct.std::__1::__hash_node_base.312"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.312"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #11
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.312"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #11
  %36 = icmp eq %"struct.std::__1::__hash_node_base.312"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.312"**, %"struct.std::__1::__hash_node_base.312"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.312"** null, %"struct.std::__1::__hash_node_base.312"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.312"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.312"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #10
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #10
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #10
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #10
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #10
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #10
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #10
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #10
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #10
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #10
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.284"*, %"struct.std::__1::__hash_node_base.284"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.284"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.284"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.284", %"struct.std::__1::__hash_node_base.284"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.284"*, %"struct.std::__1::__hash_node_base.284"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.284", %"struct.std::__1::__hash_node_base.284"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.284"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.284", %"struct.std::__1::__hash_node_base.284"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.284"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #11
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.284"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #11
  %214 = icmp eq %"struct.std::__1::__hash_node_base.284"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.284"**, %"struct.std::__1::__hash_node_base.284"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.284"** null, %"struct.std::__1::__hash_node_base.284"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.284"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.284"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #11
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.162"*, %"class.std::__1::__tree_node.1154"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1154"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1154"* %1 to %"class.std::__1::__tree_node.1154"**
  %6 = load %"class.std::__1::__tree_node.1154"*, %"class.std::__1::__tree_node.1154"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.162"* %0, %"class.std::__1::__tree_node.1154"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1154", %"class.std::__1::__tree_node.1154"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1154"**
  %9 = load %"class.std::__1::__tree_node.1154"*, %"class.std::__1::__tree_node.1154"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.162"* %0, %"class.std::__1::__tree_node.1154"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1154"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.153"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.133"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.133"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.133"*, %"struct.std::__1::__hash_node_base.133"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.133"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.133"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.133"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.133"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.133"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.133", %"struct.std::__1::__hash_node_base.133"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.133"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.133"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base.133"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.133"**, %"struct.std::__1::__hash_node_base.133"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.133"** null, %"struct.std::__1::__hash_node_base.133"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.133"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.133"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.123"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.99"*, %"struct.std::__1::__hash_node_base.99"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.99"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.99"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.99", %"struct.std::__1::__hash_node_base.99"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.99"*, %"struct.std::__1::__hash_node_base.99"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.99", %"struct.std::__1::__hash_node_base.99"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.99"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.99", %"struct.std::__1::__hash_node_base.99"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.99"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.99"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  %23 = icmp eq %"struct.std::__1::__hash_node_base.99"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.99"**, %"struct.std::__1::__hash_node_base.99"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.99"** null, %"struct.std::__1::__hash_node_base.99"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.99"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.99"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1168"**
  %34 = load %"class.std::__1::__tree_node.1168"*, %"class.std::__1::__tree_node.1168"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1168"* %34) #10
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1168"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1168"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1168"* %1 to %"class.std::__1::__tree_node.1168"**
  %6 = load %"class.std::__1::__tree_node.1168"*, %"class.std::__1::__tree_node.1168"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1168"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1168", %"class.std::__1::__tree_node.1168"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1168"**
  %9 = load %"class.std::__1::__tree_node.1168"*, %"class.std::__1::__tree_node.1168"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1168"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node.1168"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt6ModuleD2Ev(%"class.spvtools::opt::Module"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 16
  %3 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.spvtools::opt::Instruction"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 16, i32 0, i32 1
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = icmp eq %"class.spvtools::opt::Instruction"* %9, %4
  br i1 %10, label %21, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"class.spvtools::opt::Instruction"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %12, i64 -1
  %14 = bitcast %"class.spvtools::opt::Instruction"* %13 to void (%"class.spvtools::opt::Instruction"*)***
  %15 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %14, align 8
  %16 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %15, align 8
  tail call void %16(%"class.spvtools::opt::Instruction"* %13) #10
  %17 = icmp eq %"class.spvtools::opt::Instruction"* %13, %4
  br i1 %17, label %18, label %11

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::vector.17"* %2 to i8**
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %18, %6
  %22 = phi i8* [ %20, %18 ], [ %7, %6 ]
  store %"class.spvtools::opt::Instruction"* %4, %"class.spvtools::opt::Instruction"** %8, align 8
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %1, %21
  %24 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 15
  %25 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %25, align 8
  %27 = icmp eq %"class.std::__1::unique_ptr.31"* %26, null
  br i1 %27, label %48, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::unique_ptr.31"* %26 to i8*
  %30 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 15, i32 0, i32 1
  %31 = load %"class.std::__1::unique_ptr.31"*, %"class.std::__1::unique_ptr.31"** %30, align 8
  %32 = icmp eq %"class.std::__1::unique_ptr.31"* %31, %26
  br i1 %32, label %46, label %33

33:                                               ; preds = %28, %41
  %34 = phi %"class.std::__1::unique_ptr.31"* [ %35, %41 ], [ %31, %28 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %34, i64 -1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %36, align 8
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %36, align 8
  %38 = icmp eq %"class.spvtools::opt::Function"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  tail call void @_ZN8spvtools3opt8FunctionD2Ev(%"class.spvtools::opt::Function"* nonnull %37) #10
  %40 = bitcast %"class.spvtools::opt::Function"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  br label %41

41:                                               ; preds = %39, %33
  %42 = icmp eq %"class.std::__1::unique_ptr.31"* %35, %26
  br i1 %42, label %43, label %33

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::vector.29"* %24 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

46:                                               ; preds = %43, %28
  %47 = phi i8* [ %45, %43 ], [ %29, %28 ]
  store %"class.std::__1::unique_ptr.31"* %26, %"class.std::__1::unique_ptr.31"** %30, align 8
  tail call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %23, %46
  %49 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  %51 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 0, i32 3
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp ne i8 %53, 0
  %55 = icmp eq %"class.spvtools::opt::Instruction"* %51, null
  %56 = or i1 %55, %54
  br i1 %56, label %84, label %57

57:                                               ; preds = %48, %57
  %58 = phi %"class.spvtools::opt::Instruction"* [ %78, %57 ], [ %51, %48 ]
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 0, i32 2
  %60 = bitcast %"class.spvtools::opt::Instruction"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %58, i64 0, i32 0, i32 1
  %63 = bitcast %"class.spvtools::opt::Instruction"** %62 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %64 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %64, i64 0, i32 2
  %66 = bitcast %"class.spvtools::opt::Instruction"** %65 to i64*
  store i64 %61, i64* %66, align 8
  %67 = bitcast %"class.spvtools::opt::Instruction"** %62 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.spvtools::opt::Instruction"** %59 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %70 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %69, align 8
  %71 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %70, i64 0, i32 1
  %72 = bitcast %"class.spvtools::opt::Instruction"** %71 to i64*
  store i64 %68, i64* %72, align 8
  %73 = bitcast %"class.spvtools::opt::Instruction"** %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #10
  %74 = bitcast %"class.spvtools::opt::Instruction"* %58 to void (%"class.spvtools::opt::Instruction"*)***
  %75 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::Instruction"* nonnull %58) #10
  %78 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 0, i32 3
  %80 = load i8, i8* %79, align 8, !range !2
  %81 = icmp ne i8 %80, 0
  %82 = icmp eq %"class.spvtools::opt::Instruction"* %78, null
  %83 = or i1 %82, %81
  br i1 %83, label %84, label %57

84:                                               ; preds = %57, %48
  %85 = phi %"class.spvtools::opt::Instruction"* [ %51, %48 ], [ %78, %57 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp ne i8 %87, 0
  %89 = icmp eq %"class.spvtools::opt::Instruction"* %85, null
  %90 = or i1 %89, %88
  br i1 %90, label %114, label %91

91:                                               ; preds = %84, %91
  %92 = phi %"class.spvtools::opt::Instruction"* [ %108, %91 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %92, i64 0, i32 0, i32 2
  %94 = bitcast %"class.spvtools::opt::Instruction"** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %92, i64 0, i32 0, i32 1
  %97 = bitcast %"class.spvtools::opt::Instruction"** %96 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %98 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %97, align 8
  %99 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %98, i64 0, i32 2
  %100 = bitcast %"class.spvtools::opt::Instruction"** %99 to i64*
  store i64 %95, i64* %100, align 8
  %101 = bitcast %"class.spvtools::opt::Instruction"** %96 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.spvtools::opt::Instruction"** %93 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %104 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %103, align 8
  %105 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %104, i64 0, i32 1
  %106 = bitcast %"class.spvtools::opt::Instruction"** %105 to i64*
  store i64 %102, i64* %106, align 8
  %107 = bitcast %"class.spvtools::opt::Instruction"** %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false) #10
  %108 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %108, i64 0, i32 0, i32 3
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp ne i8 %110, 0
  %112 = icmp eq %"class.spvtools::opt::Instruction"* %108, null
  %113 = or i1 %112, %111
  br i1 %113, label %114, label %91

114:                                              ; preds = %91, %84
  %115 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %115) #10
  %116 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  %118 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %118, i64 0, i32 0, i32 3
  %120 = load i8, i8* %119, align 8, !range !2
  %121 = icmp ne i8 %120, 0
  %122 = icmp eq %"class.spvtools::opt::Instruction"* %118, null
  %123 = or i1 %122, %121
  br i1 %123, label %151, label %124

124:                                              ; preds = %114, %124
  %125 = phi %"class.spvtools::opt::Instruction"* [ %145, %124 ], [ %118, %114 ]
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 0, i32 2
  %127 = bitcast %"class.spvtools::opt::Instruction"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 0, i32 1
  %130 = bitcast %"class.spvtools::opt::Instruction"** %129 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %131 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %130, align 8
  %132 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %131, i64 0, i32 2
  %133 = bitcast %"class.spvtools::opt::Instruction"** %132 to i64*
  store i64 %128, i64* %133, align 8
  %134 = bitcast %"class.spvtools::opt::Instruction"** %129 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.spvtools::opt::Instruction"** %126 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %137 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %136, align 8
  %138 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %137, i64 0, i32 1
  %139 = bitcast %"class.spvtools::opt::Instruction"** %138 to i64*
  store i64 %135, i64* %139, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %129 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 16, i1 false) #10
  %141 = bitcast %"class.spvtools::opt::Instruction"* %125 to void (%"class.spvtools::opt::Instruction"*)***
  %142 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %141, align 8
  %143 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %142, i64 1
  %144 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %143, align 8
  tail call void %144(%"class.spvtools::opt::Instruction"* nonnull %125) #10
  %145 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %117, align 8
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %145, i64 0, i32 0, i32 3
  %147 = load i8, i8* %146, align 8, !range !2
  %148 = icmp ne i8 %147, 0
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %145, null
  %150 = or i1 %149, %148
  br i1 %150, label %151, label %124

151:                                              ; preds = %124, %114
  %152 = phi %"class.spvtools::opt::Instruction"* [ %118, %114 ], [ %145, %124 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %152, i64 0, i32 0, i32 3
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp ne i8 %154, 0
  %156 = icmp eq %"class.spvtools::opt::Instruction"* %152, null
  %157 = or i1 %156, %155
  br i1 %157, label %181, label %158

158:                                              ; preds = %151, %158
  %159 = phi %"class.spvtools::opt::Instruction"* [ %175, %158 ], [ %152, %151 ]
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %159, i64 0, i32 0, i32 2
  %161 = bitcast %"class.spvtools::opt::Instruction"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %159, i64 0, i32 0, i32 1
  %164 = bitcast %"class.spvtools::opt::Instruction"** %163 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %165 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %164, align 8
  %166 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %165, i64 0, i32 2
  %167 = bitcast %"class.spvtools::opt::Instruction"** %166 to i64*
  store i64 %162, i64* %167, align 8
  %168 = bitcast %"class.spvtools::opt::Instruction"** %163 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.spvtools::opt::Instruction"** %160 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %171 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %170, align 8
  %172 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %171, i64 0, i32 1
  %173 = bitcast %"class.spvtools::opt::Instruction"** %172 to i64*
  store i64 %169, i64* %173, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %163 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 16, i1 false) #10
  %175 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %117, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %175, i64 0, i32 0, i32 3
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp ne i8 %177, 0
  %179 = icmp eq %"class.spvtools::opt::Instruction"* %175, null
  %180 = or i1 %179, %178
  br i1 %180, label %181, label %158

181:                                              ; preds = %158, %151
  %182 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %182) #10
  %183 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  %185 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %184, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %185, i64 0, i32 0, i32 3
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp ne i8 %187, 0
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %185, null
  %190 = or i1 %189, %188
  br i1 %190, label %218, label %191

191:                                              ; preds = %181, %191
  %192 = phi %"class.spvtools::opt::Instruction"* [ %212, %191 ], [ %185, %181 ]
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 0, i32 2
  %194 = bitcast %"class.spvtools::opt::Instruction"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %192, i64 0, i32 0, i32 1
  %197 = bitcast %"class.spvtools::opt::Instruction"** %196 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %198 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %197, align 8
  %199 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %198, i64 0, i32 2
  %200 = bitcast %"class.spvtools::opt::Instruction"** %199 to i64*
  store i64 %195, i64* %200, align 8
  %201 = bitcast %"class.spvtools::opt::Instruction"** %196 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.spvtools::opt::Instruction"** %193 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %204 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %203, align 8
  %205 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %204, i64 0, i32 1
  %206 = bitcast %"class.spvtools::opt::Instruction"** %205 to i64*
  store i64 %202, i64* %206, align 8
  %207 = bitcast %"class.spvtools::opt::Instruction"** %196 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 16, i1 false) #10
  %208 = bitcast %"class.spvtools::opt::Instruction"* %192 to void (%"class.spvtools::opt::Instruction"*)***
  %209 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %209, i64 1
  %211 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %210, align 8
  tail call void %211(%"class.spvtools::opt::Instruction"* nonnull %192) #10
  %212 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %184, align 8
  %213 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %212, i64 0, i32 0, i32 3
  %214 = load i8, i8* %213, align 8, !range !2
  %215 = icmp ne i8 %214, 0
  %216 = icmp eq %"class.spvtools::opt::Instruction"* %212, null
  %217 = or i1 %216, %215
  br i1 %217, label %218, label %191

218:                                              ; preds = %191, %181
  %219 = phi %"class.spvtools::opt::Instruction"* [ %185, %181 ], [ %212, %191 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %220 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %219, i64 0, i32 0, i32 3
  %221 = load i8, i8* %220, align 8, !range !2
  %222 = icmp ne i8 %221, 0
  %223 = icmp eq %"class.spvtools::opt::Instruction"* %219, null
  %224 = or i1 %223, %222
  br i1 %224, label %248, label %225

225:                                              ; preds = %218, %225
  %226 = phi %"class.spvtools::opt::Instruction"* [ %242, %225 ], [ %219, %218 ]
  %227 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %226, i64 0, i32 0, i32 2
  %228 = bitcast %"class.spvtools::opt::Instruction"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %226, i64 0, i32 0, i32 1
  %231 = bitcast %"class.spvtools::opt::Instruction"** %230 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %232 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %232, i64 0, i32 2
  %234 = bitcast %"class.spvtools::opt::Instruction"** %233 to i64*
  store i64 %229, i64* %234, align 8
  %235 = bitcast %"class.spvtools::opt::Instruction"** %230 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.spvtools::opt::Instruction"** %227 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %238 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %237, align 8
  %239 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %238, i64 0, i32 1
  %240 = bitcast %"class.spvtools::opt::Instruction"** %239 to i64*
  store i64 %236, i64* %240, align 8
  %241 = bitcast %"class.spvtools::opt::Instruction"** %230 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %241, i8 0, i64 16, i1 false) #10
  %242 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %184, align 8
  %243 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %242, i64 0, i32 0, i32 3
  %244 = load i8, i8* %243, align 8, !range !2
  %245 = icmp ne i8 %244, 0
  %246 = icmp eq %"class.spvtools::opt::Instruction"* %242, null
  %247 = or i1 %246, %245
  br i1 %247, label %248, label %225

248:                                              ; preds = %225, %218
  %249 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %249) #10
  %250 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  %251 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 1
  %252 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %251, align 8
  %253 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %252, i64 0, i32 0, i32 3
  %254 = load i8, i8* %253, align 8, !range !2
  %255 = icmp ne i8 %254, 0
  %256 = icmp eq %"class.spvtools::opt::Instruction"* %252, null
  %257 = or i1 %256, %255
  br i1 %257, label %285, label %258

258:                                              ; preds = %248, %258
  %259 = phi %"class.spvtools::opt::Instruction"* [ %279, %258 ], [ %252, %248 ]
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %259, i64 0, i32 0, i32 2
  %261 = bitcast %"class.spvtools::opt::Instruction"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %259, i64 0, i32 0, i32 1
  %264 = bitcast %"class.spvtools::opt::Instruction"** %263 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %265 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %265, i64 0, i32 2
  %267 = bitcast %"class.spvtools::opt::Instruction"** %266 to i64*
  store i64 %262, i64* %267, align 8
  %268 = bitcast %"class.spvtools::opt::Instruction"** %263 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.spvtools::opt::Instruction"** %260 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %271 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %270, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %271, i64 0, i32 1
  %273 = bitcast %"class.spvtools::opt::Instruction"** %272 to i64*
  store i64 %269, i64* %273, align 8
  %274 = bitcast %"class.spvtools::opt::Instruction"** %263 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 16, i1 false) #10
  %275 = bitcast %"class.spvtools::opt::Instruction"* %259 to void (%"class.spvtools::opt::Instruction"*)***
  %276 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %275, align 8
  %277 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %276, i64 1
  %278 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %277, align 8
  tail call void %278(%"class.spvtools::opt::Instruction"* nonnull %259) #10
  %279 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %251, align 8
  %280 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %279, i64 0, i32 0, i32 3
  %281 = load i8, i8* %280, align 8, !range !2
  %282 = icmp ne i8 %281, 0
  %283 = icmp eq %"class.spvtools::opt::Instruction"* %279, null
  %284 = or i1 %283, %282
  br i1 %284, label %285, label %258

285:                                              ; preds = %258, %248
  %286 = phi %"class.spvtools::opt::Instruction"* [ %252, %248 ], [ %279, %258 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %286, i64 0, i32 0, i32 3
  %288 = load i8, i8* %287, align 8, !range !2
  %289 = icmp ne i8 %288, 0
  %290 = icmp eq %"class.spvtools::opt::Instruction"* %286, null
  %291 = or i1 %290, %289
  br i1 %291, label %315, label %292

292:                                              ; preds = %285, %292
  %293 = phi %"class.spvtools::opt::Instruction"* [ %309, %292 ], [ %286, %285 ]
  %294 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %293, i64 0, i32 0, i32 2
  %295 = bitcast %"class.spvtools::opt::Instruction"** %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %293, i64 0, i32 0, i32 1
  %298 = bitcast %"class.spvtools::opt::Instruction"** %297 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %299 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %298, align 8
  %300 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %299, i64 0, i32 2
  %301 = bitcast %"class.spvtools::opt::Instruction"** %300 to i64*
  store i64 %296, i64* %301, align 8
  %302 = bitcast %"class.spvtools::opt::Instruction"** %297 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.spvtools::opt::Instruction"** %294 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %305 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %304, align 8
  %306 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %305, i64 0, i32 1
  %307 = bitcast %"class.spvtools::opt::Instruction"** %306 to i64*
  store i64 %303, i64* %307, align 8
  %308 = bitcast %"class.spvtools::opt::Instruction"** %297 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %308, i8 0, i64 16, i1 false) #10
  %309 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %251, align 8
  %310 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %309, i64 0, i32 0, i32 3
  %311 = load i8, i8* %310, align 8, !range !2
  %312 = icmp ne i8 %311, 0
  %313 = icmp eq %"class.spvtools::opt::Instruction"* %309, null
  %314 = or i1 %313, %312
  br i1 %314, label %315, label %292

315:                                              ; preds = %292, %285
  %316 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %316) #10
  %317 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %318 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 1
  %319 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %318, align 8
  %320 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %319, i64 0, i32 0, i32 3
  %321 = load i8, i8* %320, align 8, !range !2
  %322 = icmp ne i8 %321, 0
  %323 = icmp eq %"class.spvtools::opt::Instruction"* %319, null
  %324 = or i1 %323, %322
  br i1 %324, label %352, label %325

325:                                              ; preds = %315, %325
  %326 = phi %"class.spvtools::opt::Instruction"* [ %346, %325 ], [ %319, %315 ]
  %327 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %326, i64 0, i32 0, i32 2
  %328 = bitcast %"class.spvtools::opt::Instruction"** %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %326, i64 0, i32 0, i32 1
  %331 = bitcast %"class.spvtools::opt::Instruction"** %330 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %332 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %331, align 8
  %333 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %332, i64 0, i32 2
  %334 = bitcast %"class.spvtools::opt::Instruction"** %333 to i64*
  store i64 %329, i64* %334, align 8
  %335 = bitcast %"class.spvtools::opt::Instruction"** %330 to i64*
  %336 = load i64, i64* %335, align 8
  %337 = bitcast %"class.spvtools::opt::Instruction"** %327 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %338 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %337, align 8
  %339 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %338, i64 0, i32 1
  %340 = bitcast %"class.spvtools::opt::Instruction"** %339 to i64*
  store i64 %336, i64* %340, align 8
  %341 = bitcast %"class.spvtools::opt::Instruction"** %330 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 16, i1 false) #10
  %342 = bitcast %"class.spvtools::opt::Instruction"* %326 to void (%"class.spvtools::opt::Instruction"*)***
  %343 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %342, align 8
  %344 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %343, i64 1
  %345 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %344, align 8
  tail call void %345(%"class.spvtools::opt::Instruction"* nonnull %326) #10
  %346 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %318, align 8
  %347 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %346, i64 0, i32 0, i32 3
  %348 = load i8, i8* %347, align 8, !range !2
  %349 = icmp ne i8 %348, 0
  %350 = icmp eq %"class.spvtools::opt::Instruction"* %346, null
  %351 = or i1 %350, %349
  br i1 %351, label %352, label %325

352:                                              ; preds = %325, %315
  %353 = phi %"class.spvtools::opt::Instruction"* [ %319, %315 ], [ %346, %325 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %317, align 8
  %354 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %353, i64 0, i32 0, i32 3
  %355 = load i8, i8* %354, align 8, !range !2
  %356 = icmp ne i8 %355, 0
  %357 = icmp eq %"class.spvtools::opt::Instruction"* %353, null
  %358 = or i1 %357, %356
  br i1 %358, label %382, label %359

359:                                              ; preds = %352, %359
  %360 = phi %"class.spvtools::opt::Instruction"* [ %376, %359 ], [ %353, %352 ]
  %361 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %360, i64 0, i32 0, i32 2
  %362 = bitcast %"class.spvtools::opt::Instruction"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %360, i64 0, i32 0, i32 1
  %365 = bitcast %"class.spvtools::opt::Instruction"** %364 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %366 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %365, align 8
  %367 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %366, i64 0, i32 2
  %368 = bitcast %"class.spvtools::opt::Instruction"** %367 to i64*
  store i64 %363, i64* %368, align 8
  %369 = bitcast %"class.spvtools::opt::Instruction"** %364 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast %"class.spvtools::opt::Instruction"** %361 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %372 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %371, align 8
  %373 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %372, i64 0, i32 1
  %374 = bitcast %"class.spvtools::opt::Instruction"** %373 to i64*
  store i64 %370, i64* %374, align 8
  %375 = bitcast %"class.spvtools::opt::Instruction"** %364 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %375, i8 0, i64 16, i1 false) #10
  %376 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %318, align 8
  %377 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %376, i64 0, i32 0, i32 3
  %378 = load i8, i8* %377, align 8, !range !2
  %379 = icmp ne i8 %378, 0
  %380 = icmp eq %"class.spvtools::opt::Instruction"* %376, null
  %381 = or i1 %380, %379
  br i1 %381, label %382, label %359

382:                                              ; preds = %359, %352
  %383 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %383) #10
  %384 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %384, align 8
  %385 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 1
  %386 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %385, align 8
  %387 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %386, i64 0, i32 0, i32 3
  %388 = load i8, i8* %387, align 8, !range !2
  %389 = icmp ne i8 %388, 0
  %390 = icmp eq %"class.spvtools::opt::Instruction"* %386, null
  %391 = or i1 %390, %389
  br i1 %391, label %419, label %392

392:                                              ; preds = %382, %392
  %393 = phi %"class.spvtools::opt::Instruction"* [ %413, %392 ], [ %386, %382 ]
  %394 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %393, i64 0, i32 0, i32 2
  %395 = bitcast %"class.spvtools::opt::Instruction"** %394 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %393, i64 0, i32 0, i32 1
  %398 = bitcast %"class.spvtools::opt::Instruction"** %397 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %399 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %398, align 8
  %400 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %399, i64 0, i32 2
  %401 = bitcast %"class.spvtools::opt::Instruction"** %400 to i64*
  store i64 %396, i64* %401, align 8
  %402 = bitcast %"class.spvtools::opt::Instruction"** %397 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = bitcast %"class.spvtools::opt::Instruction"** %394 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %405 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %404, align 8
  %406 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %405, i64 0, i32 1
  %407 = bitcast %"class.spvtools::opt::Instruction"** %406 to i64*
  store i64 %403, i64* %407, align 8
  %408 = bitcast %"class.spvtools::opt::Instruction"** %397 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %408, i8 0, i64 16, i1 false) #10
  %409 = bitcast %"class.spvtools::opt::Instruction"* %393 to void (%"class.spvtools::opt::Instruction"*)***
  %410 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %409, align 8
  %411 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %410, i64 1
  %412 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %411, align 8
  tail call void %412(%"class.spvtools::opt::Instruction"* nonnull %393) #10
  %413 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %385, align 8
  %414 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %413, i64 0, i32 0, i32 3
  %415 = load i8, i8* %414, align 8, !range !2
  %416 = icmp ne i8 %415, 0
  %417 = icmp eq %"class.spvtools::opt::Instruction"* %413, null
  %418 = or i1 %417, %416
  br i1 %418, label %419, label %392

419:                                              ; preds = %392, %382
  %420 = phi %"class.spvtools::opt::Instruction"* [ %386, %382 ], [ %413, %392 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %384, align 8
  %421 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %420, i64 0, i32 0, i32 3
  %422 = load i8, i8* %421, align 8, !range !2
  %423 = icmp ne i8 %422, 0
  %424 = icmp eq %"class.spvtools::opt::Instruction"* %420, null
  %425 = or i1 %424, %423
  br i1 %425, label %449, label %426

426:                                              ; preds = %419, %426
  %427 = phi %"class.spvtools::opt::Instruction"* [ %443, %426 ], [ %420, %419 ]
  %428 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %427, i64 0, i32 0, i32 2
  %429 = bitcast %"class.spvtools::opt::Instruction"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  %431 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %427, i64 0, i32 0, i32 1
  %432 = bitcast %"class.spvtools::opt::Instruction"** %431 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %433 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %432, align 8
  %434 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %433, i64 0, i32 2
  %435 = bitcast %"class.spvtools::opt::Instruction"** %434 to i64*
  store i64 %430, i64* %435, align 8
  %436 = bitcast %"class.spvtools::opt::Instruction"** %431 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = bitcast %"class.spvtools::opt::Instruction"** %428 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %439 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %438, align 8
  %440 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %439, i64 0, i32 1
  %441 = bitcast %"class.spvtools::opt::Instruction"** %440 to i64*
  store i64 %437, i64* %441, align 8
  %442 = bitcast %"class.spvtools::opt::Instruction"** %431 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %442, i8 0, i64 16, i1 false) #10
  %443 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %385, align 8
  %444 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %443, i64 0, i32 0, i32 3
  %445 = load i8, i8* %444, align 8, !range !2
  %446 = icmp ne i8 %445, 0
  %447 = icmp eq %"class.spvtools::opt::Instruction"* %443, null
  %448 = or i1 %447, %446
  br i1 %448, label %449, label %426

449:                                              ; preds = %426, %419
  %450 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %450) #10
  %451 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %451, align 8
  %452 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 1
  %453 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %452, align 8
  %454 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %453, i64 0, i32 0, i32 3
  %455 = load i8, i8* %454, align 8, !range !2
  %456 = icmp ne i8 %455, 0
  %457 = icmp eq %"class.spvtools::opt::Instruction"* %453, null
  %458 = or i1 %457, %456
  br i1 %458, label %486, label %459

459:                                              ; preds = %449, %459
  %460 = phi %"class.spvtools::opt::Instruction"* [ %480, %459 ], [ %453, %449 ]
  %461 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %460, i64 0, i32 0, i32 2
  %462 = bitcast %"class.spvtools::opt::Instruction"** %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %460, i64 0, i32 0, i32 1
  %465 = bitcast %"class.spvtools::opt::Instruction"** %464 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %466 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %465, align 8
  %467 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %466, i64 0, i32 2
  %468 = bitcast %"class.spvtools::opt::Instruction"** %467 to i64*
  store i64 %463, i64* %468, align 8
  %469 = bitcast %"class.spvtools::opt::Instruction"** %464 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.spvtools::opt::Instruction"** %461 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %472 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %471, align 8
  %473 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %472, i64 0, i32 1
  %474 = bitcast %"class.spvtools::opt::Instruction"** %473 to i64*
  store i64 %470, i64* %474, align 8
  %475 = bitcast %"class.spvtools::opt::Instruction"** %464 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %475, i8 0, i64 16, i1 false) #10
  %476 = bitcast %"class.spvtools::opt::Instruction"* %460 to void (%"class.spvtools::opt::Instruction"*)***
  %477 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %477, i64 1
  %479 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %478, align 8
  tail call void %479(%"class.spvtools::opt::Instruction"* nonnull %460) #10
  %480 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %452, align 8
  %481 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %480, i64 0, i32 0, i32 3
  %482 = load i8, i8* %481, align 8, !range !2
  %483 = icmp ne i8 %482, 0
  %484 = icmp eq %"class.spvtools::opt::Instruction"* %480, null
  %485 = or i1 %484, %483
  br i1 %485, label %486, label %459

486:                                              ; preds = %459, %449
  %487 = phi %"class.spvtools::opt::Instruction"* [ %453, %449 ], [ %480, %459 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %451, align 8
  %488 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %487, i64 0, i32 0, i32 3
  %489 = load i8, i8* %488, align 8, !range !2
  %490 = icmp ne i8 %489, 0
  %491 = icmp eq %"class.spvtools::opt::Instruction"* %487, null
  %492 = or i1 %491, %490
  br i1 %492, label %516, label %493

493:                                              ; preds = %486, %493
  %494 = phi %"class.spvtools::opt::Instruction"* [ %510, %493 ], [ %487, %486 ]
  %495 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %494, i64 0, i32 0, i32 2
  %496 = bitcast %"class.spvtools::opt::Instruction"** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %494, i64 0, i32 0, i32 1
  %499 = bitcast %"class.spvtools::opt::Instruction"** %498 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %500 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %499, align 8
  %501 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %500, i64 0, i32 2
  %502 = bitcast %"class.spvtools::opt::Instruction"** %501 to i64*
  store i64 %497, i64* %502, align 8
  %503 = bitcast %"class.spvtools::opt::Instruction"** %498 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.spvtools::opt::Instruction"** %495 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %506 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %505, align 8
  %507 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %506, i64 0, i32 1
  %508 = bitcast %"class.spvtools::opt::Instruction"** %507 to i64*
  store i64 %504, i64* %508, align 8
  %509 = bitcast %"class.spvtools::opt::Instruction"** %498 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %509, i8 0, i64 16, i1 false) #10
  %510 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %452, align 8
  %511 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %510, i64 0, i32 0, i32 3
  %512 = load i8, i8* %511, align 8, !range !2
  %513 = icmp ne i8 %512, 0
  %514 = icmp eq %"class.spvtools::opt::Instruction"* %510, null
  %515 = or i1 %514, %513
  br i1 %515, label %516, label %493

516:                                              ; preds = %493, %486
  %517 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %517) #10
  %518 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %518, align 8
  %519 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %520 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %519, align 8
  %521 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %520, i64 0, i32 0, i32 3
  %522 = load i8, i8* %521, align 8, !range !2
  %523 = icmp ne i8 %522, 0
  %524 = icmp eq %"class.spvtools::opt::Instruction"* %520, null
  %525 = or i1 %524, %523
  br i1 %525, label %553, label %526

526:                                              ; preds = %516, %526
  %527 = phi %"class.spvtools::opt::Instruction"* [ %547, %526 ], [ %520, %516 ]
  %528 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %527, i64 0, i32 0, i32 2
  %529 = bitcast %"class.spvtools::opt::Instruction"** %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %527, i64 0, i32 0, i32 1
  %532 = bitcast %"class.spvtools::opt::Instruction"** %531 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %533 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %532, align 8
  %534 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %533, i64 0, i32 2
  %535 = bitcast %"class.spvtools::opt::Instruction"** %534 to i64*
  store i64 %530, i64* %535, align 8
  %536 = bitcast %"class.spvtools::opt::Instruction"** %531 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::opt::Instruction"** %528 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %539 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %538, align 8
  %540 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %539, i64 0, i32 1
  %541 = bitcast %"class.spvtools::opt::Instruction"** %540 to i64*
  store i64 %537, i64* %541, align 8
  %542 = bitcast %"class.spvtools::opt::Instruction"** %531 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %542, i8 0, i64 16, i1 false) #10
  %543 = bitcast %"class.spvtools::opt::Instruction"* %527 to void (%"class.spvtools::opt::Instruction"*)***
  %544 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %543, align 8
  %545 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %544, i64 1
  %546 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %545, align 8
  tail call void %546(%"class.spvtools::opt::Instruction"* nonnull %527) #10
  %547 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %519, align 8
  %548 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %547, i64 0, i32 0, i32 3
  %549 = load i8, i8* %548, align 8, !range !2
  %550 = icmp ne i8 %549, 0
  %551 = icmp eq %"class.spvtools::opt::Instruction"* %547, null
  %552 = or i1 %551, %550
  br i1 %552, label %553, label %526

553:                                              ; preds = %526, %516
  %554 = phi %"class.spvtools::opt::Instruction"* [ %520, %516 ], [ %547, %526 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %518, align 8
  %555 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %554, i64 0, i32 0, i32 3
  %556 = load i8, i8* %555, align 8, !range !2
  %557 = icmp ne i8 %556, 0
  %558 = icmp eq %"class.spvtools::opt::Instruction"* %554, null
  %559 = or i1 %558, %557
  br i1 %559, label %583, label %560

560:                                              ; preds = %553, %560
  %561 = phi %"class.spvtools::opt::Instruction"* [ %577, %560 ], [ %554, %553 ]
  %562 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %561, i64 0, i32 0, i32 2
  %563 = bitcast %"class.spvtools::opt::Instruction"** %562 to i64*
  %564 = load i64, i64* %563, align 8
  %565 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %561, i64 0, i32 0, i32 1
  %566 = bitcast %"class.spvtools::opt::Instruction"** %565 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %567 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %566, align 8
  %568 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %567, i64 0, i32 2
  %569 = bitcast %"class.spvtools::opt::Instruction"** %568 to i64*
  store i64 %564, i64* %569, align 8
  %570 = bitcast %"class.spvtools::opt::Instruction"** %565 to i64*
  %571 = load i64, i64* %570, align 8
  %572 = bitcast %"class.spvtools::opt::Instruction"** %562 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %573 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %572, align 8
  %574 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %573, i64 0, i32 1
  %575 = bitcast %"class.spvtools::opt::Instruction"** %574 to i64*
  store i64 %571, i64* %575, align 8
  %576 = bitcast %"class.spvtools::opt::Instruction"** %565 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %576, i8 0, i64 16, i1 false) #10
  %577 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %519, align 8
  %578 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %577, i64 0, i32 0, i32 3
  %579 = load i8, i8* %578, align 8, !range !2
  %580 = icmp ne i8 %579, 0
  %581 = icmp eq %"class.spvtools::opt::Instruction"* %577, null
  %582 = or i1 %581, %580
  br i1 %582, label %583, label %560

583:                                              ; preds = %560, %553
  %584 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %584) #10
  %585 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %586 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %585, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %585, align 8
  %587 = icmp eq %"class.spvtools::opt::Instruction"* %586, null
  br i1 %587, label %593, label %588

588:                                              ; preds = %583
  %589 = bitcast %"class.spvtools::opt::Instruction"* %586 to void (%"class.spvtools::opt::Instruction"*)***
  %590 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %589, align 8
  %591 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %590, i64 1
  %592 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %591, align 8
  tail call void %592(%"class.spvtools::opt::Instruction"* nonnull %586) #10
  br label %593

593:                                              ; preds = %583, %588
  %594 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %594, align 8
  %595 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  %596 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %595, align 8
  %597 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %596, i64 0, i32 0, i32 3
  %598 = load i8, i8* %597, align 8, !range !2
  %599 = icmp ne i8 %598, 0
  %600 = icmp eq %"class.spvtools::opt::Instruction"* %596, null
  %601 = or i1 %600, %599
  br i1 %601, label %629, label %602

602:                                              ; preds = %593, %602
  %603 = phi %"class.spvtools::opt::Instruction"* [ %623, %602 ], [ %596, %593 ]
  %604 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 0, i32 2
  %605 = bitcast %"class.spvtools::opt::Instruction"** %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %603, i64 0, i32 0, i32 1
  %608 = bitcast %"class.spvtools::opt::Instruction"** %607 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %609 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %608, align 8
  %610 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %609, i64 0, i32 2
  %611 = bitcast %"class.spvtools::opt::Instruction"** %610 to i64*
  store i64 %606, i64* %611, align 8
  %612 = bitcast %"class.spvtools::opt::Instruction"** %607 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = bitcast %"class.spvtools::opt::Instruction"** %604 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %615 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %614, align 8
  %616 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %615, i64 0, i32 1
  %617 = bitcast %"class.spvtools::opt::Instruction"** %616 to i64*
  store i64 %613, i64* %617, align 8
  %618 = bitcast %"class.spvtools::opt::Instruction"** %607 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %618, i8 0, i64 16, i1 false) #10
  %619 = bitcast %"class.spvtools::opt::Instruction"* %603 to void (%"class.spvtools::opt::Instruction"*)***
  %620 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %619, align 8
  %621 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %620, i64 1
  %622 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %621, align 8
  tail call void %622(%"class.spvtools::opt::Instruction"* nonnull %603) #10
  %623 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %595, align 8
  %624 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %623, i64 0, i32 0, i32 3
  %625 = load i8, i8* %624, align 8, !range !2
  %626 = icmp ne i8 %625, 0
  %627 = icmp eq %"class.spvtools::opt::Instruction"* %623, null
  %628 = or i1 %627, %626
  br i1 %628, label %629, label %602

629:                                              ; preds = %602, %593
  %630 = phi %"class.spvtools::opt::Instruction"* [ %596, %593 ], [ %623, %602 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %594, align 8
  %631 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %630, i64 0, i32 0, i32 3
  %632 = load i8, i8* %631, align 8, !range !2
  %633 = icmp ne i8 %632, 0
  %634 = icmp eq %"class.spvtools::opt::Instruction"* %630, null
  %635 = or i1 %634, %633
  br i1 %635, label %659, label %636

636:                                              ; preds = %629, %636
  %637 = phi %"class.spvtools::opt::Instruction"* [ %653, %636 ], [ %630, %629 ]
  %638 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %637, i64 0, i32 0, i32 2
  %639 = bitcast %"class.spvtools::opt::Instruction"** %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %637, i64 0, i32 0, i32 1
  %642 = bitcast %"class.spvtools::opt::Instruction"** %641 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %643 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %642, align 8
  %644 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %643, i64 0, i32 2
  %645 = bitcast %"class.spvtools::opt::Instruction"** %644 to i64*
  store i64 %640, i64* %645, align 8
  %646 = bitcast %"class.spvtools::opt::Instruction"** %641 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = bitcast %"class.spvtools::opt::Instruction"** %638 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %649 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %648, align 8
  %650 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %649, i64 0, i32 1
  %651 = bitcast %"class.spvtools::opt::Instruction"** %650 to i64*
  store i64 %647, i64* %651, align 8
  %652 = bitcast %"class.spvtools::opt::Instruction"** %641 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %652, i8 0, i64 16, i1 false) #10
  %653 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %595, align 8
  %654 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %653, i64 0, i32 0, i32 3
  %655 = load i8, i8* %654, align 8, !range !2
  %656 = icmp ne i8 %655, 0
  %657 = icmp eq %"class.spvtools::opt::Instruction"* %653, null
  %658 = or i1 %657, %656
  br i1 %658, label %659, label %636

659:                                              ; preds = %636, %629
  %660 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %660) #10
  %661 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %661, align 8
  %662 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %663 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %662, align 8
  %664 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %663, i64 0, i32 0, i32 3
  %665 = load i8, i8* %664, align 8, !range !2
  %666 = icmp ne i8 %665, 0
  %667 = icmp eq %"class.spvtools::opt::Instruction"* %663, null
  %668 = or i1 %667, %666
  br i1 %668, label %696, label %669

669:                                              ; preds = %659, %669
  %670 = phi %"class.spvtools::opt::Instruction"* [ %690, %669 ], [ %663, %659 ]
  %671 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %670, i64 0, i32 0, i32 2
  %672 = bitcast %"class.spvtools::opt::Instruction"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %670, i64 0, i32 0, i32 1
  %675 = bitcast %"class.spvtools::opt::Instruction"** %674 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %676 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %675, align 8
  %677 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %676, i64 0, i32 2
  %678 = bitcast %"class.spvtools::opt::Instruction"** %677 to i64*
  store i64 %673, i64* %678, align 8
  %679 = bitcast %"class.spvtools::opt::Instruction"** %674 to i64*
  %680 = load i64, i64* %679, align 8
  %681 = bitcast %"class.spvtools::opt::Instruction"** %671 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %682 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %681, align 8
  %683 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %682, i64 0, i32 1
  %684 = bitcast %"class.spvtools::opt::Instruction"** %683 to i64*
  store i64 %680, i64* %684, align 8
  %685 = bitcast %"class.spvtools::opt::Instruction"** %674 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %685, i8 0, i64 16, i1 false) #10
  %686 = bitcast %"class.spvtools::opt::Instruction"* %670 to void (%"class.spvtools::opt::Instruction"*)***
  %687 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %686, align 8
  %688 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %687, i64 1
  %689 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %688, align 8
  tail call void %689(%"class.spvtools::opt::Instruction"* nonnull %670) #10
  %690 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %662, align 8
  %691 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %690, i64 0, i32 0, i32 3
  %692 = load i8, i8* %691, align 8, !range !2
  %693 = icmp ne i8 %692, 0
  %694 = icmp eq %"class.spvtools::opt::Instruction"* %690, null
  %695 = or i1 %694, %693
  br i1 %695, label %696, label %669

696:                                              ; preds = %669, %659
  %697 = phi %"class.spvtools::opt::Instruction"* [ %663, %659 ], [ %690, %669 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %661, align 8
  %698 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %697, i64 0, i32 0, i32 3
  %699 = load i8, i8* %698, align 8, !range !2
  %700 = icmp ne i8 %699, 0
  %701 = icmp eq %"class.spvtools::opt::Instruction"* %697, null
  %702 = or i1 %701, %700
  br i1 %702, label %726, label %703

703:                                              ; preds = %696, %703
  %704 = phi %"class.spvtools::opt::Instruction"* [ %720, %703 ], [ %697, %696 ]
  %705 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %704, i64 0, i32 0, i32 2
  %706 = bitcast %"class.spvtools::opt::Instruction"** %705 to i64*
  %707 = load i64, i64* %706, align 8
  %708 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %704, i64 0, i32 0, i32 1
  %709 = bitcast %"class.spvtools::opt::Instruction"** %708 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %710 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %709, align 8
  %711 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %710, i64 0, i32 2
  %712 = bitcast %"class.spvtools::opt::Instruction"** %711 to i64*
  store i64 %707, i64* %712, align 8
  %713 = bitcast %"class.spvtools::opt::Instruction"** %708 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = bitcast %"class.spvtools::opt::Instruction"** %705 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %716 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %715, align 8
  %717 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %716, i64 0, i32 1
  %718 = bitcast %"class.spvtools::opt::Instruction"** %717 to i64*
  store i64 %714, i64* %718, align 8
  %719 = bitcast %"class.spvtools::opt::Instruction"** %708 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %719, i8 0, i64 16, i1 false) #10
  %720 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %662, align 8
  %721 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %720, i64 0, i32 0, i32 3
  %722 = load i8, i8* %721, align 8, !range !2
  %723 = icmp ne i8 %722, 0
  %724 = icmp eq %"class.spvtools::opt::Instruction"* %720, null
  %725 = or i1 %724, %723
  br i1 %725, label %726, label %703

726:                                              ; preds = %703, %696
  %727 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %727) #10
  %728 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %728, align 8
  %729 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %730 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %729, align 8
  %731 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %730, i64 0, i32 0, i32 3
  %732 = load i8, i8* %731, align 8, !range !2
  %733 = icmp ne i8 %732, 0
  %734 = icmp eq %"class.spvtools::opt::Instruction"* %730, null
  %735 = or i1 %734, %733
  br i1 %735, label %763, label %736

736:                                              ; preds = %726, %736
  %737 = phi %"class.spvtools::opt::Instruction"* [ %757, %736 ], [ %730, %726 ]
  %738 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %737, i64 0, i32 0, i32 2
  %739 = bitcast %"class.spvtools::opt::Instruction"** %738 to i64*
  %740 = load i64, i64* %739, align 8
  %741 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %737, i64 0, i32 0, i32 1
  %742 = bitcast %"class.spvtools::opt::Instruction"** %741 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %743 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %742, align 8
  %744 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %743, i64 0, i32 2
  %745 = bitcast %"class.spvtools::opt::Instruction"** %744 to i64*
  store i64 %740, i64* %745, align 8
  %746 = bitcast %"class.spvtools::opt::Instruction"** %741 to i64*
  %747 = load i64, i64* %746, align 8
  %748 = bitcast %"class.spvtools::opt::Instruction"** %738 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %749 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %748, align 8
  %750 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %749, i64 0, i32 1
  %751 = bitcast %"class.spvtools::opt::Instruction"** %750 to i64*
  store i64 %747, i64* %751, align 8
  %752 = bitcast %"class.spvtools::opt::Instruction"** %741 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %752, i8 0, i64 16, i1 false) #10
  %753 = bitcast %"class.spvtools::opt::Instruction"* %737 to void (%"class.spvtools::opt::Instruction"*)***
  %754 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %753, align 8
  %755 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %754, i64 1
  %756 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %755, align 8
  tail call void %756(%"class.spvtools::opt::Instruction"* nonnull %737) #10
  %757 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %729, align 8
  %758 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %757, i64 0, i32 0, i32 3
  %759 = load i8, i8* %758, align 8, !range !2
  %760 = icmp ne i8 %759, 0
  %761 = icmp eq %"class.spvtools::opt::Instruction"* %757, null
  %762 = or i1 %761, %760
  br i1 %762, label %763, label %736

763:                                              ; preds = %736, %726
  %764 = phi %"class.spvtools::opt::Instruction"* [ %730, %726 ], [ %757, %736 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %728, align 8
  %765 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %764, i64 0, i32 0, i32 3
  %766 = load i8, i8* %765, align 8, !range !2
  %767 = icmp ne i8 %766, 0
  %768 = icmp eq %"class.spvtools::opt::Instruction"* %764, null
  %769 = or i1 %768, %767
  br i1 %769, label %793, label %770

770:                                              ; preds = %763, %770
  %771 = phi %"class.spvtools::opt::Instruction"* [ %787, %770 ], [ %764, %763 ]
  %772 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %771, i64 0, i32 0, i32 2
  %773 = bitcast %"class.spvtools::opt::Instruction"** %772 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %771, i64 0, i32 0, i32 1
  %776 = bitcast %"class.spvtools::opt::Instruction"** %775 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %777 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %776, align 8
  %778 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %777, i64 0, i32 2
  %779 = bitcast %"class.spvtools::opt::Instruction"** %778 to i64*
  store i64 %774, i64* %779, align 8
  %780 = bitcast %"class.spvtools::opt::Instruction"** %775 to i64*
  %781 = load i64, i64* %780, align 8
  %782 = bitcast %"class.spvtools::opt::Instruction"** %772 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %783 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %782, align 8
  %784 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %783, i64 0, i32 1
  %785 = bitcast %"class.spvtools::opt::Instruction"** %784 to i64*
  store i64 %781, i64* %785, align 8
  %786 = bitcast %"class.spvtools::opt::Instruction"** %775 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %786, i8 0, i64 16, i1 false) #10
  %787 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %729, align 8
  %788 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %787, i64 0, i32 0, i32 3
  %789 = load i8, i8* %788, align 8, !range !2
  %790 = icmp ne i8 %789, 0
  %791 = icmp eq %"class.spvtools::opt::Instruction"* %787, null
  %792 = or i1 %791, %790
  br i1 %792, label %793, label %770

793:                                              ; preds = %770, %763
  %794 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %794) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContextC2E14spv_target_envNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEE(%"class.spvtools::opt::IRContext"*, i32, %"class.std::__1::function"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::function", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 0
  %6 = tail call %struct.spv_context_t* @spvContextCreate(i32 %1) #10
  store %struct.spv_context_t* %6, %struct.spv_context_t** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %struct.spv_context_t, %struct.spv_context_t* %6, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 1, i32 1
  %11 = getelementptr inbounds %struct.spv_context_t, %struct.spv_context_t* %6, i64 0, i32 2
  %12 = bitcast %struct.spv_operand_table_t** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.spv_operand_table_t** %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 1, i32 2
  %16 = getelementptr inbounds %struct.spv_context_t, %struct.spv_context_t* %6, i64 0, i32 1
  %17 = bitcast %struct.spv_opcode_table_t** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %struct.spv_opcode_table_t** %15 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 1, i32 3
  %21 = getelementptr inbounds %struct.spv_context_t, %struct.spv_context_t* %6, i64 0, i32 3
  %22 = bitcast %struct.spv_ext_inst_table_t** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %struct.spv_ext_inst_table_t** %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4
  %27 = tail call i8* @_Znwm(i64 1416) #11
  %28 = bitcast i8* %27 to %"class.spvtools::opt::Module"*
  tail call void @_ZN8spvtools3opt6ModuleC2Ev(%"class.spvtools::opt::Module"* nonnull %28)
  %29 = ptrtoint i8* %27 to i64
  %30 = bitcast %"class.std::__1::unique_ptr.0"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 5
  %32 = bitcast %"class.std::__1::function"* %31 to i8*
  %33 = bitcast %"class.std::__1::function"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #10
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 5, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 1
  %36 = bitcast %"struct.std::__1::__function::__policy_invoker"* %35 to i64*
  %37 = bitcast %"struct.std::__1::__function::__policy_invoker"* %34 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 5, i32 0, i32 2
  %40 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %2, i64 0, i32 0, i32 2
  %41 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  store %"struct.std::__1::__function::__policy"* %41, %"struct.std::__1::__function::__policy"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %41, i64 0, i32 1
  %43 = load void (i8*)*, void (i8*)** %42, align 8
  %44 = icmp eq void (i8*)* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %3
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %40, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* @_ZNSt3__110__function16__policy_invokerIFv19spv_message_level_tPKcRK14spv_position_tS4_EE12__call_emptyEPKNS0_16__policy_storageES2_S4_S7_S4_ to i64), i64* %36, align 8
  %46 = load i64, i64* %37, align 8
  %47 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  br label %48

48:                                               ; preds = %3, %45
  %49 = phi %"struct.std::__1::__function::__policy"* [ %41, %3 ], [ %47, %45 ]
  %50 = phi i64 [ %38, %3 ], [ %46, %45 ]
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 3
  %53 = bitcast %"class.std::__1::__compressed_pair.198"* %52 to i32*
  %54 = bitcast %"class.std::__1::unique_ptr.65"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %53, align 4
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 10
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 10, i32 0, i32 3
  %57 = bitcast %"class.std::__1::__compressed_pair.224"* %56 to i32*
  %58 = bitcast %"class.std::__1::unordered_map.204"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %57, align 4
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0, i32 3
  %62 = bitcast %"class.std::__1::__compressed_pair.248"* %61 to i32*
  %63 = bitcast %"class.std::__1::unordered_map.228"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %62, align 4
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 14
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 14, i32 0, i32 3
  %66 = bitcast %"class.std::__1::__compressed_pair.272"* %65 to i32*
  %67 = bitcast %"class.std::__1::unordered_map.252"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %66, align 4
  %68 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15
  %69 = bitcast %"class.std::__1::unique_ptr.276"* %68 to i64*
  store i64 0, i64* %69, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 16, i32 0, i32 0
  %73 = bitcast %"class.std::__1::__tree_node_base"** %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 17, i32 0, i32 0
  %77 = bitcast %"class.std::__1::__tree_node_base"** %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 18
  %79 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 18, i32 0, i32 3
  %80 = bitcast %"class.std::__1::__compressed_pair.398"* %79 to i32*
  %81 = bitcast %"class.std::__1::unordered_map.376"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 32, i1 false) #10
  store i32 1065353216, i32* %80, align 4
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 19
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 28
  %84 = bitcast %"class.std::__1::unique_ptr.403"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 72, i1 false)
  store i32 4194303, i32* %83, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 29
  store i8 0, i8* %85, align 4
  %86 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 30
  store i8 0, i8* %86, align 1
  %87 = load %struct.spv_context_t*, %struct.spv_context_t** %5, align 8
  %88 = bitcast %"class.std::__1::function"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %32, i64 16, i1 false) #10
  %89 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1
  %90 = bitcast %"struct.std::__1::__function::__policy_invoker"* %89 to i64*
  store i64 %50, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  store %"struct.std::__1::__function::__policy"* %49, %"struct.std::__1::__function::__policy"** %91, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %49, i64 0, i32 0
  %93 = load i8* (i8*)*, i8* (i8*)** %92, align 8
  %94 = icmp eq i8* (i8*)* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %48
  %96 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %31, i64 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = tail call i8* %93(i8* %97) #10
  %99 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %98, i8** %99, align 8
  br label %100

100:                                              ; preds = %48, %95
  call void @_ZN8spvtools25SetContextMessageConsumerEP13spv_context_tNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS6_EEE(%struct.spv_context_t* %87, %"class.std::__1::function"* nonnull %4) #10
  %101 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %91, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %101, i64 0, i32 1
  %103 = load void (i8*)*, void (i8*)** %102, align 8
  %104 = icmp eq void (i8*)* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void %103(i8* %107) #10
  br label %108

108:                                              ; preds = %100, %105
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %26, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %109, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %110, i64 0, i32 2
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %111, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt6ModuleC2Ev(%"class.spvtools::opt::Module"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %3, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %6 = bitcast %"class.spvtools::opt::Module"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 1
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 5
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 6
  %10 = bitcast %"class.spvtools::opt::IRContext"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 14, i1 false) #10
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %3, %"class.spvtools::opt::Instruction"** %5, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %3, %"class.spvtools::opt::Instruction"** %12, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 1
  %19 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 5
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 6
  %21 = bitcast %"class.spvtools::opt::IRContext"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 14, i1 false) #10
  %22 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %15, %"class.spvtools::opt::Instruction"** %17, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %15, %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 0
  %26 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 1
  %30 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 5
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 6
  %32 = bitcast %"class.spvtools::opt::IRContext"** %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 14, i1 false) #10
  %33 = bitcast %"class.std::__1::vector"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %26, %"class.spvtools::opt::Instruction"** %28, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %26, %"class.spvtools::opt::Instruction"** %34, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 6
  %37 = bitcast %"class.std::__1::unique_ptr.24"* %36 to i64*
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 0
  %39 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 1
  %43 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 5
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 6
  %45 = bitcast %"class.spvtools::opt::IRContext"** %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 14, i1 false) #10
  %46 = bitcast %"class.std::__1::vector"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %39, %"class.spvtools::opt::Instruction"** %41, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %39, %"class.spvtools::opt::Instruction"** %47, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 0
  %50 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %50, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 1
  %54 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 5
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 6
  %56 = bitcast %"class.spvtools::opt::IRContext"** %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 14, i1 false) #10
  %57 = bitcast %"class.std::__1::vector"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %50, %"class.spvtools::opt::Instruction"** %52, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %50, %"class.spvtools::opt::Instruction"** %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %59, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 0
  %61 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 1
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 5
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 6
  %67 = bitcast %"class.spvtools::opt::IRContext"** %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 14, i1 false) #10
  %68 = bitcast %"class.std::__1::vector"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %61, %"class.spvtools::opt::Instruction"** %63, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %61, %"class.spvtools::opt::Instruction"** %69, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %70, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 0
  %72 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 1
  %76 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 5
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 6
  %78 = bitcast %"class.spvtools::opt::IRContext"** %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 14, i1 false) #10
  %79 = bitcast %"class.std::__1::vector"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %72, %"class.spvtools::opt::Instruction"** %74, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %72, %"class.spvtools::opt::Instruction"** %80, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %81, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 0
  %83 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 1
  %87 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 5
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 6
  %89 = bitcast %"class.spvtools::opt::IRContext"** %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 14, i1 false) #10
  %90 = bitcast %"class.std::__1::vector"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %83, %"class.spvtools::opt::Instruction"** %85, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %83, %"class.spvtools::opt::Instruction"** %91, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %92, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 0
  %94 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %94, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 1
  %98 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 5
  store i32 0, i32* %98, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 6
  %100 = bitcast %"class.spvtools::opt::IRContext"** %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 14, i1 false) #10
  %101 = bitcast %"class.std::__1::vector"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %94, %"class.spvtools::opt::Instruction"** %96, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %94, %"class.spvtools::opt::Instruction"** %102, align 8
  %103 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %103, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 0
  %105 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 1
  %109 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 5
  store i32 0, i32* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 6
  %111 = bitcast %"class.spvtools::opt::IRContext"** %108 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 14, i1 false) #10
  %112 = bitcast %"class.std::__1::vector"* %110 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %105, %"class.spvtools::opt::Instruction"** %107, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %105, %"class.spvtools::opt::Instruction"** %113, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %114, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 0
  %116 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %116, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 1
  %120 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 5
  store i32 0, i32* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 6
  %122 = bitcast %"class.spvtools::opt::IRContext"** %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 14, i1 false) #10
  %123 = bitcast %"class.std::__1::vector"* %121 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 56, i1 false) #10
  store %"class.spvtools::opt::Instruction"* %116, %"class.spvtools::opt::Instruction"** %118, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 2
  store %"class.spvtools::opt::Instruction"* %116, %"class.spvtools::opt::Instruction"** %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 3
  store i8 1, i8* %125, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %0, i64 0, i32 15
  %127 = bitcast %"class.std::__1::vector.29"* %126 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 49, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFv19spv_message_level_tPKcRK14spv_position_tS4_EE12__call_emptyEPKNS0_16__policy_storageES2_S4_S7_S4_(%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t* dereferenceable(24), i8*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #12
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #8 comdat {
  tail call void @abort() #13
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
