; ModuleID = '../../third_party/skia/src/core/SkRuntimeEffect.cpp'
source_filename = "../../third_party/skia/src/core/SkRuntimeEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.SkSL::SharedCompiler::Impl" = type { %class.sk_sp, %"class.SkSL::Compiler"* }
%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.39", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.45" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.9", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.11" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.37" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.52", i8, %"class.std::__1::vector.60", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::unique_ptr.54"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.std::__1::unique_ptr.62"*, %"class.std::__1::unique_ptr.62"*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::unique_ptr.62"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.73" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.599" }
%"struct.std::__1::pair.599" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.38" }
%"class.std::__1::shared_ptr.38" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { i64*, i64*, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64* }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.253" }
%"struct.std::__1::atomic.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkLRUCache = type { i32, %class.SkTHashTable.260, %class.SkTInternalLList }
%class.SkTHashTable.260 = type { i32, i32, %class.SkAutoTArray.261 }
%class.SkAutoTArray.261 = type { %"class.std::__1::unique_ptr.262" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot" = type <{ %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, i32, [4 x i8] }>
%"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry" = type { %struct.Key, %class.sk_sp.79, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* }
%struct.Key = type { i32, i32 }
%class.sk_sp.79 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.81", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.212", %"class.std::__1::vector.219", %"class.std::__1::vector.226", %"class.std::__1::unique_ptr.233", i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.80 }
%class.sk_sp.80 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type { %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.37", %"class.std::__1::unique_ptr.96", %"struct.SkSL::Program::Inputs", %"class.std::__1::vector.108", %"class.std::__1::vector.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.SkSL::String"* }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.SkSL::ProgramConfig"* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::unique_ptr.110"* }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.SkSL::ProgramElement"** }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.SkSL::ModifiersPool"* }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.SkSL::ProgramUsage"* }
%"class.SkSL::ProgramUsage" = type { %class.SkTHashMap.137, %class.SkTHashMap.146 }
%class.SkTHashMap.137 = type { %class.SkTHashTable.138 }
%class.SkTHashTable.138 = type { i32, i32, %class.SkAutoTArray.139 }
%class.SkAutoTArray.139 = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base", [4 x i8] }
%"struct.std::__1::pair.base" = type <{ %"class.SkSL::Variable"*, %"struct.SkSL::ProgramUsage::VariableCounts" }>
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.163" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"struct.SkSL::ProgramUsage::VariableCounts" = type { i32, i32, i32 }
%class.SkTHashMap.146 = type { %class.SkTHashTable.147 }
%class.SkTHashTable.147 = type { i32, i32, %class.SkAutoTArray.148 }
%class.SkAutoTArray.148 = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair", i32, [4 x i8] }
%"struct.SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.base.602", [4 x i8] }
%"struct.std::__1::pair.base.602" = type <{ %"class.SkSL::FunctionDeclaration"*, i32 }>
%"class.SkSL::FunctionDeclaration" = type { %"class.SkSL::Symbol", %"class.SkSL::FunctionDefinition"*, %"struct.SkSL::Modifiers"*, %"class.std::__1::vector.161", %"class.SkSL::Type"*, i8, i8, i32 }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"class.SkSL::Variable"**, %"class.SkSL::Variable"**, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.SkSL::Variable"** }
%"class.SkSL::FunctionDefinition" = type { %"class.SkSL::ProgramElement", %"class.SkSL::FunctionDeclaration"*, i8, %"class.std::__1::unique_ptr.174", %"class.std::__1::unordered_set.180", %"struct.SkSL::ASTNode"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.SkSL::Statement"* }
%"class.std::__1::unordered_set.180" = type { %"class.std::__1::__hash_table.181" }
%"class.std::__1::__hash_table.181" = type <{ %"class.std::__1::unique_ptr.182", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.200", [4 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184", %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.std::__1::__hash_node_base.185"** }
%"struct.std::__1::__hash_node_base.185" = type { %"struct.std::__1::__hash_node_base.185"* }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.std::__1::__bucket_list_deallocator.187" }
%"class.std::__1::__bucket_list_deallocator.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base.185" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.205"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.SkSL::ASTNode"* }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.214" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.221" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.226" = type { %"class.std::__1::__vector_base.227" }
%"class.std::__1::__vector_base.227" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.228" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type <{ %"class.skvm::Program", %"class.std::__1::vector.242", i8, [7 x i8] }>
%"class.skvm::Program" = type { %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.skvm::Program::Impl"* }
%"struct.skvm::Program::Impl" = type opaque
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"*, %"class.std::__1::__compressed_pair.245" }
%"struct.SkFilterColorProgram::SampleCall" = type { i32, i32, %union.anon.244 }
%union.anon.244 = type { %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.SkFilterColorProgram::SampleCall"* }
%class.SkTInternalLList = type { %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* }
%class.SkSimpleMatrixProvider = type { %class.SkMatrixProvider }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPaint = type <{ %class.sk_sp.582, %class.sk_sp.345, %class.sk_sp.583, %class.sk_sp.337, %class.sk_sp.584, %struct.SkRGBA4f.297, float, float, %union.anon.585, [4 x i8] }>
%class.sk_sp.582 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.345 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.583 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.337 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.584 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f.297 = type { float, float, float, float }
%union.anon.585 = type { %struct.anon.586 }
%struct.anon.586 = type { i32 }
%class.SkOverrideDeviceMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%class.SkRuntimeShaderBuilder = type { %class.SkRuntimeEffectBuilder }
%class.SkRuntimeEffectBuilder = type { %class.sk_sp.79, %class.sk_sp.333, %"class.std::__1::vector.343" }
%class.sk_sp.333 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.334, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.334 = type { %"struct.std::__1::atomic" }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.344" }
%"class.std::__1::__vector_base.344" = type { %class.sk_sp.345*, %class.sk_sp.345*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %class.sk_sp.345* }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.79, %class.SkString }
%"class.SkSL::SharedCompiler" = type { %class.SkAutoMutexExclusive }
%class.SkAutoMutexExclusive = type { %class.SkMutex* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skvm::Builder" = type <{ %class.SkTHashMap.274, %"class.std::__1::vector.283", %"class.std::__1::vector.290", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.274 = type { %class.SkTHashTable.275 }
%class.SkTHashTable.275 = type { i32, i32, %class.SkAutoTArray.276 }
%class.SkAutoTArray.276 = type { %"class.std::__1::unique_ptr.277" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type { %"struct.SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair", i32 }
%"struct.SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair" = type { %"struct.std::__1::pair.616" }
%"struct.std::__1::pair.616" = type { %"struct.skvm::Instruction", i32 }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { i32*, i32*, %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.290" }
%"struct.skvm::Ptr" = type { i32 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.skvm::Color"*, %"struct.skvm::Color"*, %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.skvm::Color"* }
%class.anon.305 = type { i8 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)* }
%"struct.skvm::PixelFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::function.308" = type { %"class.std::__1::__function::__policy_func.312" }
%"class.std::__1::__function::__policy_func.312" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.313", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.313" = type { { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { %struct.SkRGBA4f*, i64 }
%class.sk_sp.332 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.315, i32, [4 x i8], %class.sk_sp.324*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.315 = type { %class.SkTHashTable.316 }
%class.SkTHashTable.316 = type { i32, i32, %class.SkAutoTArray.317 }
%class.SkAutoTArray.317 = type { %"class.std::__1::unique_ptr.318" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.332*, %class.SkReadBuffer*)* }
%class.sk_sp.324 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkDeserialProcs = type { void (%class.sk_sp.325*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.330*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.324*, i8*, i64, i8*)*, i8* }
%class.sk_sp.325 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.326", [7 x i8] }>
%"struct.std::__1::atomic.326" = type { %"struct.std::__1::__atomic_base.327" }
%"struct.std::__1::__atomic_base.327" = type { %"struct.std::__1::__cxx_atomic_impl.328" }
%"struct.std::__1::__cxx_atomic_impl.328" = type { %"struct.std::__1::__cxx_atomic_base_impl.329" }
%"struct.std::__1::__cxx_atomic_base_impl.329" = type { i8 }
%class.sk_sp.330 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.331, i32, i32 }
%class.sk_sp.331 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %class.sk_sp.337*, %class.sk_sp.337*, %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %class.sk_sp.337* }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.354, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.354 = type { %class.SkAlignedSTStorage.355, %class.SkTArray.356 }
%class.SkAlignedSTStorage.355 = type { [8 x i8] }
%class.SkTArray.356 = type { %"class.std::__1::unique_ptr.351"*, i64 }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %class.GrFragmentProcessor* }
%class.GrSkSLFP = type { %class.GrFragmentProcessor.base, %class.sk_sp.79, i8*, %class.sk_sp.333 }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.354, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.384", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.551" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.368 }
%class.sk_sp.368 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.369, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.370, %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.377", %class.sk_sp.383, %"struct.std::__1::atomic.326", [7 x i8] }>
%class.SkNVRefCnt.369 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.370 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.383 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.387, %class.SkTHashMap.389, %class.SkTHashMap.398, %class.SkTArray.407, %class.SkTArray.409, i32, i8, [3 x i8] }>
%class.SkTArray.387 = type { %"class.std::__1::unique_ptr.388"*, i64 }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.409, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkTHashMap.389 = type { %class.SkTHashTable.390 }
%class.SkTHashTable.390 = type { i32, i32, %class.SkAutoTArray.391 }
%class.SkAutoTArray.391 = type { %"class.std::__1::unique_ptr.392" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.608" }
%"struct.std::__1::pair.608" = type { i32, i32 }
%class.SkTHashMap.398 = type { %class.SkTHashTable.399 }
%class.SkTHashTable.399 = type { i32, i32, %class.SkAutoTArray.400 }
%class.SkAutoTArray.400 = type { %"class.std::__1::unique_ptr.401" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.609" }
%"struct.std::__1::pair.609" = type { i32, %class.SkTArray.610* }
%class.SkTArray.610 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.407 = type { %"class.std::__1::unique_ptr.408"*, i64 }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.611" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.610, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.409 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.419" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.422 }
%class.SkFibBlockSizes.422 = type { i32 }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.429, %class.SkTArray.438, %class.GrOpsTask*, %class.SkSTArray.516, %class.SkSTArray.519, %"class.std::__1::unique_ptr.521", %class.sk_sp.537, %class.GrTokenTracker, i8, i8, %class.SkTArray.538, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.429 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.430", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.433, i8, [7 x i8] }>
%class.sk_sp.433 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.434, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.434 = type { i32 }
%class.SkTArray.438 = type { %class.sk_sp.439*, i64 }
%class.sk_sp.439 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.440, %class.SkTArray.492, i32, i32, %class.SkSTArray.499, %class.SkSTArray.499, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.440 = type { %class.SkAlignedSTStorage.441, %class.SkTArray.442 }
%class.SkAlignedSTStorage.441 = type { [8 x i8] }
%class.SkTArray.442 = type { %class.sk_sp.443*, i64 }
%class.sk_sp.443 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.444, %class.sk_sp.445, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function.452", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.487" }
%class.SkNVRefCnt.444 = type { %"struct.std::__1::atomic" }
%class.sk_sp.445 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.447 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.446, [4 x i8] }>
%union.anon.446 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.333, i8* }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.447 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.448, void (i8*)*, i8* }
%class.SkNVRefCnt.448 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.449, i32, [4 x i8] }
%union.anon.449 = type { %struct.anon.450 }
%struct.anon.450 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::function.452" = type { %"class.std::__1::__function::__policy_func.456" }
%"class.std::__1::__function::__policy_func.456" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.457", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.457" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.445, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.370, %class.sk_sp.486, %class.sk_sp.486 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.466, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.477, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.458 }
%class.SkTHashTable.458 = type { i32, i32, %class.SkAutoTArray.459 }
%class.SkAutoTArray.459 = type { %"class.std::__1::unique_ptr.460" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.466 = type { %class.SkTHashTable.467 }
%class.SkTHashTable.467 = type { i32, i32, %class.SkAutoTArray.468 }
%class.SkAutoTArray.468 = type { %"class.std::__1::unique_ptr.469" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.475, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.475 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.476, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.476 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.477 = type { %class.SkTHashTable.478 }
%class.SkTHashTable.478 = type { i32, i32, %class.SkAutoTArray.479 }
%class.SkAutoTArray.479 = type { %"class.std::__1::unique_ptr.480" }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.486 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.487" = type { %"struct.std::__1::__atomic_base.488" }
%"struct.std::__1::__atomic_base.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i64 }
%class.SkTArray.492 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.493", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.499 = type { %class.SkAlignedSTStorage.500, %class.SkTArray.501 }
%class.SkAlignedSTStorage.500 = type { [8 x i8] }
%class.SkTArray.501 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.502, %class.sk_sp.513, %class.SkTArray.515, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.502 = type { %class.SkAlignedSTStorage.503, %class.SkTArray.504 }
%class.SkAlignedSTStorage.503 = type { [2000 x i8] }
%class.SkTArray.504 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.505", %class.GrOp* }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.505", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.443, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.351" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.511 }
%union.anon.511 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.512, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.512 = type { i32 }
%class.sk_sp.513 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.514, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.514 = type { %"struct.std::__1::atomic" }
%class.SkTArray.515 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.516 = type { %class.SkAlignedSTStorage.517, %class.SkTArray.518 }
%class.SkAlignedSTStorage.517 = type { [32 x i8] }
%class.SkTArray.518 = type { i32*, i64 }
%class.SkSTArray.519 = type { %class.SkAlignedSTStorage.520, %class.SkTArray.438 }
%class.SkAlignedSTStorage.520 = type { [32 x i8] }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.524, %"class.std::__1::unique_ptr.528", %class.GrPathRenderer* }
%class.SkSTArray.524 = type { %class.SkAlignedSTStorage.525, %class.SkTArray.526 }
%class.SkAlignedSTStorage.525 = type { [64 x i8] }
%class.SkTArray.526 = type { %class.sk_sp.527*, i64 }
%class.sk_sp.527 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.537 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.538 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.539, i32, %class.GrRenderTask** }
%class.SkTHashMap.539 = type { %class.SkTHashTable.540 }
%class.SkTHashTable.540 = type { i32, i32, %class.SkAutoTArray.541 }
%class.SkAutoTArray.541 = type { %"class.std::__1::unique_ptr.542" }
%"class.std::__1::unique_ptr.542" = type { %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %class.GrProxyProvider* }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.331, %class.sk_sp.560, i32, i32 }
%class.sk_sp.560 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.sk_sp.565 = type { %class.GrImageContext* }
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.sk_sp.567 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.GrSurfaceFillContext = type <{ %class.GrSurfaceContext, %class.GrSurfaceProxyView, %class.sk_sp.561, i8, [7 x i8] }>
%class.GrSurfaceContext = type { i32 (...)**, %class.GrRecordingContext*, %class.GrSurfaceProxyView, %class.GrColorInfo }
%class.sk_sp.561 = type { %class.GrOpsTask* }
%class.SkImage_Gpu = type { %class.SkImage_GpuBase, %"class.SkImage_Gpu::ProxyChooser", %class.GrSwizzle, i32 }
%class.SkImage_GpuBase = type { %class.SkImage_Base.base, %class.sk_sp.565 }
%class.SkImage_Base.base = type { %class.SkImage.base, %"struct.std::__1::atomic.326" }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%"class.SkImage_Gpu::ProxyChooser" = type <{ %class.SkSpinlock, [7 x i8], %class.sk_sp.443, %class.sk_sp.443, %class.sk_sp.439, i32, [4 x i8] }>
%class.SkSpinlock = type { %"struct.std::__1::atomic.326" }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.568, [384 x i64], %class.sk_sp.569, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.570", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.576" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.568 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.569 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkRTShader = type { %class.SkShaderBase.base, %class.sk_sp.79, i8, %class.sk_sp.333, %"class.std::__1::vector.343" }
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.333*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.333*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.333*, %class.SkTypeface*, i8*)*, i8* }
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTCopyOnFirstWrite = type { %class.SkMatrix*, %class.SkTLazy.623 }
%class.SkTLazy.623 = type { [40 x i8], %class.SkMatrix* }
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkStageUpdater = type { i32 (...)** }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon.624 }
%class.anon.624 = type { %class.SkRTShader*, %class.SkMatrixProvider*, %"class.skvm::Builder"**, %"struct.skvm::Coord"*, %class.SkColorInfo*, %"struct.skvm::Uniforms"**, %class.SkArenaAlloc** }
%class.SkRuntimeColorFilter = type { %class.SkColorFilterBase.base, %class.sk_sp.79, %class.sk_sp.333, %"class.std::__1::vector.335" }
%class.SkColorFilterBase.base = type { %class.SkColorFilter.base }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%"class.std::__1::__function::__default_alloc_func.645" = type { %class.anon.644 }
%class.anon.644 = type { %class.SkRuntimeColorFilter*, %"class.skvm::Builder"**, %class.SkColorSpace**, %"struct.skvm::Uniforms"**, %class.SkArenaAlloc** }
%"class.std::__1::__function::__default_alloc_func.656" = type { %class.anon.307 }
%class.anon.307 = type { %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %class.anon.305*, %"struct.skvm::Color"*, %"class.std::__1::vector.298"*, i8*, %"class.std::__1::vector.242"* }

$_ZN4SkSL14SharedCompilerC2Ev = comdat any

$_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString = comdat any

$_ZN15SkRuntimeEffect13MakeForShaderE8SkString = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEEC2ES0_I15SkRuntimeEffectE = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN4SkSL14SharedCompiler4ImplC2Ev = comdat any

$_ZN10SkRTShaderD2Ev = comdat any

$_ZN10SkRTShaderD0Ev = comdat any

$_ZNK10SkRTShader10getFactoryEv = comdat any

$_ZNK10SkRTShader11getTypeNameEv = comdat any

$_ZNK10SkRTShader7flattenER13SkWriteBuffer = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK10SkRTShader8isOpaqueEv = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK10SkRTShader19asFragmentProcessorERK8GrFPArgs = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK10SkRTShader15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc = comdat any

$_ZNK12SkShaderBase18onAsLuminanceColorEPj = comdat any

$_ZNK10SkRTShader14onAppendStagesERK10SkStageRec = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

$_ZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPNS2_7BuilderES4_S4_S3_RK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS2_8UniformsEP12SkArenaAllocEUliS4_S3_E_S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_ = comdat any

$_ZNSt3__18__invokeIRZNK10SkRTShader9onProgramEPN4skvm7BuilderENS2_5CoordES5_NS2_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS2_8UniformsEP12SkArenaAllocEUliS5_S6_E_JiS5_S6_EEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSM_DpOSN_ = comdat any

$_ZN30SkOverrideDeviceMatrixProviderD0Ev = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN16SkMatrixProviderD0Ev = comdat any

$_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEPvPKv = comdat any

$_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEvPv = comdat any

$_ZN22SkSimpleMatrixProviderD0Ev = comdat any

$_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN20SkRuntimeColorFilterD2Ev = comdat any

$_ZN20SkRuntimeColorFilterD0Ev = comdat any

$_ZNK20SkRuntimeColorFilter10getFactoryEv = comdat any

$_ZNK20SkRuntimeColorFilter11getTypeNameEv = comdat any

$_ZNK20SkRuntimeColorFilter7flattenER13SkWriteBuffer = comdat any

$_ZNK17SkColorFilterBase18getFlattenableTypeEv = comdat any

$_ZNK20SkRuntimeColorFilter18onIsAlphaUnchangedEv = comdat any

$_ZNK20SkRuntimeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo = comdat any

$_ZNK20SkRuntimeColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace = comdat any

$_ZNK20SkRuntimeColorFilter14onAppendStagesERK10SkStageRecb = comdat any

$_ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZNSt3__110__function16__policy_invokerIF8SkRGBA4fIL11SkAlphaType2EEiS4_EE11__call_implINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter15onFilterColor4fERKS4_P12SkColorSpaceEUliS4_E_S5_EEEES4_PKNS0_16__policy_storageEiOS4_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPNS2_7BuilderES3_P12SkColorSpacePNS2_8UniformsEP12SkArenaAllocEUliS4_S3_E_S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_ = comdat any

$_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEPvPKv = comdat any

$_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEvPv = comdat any

$_ZN4SkSL7ProgramD2Ev = comdat any

$_ZNSt3__16vectorIN15SkRuntimeEffect5ChildENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN15SkRuntimeEffect7UniformENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN8SkTArrayI8SkRGBA4fIL11SkAlphaType2EELb1EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex = comdat any

$_ZGVZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex = comdat any

$_ZTV10SkRTShader = comdat any

$_ZTV30SkOverrideDeviceMatrixProvider = comdat any

$_ZTV16SkMatrixProvider = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = comdat any

$_ZTV22SkSimpleMatrixProvider = comdat any

$_ZTV20SkRuntimeColorFilter = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpaceEUliS7_E_FS7_iS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = comdat any

@_ZN4SkSL14SharedCompiler5gImplE = hidden local_unnamed_addr global %"struct.SkSL::SharedCompiler::Impl"* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"missing 'main' function\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Invalid uniform type: '%s'\00", align 1
@_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex = internal unnamed_addr global %class.SkMutex* null, align 8
@_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex = internal global i64 0, align 8
@_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache = internal unnamed_addr global %class.SkLRUCache* null, align 8
@_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache = internal global i64 0, align 8
@_ZTV15SkRuntimeEffect = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRuntimeEffect*)* @_ZN15SkRuntimeEffectD2Ev to i8*), i8* bitcast (void (%class.SkRuntimeEffect*)* @_ZN15SkRuntimeEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"make_fp\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"runtime_image\00", align 1
@__const._ZNK15SkRuntimeEffect9makeImageEP18GrRecordingContext5sk_spI6SkDataEPS2_I8SkShaderEmPK8SkMatrix11SkImageInfob.matrixProvider = private unnamed_addr constant %class.SkSimpleMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } } }, align 8
@__const._ZNK15SkRuntimeEffect9makeImageEP18GrRecordingContext5sk_spI6SkDataEPS2_I8SkShaderEmPK8SkMatrix11SkImageInfob.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.582 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.345 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.583 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.337 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.584 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f.297 { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.585 { %struct.anon.586 { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.6 = private unnamed_addr constant [21 x i8] c"SkRuntimeColorFilter\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"SkRTShader\00", align 1
@_ZZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex = linkonce_odr hidden local_unnamed_addr global %class.SkMutex* null, comdat, align 8
@_ZGVZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex = linkonce_odr hidden global i64 0, comdat, align 8
@_ZTV10SkRTShader = linkonce_odr hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRTShader*)* @_ZN10SkRTShaderD2Ev to i8*), i8* bitcast (void (%class.SkRTShader*)* @_ZN10SkRTShaderD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.332*, %class.SkReadBuffer*)* (%class.SkRTShader*)* @_ZNK10SkRTShader10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkRTShader*)* @_ZNK10SkRTShader11getTypeNameEv to i8*), i8* bitcast (void (%class.SkRTShader*, %class.SkWriteBuffer*)* @_ZNK10SkRTShader7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkRTShader*)* @_ZNK10SkRTShader8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkShader*, %"struct.SkShader::GradientInfo"*)* @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkRTShader*, %struct.GrFPArgs*)* @_ZNK10SkRTShader19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkRTShader*)* @_ZNK10SkRTShader15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.345*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkShaderBase*, i32*)* @_ZNK12SkShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkRTShader*, %struct.SkStageRec*)* @_ZNK10SkRTShader14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkRTShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*)] }, comdat, align 8
@.str.9 = private unnamed_addr constant [15 x i8] c"runtime_shader\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"rgb1\00", align 1
@__const._ZZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENKUliS3_S4_E_clEiS3_S4_.mats = private unnamed_addr constant %class.SkOverrideDeviceMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*) }, align 8
@_ZTV30SkOverrideDeviceMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkOverrideDeviceMatrixProvider*)* @_ZN30SkOverrideDeviceMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*)* @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*)* @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV16SkMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEvPv, i8 0, %"class.std::type_info"* null }, comdat, align 8
@__const._ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace.steps = private unnamed_addr constant { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] } { %"struct.SkColorSpaceXformSteps::Flags" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, [3 x i8] c"\AA\AA\AA", %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.skcms_TransferFunction { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 4
@_ZTV22SkSimpleMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkSimpleMatrixProvider*)* @_ZN22SkSimpleMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*, i32, %class.SkM44*)* @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*)* @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV20SkRuntimeColorFilter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRuntimeColorFilter*)* @_ZN20SkRuntimeColorFilterD2Ev to i8*), i8* bitcast (void (%class.SkRuntimeColorFilter*)* @_ZN20SkRuntimeColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.332*, %class.SkReadBuffer*)* (%class.SkRuntimeColorFilter*)* @_ZNK20SkRuntimeColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkRuntimeColorFilter*)* @_ZNK20SkRuntimeColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkRuntimeColorFilter*, %class.SkWriteBuffer*)* @_ZNK20SkRuntimeColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkRuntimeColorFilter*)* @_ZNK20SkRuntimeColorFilter18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkRuntimeColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK20SkRuntimeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkRuntimeColorFilter*, %struct.SkRGBA4f*, %class.SkColorSpace*)* @_ZNK20SkRuntimeColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%class.SkRuntimeColorFilter*, %struct.SkStageRec*, i1)* @_ZNK20SkRuntimeColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkRuntimeColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, comdat, align 8
@.str.11 = private unnamed_addr constant [21 x i8] c"Runtime_Color_Filter\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpaceEUliS7_E_FS7_iS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEvPv, i8 0, %"class.std::type_info"* null }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = private unnamed_addr constant [11 x i64] [i64 4, i64 8, i64 12, i64 16, i64 16, i64 36, i64 64, i64 4, i64 8, i64 12, i64 16], align 8

@_ZN15SkRuntimeEffectC1E8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsERKNS3_18FunctionDefinitionEONS1_6vectorINS_7UniformENS1_9allocatorISF_EEEEONSE_INS_5ChildENSG_ISK_EEEEONSE_INS3_11SampleUsageENSG_ISO_EEEEj = hidden unnamed_addr alias void (%class.SkRuntimeEffect*, %class.SkString*, %"struct.SkSL::Program"*, %"struct.SkRuntimeEffect::Options"*, %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.212"*, %"class.std::__1::vector.219"*, %"class.std::__1::vector.226"*, i32), void (%class.SkRuntimeEffect*, %class.SkString*, %"struct.SkSL::Program"*, %"struct.SkRuntimeEffect::Options"*, %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.212"*, %"class.std::__1::vector.219"*, %"class.std::__1::vector.226"*, i32)* @_ZN15SkRuntimeEffectC2E8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsERKNS3_18FunctionDefinitionEONS1_6vectorINS_7UniformENS1_9allocatorISF_EEEEONSE_INS_5ChildENSG_ISK_EEEEONSE_INS3_11SampleUsageENSG_ISO_EEEEj
@_ZN15SkRuntimeEffectD1Ev = hidden unnamed_addr alias void (%class.SkRuntimeEffect*), void (%class.SkRuntimeEffect*)* @_ZN15SkRuntimeEffectD2Ev
@_ZN20SkFilterColorProgramC1EN4skvm7ProgramENSt3__16vectorINS_10SampleCallENS2_9allocatorIS4_EEEEb = hidden unnamed_addr alias void (%class.SkFilterColorProgram*, %"class.skvm::Program"*, %"class.std::__1::vector.242"*, i1), void (%class.SkFilterColorProgram*, %"class.skvm::Program"*, %"class.std::__1::vector.242"*, i1)* @_ZN20SkFilterColorProgramC2EN4skvm7ProgramENSt3__16vectorINS_10SampleCallENS2_9allocatorIS4_EEEEb
@_ZN22SkRuntimeShaderBuilderC1E5sk_spI15SkRuntimeEffectE = hidden unnamed_addr alias void (%class.SkRuntimeShaderBuilder*, %class.sk_sp.79*), void (%class.SkRuntimeShaderBuilder*, %class.sk_sp.79*)* @_ZN22SkRuntimeShaderBuilderC2E5sk_spI15SkRuntimeEffectE
@_ZN22SkRuntimeShaderBuilderD1Ev = hidden unnamed_addr alias void (%class.SkRuntimeShaderBuilder*), void (%class.SkRuntimeShaderBuilder*)* @_ZN22SkRuntimeShaderBuilderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect4MakeE8SkStringRKNS_7OptionsEN4SkSL11ProgramKindE(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2), i8 signext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkSL::SharedCompiler", align 8
  %6 = alloca [3 x i8], align 1
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"struct.SkSL::ProgramSettings", align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = alloca %class.SkString, align 8
  %11 = bitcast %"class.SkSL::SharedCompiler"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.SkSL::SharedCompiler", %"class.SkSL::SharedCompiler"* %5, i64 0, i32 0, i32 0
  store %class.SkMutex* inttoptr (i64 -6148914691236517206 to %class.SkMutex*), %class.SkMutex** %12, align 8
  call void @_ZN4SkSL14SharedCompilerC2Ev(%"class.SkSL::SharedCompiler"* nonnull %5)
  %13 = getelementptr inbounds [3 x i8], [3 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %13)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 -86, i64 3, i1 false)
  %14 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %2, i64 0, i32 0
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = load %"struct.SkSL::SharedCompiler::Impl"*, %"struct.SkSL::SharedCompiler::Impl"** @_ZN4SkSL14SharedCompiler5gImplE, align 8
  %17 = getelementptr inbounds %"struct.SkSL::SharedCompiler::Impl", %"struct.SkSL::SharedCompiler::Impl"* %16, i64 0, i32 1
  %18 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %17, align 8
  %19 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %20 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %19, align 8
  %21 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %20, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %20, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = icmp ult i32 %23, 23
  br i1 %25, label %35, label %26

26:                                               ; preds = %4
  %27 = add nuw nsw i64 %24, 16
  %28 = and i64 %27, 8589934576
  %29 = call i8* @_Znwm(i64 %28) #15
  %30 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = or i64 %28, -9223372036854775808
  %32 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %33, align 8
  %34 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %41

35:                                               ; preds = %4
  %36 = trunc i32 %23 to i8
  %37 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 %36, i8* %38, align 1
  %39 = bitcast %"class.SkSL::String"* %7 to i8*
  %40 = icmp eq i32 %23, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35, %26
  %42 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %34, %26 ]
  %43 = phi i8* [ %39, %35 ], [ %29, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %43, i8* align 1 %21, i64 %24, i1 false) #14
  br label %44

44:                                               ; preds = %35, %41
  %45 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %42, %41 ]
  %46 = phi i8* [ %39, %35 ], [ %43, %41 ]
  %47 = getelementptr inbounds i8, i8* %46, i64 %24
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 1
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 2
  store i8 1, i8* %50, align 2
  %51 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 3
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 4
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds i8, i8* %48, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* nonnull align 1 %13, i64 3, i1 false)
  %54 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 5
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %55, align 8
  %56 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 9
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 10
  store i8 1, i8* %57, align 4
  %58 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 11
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 12
  store i8 1, i8* %59, align 2
  %60 = getelementptr inbounds i8, i8* %48, i64 31
  store i8 -86, i8* %60, align 1
  %61 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 13
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 14
  store i8 %15, i8* %62, align 4
  %63 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 15
  store i8 1, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 16
  store i8 1, i8* %64, align 2
  %65 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 17
  store i8 0, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 18
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 19
  store i8 1, i8* %67, align 1
  %68 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 20
  store i8 1, i8* %68, align 2
  %69 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 21
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %48, i64 44
  %71 = bitcast i8* %70 to i32*
  store i32 -1431655766, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %8, i64 0, i32 22
  store %"class.std::__1::vector.36"* null, %"class.std::__1::vector.36"** %72, align 8
  %73 = call %"struct.SkSL::Program"* @_ZN4SkSL8Compiler14convertProgramENS_11ProgramKindENS_6StringENS_15ProgramSettingsE(%"class.SkSL::Compiler"* %18, i8 signext %3, %"class.SkSL::String"* nonnull %7, %"struct.SkSL::ProgramSettings"* nonnull byval(%"struct.SkSL::ProgramSettings") align 8 %8) #14
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %44
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %44, %77
  %81 = icmp eq %"struct.SkSL::Program"* %73, null
  br i1 %81, label %82, label %107

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 0, i32 0
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %83, align 8
  %84 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 1
  %85 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #14
  %86 = load %"struct.SkSL::SharedCompiler::Impl"*, %"struct.SkSL::SharedCompiler::Impl"** @_ZN4SkSL14SharedCompiler5gImplE, align 8
  %87 = getelementptr inbounds %"struct.SkSL::SharedCompiler::Impl", %"struct.SkSL::SharedCompiler::Impl"* %86, i64 0, i32 1
  %88 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %87, align 8
  call void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* nonnull sret %9, %"class.SkSL::Compiler"* %88, i1 zeroext true) #14
  %89 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  %93 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = select i1 %92, i8* %94, i8* %85
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* sret %84, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %95) #14
  %96 = load i8, i8* %90, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %82
  %99 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %99) #15
  br label %100

100:                                              ; preds = %82, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %13)
  %101 = load %class.SkMutex*, %class.SkMutex** %12, align 8
  %102 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 1 release
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %105, label %115

105:                                              ; preds = %100
  %106 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %101, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %106, i32 1) #14
  br label %115

107:                                              ; preds = %80
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %13)
  %108 = load %class.SkMutex*, %class.SkMutex** %12, align 8
  %109 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 1 release
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %108, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %113, i32 1) #14
  br label %114

114:                                              ; preds = %112, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %10, %class.SkString* dereferenceable(8) %1) #14
  call void @_ZN15SkRuntimeEffect4MakeE8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsENS3_11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %10, %"struct.SkSL::Program"* nonnull %73, %"struct.SkRuntimeEffect::Options"* dereferenceable(2) %2, i8 signext %3)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #14
  br label %116

115:                                              ; preds = %105, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %116

116:                                              ; preds = %115, %114
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14SharedCompilerC2Ev(%"class.SkSL::SharedCompiler"*) unnamed_addr #0 comdat align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #15
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex) #14
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %class.SkMutex*, %class.SkMutex** @_ZZN4SkSL14SharedCompiler14compiler_mutexEvE5mutex, align 8
  %15 = getelementptr inbounds %"class.SkSL::SharedCompiler", %"class.SkSL::SharedCompiler"* %0, i64 0, i32 0, i32 0
  store %class.SkMutex* %14, %class.SkMutex** %15, align 8
  %16 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acquire
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %14, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %20) #14
  br label %21

21:                                               ; preds = %13, %19
  %22 = load %"struct.SkSL::SharedCompiler::Impl"*, %"struct.SkSL::SharedCompiler::Impl"** @_ZN4SkSL14SharedCompiler5gImplE, align 8
  %23 = icmp eq %"struct.SkSL::SharedCompiler::Impl"* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = tail call i8* @_Znwm(i64 16) #15
  %26 = bitcast i8* %25 to %"struct.SkSL::SharedCompiler::Impl"*
  tail call void @_ZN4SkSL14SharedCompiler4ImplC2Ev(%"struct.SkSL::SharedCompiler::Impl"* nonnull %26)
  store i8* %25, i8** bitcast (%"struct.SkSL::SharedCompiler::Impl"** @_ZN4SkSL14SharedCompiler5gImplE to i8**), align 8
  br label %27

27:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"struct.SkSL::Program"* @_ZN4SkSL8Compiler14convertProgramENS_11ProgramKindENS_6StringENS_15ProgramSettingsE(%"class.SkSL::Compiler"*, i8 signext, %"class.SkSL::String"*, %"struct.SkSL::ProgramSettings"* byval(%"struct.SkSL::ProgramSettings") align 8) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_Z14SkStringPrintfPKcz(%class.SkString* sret, i8*, ...) local_unnamed_addr #2

declare void @_ZN4SkSL8Compiler9errorTextEb(%"class.SkSL::String"* sret, %"class.SkSL::Compiler"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect4MakeE8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsENS3_11ProgramKindE(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*, %"struct.SkSL::Program"*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2), i8 signext) local_unnamed_addr #0 align 2 {
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.SkSL::StringFragment"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.SkSL::StringFragment"*
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.SkSL::StringFragment"*
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"struct.SkSL::StringFragment"*
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %"struct.SkSL::StringFragment"*
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %"struct.SkSL::StringFragment"*
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to %"struct.SkSL::StringFragment"*
  %22 = alloca <2 x i64>, align 16
  %23 = bitcast <2 x i64>* %22 to %"struct.SkSL::StringFragment"*
  %24 = alloca <2 x i64>, align 16
  %25 = bitcast <2 x i64>* %24 to %"struct.SkSL::StringFragment"*
  %26 = alloca <2 x i64>, align 16
  %27 = bitcast <2 x i64>* %26 to %"struct.SkSL::StringFragment"*
  %28 = alloca <2 x i64>, align 16
  %29 = bitcast <2 x i64>* %28 to %"struct.SkSL::StringFragment"*
  %30 = alloca <2 x i64>, align 16
  %31 = bitcast <2 x i64>* %30 to %"struct.SkSL::StringFragment"*
  %32 = alloca <2 x i64>, align 16
  %33 = bitcast <2 x i64>* %32 to %"struct.SkSL::StringFragment"*
  %34 = alloca <2 x i64>, align 16
  %35 = bitcast <2 x i64>* %34 to %"struct.SkSL::StringFragment"*
  %36 = alloca <2 x i64>, align 16
  %37 = bitcast <2 x i64>* %36 to %"struct.SkSL::StringFragment"*
  %38 = alloca <2 x i64>, align 16
  %39 = bitcast <2 x i64>* %38 to %"struct.SkSL::StringFragment"*
  %40 = alloca <2 x i64>, align 16
  %41 = bitcast <2 x i64>* %40 to %"struct.SkSL::StringFragment"*
  %42 = alloca %"class.SkSL::SharedCompiler", align 8
  %43 = alloca %"class.std::__1::vector.212", align 8
  %44 = alloca %"class.std::__1::vector.219", align 8
  %45 = alloca %"class.std::__1::vector.226", align 8
  %46 = alloca i32, align 4
  %47 = alloca %"struct.SkRuntimeEffect::Child", align 8
  %48 = alloca %class.SkString, align 8
  %49 = alloca %"struct.SkRuntimeEffect::Uniform", align 8
  %50 = alloca %class.SkString, align 8
  %51 = alloca %"class.SkSL::String", align 8
  %52 = alloca %class.SkString, align 8
  %53 = ptrtoint %"struct.SkSL::Program"* %2 to i64
  %54 = bitcast %"class.SkSL::SharedCompiler"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #14
  %55 = getelementptr inbounds %"class.SkSL::SharedCompiler", %"class.SkSL::SharedCompiler"* %42, i64 0, i32 0, i32 0
  store %class.SkMutex* inttoptr (i64 -6148914691236517206 to %class.SkMutex*), %class.SkMutex** %55, align 8
  call void @_ZN4SkSL14SharedCompilerC2Ev(%"class.SkSL::SharedCompiler"* nonnull %42)
  %56 = call %"class.SkSL::FunctionDefinition"* @_ZN4SkSL19Program_GetFunctionERKNS_7ProgramEPKc(%"struct.SkSL::Program"* dereferenceable(128) %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #14
  %57 = icmp eq %"class.SkSL::FunctionDefinition"* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %5
  %59 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 0, i32 0
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %59, align 8
  %60 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 1
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* sret %60, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #14
  br label %625

61:                                               ; preds = %5
  %62 = getelementptr inbounds %"class.SkSL::FunctionDefinition", %"class.SkSL::FunctionDefinition"* %56, i64 0, i32 1
  %63 = load %"class.SkSL::FunctionDeclaration"*, %"class.SkSL::FunctionDeclaration"** %62, align 8
  %64 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %63, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %64, align 8
  %66 = getelementptr inbounds %"class.SkSL::FunctionDeclaration", %"class.SkSL::FunctionDeclaration"* %63, i64 0, i32 3, i32 0, i32 1
  %67 = load %"class.SkSL::Variable"**, %"class.SkSL::Variable"*** %66, align 8
  %68 = icmp eq %"class.SkSL::Variable"** %65, %67
  br i1 %68, label %80, label %69

69:                                               ; preds = %61, %77
  %70 = phi %"class.SkSL::Variable"** [ %78, %77 ], [ %65, %61 ]
  %71 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %70, align 8
  %72 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %71, i64 0, i32 2
  %73 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %72, align 8
  %74 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %73, i64 0, i32 0, i32 6
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 10009
  br i1 %76, label %80, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %70, i64 1
  %79 = icmp eq %"class.SkSL::Variable"** %78, %67
  br i1 %79, label %92, label %69

80:                                               ; preds = %69, %61
  %81 = phi %"class.SkSL::Variable"** [ %65, %61 ], [ %70, %69 ]
  %82 = icmp eq %"class.SkSL::Variable"** %81, %67
  br i1 %82, label %92, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %2, i64 0, i32 9, i32 0, i32 0, i32 0
  %85 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %84, align 8
  %86 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %81, align 8
  %87 = call { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"* %85, %"class.SkSL::Variable"* dereferenceable(64) %86) #14
  %88 = extractvalue { i64, i32 } %87, 0
  %89 = extractvalue { i64, i32 } %87, 1
  %90 = lshr i64 %88, 32
  %91 = trunc i64 %90 to i32
  br label %92

92:                                               ; preds = %77, %80, %83
  %93 = phi i32 [ %89, %83 ], [ 0, %80 ], [ 0, %77 ]
  %94 = phi i32 [ %91, %83 ], [ 0, %80 ], [ 0, %77 ]
  switch i8 %4, label %96 [
    i8 4, label %97
    i8 5, label %95
  ]

95:                                               ; preds = %92
  br label %97

96:                                               ; preds = %92
  call void @llvm.trap()
  unreachable

97:                                               ; preds = %92, %95
  %98 = phi i32 [ 4, %95 ], [ 2, %92 ]
  %99 = icmp ne i32 %93, 0
  %100 = or i32 %94, %93
  %101 = icmp ne i32 %100, 0
  %102 = bitcast %"class.std::__1::vector.212"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #14
  %103 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %43, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %43, i64 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %43, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 24, i1 false) #14
  %106 = bitcast %"class.std::__1::vector.219"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #14
  %107 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %44, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %44, i64 0, i32 0, i32 1
  %109 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %44, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 0, i64 24, i1 false) #14
  %110 = bitcast %"class.std::__1::vector.226"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #14
  %111 = getelementptr inbounds %"class.std::__1::vector.226", %"class.std::__1::vector.226"* %45, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::vector.226", %"class.std::__1::vector.226"* %45, i64 0, i32 0, i32 1
  %113 = getelementptr inbounds %"class.std::__1::vector.226", %"class.std::__1::vector.226"* %45, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 24, i1 false) #14
  %114 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #14
  store i32 0, i32* %46, align 4
  %115 = load %"struct.SkSL::SharedCompiler::Impl"*, %"struct.SkSL::SharedCompiler::Impl"** @_ZN4SkSL14SharedCompiler5gImplE, align 8
  %116 = getelementptr inbounds %"struct.SkSL::SharedCompiler::Impl", %"struct.SkSL::SharedCompiler::Impl"* %115, i64 0, i32 1
  %117 = load %"class.SkSL::Compiler"*, %"class.SkSL::Compiler"** %116, align 8
  %118 = getelementptr inbounds %"class.SkSL::Compiler", %"class.SkSL::Compiler"* %117, i64 0, i32 1, i32 0
  %119 = load %"class.SkSL::Context"*, %"class.SkSL::Context"** %118, align 8
  %120 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %2, i64 0, i32 6
  %121 = bitcast %"class.std::__1::vector.108"* %120 to i64*
  %122 = load i64, i64* %121, align 8, !noalias !4
  %123 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %2, i64 0, i32 6, i32 0, i32 1
  %124 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %2, i64 0, i32 7
  %125 = bitcast %"class.std::__1::vector.121"* %124 to i64*
  %126 = load i64, i64* %125, align 8, !noalias !4
  %127 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %2, i64 0, i32 7, i32 0, i32 1
  %128 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %127, align 8, !noalias !4
  %129 = load %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"** %123, align 8, !noalias !7
  %130 = bitcast %"struct.SkRuntimeEffect::Uniform"* %49 to i8*
  %131 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %49, i64 0, i32 0
  %132 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %49, i64 0, i32 1
  %133 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %49, i64 0, i32 2
  %134 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %49, i64 0, i32 3
  %135 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %49, i64 0, i32 4
  %136 = bitcast %class.SkString* %50 to i8*
  %137 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = bitcast <2 x i64>* %38 to i8*
  %139 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %140 = bitcast <2 x i64>* %34 to i8*
  %141 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %142 = bitcast <2 x i64>* %30 to i8*
  %143 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %144 = bitcast <2 x i64>* %26 to i8*
  %145 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %146 = bitcast <2 x i64>* %22 to i8*
  %147 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %148 = bitcast <2 x i64>* %18 to i8*
  %149 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %150 = bitcast <2 x i64>* %14 to i8*
  %151 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %152 = bitcast <2 x i64>* %10 to i8*
  %153 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %154 = bitcast <2 x i64>* %6 to i8*
  %155 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %156 = bitcast <2 x i64>* %8 to i8*
  %157 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %158 = bitcast <2 x i64>* %12 to i8*
  %159 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %160 = bitcast <2 x i64>* %16 to i8*
  %161 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %162 = bitcast <2 x i64>* %20 to i8*
  %163 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %164 = bitcast <2 x i64>* %24 to i8*
  %165 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %166 = bitcast <2 x i64>* %28 to i8*
  %167 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %168 = bitcast <2 x i64>* %32 to i8*
  %169 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %170 = bitcast <2 x i64>* %36 to i8*
  %171 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %119, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0
  %172 = bitcast <2 x i64>* %40 to i8*
  %173 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %0, i64 0, i32 1
  %175 = bitcast %"class.SkSL::String"* %51 to i8*
  %176 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %178 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = bitcast %"class.SkSL::String"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  %181 = bitcast i64* %132 to i8*
  %182 = bitcast %"struct.SkRuntimeEffect::Uniform"** %104 to i64*
  %183 = bitcast %"struct.SkRuntimeEffect::Child"* %47 to i8*
  %184 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %47, i64 0, i32 0
  %185 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %47, i64 0, i32 1
  %186 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %47, i64 0, i32 2
  %187 = bitcast %class.SkString* %48 to i8*
  %188 = bitcast %"struct.SkRuntimeEffect::Child"** %108 to i64*
  %189 = bitcast %"class.std::__1::vector.219"* %44 to i64*
  %190 = bitcast i32* %185 to i64*
  %191 = bitcast %"struct.SkSL::SampleUsage"** %112 to i64*
  %192 = bitcast %"class.std::__1::vector.226"* %45 to i64*
  %193 = bitcast %"struct.SkSL::SampleUsage"** %113 to i64*
  %194 = inttoptr i64 %122 to %"class.std::__1::unique_ptr.110"*
  %195 = icmp eq %"class.std::__1::unique_ptr.110"* %129, %194
  %196 = inttoptr i64 %126 to %"class.SkSL::ProgramElement"**
  %197 = icmp eq %"class.SkSL::ProgramElement"** %128, %196
  %198 = and i1 %197, %195
  br i1 %198, label %571, label %199

199:                                              ; preds = %97, %558
  %200 = phi i1 [ %569, %558 ], [ %197, %97 ]
  %201 = phi %"class.SkSL::ProgramElement"** [ %568, %558 ], [ %196, %97 ]
  %202 = phi %"class.std::__1::unique_ptr.110"* [ %566, %558 ], [ %194, %97 ]
  %203 = phi i64 [ %559, %558 ], [ 0, %97 ]
  %204 = phi i64 [ %565, %558 ], [ %122, %97 ]
  %205 = phi i64 [ %564, %558 ], [ %126, %97 ]
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %202, i64 0, i32 0, i32 0, i32 0
  %207 = select i1 %200, %"class.SkSL::ProgramElement"** %206, %"class.SkSL::ProgramElement"** %201
  %208 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %207, align 8
  %209 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %208, i64 0, i32 0, i32 2
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, 4
  br i1 %211, label %212, label %558

212:                                              ; preds = %199
  %213 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %208, i64 1
  %214 = bitcast %"class.SkSL::ProgramElement"* %213 to %"class.SkSL::VarDeclaration"**
  %215 = load %"class.SkSL::VarDeclaration"*, %"class.SkSL::VarDeclaration"** %214, align 8
  %216 = getelementptr inbounds %"class.SkSL::VarDeclaration", %"class.SkSL::VarDeclaration"* %215, i64 0, i32 1
  %217 = load %"class.SkSL::Variable"*, %"class.SkSL::Variable"** %216, align 8
  %218 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %217, i64 0, i32 0, i32 2
  %219 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %218, align 8
  %220 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %219, i64 0, i32 3
  %221 = load i32, i32* %220, align 8
  %222 = add i32 %221, -13
  %223 = icmp ult i32 %222, 2
  br i1 %223, label %224, label %306

224:                                              ; preds = %212
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %184) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #14
  %225 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %217, i64 0, i32 0, i32 1, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %217, i64 0, i32 0, i32 1, i32 1
  %228 = load i64, i64* %227, align 8
  call void @_ZN8SkStringC1EPKcm(%class.SkString* nonnull %48, i8* %226, i64 %228) #14
  %229 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %184, %class.SkString* nonnull dereferenceable(8) %48) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %48) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #14
  %230 = load i32, i32* %220, align 8
  switch i32 %230, label %232 [
    i32 13, label %233
    i32 14, label %231
  ]

231:                                              ; preds = %224
  br label %233

232:                                              ; preds = %224
  call void @llvm.trap() #14
  unreachable

233:                                              ; preds = %224, %231
  %234 = phi i32 [ 0, %231 ], [ 1, %224 ]
  store i32 %234, i32* %185, align 8
  %235 = load i64, i64* %188, align 8
  %236 = load i64, i64* %189, align 8
  %237 = sub i64 %235, %236
  %238 = lshr exact i64 %237, 4
  %239 = trunc i64 %238 to i32
  store i32 %239, i32* %186, align 4
  %240 = inttoptr i64 %235 to %"struct.SkRuntimeEffect::Child"*
  %241 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %109, align 8
  %242 = icmp eq %"struct.SkRuntimeEffect::Child"* %241, %240
  br i1 %242, label %250, label %243

243:                                              ; preds = %233
  %244 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %240, i64 0, i32 0
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %244, %class.SkString* nonnull dereferenceable(8) %184) #14
  %245 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %240, i64 0, i32 1
  %246 = bitcast i32* %245 to i64*
  %247 = load i64, i64* %190, align 8
  store i64 %247, i64* %246, align 8
  %248 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %240, i64 1
  %249 = ptrtoint %"struct.SkRuntimeEffect::Child"* %248 to i64
  store i64 %249, i64* %188, align 8
  br label %251

250:                                              ; preds = %233
  call void @_ZNSt3__16vectorIN15SkRuntimeEffect5ChildENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.219"* nonnull %44, %"struct.SkRuntimeEffect::Child"* nonnull dereferenceable(16) %47) #14
  br label %251

251:                                              ; preds = %243, %250
  %252 = call i64 @_ZN4SkSL8Analysis14GetSampleUsageERKNS_7ProgramERKNS_8VariableEbPi(%"struct.SkSL::Program"* dereferenceable(128) %2, %"class.SkSL::Variable"* dereferenceable(64) %217, i1 zeroext %99, i32* nonnull %46) #14
  %253 = load %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"** %112, align 8
  %254 = load %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"** %113, align 8
  %255 = icmp ult %"struct.SkSL::SampleUsage"* %253, %254
  %256 = ptrtoint %"struct.SkSL::SampleUsage"* %254 to i64
  br i1 %255, label %257, label %261

257:                                              ; preds = %251
  %258 = bitcast %"struct.SkSL::SampleUsage"* %253 to i64*
  store i64 %252, i64* %258, align 4
  %259 = getelementptr inbounds %"struct.SkSL::SampleUsage", %"struct.SkSL::SampleUsage"* %253, i64 1
  %260 = ptrtoint %"struct.SkSL::SampleUsage"* %259 to i64
  store i64 %260, i64* %191, align 8
  br label %305

261:                                              ; preds = %251
  %262 = ptrtoint %"struct.SkSL::SampleUsage"* %253 to i64
  %263 = load i64, i64* %192, align 8
  %264 = sub i64 %262, %263
  %265 = ashr exact i64 %264, 3
  %266 = add nsw i64 %265, 1
  %267 = icmp ugt i64 %266, 2305843009213693951
  br i1 %267, label %268, label %270

268:                                              ; preds = %261
  %269 = bitcast %"class.std::__1::vector.226"* %45 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %269) #16
  unreachable

270:                                              ; preds = %261
  %271 = sub i64 %256, %263
  %272 = ashr exact i64 %271, 3
  %273 = icmp ult i64 %272, 1152921504606846975
  br i1 %273, label %274, label %282

274:                                              ; preds = %270
  %275 = ashr exact i64 %271, 2
  %276 = icmp ult i64 %275, %266
  %277 = select i1 %276, i64 %266, i64 %275
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %287, label %279

279:                                              ; preds = %274
  %280 = icmp ugt i64 %277, 2305843009213693951
  br i1 %280, label %281, label %282

281:                                              ; preds = %279
  call void @abort() #16
  unreachable

282:                                              ; preds = %279, %270
  %283 = phi i64 [ %277, %279 ], [ 2305843009213693951, %270 ]
  %284 = shl i64 %283, 3
  %285 = call i8* @_Znwm(i64 %284) #15
  %286 = bitcast i8* %285 to %"struct.SkSL::SampleUsage"*
  br label %287

287:                                              ; preds = %282, %274
  %288 = phi i64 [ %283, %282 ], [ 0, %274 ]
  %289 = phi i8* [ %285, %282 ], [ null, %274 ]
  %290 = phi %"struct.SkSL::SampleUsage"* [ %286, %282 ], [ null, %274 ]
  %291 = getelementptr inbounds %"struct.SkSL::SampleUsage", %"struct.SkSL::SampleUsage"* %290, i64 %265
  %292 = getelementptr inbounds %"struct.SkSL::SampleUsage", %"struct.SkSL::SampleUsage"* %290, i64 %288
  %293 = ptrtoint %"struct.SkSL::SampleUsage"* %292 to i64
  %294 = bitcast %"struct.SkSL::SampleUsage"* %291 to i64*
  store i64 %252, i64* %294, align 4
  %295 = getelementptr inbounds %"struct.SkSL::SampleUsage", %"struct.SkSL::SampleUsage"* %291, i64 1
  %296 = ptrtoint %"struct.SkSL::SampleUsage"* %295 to i64
  %297 = ptrtoint %"struct.SkSL::SampleUsage"* %290 to i64
  %298 = icmp sgt i64 %264, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %287
  %300 = inttoptr i64 %263 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %289, i8* align 4 %300, i64 %264, i1 false) #14
  br label %301

301:                                              ; preds = %299, %287
  store i64 %297, i64* %192, align 8
  store i64 %296, i64* %191, align 8
  store i64 %293, i64* %193, align 8
  %302 = icmp eq i64 %263, 0
  br i1 %302, label %305, label %303

303:                                              ; preds = %301
  %304 = inttoptr i64 %263 to i8*
  call void @_ZdlPv(i8* %304) #15
  br label %305

305:                                              ; preds = %257, %301, %303
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %184) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #14
  br label %558

306:                                              ; preds = %212
  %307 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %217, i64 0, i32 2
  %308 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %307, align 8
  %309 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %308, i64 0, i32 1
  %310 = load i32, i32* %309, align 8
  %311 = and i32 %310, 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %558, label %313

313:                                              ; preds = %306
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 32, i1 false)
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %131) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #14
  %314 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %217, i64 0, i32 0, i32 1, i32 0
  %315 = load i8*, i8** %314, align 8
  %316 = getelementptr inbounds %"class.SkSL::Variable", %"class.SkSL::Variable"* %217, i64 0, i32 0, i32 1, i32 1
  %317 = load i64, i64* %316, align 8
  call void @_ZN8SkStringC1EPKcm(%class.SkString* nonnull %50, i8* %315, i64 %317) #14
  %318 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* nonnull %131, %class.SkString* nonnull dereferenceable(8) %50) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %50) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #14
  store i32 0, i32* %135, align 8
  store i32 1, i32* %134, align 4
  %319 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %218, align 8
  %320 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %319, i64 0, i32 3
  %321 = load i32, i32* %320, align 8
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %330

323:                                              ; preds = %313
  store i32 1, i32* %135, align 8
  %324 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %319, i64 0, i32 8
  %325 = load i32, i32* %324, align 8
  store i32 %325, i32* %134, align 4
  %326 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %319, i64 0, i32 6
  %327 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %326, align 8
  %328 = icmp eq %"class.SkSL::Type"* %327, null
  %329 = select i1 %328, %"class.SkSL::Type"* %319, %"class.SkSL::Type"* %327
  br label %330

330:                                              ; preds = %323, %313
  %331 = phi %"class.SkSL::Type"* [ %329, %323 ], [ %319, %313 ]
  %332 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %137, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #14
  %333 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %331, i64 0, i32 0, i32 1, i32 0
  %334 = bitcast i8** %333 to <2 x i64>*
  %335 = load <2 x i64>, <2 x i64>* %334, align 8
  store <2 x i64> %335, <2 x i64>* %38, align 16
  %336 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %332, i64 0, i32 0, i32 1, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %332, i64 0, i32 0, i32 1, i32 1
  %339 = load i64, i64* %338, align 8
  %340 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %39, i8* %337, i64 %339) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #14
  br i1 %340, label %529, label %341

341:                                              ; preds = %330
  %342 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %139, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #14
  %343 = bitcast i8** %333 to <2 x i64>*
  %344 = load <2 x i64>, <2 x i64>* %343, align 8
  store <2 x i64> %344, <2 x i64>* %34, align 16
  %345 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %342, i64 0, i32 0, i32 1, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %342, i64 0, i32 0, i32 1, i32 1
  %348 = load i64, i64* %347, align 8
  %349 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %35, i8* %346, i64 %348) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #14
  br i1 %349, label %529, label %350

350:                                              ; preds = %341
  %351 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %141, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #14
  %352 = bitcast i8** %333 to <2 x i64>*
  %353 = load <2 x i64>, <2 x i64>* %352, align 8
  store <2 x i64> %353, <2 x i64>* %30, align 16
  %354 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %351, i64 0, i32 0, i32 1, i32 0
  %355 = load i8*, i8** %354, align 8
  %356 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %351, i64 0, i32 0, i32 1, i32 1
  %357 = load i64, i64* %356, align 8
  %358 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %31, i8* %355, i64 %357) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #14
  br i1 %358, label %529, label %359

359:                                              ; preds = %350
  %360 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #14
  %361 = bitcast i8** %333 to <2 x i64>*
  %362 = load <2 x i64>, <2 x i64>* %361, align 8
  store <2 x i64> %362, <2 x i64>* %26, align 16
  %363 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %360, i64 0, i32 0, i32 1, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %360, i64 0, i32 0, i32 1, i32 1
  %366 = load i64, i64* %365, align 8
  %367 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %27, i8* %364, i64 %366) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #14
  br i1 %367, label %529, label %368

368:                                              ; preds = %359
  %369 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %145, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #14
  %370 = bitcast i8** %333 to <2 x i64>*
  %371 = load <2 x i64>, <2 x i64>* %370, align 8
  store <2 x i64> %371, <2 x i64>* %22, align 16
  %372 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %369, i64 0, i32 0, i32 1, i32 0
  %373 = load i8*, i8** %372, align 8
  %374 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %369, i64 0, i32 0, i32 1, i32 1
  %375 = load i64, i64* %374, align 8
  %376 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %23, i8* %373, i64 %375) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #14
  br i1 %376, label %529, label %377

377:                                              ; preds = %368
  %378 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %147, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #14
  %379 = bitcast i8** %333 to <2 x i64>*
  %380 = load <2 x i64>, <2 x i64>* %379, align 8
  store <2 x i64> %380, <2 x i64>* %18, align 16
  %381 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %378, i64 0, i32 0, i32 1, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %378, i64 0, i32 0, i32 1, i32 1
  %384 = load i64, i64* %383, align 8
  %385 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %19, i8* %382, i64 %384) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #14
  br i1 %385, label %529, label %386

386:                                              ; preds = %377
  %387 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %149, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #14
  %388 = bitcast i8** %333 to <2 x i64>*
  %389 = load <2 x i64>, <2 x i64>* %388, align 8
  store <2 x i64> %389, <2 x i64>* %14, align 16
  %390 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %387, i64 0, i32 0, i32 1, i32 0
  %391 = load i8*, i8** %390, align 8
  %392 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %387, i64 0, i32 0, i32 1, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %15, i8* %391, i64 %393) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #14
  br i1 %394, label %529, label %395

395:                                              ; preds = %386
  %396 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %151, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #14
  %397 = bitcast i8** %333 to <2 x i64>*
  %398 = load <2 x i64>, <2 x i64>* %397, align 8
  store <2 x i64> %398, <2 x i64>* %10, align 16
  %399 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %396, i64 0, i32 0, i32 1, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %396, i64 0, i32 0, i32 1, i32 1
  %402 = load i64, i64* %401, align 8
  %403 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %11, i8* %400, i64 %402) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #14
  br i1 %403, label %529, label %404

404:                                              ; preds = %395
  %405 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %153, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #14
  %406 = bitcast i8** %333 to <2 x i64>*
  %407 = load <2 x i64>, <2 x i64>* %406, align 8
  store <2 x i64> %407, <2 x i64>* %6, align 16
  %408 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %405, i64 0, i32 0, i32 1, i32 0
  %409 = load i8*, i8** %408, align 8
  %410 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %405, i64 0, i32 0, i32 1, i32 1
  %411 = load i64, i64* %410, align 8
  %412 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %7, i8* %409, i64 %411) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #14
  br i1 %412, label %529, label %413

413:                                              ; preds = %404
  %414 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %155, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #14
  %415 = bitcast i8** %333 to <2 x i64>*
  %416 = load <2 x i64>, <2 x i64>* %415, align 8
  store <2 x i64> %416, <2 x i64>* %8, align 16
  %417 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %414, i64 0, i32 0, i32 1, i32 0
  %418 = load i8*, i8** %417, align 8
  %419 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %414, i64 0, i32 0, i32 1, i32 1
  %420 = load i64, i64* %419, align 8
  %421 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %9, i8* %418, i64 %420) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #14
  br i1 %421, label %529, label %422

422:                                              ; preds = %413
  %423 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %157, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #14
  %424 = bitcast i8** %333 to <2 x i64>*
  %425 = load <2 x i64>, <2 x i64>* %424, align 8
  store <2 x i64> %425, <2 x i64>* %12, align 16
  %426 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %423, i64 0, i32 0, i32 1, i32 0
  %427 = load i8*, i8** %426, align 8
  %428 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %423, i64 0, i32 0, i32 1, i32 1
  %429 = load i64, i64* %428, align 8
  %430 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %13, i8* %427, i64 %429) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #14
  br i1 %430, label %529, label %431

431:                                              ; preds = %422
  %432 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %159, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %160) #14
  %433 = bitcast i8** %333 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8
  store <2 x i64> %434, <2 x i64>* %16, align 16
  %435 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %432, i64 0, i32 0, i32 1, i32 0
  %436 = load i8*, i8** %435, align 8
  %437 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %432, i64 0, i32 0, i32 1, i32 1
  %438 = load i64, i64* %437, align 8
  %439 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %17, i8* %436, i64 %438) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %160) #14
  br i1 %439, label %529, label %440

440:                                              ; preds = %431
  %441 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %161, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #14
  %442 = bitcast i8** %333 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8
  store <2 x i64> %443, <2 x i64>* %20, align 16
  %444 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %441, i64 0, i32 0, i32 1, i32 0
  %445 = load i8*, i8** %444, align 8
  %446 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %441, i64 0, i32 0, i32 1, i32 1
  %447 = load i64, i64* %446, align 8
  %448 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %21, i8* %445, i64 %447) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #14
  br i1 %448, label %529, label %449

449:                                              ; preds = %440
  %450 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %163, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #14
  %451 = bitcast i8** %333 to <2 x i64>*
  %452 = load <2 x i64>, <2 x i64>* %451, align 8
  store <2 x i64> %452, <2 x i64>* %24, align 16
  %453 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %450, i64 0, i32 0, i32 1, i32 0
  %454 = load i8*, i8** %453, align 8
  %455 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %450, i64 0, i32 0, i32 1, i32 1
  %456 = load i64, i64* %455, align 8
  %457 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %25, i8* %454, i64 %456) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #14
  br i1 %457, label %529, label %458

458:                                              ; preds = %449
  %459 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %165, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %166) #14
  %460 = bitcast i8** %333 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 8
  store <2 x i64> %461, <2 x i64>* %28, align 16
  %462 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %459, i64 0, i32 0, i32 1, i32 0
  %463 = load i8*, i8** %462, align 8
  %464 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %459, i64 0, i32 0, i32 1, i32 1
  %465 = load i64, i64* %464, align 8
  %466 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %29, i8* %463, i64 %465) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %166) #14
  br i1 %466, label %529, label %467

467:                                              ; preds = %458
  %468 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %167, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #14
  %469 = bitcast i8** %333 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 8
  store <2 x i64> %470, <2 x i64>* %32, align 16
  %471 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %468, i64 0, i32 0, i32 1, i32 0
  %472 = load i8*, i8** %471, align 8
  %473 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %468, i64 0, i32 0, i32 1, i32 1
  %474 = load i64, i64* %473, align 8
  %475 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %33, i8* %472, i64 %474) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #14
  br i1 %475, label %529, label %476

476:                                              ; preds = %467
  %477 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %169, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #14
  %478 = bitcast i8** %333 to <2 x i64>*
  %479 = load <2 x i64>, <2 x i64>* %478, align 8
  store <2 x i64> %479, <2 x i64>* %36, align 16
  %480 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %477, i64 0, i32 0, i32 1, i32 0
  %481 = load i8*, i8** %480, align 8
  %482 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %477, i64 0, i32 0, i32 1, i32 1
  %483 = load i64, i64* %482, align 8
  %484 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %37, i8* %481, i64 %483) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #14
  br i1 %484, label %529, label %485

485:                                              ; preds = %476
  %486 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %171, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #14
  %487 = bitcast i8** %333 to <2 x i64>*
  %488 = load <2 x i64>, <2 x i64>* %487, align 8
  store <2 x i64> %488, <2 x i64>* %40, align 16
  %489 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %486, i64 0, i32 0, i32 1, i32 0
  %490 = load i8*, i8** %489, align 8
  %491 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %486, i64 0, i32 0, i32 1, i32 1
  %492 = load i64, i64* %491, align 8
  %493 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %41, i8* %490, i64 %492) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #14
  br i1 %493, label %529, label %494

494:                                              ; preds = %485
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %173, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %175) #14
  %495 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %331, i64 0, i32 18
  %496 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %495, align 8, !noalias !10
  %497 = icmp eq %"class.SkSL::Type"* %496, null
  %498 = select i1 %497, %"class.SkSL::Type"* %331, %"class.SkSL::Type"* %496
  %499 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %498, i64 0, i32 0, i32 1, i32 0
  %500 = load i8*, i8** %499, align 8, !noalias !10
  %501 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %498, i64 0, i32 0, i32 1, i32 1
  %502 = load i64, i64* %501, align 8, !noalias !10
  %503 = icmp ugt i64 %502, -17
  br i1 %503, label %504, label %506

504:                                              ; preds = %494
  %505 = bitcast %"class.SkSL::String"* %51 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %505) #16
  unreachable

506:                                              ; preds = %494
  %507 = icmp ult i64 %502, 23
  br i1 %507, label %513, label %508

508:                                              ; preds = %506
  %509 = add nuw i64 %502, 16
  %510 = and i64 %509, -16
  %511 = call i8* @_Znwm(i64 %510) #15
  store i8* %511, i8** %176, align 8, !alias.scope !10
  %512 = or i64 %510, -9223372036854775808
  store i64 %512, i64* %177, align 8, !alias.scope !10
  store i64 %502, i64* %178, align 8, !alias.scope !10
  br label %516

513:                                              ; preds = %506
  %514 = trunc i64 %502 to i8
  store i8 %514, i8* %180, align 1, !alias.scope !10
  %515 = icmp eq i64 %502, 0
  br i1 %515, label %518, label %516

516:                                              ; preds = %513, %508
  %517 = phi i8* [ %511, %508 ], [ %175, %513 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %517, i8* align 1 %500, i64 %502, i1 false) #14
  br label %518

518:                                              ; preds = %513, %516
  %519 = phi i8* [ %175, %513 ], [ %517, %516 ]
  %520 = getelementptr inbounds i8, i8* %519, i64 %502
  store i8 0, i8* %520, align 1
  %521 = load i8, i8* %180, align 1
  %522 = icmp slt i8 %521, 0
  %523 = load i8*, i8** %176, align 8
  %524 = select i1 %522, i8* %523, i8* %175
  call void (%class.SkString*, i8*, ...) @_Z14SkStringPrintfPKcz(%class.SkString* sret %174, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %524) #14
  %525 = load i8, i8* %180, align 1
  %526 = icmp slt i8 %525, 0
  br i1 %526, label %527, label %582

527:                                              ; preds = %518
  %528 = load i8*, i8** %176, align 8
  call void @_ZdlPv(i8* %528) #15
  br label %582

529:                                              ; preds = %485, %476, %467, %458, %449, %440, %431, %422, %413, %404, %395, %386, %377, %368, %359, %350, %341, %330
  %530 = phi i32 [ 0, %330 ], [ 0, %341 ], [ 1, %350 ], [ 1, %359 ], [ 2, %368 ], [ 2, %377 ], [ 3, %386 ], [ 3, %395 ], [ 4, %404 ], [ 4, %413 ], [ 5, %422 ], [ 5, %431 ], [ 6, %440 ], [ 6, %449 ], [ 7, %458 ], [ 8, %467 ], [ 9, %476 ], [ 10, %485 ]
  store i32 %530, i32* %133, align 8
  %531 = load %"struct.SkSL::Modifiers"*, %"struct.SkSL::Modifiers"** %307, align 8
  %532 = getelementptr inbounds %"struct.SkSL::Modifiers", %"struct.SkSL::Modifiers"* %531, i64 0, i32 0, i32 0
  %533 = load i32, i32* %532, align 8
  %534 = and i32 %533, 8
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %539, label %536

536:                                              ; preds = %529
  %537 = load i32, i32* %135, align 8
  %538 = or i32 %537, 2
  store i32 %538, i32* %135, align 8
  br label %539

539:                                              ; preds = %529, %536
  store i64 %203, i64* %132, align 8
  %540 = zext i32 %530 to i64
  %541 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %540
  %542 = load i64, i64* %541, align 8
  %543 = load i32, i32* %134, align 4
  %544 = sext i32 %543 to i64
  %545 = mul nsw i64 %542, %544
  %546 = add i64 %545, %203
  %547 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %104, align 8
  %548 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %105, align 8
  %549 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %547, %548
  br i1 %549, label %556, label %550

550:                                              ; preds = %539
  %551 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %547, i64 0, i32 0
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %551, %class.SkString* nonnull dereferenceable(8) %131) #14
  %552 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %547, i64 0, i32 1
  %553 = bitcast i64* %552 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %553, i8* align 8 %181, i64 20, i1 false) #14
  %554 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %547, i64 1
  %555 = ptrtoint %"struct.SkRuntimeEffect::Uniform"* %554 to i64
  store i64 %555, i64* %182, align 8
  br label %557

556:                                              ; preds = %539
  call void @_ZNSt3__16vectorIN15SkRuntimeEffect7UniformENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.212"* nonnull %43, %"struct.SkRuntimeEffect::Uniform"* nonnull dereferenceable(32) %49) #14
  br label %557

557:                                              ; preds = %550, %556
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %131) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #14
  br label %558

558:                                              ; preds = %557, %306, %305, %199
  %559 = phi i64 [ %203, %199 ], [ %203, %305 ], [ %203, %306 ], [ %546, %557 ]
  %560 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %202, i64 1
  %561 = ptrtoint %"class.std::__1::unique_ptr.110"* %560 to i64
  %562 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %201, i64 1
  %563 = ptrtoint %"class.SkSL::ProgramElement"** %562 to i64
  %564 = select i1 %200, i64 %205, i64 %563
  %565 = select i1 %200, i64 %561, i64 %204
  %566 = inttoptr i64 %565 to %"class.std::__1::unique_ptr.110"*
  %567 = icmp eq %"class.std::__1::unique_ptr.110"* %129, %566
  %568 = inttoptr i64 %564 to %"class.SkSL::ProgramElement"**
  %569 = icmp eq %"class.SkSL::ProgramElement"** %128, %568
  %570 = and i1 %569, %567
  br i1 %570, label %571, label %199

571:                                              ; preds = %558, %97
  %572 = load i32, i32* %46, align 4
  %573 = icmp ne i32 %572, %94
  %574 = or i1 %99, %573
  %575 = and i1 %101, %574
  %576 = zext i1 %575 to i32
  %577 = or i32 %98, %576
  %578 = call i8* @_Znwm(i64 128) #15
  %579 = bitcast i8* %578 to %class.SkRuntimeEffect*
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %52, %class.SkString* dereferenceable(8) %1) #14
  call void @_ZN15SkRuntimeEffectC2E8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsERKNS3_18FunctionDefinitionEONS1_6vectorINS_7UniformENS1_9allocatorISF_EEEEONSE_INS_5ChildENSG_ISK_EEEEONSE_INS3_11SampleUsageENSG_ISO_EEEEj(%class.SkRuntimeEffect* nonnull %579, %class.SkString* nonnull %52, %"struct.SkSL::Program"* %2, %"struct.SkRuntimeEffect::Options"* dereferenceable(2) %3, %"class.SkSL::FunctionDefinition"* nonnull dereferenceable(88) %56, %"class.std::__1::vector.212"* nonnull dereferenceable(24) %43, %"class.std::__1::vector.219"* nonnull dereferenceable(24) %44, %"class.std::__1::vector.226"* nonnull dereferenceable(24) %45, i32 %577)
  %580 = ptrtoint i8* %578 to i64
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %52) #14
  %581 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i64*
  store i64 %580, i64* %581, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* %174) #14
  br label %583

582:                                              ; preds = %518, %527
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %175) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %131) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #14
  br label %583

583:                                              ; preds = %582, %571
  %584 = phi i64 [ 0, %571 ], [ %53, %582 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #14
  %585 = load %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"** %111, align 8
  %586 = icmp eq %"struct.SkSL::SampleUsage"* %585, null
  br i1 %586, label %590, label %587

587:                                              ; preds = %583
  %588 = ptrtoint %"struct.SkSL::SampleUsage"* %585 to i64
  store i64 %588, i64* %191, align 8
  %589 = bitcast %"struct.SkSL::SampleUsage"* %585 to i8*
  call void @_ZdlPv(i8* %589) #15
  br label %590

590:                                              ; preds = %583, %587
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #14
  %591 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %107, align 8
  %592 = icmp eq %"struct.SkRuntimeEffect::Child"* %591, null
  br i1 %592, label %607, label %593

593:                                              ; preds = %590
  %594 = bitcast %"struct.SkRuntimeEffect::Child"* %591 to i8*
  %595 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %108, align 8
  %596 = icmp eq %"struct.SkRuntimeEffect::Child"* %595, %591
  br i1 %596, label %605, label %597

597:                                              ; preds = %593, %597
  %598 = phi %"struct.SkRuntimeEffect::Child"* [ %599, %597 ], [ %595, %593 ]
  %599 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %598, i64 -1
  %600 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %599, i64 0, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* %600) #14
  %601 = icmp eq %"struct.SkRuntimeEffect::Child"* %599, %591
  br i1 %601, label %602, label %597

602:                                              ; preds = %597
  %603 = bitcast %"class.std::__1::vector.219"* %44 to i8**
  %604 = load i8*, i8** %603, align 8
  br label %605

605:                                              ; preds = %602, %593
  %606 = phi i8* [ %604, %602 ], [ %594, %593 ]
  store %"struct.SkRuntimeEffect::Child"* %591, %"struct.SkRuntimeEffect::Child"** %108, align 8
  call void @_ZdlPv(i8* %606) #15
  br label %607

607:                                              ; preds = %590, %605
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #14
  %608 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %103, align 8
  %609 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %608, null
  br i1 %609, label %624, label %610

610:                                              ; preds = %607
  %611 = bitcast %"struct.SkRuntimeEffect::Uniform"* %608 to i8*
  %612 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %104, align 8
  %613 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %612, %608
  br i1 %613, label %622, label %614

614:                                              ; preds = %610, %614
  %615 = phi %"struct.SkRuntimeEffect::Uniform"* [ %616, %614 ], [ %612, %610 ]
  %616 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %615, i64 -1
  %617 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %616, i64 0, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* %617) #14
  %618 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %616, %608
  br i1 %618, label %619, label %614

619:                                              ; preds = %614
  %620 = bitcast %"class.std::__1::vector.212"* %43 to i8**
  %621 = load i8*, i8** %620, align 8
  br label %622

622:                                              ; preds = %619, %610
  %623 = phi i8* [ %621, %619 ], [ %611, %610 ]
  store %"struct.SkRuntimeEffect::Uniform"* %608, %"struct.SkRuntimeEffect::Uniform"** %104, align 8
  call void @_ZdlPv(i8* %623) #15
  br label %624

624:                                              ; preds = %607, %622
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #14
  br label %625

625:                                              ; preds = %624, %58
  %626 = phi i64 [ %53, %58 ], [ %584, %624 ]
  %627 = load %class.SkMutex*, %class.SkMutex** %55, align 8
  %628 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %627, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %629 = atomicrmw add i32* %628, i32 1 release
  %630 = icmp slt i32 %629, 0
  br i1 %630, label %631, label %633

631:                                              ; preds = %625
  %632 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %627, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %632, i32 1) #14
  br label %633

633:                                              ; preds = %625, %631
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #14
  %634 = icmp eq i64 %626, 0
  br i1 %634, label %638, label %635

635:                                              ; preds = %633
  %636 = inttoptr i64 %626 to %"struct.SkSL::Program"*
  call void @_ZN4SkSL7ProgramD2Ev(%"struct.SkSL::Program"* nonnull %636) #14
  %637 = inttoptr i64 %626 to i8*
  call void @_ZdlPv(i8* %637) #15
  br label %638

638:                                              ; preds = %633, %635
  ret void
}

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect4MakeENSt3__110unique_ptrIN4SkSL7ProgramENS0_14default_deleteIS3_EEEENS2_11ProgramKindE(%"struct.SkRuntimeEffect::Result"* noalias sret, %"struct.SkSL::Program"*, i8 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"struct.SkRuntimeEffect::Options", align 1
  %9 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %10, align 8
  %11 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #14, !alias.scope !13
  %12 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6
  %13 = bitcast %"class.std::__1::vector.108"* %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !16
  %15 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 6, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7
  %17 = bitcast %"class.std::__1::vector.121"* %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !16
  %19 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %1, i64 0, i32 7, i32 0, i32 1
  %20 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %19, align 8, !noalias !16
  %21 = load %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"** %15, align 8, !noalias !19
  %22 = bitcast %"class.SkSL::String"* %4 to i8*
  %23 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.110"*
  %27 = icmp eq %"class.std::__1::unique_ptr.110"* %21, %26
  %28 = inttoptr i64 %18 to %"class.SkSL::ProgramElement"**
  %29 = icmp eq %"class.SkSL::ProgramElement"** %20, %28
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %3
  %32 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %72

33:                                               ; preds = %3, %52
  %34 = phi i1 [ %62, %52 ], [ %29, %3 ]
  %35 = phi %"class.SkSL::ProgramElement"** [ %61, %52 ], [ %28, %3 ]
  %36 = phi %"class.std::__1::unique_ptr.110"* [ %59, %52 ], [ %26, %3 ]
  %37 = phi i64 [ %58, %52 ], [ %18, %3 ]
  %38 = phi i64 [ %57, %52 ], [ %14, %3 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %36, i64 0, i32 0, i32 0, i32 0
  %40 = select i1 %34, %"class.SkSL::ProgramElement"** %39, %"class.SkSL::ProgramElement"** %35
  %41 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %40, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14, !noalias !13
  %42 = getelementptr inbounds %"class.SkSL::ProgramElement", %"class.SkSL::ProgramElement"* %41, i64 0, i32 0
  %43 = bitcast %"class.SkSL::ProgramElement"* %41 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %44 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %44, i64 2
  %46 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %45, align 8
  call void %46(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %42) #14
  %47 = call dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"* nonnull %6, %"class.SkSL::String"* nonnull dereferenceable(24) %4) #14
  %48 = load i8, i8* %24, align 1, !noalias !13
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %33
  %51 = load i8*, i8** %25, align 8, !noalias !13
  call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %50, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14, !noalias !13
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %36, i64 1
  %54 = ptrtoint %"class.std::__1::unique_ptr.110"* %53 to i64
  %55 = getelementptr inbounds %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %35, i64 1
  %56 = ptrtoint %"class.SkSL::ProgramElement"** %55 to i64
  %57 = select i1 %34, i64 %54, i64 %38
  %58 = select i1 %34, i64 %37, i64 %56
  %59 = inttoptr i64 %57 to %"class.std::__1::unique_ptr.110"*
  %60 = icmp eq %"class.std::__1::unique_ptr.110"* %21, %59
  %61 = inttoptr i64 %58 to %"class.SkSL::ProgramElement"**
  %62 = icmp eq %"class.SkSL::ProgramElement"** %20, %61
  %63 = and i1 %60, %62
  br i1 %63, label %64, label %33

64:                                               ; preds = %52
  %65 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp slt i8 %67, 0
  %71 = select i1 %70, i8* %69, i8* %11
  br label %72

72:                                               ; preds = %31, %64
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %32, %31 ], [ %65, %64 ]
  %74 = phi i8* [ %11, %31 ], [ %71, %64 ]
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* %74) #14
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %78, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %7, %class.SkString* nonnull dereferenceable(8) %5) #14
  %82 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %82) #14
  store i8 0, i8* %82, align 1
  %83 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %8, i64 0, i32 1
  store i8 1, i8* %83, align 1
  call void @_ZN15SkRuntimeEffect4MakeE8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsENS3_11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %7, %"struct.SkSL::Program"* %1, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %8, i8 signext %2)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %82) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret void
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare %"class.SkSL::FunctionDefinition"* @_ZN4SkSL19Program_GetFunctionERKNS_7ProgramEPKc(%"struct.SkSL::Program"* dereferenceable(128), i8*) local_unnamed_addr #2

declare { i64, i32 } @_ZNK4SkSL12ProgramUsage3getERKNS_8VariableE(%"class.SkSL::ProgramUsage"*, %"class.SkSL::Variable"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZN4SkSL8Analysis14GetSampleUsageERKNS_7ProgramERKNS_8VariableEbPi(%"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::Variable"* dereferenceable(64), i1 zeroext, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK15SkRuntimeEffect7Uniform11sizeInBytesEv(%"struct.SkRuntimeEffect::Uniform"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 11
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @llvm.trap() #14
  unreachable

6:                                                ; preds = %1
  %7 = sext i32 %3 to i64
  %8 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %7
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = mul nsw i64 %9, %12
  ret i64 %13
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %4, %class.SkString* dereferenceable(8) %1) #14
  call void @_ZN15SkRuntimeEffect4MakeE8SkStringRKNS_7OptionsEN4SkSL11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %4, %"struct.SkRuntimeEffect::Options"* dereferenceable(2) %2, i8 signext 4)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %4, %class.SkString* dereferenceable(8) %1) #14
  call void @_ZN15SkRuntimeEffect4MakeE8SkStringRKNS_7OptionsEN4SkSL11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %4, %"struct.SkRuntimeEffect::Options"* dereferenceable(2) %2, i8 signext 5)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect18MakeForColorFilterENSt3__110unique_ptrIN4SkSL7ProgramENS0_14default_deleteIS3_EEEE(%"struct.SkRuntimeEffect::Result"* noalias sret, %"struct.SkSL::Program"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false)
  tail call void @_ZN15SkRuntimeEffect4MakeENSt3__110unique_ptrIN4SkSL7ProgramENS0_14default_deleteIS3_EEEENS2_11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %"struct.SkSL::Program"* %1, i8 signext 4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect13MakeForShaderENSt3__110unique_ptrIN4SkSL7ProgramENS0_14default_deleteIS3_EEEE(%"struct.SkRuntimeEffect::Result"* noalias sret, %"struct.SkSL::Program"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 16, i1 false)
  tail call void @_ZN15SkRuntimeEffect4MakeENSt3__110unique_ptrIN4SkSL7ProgramENS0_14default_deleteIS3_EEEENS2_11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %"struct.SkSL::Program"* %1, i8 signext 5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.79* noalias nocapture sret, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)* nocapture, %class.SkString*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.Key*
  %6 = alloca %"struct.SkRuntimeEffect::Result", align 8
  %7 = alloca %class.SkString, align 8
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %19, !prof !3

10:                                               ; preds = %3
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_Znwm(i64 16) #15
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %18, align 8
  store i8* %14, i8** bitcast (%class.SkMutex** @_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex) #14
  br label %19

19:                                               ; preds = %10, %13, %3
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %29, !prof !3

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache) #14
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = tail call i8* @_Znwm(i64 40) #15
  %27 = bitcast i8* %26 to i32*
  store i32 11, i32* %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #14
  store i8* %26, i8** bitcast (%class.SkLRUCache** @_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache) #14
  br label %29

29:                                               ; preds = %22, %25, %19
  %30 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = bitcast i64* %4 to i32*
  store i32 -1431655766, i32* %31, align 8
  %32 = getelementptr inbounds %struct.Key, %struct.Key* %5, i64 0, i32 1
  store i32 -1431655766, i32* %32, align 4
  %33 = getelementptr inbounds %class.SkString, %class.SkString* %2, i64 0, i32 0, i32 0
  %34 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %33, align 8
  %35 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %34, i64 0, i32 2
  %36 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %34, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %40 = tail call i32 %39(i8* %35, i64 %38, i32 0) #14
  store i32 %40, i32* %31, align 8
  %41 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %33, align 8
  %42 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %41, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %47 = tail call i32 %46(i8* %42, i64 %45, i32 1) #14
  store i32 %47, i32* %32, align 4
  %48 = load %class.SkMutex*, %class.SkMutex** @_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex, align 8
  %49 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw sub i32* %49, i32 1 acquire
  %51 = icmp slt i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %29
  %53 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %48, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %53) #14
  br label %54

54:                                               ; preds = %29, %52
  %55 = load %class.SkLRUCache*, %class.SkLRUCache** @_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache, align 8
  %56 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %57 = call i32 %56(i8* nonnull %30, i64 8, i32 0) #14
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i32 1, i32 %57
  %60 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %55, i64 0, i32 1, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %140

63:                                               ; preds = %54
  %64 = add nsw i32 %61, -1
  %65 = and i32 %59, %64
  %66 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %55, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %67 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %66, align 8
  %68 = load i32, i32* %31, align 8
  %69 = load i32, i32* %32, align 4
  br label %70

70:                                               ; preds = %89, %63
  %71 = phi i32 [ 0, %63 ], [ %94, %89 ]
  %72 = phi i32 [ %65, %63 ], [ %93, %89 ]
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %67, i64 %73, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %140, label %77

77:                                               ; preds = %70
  %78 = icmp eq i32 %59, %75
  br i1 %78, label %79, label %89

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %67, i64 %73, i32 0
  %81 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %80, align 8
  %82 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %68, %83
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %69, %87
  br i1 %88, label %96, label %89

89:                                               ; preds = %85, %79, %77
  %90 = add nsw i32 %72, -1
  %91 = icmp slt i32 %72, 1
  %92 = select i1 %91, i32 %61, i32 0
  %93 = add nsw i32 %90, %92
  %94 = add nuw nsw i32 %71, 1
  %95 = icmp eq i32 %94, %61
  br i1 %95, label %140, label %70

96:                                               ; preds = %85
  %97 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %80, null
  br i1 %97, label %140, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %55, i64 0, i32 2
  %100 = getelementptr inbounds %class.SkTInternalLList, %class.SkTInternalLList* %99, i64 0, i32 0
  %101 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %100, align 8
  %102 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, %101
  br i1 %102, label %128, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, i64 0, i32 2
  %105 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %104, align 8
  %106 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, i64 0, i32 3
  %107 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %106, align 8
  %108 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %105, null
  %109 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %105, i64 0, i32 3
  %110 = select i1 %108, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %100, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %109
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %107, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %110, align 8
  %111 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %107, null
  %112 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %55, i64 0, i32 2, i32 1
  %113 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %107, i64 0, i32 2
  %114 = select i1 %111, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %112, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %113
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %105, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %114, align 8
  %115 = bitcast %class.SkTInternalLList* %99 to i64*
  %116 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #14
  %117 = load i64, i64* %115, align 8
  %118 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %106 to i64*
  store i64 %117, i64* %118, align 8
  %119 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %100, align 8
  %120 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %103
  %122 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %119, i64 0, i32 2
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %122, align 8
  br label %123

123:                                              ; preds = %121, %103
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %100, align 8
  %124 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %55, i64 0, i32 2, i32 1
  %125 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %124, align 8
  %126 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %125, null
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %124, align 8
  br label %128

128:                                              ; preds = %98, %123, %127
  %129 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %81, i64 0, i32 1
  %130 = icmp eq %class.sk_sp.79* %129, null
  br i1 %130, label %140, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %0, i64 0, i32 0
  %133 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %129, i64 0, i32 0
  %134 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %133, align 8
  %135 = icmp eq %class.SkRuntimeEffect* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %134, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 1 monotonic
  br label %139

139:                                              ; preds = %131, %136
  store %class.SkRuntimeEffect* %134, %class.SkRuntimeEffect** %132, align 8
  br label %140

140:                                              ; preds = %89, %70, %54, %96, %128, %139
  %141 = phi i1 [ false, %139 ], [ true, %128 ], [ true, %96 ], [ true, %54 ], [ true, %70 ], [ true, %89 ]
  %142 = atomicrmw add i32* %49, i32 1 release
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %48, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %145, i32 1) #14
  br label %146

146:                                              ; preds = %140, %144
  br i1 %141, label %147, label %553

147:                                              ; preds = %146
  %148 = bitcast %"struct.SkRuntimeEffect::Result"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148) #14
  %149 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %6, i64 0, i32 0, i32 0
  %150 = bitcast %"struct.SkRuntimeEffect::Result"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %7, %class.SkString* dereferenceable(8) %2) #14
  call void %1(%"struct.SkRuntimeEffect::Result"* nonnull sret %6, %class.SkString* nonnull %7) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #14
  %151 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %149, align 8
  %152 = icmp eq %class.SkRuntimeEffect* %151, null
  br i1 %152, label %153, label %155

153:                                              ; preds = %147
  %154 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %0, i64 0, i32 0
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %154, align 8
  br label %538

155:                                              ; preds = %147
  %156 = load %class.SkMutex*, %class.SkMutex** @_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5mutex, align 8
  %157 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %156, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw sub i32* %157, i32 1 acquire
  %159 = icmp slt i32 %158, 1
  br i1 %159, label %160, label %162

160:                                              ; preds = %155
  %161 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %156, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %161) #14
  br label %162

162:                                              ; preds = %155, %160
  %163 = load %class.SkLRUCache*, %class.SkLRUCache** @_ZZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_E5cache, align 8
  %164 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %149, align 8
  %165 = icmp eq %class.SkRuntimeEffect* %164, null
  br i1 %165, label %169, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %164, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 1 monotonic
  br label %169

169:                                              ; preds = %162, %166
  %170 = ptrtoint %class.SkRuntimeEffect* %164 to i64
  %171 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 1
  %172 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %173 = call i32 %172(i8* nonnull %30, i64 8, i32 0) #14
  %174 = icmp eq i32 %173, 0
  %175 = select i1 %174, i32 1, i32 %173
  %176 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 1, i32 1
  %177 = load i32, i32* %176, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %260

179:                                              ; preds = %169
  %180 = add nsw i32 %177, -1
  %181 = and i32 %175, %180
  %182 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %183 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %182, align 8
  %184 = load i32, i32* %31, align 8
  %185 = load i32, i32* %32, align 4
  br label %186

186:                                              ; preds = %205, %179
  %187 = phi i32 [ 0, %179 ], [ %210, %205 ]
  %188 = phi i32 [ %181, %179 ], [ %209, %205 ]
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %183, i64 %189, i32 1
  %191 = load i32, i32* %190, align 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %260, label %193

193:                                              ; preds = %186
  %194 = icmp eq i32 %175, %191
  br i1 %194, label %195, label %205

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %183, i64 %189, i32 0
  %197 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %196, align 8
  %198 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, i64 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %184, %199
  br i1 %200, label %201, label %205

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, i64 0, i32 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %185, %203
  br i1 %204, label %212, label %205

205:                                              ; preds = %201, %195, %193
  %206 = add nsw i32 %188, -1
  %207 = icmp slt i32 %188, 1
  %208 = select i1 %207, i32 %177, i32 0
  %209 = add nsw i32 %206, %208
  %210 = add nuw nsw i32 %187, 1
  %211 = icmp eq i32 %210, %177
  br i1 %211, label %260, label %186

212:                                              ; preds = %201
  %213 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %196, null
  br i1 %213, label %260, label %214

214:                                              ; preds = %212
  %215 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 2
  %216 = getelementptr inbounds %class.SkTInternalLList, %class.SkTInternalLList* %215, i64 0, i32 0
  %217 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %216, align 8
  %218 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, %217
  br i1 %218, label %244, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, i64 0, i32 2
  %221 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %220, align 8
  %222 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, i64 0, i32 3
  %223 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %222, align 8
  %224 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %221, null
  %225 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %221, i64 0, i32 3
  %226 = select i1 %224, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %216, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %225
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %223, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %226, align 8
  %227 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %223, null
  %228 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 2, i32 1
  %229 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %223, i64 0, i32 2
  %230 = select i1 %227, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %228, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %229
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %221, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %230, align 8
  %231 = bitcast %class.SkTInternalLList* %215 to i64*
  %232 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %220 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 16, i1 false) #14
  %233 = load i64, i64* %231, align 8
  %234 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %222 to i64*
  store i64 %233, i64* %234, align 8
  %235 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %216, align 8
  %236 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %219
  %238 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %235, i64 0, i32 2
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %238, align 8
  br label %239

239:                                              ; preds = %237, %219
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %216, align 8
  %240 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 2, i32 1
  %241 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %240, align 8
  %242 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %241, null
  br i1 %242, label %243, label %244

243:                                              ; preds = %239
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %240, align 8
  br label %244

244:                                              ; preds = %243, %239, %214
  %245 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %197, i64 0, i32 1
  %246 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %245, i64 0, i32 0
  %247 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %246, align 8
  %248 = bitcast %class.sk_sp.79* %245 to i64*
  store i64 %170, i64* %248, align 8
  %249 = icmp eq %class.SkRuntimeEffect* %247, null
  br i1 %249, label %525, label %250

250:                                              ; preds = %244
  %251 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %247, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = atomicrmw add i32* %251, i32 -1 acq_rel
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %254, label %525

254:                                              ; preds = %250
  %255 = bitcast %class.SkRuntimeEffect* %247 to %class.SkRefCntBase*
  %256 = bitcast %class.SkRuntimeEffect* %247 to void (%class.SkRefCntBase*)***
  %257 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %256, align 8
  %258 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %257, i64 2
  %259 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %258, align 8
  call void %259(%class.SkRefCntBase* nonnull %255) #14
  br label %525

260:                                              ; preds = %205, %186, %212, %169
  %261 = call i8* @_Znwm(i64 32) #15
  %262 = bitcast i8* %261 to i64*
  %263 = load i64, i64* %4, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds i8, i8* %261, i64 8
  %265 = bitcast i8* %264 to i64*
  store i64 %170, i64* %265, align 8
  %266 = getelementptr inbounds i8, i8* %261, i64 16
  %267 = bitcast i8* %266 to %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 16, i1 false) #14
  %268 = ptrtoint i8* %261 to i64
  %269 = getelementptr inbounds %class.SkTHashTable.260, %class.SkTHashTable.260* %171, i64 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = shl nsw i32 %270, 2
  %272 = load i32, i32* %176, align 4
  %273 = mul nsw i32 %272, 3
  %274 = icmp slt i32 %271, %273
  br i1 %274, label %279, label %275

275:                                              ; preds = %260
  %276 = icmp sgt i32 %272, 0
  %277 = shl nsw i32 %272, 1
  %278 = select i1 %276, i32 %277, i32 4
  call fastcc void @_ZN12SkTHashTableIPN10SkLRUCacheIZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES3_E3Key5sk_spIS1_E10SkGoodHashE5EntryES6_NSA_6TraitsEE6resizeEi(%class.SkTHashTable.260* %171, i32 %278) #14
  br label %279

279:                                              ; preds = %275, %260
  %280 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %281 = call i32 %280(i8* nonnull %261, i64 8, i32 0) #14
  %282 = icmp eq i32 %281, 0
  %283 = select i1 %282, i32 1, i32 %281
  %284 = load i32, i32* %176, align 4
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %286, label %329

286:                                              ; preds = %279
  %287 = add nsw i32 %284, -1
  %288 = and i32 %283, %287
  %289 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %290 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %289, align 8
  %291 = bitcast i8* %261 to i32*
  %292 = getelementptr inbounds i8, i8* %261, i64 4
  %293 = bitcast i8* %292 to i32*
  br label %294

294:                                              ; preds = %322, %286
  %295 = phi i32 [ 0, %286 ], [ %327, %322 ]
  %296 = phi i32 [ %288, %286 ], [ %326, %322 ]
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %290, i64 %297
  %299 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %290, i64 %297, i32 1
  %300 = load i32, i32* %299, align 8
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %306

302:                                              ; preds = %294
  %303 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %298 to i64*
  store i64 %268, i64* %303, align 8
  store i32 %283, i32* %299, align 8
  %304 = load i32, i32* %269, align 8
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %269, align 8
  br label %329

306:                                              ; preds = %294
  %307 = icmp eq i32 %283, %300
  br i1 %307, label %308, label %322

308:                                              ; preds = %306
  %309 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %298, i64 0, i32 0
  %310 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %309, align 8
  %311 = load i32, i32* %291, align 4
  %312 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %310, i64 0, i32 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %311, %313
  br i1 %314, label %315, label %322

315:                                              ; preds = %308
  %316 = load i32, i32* %293, align 4
  %317 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %310, i64 0, i32 0, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %316, %318
  br i1 %319, label %320, label %322

320:                                              ; preds = %315
  %321 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %298 to i64*
  store i64 %268, i64* %321, align 8
  br label %329

322:                                              ; preds = %315, %308, %306
  %323 = add nsw i32 %296, -1
  %324 = icmp slt i32 %296, 1
  %325 = select i1 %324, i32 %284, i32 0
  %326 = add nsw i32 %323, %325
  %327 = add nuw nsw i32 %295, 1
  %328 = icmp eq i32 %327, %284
  br i1 %328, label %329, label %294

329:                                              ; preds = %322, %320, %302, %279
  %330 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 2
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %267, align 8
  %331 = bitcast %class.SkTInternalLList* %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds i8, i8* %261, i64 24
  %334 = bitcast i8* %333 to i64*
  store i64 %332, i64* %334, align 8
  %335 = icmp eq i64 %332, 0
  br i1 %335, label %340, label %336

336:                                              ; preds = %329
  %337 = inttoptr i64 %332 to %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*
  %338 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %337, i64 0, i32 2
  %339 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %338 to i8**
  store i8* %261, i8** %339, align 8
  br label %340

340:                                              ; preds = %336, %329
  %341 = bitcast %class.SkTInternalLList* %330 to i8**
  store i8* %261, i8** %341, align 8
  %342 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 2, i32 1
  %343 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %342, align 8
  %344 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %343, null
  br i1 %344, label %345, label %348

345:                                              ; preds = %340
  %346 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %342 to i8**
  store i8* %261, i8** %346, align 8
  %347 = bitcast i8* %261 to %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*
  br label %348

348:                                              ; preds = %345, %340
  %349 = phi %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* [ %343, %340 ], [ %347, %345 ]
  %350 = load i32, i32* %269, align 8
  %351 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 0
  %352 = load i32, i32* %351, align 8
  %353 = icmp sgt i32 %350, %352
  br i1 %353, label %354, label %525

354:                                              ; preds = %348
  %355 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0
  %356 = getelementptr inbounds %class.SkLRUCache, %class.SkLRUCache* %163, i64 0, i32 2, i32 0
  br label %357

357:                                              ; preds = %523, %354
  %358 = phi %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* [ %524, %523 ], [ %349, %354 ]
  %359 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %360 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %358 to i8*
  %361 = call i32 %359(i8* %360, i64 8, i32 0) #14
  %362 = icmp eq i32 %361, 0
  %363 = select i1 %362, i32 1, i32 %361
  %364 = load i32, i32* %176, align 4
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %366, label %400

366:                                              ; preds = %357
  %367 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %358, i64 0, i32 0, i32 1
  %368 = add nsw i32 %364, -1
  %369 = and i32 %363, %368
  %370 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %355, align 8
  %371 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %358, i64 0, i32 0, i32 0
  %372 = load i32, i32* %371, align 4
  %373 = load i32, i32* %367, align 4
  br label %374

374:                                              ; preds = %393, %366
  %375 = phi i32 [ 0, %366 ], [ %398, %393 ]
  %376 = phi i32 [ %369, %366 ], [ %397, %393 ]
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %370, i64 %377, i32 1
  %379 = load i32, i32* %378, align 8
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %400, label %381

381:                                              ; preds = %374
  %382 = icmp eq i32 %363, %379
  br i1 %382, label %383, label %393

383:                                              ; preds = %381
  %384 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %370, i64 %377, i32 0
  %385 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %384, align 8
  %386 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %385, i64 0, i32 0, i32 0
  %387 = load i32, i32* %386, align 4
  %388 = icmp eq i32 %372, %387
  br i1 %388, label %389, label %393

389:                                              ; preds = %383
  %390 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %385, i64 0, i32 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = icmp eq i32 %373, %391
  br i1 %392, label %400, label %393

393:                                              ; preds = %389, %383, %381
  %394 = add nsw i32 %376, -1
  %395 = icmp slt i32 %376, 1
  %396 = select i1 %395, i32 %364, i32 0
  %397 = add nsw i32 %394, %396
  %398 = add nuw nsw i32 %375, 1
  %399 = icmp eq i32 %398, %364
  br i1 %399, label %400, label %374

400:                                              ; preds = %393, %389, %374, %357
  %401 = phi %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** [ null, %357 ], [ %384, %389 ], [ null, %374 ], [ null, %393 ]
  %402 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %401, align 8
  %403 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %404 = call i32 %403(i8* %360, i64 8, i32 0) #14
  %405 = icmp eq i32 %404, 0
  %406 = select i1 %405, i32 1, i32 %404
  %407 = load i32, i32* %176, align 4
  %408 = icmp sgt i32 %407, 0
  br i1 %408, label %409, label %490

409:                                              ; preds = %400
  %410 = add nsw i32 %407, -1
  %411 = and i32 %406, %410
  %412 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %355, align 8
  %413 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %358, i64 0, i32 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %358, i64 0, i32 0, i32 1
  %416 = load i32, i32* %415, align 4
  br label %417

417:                                              ; preds = %483, %409
  %418 = phi i32 [ 0, %409 ], [ %488, %483 ]
  %419 = phi i32 [ %411, %409 ], [ %487, %483 ]
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %412, i64 %420, i32 1
  %422 = load i32, i32* %421, align 8
  %423 = icmp eq i32 %406, %422
  br i1 %423, label %424, label %483

424:                                              ; preds = %417
  %425 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %412, i64 %420, i32 0
  %426 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %425, align 8
  %427 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %426, i64 0, i32 0, i32 0
  %428 = load i32, i32* %427, align 4
  %429 = icmp eq i32 %414, %428
  br i1 %429, label %430, label %483

430:                                              ; preds = %424
  %431 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %426, i64 0, i32 0, i32 1
  %432 = load i32, i32* %431, align 4
  %433 = icmp eq i32 %416, %432
  br i1 %433, label %434, label %483

434:                                              ; preds = %430
  %435 = load i32, i32* %269, align 8
  %436 = add nsw i32 %435, -1
  store i32 %436, i32* %269, align 8
  br label %437

437:                                              ; preds = %467, %434
  %438 = phi %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* [ %412, %434 ], [ %471, %467 ]
  %439 = phi i32 [ %419, %434 ], [ %450, %467 ]
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %438, i64 %440
  br label %442

442:                                              ; preds = %466, %437
  %443 = phi i32 [ %439, %437 ], [ %450, %466 ]
  %444 = add nsw i32 %443, -1
  %445 = icmp slt i32 %443, 1
  br i1 %445, label %446, label %449

446:                                              ; preds = %442
  %447 = load i32, i32* %176, align 4
  %448 = add nsw i32 %447, %444
  br label %449

449:                                              ; preds = %446, %442
  %450 = phi i32 [ %448, %446 ], [ %444, %442 ]
  %451 = sext i32 %450 to i64
  %452 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %438, i64 %451, i32 1
  %453 = load i32, i32* %452, align 8
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %472, label %455

455:                                              ; preds = %449
  %456 = load i32, i32* %176, align 4
  %457 = add nsw i32 %456, -1
  %458 = and i32 %457, %453
  %459 = icmp sle i32 %450, %458
  %460 = icmp slt i32 %458, %439
  %461 = and i1 %459, %460
  br i1 %461, label %466, label %462

462:                                              ; preds = %455
  %463 = icmp slt i32 %439, %450
  %464 = or i1 %460, %459
  %465 = and i1 %463, %464
  br i1 %465, label %466, label %467

466:                                              ; preds = %462, %455
  br label %442

467:                                              ; preds = %462
  %468 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %438, i64 %451
  %469 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %441 to i8*
  %470 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %468 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %469, i8* align 8 %470, i64 12, i1 false) #14
  %471 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %355, align 8
  br label %437

472:                                              ; preds = %449
  %473 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %441, i64 0, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %473, align 8
  %474 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %438, i64 %440, i32 1
  store i32 0, i32* %474, align 8
  %475 = load i32, i32* %269, align 8
  %476 = shl nsw i32 %475, 2
  %477 = load i32, i32* %176, align 4
  %478 = icmp sle i32 %476, %477
  %479 = icmp sgt i32 %477, 4
  %480 = and i1 %478, %479
  br i1 %480, label %481, label %490

481:                                              ; preds = %472
  %482 = lshr i32 %477, 1
  call fastcc void @_ZN12SkTHashTableIPN10SkLRUCacheIZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES3_E3Key5sk_spIS1_E10SkGoodHashE5EntryES6_NSA_6TraitsEE6resizeEi(%class.SkTHashTable.260* %171, i32 %482) #14
  br label %490

483:                                              ; preds = %430, %424, %417
  %484 = add nsw i32 %419, -1
  %485 = icmp slt i32 %419, 1
  %486 = select i1 %485, i32 %407, i32 0
  %487 = add nsw i32 %484, %486
  %488 = add nuw nsw i32 %418, 1
  %489 = icmp eq i32 %488, %407
  br i1 %489, label %490, label %417

490:                                              ; preds = %483, %481, %472, %400
  %491 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %402, i64 0, i32 2
  %492 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %491, align 8
  %493 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %402, i64 0, i32 3
  %494 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %493, align 8
  %495 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %492, null
  %496 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %492, i64 0, i32 3
  %497 = select i1 %495, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %356, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %496
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %494, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %497, align 8
  %498 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %494, null
  %499 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %494, i64 0, i32 2
  %500 = select i1 %498, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %342, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %499
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %492, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %500, align 8
  %501 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %491 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %501, i8 0, i64 16, i1 false) #14
  %502 = icmp eq %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %402, null
  br i1 %502, label %519, label %503

503:                                              ; preds = %490
  %504 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %402, i64 0, i32 1, i32 0
  %505 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %504, align 8
  %506 = icmp eq %class.SkRuntimeEffect* %505, null
  br i1 %506, label %517, label %507

507:                                              ; preds = %503
  %508 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %505, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = atomicrmw add i32* %508, i32 -1 acq_rel
  %510 = icmp eq i32 %509, 1
  br i1 %510, label %511, label %517

511:                                              ; preds = %507
  %512 = bitcast %class.SkRuntimeEffect* %505 to %class.SkRefCntBase*
  %513 = bitcast %class.SkRuntimeEffect* %505 to void (%class.SkRefCntBase*)***
  %514 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %513, align 8
  %515 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %514, i64 2
  %516 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %515, align 8
  call void %516(%class.SkRefCntBase* nonnull %512) #14
  br label %517

517:                                              ; preds = %511, %507, %503
  %518 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %402 to i8*
  call void @_ZdlPv(i8* %518) #15
  br label %519

519:                                              ; preds = %517, %490
  %520 = load i32, i32* %269, align 8
  %521 = load i32, i32* %351, align 8
  %522 = icmp sgt i32 %520, %521
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %342, align 8
  br label %357

525:                                              ; preds = %519, %348, %254, %250, %244
  %526 = atomicrmw add i32* %157, i32 1 release
  %527 = icmp slt i32 %526, 0
  br i1 %527, label %528, label %530

528:                                              ; preds = %525
  %529 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %156, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %529, i32 1) #14
  br label %530

530:                                              ; preds = %525, %528
  %531 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %0, i64 0, i32 0
  %532 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %149, align 8
  %533 = icmp eq %class.SkRuntimeEffect* %532, null
  br i1 %533, label %537, label %534

534:                                              ; preds = %530
  %535 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %532, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = atomicrmw add i32* %535, i32 1 monotonic
  br label %537

537:                                              ; preds = %530, %534
  store %class.SkRuntimeEffect* %532, %class.SkRuntimeEffect** %531, align 8
  br label %538

538:                                              ; preds = %537, %153
  %539 = getelementptr inbounds %"struct.SkRuntimeEffect::Result", %"struct.SkRuntimeEffect::Result"* %6, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %539) #14
  %540 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %149, align 8
  %541 = icmp eq %class.SkRuntimeEffect* %540, null
  br i1 %541, label %552, label %542

542:                                              ; preds = %538
  %543 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %540, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = atomicrmw add i32* %543, i32 -1 acq_rel
  %545 = icmp eq i32 %544, 1
  br i1 %545, label %546, label %552

546:                                              ; preds = %542
  %547 = bitcast %class.SkRuntimeEffect* %540 to %class.SkRefCntBase*
  %548 = bitcast %class.SkRuntimeEffect* %540 to void (%class.SkRefCntBase*)***
  %549 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %548, align 8
  %550 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %549, i64 2
  %551 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %550, align 8
  call void %551(%class.SkRefCntBase* nonnull %547) #14
  br label %552

552:                                              ; preds = %538, %542, %546
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148) #14
  br label %553

553:                                              ; preds = %146, %552
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffectC2E8SkStringNSt3__110unique_ptrIN4SkSL7ProgramENS1_14default_deleteIS4_EEEERKNS_7OptionsERKNS3_18FunctionDefinitionEONS1_6vectorINS_7UniformENS1_9allocatorISF_EEEEONSE_INS_5ChildENSG_ISK_EEEEONSE_INS3_11SampleUsageENSG_ISO_EEEEj(%class.SkRuntimeEffect*, %class.SkString*, %"struct.SkSL::Program"*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2), %"class.SkSL::FunctionDefinition"* dereferenceable(88), %"class.std::__1::vector.212"* nocapture dereferenceable(24), %"class.std::__1::vector.219"* nocapture dereferenceable(24), %"class.std::__1::vector.226"* nocapture dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %10 = ptrtoint %"struct.SkSL::Program"* %2 to i64
  %11 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15SkRuntimeEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 1
  %14 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %15, align 8
  %17 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %16, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %16, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = tail call i32 %14(i8* %17, i64 %20, i32 0) #14
  store i32 %21, i32* %13, align 4
  %22 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 2
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %22, %class.SkString* dereferenceable(8) %1) #14
  %23 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 3
  %24 = bitcast %"class.std::__1::unique_ptr.81"* %23 to i64*
  store i64 %10, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 4
  store %"class.SkSL::FunctionDefinition"* %4, %"class.SkSL::FunctionDefinition"** %25, align 8
  %26 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5
  %27 = bitcast %"class.std::__1::vector.212"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #14
  %28 = bitcast %"class.std::__1::vector.212"* %5 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.212"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %5, i64 0, i32 0, i32 1
  %32 = bitcast %"struct.SkRuntimeEffect::Uniform"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 1
  %35 = bitcast %"struct.SkRuntimeEffect::Uniform"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.SkRuntimeEffect::Uniform"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.SkRuntimeEffect::Uniform"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"class.std::__1::vector.212"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  %42 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6
  %43 = bitcast %"class.std::__1::vector.219"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #14
  %44 = bitcast %"class.std::__1::vector.219"* %6 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.219"* %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %6, i64 0, i32 0, i32 1
  %48 = bitcast %"struct.SkRuntimeEffect::Child"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6, i32 0, i32 1
  %51 = bitcast %"struct.SkRuntimeEffect::Child"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast %"struct.SkRuntimeEffect::Child"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"struct.SkRuntimeEffect::Child"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.std::__1::vector.219"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #14
  %58 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 7
  %59 = bitcast %"class.std::__1::vector.226"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #14
  %60 = bitcast %"class.std::__1::vector.226"* %7 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.std::__1::vector.226"* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.226", %"class.std::__1::vector.226"* %7, i64 0, i32 0, i32 1
  %64 = bitcast %"struct.SkSL::SampleUsage"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 7, i32 0, i32 1
  %67 = bitcast %"struct.SkSL::SampleUsage"** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.226", %"class.std::__1::vector.226"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"struct.SkSL::SampleUsage"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %72 = bitcast %"struct.SkSL::SampleUsage"** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast %"class.std::__1::vector.226"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 24, i1 false) #14
  %74 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 8
  %75 = bitcast %"class.std::__1::unique_ptr.233"* %74 to i64*
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 9
  store i32 %8, i32* %76, align 8
  %77 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %78 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %3, i64 0, i32 0
  %79 = load i32, i32* %13, align 4
  %80 = tail call i32 %77(i8* %78, i64 1, i32 %79) #14
  store i32 %80, i32* %13, align 4
  %81 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %82 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %3, i64 0, i32 1
  %83 = tail call i32 %81(i8* %82, i64 1, i32 %80) #14
  store i32 %83, i32* %13, align 4
  %84 = tail call %class.SkFilterColorProgram* @_ZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffect(%class.SkRuntimeEffect* %0)
  %85 = ptrtoint %class.SkFilterColorProgram* %84 to i64
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233"* %74, i64 0, i32 0, i32 0, i32 0
  %87 = load %class.SkFilterColorProgram*, %class.SkFilterColorProgram** %86, align 8
  store i64 %85, i64* %75, align 8
  %88 = icmp eq %class.SkFilterColorProgram* %87, null
  br i1 %88, label %101, label %89

89:                                               ; preds = %9
  %90 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %87, i64 0, i32 1, i32 0, i32 0
  %91 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %90, align 8
  %92 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %91 to i64
  %95 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %87, i64 0, i32 1, i32 0, i32 1
  %96 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"struct.SkFilterColorProgram::SampleCall"* %91 to i8*
  tail call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %93, %89
  %99 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %87, i64 0, i32 0
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %99) #14
  %100 = bitcast %class.SkFilterColorProgram* %87 to i8*
  tail call void @_ZdlPv(i8* %100) #15
  br label %101

101:                                              ; preds = %9, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFilterColorProgram* @_ZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffect(%class.SkRuntimeEffect* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = alloca %"class.skvm::Builder", align 8
  %3 = alloca %"struct.skvm::Uniforms", align 8
  %4 = alloca %"struct.skvm::Color", align 8
  %5 = alloca %"class.std::__1::vector.242", align 16
  %6 = alloca %"class.std::__1::vector.298", align 8
  %7 = alloca %class.anon.305, align 1
  %8 = alloca i8, align 1
  %9 = alloca %"struct.skvm::Uniforms", align 8
  %10 = alloca %"class.std::__1::vector.290", align 16
  %11 = alloca %"struct.skvm::Color", align 8
  %12 = alloca %"struct.skvm::Coord", align 8
  %13 = alloca %"struct.skvm::Coord", align 8
  %14 = alloca %"class.std::__1::function", align 8
  %15 = alloca %"struct.skvm::PixelFormat", align 16
  %16 = alloca %"class.skvm::Program", align 8
  %17 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %362, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.skvm::Builder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 72, i1 false)
  call void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"* nonnull %2) #14
  %23 = bitcast %"struct.skvm::Uniforms"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  %24 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %2, i32 0) #14
  %25 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %3, i64 0, i32 0, i32 0
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %3, i64 0, i32 1
  %27 = bitcast %"class.std::__1::vector.290"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #14
  %28 = bitcast %"struct.skvm::Color"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %28) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 64, i1 false)
  call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* nonnull sret %4, %"class.skvm::Builder"* nonnull %2, <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, %"struct.skvm::Uniforms"* nonnull %3) #14
  %29 = bitcast %"class.std::__1::vector.242"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %5, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %5, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 0, i64 24, i1 false) #14
  %33 = bitcast %"class.std::__1::vector.298"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %6, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 24, i1 false) #14
  %36 = getelementptr inbounds %class.anon.305, %class.anon.305* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #14
  store i8 -86, i8* %36, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #14
  store i8 1, i8* %8, align 1
  %37 = bitcast %"struct.skvm::Uniforms"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 32, i1 false)
  %38 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %2, i32 0) #14
  %39 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 0, i32 0
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1
  %41 = bitcast %"class.std::__1::vector.290"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  %42 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 0
  %43 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %42, align 8
  %44 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 1
  %45 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %44, align 8
  %46 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %43, %45
  br i1 %46, label %65, label %47

47:                                               ; preds = %21
  %48 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %45, i64 -1, i32 2
  %49 = load i32, i32* %48, align 8
  %50 = icmp ult i32 %49, 11
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  call void @llvm.trap() #14
  unreachable

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %45, i64 -1, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = sext i32 %49 to i64
  %56 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %45, i64 -1, i32 3
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %57, %60
  %62 = add i64 %54, 3
  %63 = add i64 %62, %61
  %64 = and i64 %63, -4
  br label %65

65:                                               ; preds = %21, %52
  %66 = phi i64 [ %64, %52 ], [ 0, %21 ]
  %67 = lshr exact i64 %66, 2
  %68 = bitcast %"class.std::__1::vector.290"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #14
  %69 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %10, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %10, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 24, i1 false) #14
  %72 = bitcast i32** %71 to i64*
  %73 = bitcast %"class.std::__1::vector.290"* %10 to i64*
  %74 = icmp eq i64 %66, 0
  %75 = bitcast i32** %70 to i64*
  br i1 %74, label %91, label %76

76:                                               ; preds = %65
  %77 = call i8* @_Znwm(i64 %66) #15
  %78 = bitcast i8* %77 to i32*
  %79 = getelementptr inbounds i32, i32* %78, i64 %67
  %80 = ptrtoint i32* %79 to i64
  %81 = insertelement <2 x i8*> undef, i8* %77, i32 0
  %82 = shufflevector <2 x i8*> %81, <2 x i8*> undef, <2 x i32> zeroinitializer
  %83 = ptrtoint <2 x i8*> %82 to <2 x i64>
  %84 = bitcast %"class.std::__1::vector.290"* %10 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 16
  store i64 %80, i64* %72, align 16
  %85 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast i32** %85 to i64*
  %88 = bitcast %"class.std::__1::vector.290"* %40 to i64*
  %89 = bitcast i32** %86 to i64*
  %90 = bitcast i32** %70 to i64*
  br label %156

91:                                               ; preds = %272, %65
  %92 = phi i64* [ %75, %65 ], [ %90, %272 ]
  %93 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %2, i32 0) #14
  %94 = extractvalue { %"class.skvm::Builder"*, i32 } %93, 0
  %95 = extractvalue { %"class.skvm::Builder"*, i32 } %93, 1
  %96 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* nonnull %2, i32 0) #14
  %97 = extractvalue { %"class.skvm::Builder"*, i32 } %96, 0
  %98 = extractvalue { %"class.skvm::Builder"*, i32 } %96, 1
  %99 = bitcast %"struct.skvm::Color"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %99) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 64, i1 false)
  %100 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %101 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %100, align 8
  %102 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 4
  %103 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %102, align 8
  %104 = load i32*, i32** %69, align 16
  %105 = load i64, i64* %92, align 8
  %106 = ptrtoint i32* %104 to i64
  %107 = sub i64 %105, %106
  %108 = ashr exact i64 %107, 2
  %109 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %12, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* %94, %"class.skvm::Builder"** %109, align 8
  %110 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %12, i64 0, i32 0, i32 1
  store i32 %95, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %12, i64 0, i32 0, i32 2, i64 0
  %112 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %12, i64 0, i32 1, i32 0
  %113 = bitcast i8* %111 to i32*
  store i32 -1431655766, i32* %113, align 4
  store %"class.skvm::Builder"* %97, %"class.skvm::Builder"** %112, align 8
  %114 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %12, i64 0, i32 1, i32 1
  store i32 %98, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %12, i64 0, i32 1, i32 2, i64 0
  %116 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %13, i64 0, i32 0, i32 0
  %117 = bitcast i8* %115 to i32*
  store i32 -1431655766, i32* %117, align 4
  store %"class.skvm::Builder"* %94, %"class.skvm::Builder"** %116, align 8
  %118 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %13, i64 0, i32 0, i32 1
  store i32 %95, i32* %118, align 8
  %119 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %13, i64 0, i32 0, i32 2, i64 0
  %120 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %13, i64 0, i32 1, i32 0
  %121 = bitcast i8* %119 to i32*
  store i32 -1431655766, i32* %121, align 4
  store %"class.skvm::Builder"* %97, %"class.skvm::Builder"** %120, align 8
  %122 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %13, i64 0, i32 1, i32 1
  store i32 %98, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %13, i64 0, i32 1, i32 2, i64 0
  %124 = bitcast i8* %123 to i32*
  store i32 -1431655766, i32* %124, align 4
  %125 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 2
  store void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)* @"_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_", void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)** %125, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %126, align 8
  %127 = call i8* @_Znwm(i64 56) #15, !noalias !22
  %128 = bitcast i8* %127 to %"class.skvm::Builder"**
  store %"class.skvm::Builder"* %2, %"class.skvm::Builder"** %128, align 8
  %129 = getelementptr inbounds i8, i8* %127, i64 8
  %130 = bitcast i8* %129 to %"struct.skvm::Uniforms"**
  store %"struct.skvm::Uniforms"* %3, %"struct.skvm::Uniforms"** %130, align 8
  %131 = getelementptr inbounds i8, i8* %127, i64 16
  %132 = bitcast i8* %131 to %class.anon.305**
  store %class.anon.305* %7, %class.anon.305** %132, align 8
  %133 = getelementptr inbounds i8, i8* %127, i64 24
  %134 = bitcast i8* %133 to %"struct.skvm::Color"**
  store %"struct.skvm::Color"* %4, %"struct.skvm::Color"** %134, align 8
  %135 = getelementptr inbounds i8, i8* %127, i64 32
  %136 = bitcast i8* %135 to %"class.std::__1::vector.298"**
  store %"class.std::__1::vector.298"* %6, %"class.std::__1::vector.298"** %136, align 8
  %137 = getelementptr inbounds i8, i8* %127, i64 40
  %138 = bitcast i8* %137 to i8**
  store i8* %8, i8** %138, align 8
  %139 = getelementptr inbounds i8, i8* %127, i64 48
  %140 = bitcast i8* %139 to %"class.std::__1::vector.242"**
  store %"class.std::__1::vector.242"* %5, %"class.std::__1::vector.242"** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %14, i64 0, i32 0, i32 0, i32 0
  store i8* %127, i8** %141, align 8
  call void @_ZN4SkSL13ProgramToSkVMERKNS_7ProgramERKNS_18FunctionDefinitionEPN4skvm7BuilderE6SkSpanIiENS6_5CoordESB_NS6_5ColorENSt3__18functionIFSC_iSB_SC_EEE(%"struct.skvm::Color"* nonnull sret %11, %"struct.SkSL::Program"* dereferenceable(128) %101, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %103, %"class.skvm::Builder"* nonnull %2, i32* %104, i64 %108, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %12, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %13, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %4, %"class.std::__1::function"* nonnull %14) #14
  %142 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %126, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %142, i64 0, i32 1
  %144 = load void (i8*)*, void (i8*)** %143, align 8
  %145 = icmp eq void (i8*)* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %91
  %147 = load i8*, i8** %141, align 8
  call void %144(i8* %147) #14
  br label %148

148:                                              ; preds = %91, %146
  %149 = bitcast %"struct.skvm::PixelFormat"* %15 to <4 x i32>*
  store <4 x i32> <i32 1, i32 32, i32 32, i32 32>, <4 x i32>* %149, align 16
  %150 = getelementptr inbounds %"struct.skvm::PixelFormat", %"struct.skvm::PixelFormat"* %15, i64 0, i32 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 32, i32 0, i32 32, i32 64>, <4 x i32>* %151, align 16
  %152 = getelementptr inbounds %"struct.skvm::PixelFormat", %"struct.skvm::PixelFormat"* %15, i64 0, i32 8
  store i32 96, i32* %152, align 16
  %153 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %2, i32 16) #14
  call void @_ZN4skvm7Builder5storeENS_11PixelFormatENS_3PtrENS_5ColorE(%"class.skvm::Builder"* nonnull %2, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %15, i32 %153, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %11) #14
  %154 = load i8, i8* %8, align 1, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %298, label %279

156:                                              ; preds = %275, %76
  %157 = phi i64 [ 0, %76 ], [ %278, %275 ]
  %158 = phi i32* [ null, %76 ], [ %277, %275 ]
  %159 = phi i32* [ null, %76 ], [ %276, %275 ]
  %160 = phi i64 [ 0, %76 ], [ %273, %275 ]
  %161 = icmp eq i32* %159, %158
  br i1 %161, label %165, label %162

162:                                              ; preds = %156
  store i32 0, i32* %159, align 4
  %163 = getelementptr inbounds i32, i32* %159, i64 1
  %164 = ptrtoint i32* %163 to i64
  store i64 %164, i64* %87, align 8
  br label %211

165:                                              ; preds = %156
  %166 = ptrtoint i32* %158 to i64
  %167 = load i64, i64* %88, align 8
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 2
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 4611686018427387903
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector.290"* %40 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #16
  unreachable

174:                                              ; preds = %165
  %175 = icmp ult i64 %169, 2305843009213693951
  br i1 %175, label %176, label %184

176:                                              ; preds = %174
  %177 = ashr exact i64 %168, 1
  %178 = icmp ult i64 %177, %170
  %179 = select i1 %178, i64 %170, i64 %177
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %189, label %181

181:                                              ; preds = %176
  %182 = icmp ugt i64 %179, 4611686018427387903
  br i1 %182, label %183, label %184

183:                                              ; preds = %181
  call void @abort() #16
  unreachable

184:                                              ; preds = %181, %174
  %185 = phi i64 [ %179, %181 ], [ 4611686018427387903, %174 ]
  %186 = shl i64 %185, 2
  %187 = call i8* @_Znwm(i64 %186) #15
  %188 = bitcast i8* %187 to i32*
  br label %189

189:                                              ; preds = %184, %176
  %190 = phi i64 [ %185, %184 ], [ 0, %176 ]
  %191 = phi i32* [ %188, %184 ], [ null, %176 ]
  %192 = getelementptr inbounds i32, i32* %191, i64 %169
  %193 = getelementptr inbounds i32, i32* %191, i64 %190
  %194 = ptrtoint i32* %193 to i64
  store i32 0, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %192, i64 1
  %196 = ptrtoint i32* %195 to i64
  %197 = sub i64 %157, %167
  %198 = ashr exact i64 %197, 2
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds i32, i32* %192, i64 %199
  %201 = ptrtoint i32* %200 to i64
  %202 = icmp sgt i64 %197, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %189
  %204 = bitcast i32* %200 to i8*
  %205 = inttoptr i64 %167 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %205, i64 %197, i1 false) #14
  br label %206

206:                                              ; preds = %203, %189
  store i64 %201, i64* %88, align 8
  store i64 %196, i64* %87, align 8
  store i64 %194, i64* %89, align 8
  %207 = icmp eq i64 %167, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %206
  %209 = inttoptr i64 %167 to i8*
  call void @_ZdlPv(i8* %209) #15
  %210 = load i64, i64* %87, align 8
  br label %211

211:                                              ; preds = %162, %206, %208
  %212 = phi i64 [ %164, %162 ], [ %196, %206 ], [ %210, %208 ]
  %213 = load i32, i32* %39, align 8
  %214 = load i64, i64* %88, align 8
  %215 = sub i64 %212, %214
  %216 = shl i64 %215, 32
  %217 = add i64 %216, -17179869184
  %218 = lshr exact i64 %217, 32
  %219 = trunc i64 %218 to i32
  %220 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* nonnull %2, i32 %213, i32 %219) #14
  %221 = extractvalue { %"class.skvm::Builder"*, i32 } %220, 1
  %222 = load i32*, i32** %70, align 8
  %223 = load i32*, i32** %71, align 16
  %224 = icmp ult i32* %222, %223
  %225 = ptrtoint i32* %223 to i64
  br i1 %224, label %226, label %229

226:                                              ; preds = %211
  store i32 %221, i32* %222, align 4
  %227 = getelementptr inbounds i32, i32* %222, i64 1
  %228 = ptrtoint i32* %227 to i64
  store i64 %228, i64* %90, align 8
  br label %272

229:                                              ; preds = %211
  %230 = ptrtoint i32* %222 to i64
  %231 = load i64, i64* %73, align 16
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 2
  %234 = add nsw i64 %233, 1
  %235 = icmp ugt i64 %234, 4611686018427387903
  br i1 %235, label %236, label %238

236:                                              ; preds = %229
  %237 = bitcast %"class.std::__1::vector.290"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %237) #16
  unreachable

238:                                              ; preds = %229
  %239 = sub i64 %225, %231
  %240 = ashr exact i64 %239, 2
  %241 = icmp ult i64 %240, 2305843009213693951
  br i1 %241, label %242, label %250

242:                                              ; preds = %238
  %243 = ashr exact i64 %239, 1
  %244 = icmp ult i64 %243, %234
  %245 = select i1 %244, i64 %234, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %255, label %247

247:                                              ; preds = %242
  %248 = icmp ugt i64 %245, 4611686018427387903
  br i1 %248, label %249, label %250

249:                                              ; preds = %247
  call void @abort() #16
  unreachable

250:                                              ; preds = %247, %238
  %251 = phi i64 [ %245, %247 ], [ 4611686018427387903, %238 ]
  %252 = shl i64 %251, 2
  %253 = call i8* @_Znwm(i64 %252) #15
  %254 = bitcast i8* %253 to i32*
  br label %255

255:                                              ; preds = %250, %242
  %256 = phi i64 [ %251, %250 ], [ 0, %242 ]
  %257 = phi i8* [ %253, %250 ], [ null, %242 ]
  %258 = phi i32* [ %254, %250 ], [ null, %242 ]
  %259 = getelementptr inbounds i32, i32* %258, i64 %233
  %260 = getelementptr inbounds i32, i32* %258, i64 %256
  %261 = ptrtoint i32* %260 to i64
  store i32 %221, i32* %259, align 4
  %262 = getelementptr inbounds i32, i32* %259, i64 1
  %263 = ptrtoint i32* %262 to i64
  %264 = ptrtoint i32* %258 to i64
  %265 = icmp sgt i64 %232, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %255
  %267 = inttoptr i64 %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %257, i8* align 4 %267, i64 %232, i1 false) #14
  br label %268

268:                                              ; preds = %266, %255
  store i64 %264, i64* %73, align 16
  store i64 %263, i64* %90, align 8
  store i64 %261, i64* %72, align 16
  %269 = icmp eq i64 %231, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %268
  %271 = inttoptr i64 %231 to i8*
  call void @_ZdlPv(i8* %271) #15
  br label %272

272:                                              ; preds = %226, %268, %270
  %273 = add nuw nsw i64 %160, 1
  %274 = icmp ult i64 %273, %67
  br i1 %274, label %275, label %91

275:                                              ; preds = %272
  %276 = load i32*, i32** %85, align 8
  %277 = load i32*, i32** %86, align 8
  %278 = ptrtoint i32* %276 to i64
  br label %156

279:                                              ; preds = %148
  %280 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %11, i64 0, i32 3, i32 1
  %283 = load i32, i32* %282, align 8
  %284 = icmp eq i32 %281, %283
  %285 = call i8* @_Znwm(i64 40) #15
  call void @_ZNK4skvm7Builder4doneEPKcb(%"class.skvm::Program"* nonnull sret %16, %"class.skvm::Builder"* nonnull %2, i8* null, i1 zeroext false) #14
  %286 = bitcast %"class.std::__1::vector.242"* %5 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 16
  %288 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %32 to i64*
  %289 = load i64, i64* %288, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 0, i64 24, i1 false) #14
  %290 = zext i1 %284 to i8
  %291 = bitcast i8* %285 to %"class.skvm::Program"*
  call void @_ZN4skvm7ProgramC1EOS0_(%"class.skvm::Program"* nonnull %291, %"class.skvm::Program"* nonnull dereferenceable(8) %16) #14
  %292 = getelementptr inbounds i8, i8* %285, i64 8
  %293 = bitcast i8* %292 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %293, align 8
  %294 = getelementptr inbounds i8, i8* %285, i64 24
  %295 = bitcast i8* %294 to i64*
  store i64 %289, i64* %295, align 8
  %296 = getelementptr inbounds i8, i8* %285, i64 32
  store i8 %290, i8* %296, align 8
  %297 = ptrtoint i8* %285 to i64
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %16) #14
  br label %298

298:                                              ; preds = %148, %279
  %299 = phi i64 [ %297, %279 ], [ 0, %148 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %99) #14
  %300 = load i32*, i32** %69, align 16
  %301 = icmp eq i32* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %298
  %303 = ptrtoint i32* %300 to i64
  store i64 %303, i64* %92, align 8
  %304 = bitcast i32* %300 to i8*
  call void @_ZdlPv(i8* %304) #15
  br label %305

305:                                              ; preds = %298, %302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #14
  %306 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1, i32 0, i32 0
  %307 = load i32*, i32** %306, align 8
  %308 = icmp eq i32* %307, null
  br i1 %308, label %314, label %309

309:                                              ; preds = %305
  %310 = ptrtoint i32* %307 to i64
  %311 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %9, i64 0, i32 1, i32 0, i32 1
  %312 = bitcast i32** %311 to i64*
  store i64 %310, i64* %312, align 8
  %313 = bitcast i32* %307 to i8*
  call void @_ZdlPv(i8* %313) #15
  br label %314

314:                                              ; preds = %305, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #14
  %315 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %34, align 8
  %316 = icmp eq %"struct.skvm::Color"* %315, null
  br i1 %316, label %321, label %317

317:                                              ; preds = %314
  %318 = ptrtoint %"struct.skvm::Color"* %315 to i64
  %319 = bitcast %"struct.skvm::Color"** %35 to i64*
  store i64 %318, i64* %319, align 8
  %320 = bitcast %"struct.skvm::Color"* %315 to i8*
  call void @_ZdlPv(i8* %320) #15
  br label %321

321:                                              ; preds = %314, %317
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #14
  %322 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %30, align 16
  %323 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %322, null
  br i1 %323, label %328, label %324

324:                                              ; preds = %321
  %325 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %322 to i64
  %326 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %31 to i64*
  store i64 %325, i64* %326, align 8
  %327 = bitcast %"struct.SkFilterColorProgram::SampleCall"* %322 to i8*
  call void @_ZdlPv(i8* %327) #15
  br label %328

328:                                              ; preds = %321, %324
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %28) #14
  %329 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %3, i64 0, i32 1, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = icmp eq i32* %330, null
  br i1 %331, label %337, label %332

332:                                              ; preds = %328
  %333 = ptrtoint i32* %330 to i64
  %334 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %3, i64 0, i32 1, i32 0, i32 1
  %335 = bitcast i32** %334 to i64*
  store i64 %333, i64* %335, align 8
  %336 = bitcast i32* %330 to i8*
  call void @_ZdlPv(i8* %336) #15
  br label %337

337:                                              ; preds = %328, %332
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #14
  %338 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %2, i64 0, i32 2, i32 0, i32 0
  %339 = load i32*, i32** %338, align 8
  %340 = icmp eq i32* %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %337
  %342 = ptrtoint i32* %339 to i64
  %343 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %2, i64 0, i32 2, i32 0, i32 1
  %344 = bitcast i32** %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = bitcast i32* %339 to i8*
  call void @_ZdlPv(i8* %345) #15
  br label %346

346:                                              ; preds = %341, %337
  %347 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %2, i64 0, i32 1, i32 0, i32 0
  %348 = load %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"** %347, align 8
  %349 = icmp eq %"struct.skvm::Instruction"* %348, null
  br i1 %349, label %355, label %350

350:                                              ; preds = %346
  %351 = ptrtoint %"struct.skvm::Instruction"* %348 to i64
  %352 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %2, i64 0, i32 1, i32 0, i32 1
  %353 = bitcast %"struct.skvm::Instruction"** %352 to i64*
  store i64 %351, i64* %353, align 8
  %354 = bitcast %"struct.skvm::Instruction"* %348 to i8*
  call void @_ZdlPv(i8* %354) #15
  br label %355

355:                                              ; preds = %350, %346
  %356 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %357 = load %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %356, align 8
  store %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %356, align 8
  %358 = icmp eq %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %357 to i8*
  call void @_ZdaPv(i8* %360) #15
  br label %361

361:                                              ; preds = %355, %359
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #14
  br label %362

362:                                              ; preds = %1, %361
  %363 = phi i64 [ %299, %361 ], [ 0, %1 ]
  %364 = inttoptr i64 %363 to %class.SkFilterColorProgram*
  ret %class.SkFilterColorProgram* %364
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffectD2Ev(%class.SkRuntimeEffect*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15SkRuntimeEffect, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.SkFilterColorProgram*, %class.SkFilterColorProgram** %3, align 8
  store %class.SkFilterColorProgram* null, %class.SkFilterColorProgram** %3, align 8
  %5 = icmp eq %class.SkFilterColorProgram* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %4, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %7, align 8
  %9 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %8 to i64
  %12 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %4, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"struct.SkFilterColorProgram::SampleCall"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #15
  br label %15

15:                                               ; preds = %10, %6
  %16 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %4, i64 0, i32 0
  tail call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* %16) #14
  %17 = bitcast %class.SkFilterColorProgram* %4 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 7, i32 0, i32 0
  %20 = load %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"** %19, align 8
  %21 = icmp eq %"struct.SkSL::SampleUsage"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = ptrtoint %"struct.SkSL::SampleUsage"* %20 to i64
  %24 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 7, i32 0, i32 1
  %25 = bitcast %"struct.SkSL::SampleUsage"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"struct.SkSL::SampleUsage"* %20 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  br label %27

27:                                               ; preds = %18, %22
  %28 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %28, i64 0, i32 0, i32 0
  %30 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %29, align 8
  %31 = icmp eq %"struct.SkRuntimeEffect::Child"* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.SkRuntimeEffect::Child"* %30 to i8*
  %34 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6, i32 0, i32 1
  %35 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %34, align 8
  %36 = icmp eq %"struct.SkRuntimeEffect::Child"* %35, %30
  br i1 %36, label %45, label %37

37:                                               ; preds = %32, %37
  %38 = phi %"struct.SkRuntimeEffect::Child"* [ %39, %37 ], [ %35, %32 ]
  %39 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %38, i64 -1
  %40 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %39, i64 0, i32 0
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %40) #14
  %41 = icmp eq %"struct.SkRuntimeEffect::Child"* %39, %30
  br i1 %41, label %42, label %37

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::vector.219"* %28 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %32
  %46 = phi i8* [ %44, %42 ], [ %33, %32 ]
  store %"struct.SkRuntimeEffect::Child"* %30, %"struct.SkRuntimeEffect::Child"** %34, align 8
  tail call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %27, %45
  %48 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5
  %49 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %48, i64 0, i32 0, i32 0
  %50 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %49, align 8
  %51 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %50, null
  br i1 %51, label %67, label %52

52:                                               ; preds = %47
  %53 = bitcast %"struct.SkRuntimeEffect::Uniform"* %50 to i8*
  %54 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 1
  %55 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %54, align 8
  %56 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %55, %50
  br i1 %56, label %65, label %57

57:                                               ; preds = %52, %57
  %58 = phi %"struct.SkRuntimeEffect::Uniform"* [ %59, %57 ], [ %55, %52 ]
  %59 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %58, i64 -1
  %60 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %59, i64 0, i32 0
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %60) #14
  %61 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %59, %50
  br i1 %61, label %62, label %57

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::vector.212"* %48 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %52
  %66 = phi i8* [ %64, %62 ], [ %53, %52 ]
  store %"struct.SkRuntimeEffect::Uniform"* %50, %"struct.SkRuntimeEffect::Uniform"** %54, align 8
  tail call void @_ZdlPv(i8* %66) #15
  br label %67

67:                                               ; preds = %47, %65
  %68 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %68, align 8
  store %"struct.SkSL::Program"* null, %"struct.SkSL::Program"** %68, align 8
  %70 = icmp eq %"struct.SkSL::Program"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  tail call void @_ZN4SkSL7ProgramD2Ev(%"struct.SkSL::Program"* nonnull %69) #14
  %72 = bitcast %"struct.SkSL::Program"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 2
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %74) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffectD0Ev(%class.SkRuntimeEffect*) unnamed_addr #0 align 2 {
  tail call void @_ZN15SkRuntimeEffectD2Ev(%class.SkRuntimeEffect* %0) #14
  %2 = bitcast %class.SkRuntimeEffect* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK15SkRuntimeEffect11uniformSizeEv(%class.SkRuntimeEffect* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %2, align 8
  %4 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 1
  %5 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %4, align 8
  %6 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %3, %5
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %5, i64 -1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 11
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @llvm.trap() #14
  unreachable

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %5, i64 -1, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = sext i32 %9 to i64
  %16 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %15
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %5, i64 -1, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = mul nsw i64 %17, %20
  %22 = add i64 %14, 3
  %23 = add i64 %22, %21
  %24 = and i64 %23, -4
  br label %25

25:                                               ; preds = %1, %12
  %26 = phi i64 [ %24, %12 ], [ 0, %1 ]
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkRuntimeEffect::Uniform"* @_ZNK15SkRuntimeEffect11findUniformEPKc(%class.SkRuntimeEffect* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %3, align 8
  %5 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %5, align 8
  %7 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %4, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"struct.SkRuntimeEffect::Uniform"* [ %13, %12 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %9, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString* %10, i8* %1) #14
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %9, i64 1
  %14 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %12, %8
  %16 = phi %"struct.SkRuntimeEffect::Uniform"* [ %6, %12 ], [ %9, %8 ]
  %17 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %5, align 8
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi %"struct.SkRuntimeEffect::Uniform"* [ %4, %2 ], [ %17, %15 ]
  %20 = phi %"struct.SkRuntimeEffect::Uniform"* [ %4, %2 ], [ %16, %15 ]
  %21 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %20, %19
  %22 = select i1 %21, %"struct.SkRuntimeEffect::Uniform"* null, %"struct.SkRuntimeEffect::Uniform"* %20
  ret %"struct.SkRuntimeEffect::Uniform"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.SkRuntimeEffect::Child"* @_ZNK15SkRuntimeEffect9findChildEPKc(%class.SkRuntimeEffect* nocapture readonly, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %3, align 8
  %5 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %5, align 8
  %7 = icmp eq %"struct.SkRuntimeEffect::Child"* %4, %6
  br i1 %7, label %18, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"struct.SkRuntimeEffect::Child"* [ %13, %12 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %9, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString* %10, i8* %1) #14
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %9, i64 1
  %14 = icmp eq %"struct.SkRuntimeEffect::Child"* %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %12, %8
  %16 = phi %"struct.SkRuntimeEffect::Child"* [ %6, %12 ], [ %9, %8 ]
  %17 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %5, align 8
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi %"struct.SkRuntimeEffect::Child"* [ %4, %2 ], [ %17, %15 ]
  %20 = phi %"struct.SkRuntimeEffect::Child"* [ %4, %2 ], [ %16, %15 ]
  %21 = icmp eq %"struct.SkRuntimeEffect::Child"* %20, %19
  %22 = select i1 %21, %"struct.SkRuntimeEffect::Child"* null, %"struct.SkRuntimeEffect::Child"* %20
  ret %"struct.SkRuntimeEffect::Child"* %22
}

declare void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"*) unnamed_addr #2

declare void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, <2 x float>, <2 x float>, %"struct.skvm::Uniforms"*) local_unnamed_addr #2

declare void @_ZN4SkSL13ProgramToSkVMERKNS_7ProgramERKNS_18FunctionDefinitionEPN4skvm7BuilderE6SkSpanIiENS6_5CoordESB_NS6_5ColorENSt3__18functionIFSC_iSB_SC_EEE(%"struct.skvm::Color"* sret, %"struct.SkSL::Program"* dereferenceable(128), %"class.SkSL::FunctionDefinition"* dereferenceable(88), %"class.skvm::Builder"*, i32*, i64, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %"class.std::__1::function"*) local_unnamed_addr #2

declare void @_ZN4skvm7Builder5storeENS_11PixelFormatENS_3PtrENS_5ColorE(%"class.skvm::Builder"*, %"struct.skvm::PixelFormat"* byval(%"struct.skvm::PixelFormat") align 8, i32, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #2

declare i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #2

declare void @_ZNK4skvm7Builder4doneEPKcb(%"class.skvm::Program"* sret, %"class.skvm::Builder"*, i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SkFilterColorProgramC2EN4skvm7ProgramENSt3__16vectorINS_10SampleCallENS2_9allocatorIS4_EEEEb(%class.SkFilterColorProgram*, %"class.skvm::Program"*, %"class.std::__1::vector.242"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 0
  tail call void @_ZN4skvm7ProgramC1EOS0_(%"class.skvm::Program"* %6, %"class.skvm::Program"* dereferenceable(8) %1) #14
  %7 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector.242"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = bitcast %"class.std::__1::vector.242"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.242"* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %2, i64 0, i32 0, i32 1
  %13 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector.242"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #14
  %23 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 2
  store i8 %5, i8* %23, align 8
  ret void
}

declare void @_ZN4skvm7ProgramC1EOS0_(%"class.skvm::Program"*, %"class.skvm::Program"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK20SkFilterColorProgram4evalERK8SkRGBA4fIL11SkAlphaType2EEPKvNSt3__18functionIFS2_iS2_EEE(%class.SkFilterColorProgram*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), i8*, %"class.std::__1::function.308"*) local_unnamed_addr #7 align 2 {
  %5 = alloca [4 x i8*], align 16
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.SkSTArray, align 8
  %9 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  %10 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 64
  %11 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 72
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %10 to i8**
  store i8* %9, i8** %13, align 8
  store i64 34359738368, i64* %12, align 8
  %14 = bitcast i8* %10 to %class.SkTArray*
  call void @_ZN8SkTArrayI8SkRGBA4fIL11SkAlphaType2EELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %14, i32 1, i32 1) #14
  %15 = bitcast i8* %10 to %struct.SkRGBA4f**
  %16 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %15, align 8
  %17 = load i64, i64* %12, align 8
  %18 = lshr i64 %17, 1
  %19 = and i64 %18, 2147483647
  %20 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %16, i64 %19
  %21 = bitcast %struct.SkRGBA4f* %20 to i8*
  %22 = add i64 %17, 2
  %23 = and i64 %22, 4294967294
  %24 = and i64 %17, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %12, align 8
  %26 = bitcast %struct.SkRGBA4f* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %26, i64 16, i1 false) #14
  %27 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 1, i32 0, i32 0
  %28 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %27, align 8
  %29 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 1, i32 0, i32 1
  %30 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %29, align 8
  %31 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %28, %30
  br i1 %31, label %42, label %32

32:                                               ; preds = %4
  %33 = bitcast %struct.SkRGBA4f* %1 to <2 x float>*
  %34 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %1, i64 0, i32 2
  %35 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %36 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRGBA4f*
  %37 = bitcast { <2 x float>, <2 x float> }* %6 to i64*
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %39 = bitcast <2 x float>* %38 to i64*
  %40 = getelementptr inbounds %"class.std::__1::function.308", %"class.std::__1::function.308"* %3, i64 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.std::__1::function.308", %"class.std::__1::function.308"* %3, i64 0, i32 0, i32 0
  br label %67

42:                                               ; preds = %85, %4
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0, i64 0
  %44 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %0, i64 0, i32 0
  %45 = bitcast i8* %10 to i64*
  %46 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -1, i64 16, i1 false)
  %47 = load i64, i64* %45, align 8
  %48 = bitcast [4 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #14
  %49 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 0
  %50 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 1
  %51 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 2
  %52 = getelementptr inbounds [4 x i8*], [4 x i8*]* %5, i64 0, i64 3
  %53 = bitcast [4 x i8*]* %5 to i64*
  store i64 %47, i64* %53, align 16
  store i8* %2, i8** %50, align 8
  %54 = bitcast i8** %51 to float**
  store float* %43, float** %54, align 16
  store i8* null, i8** %52, align 8
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* %44, i32 1, i8** nonnull %49) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #14
  %55 = load i64, i64* %12, align 8
  %56 = and i64 %55, 1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %42
  %59 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %59) #14
  br label %60

60:                                               ; preds = %42, %58
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #14
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %62 = load <2 x float>, <2 x float>* %61, align 8
  %63 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %62, 0
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %65 = load <2 x float>, <2 x float>* %64, align 8
  %66 = insertvalue { <2 x float>, <2 x float> } %63, <2 x float> %65, 1
  ret { <2 x float>, <2 x float> } %66

67:                                               ; preds = %32, %85
  %68 = phi %"struct.SkFilterColorProgram::SampleCall"* [ %28, %32 ], [ %110, %85 ]
  %69 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %68, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %85 [
    i32 2, label %75
    i32 1, label %71
  ]

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %68, i64 0, i32 2
  %73 = bitcast %union.anon.244* %72 to <2 x float>*
  %74 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %68, i64 0, i32 2, i32 0, i32 2
  br label %85

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %68, i64 0, i32 2
  %77 = bitcast %union.anon.244* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, 1
  %80 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %15, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %80, i64 %81
  %83 = bitcast %struct.SkRGBA4f* %82 to <2 x float>*
  %84 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %80, i64 %81, i32 2
  br label %85

85:                                               ; preds = %67, %75, %71
  %86 = phi <2 x float>* [ %33, %67 ], [ %73, %71 ], [ %83, %75 ]
  %87 = phi float* [ %34, %67 ], [ %74, %71 ], [ %84, %75 ]
  %88 = bitcast float* %87 to i64*
  %89 = load i64, i64* %88, align 4
  %90 = bitcast <2 x float>* %86 to i64*
  %91 = load i64, i64* %90, align 4
  %92 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %68, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  store i64 %91, i64* %37, align 8
  store i64 %89, i64* %39, align 8
  %94 = load { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)*, { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)** %40, align 8
  %95 = call { <2 x float>, <2 x float> } %94(%"union.std::__1::__function::__policy_storage"* %41, i32 %93, %struct.SkRGBA4f* nonnull dereferenceable(16) %36) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  %96 = extractvalue { <2 x float>, <2 x float> } %95, 0
  %97 = extractvalue { <2 x float>, <2 x float> } %95, 1
  call void @_ZN8SkTArrayI8SkRGBA4fIL11SkAlphaType2EELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %14, i32 1, i32 1) #14
  %98 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %15, align 8
  %99 = load i64, i64* %12, align 8
  %100 = lshr i64 %99, 1
  %101 = and i64 %100, 2147483647
  %102 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %98, i64 %101
  %103 = add i64 %99, 2
  %104 = and i64 %103, 4294967294
  %105 = and i64 %99, -4294967295
  %106 = or i64 %104, %105
  store i64 %106, i64* %12, align 8
  %107 = bitcast %struct.SkRGBA4f* %102 to <2 x float>*
  store <2 x float> %96, <2 x float>* %107, align 4
  %108 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %98, i64 %101, i32 2
  %109 = bitcast float* %108 to <2 x float>*
  store <2 x float> %97, <2 x float>* %109, align 4
  %110 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %68, i64 1
  %111 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %110, %30
  br i1 %111, label %42, label %67
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkFilterColorProgram* @_ZN15SkRuntimeEffect21getFilterColorProgramEv(%class.SkRuntimeEffect* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.SkFilterColorProgram*, %class.SkFilterColorProgram** %2, align 8
  ret %class.SkFilterColorProgram* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SkRuntimeColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.332* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.sk_sp.333, align 8
  %5 = alloca %class.sk_sp.79, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %"class.std::__1::vector.335", align 8
  %8 = alloca %class.sk_sp.337, align 8
  %9 = alloca %class.sk_sp.333, align 8
  %10 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #14
  call void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer* %1, %class.SkString* nonnull %3) #14
  %12 = bitcast %class.sk_sp.333* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %13, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.333* nonnull sret %4, %class.SkReadBuffer* %1) #14
  %14 = bitcast %class.sk_sp.79* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %5, i64 0, i32 0
  store %class.SkRuntimeEffect* inttoptr (i64 -6148914691236517206 to %class.SkRuntimeEffect*), %class.SkRuntimeEffect** %15, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %6, %class.SkString* nonnull dereferenceable(8) %3) #14
  call void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.79* nonnull sret %5, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)* nonnull @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString, %class.SkString* nonnull %6)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #14
  %16 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %15, align 8
  %17 = icmp eq %class.SkRuntimeEffect* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %19

19:                                               ; preds = %2, %18
  %20 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.sk_sp.332, %class.sk_sp.332* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %24, align 8
  br label %160

25:                                               ; preds = %19
  %26 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #14
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %16, i64 0, i32 6
  %29 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %16, i64 0, i32 6, i32 0, i32 1
  %30 = bitcast %"struct.SkRuntimeEffect::Child"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.219"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = icmp eq i64 %35, %27
  br i1 %36, label %38, label %37

37:                                               ; preds = %25
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %38

38:                                               ; preds = %25, %37
  %39 = load i8, i8* %20, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %class.sk_sp.332, %class.sk_sp.332* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %42, align 8
  br label %160

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::vector.335"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #14
  %45 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %7, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %7, i64 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #14
  %48 = icmp eq i32 %26, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = bitcast %class.sk_sp.337** %46 to i64*
  br label %70

51:                                               ; preds = %43
  %52 = icmp slt i32 %26, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector.335"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %54) #16
  unreachable

55:                                               ; preds = %51
  %56 = shl nsw i64 %27, 3
  %57 = call i8* @_Znwm(i64 %56) #15
  %58 = bitcast i8* %57 to %class.sk_sp.337*
  %59 = bitcast %"class.std::__1::vector.335"* %7 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %58, i64 %27
  store %class.sk_sp.337* %60, %class.sk_sp.337** %47, align 8
  %61 = bitcast %class.sk_sp.337** %46 to i64*
  %62 = ptrtoint i8* %57 to i64
  %63 = add nsw i64 %27, -1
  %64 = getelementptr %class.sk_sp.337, %class.sk_sp.337* %58, i64 %63, i32 0
  %65 = ptrtoint %class.SkColorFilter** %64 to i64
  %66 = sub i64 8, %62
  %67 = add i64 %66, %65
  %68 = and i64 %67, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 %68, i1 false) #14
  %69 = ptrtoint %class.sk_sp.337* %60 to i64
  store i64 %69, i64* %61, align 8
  br label %70

70:                                               ; preds = %49, %55
  %71 = phi i64* [ %50, %49 ], [ %61, %55 ]
  %72 = phi %class.sk_sp.337* [ null, %49 ], [ %58, %55 ]
  %73 = phi i64 [ 0, %49 ], [ %62, %55 ]
  %74 = phi i64 [ 0, %49 ], [ %69, %55 ]
  %75 = bitcast %"class.std::__1::vector.335"* %7 to i64*
  %76 = icmp eq i64 %74, %73
  br i1 %76, label %80, label %133

77:                                               ; preds = %153
  %78 = inttoptr i64 %156 to %class.sk_sp.337*
  %79 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %15, align 8
  br label %80

80:                                               ; preds = %77, %70
  %81 = phi %class.sk_sp.337* [ %72, %70 ], [ %78, %77 ]
  %82 = phi %class.SkRuntimeEffect* [ %16, %70 ], [ %79, %77 ]
  %83 = phi i64 [ 0, %70 ], [ %158, %77 ]
  %84 = bitcast %class.sk_sp.337* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #14
  %85 = bitcast %class.sk_sp.333* %4 to i64*
  %86 = load i64, i64* %85, align 8
  store %class.SkData* null, %class.SkData** %13, align 8
  %87 = bitcast %class.sk_sp.333* %9 to i64*
  store i64 %86, i64* %87, align 8
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataEPS0_I13SkColorFilterEm(%class.sk_sp.337* nonnull sret %8, %class.SkRuntimeEffect* %82, %class.sk_sp.333* nonnull %9, %class.sk_sp.337* %81, i64 %83)
  %88 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %8, i64 0, i32 0
  %89 = bitcast %class.sk_sp.337* %8 to i64*
  %90 = load i64, i64* %89, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %88, align 8
  %91 = bitcast %class.sk_sp.332* %0 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %9, i64 0, i32 0
  %93 = load %class.SkData*, %class.SkData** %92, align 8
  %94 = icmp eq %class.SkData* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %80
  %96 = getelementptr inbounds %class.SkData, %class.SkData* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %101

99:                                               ; preds = %95
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %93) #14
  %100 = bitcast %class.SkData* %93 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %100) #14
  br label %101

101:                                              ; preds = %80, %95, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #14
  %102 = load %class.sk_sp.337*, %class.sk_sp.337** %45, align 8
  %103 = icmp eq %class.sk_sp.337* %102, null
  br i1 %103, label %131, label %104

104:                                              ; preds = %101
  %105 = bitcast %class.sk_sp.337* %102 to i8*
  %106 = load %class.sk_sp.337*, %class.sk_sp.337** %46, align 8
  %107 = icmp eq %class.sk_sp.337* %106, %102
  br i1 %107, label %129, label %108

108:                                              ; preds = %104, %124
  %109 = phi %class.sk_sp.337* [ %110, %124 ], [ %106, %104 ]
  %110 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %109, i64 -1
  %111 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %110, i64 0, i32 0
  %112 = load %class.SkColorFilter*, %class.SkColorFilter** %111, align 8
  %113 = icmp eq %class.SkColorFilter* %112, null
  br i1 %113, label %124, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %124

118:                                              ; preds = %114
  %119 = bitcast %class.SkColorFilter* %112 to %class.SkRefCntBase*
  %120 = bitcast %class.SkColorFilter* %112 to void (%class.SkRefCntBase*)***
  %121 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, i64 2
  %123 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, align 8
  call void %123(%class.SkRefCntBase* nonnull %119) #14
  br label %124

124:                                              ; preds = %118, %114, %108
  %125 = icmp eq %class.sk_sp.337* %110, %102
  br i1 %125, label %126, label %108

126:                                              ; preds = %124
  %127 = bitcast %"class.std::__1::vector.335"* %7 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %104
  %130 = phi i8* [ %128, %126 ], [ %105, %104 ]
  store %class.sk_sp.337* %102, %class.sk_sp.337** %46, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %101, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #14
  %132 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %15, align 8
  br label %160

133:                                              ; preds = %70, %153
  %134 = phi i64 [ %154, %153 ], [ 0, %70 ]
  %135 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 0) #14, !noalias !27
  %136 = ptrtoint %class.SkFlattenable* %135 to i64
  %137 = load %class.sk_sp.337*, %class.sk_sp.337** %45, align 8
  %138 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %137, i64 %134
  %139 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %138, i64 0, i32 0
  %140 = load %class.SkColorFilter*, %class.SkColorFilter** %139, align 8
  %141 = bitcast %class.sk_sp.337* %138 to i64*
  store i64 %136, i64* %141, align 8
  %142 = icmp eq %class.SkColorFilter* %140, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %133
  %144 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %140, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkColorFilter* %140 to %class.SkRefCntBase*
  %149 = bitcast %class.SkColorFilter* %140 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #14
  br label %153

153:                                              ; preds = %147, %143, %133
  %154 = add nuw i64 %134, 1
  %155 = load i64, i64* %71, align 8
  %156 = load i64, i64* %75, align 8
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp ult i64 %154, %158
  br i1 %159, label %133, label %77

160:                                              ; preds = %41, %131, %23
  %161 = phi %class.SkRuntimeEffect* [ %16, %41 ], [ %132, %131 ], [ %16, %23 ]
  %162 = icmp eq %class.SkRuntimeEffect* %161, null
  br i1 %162, label %173, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %161, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw add i32* %164, i32 -1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %173

167:                                              ; preds = %163
  %168 = bitcast %class.SkRuntimeEffect* %161 to %class.SkRefCntBase*
  %169 = bitcast %class.SkRuntimeEffect* %161 to void (%class.SkRefCntBase*)***
  %170 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %169, align 8
  %171 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %170, i64 2
  %172 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %171, align 8
  call void %172(%class.SkRefCntBase* nonnull %168) #14
  br label %173

173:                                              ; preds = %160, %163, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %174 = load %class.SkData*, %class.SkData** %13, align 8
  %175 = icmp eq %class.SkData* %174, null
  br i1 %175, label %182, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %class.SkData, %class.SkData* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 -1 acq_rel
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %174) #14
  %181 = bitcast %class.SkData* %174 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %181) #14
  br label %182

182:                                              ; preds = %173, %176, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  ret void
}

declare void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer*, %class.SkString*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.333* sret, %class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*) #0 comdat align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"struct.SkRuntimeEffect::Options", align 1
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %4, %class.SkString* dereferenceable(8) %1) #14
  %6 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #14
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %5, i64 0, i32 1
  store i8 1, i8* %7, align 1
  %8 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false) #14, !alias.scope !32
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* nonnull dereferenceable(8) %4) #14, !noalias !32
  call void @_ZN15SkRuntimeEffect4MakeE8SkStringRKNS_7OptionsEN4SkSL11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %3, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %5, i8 signext 4) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #14
  ret void
}

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataEPS0_I13SkColorFilterEm(%class.sk_sp.337* noalias nocapture sret, %class.SkRuntimeEffect*, %class.sk_sp.333* nocapture, %class.sk_sp.337* readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.333, align 8
  %7 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %12, align 8
  br label %180

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %2, i64 0, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %17, label %41

17:                                               ; preds = %13
  %18 = bitcast %class.sk_sp.333* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.333* nonnull sret %6) #14
  %19 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %6, i64 0, i32 0
  %20 = bitcast %class.sk_sp.333* %6 to i64*
  %21 = load i64, i64* %20, align 8
  store %class.SkData* null, %class.SkData** %19, align 8
  %22 = load %class.SkData*, %class.SkData** %14, align 8
  %23 = bitcast %class.sk_sp.333* %2 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %class.SkData* %22, null
  br i1 %24, label %40, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %22) #14
  %30 = bitcast %class.SkData* %22 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %30) #14
  br label %31

31:                                               ; preds = %25, %29
  %32 = load %class.SkData*, %class.SkData** %19, align 8
  %33 = icmp eq %class.SkData* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %32) #14
  %39 = bitcast %class.SkData* %32 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %39) #14
  br label %40

40:                                               ; preds = %17, %31, %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  br label %41

41:                                               ; preds = %13, %40
  %42 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 6, i32 0, i32 0
  %43 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %42, align 8
  %44 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 6, i32 0, i32 1
  %45 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %44, align 8
  %46 = icmp eq %"struct.SkRuntimeEffect::Child"* %43, %45
  %47 = ptrtoint %"struct.SkRuntimeEffect::Child"* %45 to i64
  %48 = ptrtoint %"struct.SkRuntimeEffect::Child"* %43 to i64
  br i1 %46, label %59, label %51

49:                                               ; preds = %51
  %50 = icmp eq %"struct.SkRuntimeEffect::Child"* %56, %45
  br i1 %50, label %59, label %51

51:                                               ; preds = %41, %49
  %52 = phi %"struct.SkRuntimeEffect::Child"* [ %56, %49 ], [ %43, %41 ]
  %53 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %52, i64 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 1
  %56 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %52, i64 1
  br i1 %55, label %49, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %58, align 8
  br label %180

59:                                               ; preds = %49, %41
  %60 = load %class.SkData*, %class.SkData** %14, align 8
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %60, i64 0, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 5, i32 0, i32 0
  %64 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %63, align 8
  %65 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 5, i32 0, i32 1
  %66 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %65, align 8
  %67 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %64, %66
  %68 = ptrtoint %class.SkData* %60 to i64
  br i1 %67, label %87, label %69

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %66, i64 -1, i32 2
  %71 = load i32, i32* %70, align 8
  %72 = icmp ult i32 %71, 11
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  call void @llvm.trap() #14
  unreachable

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %66, i64 -1, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = sext i32 %71 to i64
  %78 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %77
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %66, i64 -1, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = mul nsw i64 %79, %82
  %84 = add i64 %76, 3
  %85 = add i64 %84, %83
  %86 = and i64 %85, -4
  br label %87

87:                                               ; preds = %59, %74
  %88 = phi i64 [ %86, %74 ], [ 0, %59 ]
  %89 = icmp eq i64 %62, %88
  br i1 %89, label %90, label %178

90:                                               ; preds = %87
  %91 = sub i64 %47, %48
  %92 = ashr exact i64 %91, 4
  %93 = icmp eq i64 %92, %4
  br i1 %93, label %94, label %178

94:                                               ; preds = %90
  %95 = call i8* @_Znwm(i64 56) #15
  %96 = icmp eq %class.SkRuntimeEffect* %1, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = atomicrmw add i32* %98, i32 1 monotonic, !noalias !35
  %100 = bitcast %class.sk_sp.333* %2 to i64*
  %101 = load i64, i64* %100, align 8
  br label %102

102:                                              ; preds = %94, %97
  %103 = phi i64 [ %101, %97 ], [ %68, %94 ]
  %104 = ptrtoint %class.SkRuntimeEffect* %1 to i64
  store %class.SkData* null, %class.SkData** %14, align 8
  %105 = getelementptr inbounds i8, i8* %95, i64 8
  %106 = bitcast i8* %105 to i32*
  store i32 1, i32* %106, align 4
  %107 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkRuntimeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds i8, i8* %95, i64 16
  %109 = bitcast i8* %108 to i64*
  store i64 %104, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %95, i64 24
  %111 = bitcast i8* %110 to i64*
  store i64 %103, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %95, i64 32
  %113 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %3, i64 %4
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #14
  %114 = shl nuw i64 %4, 3
  %115 = ashr exact i64 %114, 3
  %116 = icmp eq i64 %4, 0
  br i1 %116, label %176, label %117

117:                                              ; preds = %102
  %118 = icmp ugt i64 %115, 2305843009213693951
  br i1 %118, label %119, label %121

119:                                              ; preds = %117
  %120 = bitcast i8* %112 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #16
  unreachable

121:                                              ; preds = %117
  %122 = call i8* @_Znwm(i64 %114) #15
  %123 = bitcast i8* %122 to %class.sk_sp.337*
  %124 = getelementptr inbounds i8, i8* %95, i64 40
  %125 = bitcast i8* %124 to i8**
  store i8* %122, i8** %125, align 8
  %126 = bitcast i8* %112 to i8**
  store i8* %122, i8** %126, align 8
  %127 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %123, i64 %115
  %128 = getelementptr inbounds i8, i8* %95, i64 48
  %129 = bitcast i8* %128 to %class.sk_sp.337**
  store %class.sk_sp.337* %127, %class.sk_sp.337** %129, align 8
  %130 = shl nsw i64 %4, 3
  %131 = add i64 %130, -8
  %132 = lshr exact i64 %131, 3
  %133 = add nuw nsw i64 %132, 1
  %134 = and i64 %133, 3
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %152, label %136

136:                                              ; preds = %121, %147
  %137 = phi %class.sk_sp.337* [ %149, %147 ], [ %123, %121 ]
  %138 = phi %class.sk_sp.337* [ %148, %147 ], [ %3, %121 ]
  %139 = phi i64 [ %150, %147 ], [ %134, %121 ]
  %140 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %137, i64 0, i32 0
  %141 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %138, i64 0, i32 0
  %142 = load %class.SkColorFilter*, %class.SkColorFilter** %141, align 8
  %143 = icmp eq %class.SkColorFilter* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %136
  %145 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %142, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 1 monotonic
  br label %147

147:                                              ; preds = %144, %136
  store %class.SkColorFilter* %142, %class.SkColorFilter** %140, align 8
  %148 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %138, i64 1
  %149 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %137, i64 1
  %150 = add i64 %139, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %136, !llvm.loop !38

152:                                              ; preds = %147, %121
  %153 = phi %class.sk_sp.337* [ undef, %121 ], [ %149, %147 ]
  %154 = phi %class.sk_sp.337* [ %123, %121 ], [ %149, %147 ]
  %155 = phi %class.sk_sp.337* [ %3, %121 ], [ %148, %147 ]
  %156 = icmp ult i64 %131, 24
  br i1 %156, label %172, label %157

157:                                              ; preds = %152, %200
  %158 = phi %class.sk_sp.337* [ %202, %200 ], [ %154, %152 ]
  %159 = phi %class.sk_sp.337* [ %201, %200 ], [ %155, %152 ]
  %160 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %158, i64 0, i32 0
  %161 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %159, i64 0, i32 0
  %162 = load %class.SkColorFilter*, %class.SkColorFilter** %161, align 8
  %163 = icmp eq %class.SkColorFilter* %162, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %157
  %165 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %162, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 1 monotonic
  br label %167

167:                                              ; preds = %164, %157
  store %class.SkColorFilter* %162, %class.SkColorFilter** %160, align 8
  %168 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %158, i64 1, i32 0
  %169 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %159, i64 1, i32 0
  %170 = load %class.SkColorFilter*, %class.SkColorFilter** %169, align 8
  %171 = icmp eq %class.SkColorFilter* %170, null
  br i1 %171, label %184, label %181

172:                                              ; preds = %200, %152
  %173 = phi %class.sk_sp.337* [ %153, %152 ], [ %202, %200 ]
  %174 = bitcast i8* %124 to i64*
  %175 = ptrtoint %class.sk_sp.337* %173 to i64
  store i64 %175, i64* %174, align 8
  br label %176

176:                                              ; preds = %102, %172
  %177 = bitcast %class.sk_sp.337* %0 to i8**
  store i8* %95, i8** %177, align 8
  br label %180

178:                                              ; preds = %90, %87
  %179 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %179, align 8
  br label %180

180:                                              ; preds = %178, %176, %57, %11
  ret void

181:                                              ; preds = %167
  %182 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %170, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 1 monotonic
  br label %184

184:                                              ; preds = %181, %167
  store %class.SkColorFilter* %170, %class.SkColorFilter** %168, align 8
  %185 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %158, i64 2, i32 0
  %186 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %159, i64 2, i32 0
  %187 = load %class.SkColorFilter*, %class.SkColorFilter** %186, align 8
  %188 = icmp eq %class.SkColorFilter* %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %187, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 1 monotonic
  br label %192

192:                                              ; preds = %189, %184
  store %class.SkColorFilter* %187, %class.SkColorFilter** %185, align 8
  %193 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %158, i64 3, i32 0
  %194 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %159, i64 3, i32 0
  %195 = load %class.SkColorFilter*, %class.SkColorFilter** %194, align 8
  %196 = icmp eq %class.SkColorFilter* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %195, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 1 monotonic
  br label %200

200:                                              ; preds = %197, %192
  store %class.SkColorFilter* %195, %class.SkColorFilter** %193, align 8
  %201 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %159, i64 4
  %202 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %158, i64 4
  %203 = icmp eq %class.sk_sp.337* %201, %113
  br i1 %203, label %172, label %157
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkRTShader10CreateProcER12SkReadBuffer(%class.sk_sp.332* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.sk_sp.333, align 8
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.sk_sp.79, align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %"class.std::__1::vector.343", align 8
  %9 = alloca %class.sk_sp.345, align 8
  %10 = alloca %class.sk_sp.333, align 8
  %11 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %12, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #14
  call void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer* %1, %class.SkString* nonnull %3) #14
  %13 = bitcast %class.sk_sp.333* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %14, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.333* nonnull sret %4, %class.SkReadBuffer* %1) #14
  %15 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #14
  %16 = and i32 %15, 1
  %17 = icmp ne i32 %16, 0
  %18 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #14
  %19 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %20 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %20, align 16
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %22 = bitcast float* %21 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %22, align 16
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %23, align 16
  store i32 16, i32* %19, align 4
  %24 = and i32 %15, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %2
  call void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* %1, %class.SkMatrix* nonnull %5) #14
  br label %27

27:                                               ; preds = %2, %26
  %28 = phi %class.SkMatrix* [ %5, %26 ], [ null, %2 ]
  %29 = bitcast %class.sk_sp.79* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %6, i64 0, i32 0
  store %class.SkRuntimeEffect* inttoptr (i64 -6148914691236517206 to %class.SkRuntimeEffect*), %class.SkRuntimeEffect** %30, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %7, %class.SkString* nonnull dereferenceable(8) %3) #14
  call void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.79* nonnull sret %6, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)* nonnull @_ZN15SkRuntimeEffect13MakeForShaderE8SkString, %class.SkString* nonnull %7)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #14
  %31 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %30, align 8
  %32 = icmp eq %class.SkRuntimeEffect* %31, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %34

34:                                               ; preds = %27, %33
  %35 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.sk_sp.332, %class.sk_sp.332* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %39, align 8
  br label %175

40:                                               ; preds = %34
  %41 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #14
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %31, i64 0, i32 6
  %44 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %31, i64 0, i32 6, i32 0, i32 1
  %45 = bitcast %"struct.SkRuntimeEffect::Child"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.219"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = ashr exact i64 %49, 4
  %51 = icmp eq i64 %50, %42
  br i1 %51, label %53, label %52

52:                                               ; preds = %40
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #14
  br label %53

53:                                               ; preds = %40, %52
  %54 = load i8, i8* %35, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.sk_sp.332, %class.sk_sp.332* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %57, align 8
  br label %175

58:                                               ; preds = %53
  %59 = bitcast %"class.std::__1::vector.343"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #14
  %60 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %8, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %8, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #14
  %63 = icmp eq i32 %41, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  %65 = bitcast %class.sk_sp.345** %61 to i64*
  br label %85

66:                                               ; preds = %58
  %67 = icmp slt i32 %41, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector.343"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %69) #16
  unreachable

70:                                               ; preds = %66
  %71 = shl nsw i64 %42, 3
  %72 = call i8* @_Znwm(i64 %71) #15
  %73 = bitcast i8* %72 to %class.sk_sp.345*
  %74 = bitcast %"class.std::__1::vector.343"* %8 to i8**
  store i8* %72, i8** %74, align 8
  %75 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %73, i64 %42
  store %class.sk_sp.345* %75, %class.sk_sp.345** %62, align 8
  %76 = bitcast %class.sk_sp.345** %61 to i64*
  %77 = ptrtoint i8* %72 to i64
  %78 = add nsw i64 %42, -1
  %79 = getelementptr %class.sk_sp.345, %class.sk_sp.345* %73, i64 %78, i32 0
  %80 = ptrtoint %class.SkShader** %79 to i64
  %81 = sub i64 8, %77
  %82 = add i64 %81, %80
  %83 = and i64 %82, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 %83, i1 false) #14
  %84 = ptrtoint %class.sk_sp.345* %75 to i64
  store i64 %84, i64* %76, align 8
  br label %85

85:                                               ; preds = %64, %70
  %86 = phi i64* [ %65, %64 ], [ %76, %70 ]
  %87 = phi %class.sk_sp.345* [ null, %64 ], [ %73, %70 ]
  %88 = phi i64 [ 0, %64 ], [ %77, %70 ]
  %89 = phi i64 [ 0, %64 ], [ %84, %70 ]
  %90 = bitcast %"class.std::__1::vector.343"* %8 to i64*
  %91 = icmp eq i64 %89, %88
  br i1 %91, label %95, label %148

92:                                               ; preds = %168
  %93 = inttoptr i64 %171 to %class.sk_sp.345*
  %94 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %30, align 8
  br label %95

95:                                               ; preds = %92, %85
  %96 = phi %class.sk_sp.345* [ %87, %85 ], [ %93, %92 ]
  %97 = phi %class.SkRuntimeEffect* [ %31, %85 ], [ %94, %92 ]
  %98 = phi i64 [ 0, %85 ], [ %173, %92 ]
  %99 = bitcast %class.sk_sp.345* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #14
  %100 = bitcast %class.sk_sp.333* %4 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SkData* null, %class.SkData** %14, align 8
  %102 = bitcast %class.sk_sp.333* %10 to i64*
  store i64 %101, i64* %102, align 8
  call void @_ZNK15SkRuntimeEffect10makeShaderE5sk_spI6SkDataEPS0_I8SkShaderEmPK8SkMatrixb(%class.sk_sp.345* nonnull sret %9, %class.SkRuntimeEffect* %97, %class.sk_sp.333* nonnull %10, %class.sk_sp.345* %96, i64 %98, %class.SkMatrix* %28, i1 zeroext %17)
  %103 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %9, i64 0, i32 0
  %104 = bitcast %class.sk_sp.345* %9 to i64*
  %105 = load i64, i64* %104, align 8
  store %class.SkShader* null, %class.SkShader** %103, align 8
  %106 = bitcast %class.sk_sp.332* %0 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %10, i64 0, i32 0
  %108 = load %class.SkData*, %class.SkData** %107, align 8
  %109 = icmp eq %class.SkData* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %95
  %111 = getelementptr inbounds %class.SkData, %class.SkData* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %108) #14
  %115 = bitcast %class.SkData* %108 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %115) #14
  br label %116

116:                                              ; preds = %95, %110, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #14
  %117 = load %class.sk_sp.345*, %class.sk_sp.345** %60, align 8
  %118 = icmp eq %class.sk_sp.345* %117, null
  br i1 %118, label %146, label %119

119:                                              ; preds = %116
  %120 = bitcast %class.sk_sp.345* %117 to i8*
  %121 = load %class.sk_sp.345*, %class.sk_sp.345** %61, align 8
  %122 = icmp eq %class.sk_sp.345* %121, %117
  br i1 %122, label %144, label %123

123:                                              ; preds = %119, %139
  %124 = phi %class.sk_sp.345* [ %125, %139 ], [ %121, %119 ]
  %125 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %124, i64 -1
  %126 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %125, i64 0, i32 0
  %127 = load %class.SkShader*, %class.SkShader** %126, align 8
  %128 = icmp eq %class.SkShader* %127, null
  br i1 %128, label %139, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %class.SkShader, %class.SkShader* %127, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %139

133:                                              ; preds = %129
  %134 = bitcast %class.SkShader* %127 to %class.SkRefCntBase*
  %135 = bitcast %class.SkShader* %127 to void (%class.SkRefCntBase*)***
  %136 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, i64 2
  %138 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %137, align 8
  call void %138(%class.SkRefCntBase* nonnull %134) #14
  br label %139

139:                                              ; preds = %133, %129, %123
  %140 = icmp eq %class.sk_sp.345* %125, %117
  br i1 %140, label %141, label %123

141:                                              ; preds = %139
  %142 = bitcast %"class.std::__1::vector.343"* %8 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %119
  %145 = phi i8* [ %143, %141 ], [ %120, %119 ]
  store %class.sk_sp.345* %117, %class.sk_sp.345** %61, align 8
  call void @_ZdlPv(i8* %145) #15
  br label %146

146:                                              ; preds = %116, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #14
  %147 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %30, align 8
  br label %175

148:                                              ; preds = %85, %168
  %149 = phi i64 [ %169, %168 ], [ 0, %85 ]
  %150 = call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 8) #14, !noalias !40
  %151 = ptrtoint %class.SkFlattenable* %150 to i64
  %152 = load %class.sk_sp.345*, %class.sk_sp.345** %60, align 8
  %153 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %152, i64 %149
  %154 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %153, i64 0, i32 0
  %155 = load %class.SkShader*, %class.SkShader** %154, align 8
  %156 = bitcast %class.sk_sp.345* %153 to i64*
  store i64 %151, i64* %156, align 8
  %157 = icmp eq %class.SkShader* %155, null
  br i1 %157, label %168, label %158

158:                                              ; preds = %148
  %159 = getelementptr inbounds %class.SkShader, %class.SkShader* %155, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i32* %159, i32 -1 acq_rel
  %161 = icmp eq i32 %160, 1
  br i1 %161, label %162, label %168

162:                                              ; preds = %158
  %163 = bitcast %class.SkShader* %155 to %class.SkRefCntBase*
  %164 = bitcast %class.SkShader* %155 to void (%class.SkRefCntBase*)***
  %165 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %164, align 8
  %166 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %165, i64 2
  %167 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, align 8
  call void %167(%class.SkRefCntBase* nonnull %163) #14
  br label %168

168:                                              ; preds = %162, %158, %148
  %169 = add nuw i64 %149, 1
  %170 = load i64, i64* %86, align 8
  %171 = load i64, i64* %90, align 8
  %172 = sub i64 %170, %171
  %173 = ashr exact i64 %172, 3
  %174 = icmp ult i64 %169, %173
  br i1 %174, label %148, label %92

175:                                              ; preds = %56, %146, %38
  %176 = phi %class.SkRuntimeEffect* [ %31, %56 ], [ %147, %146 ], [ %31, %38 ]
  %177 = icmp eq %class.SkRuntimeEffect* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %176, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = bitcast %class.SkRuntimeEffect* %176 to %class.SkRefCntBase*
  %184 = bitcast %class.SkRuntimeEffect* %176 to void (%class.SkRefCntBase*)***
  %185 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %184, align 8
  %186 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %185, i64 2
  %187 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %186, align 8
  call void %187(%class.SkRefCntBase* nonnull %183) #14
  br label %188

188:                                              ; preds = %175, %178, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #14
  %189 = load %class.SkData*, %class.SkData** %14, align 8
  %190 = icmp eq %class.SkData* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %class.SkData, %class.SkData* %189, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = atomicrmw add i32* %192, i32 -1 acq_rel
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %189) #14
  %196 = bitcast %class.SkData* %189 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %196) #14
  br label %197

197:                                              ; preds = %188, %191, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  ret void
}

declare void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer*, %class.SkMatrix*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect13MakeForShaderE8SkString(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*) #0 comdat align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.SkString, align 8
  %5 = alloca %"struct.SkRuntimeEffect::Options", align 1
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %4, %class.SkString* dereferenceable(8) %1) #14
  %6 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %6) #14
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %5, i64 0, i32 1
  store i8 1, i8* %7, align 1
  %8 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"struct.SkRuntimeEffect::Result"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 16, i1 false) #14, !alias.scope !45
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* nonnull dereferenceable(8) %4) #14, !noalias !45
  call void @_ZN15SkRuntimeEffect4MakeE8SkStringRKNS_7OptionsEN4SkSL11ProgramKindE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %3, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %5, i8 signext 5) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %6) #14
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkRuntimeEffect10makeShaderE5sk_spI6SkDataEPS0_I8SkShaderEmPK8SkMatrixb(%class.sk_sp.345* noalias nocapture sret, %class.SkRuntimeEffect*, %class.sk_sp.333* nocapture, %class.sk_sp.345* readonly, i64, %class.SkMatrix*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.sk_sp.333, align 8
  %9 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %14, align 8
  br label %183

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %2, i64 0, i32 0
  %17 = load %class.SkData*, %class.SkData** %16, align 8
  %18 = icmp eq %class.SkData* %17, null
  br i1 %18, label %19, label %43

19:                                               ; preds = %15
  %20 = bitcast %class.sk_sp.333* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.333* nonnull sret %8) #14
  %21 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %8, i64 0, i32 0
  %22 = bitcast %class.sk_sp.333* %8 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkData* null, %class.SkData** %21, align 8
  %24 = load %class.SkData*, %class.SkData** %16, align 8
  %25 = bitcast %class.sk_sp.333* %2 to i64*
  store i64 %23, i64* %25, align 8
  %26 = icmp eq %class.SkData* %24, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %class.SkData, %class.SkData* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %24) #14
  %32 = bitcast %class.SkData* %24 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %32) #14
  br label %33

33:                                               ; preds = %27, %31
  %34 = load %class.SkData*, %class.SkData** %21, align 8
  %35 = icmp eq %class.SkData* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.SkData, %class.SkData* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %34) #14
  %41 = bitcast %class.SkData* %34 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %41) #14
  br label %42

42:                                               ; preds = %19, %33, %36, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %43

43:                                               ; preds = %15, %42
  %44 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 6, i32 0, i32 0
  %45 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %44, align 8
  %46 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 6, i32 0, i32 1
  %47 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %46, align 8
  %48 = icmp eq %"struct.SkRuntimeEffect::Child"* %45, %47
  %49 = ptrtoint %"struct.SkRuntimeEffect::Child"* %47 to i64
  %50 = ptrtoint %"struct.SkRuntimeEffect::Child"* %45 to i64
  br i1 %48, label %61, label %53

51:                                               ; preds = %53
  %52 = icmp eq %"struct.SkRuntimeEffect::Child"* %58, %47
  br i1 %52, label %61, label %53

53:                                               ; preds = %43, %51
  %54 = phi %"struct.SkRuntimeEffect::Child"* [ %58, %51 ], [ %45, %43 ]
  %55 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %54, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %54, i64 1
  br i1 %57, label %51, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %60, align 8
  br label %183

61:                                               ; preds = %51, %43
  %62 = load %class.SkData*, %class.SkData** %16, align 8
  %63 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 4
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 5, i32 0, i32 0
  %66 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %65, align 8
  %67 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 5, i32 0, i32 1
  %68 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %67, align 8
  %69 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %66, %68
  %70 = ptrtoint %class.SkData* %62 to i64
  br i1 %69, label %89, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %68, i64 -1, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = icmp ult i32 %73, 11
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  call void @llvm.trap() #14
  unreachable

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %68, i64 -1, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = sext i32 %73 to i64
  %80 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %68, i64 -1, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %81, %84
  %86 = add i64 %78, 3
  %87 = add i64 %86, %85
  %88 = and i64 %87, -4
  br label %89

89:                                               ; preds = %61, %76
  %90 = phi i64 [ %88, %76 ], [ 0, %61 ]
  %91 = icmp eq i64 %64, %90
  br i1 %91, label %92, label %181

92:                                               ; preds = %89
  %93 = sub i64 %49, %50
  %94 = ashr exact i64 %93, 4
  %95 = icmp eq i64 %94, %4
  br i1 %95, label %96, label %181

96:                                               ; preds = %92
  %97 = call i8* @_Znwm(i64 104) #15
  %98 = icmp eq %class.SkRuntimeEffect* %1, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 1 monotonic, !noalias !48
  %102 = bitcast %class.sk_sp.333* %2 to i64*
  %103 = load i64, i64* %102, align 8
  br label %104

104:                                              ; preds = %96, %99
  %105 = phi i64 [ %103, %99 ], [ %70, %96 ]
  %106 = ptrtoint %class.SkRuntimeEffect* %1 to i64
  store %class.SkData* null, %class.SkData** %16, align 8
  %107 = zext i1 %6 to i8
  %108 = bitcast i8* %97 to %class.SkShaderBase*
  call void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase* nonnull %108, %class.SkMatrix* %5) #14
  %109 = bitcast i8* %97 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV10SkRTShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds i8, i8* %97, i64 56
  %111 = bitcast i8* %110 to i64*
  store i64 %106, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %97, i64 64
  store i8 %107, i8* %112, align 8
  %113 = getelementptr inbounds i8, i8* %97, i64 72
  %114 = bitcast i8* %113 to i64*
  store i64 %105, i64* %114, align 8
  %115 = getelementptr inbounds i8, i8* %97, i64 80
  %116 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %3, i64 %4
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 24, i1 false) #14
  %117 = shl nuw i64 %4, 3
  %118 = ashr exact i64 %117, 3
  %119 = icmp eq i64 %4, 0
  br i1 %119, label %179, label %120

120:                                              ; preds = %104
  %121 = icmp ugt i64 %118, 2305843009213693951
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = bitcast i8* %115 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %123) #16
  unreachable

124:                                              ; preds = %120
  %125 = call i8* @_Znwm(i64 %117) #15
  %126 = bitcast i8* %125 to %class.sk_sp.345*
  %127 = getelementptr inbounds i8, i8* %97, i64 88
  %128 = bitcast i8* %127 to i8**
  store i8* %125, i8** %128, align 8
  %129 = bitcast i8* %115 to i8**
  store i8* %125, i8** %129, align 8
  %130 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %126, i64 %118
  %131 = getelementptr inbounds i8, i8* %97, i64 96
  %132 = bitcast i8* %131 to %class.sk_sp.345**
  store %class.sk_sp.345* %130, %class.sk_sp.345** %132, align 8
  %133 = shl nsw i64 %4, 3
  %134 = add i64 %133, -8
  %135 = lshr exact i64 %134, 3
  %136 = add nuw nsw i64 %135, 1
  %137 = and i64 %136, 3
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %155, label %139

139:                                              ; preds = %124, %150
  %140 = phi %class.sk_sp.345* [ %152, %150 ], [ %126, %124 ]
  %141 = phi %class.sk_sp.345* [ %151, %150 ], [ %3, %124 ]
  %142 = phi i64 [ %153, %150 ], [ %137, %124 ]
  %143 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %140, i64 0, i32 0
  %144 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %141, i64 0, i32 0
  %145 = load %class.SkShader*, %class.SkShader** %144, align 8
  %146 = icmp eq %class.SkShader* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %class.SkShader, %class.SkShader* %145, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = atomicrmw add i32* %148, i32 1 monotonic
  br label %150

150:                                              ; preds = %147, %139
  store %class.SkShader* %145, %class.SkShader** %143, align 8
  %151 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %141, i64 1
  %152 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %140, i64 1
  %153 = add i64 %142, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %139, !llvm.loop !51

155:                                              ; preds = %150, %124
  %156 = phi %class.sk_sp.345* [ undef, %124 ], [ %152, %150 ]
  %157 = phi %class.sk_sp.345* [ %126, %124 ], [ %152, %150 ]
  %158 = phi %class.sk_sp.345* [ %3, %124 ], [ %151, %150 ]
  %159 = icmp ult i64 %134, 24
  br i1 %159, label %175, label %160

160:                                              ; preds = %155, %203
  %161 = phi %class.sk_sp.345* [ %205, %203 ], [ %157, %155 ]
  %162 = phi %class.sk_sp.345* [ %204, %203 ], [ %158, %155 ]
  %163 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %161, i64 0, i32 0
  %164 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %162, i64 0, i32 0
  %165 = load %class.SkShader*, %class.SkShader** %164, align 8
  %166 = icmp eq %class.SkShader* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %class.SkShader, %class.SkShader* %165, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 1 monotonic
  br label %170

170:                                              ; preds = %167, %160
  store %class.SkShader* %165, %class.SkShader** %163, align 8
  %171 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %161, i64 1, i32 0
  %172 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %162, i64 1, i32 0
  %173 = load %class.SkShader*, %class.SkShader** %172, align 8
  %174 = icmp eq %class.SkShader* %173, null
  br i1 %174, label %187, label %184

175:                                              ; preds = %203, %155
  %176 = phi %class.sk_sp.345* [ %156, %155 ], [ %205, %203 ]
  %177 = bitcast i8* %127 to i64*
  %178 = ptrtoint %class.sk_sp.345* %176 to i64
  store i64 %178, i64* %177, align 8
  br label %179

179:                                              ; preds = %104, %175
  %180 = bitcast %class.sk_sp.345* %0 to i8**
  store i8* %97, i8** %180, align 8
  br label %183

181:                                              ; preds = %92, %89
  %182 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %182, align 8
  br label %183

183:                                              ; preds = %181, %179, %59, %13
  ret void

184:                                              ; preds = %170
  %185 = getelementptr inbounds %class.SkShader, %class.SkShader* %173, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = atomicrmw add i32* %185, i32 1 monotonic
  br label %187

187:                                              ; preds = %184, %170
  store %class.SkShader* %173, %class.SkShader** %171, align 8
  %188 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %161, i64 2, i32 0
  %189 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %162, i64 2, i32 0
  %190 = load %class.SkShader*, %class.SkShader** %189, align 8
  %191 = icmp eq %class.SkShader* %190, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %class.SkShader, %class.SkShader* %190, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = atomicrmw add i32* %193, i32 1 monotonic
  br label %195

195:                                              ; preds = %192, %187
  store %class.SkShader* %190, %class.SkShader** %188, align 8
  %196 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %161, i64 3, i32 0
  %197 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %162, i64 3, i32 0
  %198 = load %class.SkShader*, %class.SkShader** %197, align 8
  %199 = icmp eq %class.SkShader* %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %class.SkShader, %class.SkShader* %198, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = atomicrmw add i32* %201, i32 1 monotonic
  br label %203

203:                                              ; preds = %200, %195
  store %class.SkShader* %198, %class.SkShader** %196, align 8
  %204 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %162, i64 4
  %205 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %161, i64 4
  %206 = icmp eq %class.sk_sp.345* %204, %116
  br i1 %206, label %175, label %160
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK15SkRuntimeEffect6makeFPE5sk_spI6SkDataEPNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEm(%class.SkRuntimeEffect*, %class.sk_sp.333* nocapture, %"class.std::__1::unique_ptr.351"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.333, align 8
  %6 = alloca %class.sk_sp.79, align 8
  %7 = alloca %class.sk_sp.333, align 8
  %8 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %1, i64 0, i32 0
  %9 = load %class.SkData*, %class.SkData** %8, align 8
  %10 = icmp eq %class.SkData* %9, null
  br i1 %10, label %11, label %35

11:                                               ; preds = %4
  %12 = bitcast %class.sk_sp.333* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  call void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.333* nonnull sret %5) #14
  %13 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %5, i64 0, i32 0
  %14 = bitcast %class.sk_sp.333* %5 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.SkData* null, %class.SkData** %13, align 8
  %16 = load %class.SkData*, %class.SkData** %8, align 8
  %17 = bitcast %class.sk_sp.333* %1 to i64*
  store i64 %15, i64* %17, align 8
  %18 = icmp eq %class.SkData* %16, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %16) #14
  %24 = bitcast %class.SkData* %16 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %24) #14
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %class.SkData*, %class.SkData** %13, align 8
  %27 = icmp eq %class.SkData* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.SkData, %class.SkData* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %26) #14
  %33 = bitcast %class.SkData* %26 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %33) #14
  br label %34

34:                                               ; preds = %11, %25, %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  br label %35

35:                                               ; preds = %4, %34
  %36 = icmp eq %class.SkRuntimeEffect* %0, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic, !noalias !52
  br label %40

40:                                               ; preds = %35, %37
  %41 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %6, i64 0, i32 0
  store %class.SkRuntimeEffect* %0, %class.SkRuntimeEffect** %41, align 8, !alias.scope !52
  %42 = bitcast %class.sk_sp.333* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkData* null, %class.SkData** %8, align 8
  %44 = bitcast %class.sk_sp.333* %7 to i64*
  store i64 %43, i64* %44, align 8
  %45 = call %class.GrSkSLFP* @_ZN8GrSkSLFP4MakeE5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.sk_sp.79* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), %class.sk_sp.333* nonnull %7) #14
  %46 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %7, i64 0, i32 0
  %47 = load %class.SkData*, %class.SkData** %46, align 8
  %48 = icmp eq %class.SkData* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %class.SkData, %class.SkData* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %47) #14
  %54 = bitcast %class.SkData* %47 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %54) #14
  br label %55

55:                                               ; preds = %40, %49, %53
  %56 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %41, align 8
  %57 = icmp eq %class.SkRuntimeEffect* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkRuntimeEffect* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkRuntimeEffect* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #14
  br label %68

68:                                               ; preds = %55, %58, %62
  %69 = icmp eq i64 %3, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %72, %68
  %71 = bitcast %class.GrSkSLFP* %45 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %71

72:                                               ; preds = %68, %72
  %73 = phi i64 [ %76, %72 ], [ 0, %68 ]
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.351"* %2, i64 %73, i32 0, i32 0, i32 0
  %75 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %74, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %74, align 8
  call void @_ZN8GrSkSLFP8addChildENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrSkSLFP* %45, %class.GrFragmentProcessor* %75) #14
  %76 = add nuw i64 %73, 1
  %77 = icmp eq i64 %76, %3
  br i1 %77, label %70, label %72
}

declare void @_ZN6SkData9MakeEmptyEv(%class.sk_sp.333* sret) local_unnamed_addr #2

declare %class.GrSkSLFP* @_ZN8GrSkSLFP4MakeE5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.sk_sp.79*, i8*, %class.sk_sp.333*) local_unnamed_addr #2

declare void @_ZN8GrSkSLFP8addChildENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrSkSLFP*, %class.GrFragmentProcessor*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkRuntimeEffect9makeImageEP18GrRecordingContext5sk_spI6SkDataEPS2_I8SkShaderEmPK8SkMatrix11SkImageInfob(%class.sk_sp.330* noalias sret, %class.SkRuntimeEffect*, %class.GrRecordingContext*, %class.sk_sp.333* nocapture, %class.sk_sp.345* readonly, i64, %class.SkMatrix*, %struct.SkImageInfo*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = alloca %class.GrImageInfo, align 8
  %13 = alloca %class.sk_sp.333, align 8
  %14 = alloca %class.sk_sp.333, align 8
  %15 = alloca %class.sk_sp.79, align 8
  %16 = alloca %class.sk_sp.333, align 8
  %17 = alloca %class.SkSimpleMatrixProvider, align 8
  %18 = alloca %class.GrColorInfo, align 8
  %19 = alloca %struct.GrFPArgs, align 8
  %20 = alloca %class.SkMatrix, align 16
  %21 = alloca %class.sk_sp.565, align 8
  %22 = alloca %class.GrSurfaceProxyView, align 8
  %23 = alloca %class.SkColorInfo, align 8
  %24 = alloca %class.sk_sp.567, align 8
  %25 = alloca %class.sk_sp.345, align 8
  %26 = alloca %class.sk_sp.333, align 8
  %27 = alloca %class.SkPaint, align 8
  %28 = alloca %class.sk_sp.345, align 8
  %29 = icmp eq %class.GrRecordingContext* %2, null
  br i1 %29, label %385, label %30

30:                                               ; preds = %9
  %31 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0
  %32 = tail call %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base* %31) #14
  %33 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %32, i64 0, i32 3
  %34 = bitcast i48* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = and i64 %35, 2
  %37 = icmp ne i64 %36, 0
  %38 = and i1 %37, %8
  %39 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 0
  %40 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %39, %class.SkColorInfo* dereferenceable(16) %40) #14
  %41 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 1
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 1
  %43 = bitcast %struct.SkISize* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %struct.SkISize* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = call %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext* nonnull %2, %class.GrImageInfo* nonnull %12, i32 1, i32 1, i1 zeroext %38, i1 zeroext false, i32 0, i1 zeroext true) #14
  %47 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 0, i32 1, i32 0
  %48 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %47, align 8
  %49 = icmp eq %class.GrColorSpaceXform* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %30
  %51 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %48, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.GrColorSpaceXform* %48 to %class.SkRefCntBase*
  %56 = bitcast %class.GrColorSpaceXform* %48 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #14
  br label %60

60:                                               ; preds = %54, %50, %30
  %61 = getelementptr inbounds %class.GrImageInfo, %class.GrImageInfo* %12, i64 0, i32 0, i32 0, i32 0
  %62 = load %class.SkColorSpace*, %class.SkColorSpace** %61, align 8
  %63 = icmp eq %class.SkColorSpace* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = bitcast %class.SkColorSpace* %62 to i8*
  call void @_ZdlPv(i8* %69) #15
  br label %70

70:                                               ; preds = %60, %64, %68
  %71 = icmp eq %class.GrSurfaceFillContext* %46, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %70
  %73 = getelementptr inbounds %class.sk_sp.330, %class.sk_sp.330* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %73, align 8
  br label %469

74:                                               ; preds = %70
  %75 = bitcast %class.sk_sp.333* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  %76 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %3, i64 0, i32 0
  %77 = bitcast %class.sk_sp.333* %3 to i64*
  %78 = load i64, i64* %77, align 8
  store %class.SkData* null, %class.SkData** %76, align 8
  %79 = bitcast %class.sk_sp.333* %14 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %81 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 8
  call fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* nonnull sret %13, %class.SkRuntimeEffect* %1, %class.sk_sp.333* nonnull %14, %class.SkColorSpace* %81)
  %82 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %13, i64 0, i32 0
  %83 = bitcast %class.sk_sp.333* %13 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkData* null, %class.SkData** %82, align 8
  %85 = load %class.SkData*, %class.SkData** %76, align 8
  store i64 %84, i64* %77, align 8
  %86 = icmp eq %class.SkData* %85, null
  br i1 %86, label %102, label %87

87:                                               ; preds = %74
  %88 = getelementptr inbounds %class.SkData, %class.SkData* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %85) #14
  %92 = bitcast %class.SkData* %85 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %92) #14
  br label %93

93:                                               ; preds = %87, %91
  %94 = load %class.SkData*, %class.SkData** %82, align 8
  %95 = icmp eq %class.SkData* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %class.SkData, %class.SkData* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %94) #14
  %101 = bitcast %class.SkData* %94 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %101) #14
  br label %102

102:                                              ; preds = %74, %93, %96, %100
  %103 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %14, i64 0, i32 0
  %104 = load %class.SkData*, %class.SkData** %103, align 8
  %105 = icmp eq %class.SkData* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.SkData, %class.SkData* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %104) #14
  %111 = bitcast %class.SkData* %104 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %111) #14
  br label %112

112:                                              ; preds = %102, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  %113 = icmp eq %class.SkRuntimeEffect* %1, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 1 monotonic, !noalias !55
  br label %117

117:                                              ; preds = %112, %114
  %118 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %15, i64 0, i32 0
  store %class.SkRuntimeEffect* %1, %class.SkRuntimeEffect** %118, align 8, !alias.scope !55
  %119 = load i64, i64* %77, align 8
  store %class.SkData* null, %class.SkData** %76, align 8
  %120 = bitcast %class.sk_sp.333* %16 to i64*
  store i64 %119, i64* %120, align 8
  %121 = call %class.GrSkSLFP* @_ZN8GrSkSLFP4MakeE5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.sk_sp.79* nonnull %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), %class.sk_sp.333* nonnull %16) #14
  %122 = ptrtoint %class.GrSkSLFP* %121 to i64
  %123 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %16, i64 0, i32 0
  %124 = load %class.SkData*, %class.SkData** %123, align 8
  %125 = icmp eq %class.SkData* %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %117
  %127 = getelementptr inbounds %class.SkData, %class.SkData* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw add i32* %127, i32 -1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %124) #14
  %131 = bitcast %class.SkData* %124 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %131) #14
  br label %132

132:                                              ; preds = %117, %126, %130
  %133 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %118, align 8
  %134 = icmp eq %class.SkRuntimeEffect* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %133, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = bitcast %class.SkRuntimeEffect* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkRuntimeEffect* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8
  call void %144(%class.SkRefCntBase* nonnull %140) #14
  br label %145

145:                                              ; preds = %132, %135, %139
  %146 = bitcast %class.SkSimpleMatrixProvider* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %146) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %146, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZNK15SkRuntimeEffect9makeImageEP18GrRecordingContext5sk_spI6SkDataEPS2_I8SkShaderEmPK8SkMatrix11SkImageInfob.matrixProvider to i8*), i64 112, i1 false)
  %147 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14
  %148 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16SkMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %149 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1
  %150 = bitcast %class.SkMatrix* %147 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 1
  %153 = bitcast float* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 2
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 3
  %159 = bitcast float* %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 4
  %162 = bitcast float* %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 5
  %165 = bitcast float* %164 to i32*
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 6
  %168 = bitcast float* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 7
  %171 = bitcast float* %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %147, i64 0, i32 0, i64 8
  %174 = bitcast float* %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = bitcast %class.SkM44* %149 to i32*
  store i32 %151, i32* %176, align 8
  %177 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 1
  %178 = bitcast float* %177 to i32*
  store i32 %160, i32* %178, align 4
  %179 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %179, align 8
  %180 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 3
  %181 = bitcast float* %180 to i32*
  store i32 %169, i32* %181, align 4
  %182 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 4
  %183 = bitcast float* %182 to i32*
  store i32 %154, i32* %183, align 8
  %184 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 5
  %185 = bitcast float* %184 to i32*
  store i32 %163, i32* %185, align 4
  %186 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %186, align 8
  %187 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 7
  %188 = bitcast float* %187 to i32*
  store i32 %172, i32* %188, align 4
  %189 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 8
  %190 = bitcast float* %189 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %190, align 8
  %191 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 12
  %192 = bitcast float* %191 to i32*
  store i32 %157, i32* %192, align 8
  %193 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 13
  %194 = bitcast float* %193 to i32*
  store i32 %166, i32* %194, align 4
  %195 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %195, align 8
  %196 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 1, i32 0, i64 15
  %197 = bitcast float* %196 to i32*
  store i32 %175, i32* %197, align 4
  %198 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0, i32 2
  %199 = bitcast %class.SkMatrix* %198 to i8*
  %200 = bitcast %class.SkMatrix* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %199, i8* align 4 %200, i64 40, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %201 = bitcast %class.GrColorInfo* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #14
  %202 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %18, i64 0, i32 0, i32 0
  %203 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %18, i64 0, i32 1, i32 0
  %204 = bitcast %class.GrColorInfo* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 24, i1 false)
  call void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo* nonnull %18, %class.SkColorInfo* dereferenceable(16) %40) #14
  %205 = bitcast %struct.GrFPArgs* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %205) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 32, i1 false)
  %206 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %17, i64 0, i32 0
  %207 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %19, i64 0, i32 0
  store %class.GrRecordingContext* %2, %class.GrRecordingContext** %207, align 8
  %208 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %19, i64 0, i32 1
  store %class.SkMatrixProvider* %206, %class.SkMatrixProvider** %208, align 8
  %209 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %19, i64 0, i32 2
  store %class.SkMatrix* null, %class.SkMatrix** %209, align 8
  %210 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %19, i64 0, i32 3
  store i8 0, i8* %210, align 8
  %211 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %19, i64 0, i32 4
  store %class.GrColorInfo* %18, %class.GrColorInfo** %211, align 8
  %212 = icmp eq i64 %5, 0
  br i1 %212, label %229, label %213

213:                                              ; preds = %145, %220
  %214 = phi i64 [ %227, %220 ], [ 0, %145 ]
  %215 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %4, i64 %214, i32 0
  %216 = load %class.SkShader*, %class.SkShader** %215, align 8
  %217 = icmp eq %class.SkShader* %216, null
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = getelementptr inbounds %class.sk_sp.330, %class.sk_sp.330* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %219, align 8
  br label %349

220:                                              ; preds = %213
  %221 = bitcast %class.SkShader* %216 to %class.SkShaderBase*
  %222 = bitcast %class.SkShader* %216 to %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)***
  %223 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*** %222, align 8
  %224 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %223, i64 10
  %225 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %224, align 8
  %226 = call %class.GrFragmentProcessor* %225(%class.SkShaderBase* nonnull %221, %struct.GrFPArgs* nonnull dereferenceable(40) %19) #14
  call void @_ZN8GrSkSLFP8addChildENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrSkSLFP* %121, %class.GrFragmentProcessor* %226) #14
  %227 = add nuw i64 %214, 1
  %228 = icmp eq i64 %227, %5
  br i1 %228, label %229, label %213

229:                                              ; preds = %220, %145
  %230 = icmp eq %class.SkMatrix* %6, null
  br i1 %230, label %267, label %231

231:                                              ; preds = %229
  %232 = bitcast %class.SkMatrix* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %232) #14
  %233 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 1
  %234 = bitcast %class.SkMatrix* %20 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %234, align 16
  %235 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 4
  %236 = bitcast float* %235 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %236, align 16
  %237 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %20, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %237, align 16
  store i32 16, i32* %233, align 4
  %238 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = trunc i32 %239 to i8
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %245

242:                                              ; preds = %231
  %243 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %6) #14
  %244 = zext i8 %243 to i32
  store i32 %244, i32* %238, align 4
  br label %245

245:                                              ; preds = %242, %231
  %246 = phi i32 [ %244, %242 ], [ %239, %231 ]
  %247 = and i32 %246, 15
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %245
  %250 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %20) #14
  br label %255

251:                                              ; preds = %245
  %252 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %6, %class.SkMatrix* nonnull %20) #14
  br i1 %252, label %255, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %class.sk_sp.330, %class.sk_sp.330* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %254, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %232) #14
  br label %349

255:                                              ; preds = %249, %251
  %256 = bitcast %class.GrSkSLFP* %121 to %class.GrFragmentProcessor*
  %257 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %258 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #14
  %259 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %46, i64 0, i32 1, i32 0, i32 0
  %260 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %259, align 8
  %261 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %260, i64 0, i32 6
  %262 = bitcast %struct.SkISize* %261 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 0, i64* %264, align 8
  %265 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 %263, i64* %265, align 8
  %266 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %20, %class.GrFragmentProcessor* %256) #14
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %46, %struct.SkIRect* nonnull dereferenceable(16) %257, %class.GrFragmentProcessor* %266) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %232) #14
  br label %278

267:                                              ; preds = %229
  %268 = bitcast %class.GrSkSLFP* %121 to %class.GrFragmentProcessor*
  %269 = bitcast { i64, i64 }* %11 to %struct.SkIRect*
  %270 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %270) #14
  %271 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %46, i64 0, i32 1, i32 0, i32 0
  %272 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %271, align 8
  %273 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %272, i64 0, i32 6
  %274 = bitcast %struct.SkISize* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 0, i64* %276, align 8
  %277 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  store i64 %275, i64* %277, align 8
  call void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext* nonnull %46, %struct.SkIRect* nonnull dereferenceable(16) %269, %class.GrFragmentProcessor* %268) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %270) #14
  br label %278

278:                                              ; preds = %255, %267
  %279 = call i8* @_Znwm(i64 104) #15
  %280 = bitcast i8* %279 to %class.SkImage_Gpu*
  %281 = getelementptr inbounds %class.GrRecordingContext, %class.GrRecordingContext* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw add i32* %281, i32 1 monotonic, !noalias !58
  %283 = ptrtoint %class.GrRecordingContext* %2 to i64
  %284 = bitcast %class.sk_sp.565* %21 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 0, i32 0
  %286 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %46, i64 0, i32 0, i32 2, i32 0, i32 0
  %287 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %286, align 8, !noalias !61
  %288 = icmp eq %class.GrSurfaceProxy* %287, null
  br i1 %288, label %292, label %289

289:                                              ; preds = %278
  %290 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %287, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = atomicrmw add i32* %290, i32 1 monotonic, !noalias !61
  br label %292

292:                                              ; preds = %278, %289
  store %class.GrSurfaceProxy* %287, %class.GrSurfaceProxy** %285, align 8, !alias.scope !61
  %293 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 1
  %294 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %46, i64 0, i32 0, i32 2, i32 1
  %295 = load i32, i32* %294, align 8, !noalias !61
  store i32 %295, i32* %293, align 8, !alias.scope !61
  %296 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %22, i64 0, i32 2, i32 0
  %297 = getelementptr inbounds %class.GrSurfaceFillContext, %class.GrSurfaceFillContext* %46, i64 0, i32 0, i32 2, i32 2, i32 0
  %298 = load i16, i16* %297, align 2, !noalias !61
  store i16 %298, i16* %296, align 4, !alias.scope !61
  %299 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %23, i64 0, i32 0, i32 0
  %300 = load %class.SkColorSpace*, %class.SkColorSpace** %80, align 8
  %301 = icmp eq %class.SkColorSpace* %300, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %292
  %303 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = atomicrmw add i32* %303, i32 1 monotonic
  br label %305

305:                                              ; preds = %292, %302
  store %class.SkColorSpace* %300, %class.SkColorSpace** %299, align 8
  %306 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %23, i64 0, i32 1
  %307 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %308 = bitcast i32* %307 to i64*
  %309 = bitcast i32* %306 to i64*
  %310 = load i64, i64* %308, align 8
  store i64 %310, i64* %309, align 8
  call void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu* nonnull %280, %class.sk_sp.565* nonnull %21, i32 0, %class.GrSurfaceProxyView* nonnull %22, %class.SkColorInfo* nonnull %23) #14
  %311 = bitcast %class.sk_sp.330* %0 to i8**
  store i8* %279, i8** %311, align 8
  %312 = load %class.SkColorSpace*, %class.SkColorSpace** %299, align 8
  %313 = icmp eq %class.SkColorSpace* %312, null
  br i1 %313, label %320, label %314

314:                                              ; preds = %305
  %315 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = atomicrmw add i32* %315, i32 -1 acq_rel
  %317 = icmp eq i32 %316, 1
  br i1 %317, label %318, label %320

318:                                              ; preds = %314
  %319 = bitcast %class.SkColorSpace* %312 to i8*
  call void @_ZdlPv(i8* %319) #15
  br label %320

320:                                              ; preds = %305, %314, %318
  %321 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %285, align 8
  %322 = icmp eq %class.GrSurfaceProxy* %321, null
  br i1 %322, label %335, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %321, i64 0, i32 1
  %325 = getelementptr inbounds %class.SkNVRefCnt.444, %class.SkNVRefCnt.444* %324, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = atomicrmw add i32* %325, i32 -1 acq_rel
  %327 = icmp eq i32 %326, 1
  br i1 %327, label %328, label %335

328:                                              ; preds = %323
  %329 = getelementptr inbounds %class.SkNVRefCnt.444, %class.SkNVRefCnt.444* %324, i64 -2
  %330 = bitcast %class.SkNVRefCnt.444* %329 to %class.GrSurfaceProxy*
  %331 = bitcast %class.SkNVRefCnt.444* %329 to void (%class.GrSurfaceProxy*)***
  %332 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %331, align 8
  %333 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %332, i64 1
  %334 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %333, align 8
  call void %334(%class.GrSurfaceProxy* nonnull %330) #14
  br label %335

335:                                              ; preds = %320, %323, %328
  %336 = getelementptr inbounds %class.sk_sp.565, %class.sk_sp.565* %21, i64 0, i32 0
  %337 = load %class.GrImageContext*, %class.GrImageContext** %336, align 8
  %338 = icmp eq %class.GrImageContext* %337, null
  br i1 %338, label %349, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %class.GrImageContext, %class.GrImageContext* %337, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = atomicrmw add i32* %340, i32 -1 acq_rel
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %349

343:                                              ; preds = %339
  %344 = bitcast %class.GrImageContext* %337 to %class.SkRefCntBase*
  %345 = bitcast %class.GrImageContext* %337 to void (%class.SkRefCntBase*)***
  %346 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %345, align 8
  %347 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %346, i64 2
  %348 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %347, align 8
  call void %348(%class.SkRefCntBase* nonnull %344) #14
  br label %349

349:                                              ; preds = %335, %339, %343, %253, %218
  %350 = phi i64 [ %122, %218 ], [ %122, %253 ], [ 0, %343 ], [ 0, %339 ], [ 0, %335 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %205) #14
  %351 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %203, align 8
  %352 = icmp eq %class.GrColorSpaceXform* %351, null
  br i1 %352, label %363, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %351, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = atomicrmw add i32* %354, i32 -1 acq_rel
  %356 = icmp eq i32 %355, 1
  br i1 %356, label %357, label %363

357:                                              ; preds = %353
  %358 = bitcast %class.GrColorSpaceXform* %351 to %class.SkRefCntBase*
  %359 = bitcast %class.GrColorSpaceXform* %351 to void (%class.SkRefCntBase*)***
  %360 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %359, align 8
  %361 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %360, i64 2
  %362 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %361, align 8
  call void %362(%class.SkRefCntBase* nonnull %358) #14
  br label %363

363:                                              ; preds = %357, %353, %349
  %364 = load %class.SkColorSpace*, %class.SkColorSpace** %202, align 8
  %365 = icmp eq %class.SkColorSpace* %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %363
  %367 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %364, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = atomicrmw add i32* %367, i32 -1 acq_rel
  %369 = icmp eq i32 %368, 1
  br i1 %369, label %370, label %372

370:                                              ; preds = %366
  %371 = bitcast %class.SkColorSpace* %364 to i8*
  call void @_ZdlPv(i8* %371) #15
  br label %372

372:                                              ; preds = %363, %366, %370
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %146) #14
  %373 = icmp eq i64 %350, 0
  br i1 %373, label %380, label %374

374:                                              ; preds = %372
  %375 = inttoptr i64 %350 to %class.GrSkSLFP*
  %376 = inttoptr i64 %350 to void (%class.GrSkSLFP*)***
  %377 = load void (%class.GrSkSLFP*)**, void (%class.GrSkSLFP*)*** %376, align 8
  %378 = getelementptr inbounds void (%class.GrSkSLFP*)*, void (%class.GrSkSLFP*)** %377, i64 1
  %379 = load void (%class.GrSkSLFP*)*, void (%class.GrSkSLFP*)** %378, align 8
  call void %379(%class.GrSkSLFP* nonnull %375) #14
  br label %380

380:                                              ; preds = %372, %374
  %381 = bitcast %class.GrSurfaceFillContext* %46 to void (%class.GrSurfaceFillContext*)***
  %382 = load void (%class.GrSurfaceFillContext*)**, void (%class.GrSurfaceFillContext*)*** %381, align 8
  %383 = getelementptr inbounds void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %382, i64 1
  %384 = load void (%class.GrSurfaceFillContext*)*, void (%class.GrSurfaceFillContext*)** %383, align 8
  call void %384(%class.GrSurfaceFillContext* nonnull %46) #14
  br label %469

385:                                              ; preds = %9
  %386 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 2
  %387 = load i32, i32* %386, align 4
  %388 = icmp eq i32 %387, 3
  br i1 %388, label %389, label %391

389:                                              ; preds = %385
  %390 = getelementptr inbounds %class.sk_sp.330, %class.sk_sp.330* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %390, align 8
  br label %469

391:                                              ; preds = %385
  %392 = bitcast %class.sk_sp.567* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %392) #14
  %393 = getelementptr inbounds %class.sk_sp.567, %class.sk_sp.567* %24, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %393, align 8
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.567* nonnull sret %24, %struct.SkImageInfo* dereferenceable(24) %7, i64 0, %class.SkSurfaceProps* null) #14
  %394 = load %class.SkSurface*, %class.SkSurface** %393, align 8
  %395 = icmp eq %class.SkSurface* %394, null
  br i1 %395, label %396, label %398

396:                                              ; preds = %391
  %397 = getelementptr inbounds %class.sk_sp.330, %class.sk_sp.330* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %397, align 8
  br label %468

398:                                              ; preds = %391
  %399 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %394) #14
  %400 = bitcast %class.sk_sp.345* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %400) #14
  %401 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %25, i64 0, i32 0
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %401, align 8
  %402 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %3, i64 0, i32 0
  %403 = bitcast %class.sk_sp.333* %3 to i64*
  %404 = load i64, i64* %403, align 8
  store %class.SkData* null, %class.SkData** %402, align 8
  %405 = bitcast %class.sk_sp.333* %26 to i64*
  store i64 %404, i64* %405, align 8
  call void @_ZNK15SkRuntimeEffect10makeShaderE5sk_spI6SkDataEPS0_I8SkShaderEmPK8SkMatrixb(%class.sk_sp.345* nonnull sret %25, %class.SkRuntimeEffect* %1, %class.sk_sp.333* nonnull %26, %class.sk_sp.345* %4, i64 %5, %class.SkMatrix* %6, i1 zeroext false)
  %406 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %26, i64 0, i32 0
  %407 = load %class.SkData*, %class.SkData** %406, align 8
  %408 = icmp eq %class.SkData* %407, null
  br i1 %408, label %415, label %409

409:                                              ; preds = %398
  %410 = getelementptr inbounds %class.SkData, %class.SkData* %407, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = atomicrmw add i32* %410, i32 -1 acq_rel
  %412 = icmp eq i32 %411, 1
  br i1 %412, label %413, label %415

413:                                              ; preds = %409
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %407) #14
  %414 = bitcast %class.SkData* %407 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %414) #14
  br label %415

415:                                              ; preds = %398, %409, %413
  %416 = load %class.SkShader*, %class.SkShader** %401, align 8
  %417 = icmp eq %class.SkShader* %416, null
  br i1 %417, label %418, label %420

418:                                              ; preds = %415
  %419 = getelementptr inbounds %class.sk_sp.330, %class.sk_sp.330* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %419, align 8
  br label %455

420:                                              ; preds = %415
  %421 = ptrtoint %class.SkShader* %416 to i64
  %422 = bitcast %class.SkPaint* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %422) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %422, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK15SkRuntimeEffect9makeImageEP18GrRecordingContext5sk_spI6SkDataEPS2_I8SkShaderEmPK8SkMatrix11SkImageInfob.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %27) #14
  store %class.SkShader* null, %class.SkShader** %401, align 8
  %423 = bitcast %class.sk_sp.345* %28 to i64*
  store i64 %421, i64* %423, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %27, %class.sk_sp.345* nonnull %28) #14
  %424 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %28, i64 0, i32 0
  %425 = load %class.SkShader*, %class.SkShader** %424, align 8
  %426 = icmp eq %class.SkShader* %425, null
  br i1 %426, label %437, label %427

427:                                              ; preds = %420
  %428 = getelementptr inbounds %class.SkShader, %class.SkShader* %425, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = atomicrmw add i32* %428, i32 -1 acq_rel
  %430 = icmp eq i32 %429, 1
  br i1 %430, label %431, label %437

431:                                              ; preds = %427
  %432 = bitcast %class.SkShader* %425 to %class.SkRefCntBase*
  %433 = bitcast %class.SkShader* %425 to void (%class.SkRefCntBase*)***
  %434 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %433, align 8
  %435 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %434, i64 2
  %436 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %435, align 8
  call void %436(%class.SkRefCntBase* nonnull %432) #14
  br label %437

437:                                              ; preds = %431, %427, %420
  %438 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %27, i64 0, i32 8, i32 0, i32 0
  %439 = load i32, i32* %438, align 8
  %440 = and i32 %439, -261121
  %441 = or i32 %440, 1024
  store i32 %441, i32* %438, align 8
  call void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas* %399, %class.SkPaint* nonnull dereferenceable(72) %27) #14
  %442 = load %class.SkSurface*, %class.SkSurface** %393, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.330* sret %0, %class.SkSurface* %442) #14
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %422) #14
  %443 = load %class.SkShader*, %class.SkShader** %401, align 8
  %444 = icmp eq %class.SkShader* %443, null
  br i1 %444, label %455, label %445

445:                                              ; preds = %437
  %446 = getelementptr inbounds %class.SkShader, %class.SkShader* %443, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = atomicrmw add i32* %446, i32 -1 acq_rel
  %448 = icmp eq i32 %447, 1
  br i1 %448, label %449, label %455

449:                                              ; preds = %445
  %450 = bitcast %class.SkShader* %443 to %class.SkRefCntBase*
  %451 = bitcast %class.SkShader* %443 to void (%class.SkRefCntBase*)***
  %452 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %451, align 8
  %453 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %452, i64 2
  %454 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %453, align 8
  call void %454(%class.SkRefCntBase* nonnull %450) #14
  br label %455

455:                                              ; preds = %418, %437, %445, %449
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %400) #14
  %456 = load %class.SkSurface*, %class.SkSurface** %393, align 8
  %457 = icmp eq %class.SkSurface* %456, null
  br i1 %457, label %468, label %458

458:                                              ; preds = %455
  %459 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %456, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = atomicrmw add i32* %459, i32 -1 acq_rel
  %461 = icmp eq i32 %460, 1
  br i1 %461, label %462, label %468

462:                                              ; preds = %458
  %463 = bitcast %class.SkSurface* %456 to %class.SkRefCntBase*
  %464 = bitcast %class.SkSurface* %456 to void (%class.SkRefCntBase*)***
  %465 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %464, align 8
  %466 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %465, i64 2
  %467 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %466, align 8
  call void %467(%class.SkRefCntBase* nonnull %463) #14
  br label %468

468:                                              ; preds = %396, %455, %458, %462
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %392) #14
  br label %469

469:                                              ; preds = %380, %72, %468, %389
  ret void
}

declare %class.GrSurfaceFillContext* @_ZN20GrSurfaceFillContext4MakeEP18GrRecordingContext11GrImageInfo12SkBackingFiti11GrMipmapped11GrProtected15GrSurfaceOrigin10SkBudgeted(%class.GrRecordingContext*, %class.GrImageInfo*, i32, i32, i1 zeroext, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* noalias nocapture sret, %class.SkRuntimeEffect*, %class.sk_sp.333*, %class.SkColorSpace*) unnamed_addr #0 {
  %5 = alloca %class.sk_sp.333, align 8
  %6 = alloca %struct.SkColorSpaceXformSteps, align 4
  %7 = alloca i64, align 8
  %8 = alloca [4 x float], align 16
  %9 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %9) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %9, i8* align 4 getelementptr inbounds ({ %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }, { %"struct.SkColorSpaceXformSteps::Flags", [3 x i8], %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }* @__const._ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace.steps, i64 0, i32 0, i32 0), i64 100, i1 false)
  %10 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #14
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %6, %class.SkColorSpace* %10, i32 3, %class.SkColorSpace* %3, i32 3) #14
  %11 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store i64 0, i64* %7, align 8
  %12 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 5, i32 0, i32 0
  %13 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %12, align 8
  %14 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %1, i64 0, i32 5, i32 0, i32 1
  %15 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %14, align 8
  %16 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %13, %15
  br i1 %16, label %29, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %6, i64 0, i32 0, i32 1
  %19 = bitcast %class.sk_sp.333* %5 to i8*
  %20 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %2, i64 0, i32 0
  %21 = bitcast %class.sk_sp.333* %5 to i64*
  %22 = bitcast [4 x float]* %8 to i8*
  %23 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 0
  %24 = getelementptr inbounds [4 x float], [4 x float]* %8, i64 0, i64 3
  %25 = bitcast [4 x float]* %8 to i8*
  %26 = load i64, i64* %7, align 8
  %27 = bitcast i8* %18 to <4 x i8>*
  br label %49

28:                                               ; preds = %118
  store i64 %119, i64* %7, align 8
  br label %29

29:                                               ; preds = %28, %4
  %30 = phi %class.SkData* [ null, %4 ], [ %120, %28 ]
  %31 = icmp eq %class.SkData* %30, null
  %32 = bitcast i64* %7 to %class.sk_sp.333*
  %33 = select i1 %31, %class.sk_sp.333* %2, %class.sk_sp.333* %32
  %34 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %0, i64 0, i32 0
  %35 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %33, i64 0, i32 0
  %36 = load %class.SkData*, %class.SkData** %35, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  br label %41

41:                                               ; preds = %29, %38
  store %class.SkData* %36, %class.SkData** %34, align 8
  br i1 %31, label %48, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %30) #14
  %47 = bitcast %class.SkData* %30 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %47) #14
  br label %48

48:                                               ; preds = %41, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %9) #14
  ret void

49:                                               ; preds = %17, %118
  %50 = phi i64 [ %26, %17 ], [ %119, %118 ]
  %51 = phi %class.SkData* [ null, %17 ], [ %120, %118 ]
  %52 = phi %class.SkData* [ null, %17 ], [ %121, %118 ]
  %53 = phi %"struct.SkRuntimeEffect::Uniform"* [ %13, %17 ], [ %122, %118 ]
  %54 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %53, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %118, label %58

58:                                               ; preds = %49
  %59 = load i8, i8* %9, align 4, !range !2
  %60 = zext i8 %59 to i32
  %61 = load <4 x i8>, <4 x i8>* %27, align 1
  %62 = icmp eq <4 x i8> %61, zeroinitializer
  %63 = select <4 x i1> %62, <4 x i32> zeroinitializer, <4 x i32> <i32 2, i32 4, i32 8, i32 16>
  %64 = shufflevector <4 x i32> %63, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %65 = or <4 x i32> %63, %64
  %66 = shufflevector <4 x i32> %65, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %67 = or <4 x i32> %65, %66
  %68 = extractelement <4 x i32> %67, i32 0
  %69 = or i32 %68, %60
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %118, label %71

71:                                               ; preds = %58
  %72 = icmp eq %class.SkData* %52, null
  br i1 %72, label %73, label %81

73:                                               ; preds = %71
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %74 = load %class.SkData*, %class.SkData** %20, align 8
  %75 = getelementptr inbounds %class.SkData, %class.SkData* %74, i64 0, i32 3
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %class.SkData, %class.SkData* %74, i64 0, i32 4
  %78 = load i64, i64* %77, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.333* nonnull sret %5, i8* %76, i64 %78) #14
  %79 = load i64, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %80 = inttoptr i64 %79 to %class.SkData*
  br label %81

81:                                               ; preds = %71, %73
  %82 = phi i64 [ %50, %71 ], [ %79, %73 ]
  %83 = phi %class.SkData* [ %51, %71 ], [ %80, %73 ]
  %84 = phi %class.SkData* [ %52, %71 ], [ %80, %73 ]
  %85 = getelementptr inbounds %class.SkData, %class.SkData* %84, i64 0, i32 3
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %53, i64 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  %90 = bitcast i8* %89 to float*
  %91 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %53, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 3
  br i1 %93, label %94, label %105

94:                                               ; preds = %81
  %95 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %53, i64 0, i32 3
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %118

98:                                               ; preds = %94, %98
  %99 = phi i32 [ %102, %98 ], [ 0, %94 ]
  %100 = phi float* [ %101, %98 ], [ %90, %94 ]
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %6, float* %100) #14
  %101 = getelementptr inbounds float, float* %100, i64 4
  %102 = add nuw nsw i32 %99, 1
  %103 = load i32, i32* %95, align 4
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %98, label %118

105:                                              ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #14
  %106 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %53, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -1, i64 16, i1 false)
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %110, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #14
  br label %118

110:                                              ; preds = %105, %110
  %111 = phi i32 [ %115, %110 ], [ 0, %105 ]
  %112 = phi float* [ %114, %110 ], [ %90, %105 ]
  %113 = bitcast float* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %22, i8* align 4 %113, i64 12, i1 false)
  store float 1.000000e+00, float* %24, align 4
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %6, float* nonnull %23) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* nonnull align 16 %22, i64 12, i1 false)
  %114 = getelementptr inbounds float, float* %112, i64 3
  %115 = add nuw nsw i32 %111, 1
  %116 = load i32, i32* %106, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %110, label %109

118:                                              ; preds = %98, %94, %109, %58, %49
  %119 = phi i64 [ %82, %94 ], [ %82, %109 ], [ %50, %58 ], [ %50, %49 ], [ %82, %98 ]
  %120 = phi %class.SkData* [ %83, %94 ], [ %83, %109 ], [ %51, %58 ], [ %51, %49 ], [ %83, %98 ]
  %121 = phi %class.SkData* [ %84, %94 ], [ %84, %109 ], [ %52, %58 ], [ %52, %49 ], [ %84, %98 ]
  %122 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %53, i64 1
  %123 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %122, %15
  br i1 %123, label %28, label %49
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare void @_ZN11GrColorInfoC1ERK11SkColorInfo(%class.GrColorInfo*, %class.SkColorInfo* dereferenceable(16)) unnamed_addr #2

declare void @_ZN11SkImage_GpuC1E5sk_spI14GrImageContextEj18GrSurfaceProxyView11SkColorInfo(%class.SkImage_Gpu*, %class.sk_sp.565*, i32, %class.GrSurfaceProxyView*, %class.SkColorInfo*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.345*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9drawPaintERK7SkPaint(%class.SkCanvas*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.330* sret, %class.SkSurface*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp.337* noalias nocapture sret, %class.SkRuntimeEffect*, %class.sk_sp.333* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.333, align 8
  %5 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %2, i64 0, i32 0
  %6 = bitcast %class.sk_sp.333* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkData* null, %class.SkData** %5, align 8
  %8 = bitcast %class.sk_sp.333* %4 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataEPS0_I13SkColorFilterEm(%class.sk_sp.337* sret %0, %class.SkRuntimeEffect* %1, %class.sk_sp.333* nonnull %4, %class.sk_sp.337* null, i64 0)
  %9 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %4, i64 0, i32 0
  %10 = load %class.SkData*, %class.SkData** %9, align 8
  %11 = icmp eq %class.SkData* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %10) #14
  %17 = bitcast %class.SkData* %10 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %17) #14
  br label %18

18:                                               ; preds = %3, %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkRuntimeEffect20RegisterFlattenablesEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), void (%class.sk_sp.332*, %class.SkReadBuffer*)* nonnull @_ZN20SkRuntimeColorFilter10CreateProcER12SkReadBuffer) #14
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), void (%class.sk_sp.332*, %class.SkReadBuffer*)* nonnull @_ZN10SkRTShader10CreateProcER12SkReadBuffer) #14
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.332*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkRuntimeShaderBuilderC2E5sk_spI15SkRuntimeEffectE(%class.SkRuntimeShaderBuilder*, %class.sk_sp.79* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.79, align 8
  %4 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.79* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %5, align 8
  %8 = bitcast %class.sk_sp.79* %3 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEEC2ES0_I15SkRuntimeEffectE(%class.SkRuntimeEffectBuilder* %4, %class.sk_sp.79* nonnull %3)
  %9 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %3, i64 0, i32 0
  %10 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %9, align 8
  %11 = icmp eq %class.SkRuntimeEffect* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkRuntimeEffect* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkRuntimeEffect* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #14
  br label %22

22:                                               ; preds = %2, %12, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEEC2ES0_I15SkRuntimeEffectE(%class.SkRuntimeEffectBuilder*, %class.sk_sp.79*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %1, i64 0, i32 0
  %4 = bitcast %class.sk_sp.79* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.SkRuntimeEffect* null, %class.SkRuntimeEffect** %3, align 8
  %6 = bitcast %class.SkRuntimeEffectBuilder* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 0, i32 0
  %9 = inttoptr i64 %5 to %class.SkRuntimeEffect*
  %10 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %9, i64 0, i32 5, i32 0, i32 0
  %11 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %10, align 8
  %12 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %9, i64 0, i32 5, i32 0, i32 1
  %13 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %12, align 8
  %14 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %11, %13
  br i1 %14, label %33, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %13, i64 -1, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %17, 11
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %13, i64 -1, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = sext i32 %17 to i64
  %24 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %23
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %13, i64 -1, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %25, %28
  %30 = add i64 %22, 3
  %31 = add i64 %30, %29
  %32 = and i64 %31, -4
  br label %33

33:                                               ; preds = %2, %20
  %34 = phi i64 [ %32, %20 ], [ 0, %2 ]
  tail call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.333* sret %7, i64 %34) #14
  %35 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 2
  %36 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %8, align 8
  %37 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %36, i64 0, i32 6
  %38 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %36, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %"struct.SkRuntimeEffect::Child"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.219"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 4
  %45 = bitcast %"class.std::__1::vector.343"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #14
  %46 = icmp eq i64 %43, 0
  br i1 %46, label %68, label %47

47:                                               ; preds = %33
  %48 = icmp ugt i64 %44, 2305843009213693951
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.343"* %35 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #16
  unreachable

51:                                               ; preds = %47
  %52 = ashr exact i64 %43, 1
  %53 = tail call i8* @_Znwm(i64 %52) #15
  %54 = bitcast i8* %53 to %class.sk_sp.345*
  %55 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 2, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector.343"* %35 to i8**
  store i8* %53, i8** %56, align 8
  %57 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %54, i64 %44
  %58 = getelementptr inbounds %class.SkRuntimeEffectBuilder, %class.SkRuntimeEffectBuilder* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %class.sk_sp.345* %57, %class.sk_sp.345** %58, align 8
  %59 = bitcast %class.sk_sp.345** %55 to i64*
  %60 = ptrtoint i8* %53 to i64
  %61 = add nsw i64 %44, -1
  %62 = getelementptr %class.sk_sp.345, %class.sk_sp.345* %54, i64 %61, i32 0
  %63 = ptrtoint %class.SkShader** %62 to i64
  %64 = sub i64 8, %60
  %65 = add i64 %64, %63
  %66 = and i64 %65, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 %66, i1 false) #14
  %67 = ptrtoint %class.sk_sp.345* %57 to i64
  store i64 %67, i64* %59, align 8
  br label %68

68:                                               ; preds = %33, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkRuntimeShaderBuilderD2Ev(%class.SkRuntimeShaderBuilder* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %0, i64 0, i32 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %2, i64 0, i32 0, i32 0
  %4 = load %class.sk_sp.345*, %class.sk_sp.345** %3, align 8
  %5 = icmp eq %class.sk_sp.345* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.sk_sp.345* %4 to i8*
  %8 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %9 = load %class.sk_sp.345*, %class.sk_sp.345** %8, align 8
  %10 = icmp eq %class.sk_sp.345* %9, %4
  br i1 %10, label %32, label %11

11:                                               ; preds = %6, %27
  %12 = phi %class.sk_sp.345* [ %13, %27 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %12, i64 -1
  %14 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %13, i64 0, i32 0
  %15 = load %class.SkShader*, %class.SkShader** %14, align 8
  %16 = icmp eq %class.SkShader* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.SkShader, %class.SkShader* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkShader* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkShader* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #14
  br label %27

27:                                               ; preds = %21, %17, %11
  %28 = icmp eq %class.sk_sp.345* %13, %4
  br i1 %28, label %29, label %11

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::vector.343"* %2 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %6
  %33 = phi i8* [ %31, %29 ], [ %7, %6 ]
  store %class.sk_sp.345* %4, %class.sk_sp.345** %8, align 8
  tail call void @_ZdlPv(i8* %33) #15
  br label %34

34:                                               ; preds = %32, %1
  %35 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %0, i64 0, i32 0, i32 1, i32 0
  %36 = load %class.SkData*, %class.SkData** %35, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %36) #14
  %43 = bitcast %class.SkData* %36 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %43) #14
  br label %44

44:                                               ; preds = %42, %38, %34
  %45 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %0, i64 0, i32 0, i32 0, i32 0
  %46 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %45, align 8
  %47 = icmp eq %class.SkRuntimeEffect* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkRuntimeEffect* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkRuntimeEffect* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #14
  br label %58

58:                                               ; preds = %44, %48, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkRuntimeShaderBuilder9makeImageEP18GrRecordingContextPK8SkMatrix11SkImageInfob(%class.sk_sp.330* noalias sret, %class.SkRuntimeShaderBuilder* nocapture readonly, %class.GrRecordingContext*, %class.SkMatrix*, %struct.SkImageInfo* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.333, align 8
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %9, align 8
  %11 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %7, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 1, i32 0
  %13 = load %class.SkData*, %class.SkData** %12, align 8, !noalias !64
  %14 = icmp eq %class.SkData* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic, !noalias !64
  br label %18

18:                                               ; preds = %6, %15
  store %class.SkData* %13, %class.SkData** %11, align 8, !alias.scope !64
  %19 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %class.sk_sp.345*, %class.sk_sp.345** %19, align 8
  %21 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %22 = bitcast %class.sk_sp.345** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = ptrtoint %class.sk_sp.345* %20 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 3
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %18
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  br label %34

34:                                               ; preds = %18, %31
  store %class.SkColorSpace* %29, %class.SkColorSpace** %27, align 8
  %35 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %37 = bitcast i32* %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = bitcast i32* %35 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %39, align 8
  call void @_ZNK15SkRuntimeEffect9makeImageEP18GrRecordingContext5sk_spI6SkDataEPS2_I8SkShaderEmPK8SkMatrix11SkImageInfob(%class.sk_sp.330* sret %0, %class.SkRuntimeEffect* %10, %class.GrRecordingContext* %2, %class.sk_sp.333* nonnull %7, %class.sk_sp.345* %20, i64 %26, %class.SkMatrix* %3, %struct.SkImageInfo* nonnull %8, i1 zeroext %5)
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = bitcast %class.SkColorSpace* %40 to i8*
  call void @_ZdlPv(i8* %47) #15
  br label %48

48:                                               ; preds = %34, %42, %46
  %49 = load %class.SkData*, %class.SkData** %11, align 8
  %50 = icmp eq %class.SkData* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.SkData, %class.SkData* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %49) #14
  %56 = bitcast %class.SkData* %49 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %56) #14
  br label %57

57:                                               ; preds = %48, %51, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkRuntimeShaderBuilder10makeShaderEPK8SkMatrixb(%class.sk_sp.345* noalias nocapture sret, %class.SkRuntimeShaderBuilder* nocapture readonly, %class.SkMatrix*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.333, align 8
  %6 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %5, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 1, i32 0
  %10 = load %class.SkData*, %class.SkData** %9, align 8, !noalias !67
  %11 = icmp eq %class.SkData* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic, !noalias !67
  br label %15

15:                                               ; preds = %4, %12
  store %class.SkData* %10, %class.SkData** %8, align 8, !alias.scope !67
  %16 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %class.sk_sp.345*, %class.sk_sp.345** %16, align 8
  %18 = getelementptr inbounds %class.SkRuntimeShaderBuilder, %class.SkRuntimeShaderBuilder* %1, i64 0, i32 0, i32 2, i32 0, i32 1
  %19 = bitcast %class.sk_sp.345** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = ptrtoint %class.sk_sp.345* %17 to i64
  %22 = sub i64 %20, %21
  %23 = ashr exact i64 %22, 3
  call void @_ZNK15SkRuntimeEffect10makeShaderE5sk_spI6SkDataEPS0_I8SkShaderEmPK8SkMatrixb(%class.sk_sp.345* sret %0, %class.SkRuntimeEffect* %7, %class.sk_sp.333* nonnull %5, %class.sk_sp.345* %17, i64 %23, %class.SkMatrix* %2, i1 zeroext %3)
  %24 = load %class.SkData*, %class.SkData** %8, align 8
  %25 = icmp eq %class.SkData* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %class.SkData, %class.SkData* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %24) #14
  %31 = bitcast %class.SkData* %24 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %31) #14
  br label %32

32:                                               ; preds = %15, %26, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14SharedCompiler4ImplC2Ev(%"struct.SkSL::SharedCompiler::Impl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp, align 8
  %3 = getelementptr inbounds %"struct.SkSL::SharedCompiler::Impl", %"struct.SkSL::SharedCompiler::Impl"* %0, i64 0, i32 0, i32 0
  store %class.GrShaderCaps* null, %class.GrShaderCaps** %3, align 8
  %4 = bitcast %class.sk_sp* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  call void @_ZN4SkSL17ShaderCapsFactory14MakeShaderCapsEv(%class.sk_sp* nonnull sret %2) #14
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %6 = bitcast %class.sk_sp* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.GrShaderCaps* null, %class.GrShaderCaps** %5, align 8
  %8 = load %class.GrShaderCaps*, %class.GrShaderCaps** %3, align 8
  %9 = bitcast %"struct.SkSL::SharedCompiler::Impl"* %0 to i64*
  store i64 %7, i64* %9, align 8
  %10 = icmp eq %class.GrShaderCaps* %8, null
  br i1 %10, label %34, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.GrShaderCaps* %8 to %class.SkRefCntBase*
  %17 = bitcast %class.GrShaderCaps* %8 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  call void %20(%class.SkRefCntBase* nonnull %16) #14
  br label %21

21:                                               ; preds = %11, %15
  %22 = load %class.GrShaderCaps*, %class.GrShaderCaps** %5, align 8
  %23 = icmp eq %class.GrShaderCaps* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.GrShaderCaps* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.GrShaderCaps* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  call void %33(%class.SkRefCntBase* nonnull %29) #14
  br label %34

34:                                               ; preds = %1, %21, %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  %35 = load %class.GrShaderCaps*, %class.GrShaderCaps** %3, align 8
  %36 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %35, i64 0, i32 2
  %37 = bitcast i56* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = or i64 %38, 2097152
  store i64 %39, i64* %37, align 8
  %40 = load %class.GrShaderCaps*, %class.GrShaderCaps** %3, align 8
  %41 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %40, i64 0, i32 2
  %42 = bitcast i56* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = or i64 %43, 4194304
  store i64 %44, i64* %42, align 8
  %45 = load %class.GrShaderCaps*, %class.GrShaderCaps** %3, align 8
  %46 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %45, i64 0, i32 2
  %47 = bitcast i56* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, -35184372088833
  store i64 %49, i64* %47, align 8
  %50 = call i8* @_Znwm(i64 504) #15
  %51 = bitcast i8* %50 to %"class.SkSL::Compiler"*
  %52 = load %class.GrShaderCaps*, %class.GrShaderCaps** %3, align 8
  call void @_ZN4SkSL8CompilerC1EPK12GrShaderCaps(%"class.SkSL::Compiler"* nonnull %51, %class.GrShaderCaps* %52) #14
  %53 = getelementptr inbounds %"struct.SkSL::SharedCompiler::Impl", %"struct.SkSL::SharedCompiler::Impl"* %0, i64 0, i32 1
  %54 = bitcast %"class.SkSL::Compiler"** %53 to i8**
  store i8* %50, i8** %54, align 8
  ret void
}

declare void @_ZN4SkSL8CompilerC1EPK12GrShaderCaps(%"class.SkSL::Compiler"*, %class.GrShaderCaps*) unnamed_addr #2

declare void @_ZN4SkSL17ShaderCapsFactory14MakeShaderCapsEv(%class.sk_sp* sret) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare dereferenceable(24) %"class.SkSL::String"* @_ZN4SkSL6StringpLERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN8SkStringC1EPKcm(%class.SkString*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #2

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"*, i32, i32) local_unnamed_addr #2

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #2

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #2

declare void @_ZN12SkShaderBaseC2EPK8SkMatrix(%class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRTShaderD2Ev(%class.SkRTShader*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV10SkRTShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp.345*, %class.sk_sp.345** %4, align 8
  %6 = icmp eq %class.sk_sp.345* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp.345* %5 to i8*
  %9 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %class.sk_sp.345*, %class.sk_sp.345** %9, align 8
  %11 = icmp eq %class.sk_sp.345* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp.345* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %14, i64 0, i32 0
  %16 = load %class.SkShader*, %class.SkShader** %15, align 8
  %17 = icmp eq %class.SkShader* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkShader, %class.SkShader* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkShader* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkShader* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp.345* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector.343"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp.345* %5, %class.sk_sp.345** %9, align 8
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %1, %33
  %36 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 3, i32 0
  %37 = load %class.SkData*, %class.SkData** %36, align 8
  %38 = icmp eq %class.SkData* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %37) #14
  %44 = bitcast %class.SkData* %37 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %44) #14
  br label %45

45:                                               ; preds = %35, %39, %43
  %46 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 1, i32 0
  %47 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %46, align 8
  %48 = icmp eq %class.SkRuntimeEffect* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkRuntimeEffect* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkRuntimeEffect* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #14
  br label %59

59:                                               ; preds = %45, %49, %53
  %60 = bitcast %class.SkRTShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %60) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkRTShaderD0Ev(%class.SkRTShader*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV10SkRTShader, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp.345*, %class.sk_sp.345** %4, align 8
  %6 = icmp eq %class.sk_sp.345* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp.345* %5 to i8*
  %9 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %class.sk_sp.345*, %class.sk_sp.345** %9, align 8
  %11 = icmp eq %class.sk_sp.345* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp.345* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %14, i64 0, i32 0
  %16 = load %class.SkShader*, %class.SkShader** %15, align 8
  %17 = icmp eq %class.SkShader* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkShader, %class.SkShader* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkShader* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkShader* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp.345* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector.343"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp.345* %5, %class.sk_sp.345** %9, align 8
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %33, %1
  %36 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 3, i32 0
  %37 = load %class.SkData*, %class.SkData** %36, align 8
  %38 = icmp eq %class.SkData* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %37) #14
  %44 = bitcast %class.SkData* %37 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %44) #14
  br label %45

45:                                               ; preds = %43, %39, %35
  %46 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 1, i32 0
  %47 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %46, align 8
  %48 = icmp eq %class.SkRuntimeEffect* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkRuntimeEffect* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkRuntimeEffect* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #14
  br label %59

59:                                               ; preds = %45, %49, %53
  %60 = bitcast %class.SkRTShader* %0 to %class.SkShaderBase*
  tail call void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase* %60) #14
  %61 = bitcast %class.SkRTShader* %0 to i8*
  tail call void @_ZdlPv(i8* %61) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.332*, %class.SkReadBuffer*)* @_ZNK10SkRTShader10getFactoryEv(%class.SkRTShader*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.332*, %class.SkReadBuffer*)* @_ZN10SkRTShader10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK10SkRTShader11getTypeNameEv(%class.SkRTShader*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK10SkRTShader7flattenER13SkWriteBuffer(%class.SkRTShader*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = trunc i32 %8 to i8
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %6) #14
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %7, align 4
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %13, %11 ], [ %8, %2 ]
  %16 = and i32 %15, 15
  %17 = icmp eq i32 %16, 0
  %18 = or i32 %5, 2
  %19 = select i1 %17, i32 %5, i32 %18
  %20 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 1, i32 0
  %21 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %20, align 8
  %22 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %22, align 8
  %24 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %23, i64 0, i32 2
  %25 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*)***
  %26 = load void (%class.SkWriteBuffer*, i8*)**, void (%class.SkWriteBuffer*, i8*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*)*, void (%class.SkWriteBuffer*, i8*)** %26, i64 10
  %28 = load void (%class.SkWriteBuffer*, i8*)*, void (%class.SkWriteBuffer*, i8*)** %27, align 8
  tail call void %28(%class.SkWriteBuffer* %1, i8* %24) #14
  %29 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 3, i32 0
  %30 = load %class.SkData*, %class.SkData** %29, align 8
  %31 = icmp eq %class.SkData* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %14
  %33 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %38 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %38, i64 3
  %40 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %39, align 8
  tail call void %40(%class.SkWriteBuffer* %1, i8* %34, i64 %36) #14
  br label %46

41:                                               ; preds = %14
  %42 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %43 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %43, i64 3
  %45 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %44, align 8
  tail call void %45(%class.SkWriteBuffer* %1, i8* null, i64 0) #14
  br label %46

46:                                               ; preds = %41, %32
  %47 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %48 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %48, i64 7
  %50 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %49, align 8
  tail call void %50(%class.SkWriteBuffer* %1, i32 %19) #14
  %51 = and i32 %19, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %46
  %54 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkMatrix*)***
  %55 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)**, void (%class.SkWriteBuffer*, %class.SkMatrix*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %55, i64 20
  %57 = load void (%class.SkWriteBuffer*, %class.SkMatrix*)*, void (%class.SkWriteBuffer*, %class.SkMatrix*)** %56, align 8
  tail call void %57(%class.SkWriteBuffer* %1, %class.SkMatrix* dereferenceable(40) %6) #14
  br label %58

58:                                               ; preds = %46, %53
  %59 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4
  %60 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4, i32 0, i32 1
  %61 = bitcast %class.sk_sp.345** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.343"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = lshr exact i64 %65, 3
  %67 = trunc i64 %66 to i32
  %68 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %47, align 8
  %69 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %68, i64 7
  %70 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %69, align 8
  tail call void %70(%class.SkWriteBuffer* %1, i32 %67) #14
  %71 = getelementptr inbounds %"class.std::__1::vector.343", %"class.std::__1::vector.343"* %59, i64 0, i32 0, i32 0
  %72 = load %class.sk_sp.345*, %class.sk_sp.345** %71, align 8
  %73 = load %class.sk_sp.345*, %class.sk_sp.345** %60, align 8
  %74 = icmp eq %class.sk_sp.345* %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %58
  %76 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  br label %78

77:                                               ; preds = %78, %58
  ret void

78:                                               ; preds = %75, %78
  %79 = phi %class.sk_sp.345* [ %72, %75 ], [ %85, %78 ]
  %80 = bitcast %class.sk_sp.345* %79 to %class.SkFlattenable**
  %81 = load %class.SkFlattenable*, %class.SkFlattenable** %80, align 8
  %82 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %76, align 8
  %83 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %82, i64 11
  %84 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %83, align 8
  tail call void %84(%class.SkWriteBuffer* %1, %class.SkFlattenable* %81) #14
  %85 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %79, i64 1
  %86 = icmp eq %class.sk_sp.345* %85, %73
  br i1 %86, label %77, label %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkRTShader8isOpaqueEv(%class.SkRTShader*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare i32 @_ZNK8SkShader11asAGradientEPNS_12GradientInfoE(%class.SkShader*, %"struct.SkShader::GradientInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrFragmentProcessor* @_ZNK10SkRTShader19asFragmentProcessorERK8GrFPArgs(%class.SkRTShader*, %struct.GrFPArgs* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %class.SkTCopyOnFirstWrite, align 8
  %5 = alloca %class.sk_sp.333, align 8
  %6 = alloca %class.sk_sp.333, align 8
  %7 = alloca %struct.GrFPArgs, align 8
  %8 = alloca %class.sk_sp.79, align 8
  %9 = alloca %class.sk_sp.333, align 8
  %10 = alloca %class.GrSwizzle, align 2
  %11 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #14
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %13 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 16
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 16
  store i32 16, i32* %12, align 4
  %17 = bitcast %class.SkTCopyOnFirstWrite* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #14
  %18 = bitcast %class.SkRTShader* %0 to %class.SkShaderBase*
  %19 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 2
  %20 = load %class.SkMatrix*, %class.SkMatrix** %19, align 8
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %4, %class.SkShaderBase* %18, %class.SkMatrix* %20) #14
  %21 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 0
  %22 = load %class.SkMatrix*, %class.SkMatrix** %21, align 8
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = trunc i32 %24 to i8
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %2
  %28 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %22) #14
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %23, align 4
  br label %30

30:                                               ; preds = %27, %2
  %31 = phi i32 [ %29, %27 ], [ %24, %2 ]
  %32 = and i32 %31, 15
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #14
  br label %38

36:                                               ; preds = %30
  %37 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %22, %class.SkMatrix* nonnull %3) #14
  br label %38

38:                                               ; preds = %34, %36
  %39 = phi i1 [ %37, %36 ], [ true, %34 ]
  %40 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %4, i64 0, i32 1, i32 1
  %41 = load %class.SkMatrix*, %class.SkMatrix** %40, align 8
  %42 = icmp eq %class.SkMatrix* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  store %class.SkMatrix* null, %class.SkMatrix** %40, align 8
  br label %44

44:                                               ; preds = %38, %43
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #14
  br i1 %39, label %45, label %167

45:                                               ; preds = %44
  %46 = bitcast %class.sk_sp.333* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #14
  %47 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %47, align 8
  %48 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 1, i32 0
  %49 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %48, align 8
  %50 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %6, i64 0, i32 0
  %51 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 3, i32 0
  %52 = load %class.SkData*, %class.SkData** %51, align 8
  %53 = icmp eq %class.SkData* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %class.SkData, %class.SkData* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %45, %54
  store %class.SkData* %52, %class.SkData** %50, align 8
  %58 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %1, i64 0, i32 4
  %59 = load %class.GrColorInfo*, %class.GrColorInfo** %58, align 8
  %60 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %59, i64 0, i32 0, i32 0
  %61 = load %class.SkColorSpace*, %class.SkColorSpace** %60, align 8
  call fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* nonnull sret %5, %class.SkRuntimeEffect* %49, %class.sk_sp.333* nonnull %6, %class.SkColorSpace* %61)
  %62 = load %class.SkData*, %class.SkData** %50, align 8
  %63 = icmp eq %class.SkData* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %62) #14
  %69 = bitcast %class.SkData* %62 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %69) #14
  br label %70

70:                                               ; preds = %57, %64, %68
  %71 = bitcast %struct.GrFPArgs* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #14
  %72 = bitcast %struct.GrFPArgs* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 %72, i64 40, i1 false)
  %73 = getelementptr inbounds %struct.GrFPArgs, %struct.GrFPArgs* %7, i64 0, i32 3
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %8, i64 0, i32 0
  %75 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %48, align 8
  %76 = icmp eq %class.SkRuntimeEffect* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 1 monotonic
  br label %80

80:                                               ; preds = %70, %77
  store %class.SkRuntimeEffect* %75, %class.SkRuntimeEffect** %74, align 8
  %81 = bitcast %class.sk_sp.333* %5 to i64*
  %82 = load i64, i64* %81, align 8
  store %class.SkData* null, %class.SkData** %47, align 8
  %83 = bitcast %class.sk_sp.333* %9 to i64*
  store i64 %82, i64* %83, align 8
  %84 = call %class.GrSkSLFP* @_ZN8GrSkSLFP4MakeE5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.sk_sp.79* nonnull %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), %class.sk_sp.333* nonnull %9) #14
  %85 = ptrtoint %class.GrSkSLFP* %84 to i64
  %86 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %9, i64 0, i32 0
  %87 = load %class.SkData*, %class.SkData** %86, align 8
  %88 = icmp eq %class.SkData* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %class.SkData, %class.SkData* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %87) #14
  %94 = bitcast %class.SkData* %87 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %94) #14
  br label %95

95:                                               ; preds = %80, %89, %93
  %96 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %74, align 8
  %97 = icmp eq %class.SkRuntimeEffect* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %96, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkRuntimeEffect* %96 to %class.SkRefCntBase*
  %104 = bitcast %class.SkRuntimeEffect* %96 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #14
  br label %108

108:                                              ; preds = %95, %98, %102
  %109 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4, i32 0, i32 0
  %110 = load %class.sk_sp.345*, %class.sk_sp.345** %109, align 8
  %111 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 4, i32 0, i32 1
  %112 = load %class.sk_sp.345*, %class.sk_sp.345** %111, align 8
  %113 = icmp eq %class.sk_sp.345* %110, %112
  br i1 %113, label %114, label %118

114:                                              ; preds = %131, %108
  %115 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 2
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %141, label %136

118:                                              ; preds = %108, %131
  %119 = phi %class.sk_sp.345* [ %134, %131 ], [ %110, %108 ]
  %120 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %119, i64 0, i32 0
  %121 = load %class.SkShader*, %class.SkShader** %120, align 8
  %122 = icmp eq %class.SkShader* %121, null
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = bitcast %class.SkShader* %121 to %class.SkShaderBase*
  %125 = bitcast %class.SkShader* %121 to %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)***
  %126 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)**, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*** %125, align 8
  %127 = getelementptr inbounds %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %126, i64 10
  %128 = load %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)*, %class.GrFragmentProcessor* (%class.SkShaderBase*, %struct.GrFPArgs*)** %127, align 8
  %129 = call %class.GrFragmentProcessor* %128(%class.SkShaderBase* nonnull %124, %struct.GrFPArgs* nonnull dereferenceable(40) %7) #14
  %130 = ptrtoint %class.GrFragmentProcessor* %129 to i64
  br label %131

131:                                              ; preds = %118, %123
  %132 = phi i64 [ %130, %123 ], [ 0, %118 ]
  %133 = inttoptr i64 %132 to %class.GrFragmentProcessor*
  call void @_ZN8GrSkSLFP8addChildENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrSkSLFP* %84, %class.GrFragmentProcessor* %133) #14
  %134 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %119, i64 1
  %135 = icmp eq %class.sk_sp.345* %134, %112
  br i1 %135, label %114, label %118

136:                                              ; preds = %114
  %137 = bitcast %class.GrSwizzle* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %137) #14
  call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* nonnull %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #14
  %138 = bitcast %class.GrSkSLFP* %84 to %class.GrFragmentProcessor*
  %139 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13SwizzleOutputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK9GrSwizzle(%class.GrFragmentProcessor* %138, %class.GrSwizzle* nonnull dereferenceable(2) %10) #14
  %140 = ptrtoint %class.GrFragmentProcessor* %139 to i64
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %137) #14
  br label %141

141:                                              ; preds = %114, %136
  %142 = phi i64 [ %85, %114 ], [ %140, %136 ]
  %143 = inttoptr i64 %142 to %class.GrFragmentProcessor*
  %144 = call %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* nonnull dereferenceable(40) %3, %class.GrFragmentProcessor* %143) #14
  %145 = ptrtoint %class.GrFragmentProcessor* %144 to i64
  %146 = load %class.GrColorInfo*, %class.GrColorInfo** %58, align 8
  %147 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %146, i64 0, i32 2
  %148 = load i32, i32* %147, align 8
  switch i32 %148, label %149 [
    i32 0, label %150
    i32 1, label %150
    i32 2, label %150
    i32 3, label %150
    i32 4, label %150
    i32 5, label %150
    i32 6, label %150
    i32 7, label %150
    i32 8, label %150
    i32 9, label %150
    i32 10, label %150
    i32 11, label %150
    i32 12, label %150
    i32 29, label %150
    i32 30, label %150
    i32 26, label %150
    i32 25, label %150
    i32 21, label %150
    i32 24, label %150
    i32 23, label %150
    i32 17, label %150
    i32 18, label %150
    i32 20, label %150
    i32 15, label %153
    i32 13, label %156
    i32 14, label %156
    i32 16, label %156
    i32 19, label %156
    i32 22, label %156
    i32 27, label %156
    i32 28, label %156
  ]

149:                                              ; preds = %141
  call void @llvm.trap() #14
  unreachable

150:                                              ; preds = %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141, %141
  %151 = load i8, i8* %115, align 8, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %156

153:                                              ; preds = %141, %150
  %154 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor17ClampPremulOutputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor* %144) #14
  %155 = ptrtoint %class.GrFragmentProcessor* %154 to i64
  br label %156

156:                                              ; preds = %141, %141, %141, %141, %141, %141, %141, %150, %153
  %157 = phi i64 [ %155, %153 ], [ %145, %150 ], [ %145, %141 ], [ %145, %141 ], [ %145, %141 ], [ %145, %141 ], [ %145, %141 ], [ %145, %141 ], [ %145, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #14
  %158 = load %class.SkData*, %class.SkData** %47, align 8
  %159 = icmp eq %class.SkData* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %class.SkData, %class.SkData* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %158) #14
  %165 = bitcast %class.SkData* %158 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %165) #14
  br label %166

166:                                              ; preds = %156, %160, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #14
  br label %167

167:                                              ; preds = %44, %166
  %168 = phi i64 [ %157, %166 ], [ 0, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #14
  %169 = inttoptr i64 %168 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %169
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK10SkRTShader15asRuntimeEffectEv(%class.SkRTShader*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %2, align 8
  ret %class.SkRuntimeEffect* %3
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp.345* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  ret %"class.SkShaderBase::Context"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase18onAsLuminanceColorEPj(%class.SkShaderBase*, i32*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK10SkRTShader14onAppendStagesERK10SkStageRec(%class.SkRTShader*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkRTShader*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %12 = alloca %"class.skvm::Builder"*, align 8
  %13 = alloca %"struct.skvm::Uniforms"*, align 8
  %14 = alloca %class.SkArenaAlloc*, align 8
  %15 = alloca %class.sk_sp.333, align 8
  %16 = alloca %class.sk_sp.333, align 8
  %17 = alloca %class.SkMatrix, align 16
  %18 = alloca %"struct.skvm::Coord", align 8
  %19 = alloca %"class.std::__1::vector.290", align 16
  %20 = alloca %"class.std::__1::function", align 8
  store %"class.skvm::Builder"* %2, %"class.skvm::Builder"** %12, align 8
  store %"struct.skvm::Uniforms"* %9, %"struct.skvm::Uniforms"** %13, align 8
  store %class.SkArenaAlloc* %10, %class.SkArenaAlloc** %14, align 8
  %21 = bitcast %class.sk_sp.333* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %15, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %22, align 8
  %23 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %1, i64 0, i32 1, i32 0
  %24 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %23, align 8
  %25 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %16, i64 0, i32 0
  %26 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %1, i64 0, i32 3, i32 0
  %27 = load %class.SkData*, %class.SkData** %26, align 8
  %28 = icmp eq %class.SkData* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkData, %class.SkData* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %11, %29
  store %class.SkData* %27, %class.SkData** %25, align 8
  %33 = getelementptr inbounds %class.SkColorInfo, %class.SkColorInfo* %8, i64 0, i32 0, i32 0
  %34 = load %class.SkColorSpace*, %class.SkColorSpace** %33, align 8
  call fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* nonnull sret %15, %class.SkRuntimeEffect* %24, %class.sk_sp.333* nonnull %16, %class.SkColorSpace* %34)
  %35 = load %class.SkData*, %class.SkData** %25, align 8
  %36 = icmp eq %class.SkData* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.SkData, %class.SkData* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %35) #14
  %42 = bitcast %class.SkData* %35 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %42) #14
  br label %43

43:                                               ; preds = %32, %37, %41
  %44 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #14
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 1
  %46 = bitcast %class.SkMatrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %46, align 16
  %47 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 4
  %48 = bitcast float* %47 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %48, align 16
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %49, align 16
  store i32 16, i32* %45, align 4
  %50 = bitcast %class.SkRTShader* %1 to %class.SkShaderBase*
  %51 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %6, i64 0, i32 2
  %52 = call zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase* %50, %class.SkMatrix* dereferenceable(40) %51, %class.SkMatrix* %7, %class.SkMatrix* nonnull %17) #14
  br i1 %52, label %62, label %53

53:                                               ; preds = %43
  %54 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %54, align 8
  %55 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %56, align 8
  %57 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %58, align 8
  %59 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %60, align 8
  %61 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %61, align 8
  br label %309

62:                                               ; preds = %43
  %63 = bitcast %"struct.skvm::Coord"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #14
  %64 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %12, align 8
  %65 = bitcast %"struct.skvm::Coord"* %4 to i8*
  %66 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %13, align 8
  call void @_ZN12SkShaderBase11ApplyMatrixEPN4skvm7BuilderERK8SkMatrixNS0_5CoordEPNS0_8UniformsE(%"struct.skvm::Coord"* nonnull sret %18, %"class.skvm::Builder"* %64, %class.SkMatrix* nonnull dereferenceable(40) %17, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Uniforms"* %66) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %63, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #14
  %67 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %23, align 8
  %68 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %67, i64 0, i32 5, i32 0, i32 0
  %69 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %68, align 8
  %70 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %67, i64 0, i32 5, i32 0, i32 1
  %71 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %70, align 8
  %72 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %69, %71
  br i1 %72, label %91, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %71, i64 -1, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = icmp ult i32 %75, 11
  br i1 %76, label %78, label %77

77:                                               ; preds = %73
  call void @llvm.trap() #14
  unreachable

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %71, i64 -1, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = sext i32 %75 to i64
  %82 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %81
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %71, i64 -1, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = mul nsw i64 %83, %86
  %88 = add i64 %80, 3
  %89 = add i64 %88, %87
  %90 = lshr i64 %89, 2
  br label %91

91:                                               ; preds = %62, %78
  %92 = phi i64 [ %90, %78 ], [ 0, %62 ]
  %93 = bitcast %"class.std::__1::vector.290"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #14
  %94 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %19, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %19, i64 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %93, i8 0, i64 24, i1 false) #14
  %97 = bitcast i32** %96 to i64*
  %98 = bitcast %"class.std::__1::vector.290"* %19 to i64*
  %99 = icmp eq i64 %92, 0
  %100 = bitcast i32** %95 to i64*
  br i1 %99, label %119, label %101

101:                                              ; preds = %91
  %102 = shl nuw i64 %92, 2
  %103 = call i8* @_Znwm(i64 %102) #15
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds i32, i32* %104, i64 %92
  %106 = ptrtoint i32* %105 to i64
  %107 = insertelement <2 x i8*> undef, i8* %103, i32 0
  %108 = shufflevector <2 x i8*> %107, <2 x i8*> undef, <2 x i32> zeroinitializer
  %109 = ptrtoint <2 x i8*> %108 to <2 x i64>
  %110 = bitcast %"class.std::__1::vector.290"* %19 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %110, align 16
  store i64 %106, i64* %97, align 16
  %111 = load %class.SkData*, %class.SkData** %22, align 8
  %112 = getelementptr inbounds %class.SkData, %class.SkData* %111, i64 0, i32 3
  %113 = bitcast i32** %95 to i64*
  br label %162

114:                                              ; preds = %303
  %115 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %23, align 8
  %116 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %12, align 8
  %117 = load i32*, i32** %94, align 16
  %118 = load i64, i64* %113, align 8
  br label %119

119:                                              ; preds = %91, %114
  %120 = phi i64* [ %113, %114 ], [ %100, %91 ]
  %121 = phi i64 [ %118, %114 ], [ 0, %91 ]
  %122 = phi i32* [ %117, %114 ], [ null, %91 ]
  %123 = phi %"class.skvm::Builder"* [ %116, %114 ], [ %64, %91 ]
  %124 = phi %class.SkRuntimeEffect* [ %115, %114 ], [ %67, %91 ]
  %125 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %124, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %125, align 8
  %127 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %124, i64 0, i32 4
  %128 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %127, align 8
  %129 = ptrtoint i32* %122 to i64
  %130 = sub i64 %121, %129
  %131 = ashr exact i64 %130, 2
  %132 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %20, i64 0, i32 0, i32 1, i32 0
  %133 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %20, i64 0, i32 0, i32 2
  store void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)* @_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPNS2_7BuilderES4_S4_S3_RK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS2_8UniformsEP12SkArenaAllocEUliS4_S3_E_S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_, void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)** %132, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %133, align 8
  %134 = call i8* @_Znwm(i64 56) #15, !noalias !70
  %135 = bitcast i8* %134 to %class.SkRTShader**
  store %class.SkRTShader* %1, %class.SkRTShader** %135, align 8
  %136 = getelementptr inbounds i8, i8* %134, i64 8
  %137 = bitcast i8* %136 to %class.SkMatrixProvider**
  store %class.SkMatrixProvider* %6, %class.SkMatrixProvider** %137, align 8
  %138 = getelementptr inbounds i8, i8* %134, i64 16
  %139 = bitcast i8* %138 to %"class.skvm::Builder"***
  store %"class.skvm::Builder"** %12, %"class.skvm::Builder"*** %139, align 8
  %140 = getelementptr inbounds i8, i8* %134, i64 24
  %141 = bitcast i8* %140 to %"struct.skvm::Coord"**
  store %"struct.skvm::Coord"* %3, %"struct.skvm::Coord"** %141, align 8
  %142 = getelementptr inbounds i8, i8* %134, i64 32
  %143 = bitcast i8* %142 to %class.SkColorInfo**
  store %class.SkColorInfo* %8, %class.SkColorInfo** %143, align 8
  %144 = getelementptr inbounds i8, i8* %134, i64 40
  %145 = bitcast i8* %144 to %"struct.skvm::Uniforms"***
  store %"struct.skvm::Uniforms"** %13, %"struct.skvm::Uniforms"*** %145, align 8
  %146 = getelementptr inbounds i8, i8* %134, i64 48
  %147 = bitcast i8* %146 to %class.SkArenaAlloc***
  store %class.SkArenaAlloc** %14, %class.SkArenaAlloc*** %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %20, i64 0, i32 0, i32 0, i32 0
  store i8* %134, i8** %148, align 8
  call void @_ZN4SkSL13ProgramToSkVMERKNS_7ProgramERKNS_18FunctionDefinitionEPN4skvm7BuilderE6SkSpanIiENS6_5CoordESB_NS6_5ColorENSt3__18functionIFSC_iSB_SC_EEE(%"struct.skvm::Color"* sret %0, %"struct.SkSL::Program"* dereferenceable(128) %126, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %128, %"class.skvm::Builder"* %123, i32* %122, i64 %131, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %3, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %4, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %5, %"class.std::__1::function"* nonnull %20) #14
  %149 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %133, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %149, i64 0, i32 1
  %151 = load void (i8*)*, void (i8*)** %150, align 8
  %152 = icmp eq void (i8*)* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %119
  %154 = load i8*, i8** %148, align 8
  call void %151(i8* %154) #14
  br label %155

155:                                              ; preds = %119, %153
  %156 = load i32*, i32** %94, align 16
  %157 = icmp eq i32* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %155
  %159 = ptrtoint i32* %156 to i64
  store i64 %159, i64* %120, align 8
  %160 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %160) #15
  br label %161

161:                                              ; preds = %155, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  br label %309

162:                                              ; preds = %306, %101
  %163 = phi %"struct.skvm::Uniforms"* [ %66, %101 ], [ %308, %306 ]
  %164 = phi %"class.skvm::Builder"* [ %64, %101 ], [ %307, %306 ]
  %165 = phi i64 [ 0, %101 ], [ %304, %306 ]
  %166 = load i8*, i8** %112, align 8
  %167 = shl i64 %165, 2
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  %169 = bitcast i8* %168 to i32*
  %170 = load i32, i32* %169, align 1
  %171 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %163, i64 0, i32 1
  %172 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %163, i64 0, i32 1, i32 0, i32 1
  %173 = load i32*, i32** %172, align 8
  %174 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %163, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %173, %175
  %177 = ptrtoint i32* %175 to i64
  br i1 %176, label %183, label %178

178:                                              ; preds = %162
  store i32 %170, i32* %173, align 4
  %179 = getelementptr inbounds i32, i32* %173, i64 1
  %180 = ptrtoint i32* %179 to i64
  %181 = bitcast i32** %172 to i64*
  store i64 %180, i64* %181, align 8
  %182 = bitcast %"class.std::__1::vector.290"* %171 to i64*
  br label %240

183:                                              ; preds = %162
  %184 = ptrtoint i32* %173 to i64
  %185 = bitcast i32** %172 to i64*
  %186 = bitcast %"class.std::__1::vector.290"* %171 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %184, %187
  %189 = ashr exact i64 %188, 2
  %190 = add nsw i64 %189, 1
  %191 = icmp ugt i64 %190, 4611686018427387903
  br i1 %191, label %192, label %194

192:                                              ; preds = %183
  %193 = bitcast %"class.std::__1::vector.290"* %171 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %193) #16
  unreachable

194:                                              ; preds = %183
  %195 = bitcast i32** %174 to i64*
  %196 = sub i64 %177, %187
  %197 = ashr exact i64 %196, 2
  %198 = icmp ult i64 %197, 2305843009213693951
  br i1 %198, label %199, label %207

199:                                              ; preds = %194
  %200 = ashr exact i64 %196, 1
  %201 = icmp ult i64 %200, %190
  %202 = select i1 %201, i64 %190, i64 %200
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %212, label %204

204:                                              ; preds = %199
  %205 = icmp ugt i64 %202, 4611686018427387903
  br i1 %205, label %206, label %207

206:                                              ; preds = %204
  call void @abort() #16
  unreachable

207:                                              ; preds = %204, %194
  %208 = phi i64 [ %202, %204 ], [ 4611686018427387903, %194 ]
  %209 = shl i64 %208, 2
  %210 = call i8* @_Znwm(i64 %209) #15
  %211 = bitcast i8* %210 to i32*
  br label %212

212:                                              ; preds = %207, %199
  %213 = phi i64 [ %208, %207 ], [ 0, %199 ]
  %214 = phi i32* [ %211, %207 ], [ null, %199 ]
  %215 = getelementptr inbounds i32, i32* %214, i64 %189
  %216 = getelementptr inbounds i32, i32* %214, i64 %213
  %217 = ptrtoint i32* %216 to i64
  store i32 %170, i32* %215, align 4
  %218 = getelementptr inbounds i32, i32* %215, i64 1
  %219 = ptrtoint i32* %218 to i64
  %220 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %171, i64 0, i32 0, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = load i64, i64* %185, align 8
  %223 = ptrtoint i32* %221 to i64
  %224 = sub i64 %222, %223
  %225 = ashr exact i64 %224, 2
  %226 = sub nsw i64 0, %225
  %227 = getelementptr inbounds i32, i32* %215, i64 %226
  %228 = ptrtoint i32* %227 to i64
  %229 = icmp sgt i64 %224, 0
  br i1 %229, label %230, label %234

230:                                              ; preds = %212
  %231 = bitcast i32* %227 to i8*
  %232 = bitcast i32* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %231, i8* align 4 %232, i64 %224, i1 false) #14
  %233 = load i32*, i32** %220, align 8
  br label %234

234:                                              ; preds = %230, %212
  %235 = phi i32* [ %221, %212 ], [ %233, %230 ]
  store i64 %228, i64* %186, align 8
  store i64 %219, i64* %185, align 8
  store i64 %217, i64* %195, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %234
  %238 = bitcast i32* %235 to i8*
  call void @_ZdlPv(i8* %238) #15
  %239 = load i64, i64* %185, align 8
  br label %240

240:                                              ; preds = %178, %234, %237
  %241 = phi i64* [ %182, %178 ], [ %186, %234 ], [ %186, %237 ]
  %242 = phi i64 [ %180, %178 ], [ %219, %234 ], [ %239, %237 ]
  %243 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %163, i64 0, i32 0, i32 0
  %244 = load i32, i32* %243, align 8
  %245 = load i64, i64* %241, align 8
  %246 = sub i64 %242, %245
  %247 = shl i64 %246, 32
  %248 = add i64 %247, -17179869184
  %249 = lshr exact i64 %248, 32
  %250 = trunc i64 %249 to i32
  %251 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %164, i32 %244, i32 %250) #14
  %252 = extractvalue { %"class.skvm::Builder"*, i32 } %251, 1
  %253 = load i32*, i32** %95, align 8
  %254 = load i32*, i32** %96, align 16
  %255 = icmp ult i32* %253, %254
  %256 = ptrtoint i32* %254 to i64
  br i1 %255, label %257, label %260

257:                                              ; preds = %240
  store i32 %252, i32* %253, align 4
  %258 = getelementptr inbounds i32, i32* %253, i64 1
  %259 = ptrtoint i32* %258 to i64
  store i64 %259, i64* %113, align 8
  br label %303

260:                                              ; preds = %240
  %261 = ptrtoint i32* %253 to i64
  %262 = load i64, i64* %98, align 16
  %263 = sub i64 %261, %262
  %264 = ashr exact i64 %263, 2
  %265 = add nsw i64 %264, 1
  %266 = icmp ugt i64 %265, 4611686018427387903
  br i1 %266, label %267, label %269

267:                                              ; preds = %260
  %268 = bitcast %"class.std::__1::vector.290"* %19 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %268) #16
  unreachable

269:                                              ; preds = %260
  %270 = sub i64 %256, %262
  %271 = ashr exact i64 %270, 2
  %272 = icmp ult i64 %271, 2305843009213693951
  br i1 %272, label %273, label %281

273:                                              ; preds = %269
  %274 = ashr exact i64 %270, 1
  %275 = icmp ult i64 %274, %265
  %276 = select i1 %275, i64 %265, i64 %274
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %286, label %278

278:                                              ; preds = %273
  %279 = icmp ugt i64 %276, 4611686018427387903
  br i1 %279, label %280, label %281

280:                                              ; preds = %278
  call void @abort() #16
  unreachable

281:                                              ; preds = %278, %269
  %282 = phi i64 [ %276, %278 ], [ 4611686018427387903, %269 ]
  %283 = shl i64 %282, 2
  %284 = call i8* @_Znwm(i64 %283) #15
  %285 = bitcast i8* %284 to i32*
  br label %286

286:                                              ; preds = %281, %273
  %287 = phi i64 [ %282, %281 ], [ 0, %273 ]
  %288 = phi i8* [ %284, %281 ], [ null, %273 ]
  %289 = phi i32* [ %285, %281 ], [ null, %273 ]
  %290 = getelementptr inbounds i32, i32* %289, i64 %264
  %291 = getelementptr inbounds i32, i32* %289, i64 %287
  %292 = ptrtoint i32* %291 to i64
  store i32 %252, i32* %290, align 4
  %293 = getelementptr inbounds i32, i32* %290, i64 1
  %294 = ptrtoint i32* %293 to i64
  %295 = ptrtoint i32* %289 to i64
  %296 = icmp sgt i64 %263, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %286
  %298 = inttoptr i64 %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %298, i64 %263, i1 false) #14
  br label %299

299:                                              ; preds = %297, %286
  store i64 %295, i64* %98, align 16
  store i64 %294, i64* %113, align 8
  store i64 %292, i64* %97, align 16
  %300 = icmp eq i64 %262, 0
  br i1 %300, label %303, label %301

301:                                              ; preds = %299
  %302 = inttoptr i64 %262 to i8*
  call void @_ZdlPv(i8* %302) #15
  br label %303

303:                                              ; preds = %257, %299, %301
  %304 = add nuw nsw i64 %165, 1
  %305 = icmp eq i64 %304, %92
  br i1 %305, label %114, label %306

306:                                              ; preds = %303
  %307 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %12, align 8
  %308 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %13, align 8
  br label %162

309:                                              ; preds = %161, %53
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #14
  %310 = load %class.SkData*, %class.SkData** %22, align 8
  %311 = icmp eq %class.SkData* %310, null
  br i1 %311, label %318, label %312

312:                                              ; preds = %309
  %313 = getelementptr inbounds %class.SkData, %class.SkData* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = atomicrmw add i32* %313, i32 -1 acq_rel
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %310) #14
  %317 = bitcast %class.SkData* %310 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %317) #14
  br label %318

318:                                              ; preds = %309, %312, %316
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN12SkShaderBaseD2Ev(%class.SkShaderBase*) unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* sret, %class.SkShaderBase*, %class.SkMatrix*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor13SwizzleOutputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEERK9GrSwizzle(%class.GrFragmentProcessor*, %class.GrSwizzle* dereferenceable(2)) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN14GrMatrixEffect4MakeERK8SkMatrixNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.SkMatrix* dereferenceable(40), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor17ClampPremulOutputENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEE(%class.GrFragmentProcessor*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #14
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #14
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare zeroext i1 @_ZNK12SkShaderBase19computeTotalInverseERK8SkMatrixPS1_PS0_(%class.SkShaderBase*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN12SkShaderBase11ApplyMatrixEPN4skvm7BuilderERK8SkMatrixNS0_5CoordEPNS0_8UniformsE(%"struct.skvm::Coord"* sret, %"class.skvm::Builder"*, %class.SkMatrix* dereferenceable(40), %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Uniforms"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPNS2_7BuilderES4_S4_S3_RK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS2_8UniformsEP12SkArenaAllocEUliS4_S3_E_S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_(%"struct.skvm::Color"* noalias sret, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"* dereferenceable(32), %"struct.skvm::Color"* dereferenceable(64)) #0 comdat align 2 {
  %6 = alloca i32, align 4
  store i32 %2, i32* %6, align 4
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %1 to %"class.std::__1::__function::__default_alloc_func"**
  %8 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %8, i64 0, i32 0
  call void @_ZNSt3__18__invokeIRZNK10SkRTShader9onProgramEPN4skvm7BuilderENS2_5CoordES5_NS2_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS2_8UniformsEP12SkArenaAllocEUliS5_S6_E_JiS5_S6_EEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSM_DpOSN_(%"struct.skvm::Color"* sret %0, %class.anon.624* dereferenceable(56) %9, i32* nonnull dereferenceable(4) %6, %"struct.skvm::Coord"* dereferenceable(32) %3, %"struct.skvm::Color"* dereferenceable(64) %4) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__18__invokeIRZNK10SkRTShader9onProgramEPN4skvm7BuilderENS2_5CoordES5_NS2_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS2_8UniformsEP12SkArenaAllocEUliS5_S6_E_JiS5_S6_EEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSM_DpOSN_(%"struct.skvm::Color"* noalias sret, %class.anon.624* dereferenceable(56), i32* dereferenceable(4), %"struct.skvm::Coord"* dereferenceable(32), %"struct.skvm::Color"* dereferenceable(64)) local_unnamed_addr #12 comdat {
  %6 = alloca %class.SkOverrideDeviceMatrixProvider, align 8
  %7 = alloca %"struct.skvm::Coord", align 8
  %8 = alloca %"struct.skvm::Color", align 8
  %9 = alloca %"struct.skvm::Coord", align 8
  %10 = alloca [32 x i8], align 8
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  %12 = load i32, i32* %2, align 4
  %13 = bitcast %"struct.skvm::Coord"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %13, i64 32, i1 false)
  %14 = bitcast %"struct.skvm::Color"* %4 to i8*
  %15 = bitcast %"struct.skvm::Coord"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15)
  %16 = bitcast %"struct.skvm::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16)
  %17 = bitcast %"struct.skvm::Coord"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %14, i64 64, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %11, i64 32, i1 false) #14
  %18 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 0
  %19 = load %class.SkRTShader*, %class.SkRTShader** %18, align 8, !noalias !75
  %20 = sext i32 %12 to i64
  %21 = getelementptr inbounds %class.SkRTShader, %class.SkRTShader* %19, i64 0, i32 4, i32 0, i32 0
  %22 = load %class.sk_sp.345*, %class.sk_sp.345** %21, align 8, !noalias !75
  %23 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %22, i64 %20, i32 0
  %24 = load %class.SkShader*, %class.SkShader** %23, align 8, !noalias !75
  %25 = icmp eq %class.SkShader* %24, null
  br i1 %25, label %106, label %26

26:                                               ; preds = %5
  %27 = bitcast %class.SkOverrideDeviceMatrixProvider* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %27) #14, !noalias !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast (%class.SkOverrideDeviceMatrixProvider* @__const._ZZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENKUliS3_S4_E_clEiS3_S4_.mats to i8*), i64 120, i1 false) #14, !noalias !75
  %28 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 1
  %29 = bitcast %class.SkMatrixProvider** %28 to i64*
  %30 = load i64, i64* %29, align 8, !noalias !75
  %31 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #14, !noalias !75
  %32 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16SkMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !noalias !75
  %33 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1
  %34 = bitcast %class.SkMatrix* %31 to i32*
  %35 = load i32, i32* %34, align 4, !noalias !75
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 1
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4, !noalias !75
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 2
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4, !noalias !75
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 3
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4, !noalias !75
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 4
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4, !noalias !75
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 5
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4, !noalias !75
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 6
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4, !noalias !75
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 7
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4, !noalias !75
  %57 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %31, i64 0, i32 0, i64 8
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4, !noalias !75
  %60 = bitcast %class.SkM44* %33 to i32*
  store i32 %35, i32* %60, align 8, !noalias !75
  %61 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 1
  %62 = bitcast float* %61 to i32*
  store i32 %44, i32* %62, align 4, !noalias !75
  %63 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %63, align 8, !noalias !75
  %64 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 3
  %65 = bitcast float* %64 to i32*
  store i32 %53, i32* %65, align 4, !noalias !75
  %66 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 4
  %67 = bitcast float* %66 to i32*
  store i32 %38, i32* %67, align 8, !noalias !75
  %68 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 5
  %69 = bitcast float* %68 to i32*
  store i32 %47, i32* %69, align 4, !noalias !75
  %70 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %70, align 8, !noalias !75
  %71 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 7
  %72 = bitcast float* %71 to i32*
  store i32 %56, i32* %72, align 4, !noalias !75
  %73 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 8
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %74, align 8, !noalias !75
  %75 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 12
  %76 = bitcast float* %75 to i32*
  store i32 %41, i32* %76, align 8, !noalias !75
  %77 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 13
  %78 = bitcast float* %77 to i32*
  store i32 %50, i32* %78, align 4, !noalias !75
  %79 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %79, align 8, !noalias !75
  %80 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 1, i32 0, i64 15
  %81 = bitcast float* %80 to i32*
  store i32 %59, i32* %81, align 4, !noalias !75
  %82 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0, i32 2
  %83 = bitcast %class.SkMatrix* %82 to i8*
  %84 = bitcast %class.SkMatrix* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 4 %84, i64 40, i1 false) #14, !noalias !75
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV30SkOverrideDeviceMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !noalias !75
  %85 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 1
  %86 = bitcast %class.SkMatrixProvider** %85 to i64*
  store i64 %30, i64* %86, align 8, !noalias !75
  %87 = load %class.sk_sp.345*, %class.sk_sp.345** %21, align 8, !noalias !75
  %88 = getelementptr inbounds %class.sk_sp.345, %class.sk_sp.345* %87, i64 %20
  %89 = bitcast %class.sk_sp.345* %88 to %class.SkShaderBase**
  %90 = load %class.SkShaderBase*, %class.SkShaderBase** %89, align 8, !noalias !75
  %91 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 2
  %92 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %91, align 8, !noalias !75
  %93 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %92, align 8, !noalias !75
  %94 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 3
  %95 = bitcast %"struct.skvm::Coord"** %94 to i8**
  %96 = load i8*, i8** %95, align 8, !noalias !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %96, i64 32, i1 false) #14, !noalias !75
  %97 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %6, i64 0, i32 0
  %98 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 4
  %99 = load %class.SkColorInfo*, %class.SkColorInfo** %98, align 8, !noalias !75
  %100 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 5
  %101 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %100, align 8, !noalias !75
  %102 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %101, align 8, !noalias !75
  %103 = getelementptr inbounds %class.anon.624, %class.anon.624* %1, i64 0, i32 6
  %104 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %103, align 8, !noalias !75
  %105 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %104, align 8, !noalias !75
  call void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret %0, %class.SkShaderBase* %90, %"class.skvm::Builder"* %93, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %7, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %9, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %8, %class.SkMatrixProvider* nonnull dereferenceable(112) %97, %class.SkMatrix* null, %class.SkColorInfo* dereferenceable(16) %99, %"struct.skvm::Uniforms"* %102, %class.SkArenaAlloc* %105) #14
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %27) #14, !noalias !75
  br label %108

106:                                              ; preds = %5
  %107 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %16, i64 64, i1 false) #14
  br label %108

108:                                              ; preds = %26, %106
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17)
  ret void
}

declare void @_ZNK12SkShaderBase7programEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider* dereferenceable(112), %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN30SkOverrideDeviceMatrixProviderD0Ev(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #12 comdat align 2 {
  %2 = bitcast %class.SkOverrideDeviceMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #14
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD0Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEPvPKv(i8*) #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #15, !noalias !78
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 56, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEEvPv(i8*) #0 comdat align 2 {
  tail call void @_ZdlPv(i8* %0) #15
  ret void
}

declare %class.GrCaps* @_ZNK14GrContext_Base4capsEv(%class.GrContext_Base*) local_unnamed_addr #2

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #2

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #2

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #2

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.333* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSimpleMatrixProviderD0Ev(%class.SkSimpleMatrixProvider*) unnamed_addr #12 comdat align 2 {
  %2 = bitcast %class.SkSimpleMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkSimpleMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkSimpleMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN20GrSurfaceFillContext14fillRectWithFPERK7SkIRectNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEE(%class.GrSurfaceFillContext*, %struct.SkIRect* dereferenceable(16), %class.GrFragmentProcessor*) local_unnamed_addr #2

declare void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.567* sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkRuntimeColorFilterD2Ev(%class.SkRuntimeColorFilter*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkRuntimeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp.337*, %class.sk_sp.337** %4, align 8
  %6 = icmp eq %class.sk_sp.337* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp.337* %5 to i8*
  %9 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %class.sk_sp.337*, %class.sk_sp.337** %9, align 8
  %11 = icmp eq %class.sk_sp.337* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp.337* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %14, i64 0, i32 0
  %16 = load %class.SkColorFilter*, %class.SkColorFilter** %15, align 8
  %17 = icmp eq %class.SkColorFilter* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkColorFilter* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkColorFilter* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp.337* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector.335"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp.337* %5, %class.sk_sp.337** %9, align 8
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %1, %33
  %36 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 2, i32 0
  %37 = load %class.SkData*, %class.SkData** %36, align 8
  %38 = icmp eq %class.SkData* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %37) #14
  %44 = bitcast %class.SkData* %37 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %44) #14
  br label %45

45:                                               ; preds = %35, %39, %43
  %46 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 1, i32 0
  %47 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %46, align 8
  %48 = icmp eq %class.SkRuntimeEffect* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkRuntimeEffect* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkRuntimeEffect* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #14
  br label %59

59:                                               ; preds = %45, %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkRuntimeColorFilterD0Ev(%class.SkRuntimeColorFilter*) unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkRuntimeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp.337*, %class.sk_sp.337** %4, align 8
  %6 = icmp eq %class.sk_sp.337* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp.337* %5 to i8*
  %9 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %class.sk_sp.337*, %class.sk_sp.337** %9, align 8
  %11 = icmp eq %class.sk_sp.337* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp.337* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %14, i64 0, i32 0
  %16 = load %class.SkColorFilter*, %class.SkColorFilter** %15, align 8
  %17 = icmp eq %class.SkColorFilter* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkColorFilter* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkColorFilter* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp.337* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector.335"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp.337* %5, %class.sk_sp.337** %9, align 8
  tail call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %33, %1
  %36 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 2, i32 0
  %37 = load %class.SkData*, %class.SkData** %36, align 8
  %38 = icmp eq %class.SkData* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.SkData, %class.SkData* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %37) #14
  %44 = bitcast %class.SkData* %37 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %44) #14
  br label %45

45:                                               ; preds = %43, %39, %35
  %46 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 1, i32 0
  %47 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %46, align 8
  %48 = icmp eq %class.SkRuntimeEffect* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %59

53:                                               ; preds = %49
  %54 = bitcast %class.SkRuntimeEffect* %47 to %class.SkRefCntBase*
  %55 = bitcast %class.SkRuntimeEffect* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  tail call void %58(%class.SkRefCntBase* nonnull %54) #14
  br label %59

59:                                               ; preds = %45, %49, %53
  %60 = bitcast %class.SkRuntimeColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %60) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.332*, %class.SkReadBuffer*)* @_ZNK20SkRuntimeColorFilter10getFactoryEv(%class.SkRuntimeColorFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.332*, %class.SkReadBuffer*)* @_ZN20SkRuntimeColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK20SkRuntimeColorFilter11getTypeNameEv(%class.SkRuntimeColorFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20SkRuntimeColorFilter7flattenER13SkWriteBuffer(%class.SkRuntimeColorFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %3, align 8
  %5 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %5, align 8
  %7 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %6, i64 0, i32 2
  %8 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*)***
  %9 = load void (%class.SkWriteBuffer*, i8*)**, void (%class.SkWriteBuffer*, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*)*, void (%class.SkWriteBuffer*, i8*)** %9, i64 10
  %11 = load void (%class.SkWriteBuffer*, i8*)*, void (%class.SkWriteBuffer*, i8*)** %10, align 8
  tail call void %11(%class.SkWriteBuffer* %1, i8* %7) #14
  %12 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 2, i32 0
  %13 = load %class.SkData*, %class.SkData** %12, align 8
  %14 = icmp eq %class.SkData* %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %21 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %21, i64 3
  %23 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %22, align 8
  tail call void %23(%class.SkWriteBuffer* %1, i8* %17, i64 %19) #14
  br label %29

24:                                               ; preds = %2
  %25 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  %26 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %26, i64 3
  %28 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %27, align 8
  tail call void %28(%class.SkWriteBuffer* %1, i8* null, i64 0) #14
  br label %29

29:                                               ; preds = %24, %15
  %30 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3
  %31 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3, i32 0, i32 1
  %32 = bitcast %class.sk_sp.337** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.335"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = lshr exact i64 %36, 3
  %38 = trunc i64 %37 to i32
  %39 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %40 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %40, i64 7
  %42 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %41, align 8
  tail call void %42(%class.SkWriteBuffer* %1, i32 %38) #14
  %43 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %30, i64 0, i32 0, i32 0
  %44 = load %class.sk_sp.337*, %class.sk_sp.337** %43, align 8
  %45 = load %class.sk_sp.337*, %class.sk_sp.337** %31, align 8
  %46 = icmp eq %class.sk_sp.337* %44, %45
  br i1 %46, label %49, label %47

47:                                               ; preds = %29
  %48 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  br label %50

49:                                               ; preds = %50, %29
  ret void

50:                                               ; preds = %47, %50
  %51 = phi %class.sk_sp.337* [ %44, %47 ], [ %57, %50 ]
  %52 = bitcast %class.sk_sp.337* %51 to %class.SkFlattenable**
  %53 = load %class.SkFlattenable*, %class.SkFlattenable** %52, align 8
  %54 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %48, align 8
  %55 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %54, i64 11
  %56 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %55, align 8
  tail call void %56(%class.SkWriteBuffer* %1, %class.SkFlattenable* %53) #14
  %57 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %51, i64 1
  %58 = icmp eq %class.sk_sp.337* %57, %45
  br i1 %58, label %49, label %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkColorFilterBase18getFlattenableTypeEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK20SkRuntimeColorFilter18onIsAlphaUnchangedEv(%class.SkRuntimeColorFilter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %2, align 8
  %4 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %3, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.SkFilterColorProgram*, %class.SkFilterColorProgram** %4, align 8
  %6 = icmp eq %class.SkFilterColorProgram* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkFilterColorProgram, %class.SkFilterColorProgram* %5, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i1 [ false, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, %class.GrFragmentProcessor* } @_ZNK20SkRuntimeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkRuntimeColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.sk_sp.333, align 8
  %6 = alloca %class.sk_sp.333, align 8
  %7 = alloca %class.sk_sp.79, align 8
  %8 = alloca %class.sk_sp.333, align 8
  %9 = bitcast %class.sk_sp.333* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %10, align 8
  %11 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 1, i32 0
  %12 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %11, align 8
  %13 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %6, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 2, i32 0
  %15 = load %class.SkData*, %class.SkData** %14, align 8
  %16 = icmp eq %class.SkData* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %4, %17
  store %class.SkData* %15, %class.SkData** %13, align 8
  %21 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %3, i64 0, i32 0, i32 0
  %22 = load %class.SkColorSpace*, %class.SkColorSpace** %21, align 8
  call fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* nonnull sret %5, %class.SkRuntimeEffect* %12, %class.sk_sp.333* nonnull %6, %class.SkColorSpace* %22)
  %23 = load %class.SkData*, %class.SkData** %13, align 8
  %24 = icmp eq %class.SkData* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.SkData, %class.SkData* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %23) #14
  %30 = bitcast %class.SkData* %23 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %30) #14
  br label %31

31:                                               ; preds = %20, %25, %29
  %32 = getelementptr inbounds %class.sk_sp.79, %class.sk_sp.79* %7, i64 0, i32 0
  %33 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %11, align 8
  %34 = icmp eq %class.SkRuntimeEffect* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %31, %35
  store %class.SkRuntimeEffect* %33, %class.SkRuntimeEffect** %32, align 8
  %39 = bitcast %class.sk_sp.333* %5 to i64*
  %40 = load i64, i64* %39, align 8
  store %class.SkData* null, %class.SkData** %10, align 8
  %41 = bitcast %class.sk_sp.333* %8 to i64*
  store i64 %40, i64* %41, align 8
  %42 = call %class.GrSkSLFP* @_ZN8GrSkSLFP4MakeE5sk_spI15SkRuntimeEffectEPKcS0_I6SkDataE(%class.sk_sp.79* nonnull %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), %class.sk_sp.333* nonnull %8) #14
  %43 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %8, i64 0, i32 0
  %44 = load %class.SkData*, %class.SkData** %43, align 8
  %45 = icmp eq %class.SkData* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %class.SkData, %class.SkData* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %44) #14
  %51 = bitcast %class.SkData* %44 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %51) #14
  br label %52

52:                                               ; preds = %38, %46, %50
  %53 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %32, align 8
  %54 = icmp eq %class.SkRuntimeEffect* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %class.SkRuntimeEffect* %53 to %class.SkRefCntBase*
  %61 = bitcast %class.SkRuntimeEffect* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  call void %64(%class.SkRefCntBase* nonnull %60) #14
  br label %65

65:                                               ; preds = %52, %55, %59
  %66 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3, i32 0, i32 0
  %67 = load %class.sk_sp.337*, %class.sk_sp.337** %66, align 8
  %68 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 3, i32 0, i32 1
  %69 = load %class.sk_sp.337*, %class.sk_sp.337** %68, align 8
  %70 = icmp eq %class.sk_sp.337* %67, %69
  br i1 %70, label %97, label %75

71:                                               ; preds = %80, %75
  %72 = phi %class.GrFragmentProcessor* [ null, %75 ], [ %88, %80 ]
  call void @_ZN8GrSkSLFP8addChildENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrSkSLFP* %42, %class.GrFragmentProcessor* %72) #14
  %73 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %76, i64 1
  %74 = icmp eq %class.sk_sp.337* %73, %69
  br i1 %74, label %97, label %75

75:                                               ; preds = %65, %71
  %76 = phi %class.sk_sp.337* [ %73, %71 ], [ %67, %65 ]
  %77 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %76, i64 0, i32 0
  %78 = load %class.SkColorFilter*, %class.SkColorFilter** %77, align 8
  %79 = icmp eq %class.SkColorFilter* %78, null
  br i1 %79, label %71, label %80

80:                                               ; preds = %75
  %81 = bitcast %class.SkColorFilter* %78 to %class.SkColorFilterBase*
  %82 = bitcast %class.SkColorFilter* %78 to { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)***
  %83 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)**, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*** %82, align 8
  %84 = getelementptr inbounds { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %83, i64 8
  %85 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %84, align 8
  %86 = call { i8, %class.GrFragmentProcessor* } %85(%class.SkColorFilterBase* nonnull %81, %class.GrFragmentProcessor* null, %class.GrRecordingContext* %2, %class.GrColorInfo* dereferenceable(24) %3) #14
  %87 = extractvalue { i8, %class.GrFragmentProcessor* } %86, 0
  %88 = extractvalue { i8, %class.GrFragmentProcessor* } %86, 1
  %89 = icmp eq i8 %87, 0
  br i1 %89, label %90, label %71

90:                                               ; preds = %80
  %91 = icmp eq %class.GrFragmentProcessor* %88, null
  br i1 %91, label %100, label %92

92:                                               ; preds = %90
  %93 = bitcast %class.GrFragmentProcessor* %88 to void (%class.GrFragmentProcessor*)***
  %94 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %94, i64 1
  %96 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %95, align 8
  call void %96(%class.GrFragmentProcessor* nonnull %88) #14
  br label %100

97:                                               ; preds = %71, %65
  %98 = bitcast %class.GrSkSLFP* %42 to %class.GrFragmentProcessor*
  %99 = call %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor7ComposeENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEES4_(%class.GrFragmentProcessor* %98, %class.GrFragmentProcessor* %1) #14
  br label %107

100:                                              ; preds = %90, %92
  %101 = icmp eq %class.GrSkSLFP* %42, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %100
  %103 = bitcast %class.GrSkSLFP* %42 to void (%class.GrSkSLFP*)***
  %104 = load void (%class.GrSkSLFP*)**, void (%class.GrSkSLFP*)*** %103, align 8
  %105 = getelementptr inbounds void (%class.GrSkSLFP*)*, void (%class.GrSkSLFP*)** %104, i64 1
  %106 = load void (%class.GrSkSLFP*)*, void (%class.GrSkSLFP*)** %105, align 8
  call void %106(%class.GrSkSLFP* nonnull %42) #14
  br label %107

107:                                              ; preds = %97, %100, %102
  %108 = phi %class.GrFragmentProcessor* [ %99, %97 ], [ %1, %100 ], [ %1, %102 ]
  %109 = phi i8 [ 1, %97 ], [ 0, %100 ], [ 0, %102 ]
  %110 = load %class.SkData*, %class.SkData** %10, align 8
  %111 = icmp eq %class.SkData* %110, null
  br i1 %111, label %118, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %class.SkData, %class.SkData* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %112
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %110) #14
  %117 = bitcast %class.SkData* %110 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %117) #14
  br label %118

118:                                              ; preds = %116, %112, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %119 = insertvalue { i8, %class.GrFragmentProcessor* } undef, i8 %109, 0
  %120 = insertvalue { i8, %class.GrFragmentProcessor* } %119, %class.GrFragmentProcessor* %108, 1
  ret { i8, %class.GrFragmentProcessor* } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK20SkRuntimeColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkRuntimeColorFilter*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkColorSpace*, align 8
  %5 = alloca %class.sk_sp.333, align 8
  %6 = alloca %class.sk_sp.333, align 8
  %7 = alloca %"class.std::__1::function.308", align 8
  store %class.SkColorSpace* %2, %class.SkColorSpace** %4, align 8
  %8 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 1, i32 0
  %9 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %8, align 8
  %10 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %9, i64 0, i32 8, i32 0, i32 0, i32 0
  %11 = load %class.SkFilterColorProgram*, %class.SkFilterColorProgram** %10, align 8
  %12 = icmp eq %class.SkFilterColorProgram* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %3
  %14 = bitcast %class.SkRuntimeColorFilter* %0 to %class.SkColorFilterBase*
  %15 = tail call { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase* %14, %struct.SkRGBA4f* dereferenceable(16) %1, %class.SkColorSpace* %2) #14
  %16 = extractvalue { <2 x float>, <2 x float> } %15, 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 1
  br label %67

18:                                               ; preds = %3
  %19 = bitcast %class.sk_sp.333* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %20 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %20, align 8
  %21 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %6, i64 0, i32 0
  %22 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %0, i64 0, i32 2, i32 0
  %23 = load %class.SkData*, %class.SkData** %22, align 8
  %24 = icmp eq %class.SkData* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %class.SkData, %class.SkData* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  %28 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi %class.SkColorSpace* [ %2, %18 ], [ %28, %25 ]
  store %class.SkData* %23, %class.SkData** %21, align 8
  call fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* nonnull sret %5, %class.SkRuntimeEffect* %9, %class.sk_sp.333* nonnull %6, %class.SkColorSpace* %30)
  %31 = load %class.SkData*, %class.SkData** %21, align 8
  %32 = icmp eq %class.SkData* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkData, %class.SkData* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %31) #14
  %38 = bitcast %class.SkData* %31 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %38) #14
  br label %39

39:                                               ; preds = %29, %33, %37
  %40 = load %class.SkData*, %class.SkData** %20, align 8
  %41 = getelementptr inbounds %class.SkData, %class.SkData* %40, i64 0, i32 3
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::function.308", %"class.std::__1::function.308"* %7, i64 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::function.308", %"class.std::__1::function.308"* %7, i64 0, i32 0, i32 2
  store { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)* @_ZNSt3__110__function16__policy_invokerIF8SkRGBA4fIL11SkAlphaType2EEiS4_EE11__call_implINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter15onFilterColor4fERKS4_P12SkColorSpaceEUliS4_E_S5_EEEES4_PKNS0_16__policy_storageEiOS4_, { <2 x float>, <2 x float> } (%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f*)** %43, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpaceEUliS7_E_FS7_iS7_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %44, align 8
  %45 = bitcast %"class.std::__1::function.308"* %7 to %class.SkRuntimeColorFilter**
  store %class.SkRuntimeColorFilter* %0, %class.SkRuntimeColorFilter** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::function.308", %"class.std::__1::function.308"* %7, i64 0, i32 0, i32 0, i32 1
  %47 = bitcast [8 x i8]* %46 to %class.SkColorSpace***
  store %class.SkColorSpace** %4, %class.SkColorSpace*** %47, align 8
  %48 = call { <2 x float>, <2 x float> } @_ZNK20SkFilterColorProgram4evalERK8SkRGBA4fIL11SkAlphaType2EEPKvNSt3__18functionIFS2_iS2_EEE(%class.SkFilterColorProgram* nonnull %11, %struct.SkRGBA4f* dereferenceable(16) %1, i8* %42, %"class.std::__1::function.308"* nonnull %7)
  %49 = extractvalue { <2 x float>, <2 x float> } %48, 0
  %50 = extractvalue { <2 x float>, <2 x float> } %48, 1
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %44, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"class.std::__1::function.308", %"class.std::__1::function.308"* %7, i64 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void %53(i8* %57) #14
  br label %58

58:                                               ; preds = %39, %55
  %59 = icmp eq %class.SkData* %40, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %40) #14
  %65 = bitcast %class.SkData* %40 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %65) #14
  br label %66

66:                                               ; preds = %58, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br label %67

67:                                               ; preds = %66, %13
  %68 = phi <2 x float> [ %49, %66 ], [ %16, %13 ]
  %69 = phi <2 x float> [ %50, %66 ], [ %17, %13 ]
  %70 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %68, 0
  %71 = insertvalue { <2 x float>, <2 x float> } %70, <2 x float> %69, 1
  ret { <2 x float>, <2 x float> } %71
}

declare zeroext i1 @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf(%class.SkColorFilterBase*, float*) unnamed_addr #2

declare zeroext i1 @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode(%class.SkColorFilterBase*, i32*, i32*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK20SkRuntimeColorFilter14onAppendStagesERK10SkStageRecb(%class.SkRuntimeColorFilter*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkRuntimeColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.skvm::Builder"*, align 8
  %9 = alloca %class.SkColorSpace*, align 8
  %10 = alloca %"struct.skvm::Uniforms"*, align 8
  %11 = alloca %class.SkArenaAlloc*, align 8
  %12 = alloca %class.sk_sp.333, align 8
  %13 = alloca %class.sk_sp.333, align 8
  %14 = alloca %"class.std::__1::vector.290", align 16
  %15 = alloca %"struct.skvm::Coord", align 8
  %16 = alloca %"struct.skvm::Coord", align 8
  %17 = alloca %"class.std::__1::function", align 8
  store %"class.skvm::Builder"* %2, %"class.skvm::Builder"** %8, align 8
  store %class.SkColorSpace* %4, %class.SkColorSpace** %9, align 8
  store %"struct.skvm::Uniforms"* %5, %"struct.skvm::Uniforms"** %10, align 8
  store %class.SkArenaAlloc* %6, %class.SkArenaAlloc** %11, align 8
  %18 = bitcast %class.sk_sp.333* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %12, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %19, align 8
  %20 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %1, i64 0, i32 1, i32 0
  %21 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %20, align 8
  %22 = getelementptr inbounds %class.sk_sp.333, %class.sk_sp.333* %13, i64 0, i32 0
  %23 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %1, i64 0, i32 2, i32 0
  %24 = load %class.SkData*, %class.SkData** %23, align 8
  %25 = icmp eq %class.SkData* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %7
  %27 = getelementptr inbounds %class.SkData, %class.SkData* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 1 monotonic
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  br label %30

30:                                               ; preds = %7, %26
  %31 = phi %class.SkColorSpace* [ %4, %7 ], [ %29, %26 ]
  store %class.SkData* %24, %class.SkData** %22, align 8
  call fastcc void @_ZL20get_xformed_uniformsPK15SkRuntimeEffect5sk_spI6SkDataEPK12SkColorSpace(%class.sk_sp.333* nonnull sret %12, %class.SkRuntimeEffect* %21, %class.sk_sp.333* nonnull %13, %class.SkColorSpace* %31)
  %32 = load %class.SkData*, %class.SkData** %22, align 8
  %33 = icmp eq %class.SkData* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %32) #14
  %39 = bitcast %class.SkData* %32 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %39) #14
  br label %40

40:                                               ; preds = %30, %34, %38
  %41 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %8, align 8
  %42 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %41, i32 0) #14
  %43 = extractvalue { %"class.skvm::Builder"*, i32 } %42, 0
  %44 = extractvalue { %"class.skvm::Builder"*, i32 } %42, 1
  %45 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %41, i32 0) #14
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 0
  %47 = extractvalue { %"class.skvm::Builder"*, i32 } %45, 1
  %48 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %20, align 8
  %49 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %48, i64 0, i32 5, i32 0, i32 0
  %50 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %49, align 8
  %51 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %48, i64 0, i32 5, i32 0, i32 1
  %52 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %51, align 8
  %53 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %50, %52
  br i1 %53, label %72, label %54

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %52, i64 -1, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp ult i32 %56, 11
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  call void @llvm.trap() #14
  unreachable

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %52, i64 -1, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = sext i32 %56 to i64
  %63 = getelementptr inbounds [11 x i64], [11 x i64]* @switch.table._ZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc, i64 0, i64 %62
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %52, i64 -1, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = mul nsw i64 %64, %67
  %69 = add i64 %61, 3
  %70 = add i64 %69, %68
  %71 = lshr i64 %70, 2
  br label %72

72:                                               ; preds = %40, %59
  %73 = phi i64 [ %71, %59 ], [ 0, %40 ]
  %74 = bitcast %"class.std::__1::vector.290"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #14
  %75 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %14, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %14, i64 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %74, i8 0, i64 24, i1 false) #14
  %78 = bitcast i32** %77 to i64*
  %79 = bitcast %"class.std::__1::vector.290"* %14 to i64*
  %80 = icmp eq i64 %73, 0
  %81 = bitcast i32** %76 to i64*
  br i1 %80, label %100, label %82

82:                                               ; preds = %72
  %83 = shl nuw i64 %73, 2
  %84 = call i8* @_Znwm(i64 %83) #15
  %85 = bitcast i8* %84 to i32*
  %86 = getelementptr inbounds i32, i32* %85, i64 %73
  %87 = ptrtoint i32* %86 to i64
  %88 = insertelement <2 x i8*> undef, i8* %84, i32 0
  %89 = shufflevector <2 x i8*> %88, <2 x i8*> undef, <2 x i32> zeroinitializer
  %90 = ptrtoint <2 x i8*> %89 to <2 x i64>
  %91 = bitcast %"class.std::__1::vector.290"* %14 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %91, align 16
  store i64 %87, i64* %78, align 16
  %92 = load %class.SkData*, %class.SkData** %19, align 8
  %93 = getelementptr inbounds %class.SkData, %class.SkData* %92, i64 0, i32 3
  %94 = bitcast i32** %76 to i64*
  br label %164

95:                                               ; preds = %305
  %96 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %20, align 8
  %97 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %8, align 8
  %98 = load i32*, i32** %75, align 16
  %99 = load i64, i64* %94, align 8
  br label %100

100:                                              ; preds = %72, %95
  %101 = phi i64* [ %94, %95 ], [ %81, %72 ]
  %102 = phi i64 [ %99, %95 ], [ 0, %72 ]
  %103 = phi i32* [ %98, %95 ], [ null, %72 ]
  %104 = phi %"class.skvm::Builder"* [ %97, %95 ], [ %41, %72 ]
  %105 = phi %class.SkRuntimeEffect* [ %96, %95 ], [ %48, %72 ]
  %106 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"struct.SkSL::Program"*, %"struct.SkSL::Program"** %106, align 8
  %108 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %105, i64 0, i32 4
  %109 = load %"class.SkSL::FunctionDefinition"*, %"class.SkSL::FunctionDefinition"** %108, align 8
  %110 = ptrtoint i32* %103 to i64
  %111 = sub i64 %102, %110
  %112 = ashr exact i64 %111, 2
  %113 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %15, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* %43, %"class.skvm::Builder"** %113, align 8
  %114 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %15, i64 0, i32 0, i32 1
  store i32 %44, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %15, i64 0, i32 0, i32 2, i64 0
  %116 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %15, i64 0, i32 1, i32 0
  %117 = bitcast i8* %115 to i32*
  store i32 -1431655766, i32* %117, align 4
  store %"class.skvm::Builder"* %46, %"class.skvm::Builder"** %116, align 8
  %118 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %15, i64 0, i32 1, i32 1
  store i32 %47, i32* %118, align 8
  %119 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %15, i64 0, i32 1, i32 2, i64 0
  %120 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %16, i64 0, i32 0, i32 0
  %121 = bitcast i8* %119 to i32*
  store i32 -1431655766, i32* %121, align 4
  store %"class.skvm::Builder"* %43, %"class.skvm::Builder"** %120, align 8
  %122 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %16, i64 0, i32 0, i32 1
  store i32 %44, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %16, i64 0, i32 0, i32 2, i64 0
  %124 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %16, i64 0, i32 1, i32 0
  %125 = bitcast i8* %123 to i32*
  store i32 -1431655766, i32* %125, align 4
  store %"class.skvm::Builder"* %46, %"class.skvm::Builder"** %124, align 8
  %126 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %16, i64 0, i32 1, i32 1
  store i32 %47, i32* %126, align 8
  %127 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %16, i64 0, i32 1, i32 2, i64 0
  %128 = bitcast i8* %127 to i32*
  store i32 -1431655766, i32* %128, align 4
  %129 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 1, i32 0
  %130 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 2
  store void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)* @_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPNS2_7BuilderES3_P12SkColorSpacePNS2_8UniformsEP12SkArenaAllocEUliS4_S3_E_S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_, void (%"struct.skvm::Color"*, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"*, %"struct.skvm::Color"*)** %129, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %130, align 8
  %131 = call i8* @_Znwm(i64 40) #15, !noalias !83
  %132 = bitcast i8* %131 to %class.SkRuntimeColorFilter**
  store %class.SkRuntimeColorFilter* %1, %class.SkRuntimeColorFilter** %132, align 8
  %133 = getelementptr inbounds i8, i8* %131, i64 8
  %134 = bitcast i8* %133 to %"class.skvm::Builder"***
  store %"class.skvm::Builder"** %8, %"class.skvm::Builder"*** %134, align 8
  %135 = getelementptr inbounds i8, i8* %131, i64 16
  %136 = bitcast i8* %135 to %class.SkColorSpace***
  store %class.SkColorSpace** %9, %class.SkColorSpace*** %136, align 8
  %137 = getelementptr inbounds i8, i8* %131, i64 24
  %138 = bitcast i8* %137 to %"struct.skvm::Uniforms"***
  store %"struct.skvm::Uniforms"** %10, %"struct.skvm::Uniforms"*** %138, align 8
  %139 = getelementptr inbounds i8, i8* %131, i64 32
  %140 = bitcast i8* %139 to %class.SkArenaAlloc***
  store %class.SkArenaAlloc** %11, %class.SkArenaAlloc*** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 0, i32 0
  store i8* %131, i8** %141, align 8
  call void @_ZN4SkSL13ProgramToSkVMERKNS_7ProgramERKNS_18FunctionDefinitionEPN4skvm7BuilderE6SkSpanIiENS6_5CoordESB_NS6_5ColorENSt3__18functionIFSC_iSB_SC_EEE(%"struct.skvm::Color"* sret %0, %"struct.SkSL::Program"* dereferenceable(128) %107, %"class.SkSL::FunctionDefinition"* dereferenceable(88) %109, %"class.skvm::Builder"* %104, i32* %103, i64 %112, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %15, %"struct.skvm::Coord"* nonnull byval(%"struct.skvm::Coord") align 8 %16, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %3, %"class.std::__1::function"* nonnull %17) #14
  %142 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %130, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %142, i64 0, i32 1
  %144 = load void (i8*)*, void (i8*)** %143, align 8
  %145 = icmp eq void (i8*)* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %100
  %147 = load i8*, i8** %141, align 8
  call void %144(i8* %147) #14
  br label %148

148:                                              ; preds = %100, %146
  %149 = load i32*, i32** %75, align 16
  %150 = icmp eq i32* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  %152 = ptrtoint i32* %149 to i64
  store i64 %152, i64* %101, align 8
  %153 = bitcast i32* %149 to i8*
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #14
  %155 = load %class.SkData*, %class.SkData** %19, align 8
  %156 = icmp eq %class.SkData* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %class.SkData, %class.SkData* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 -1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %163

161:                                              ; preds = %157
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %155) #14
  %162 = bitcast %class.SkData* %155 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %162) #14
  br label %163

163:                                              ; preds = %154, %157, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  ret void

164:                                              ; preds = %308, %82
  %165 = phi %"class.skvm::Builder"* [ %41, %82 ], [ %309, %308 ]
  %166 = phi i64 [ 0, %82 ], [ %306, %308 ]
  %167 = load i8*, i8** %93, align 8
  %168 = shl i64 %166, 2
  %169 = getelementptr inbounds i8, i8* %167, i64 %168
  %170 = bitcast i8* %169 to i32*
  %171 = load i32, i32* %170, align 1
  %172 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %10, align 8
  %173 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %172, i64 0, i32 1
  %174 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %172, i64 0, i32 1, i32 0, i32 1
  %175 = load i32*, i32** %174, align 8
  %176 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %172, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = icmp eq i32* %175, %177
  %179 = ptrtoint i32* %177 to i64
  br i1 %178, label %185, label %180

180:                                              ; preds = %164
  store i32 %171, i32* %175, align 4
  %181 = getelementptr inbounds i32, i32* %175, i64 1
  %182 = ptrtoint i32* %181 to i64
  %183 = bitcast i32** %174 to i64*
  store i64 %182, i64* %183, align 8
  %184 = bitcast %"class.std::__1::vector.290"* %173 to i64*
  br label %242

185:                                              ; preds = %164
  %186 = ptrtoint i32* %175 to i64
  %187 = bitcast i32** %174 to i64*
  %188 = bitcast %"class.std::__1::vector.290"* %173 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = sub i64 %186, %189
  %191 = ashr exact i64 %190, 2
  %192 = add nsw i64 %191, 1
  %193 = icmp ugt i64 %192, 4611686018427387903
  br i1 %193, label %194, label %196

194:                                              ; preds = %185
  %195 = bitcast %"class.std::__1::vector.290"* %173 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %195) #16
  unreachable

196:                                              ; preds = %185
  %197 = bitcast i32** %176 to i64*
  %198 = sub i64 %179, %189
  %199 = ashr exact i64 %198, 2
  %200 = icmp ult i64 %199, 2305843009213693951
  br i1 %200, label %201, label %209

201:                                              ; preds = %196
  %202 = ashr exact i64 %198, 1
  %203 = icmp ult i64 %202, %192
  %204 = select i1 %203, i64 %192, i64 %202
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %214, label %206

206:                                              ; preds = %201
  %207 = icmp ugt i64 %204, 4611686018427387903
  br i1 %207, label %208, label %209

208:                                              ; preds = %206
  call void @abort() #16
  unreachable

209:                                              ; preds = %206, %196
  %210 = phi i64 [ %204, %206 ], [ 4611686018427387903, %196 ]
  %211 = shl i64 %210, 2
  %212 = call i8* @_Znwm(i64 %211) #15
  %213 = bitcast i8* %212 to i32*
  br label %214

214:                                              ; preds = %209, %201
  %215 = phi i64 [ %210, %209 ], [ 0, %201 ]
  %216 = phi i32* [ %213, %209 ], [ null, %201 ]
  %217 = getelementptr inbounds i32, i32* %216, i64 %191
  %218 = getelementptr inbounds i32, i32* %216, i64 %215
  %219 = ptrtoint i32* %218 to i64
  store i32 %171, i32* %217, align 4
  %220 = getelementptr inbounds i32, i32* %217, i64 1
  %221 = ptrtoint i32* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector.290", %"class.std::__1::vector.290"* %173, i64 0, i32 0, i32 0
  %223 = load i32*, i32** %222, align 8
  %224 = load i64, i64* %187, align 8
  %225 = ptrtoint i32* %223 to i64
  %226 = sub i64 %224, %225
  %227 = ashr exact i64 %226, 2
  %228 = sub nsw i64 0, %227
  %229 = getelementptr inbounds i32, i32* %217, i64 %228
  %230 = ptrtoint i32* %229 to i64
  %231 = icmp sgt i64 %226, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %214
  %233 = bitcast i32* %229 to i8*
  %234 = bitcast i32* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %233, i8* align 4 %234, i64 %226, i1 false) #14
  %235 = load i32*, i32** %222, align 8
  br label %236

236:                                              ; preds = %232, %214
  %237 = phi i32* [ %223, %214 ], [ %235, %232 ]
  store i64 %230, i64* %188, align 8
  store i64 %221, i64* %187, align 8
  store i64 %219, i64* %197, align 8
  %238 = icmp eq i32* %237, null
  br i1 %238, label %242, label %239

239:                                              ; preds = %236
  %240 = bitcast i32* %237 to i8*
  call void @_ZdlPv(i8* %240) #15
  %241 = load i64, i64* %187, align 8
  br label %242

242:                                              ; preds = %180, %236, %239
  %243 = phi i64* [ %184, %180 ], [ %188, %236 ], [ %188, %239 ]
  %244 = phi i64 [ %182, %180 ], [ %221, %236 ], [ %241, %239 ]
  %245 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %172, i64 0, i32 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = load i64, i64* %243, align 8
  %248 = sub i64 %244, %247
  %249 = shl i64 %248, 32
  %250 = add i64 %249, -17179869184
  %251 = lshr exact i64 %250, 32
  %252 = trunc i64 %251 to i32
  %253 = call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %165, i32 %246, i32 %252) #14
  %254 = extractvalue { %"class.skvm::Builder"*, i32 } %253, 1
  %255 = load i32*, i32** %76, align 8
  %256 = load i32*, i32** %77, align 16
  %257 = icmp ult i32* %255, %256
  %258 = ptrtoint i32* %256 to i64
  br i1 %257, label %259, label %262

259:                                              ; preds = %242
  store i32 %254, i32* %255, align 4
  %260 = getelementptr inbounds i32, i32* %255, i64 1
  %261 = ptrtoint i32* %260 to i64
  store i64 %261, i64* %94, align 8
  br label %305

262:                                              ; preds = %242
  %263 = ptrtoint i32* %255 to i64
  %264 = load i64, i64* %79, align 16
  %265 = sub i64 %263, %264
  %266 = ashr exact i64 %265, 2
  %267 = add nsw i64 %266, 1
  %268 = icmp ugt i64 %267, 4611686018427387903
  br i1 %268, label %269, label %271

269:                                              ; preds = %262
  %270 = bitcast %"class.std::__1::vector.290"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %270) #16
  unreachable

271:                                              ; preds = %262
  %272 = sub i64 %258, %264
  %273 = ashr exact i64 %272, 2
  %274 = icmp ult i64 %273, 2305843009213693951
  br i1 %274, label %275, label %283

275:                                              ; preds = %271
  %276 = ashr exact i64 %272, 1
  %277 = icmp ult i64 %276, %267
  %278 = select i1 %277, i64 %267, i64 %276
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %288, label %280

280:                                              ; preds = %275
  %281 = icmp ugt i64 %278, 4611686018427387903
  br i1 %281, label %282, label %283

282:                                              ; preds = %280
  call void @abort() #16
  unreachable

283:                                              ; preds = %280, %271
  %284 = phi i64 [ %278, %280 ], [ 4611686018427387903, %271 ]
  %285 = shl i64 %284, 2
  %286 = call i8* @_Znwm(i64 %285) #15
  %287 = bitcast i8* %286 to i32*
  br label %288

288:                                              ; preds = %283, %275
  %289 = phi i64 [ %284, %283 ], [ 0, %275 ]
  %290 = phi i8* [ %286, %283 ], [ null, %275 ]
  %291 = phi i32* [ %287, %283 ], [ null, %275 ]
  %292 = getelementptr inbounds i32, i32* %291, i64 %266
  %293 = getelementptr inbounds i32, i32* %291, i64 %289
  %294 = ptrtoint i32* %293 to i64
  store i32 %254, i32* %292, align 4
  %295 = getelementptr inbounds i32, i32* %292, i64 1
  %296 = ptrtoint i32* %295 to i64
  %297 = ptrtoint i32* %291 to i64
  %298 = icmp sgt i64 %265, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %288
  %300 = inttoptr i64 %264 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %290, i8* align 4 %300, i64 %265, i1 false) #14
  br label %301

301:                                              ; preds = %299, %288
  store i64 %297, i64* %79, align 16
  store i64 %296, i64* %94, align 8
  store i64 %294, i64* %78, align 16
  %302 = icmp eq i64 %264, 0
  br i1 %302, label %305, label %303

303:                                              ; preds = %301
  %304 = inttoptr i64 %264 to i8*
  call void @_ZdlPv(i8* %304) #15
  br label %305

305:                                              ; preds = %259, %301, %303
  %306 = add nuw nsw i64 %166, 1
  %307 = icmp eq i64 %306, %73
  br i1 %307, label %95, label %308

308:                                              ; preds = %305
  %309 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %8, align 8
  br label %164
}

declare %class.GrFragmentProcessor* @_ZN19GrFragmentProcessor7ComposeENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEES4_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNSt3__110__function16__policy_invokerIF8SkRGBA4fIL11SkAlphaType2EEiS4_EE11__call_implINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter15onFilterColor4fERKS4_P12SkColorSpaceEUliS4_E_S5_EEEES4_PKNS0_16__policy_storageEiOS4_(%"union.std::__1::__function::__policy_storage"*, i32, %struct.SkRGBA4f* dereferenceable(16)) #7 comdat align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast %struct.SkRGBA4f* %2 to <2 x float>*
  %6 = load <2 x float>, <2 x float>* %5, align 4
  %7 = getelementptr inbounds %struct.SkRGBA4f, %struct.SkRGBA4f* %2, i64 0, i32 2
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %6, <2 x float>* %11, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %9, <2 x float>* %12, align 8
  %13 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkRuntimeColorFilter**
  %14 = load %class.SkRuntimeColorFilter*, %class.SkRuntimeColorFilter** %13, align 8
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %14, i64 0, i32 3, i32 0, i32 0
  %17 = load %class.sk_sp.337*, %class.sk_sp.337** %16, align 8
  %18 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %17, i64 %15, i32 0
  %19 = load %class.SkColorFilter*, %class.SkColorFilter** %18, align 8
  %20 = icmp eq %class.SkColorFilter* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %3
  %22 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRGBA4f*
  %23 = bitcast %class.SkColorFilter* %19 to %class.SkColorFilterBase*
  %24 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %25 = bitcast [8 x i8]* %24 to %class.SkColorSpace***
  %26 = load %class.SkColorSpace**, %class.SkColorSpace*** %25, align 8
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8
  %28 = bitcast %class.SkColorFilter* %19 to { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)***
  %29 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)**, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)*** %28, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)** %29, i64 9
  %31 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f*, %class.SkColorSpace*)** %30, align 8
  %32 = call { <2 x float>, <2 x float> } %31(%class.SkColorFilterBase* nonnull %23, %struct.SkRGBA4f* nonnull dereferenceable(16) %22, %class.SkColorSpace* %27) #14
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 1
  br label %35

35:                                               ; preds = %3, %21
  %36 = phi <2 x float> [ %33, %21 ], [ %6, %3 ]
  %37 = phi <2 x float> [ %34, %21 ], [ %9, %3 ]
  %38 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %36, 0
  %39 = insertvalue { <2 x float>, <2 x float> } %38, <2 x float> %37, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret { <2 x float>, <2 x float> } %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPNS2_7BuilderES3_P12SkColorSpacePNS2_8UniformsEP12SkArenaAllocEUliS4_S3_E_S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_(%"struct.skvm::Color"* noalias sret, %"union.std::__1::__function::__policy_storage"*, i32, %"struct.skvm::Coord"* dereferenceable(32), %"struct.skvm::Color"* dereferenceable(64)) #0 comdat align 2 {
  %6 = alloca %"struct.skvm::Color", align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %1 to %"class.std::__1::__function::__default_alloc_func.645"**
  %8 = load %"class.std::__1::__function::__default_alloc_func.645"*, %"class.std::__1::__function::__default_alloc_func.645"** %7, align 8
  %9 = bitcast %"struct.skvm::Color"* %4 to i8*
  %10 = bitcast %"struct.skvm::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #14, !noalias !88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %9, i64 64, i1 false) #14, !noalias !88
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.645", %"class.std::__1::__function::__default_alloc_func.645"* %8, i64 0, i32 0, i32 0
  %12 = load %class.SkRuntimeColorFilter*, %class.SkRuntimeColorFilter** %11, align 8, !noalias !95
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds %class.SkRuntimeColorFilter, %class.SkRuntimeColorFilter* %12, i64 0, i32 3, i32 0, i32 0
  %15 = load %class.sk_sp.337*, %class.sk_sp.337** %14, align 8, !noalias !95
  %16 = getelementptr inbounds %class.sk_sp.337, %class.sk_sp.337* %15, i64 %13, i32 0
  %17 = load %class.SkColorFilter*, %class.SkColorFilter** %16, align 8, !noalias !95
  %18 = icmp eq %class.SkColorFilter* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %5
  %20 = bitcast %class.SkColorFilter* %17 to %class.SkColorFilterBase*
  %21 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.645", %"class.std::__1::__function::__default_alloc_func.645"* %8, i64 0, i32 0, i32 1
  %22 = load %"class.skvm::Builder"**, %"class.skvm::Builder"*** %21, align 8, !noalias !95
  %23 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %22, align 8, !noalias !95
  %24 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.645", %"class.std::__1::__function::__default_alloc_func.645"* %8, i64 0, i32 0, i32 2
  %25 = load %class.SkColorSpace**, %class.SkColorSpace*** %24, align 8, !noalias !95
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8, !noalias !95
  %27 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.645", %"class.std::__1::__function::__default_alloc_func.645"* %8, i64 0, i32 0, i32 3
  %28 = load %"struct.skvm::Uniforms"**, %"struct.skvm::Uniforms"*** %27, align 8, !noalias !95
  %29 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %28, align 8, !noalias !95
  %30 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.645", %"class.std::__1::__function::__default_alloc_func.645"* %8, i64 0, i32 0, i32 4
  %31 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %30, align 8, !noalias !95
  %32 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %31, align 8, !noalias !95
  tail call void @_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret %0, %class.SkColorFilterBase* nonnull %20, %"class.skvm::Builder"* %23, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %6, %class.SkColorSpace* %26, %"struct.skvm::Uniforms"* %29, %class.SkArenaAlloc* %32) #14
  br label %35

33:                                               ; preds = %5
  %34 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %10, i64 64, i1 false) #14
  br label %35

35:                                               ; preds = %19, %33
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #14, !noalias !88
  ret void
}

declare void @_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEPvPKv(i8*) #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #15, !noalias !98
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEEvPv(i8*) #0 comdat align 2 {
  tail call void @_ZdlPv(i8* %0) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7ProgramD2Ev(%"struct.SkSL::Program"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %2, align 8
  %4 = icmp eq %"class.SkSL::Pool"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"* nonnull %3) #14
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.std::__1::vector.108", %"class.std::__1::vector.108"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 6, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.110"* %11, %9
  br i1 %12, label %26, label %13

13:                                               ; preds = %6, %24
  %14 = phi %"class.std::__1::unique_ptr.110"* [ %15, %24 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %16, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %16, align 8
  %18 = icmp eq %"class.SkSL::ProgramElement"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.SkSL::ProgramElement"* %17 to void (%"class.SkSL::ProgramElement"*)***
  %21 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %21, i64 1
  %23 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %22, align 8
  tail call void %23(%"class.SkSL::ProgramElement"* nonnull %17) #14
  br label %24

24:                                               ; preds = %19, %13
  %25 = icmp eq %"class.std::__1::unique_ptr.110"* %15, %9
  br i1 %25, label %26, label %13

26:                                               ; preds = %24, %6
  store %"class.std::__1::unique_ptr.110"* %9, %"class.std::__1::unique_ptr.110"** %10, align 8
  %27 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 2, i32 1
  %29 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %28, align 8
  %30 = bitcast %"class.std::__1::shared_ptr"* %27 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %30, align 8
  %31 = icmp eq %"class.std::__1::__shared_weak_count"* %29, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %29, i64 0, i32 0, i32 1
  %34 = atomicrmw add i64* %33, i64 -1 acq_rel
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %29, i64 0, i32 0
  %38 = bitcast %"class.std::__1::__shared_weak_count"* %29 to void (%"class.std::__1::__shared_count"*)***
  %39 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %39, i64 2
  %41 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %40, align 8
  tail call void %41(%"class.std::__1::__shared_count"* %37) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %29) #14
  br label %42

42:                                               ; preds = %26, %32, %36
  %43 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3
  %44 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 3, i32 1
  %45 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %44, align 8
  %46 = bitcast %"class.std::__1::shared_ptr.37"* %43 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %46, align 8
  %47 = icmp eq %"class.std::__1::__shared_weak_count"* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0, i32 1
  %50 = atomicrmw add i64* %49, i64 -1 acq_rel
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %45, i64 0, i32 0
  %54 = bitcast %"class.std::__1::__shared_weak_count"* %45 to void (%"class.std::__1::__shared_count"*)***
  %55 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %55, i64 2
  %57 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %56, align 8
  tail call void %57(%"class.std::__1::__shared_count"* %53) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %45) #14
  br label %58

58:                                               ; preds = %42, %48, %52
  %59 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %60 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %59, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %59, align 8
  %61 = icmp eq %"class.SkSL::ModifiersPool"* %60, null
  br i1 %61, label %80, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %60, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %62, %66
  %67 = phi %"struct.std::__1::__hash_node_base"* [ %69, %66 ], [ %64, %62 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #15
  %71 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %62
  %73 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %73, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base"** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast %"struct.std::__1::__hash_node_base"** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %76, %72
  %79 = bitcast %"class.SkSL::ModifiersPool"* %60 to i8*
  tail call void @_ZdlPv(i8* %79) #15
  br label %80

80:                                               ; preds = %58, %78
  %81 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %2, align 8
  %82 = icmp eq %"class.SkSL::Pool"* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  tail call void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"* nonnull %81) #14
  br label %84

84:                                               ; preds = %80, %83
  %85 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %86 = load %"class.SkSL::ProgramUsage"*, %"class.SkSL::ProgramUsage"** %85, align 8
  store %"class.SkSL::ProgramUsage"* null, %"class.SkSL::ProgramUsage"** %85, align 8
  %87 = icmp eq %"class.SkSL::ProgramUsage"* %86, null
  br i1 %87, label %102, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %86, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %89, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"** %89, align 8
  %91 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair, const SkSL::FunctionDeclaration *, SkTHashMap<const SkSL::FunctionDeclaration *, int, SkGoodHash>::Pair>::Slot"* %90 to i8*
  tail call void @_ZdaPv(i8* %93) #15
  br label %94

94:                                               ; preds = %92, %88
  %95 = getelementptr inbounds %"class.SkSL::ProgramUsage", %"class.SkSL::ProgramUsage"* %86, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %96 = load %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %95, align 8
  store %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"** %95, align 8
  %97 = icmp eq %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %94
  %99 = bitcast %"struct.SkTHashTable<SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair, const SkSL::Variable *, SkTHashMap<const SkSL::Variable *, SkSL::ProgramUsage::VariableCounts, SkGoodHash>::Pair>::Slot"* %96 to i8*
  tail call void @_ZdaPv(i8* %99) #15
  br label %100

100:                                              ; preds = %98, %94
  %101 = bitcast %"class.SkSL::ProgramUsage"* %86 to i8*
  tail call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %84, %100
  %103 = load %"class.SkSL::ModifiersPool"*, %"class.SkSL::ModifiersPool"** %59, align 8
  store %"class.SkSL::ModifiersPool"* null, %"class.SkSL::ModifiersPool"** %59, align 8
  %104 = icmp eq %"class.SkSL::ModifiersPool"* %103, null
  br i1 %104, label %123, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %103, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %112, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8*
  tail call void @_ZdlPv(i8* %113) #15
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %114, label %115, label %109

115:                                              ; preds = %109, %105
  %116 = getelementptr inbounds %"class.SkSL::ModifiersPool", %"class.SkSL::ModifiersPool"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %116, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base"** %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast %"struct.std::__1::__hash_node_base"** %117 to i8*
  tail call void @_ZdlPv(i8* %120) #15
  br label %121

121:                                              ; preds = %119, %115
  %122 = bitcast %"class.SkSL::ModifiersPool"* %103 to i8*
  tail call void @_ZdlPv(i8* %122) #15
  br label %123

123:                                              ; preds = %102, %121
  %124 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 0
  %125 = load %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"*** %124, align 8
  %126 = icmp eq %"class.SkSL::ProgramElement"** %125, null
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = ptrtoint %"class.SkSL::ProgramElement"** %125 to i64
  %129 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 7, i32 0, i32 1
  %130 = bitcast %"class.SkSL::ProgramElement"*** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast %"class.SkSL::ProgramElement"** %125 to i8*
  tail call void @_ZdlPv(i8* %131) #15
  br label %132

132:                                              ; preds = %123, %127
  %133 = load %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"** %8, align 8
  %134 = icmp eq %"class.std::__1::unique_ptr.110"* %133, null
  br i1 %134, label %157, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.std::__1::unique_ptr.110"* %133 to i8*
  %137 = load %"class.std::__1::unique_ptr.110"*, %"class.std::__1::unique_ptr.110"** %10, align 8
  %138 = icmp eq %"class.std::__1::unique_ptr.110"* %137, %133
  br i1 %138, label %155, label %139

139:                                              ; preds = %135, %150
  %140 = phi %"class.std::__1::unique_ptr.110"* [ %141, %150 ], [ %137, %135 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #14
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.110"* %141, %133
  br i1 %151, label %152, label %139

152:                                              ; preds = %150
  %153 = bitcast %"class.std::__1::vector.108"* %7 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  store %"class.std::__1::unique_ptr.110"* %133, %"class.std::__1::unique_ptr.110"** %10, align 8
  tail call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %132, %155
  %158 = load %"class.SkSL::Pool"*, %"class.SkSL::Pool"** %2, align 8
  store %"class.SkSL::Pool"* null, %"class.SkSL::Pool"** %2, align 8
  %159 = icmp eq %"class.SkSL::Pool"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  tail call void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"* nonnull %158) #14
  %161 = bitcast %"class.SkSL::Pool"* %158 to i8*
  tail call void @_ZdlPv(i8* %161) #15
  br label %162

162:                                              ; preds = %157, %160
  %163 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %44, align 8
  %164 = icmp eq %"class.std::__1::__shared_weak_count"* %163, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %163, i64 0, i32 0, i32 1
  %167 = atomicrmw add i64* %166, i64 -1 acq_rel
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %163, i64 0, i32 0
  %171 = bitcast %"class.std::__1::__shared_weak_count"* %163 to void (%"class.std::__1::__shared_count"*)***
  %172 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %171, align 8
  %173 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %172, i64 2
  %174 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %173, align 8
  tail call void %174(%"class.std::__1::__shared_count"* %170) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %163) #14
  br label %175

175:                                              ; preds = %162, %165, %169
  %176 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %28, align 8
  %177 = icmp eq %"class.std::__1::__shared_weak_count"* %176, null
  br i1 %177, label %188, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %176, i64 0, i32 0, i32 1
  %180 = atomicrmw add i64* %179, i64 -1 acq_rel
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %188

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %176, i64 0, i32 0
  %184 = bitcast %"class.std::__1::__shared_weak_count"* %176 to void (%"class.std::__1::__shared_count"*)***
  %185 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %184, align 8
  %186 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %185, i64 2
  %187 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %186, align 8
  tail call void %187(%"class.std::__1::__shared_count"* %183) #14
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %176) #14
  br label %188

188:                                              ; preds = %175, %178, %182
  %189 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %190 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %189, align 8
  store %"struct.SkSL::ProgramConfig"* null, %"struct.SkSL::ProgramConfig"** %189, align 8
  %191 = icmp eq %"struct.SkSL::ProgramConfig"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %190, i64 0, i32 0
  tail call void @_ZdlPv(i8* %193) #15
  br label %194

194:                                              ; preds = %188, %192
  %195 = getelementptr inbounds %"struct.SkSL::Program", %"struct.SkSL::Program"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %196 = load %"class.SkSL::String"*, %"class.SkSL::String"** %195, align 8
  store %"class.SkSL::String"* null, %"class.SkSL::String"** %195, align 8
  %197 = icmp eq %"class.SkSL::String"* %196, null
  br i1 %197, label %208, label %198

198:                                              ; preds = %194
  %199 = bitcast %"class.SkSL::String"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  tail call void @_ZdlPv(i8* %205) #15
  br label %206

206:                                              ; preds = %203, %198
  %207 = bitcast %"class.SkSL::String"* %196 to i8*
  tail call void @_ZdlPv(i8* %207) #15
  br label %208

208:                                              ; preds = %194, %206
  ret void
}

declare void @_ZN4SkSL4Pool14attachToThreadEv(%"class.SkSL::Pool"*) local_unnamed_addr #2

declare void @_ZN4SkSL4Pool16detachFromThreadEv(%"class.SkSL::Pool"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL4PoolD1Ev(%"class.SkSL::Pool"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN15SkRuntimeEffect5ChildENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.219"*, %"struct.SkRuntimeEffect::Child"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.SkRuntimeEffect::Child"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.219"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.219"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.SkRuntimeEffect::Child"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"struct.SkRuntimeEffect::Child"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.SkRuntimeEffect::Child"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %36, i64 %35
  %39 = ptrtoint %"struct.SkRuntimeEffect::Child"* %38 to i64
  %40 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %1, i64 0, i32 0
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %40, %class.SkString* dereferenceable(8) %41) #14
  %42 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %1, i64 0, i32 1
  %44 = bitcast i32* %43 to i64*
  %45 = bitcast i32* %42 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %37, i64 1
  %48 = ptrtoint %"struct.SkRuntimeEffect::Child"* %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::vector.219", %"class.std::__1::vector.219"* %0, i64 0, i32 0, i32 0
  %50 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %49, align 8
  %51 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %3, align 8
  %52 = icmp eq %"struct.SkRuntimeEffect::Child"* %51, %50
  br i1 %52, label %53, label %55

53:                                               ; preds = %34
  %54 = ptrtoint %"struct.SkRuntimeEffect::Child"* %50 to i64
  br label %71

55:                                               ; preds = %34, %55
  %56 = phi %"struct.SkRuntimeEffect::Child"* [ %66, %55 ], [ %37, %34 ]
  %57 = phi %"struct.SkRuntimeEffect::Child"* [ %58, %55 ], [ %51, %34 ]
  %58 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %57, i64 -1
  %59 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %56, i64 -1, i32 0
  %60 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %58, i64 0, i32 0
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %59, %class.SkString* dereferenceable(8) %60) #14
  %61 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %56, i64 -1, i32 1
  %62 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %57, i64 -1, i32 1
  %63 = bitcast i32* %62 to i64*
  %64 = bitcast i32* %61 to i64*
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %56, i64 -1
  %67 = icmp eq %"struct.SkRuntimeEffect::Child"* %58, %50
  br i1 %67, label %68, label %55

68:                                               ; preds = %55
  %69 = load i64, i64* %6, align 8
  %70 = load %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"** %3, align 8
  br label %71

71:                                               ; preds = %53, %68
  %72 = phi %"struct.SkRuntimeEffect::Child"* [ %50, %53 ], [ %70, %68 ]
  %73 = phi %"struct.SkRuntimeEffect::Child"* [ %37, %53 ], [ %66, %68 ]
  %74 = phi i64 [ %54, %53 ], [ %69, %68 ]
  %75 = ptrtoint %"struct.SkRuntimeEffect::Child"* %73 to i64
  store i64 %75, i64* %6, align 8
  store i64 %48, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %76 = inttoptr i64 %74 to %"struct.SkRuntimeEffect::Child"*
  %77 = icmp eq %"struct.SkRuntimeEffect::Child"* %72, %76
  br i1 %77, label %83, label %78

78:                                               ; preds = %71, %78
  %79 = phi %"struct.SkRuntimeEffect::Child"* [ %80, %78 ], [ %72, %71 ]
  %80 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %79, i64 -1
  %81 = getelementptr inbounds %"struct.SkRuntimeEffect::Child", %"struct.SkRuntimeEffect::Child"* %80, i64 0, i32 0
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %81) #14
  %82 = icmp eq %"struct.SkRuntimeEffect::Child"* %80, %76
  br i1 %82, label %83, label %78

83:                                               ; preds = %78, %71
  %84 = icmp eq i64 %74, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = inttoptr i64 %74 to i8*
  tail call void @_ZdlPv(i8* %86) #15
  br label %87

87:                                               ; preds = %83, %85
  ret void
}

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN15SkRuntimeEffect7UniformENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.212"*, %"struct.SkRuntimeEffect::Uniform"* dereferenceable(32)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.SkRuntimeEffect::Uniform"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.212"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.212"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.SkRuntimeEffect::Uniform"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"struct.SkRuntimeEffect::Uniform"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.SkRuntimeEffect::Uniform"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %36, i64 %35
  %39 = ptrtoint %"struct.SkRuntimeEffect::Uniform"* %38 to i64
  %40 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %1, i64 0, i32 0
  tail call void @_ZN8SkStringC1ERKS_(%class.SkString* %40, %class.SkString* dereferenceable(8) %41) #14
  %42 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %1, i64 0, i32 1
  %44 = bitcast i64* %42 to i8*
  %45 = bitcast i64* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 20, i1 false) #14
  %46 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %37, i64 1
  %47 = ptrtoint %"struct.SkRuntimeEffect::Uniform"* %46 to i64
  %48 = getelementptr inbounds %"class.std::__1::vector.212", %"class.std::__1::vector.212"* %0, i64 0, i32 0, i32 0
  %49 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %48, align 8
  %50 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %3, align 8
  %51 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %50, %49
  br i1 %51, label %52, label %54

52:                                               ; preds = %34
  %53 = ptrtoint %"struct.SkRuntimeEffect::Uniform"* %49 to i64
  br label %69

54:                                               ; preds = %34, %54
  %55 = phi %"struct.SkRuntimeEffect::Uniform"* [ %64, %54 ], [ %37, %34 ]
  %56 = phi %"struct.SkRuntimeEffect::Uniform"* [ %57, %54 ], [ %50, %34 ]
  %57 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %55, i64 -1, i32 0
  %59 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %57, i64 0, i32 0
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %58, %class.SkString* dereferenceable(8) %59) #14
  %60 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %55, i64 -1, i32 1
  %61 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %56, i64 -1, i32 1
  %62 = bitcast i64* %60 to i8*
  %63 = bitcast i64* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 20, i1 false) #14
  %64 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %55, i64 -1
  %65 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %57, %49
  br i1 %65, label %66, label %54

66:                                               ; preds = %54
  %67 = load i64, i64* %6, align 8
  %68 = load %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"** %3, align 8
  br label %69

69:                                               ; preds = %52, %66
  %70 = phi %"struct.SkRuntimeEffect::Uniform"* [ %49, %52 ], [ %68, %66 ]
  %71 = phi %"struct.SkRuntimeEffect::Uniform"* [ %37, %52 ], [ %64, %66 ]
  %72 = phi i64 [ %53, %52 ], [ %67, %66 ]
  %73 = ptrtoint %"struct.SkRuntimeEffect::Uniform"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %47, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"struct.SkRuntimeEffect::Uniform"*
  %75 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %70, %74
  br i1 %75, label %81, label %76

76:                                               ; preds = %69, %76
  %77 = phi %"struct.SkRuntimeEffect::Uniform"* [ %78, %76 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %77, i64 -1
  %79 = getelementptr inbounds %"struct.SkRuntimeEffect::Uniform", %"struct.SkRuntimeEffect::Uniform"* %78, i64 0, i32 0
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %79) #14
  %80 = icmp eq %"struct.SkRuntimeEffect::Uniform"* %78, %74
  br i1 %80, label %81, label %76

81:                                               ; preds = %76, %69
  %82 = icmp eq i64 %72, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %84) #15
  br label %85

85:                                               ; preds = %81, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12SkTHashTableIPN10SkLRUCacheIZ25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES3_E3Key5sk_spIS1_E10SkGoodHashE5EntryES6_NSA_6TraitsEE6resizeEi(%class.SkTHashTable.260*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.260, %class.SkTHashTable.260* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.260, %class.SkTHashTable.260* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.260, %class.SkTHashTable.260* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.261, %class.SkAutoTArray.261* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.261* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %64

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 16) #14
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #15
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %19, i64 %13
  %21 = shl nsw i64 %13, 4
  %22 = add nsw i64 %21, -16
  %23 = lshr exact i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %12, %27
  %28 = phi %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* [ %32, %27 ], [ %19, %12 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %12 ]
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %28, i64 0, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %30, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %28, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %28, i64 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !103

35:                                               ; preds = %27, %12
  %36 = phi %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* [ %19, %12 ], [ %32, %27 ]
  %37 = icmp ult i64 %22, 112
  br i1 %37, label %58, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* [ %56, %38 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 0, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %40, align 8
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 1, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %42, align 8
  %43 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 1, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 2, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %44, align 8
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 2, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 3, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 3, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 4, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 4, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 5, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 5, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 6, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 6, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 7, i32 0
  store %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* null, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %39, i64 8
  %57 = icmp eq %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %56, %20
  br i1 %57, label %58, label %38

58:                                               ; preds = %38, %35
  %59 = ptrtoint i8* %18 to i64
  %60 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %7, align 8
  %61 = icmp eq %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %60, null
  store i64 %59, i64* %8, align 8
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %60 to i8*
  tail call void @_ZdaPv(i8* %63) #15
  br label %64

64:                                               ; preds = %62, %58, %11
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = inttoptr i64 %9 to %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*
  %68 = getelementptr inbounds %class.SkTHashTable.260, %class.SkTHashTable.260* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = zext i32 %4 to i64
  br label %75

70:                                               ; preds = %135, %64
  %71 = icmp eq i64 %9, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %73) #15
  br label %74

74:                                               ; preds = %70, %72
  ret void

75:                                               ; preds = %135, %66
  %76 = phi i64 [ 0, %66 ], [ %136, %135 ]
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %67, i64 %76, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %135, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %67, i64 %76, i32 0
  %82 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %81, align 8
  %83 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %84 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %82 to i8*
  %85 = tail call i32 %83(i8* %84, i64 8, i32 0) #14
  %86 = icmp eq i32 %85, 0
  %87 = select i1 %86, i32 1, i32 %85
  %88 = load i32, i32* %3, align 4
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %135

90:                                               ; preds = %80
  %91 = add nsw i32 %88, -1
  %92 = and i32 %87, %91
  %93 = load %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"** %68, align 8
  %94 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %82, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %82, i64 0, i32 0, i32 1
  br label %96

96:                                               ; preds = %128, %90
  %97 = phi i32 [ 0, %90 ], [ %133, %128 ]
  %98 = phi i32 [ %92, %90 ], [ %132, %128 ]
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %93, i64 %99
  %101 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %93, i64 %99, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %96
  %105 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %81 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %100 to i64*
  store i64 %106, i64* %107, align 8
  store i32 %87, i32* %101, align 8
  %108 = load i32, i32* %5, align 8
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %5, align 8
  br label %135

110:                                              ; preds = %96
  %111 = icmp eq i32 %87, %102
  br i1 %111, label %112, label %128

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %100, i64 0, i32 0
  %114 = load %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"*, %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %113, align 8
  %115 = load i32, i32* %94, align 4
  %116 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %114, i64 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %115, %117
  br i1 %118, label %119, label %128

119:                                              ; preds = %112
  %120 = load i32, i32* %95, align 4
  %121 = getelementptr inbounds %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry", %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"* %114, i64 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %120, %122
  br i1 %123, label %124, label %128

124:                                              ; preds = %119
  %125 = bitcast %"struct.SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry"** %81 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"struct.SkTHashTable<SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Entry *, Key, SkLRUCache<Key, sk_sp<SkRuntimeEffect>, SkGoodHash>::Traits>::Slot"* %100 to i64*
  store i64 %126, i64* %127, align 8
  br label %135

128:                                              ; preds = %119, %112, %110
  %129 = add nsw i32 %98, -1
  %130 = icmp slt i32 %98, 1
  %131 = select i1 %130, i32 %88, i32 0
  %132 = add nsw i32 %129, %131
  %133 = add nuw nsw i32 %97, 1
  %134 = icmp eq i32 %133, %88
  br i1 %134, label %135, label %96

135:                                              ; preds = %128, %124, %104, %80, %75
  %136 = add nuw nsw i64 %76, 1
  %137 = icmp eq i64 %136, %69
  br i1 %137, label %70, label %75
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFN4skvm5ColorEiNS2_5CoordES3_EE11__call_implINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4S5_EEEES3_PKNS0_16__policy_storageEiOS4_OS3_"(%"struct.skvm::Color"* noalias sret, %"union.std::__1::__function::__policy_storage"* nocapture readonly, i32, %"struct.skvm::Coord"* nocapture readnone dereferenceable(32), %"struct.skvm::Color"* nocapture readonly dereferenceable(64)) #7 align 2 {
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %1 to %"class.std::__1::__function::__default_alloc_func.656"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.656"*, %"class.std::__1::__function::__default_alloc_func.656"** %6, align 8
  %8 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8, !noalias !104
  %10 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 8, !noalias !104
  %12 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 2, i32 1
  %13 = load i32, i32* %12, align 8, !noalias !104
  %14 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %4, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 8, !noalias !104
  %16 = bitcast %"struct.skvm::Color"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -86, i64 64, i1 false) #14, !alias.scope !111
  %17 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 0
  %18 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %17, align 8, !noalias !111
  %19 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 1
  %20 = load %"struct.skvm::Uniforms"*, %"struct.skvm::Uniforms"** %19, align 8, !noalias !111
  tail call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret %0, %"class.skvm::Builder"* %18, <2 x float> <float 1.000000e+00, float 1.000000e+00>, <2 x float> <float 1.000000e+00, float 1.000000e+00>, %"struct.skvm::Uniforms"* %20) #14
  %21 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 3
  %22 = bitcast %"struct.skvm::Color"** %21 to i8**
  %23 = load i8*, i8** %22, align 8, !noalias !111
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 24
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 40
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds i8, i8* %23, i64 56
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %9, %26
  %37 = icmp eq i32 %11, %29
  %38 = and i1 %36, %37
  %39 = icmp eq i32 %13, %32
  %40 = and i1 %38, %39
  %41 = icmp eq i32 %15, %35
  %42 = and i1 %40, %41
  br i1 %42, label %118, label %43

43:                                               ; preds = %5
  %44 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %17, align 8, !noalias !111
  %45 = sext i32 %9 to i64
  %46 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %44, i64 0, i32 1, i32 0, i32 0
  %47 = load %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"** %46, align 8
  %48 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %45, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 16
  br i1 %50, label %51, label %75

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %45, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %11 to i64
  %55 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %54, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 16
  br i1 %57, label %58, label %75

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %54, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %13 to i64
  %62 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %61, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 16
  br i1 %64, label %65, label %75

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %61, i32 5
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %15 to i64
  %69 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 16
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.skvm::Instruction", %"struct.skvm::Instruction"* %47, i64 %68, i32 5
  %74 = load i32, i32* %73, align 4
  br label %118

75:                                               ; preds = %65, %58, %51, %43
  %76 = phi i32 [ -1, %43 ], [ %53, %51 ], [ %53, %58 ], [ %53, %65 ]
  %77 = phi i32 [ -1, %43 ], [ -1, %51 ], [ %60, %58 ], [ %60, %65 ]
  %78 = phi i32 [ -1, %43 ], [ -1, %51 ], [ -1, %58 ], [ %67, %65 ]
  %79 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 4
  %80 = load %"class.std::__1::vector.298"*, %"class.std::__1::vector.298"** %79, align 8, !noalias !111
  %81 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %80, i64 0, i32 0, i32 0
  %82 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %81, align 8
  %83 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %80, i64 0, i32 0, i32 1
  %84 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %83, align 8
  %85 = icmp eq %"struct.skvm::Color"* %82, %84
  br i1 %85, label %106, label %86

86:                                               ; preds = %75, %103
  %87 = phi %"struct.skvm::Color"* [ %104, %103 ], [ %82, %75 ]
  %88 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %87, i64 0, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %87, i64 0, i32 1, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %87, i64 0, i32 2, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %89, %9
  %95 = icmp eq i32 %91, %11
  %96 = and i1 %94, %95
  %97 = icmp eq i32 %93, %13
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %103

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %87, i64 0, i32 3, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, %15
  br i1 %102, label %106, label %103

103:                                              ; preds = %99, %86
  %104 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %87, i64 1
  %105 = icmp eq %"struct.skvm::Color"* %104, %84
  br i1 %105, label %115, label %86

106:                                              ; preds = %99, %75
  %107 = phi %"struct.skvm::Color"* [ %82, %75 ], [ %87, %99 ]
  %108 = icmp eq %"struct.skvm::Color"* %107, %84
  br i1 %108, label %115, label %109

109:                                              ; preds = %106
  %110 = ptrtoint %"struct.skvm::Color"* %107 to i64
  %111 = ptrtoint %"struct.skvm::Color"* %82 to i64
  %112 = sub i64 %110, %111
  %113 = lshr exact i64 %112, 6
  %114 = trunc i64 %113 to i32
  br label %118

115:                                              ; preds = %103, %106
  %116 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 5
  %117 = load i8*, i8** %116, align 8, !noalias !111
  store i8 0, i8* %117, align 1
  br label %118

118:                                              ; preds = %115, %109, %72, %5
  %119 = phi i32 [ 1, %72 ], [ 2, %109 ], [ -1431655766, %115 ], [ 0, %5 ]
  %120 = phi i32 [ %53, %72 ], [ %114, %109 ], [ %76, %115 ], [ -1, %5 ]
  %121 = phi i32 [ %60, %72 ], [ %77, %109 ], [ %77, %115 ], [ -1, %5 ]
  %122 = phi i32 [ %67, %72 ], [ %78, %109 ], [ %78, %115 ], [ -1, %5 ]
  %123 = phi i32 [ %74, %72 ], [ -1, %109 ], [ -1, %115 ], [ -1, %5 ]
  %124 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 6
  %125 = load %"class.std::__1::vector.242"*, %"class.std::__1::vector.242"** %124, align 8, !noalias !111
  %126 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %125, i64 0, i32 0, i32 1
  %127 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %126, align 8
  %128 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %125, i64 0, i32 0, i32 2, i32 0, i32 0
  %129 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %128, align 8
  %130 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %127, %129
  %131 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %129 to i64
  br i1 %130, label %146, label %132

132:                                              ; preds = %118
  %133 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 0, i32 0
  store i32 %2, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 0, i32 1
  store i32 %119, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 0, i32 2
  %136 = bitcast %union.anon.244* %135 to i32*
  store i32 %120, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 0, i32 2, i32 0, i32 1
  %138 = bitcast float* %137 to i32*
  store i32 %121, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 0, i32 2, i32 0, i32 2
  %140 = bitcast float* %139 to i32*
  store i32 %122, i32* %140, align 4
  %141 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 0, i32 2, i32 0, i32 3
  %142 = bitcast float* %141 to i32*
  store i32 %123, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %127, i64 1
  %144 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %143 to i64
  %145 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %126 to i64*
  store i64 %144, i64* %145, align 8
  br label %208

146:                                              ; preds = %118
  %147 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %127 to i64
  %148 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %126 to i64*
  %149 = bitcast %"class.std::__1::vector.242"* %125 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %147, %150
  %152 = sdiv exact i64 %151, 24
  %153 = add nsw i64 %152, 1
  %154 = icmp ugt i64 %153, 768614336404564650
  br i1 %154, label %155, label %157

155:                                              ; preds = %146
  %156 = bitcast %"class.std::__1::vector.242"* %125 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %156) #16
  unreachable

157:                                              ; preds = %146
  %158 = bitcast %"struct.SkFilterColorProgram::SampleCall"** %128 to i64*
  %159 = sub i64 %131, %150
  %160 = sdiv exact i64 %159, 24
  %161 = icmp ult i64 %160, 384307168202282325
  br i1 %161, label %162, label %167

162:                                              ; preds = %157
  %163 = shl nsw i64 %160, 1
  %164 = icmp ult i64 %163, %153
  %165 = select i1 %164, i64 %153, i64 %163
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %172, label %167

167:                                              ; preds = %162, %157
  %168 = phi i64 [ %165, %162 ], [ 768614336404564650, %157 ]
  %169 = mul i64 %168, 24
  %170 = tail call i8* @_Znwm(i64 %169) #15
  %171 = bitcast i8* %170 to %"struct.SkFilterColorProgram::SampleCall"*
  br label %172

172:                                              ; preds = %167, %162
  %173 = phi i64 [ %168, %167 ], [ 0, %162 ]
  %174 = phi %"struct.SkFilterColorProgram::SampleCall"* [ %171, %167 ], [ null, %162 ]
  %175 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %152
  %176 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %173
  %177 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %176 to i64
  %178 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %175, i64 0, i32 0
  store i32 %2, i32* %178, align 4, !noalias !111
  %179 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %152, i32 1
  store i32 %119, i32* %179, align 4, !noalias !111
  %180 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %152, i32 2
  %181 = bitcast %union.anon.244* %180 to i32*
  store i32 %120, i32* %181, align 4, !noalias !111
  %182 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %152, i32 2, i32 0, i32 1
  %183 = bitcast float* %182 to i32*
  store i32 %121, i32* %183, align 4, !noalias !111
  %184 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %152, i32 2, i32 0, i32 2
  %185 = bitcast float* %184 to i32*
  store i32 %122, i32* %185, align 4, !noalias !111
  %186 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %174, i64 %152, i32 2, i32 0, i32 3
  %187 = bitcast float* %186 to i32*
  store i32 %123, i32* %187, align 4, !noalias !111
  %188 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %175, i64 1
  %189 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %188 to i64
  %190 = getelementptr inbounds %"class.std::__1::vector.242", %"class.std::__1::vector.242"* %125, i64 0, i32 0, i32 0
  %191 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %190, align 8
  %192 = load i64, i64* %148, align 8
  %193 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %191 to i64
  %194 = sub i64 %192, %193
  %195 = sdiv exact i64 %194, -24
  %196 = getelementptr inbounds %"struct.SkFilterColorProgram::SampleCall", %"struct.SkFilterColorProgram::SampleCall"* %175, i64 %195
  %197 = ptrtoint %"struct.SkFilterColorProgram::SampleCall"* %196 to i64
  %198 = icmp sgt i64 %194, 0
  br i1 %198, label %199, label %203

199:                                              ; preds = %172
  %200 = bitcast %"struct.SkFilterColorProgram::SampleCall"* %196 to i8*
  %201 = bitcast %"struct.SkFilterColorProgram::SampleCall"* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %201, i64 %194, i1 false) #14
  %202 = load %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"** %190, align 8
  br label %203

203:                                              ; preds = %199, %172
  %204 = phi %"struct.SkFilterColorProgram::SampleCall"* [ %191, %172 ], [ %202, %199 ]
  store i64 %197, i64* %149, align 8
  store i64 %189, i64* %148, align 8
  store i64 %177, i64* %158, align 8
  %205 = icmp eq %"struct.SkFilterColorProgram::SampleCall"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %203
  %207 = bitcast %"struct.SkFilterColorProgram::SampleCall"* %204 to i8*
  tail call void @_ZdlPv(i8* %207) #15
  br label %208

208:                                              ; preds = %206, %203, %132
  %209 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.656", %"class.std::__1::__function::__default_alloc_func.656"* %7, i64 0, i32 0, i32 4
  %210 = load %"class.std::__1::vector.298"*, %"class.std::__1::vector.298"** %209, align 8, !noalias !111
  %211 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %210, i64 0, i32 0, i32 1
  %212 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %211, align 8
  %213 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %210, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %213, align 8
  %215 = icmp eq %"struct.skvm::Color"* %212, %214
  %216 = ptrtoint %"struct.skvm::Color"* %214 to i64
  br i1 %215, label %222, label %217

217:                                              ; preds = %208
  %218 = bitcast %"struct.skvm::Color"* %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %16, i64 64, i1 false) #14
  %219 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %212, i64 1
  %220 = ptrtoint %"struct.skvm::Color"* %219 to i64
  %221 = bitcast %"struct.skvm::Color"** %211 to i64*
  store i64 %220, i64* %221, align 8
  br label %279

222:                                              ; preds = %208
  %223 = ptrtoint %"struct.skvm::Color"* %212 to i64
  %224 = bitcast %"struct.skvm::Color"** %211 to i64*
  %225 = bitcast %"class.std::__1::vector.298"* %210 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %223, %226
  %228 = ashr exact i64 %227, 6
  %229 = add nsw i64 %228, 1
  %230 = icmp ugt i64 %229, 288230376151711743
  br i1 %230, label %231, label %233

231:                                              ; preds = %222
  %232 = bitcast %"class.std::__1::vector.298"* %210 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %232) #16
  unreachable

233:                                              ; preds = %222
  %234 = bitcast %"struct.skvm::Color"** %213 to i64*
  %235 = sub i64 %216, %226
  %236 = ashr exact i64 %235, 6
  %237 = icmp ult i64 %236, 144115188075855871
  br i1 %237, label %238, label %246

238:                                              ; preds = %233
  %239 = ashr exact i64 %235, 5
  %240 = icmp ult i64 %239, %229
  %241 = select i1 %240, i64 %229, i64 %239
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %251, label %243

243:                                              ; preds = %238
  %244 = icmp ugt i64 %241, 288230376151711743
  br i1 %244, label %245, label %246

245:                                              ; preds = %243
  tail call void @abort() #16
  unreachable

246:                                              ; preds = %243, %233
  %247 = phi i64 [ %241, %243 ], [ 288230376151711743, %233 ]
  %248 = shl i64 %247, 6
  %249 = tail call i8* @_Znwm(i64 %248) #15
  %250 = bitcast i8* %249 to %"struct.skvm::Color"*
  br label %251

251:                                              ; preds = %246, %238
  %252 = phi i64 [ %247, %246 ], [ 0, %238 ]
  %253 = phi %"struct.skvm::Color"* [ %250, %246 ], [ null, %238 ]
  %254 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %253, i64 %228
  %255 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %253, i64 %252
  %256 = ptrtoint %"struct.skvm::Color"* %255 to i64
  %257 = bitcast %"struct.skvm::Color"* %254 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %16, i64 64, i1 false) #14
  %258 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %254, i64 1
  %259 = ptrtoint %"struct.skvm::Color"* %258 to i64
  %260 = getelementptr inbounds %"class.std::__1::vector.298", %"class.std::__1::vector.298"* %210, i64 0, i32 0, i32 0
  %261 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %260, align 8
  %262 = load i64, i64* %224, align 8
  %263 = ptrtoint %"struct.skvm::Color"* %261 to i64
  %264 = sub i64 %262, %263
  %265 = ashr exact i64 %264, 6
  %266 = sub nsw i64 0, %265
  %267 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %254, i64 %266
  %268 = ptrtoint %"struct.skvm::Color"* %267 to i64
  %269 = icmp sgt i64 %264, 0
  br i1 %269, label %270, label %274

270:                                              ; preds = %251
  %271 = bitcast %"struct.skvm::Color"* %267 to i8*
  %272 = bitcast %"struct.skvm::Color"* %261 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %272, i64 %264, i1 false) #14
  %273 = load %"struct.skvm::Color"*, %"struct.skvm::Color"** %260, align 8
  br label %274

274:                                              ; preds = %270, %251
  %275 = phi %"struct.skvm::Color"* [ %261, %251 ], [ %273, %270 ]
  store i64 %268, i64* %225, align 8
  store i64 %259, i64* %224, align 8
  store i64 %256, i64* %234, align 8
  %276 = icmp eq %"struct.skvm::Color"* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = bitcast %"struct.skvm::Color"* %275 to i8*
  tail call void @_ZdlPv(i8* %278) #15
  br label %279

279:                                              ; preds = %217, %274, %277
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #15, !noalias !114
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 56, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #15
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkRGBA4fIL11SkAlphaType2EELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #14
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 3
  %47 = and i64 %46, 34359738352
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #14
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #14
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"*, i32, i8**) local_unnamed_addr #2

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.333* sret, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4SkSL4Type11displayNameEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4SkSL4Type11displayNameEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4SkSL7Program11descriptionEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4SkSL7Program11descriptionEv"}
!16 = !{!17, !14}
!17 = distinct !{!17, !18, !"_ZNK4SkSL7Program18ElementsCollection5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4SkSL7Program18ElementsCollection5beginEv"}
!19 = !{!20, !14}
!20 = distinct !{!20, !21, !"_ZNK4SkSL7Program18ElementsCollection3endEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4SkSL7Program18ElementsCollection3endEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!25 = distinct !{!25, !26, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev: argument 0"}
!29 = distinct !{!29, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev"}
!30 = distinct !{!30, !31, !"_ZN12SkReadBuffer15readColorFilterEv: argument 0"}
!31 = distinct !{!31, !"_ZN12SkReadBuffer15readColorFilterEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE: argument 0"}
!34 = distinct !{!34, !"_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_: argument 0"}
!37 = distinct !{!37, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_"}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.unroll.disable"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN12SkReadBuffer15readFlattenableI12SkShaderBaseEE5sk_spIT_Ev: argument 0"}
!42 = distinct !{!42, !"_ZN12SkReadBuffer15readFlattenableI12SkShaderBaseEE5sk_spIT_Ev"}
!43 = distinct !{!43, !44, !"_ZN12SkReadBuffer10readShaderEv: argument 0"}
!44 = distinct !{!44, !"_ZN12SkReadBuffer10readShaderEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE: argument 0"}
!47 = distinct !{!47, !"_ZN15SkRuntimeEffect13MakeForShaderE8SkStringRKNS_7OptionsE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_: argument 0"}
!50 = distinct !{!50, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_"}
!51 = distinct !{!51, !39}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_: argument 0"}
!54 = distinct !{!54, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_: argument 0"}
!57 = distinct !{!57, !"_Z9sk_ref_spI15SkRuntimeEffectE5sk_spIT_EPKS2_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_: argument 0"}
!60 = distinct !{!60, !"_Z9sk_ref_spI18GrRecordingContextE5sk_spIT_EPS2_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN16GrSurfaceContext15readSurfaceViewEv: argument 0"}
!63 = distinct !{!63, !"_ZN16GrSurfaceContext15readSurfaceViewEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE8uniformsEv: argument 0"}
!66 = distinct !{!66, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE8uniformsEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE8uniformsEv: argument 0"}
!69 = distinct !{!69, !"_ZN22SkRuntimeEffectBuilderI5sk_spI8SkShaderEE8uniformsEv"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!73 = distinct !{!73, !74, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!74 = distinct !{!74, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENKUliS3_S4_E_clEiS3_S4_: argument 0"}
!77 = distinct !{!77, !"_ZZNK10SkRTShader9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAllocENKUliS3_S4_E_clEiS3_S4_"}
!78 = !{!79, !81}
!79 = distinct !{!79, !80, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!80 = distinct !{!80, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!81 = distinct !{!81, !82, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK10SkRTShader9onProgramEPN4skvm7BuilderENS5_5CoordES8_NS5_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS5_8UniformsEP12SkArenaAllocEUliS8_S9_E_FS9_iS8_S9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!83 = !{!84, !86}
!84 = distinct !{!84, !85, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!86 = distinct !{!86, !87, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!87 = distinct !{!87, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!88 = !{!89, !91, !93}
!89 = distinct !{!89, !90, !"_ZNSt3__18__invokeIRZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS2_5ColorEP12SkColorSpacePNS2_8UniformsEP12SkArenaAllocEUliNS2_5CoordES5_E_JiSC_S5_EEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSF_DpOSG_: argument 0"}
!90 = distinct !{!90, !"_ZNSt3__18__invokeIRZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS2_5ColorEP12SkColorSpacePNS2_8UniformsEP12SkArenaAllocEUliNS2_5CoordES5_E_JiSC_S5_EEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSF_DpOSG_"}
!91 = distinct !{!91, !92, !"_ZNSt3__128__invoke_void_return_wrapperIN4skvm5ColorELb0EE6__callIJRZNK20SkRuntimeColorFilter9onProgramEPNS1_7BuilderES2_P12SkColorSpacePNS1_8UniformsEP12SkArenaAllocEUliNS1_5CoordES2_E_iSE_S2_EEES2_DpOT_: argument 0"}
!92 = distinct !{!92, !"_ZNSt3__128__invoke_void_return_wrapperIN4skvm5ColorELb0EE6__callIJRZNK20SkRuntimeColorFilter9onProgramEPNS1_7BuilderES2_P12SkColorSpacePNS1_8UniformsEP12SkArenaAllocEUliNS1_5CoordES2_E_iSE_S2_EEES2_DpOT_"}
!93 = distinct !{!93, !94, !"_ZNSt3__110__function20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS3_5ColorEP12SkColorSpacePNS3_8UniformsEP12SkArenaAllocEUliNS3_5CoordES6_E_FS6_iSD_S6_EEclEOiOSD_OS6_: argument 0"}
!94 = distinct !{!94, !"_ZNSt3__110__function20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS3_5ColorEP12SkColorSpacePNS3_8UniformsEP12SkArenaAllocEUliNS3_5CoordES6_E_FS6_iSD_S6_EEclEOiOSD_OS6_"}
!95 = !{!96, !89, !91, !93}
!96 = distinct !{!96, !97, !"_ZZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUliNS0_5CoordES3_E_clEiSA_S3_: argument 0"}
!97 = distinct !{!97, !"_ZZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAllocENKUliNS0_5CoordES3_E_clEiSA_S3_"}
!98 = !{!99, !101}
!99 = distinct !{!99, !100, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!100 = distinct !{!100, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!101 = distinct !{!101, !102, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!102 = distinct !{!102, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK20SkRuntimeColorFilter9onProgramEPN4skvm7BuilderENS5_5ColorEP12SkColorSpacePNS5_8UniformsEP12SkArenaAllocEUliNS5_5CoordES8_E_FS8_iSF_S8_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!103 = distinct !{!103, !39}
!104 = !{!105, !107, !109}
!105 = distinct !{!105, !106, !"_ZNSt3__18__invokeIRZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4JiN4skvm5CoordENS7_5ColorEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSA_DpOSB_: argument 0"}
!106 = distinct !{!106, !"_ZNSt3__18__invokeIRZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4JiN4skvm5CoordENS7_5ColorEEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOSA_DpOSB_"}
!107 = distinct !{!107, !108, !"_ZNSt3__128__invoke_void_return_wrapperIN4skvm5ColorELb0EE6__callIJRZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4iNS1_5CoordES2_EEES2_DpOT_: argument 0"}
!108 = distinct !{!108, !"_ZNSt3__128__invoke_void_return_wrapperIN4skvm5ColorELb0EE6__callIJRZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4iNS1_5CoordES2_EEES2_DpOT_"}
!109 = distinct !{!109, !110, !"_ZNSt3__110__function20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS7_5CoordES8_EEclEOiOS9_OS8_: argument 0"}
!110 = distinct !{!110, !"_ZNSt3__110__function20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS7_5CoordES8_EEclEOiOS9_OS8_"}
!111 = !{!112, !105, !107, !109}
!112 = distinct !{!112, !113, !"_ZZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectENK3$_4clEiN4skvm5CoordENS4_5ColorE: argument 0"}
!113 = distinct !{!113, !"_ZZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectENK3$_4clEiN4skvm5CoordENS4_5ColorE"}
!114 = !{!115, !117}
!115 = distinct !{!115, !116, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!116 = distinct !{!116, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!117 = distinct !{!117, !118, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!118 = distinct !{!118, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN20SkFilterColorProgram4MakeEPK15SkRuntimeEffectE3$_4FN4skvm5ColorEiNS9_5CoordESA_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
