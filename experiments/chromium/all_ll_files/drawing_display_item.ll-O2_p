; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/drawing_display_item.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/drawing_display_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::DrawingDisplayItem" = type { %"class.blink::DisplayItem.base", %class.sk_sp }
%"class.blink::DisplayItem.base" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16 }>
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkBitmap = type { %class.sk_sp.52, %class.SkPixmap, %class.sk_sp.53 }
%class.sk_sp.52 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.5, i32, i32 }
%class.sk_sp.5 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.53 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.56 }
%union.anon.56 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::PaintOpBuffer::Iterator" = type { %"class.cc::PaintOpBuffer"*, i8*, i64 }
%"class.cc::PaintOp" = type { i32 }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.11, i32, %"class.absl::optional.17", %"class.std::__1::vector.22", %"class.std::__1::vector.29", %class.sk_sp.36, %class.sk_sp.4, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.4, %class.sk_sp.11, %"class.gfx::Rect", i32, %class.sk_sp.12, %class.sk_sp.16, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.4, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.12 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.13" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.16 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.11 = type { %"class.cc::PaintOpBuffer"* }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i32*, i32*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i32* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { float*, float*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { float* }
%class.sk_sp.36 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.37", [7 x i8] }>
%"struct.std::__1::atomic.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%class.sk_sp.4 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.45, i32, %"class.absl::optional.46", i8, i32 }
%class.sk_sp.45 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { %struct.SkRect }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.72", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.60, [384 x i64], %class.sk_sp.61, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.62", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.66" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.60 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.61 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2cc13PaintOpBuffer8IteratorppEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [81 x i8] c"../../third_party/blink/renderer/platform/graphics/paint/drawing_display_item.cc\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"x=\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c" y=\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c" vs \00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase45is_paint_under_invalidation_checking_enabled_E = external local_unnamed_addr global i8, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"op_offset_ <= buffer_->used_\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"../../cc/paint/paint_op_buffer.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18DrawingDisplayItem30EqualsForUnderInvalidationImplERKS0_(%"class.blink::DrawingDisplayItem"* nocapture readonly, %"class.blink::DrawingDisplayItem"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.blink::IntRect", align 8
  %9 = alloca %"class.blink::IntRect", align 4
  %10 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %0, i64 0, i32 1, i32 0
  %11 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %10, align 8
  %12 = icmp eq %"class.cc::PaintOpBuffer"* %11, null
  %13 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %1, i64 0, i32 1, i32 0
  %14 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %15 = icmp ne %"class.cc::PaintOpBuffer"* %14, null
  br i1 %12, label %16, label %18

16:                                               ; preds = %2
  %17 = xor i1 %15, true
  ret i1 %17

18:                                               ; preds = %2
  br i1 %15, label %19, label %220

19:                                               ; preds = %18
  %20 = bitcast %"class.blink::IntRect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %8, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %8, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %8, i64 0, i32 1, i32 1
  %24 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"class.blink::IntRect"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 4 %25, i64 16, i1 false)
  %26 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %1, i64 0, i32 0, i32 1
  %27 = bitcast %"class.blink::IntRect"* %8 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i32
  %30 = lshr i64 %28, 32
  %31 = trunc i64 %30 to i32
  %32 = bitcast %"class.blink::IntRect"* %26 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %29, %34
  %38 = icmp eq i32 %31, %36
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %218

40:                                               ; preds = %19
  %41 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %8, i64 0, i32 1
  %42 = bitcast %"class.blink::IntSize"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %1, i64 0, i32 0, i32 1, i32 1
  %46 = bitcast %"class.blink::IntSize"* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %44, %48
  br i1 %49, label %50, label %218

50:                                               ; preds = %40
  %51 = lshr i64 %47, 32
  %52 = trunc i64 %51 to i32
  %53 = lshr i64 %43, 32
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %54, %52
  br i1 %55, label %56, label %218

56:                                               ; preds = %50
  %57 = tail call zeroext i1 @_ZNK2cc13PaintOpBuffereqERKS0_(%"class.cc::PaintOpBuffer"* nonnull %11, %"class.cc::PaintOpBuffer"* nonnull dereferenceable(72) %14) #6
  br i1 %57, label %218, label %58

58:                                               ; preds = %56
  %59 = bitcast %"class.blink::IntRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #6
  %60 = load i32, i32* %21, align 4
  %61 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 0, i32 0
  store i32 %29, i32* %61, align 4
  %62 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 0, i32 1
  store i32 %60, i32* %62, align 4
  %63 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 1, i32 0
  store i32 6000, i32* %63, align 4
  %64 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 1, i32 1
  store i32 6000, i32* %64, align 4
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %8, %"class.blink::IntRect"* nonnull dereferenceable(16) %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #6
  %65 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %10, align 8
  %66 = icmp eq %"class.cc::PaintOpBuffer"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %58, %67
  %71 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %72 = icmp eq %"class.cc::PaintOpBuffer"* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  br label %76

76:                                               ; preds = %70, %73
  %77 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %79) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 56, i1 false) #6
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  br i1 %66, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  br label %84

84:                                               ; preds = %81, %76
  store %"class.cc::PaintOpBuffer"* %65, %"class.cc::PaintOpBuffer"** %80, align 8
  call fastcc void @_ZN5blinkL14RecordToBitmapE5sk_spIKN2cc13PaintOpBufferEERKNS_7IntRectE(%class.SkBitmap* nonnull sret %3, %class.sk_sp* nonnull %4, %"class.blink::IntRect"* nonnull dereferenceable(16) %8) #6
  %85 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %80, align 8
  %86 = icmp eq %"class.cc::PaintOpBuffer"* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %85, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %"class.cc::PaintOpBuffer"* %85 to %class.SkRefCntBase*
  %93 = bitcast %"class.cc::PaintOpBuffer"* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #6
  br label %97

97:                                               ; preds = %91, %87, %84
  %98 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %98) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 56, i1 false) #6
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  br i1 %72, label %103, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 1 monotonic
  br label %103

103:                                              ; preds = %100, %97
  store %"class.cc::PaintOpBuffer"* %71, %"class.cc::PaintOpBuffer"** %99, align 8
  call fastcc void @_ZN5blinkL14RecordToBitmapE5sk_spIKN2cc13PaintOpBufferEERKNS_7IntRectE(%class.SkBitmap* nonnull sret %5, %class.sk_sp* nonnull %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %8) #6
  %104 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %99, align 8
  %105 = icmp eq %"class.cc::PaintOpBuffer"* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %104, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %"class.cc::PaintOpBuffer"* %104 to %class.SkRefCntBase*
  %112 = bitcast %"class.cc::PaintOpBuffer"* %104 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  call void %115(%class.SkRefCntBase* nonnull %111) #6
  br label %116

116:                                              ; preds = %110, %106, %103
  %117 = load i32, i32* %23, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %192

119:                                              ; preds = %116
  %120 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1
  %121 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1
  %122 = bitcast %"class.logging::LogMessage"* %7 to i8*
  %123 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %124 = bitcast %"class.std::__1::basic_ostringstream"* %123 to %"class.std::__1::basic_ostream"*
  %125 = load i32, i32* %22, align 8
  br label %126

126:                                              ; preds = %186, %119
  %127 = phi i32 [ %117, %119 ], [ %187, %186 ]
  %128 = phi i32 [ %125, %119 ], [ %188, %186 ]
  %129 = phi i32 [ 0, %119 ], [ %190, %186 ]
  %130 = phi i32 [ 0, %119 ], [ %189, %186 ]
  %131 = icmp sgt i32 %128, 0
  br i1 %131, label %132, label %186

132:                                              ; preds = %126, %179
  %133 = phi i32 [ %181, %179 ], [ 0, %126 ]
  %134 = phi i32 [ %180, %179 ], [ %130, %126 ]
  %135 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %120, i32 %133, i32 %129) #6
  %136 = call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %121, i32 %133, i32 %129) #6
  %137 = icmp eq i32 %135, %136
  br i1 %137, label %179, label %138

138:                                              ; preds = %132
  %139 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase45is_paint_under_invalidation_checking_enabled_E, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %195, label %141

141:                                              ; preds = %138
  %142 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #6
  br i1 %142, label %143, label %176

143:                                              ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %122) #6
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0), i32 45, i32 2) #6
  %144 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %124, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2) #6
  %145 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %144, i32 %133) #6
  %146 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %145, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #6
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %146, i32 %129) #6
  %148 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #6
  %149 = bitcast %"class.std::__1::basic_ostream"* %148 to i8**
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr i8, i8* %150, i64 -24
  %152 = bitcast i8* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"class.std::__1::basic_ostream", %"class.std::__1::basic_ostream"* %148, i64 0, i32 1
  %155 = bitcast %"class.std::__1::basic_ios.base"* %154 to i8*
  %156 = getelementptr inbounds i8, i8* %155, i64 %153
  %157 = bitcast i8* %156 to i32*
  %158 = load i32, i32* %157, align 8
  %159 = and i32 %158, -75
  %160 = or i32 %159, 8
  store i32 %160, i32* %157, align 8
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %148, i32 %135) #6
  %162 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %161, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #6
  %163 = bitcast %"class.std::__1::basic_ostream"* %162 to i8**
  %164 = load i8*, i8** %163, align 8
  %165 = getelementptr i8, i8* %164, i64 -24
  %166 = bitcast i8* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::basic_ostream", %"class.std::__1::basic_ostream"* %162, i64 0, i32 1
  %169 = bitcast %"class.std::__1::basic_ios.base"* %168 to i8*
  %170 = getelementptr inbounds i8, i8* %169, i64 %167
  %171 = bitcast i8* %170 to i32*
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, -75
  %174 = or i32 %173, 8
  store i32 %174, i32* %171, align 8
  %175 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %162, i32 %136) #6
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %122) #6
  br label %176

176:                                              ; preds = %143, %141
  %177 = add nsw i32 %134, 1
  %178 = icmp sgt i32 %134, 8
  br i1 %178, label %195, label %179

179:                                              ; preds = %176, %132
  %180 = phi i32 [ %177, %176 ], [ %134, %132 ]
  %181 = add nuw nsw i32 %133, 1
  %182 = load i32, i32* %22, align 8
  %183 = icmp slt i32 %181, %182
  br i1 %183, label %132, label %184

184:                                              ; preds = %179
  %185 = load i32, i32* %23, align 4
  br label %186

186:                                              ; preds = %184, %126
  %187 = phi i32 [ %127, %126 ], [ %185, %184 ]
  %188 = phi i32 [ %128, %126 ], [ %182, %184 ]
  %189 = phi i32 [ %130, %126 ], [ %180, %184 ]
  %190 = add nuw nsw i32 %129, 1
  %191 = icmp slt i32 %190, %187
  br i1 %191, label %126, label %192

192:                                              ; preds = %186, %116
  %193 = phi i32 [ 0, %116 ], [ %189, %186 ]
  %194 = icmp eq i32 %193, 0
  br label %195

195:                                              ; preds = %138, %176, %192
  %196 = phi i1 [ %194, %192 ], [ false, %176 ], [ false, %138 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %98) #6
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %79) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  br i1 %72, label %207, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %71, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 -1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %207

201:                                              ; preds = %197
  %202 = bitcast %"class.cc::PaintOpBuffer"* %71 to %class.SkRefCntBase*
  %203 = bitcast %"class.cc::PaintOpBuffer"* %71 to void (%class.SkRefCntBase*)***
  %204 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %203, align 8
  %205 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, i64 2
  %206 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, align 8
  call void %206(%class.SkRefCntBase* nonnull %202) #6
  br label %207

207:                                              ; preds = %195, %197, %201
  br i1 %66, label %218, label %208

208:                                              ; preds = %207
  %209 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = atomicrmw add i32* %209, i32 -1 acq_rel
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %212, label %218

212:                                              ; preds = %208
  %213 = bitcast %"class.cc::PaintOpBuffer"* %65 to %class.SkRefCntBase*
  %214 = bitcast %"class.cc::PaintOpBuffer"* %65 to void (%class.SkRefCntBase*)***
  %215 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %214, align 8
  %216 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %215, i64 2
  %217 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %216, align 8
  call void %217(%class.SkRefCntBase* nonnull %213) #6
  br label %218

218:                                              ; preds = %50, %19, %40, %212, %208, %207, %56
  %219 = phi i1 [ false, %50 ], [ true, %56 ], [ %196, %207 ], [ %196, %208 ], [ %196, %212 ], [ false, %40 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  br label %220

220:                                              ; preds = %18, %218
  %221 = phi i1 [ %219, %218 ], [ false, %18 ]
  ret i1 %221
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK2cc13PaintOpBuffereqERKS0_(%"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18DrawingDisplayItem15BackgroundColorERf(%"class.blink::DrawingDisplayItem"* nocapture readonly, float* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintOpBuffer::Iterator", align 8
  %4 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %0, i64 0, i32 0, i32 3
  %5 = load i16, i16* %4, align 4
  %6 = trunc i16 %5 to i8
  switch i8 %6, label %103 [
    i8 14, label %7
    i8 21, label %7
    i8 20, label %7
  ]

7:                                                ; preds = %2, %2, %2
  %8 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %8, align 8
  %10 = icmp eq %"class.cc::PaintOpBuffer"* %9, null
  br i1 %10, label %103, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.cc::PaintOpBuffer::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #6
  %13 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %3, i64 0, i32 2
  %16 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = bitcast i8** %16 to i64*
  %18 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %3, i64 0, i32 2
  store i64 -6148914691236517206, i64* %18, align 8
  %19 = load i64, i64* %17, align 8
  store %"class.cc::PaintOpBuffer"* %9, %"class.cc::PaintOpBuffer"** %13, align 8
  %20 = bitcast i8** %14 to i64*
  store i64 %19, i64* %20, align 8
  store i64 0, i64* %15, align 8
  %21 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %9, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %102, label %24

24:                                               ; preds = %11
  %25 = inttoptr i64 %19 to %"class.cc::PaintOp"*
  %26 = bitcast i8** %14 to %"class.cc::PaintOp"**
  br label %27

27:                                               ; preds = %88, %24
  %28 = phi %"class.cc::PaintOp"* [ %89, %88 ], [ %25, %24 ]
  %29 = call zeroext i1 @_ZNK2cc7PaintOp18IsPaintOpWithFlagsEv(%"class.cc::PaintOp"* %28) #6
  br i1 %29, label %30, label %81

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 10
  %32 = bitcast %"class.cc::PaintOp"* %31 to %class.SkDrawLooper**
  %33 = load %class.SkDrawLooper*, %class.SkDrawLooper** %32, align 8
  %34 = icmp eq %class.SkDrawLooper* %33, null
  br i1 %34, label %35, label %81

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 4
  %37 = bitcast %"class.cc::PaintOp"* %36 to %"class.cc::PaintShader"**
  %38 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %37, align 8
  %39 = icmp eq %"class.cc::PaintShader"* %38, null
  br i1 %39, label %40, label %81

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 18
  %42 = bitcast %"class.cc::PaintOp"* %41 to i16*
  %43 = load i16, i16* %42, align 8
  %44 = and i16 %43, 192
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %46, label %81

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = trunc i32 %48 to i8
  switch i8 %49, label %81 [
    i8 15, label %50
    i8 10, label %57
    i8 16, label %74
  ]

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 20
  %52 = bitcast %"class.cc::PaintOp"* %51 to <2 x float>*
  %53 = load <2 x float>, <2 x float>* %52, align 4
  %54 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 22
  %55 = bitcast %"class.cc::PaintOp"* %54 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  br label %90

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 20, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = sitofp i32 %59 to float
  %61 = insertelement <2 x float> undef, float %60, i32 0
  %62 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 21, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sitofp i32 %63 to float
  %65 = insertelement <2 x float> %61, float %64, i32 1
  %66 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 22, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sitofp i32 %67 to float
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 23, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  %73 = insertelement <2 x float> %69, float %72, i32 1
  br label %90

74:                                               ; preds = %46
  %75 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 20
  %76 = bitcast %"class.cc::PaintOp"* %75 to <2 x float>*
  %77 = load <2 x float>, <2 x float>* %76, align 4
  %78 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 22
  %79 = bitcast %"class.cc::PaintOp"* %78 to <2 x float>*
  %80 = load <2 x float>, <2 x float>* %79, align 4
  br label %90

81:                                               ; preds = %30, %27, %40, %35, %46
  %82 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* nonnull %3)
  %83 = load i64, i64* %15, align 8
  %84 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %13, align 8
  %85 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %84, i64 0, i32 3
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %83, %86
  br i1 %87, label %88, label %102

88:                                               ; preds = %81
  %89 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %26, align 8
  br label %27

90:                                               ; preds = %74, %57, %50
  %91 = phi <2 x float> [ %80, %74 ], [ %73, %57 ], [ %56, %50 ]
  %92 = phi <2 x float> [ %77, %74 ], [ %65, %57 ], [ %53, %50 ]
  %93 = extractelement <2 x float> %91, i32 0
  %94 = extractelement <2 x float> %92, i32 0
  %95 = fsub float %93, %94
  %96 = extractelement <2 x float> %91, i32 1
  %97 = extractelement <2 x float> %92, i32 1
  %98 = fsub float %96, %97
  %99 = fmul float %95, %98
  store float %99, float* %1, align 4
  %100 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 14, i32 0
  %101 = load i32, i32* %100, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %103

102:                                              ; preds = %81, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #6
  br label %103

103:                                              ; preds = %7, %2, %90, %102
  %104 = phi i32 [ 0, %102 ], [ %101, %90 ], [ 0, %2 ], [ 0, %7 ]
  ret i32 %104
}

declare zeroext i1 @_ZNK2cc7PaintOp18IsPaintOpWithFlagsEv(%"class.cc::PaintOp"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to %"class.cc::PaintOp"**
  %7 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 8
  %11 = bitcast %"class.cc::PaintOp"* %7 to i8*
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  store i8* %13, i8** %5, align 8
  %14 = load i32, i32* %8, align 4
  %15 = lshr i32 %14, 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  store i64 %19, i64* %17, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 0
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %23, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ugt i64 %19, %25
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %21, align 8
  br label %38

29:                                               ; preds = %1
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #6
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %25) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* %30, i8* %31) #6
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %21, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i32 1194, %"class.logging::CheckOpResult"* nonnull %3) #6
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  ret %"class.cc::PaintOpBuffer::Iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18DrawingDisplayItem24CalculateKnownToBeOpaqueEPKN2cc13PaintOpBufferE(%"class.blink::DrawingDisplayItem"*, %"class.cc::PaintOpBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkImageInfo, align 8
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = alloca %"class.cc::PaintOpBuffer::Iterator", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::IntRect"*
  %8 = alloca %"class.blink::FloatRect", align 4
  %9 = alloca %"class.blink::IntRect", align 8
  %10 = alloca %"class.blink::FloatRect", align 4
  %11 = alloca %"class.blink::FloatRect", align 4
  %12 = icmp eq %"class.cc::PaintOpBuffer"* %1, null
  br i1 %12, label %255, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.cc::PaintOpBuffer::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %5, i64 0, i32 2
  %18 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  store %"class.cc::PaintOpBuffer"* %1, %"class.cc::PaintOpBuffer"** %15, align 8
  %21 = bitcast i8** %16 to i64*
  store i64 %20, i64* %21, align 8
  store i64 0, i64* %17, align 8
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %1, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %253, label %25

25:                                               ; preds = %13
  %26 = bitcast i8** %16 to %"class.cc::PaintOp"**
  %27 = bitcast { i64, i64 }* %6 to i8*
  %28 = bitcast %"class.blink::FloatRect"* %8 to i8*
  %29 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %8, i64 0, i32 1, i32 1
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %35 = getelementptr inbounds %"class.blink::DrawingDisplayItem", %"class.blink::DrawingDisplayItem"* %0, i64 0, i32 0, i32 1
  %36 = bitcast %"class.blink::IntRect"* %9 to i8*
  %37 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 1, i32 1
  %41 = bitcast %struct.SkImageInfo* %4 to i8*
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 2
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.blink::FloatRect"* %11 to i8*
  %46 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %11, i64 0, i32 1, i32 1
  %50 = bitcast %"class.blink::IntRect"* %9 to i64*
  %51 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %9, i64 0, i32 1
  %52 = bitcast %"class.blink::IntSize"* %51 to i64*
  %53 = bitcast %struct.SkImageInfo* %3 to i8*
  %54 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 2
  %55 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.blink::FloatRect"* %10 to i8*
  %58 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %10, i64 0, i32 1, i32 1
  br label %62

62:                                               ; preds = %25, %246
  %63 = phi i32 [ 0, %25 ], [ %64, %246 ]
  %64 = add nuw nsw i32 %63, 1
  %65 = icmp eq i32 %63, 4
  br i1 %65, label %253, label %66

66:                                               ; preds = %62
  %67 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %26, align 8
  %68 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = trunc i32 %69 to i8
  switch i8 %70, label %90 [
    i8 22, label %246
    i8 2, label %71
  ]

71:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #6
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #6
  %72 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 1
  %73 = bitcast %"class.cc::PaintOp"* %72 to float*
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 2
  %76 = bitcast %"class.cc::PaintOp"* %75 to float*
  %77 = load float, float* %76, align 4
  %78 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 3
  %79 = bitcast %"class.cc::PaintOp"* %78 to float*
  %80 = load float, float* %79, align 4
  %81 = fsub float %80, %74
  %82 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 4
  %83 = bitcast %"class.cc::PaintOp"* %82 to float*
  %84 = load float, float* %83, align 4
  %85 = fsub float %84, %77
  store float %74, float* %29, align 4
  store float %77, float* %30, align 4
  store float %81, float* %31, align 4
  store float %85, float* %32, align 4
  %86 = call { i64, i64 } @_ZN5blink15EnclosedIntRectERKNS_9FloatRectE(%"class.blink::FloatRect"* nonnull dereferenceable(16) %8) #6
  %87 = extractvalue { i64, i64 } %86, 0
  store i64 %87, i64* %33, align 8
  %88 = extractvalue { i64, i64 } %86, 1
  store i64 %88, i64* %34, align 8
  %89 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* nonnull %7, %"class.blink::IntRect"* dereferenceable(16) %35) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #6
  br i1 %89, label %246, label %253

90:                                               ; preds = %66
  %91 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %67) #6
  br i1 %91, label %92, label %253

92:                                               ; preds = %90
  %93 = load i32, i32* %68, align 4
  %94 = trunc i32 %93 to i8
  %95 = icmp eq i8 %94, 14
  br i1 %95, label %96, label %101

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 2
  %98 = bitcast %"class.cc::PaintOp"* %97 to %"class.cc::PaintOpBuffer"**
  %99 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %98, align 8
  %100 = call zeroext i1 @_ZNK5blink18DrawingDisplayItem24CalculateKnownToBeOpaqueEPKN2cc13PaintOpBufferE(%"class.blink::DrawingDisplayItem"* %0, %"class.cc::PaintOpBuffer"* %99)
  br label %253

101:                                              ; preds = %92
  %102 = call zeroext i1 @_ZNK2cc7PaintOp18IsPaintOpWithFlagsEv(%"class.cc::PaintOp"* %67) #6
  br i1 %102, label %103, label %246

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 18
  %105 = bitcast %"class.cc::PaintOp"* %104 to i16*
  %106 = load i16, i16* %105, align 8
  %107 = and i16 %106, 192
  %108 = icmp eq i16 %107, 0
  br i1 %108, label %109, label %246

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 10
  %111 = bitcast %"class.cc::PaintOp"* %110 to %class.SkDrawLooper**
  %112 = load %class.SkDrawLooper*, %class.SkDrawLooper** %111, align 8
  %113 = icmp eq %class.SkDrawLooper* %112, null
  br i1 %113, label %114, label %246

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 17, i32 0
  %116 = load i32, i32* %115, align 4
  switch i32 %116, label %246 [
    i32 1, label %117
    i32 3, label %117
  ]

117:                                              ; preds = %114, %114
  %118 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 6
  %119 = bitcast %"class.cc::PaintOp"* %118 to %class.SkMaskFilter**
  %120 = load %class.SkMaskFilter*, %class.SkMaskFilter** %119, align 8
  %121 = icmp eq %class.SkMaskFilter* %120, null
  br i1 %121, label %122, label %246

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 8
  %124 = bitcast %"class.cc::PaintOp"* %123 to %class.SkColorFilter**
  %125 = load %class.SkColorFilter*, %class.SkColorFilter** %124, align 8
  %126 = icmp eq %class.SkColorFilter* %125, null
  br i1 %126, label %127, label %246

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 12
  %129 = bitcast %"class.cc::PaintOp"* %128 to %"class.cc::PaintFilter"**
  %130 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %129, align 8
  %131 = icmp eq %"class.cc::PaintFilter"* %130, null
  br i1 %131, label %132, label %246

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 14, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = icmp ugt i32 %134, -16777217
  br i1 %135, label %136, label %246

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 4
  %138 = bitcast %"class.cc::PaintOp"* %137 to %"class.cc::PaintShader"**
  %139 = load %"class.cc::PaintShader"*, %"class.cc::PaintShader"** %138, align 8
  %140 = icmp eq %"class.cc::PaintShader"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %136
  %142 = call zeroext i1 @_ZNK2cc11PaintShader8IsOpaqueEv(%"class.cc::PaintShader"* nonnull %139) #6
  br i1 %142, label %143, label %246

143:                                              ; preds = %136, %141
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #6
  %144 = load i32, i32* %68, align 4
  %145 = trunc i32 %144 to i8
  switch i8 %145, label %244 [
    i8 15, label %146
    i8 10, label %164
    i8 8, label %175
    i8 9, label %205
  ]

146:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #6
  %147 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 20
  %148 = bitcast %"class.cc::PaintOp"* %147 to float*
  %149 = load float, float* %148, align 4
  %150 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 21
  %151 = bitcast %"class.cc::PaintOp"* %150 to float*
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 22
  %154 = bitcast %"class.cc::PaintOp"* %153 to float*
  %155 = load float, float* %154, align 4
  %156 = fsub float %155, %149
  %157 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 23
  %158 = bitcast %"class.cc::PaintOp"* %157 to float*
  %159 = load float, float* %158, align 4
  %160 = fsub float %159, %152
  store float %149, float* %58, align 4
  store float %152, float* %59, align 4
  store float %156, float* %60, align 4
  store float %160, float* %61, align 4
  %161 = call { i64, i64 } @_ZN5blink15EnclosedIntRectERKNS_9FloatRectE(%"class.blink::FloatRect"* nonnull dereferenceable(16) %10) #6
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  store i64 %162, i64* %50, align 8
  store i64 %163, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #6
  br label %242

164:                                              ; preds = %143
  %165 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 20, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 21, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 22, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = sub i32 %170, %166
  %172 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 23, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = sub i32 %173, %168
  store i32 %166, i32* %37, align 8
  store i32 %168, i32* %38, align 4
  store i32 %171, i32* %39, align 8
  store i32 %174, i32* %40, align 4
  br label %242

175:                                              ; preds = %143
  %176 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 20
  %177 = bitcast %"class.cc::PaintOp"* %176 to %"class.cc::PaintImage"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #6
  call void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* nonnull sret %3, %"class.cc::PaintImage"* %177) #6
  %178 = load i32, i32* %54, align 4
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %183, label %180

180:                                              ; preds = %175
  %181 = load i32, i32* %55, align 8
  %182 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %181) #6
  br label %183

183:                                              ; preds = %180, %175
  %184 = phi i1 [ true, %175 ], [ %182, %180 ]
  %185 = load %class.SkColorSpace*, %class.SkColorSpace** %56, align 8
  %186 = icmp eq %class.SkColorSpace* %185, null
  br i1 %186, label %193, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %185, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 -1 acq_rel
  %190 = icmp eq i32 %189, 1
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = bitcast %class.SkColorSpace* %185 to i8*
  call void @_ZdlPv(i8* %192) #7
  br label %193

193:                                              ; preds = %183, %187, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #6
  br i1 %184, label %194, label %244

194:                                              ; preds = %193
  %195 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 46
  %196 = bitcast %"class.cc::PaintOp"* %195 to float*
  %197 = load float, float* %196, align 8
  %198 = fptosi float %197 to i32
  %199 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 47
  %200 = bitcast %"class.cc::PaintOp"* %199 to float*
  %201 = load float, float* %200, align 4
  %202 = fptosi float %201 to i32
  %203 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %177) #6
  %204 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %177) #6
  store i32 %198, i32* %37, align 8
  store i32 %202, i32* %38, align 4
  store i32 %203, i32* %39, align 8
  store i32 %204, i32* %40, align 4
  br label %242

205:                                              ; preds = %143
  %206 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 20
  %207 = bitcast %"class.cc::PaintOp"* %206 to %"class.cc::PaintImage"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #6
  call void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* nonnull sret %4, %"class.cc::PaintImage"* %207) #6
  %208 = load i32, i32* %42, align 4
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = load i32, i32* %43, align 8
  %212 = call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %211) #6
  br label %213

213:                                              ; preds = %210, %205
  %214 = phi i1 [ true, %205 ], [ %212, %210 ]
  %215 = load %class.SkColorSpace*, %class.SkColorSpace** %44, align 8
  %216 = icmp eq %class.SkColorSpace* %215, null
  br i1 %216, label %223, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 -1 acq_rel
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = bitcast %class.SkColorSpace* %215 to i8*
  call void @_ZdlPv(i8* %222) #7
  br label %223

223:                                              ; preds = %213, %217, %221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #6
  br i1 %214, label %224, label %244

224:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #6
  %225 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 50
  %226 = bitcast %"class.cc::PaintOp"* %225 to float*
  %227 = load float, float* %226, align 4
  %228 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 51
  %229 = bitcast %"class.cc::PaintOp"* %228 to float*
  %230 = load float, float* %229, align 4
  %231 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 52
  %232 = bitcast %"class.cc::PaintOp"* %231 to float*
  %233 = load float, float* %232, align 4
  %234 = fsub float %233, %227
  %235 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %67, i64 53
  %236 = bitcast %"class.cc::PaintOp"* %235 to float*
  %237 = load float, float* %236, align 4
  %238 = fsub float %237, %230
  store float %227, float* %46, align 4
  store float %230, float* %47, align 4
  store float %234, float* %48, align 4
  store float %238, float* %49, align 4
  %239 = call { i64, i64 } @_ZN5blink15EnclosedIntRectERKNS_9FloatRectE(%"class.blink::FloatRect"* nonnull dereferenceable(16) %11) #6
  %240 = extractvalue { i64, i64 } %239, 0
  %241 = extractvalue { i64, i64 } %239, 1
  store i64 %240, i64* %50, align 8
  store i64 %241, i64* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #6
  br label %242

242:                                              ; preds = %224, %194, %164, %146
  %243 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* nonnull %9, %"class.blink::IntRect"* dereferenceable(16) %35) #6
  br i1 %243, label %245, label %244

244:                                              ; preds = %143, %242, %193, %223
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  br label %246

245:                                              ; preds = %242
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  br label %253

246:                                              ; preds = %127, %122, %117, %109, %114, %66, %71, %141, %103, %132, %101, %244
  %247 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* nonnull %5)
  %248 = load i64, i64* %17, align 8
  %249 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %15, align 8
  %250 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %249, i64 0, i32 3
  %251 = load i64, i64* %250, align 8
  %252 = icmp ult i64 %248, %251
  br i1 %252, label %62, label %253

253:                                              ; preds = %246, %90, %71, %62, %13, %96, %245
  %254 = phi i1 [ true, %245 ], [ %100, %96 ], [ false, %13 ], [ false, %62 ], [ false, %71 ], [ false, %90 ], [ false, %246 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #6
  br label %255

255:                                              ; preds = %253, %2
  %256 = phi i1 [ false, %2 ], [ %254, %253 ]
  ret i1 %256
}

declare { i64, i64 } @_ZN5blink15EnclosedIntRectERKNS_9FloatRectE(%"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc11PaintShader8IsOpaqueEv(%"class.cc::PaintShader"*) local_unnamed_addr #2

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL14RecordToBitmapE5sk_spIKN2cc13PaintOpBufferEERKNS_7IntRectE(%class.SkBitmap* noalias sret, %class.sk_sp* nocapture, %"class.blink::IntRect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 {
  %4 = alloca %struct.SkImageInfo, align 16
  %5 = alloca %"class.cc::SkiaPaintCanvas", align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = bitcast %class.SkBitmap* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 56, i1 false)
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #6
  %8 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 %13, 32
  %15 = zext i32 %10 to i64
  %16 = or i64 %14, %15
  %17 = bitcast %struct.SkImageInfo* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %17, align 16, !alias.scope !3
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %19 = bitcast %struct.SkISize* %18 to i64*
  store i64 %16, i64* %19, align 16, !alias.scope !3
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* %0, %struct.SkImageInfo* nonnull dereferenceable(24) %4) #6
  %20 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 16
  %22 = icmp eq %class.SkColorSpace* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = bitcast %class.SkColorSpace* %21 to i8*
  call void @_ZdlPv(i8* %28) #7
  br label %29

29:                                               ; preds = %27, %23, %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #6
  %30 = bitcast %"class.cc::SkiaPaintCanvas"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %30) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 120, i1 false)
  call void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"* nonnull %5, %class.SkBitmap* dereferenceable(56) %0, %"class.cc::ImageProvider"* null) #6
  call void @_ZN2cc15SkiaPaintCanvas5clearEj(%"class.cc::SkiaPaintCanvas"* nonnull %5, i32 0) #6
  %31 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 0, %32
  %34 = sitofp i32 %33 to float
  %35 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sub nsw i32 0, %36
  %38 = sitofp i32 %37 to float
  call void @_ZN2cc15SkiaPaintCanvas9translateEff(%"class.cc::SkiaPaintCanvas"* nonnull %5, float %34, float %38) #6
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %40 = bitcast %class.sk_sp* %1 to i64*
  %41 = load i64, i64* %40, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %39, align 8
  %42 = bitcast %class.sk_sp* %6 to i64*
  store i64 %41, i64* %42, align 8
  call void @_ZN2cc15SkiaPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::SkiaPaintCanvas"* nonnull %5, %class.sk_sp* nonnull %6) #6
  %43 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %44 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %43, align 8
  %45 = icmp eq %"class.cc::PaintOpBuffer"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %29
  %47 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %44, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.cc::PaintOpBuffer"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.cc::PaintOpBuffer"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #6
  br label %56

56:                                               ; preds = %29, %46, %50
  call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %30) #6
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvasC1ERK8SkBitmapPNS_13ImageProviderE(%"class.cc::SkiaPaintCanvas"*, %class.SkBitmap* dereferenceable(56), %"class.cc::ImageProvider"*) unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvas5clearEj(%"class.cc::SkiaPaintCanvas"*, i32) unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvas9translateEff(%"class.cc::SkiaPaintCanvas"*, float, float) unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::SkiaPaintCanvas"*, %class.sk_sp*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #6
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #6
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #6
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #6
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #6
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #6
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #6
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #7
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #6
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #6
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #7
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #6
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #6
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* sret, %"class.cc::PaintImage"*) local_unnamed_addr #2

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!5 = distinct !{!5, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
