; ModuleID = '../../v8/src/libplatform/default-worker-threads-task-runner.cc'
source_filename = "../../v8/src/libplatform/default-worker-threads-task-runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.v8::platform::DefaultWorkerThreadsTaskRunner" = type { %"class.v8::TaskRunner", i8, %"class.v8::base::Mutex", %"class.v8::platform::DelayedTaskQueue", %"class.std::__1::vector", double ()* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::platform::DelayedTaskQueue" = type { %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", %"class.std::__1::queue", %"class.std::__1::multimap", i8, double ()* }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr"**, %"class.std::__1::unique_ptr"**, %"class.std::__1::unique_ptr"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::Task"* }
%"class.v8::Task" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::unique_ptr"** }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* }
%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread" = type { %"class.v8::base::Thread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* }
%"class.v8::base::Thread" = type { i32 (...)**, %"class.v8::base::Thread::PlatformData"*, [16 x i8], i32, %"class.v8::base::Semaphore"* }
%"class.v8::base::Thread::PlatformData" = type opaque
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::unique_ptr.18"* }
%"class.v8::base::Thread::Options" = type <{ i8*, i32, [4 x i8] }>
%"class.v8::IdleTask" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2v810TaskRunner19PostNonNestableTaskENSt3__110unique_ptrINS_4TaskENS1_14default_deleteIS3_EEEE = comdat any

$_ZN2v810TaskRunner26PostNonNestableDelayedTaskENSt3__110unique_ptrINS_4TaskENS1_14default_deleteIS3_EEEEd = comdat any

$_ZNK2v810TaskRunner23NonNestableTasksEnabledEv = comdat any

$_ZNK2v810TaskRunner30NonNestableDelayedTasksEnabledEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

@_ZTVN2v88platform30DefaultWorkerThreadsTaskRunnerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::Task"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner8PostTaskENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEE to i8*), i8* bitcast (void (%"class.v8::TaskRunner"*, %"class.v8::Task"*)* @_ZN2v810TaskRunner19PostNonNestableTaskENSt3__110unique_ptrINS_4TaskENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::Task"*, double)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner15PostDelayedTaskENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEEd to i8*), i8* bitcast (void (%"class.v8::TaskRunner"*, %"class.v8::Task"*, double)* @_ZN2v810TaskRunner26PostNonNestableDelayedTaskENSt3__110unique_ptrINS_4TaskENS1_14default_deleteIS3_EEEEd to i8*), i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::IdleTask"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12PostIdleTaskENSt3__110unique_ptrINS_8IdleTaskENS2_14default_deleteIS4_EEEE to i8*), i8* bitcast (i1 (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner16IdleTasksEnabledEv to i8*), i8* bitcast (i1 (%"class.v8::TaskRunner"*)* @_ZNK2v810TaskRunner23NonNestableTasksEnabledEv to i8*), i8* bitcast (i1 (%"class.v8::TaskRunner"*)* @_ZNK2v810TaskRunner30NonNestableDelayedTasksEnabledEv to i8*), i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerD2Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"V8 DefaultWorkerThreadsTaskRunner WorkerThread\00", align 1
@_ZTVN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadD2Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadD0Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThread3RunEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Start()\00", align 1

@_ZN2v88platform30DefaultWorkerThreadsTaskRunnerC1EjPFdvE = hidden unnamed_addr alias void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, i32, double ()*), void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, i32, double ()*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerC2EjPFdvE
@_ZN2v88platform30DefaultWorkerThreadsTaskRunnerD1Ev = hidden unnamed_addr alias void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*), void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerD2Ev
@_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadC1EPS1_ = hidden unnamed_addr alias void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner"*), void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadC2EPS1_
@_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadD1Ev = hidden unnamed_addr alias void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*), void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerC2EjPFdvE(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, i32, double ()*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::Thread::Options", align 8
  %5 = alloca %"class.std::__1::unique_ptr.18", align 8
  %6 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %8) #11
  %9 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  tail call void @_ZN2v88platform16DelayedTaskQueueC1EPFdvE(%"class.v8::platform::DelayedTaskQueue"* %9, double ()* %2) #11
  %10 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #11
  %12 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 5
  store double ()* %2, double ()** %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr.18"* %5 to i8*
  %16 = ptrtoint %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0 to i64
  %17 = bitcast %"class.v8::base::Thread::Options"* %4 to i8*
  %18 = getelementptr inbounds %"class.v8::base::Thread::Options", %"class.v8::base::Thread::Options"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"class.v8::base::Thread::Options", %"class.v8::base::Thread::Options"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.18"* %5 to i8**
  %22 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %23 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.18"** %22 to i64*
  br label %26

25:                                               ; preds = %53, %3
  ret void

26:                                               ; preds = %53, %14
  %27 = phi i32 [ 0, %14 ], [ %54, %53 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %28 = call i8* @_Znwm(i64 56) #12
  %29 = bitcast i8* %28 to %"class.v8::base::Thread"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i8** %18, align 8
  store i32 0, i32* %19, align 8
  call void @_ZN2v84base6ThreadC2ERKNS1_7OptionsE(%"class.v8::base::Thread"* nonnull %29, %"class.v8::base::Thread::Options"* nonnull dereferenceable(16) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  %30 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %28, i64 48
  %32 = bitcast i8* %31 to i64*
  store i64 %16, i64* %32, align 8
  %33 = call zeroext i1 @_ZN2v84base6Thread5StartEv(%"class.v8::base::Thread"* nonnull %29) #11
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %26
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

35:                                               ; preds = %26
  store i8* %28, i8** %21, align 8
  %36 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %22, align 8
  %37 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %23, align 8
  %38 = icmp ult %"class.std::__1::unique_ptr.18"* %36, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = ptrtoint i8* %28 to i64
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %20, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.18"* %36 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %36, i64 1
  %43 = ptrtoint %"class.std::__1::unique_ptr.18"* %42 to i64
  store i64 %43, i64* %24, align 8
  br label %45

44:                                               ; preds = %35
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"* %10, %"class.std::__1::unique_ptr.18"* nonnull dereferenceable(8) %5) #11
  br label %45

45:                                               ; preds = %39, %44
  %46 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %20, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %20, align 8
  %47 = icmp eq %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %46 to void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)***
  %50 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)**, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %50, i64 1
  %52 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %51, align 8
  call void %52(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* nonnull %46) #11
  br label %53

53:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %54 = add nuw i32 %27, 1
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %25, label %26
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #1

declare void @_ZN2v88platform16DelayedTaskQueueC1EPFdvE(%"class.v8::platform::DelayedTaskQueue"*, double ()*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerD2Ev(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.18"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.18"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.18"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.18"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %15, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %15, align 8
  %17 = icmp eq %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %16 to void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)***
  %20 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)**, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %20, i64 1
  %22 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %21, align 8
  tail call void %22(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.18"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.18"* %5, %"class.std::__1::unique_ptr.18"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  tail call void @_ZN2v88platform16DelayedTaskQueueD1Ev(%"class.v8::platform::DelayedTaskQueue"* %31) #11
  %32 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %32) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88platform16DelayedTaskQueueD1Ev(%"class.v8::platform::DelayedTaskQueue"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunnerD0Ev(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunnerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.18"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::unique_ptr.18"* %5 to i8*
  %9 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.18"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::unique_ptr.18"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %15, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %15, align 8
  %17 = icmp eq %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %16 to void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)***
  %20 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)**, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %20, i64 1
  %22 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %21, align 8
  tail call void %22(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* nonnull %16) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::unique_ptr.18"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::unique_ptr.18"* %5, %"class.std::__1::unique_ptr.18"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  tail call void @_ZN2v88platform16DelayedTaskQueueD1Ev(%"class.v8::platform::DelayedTaskQueue"* %31) #11
  %32 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %32) #11
  %33 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN2v88platform30DefaultWorkerThreadsTaskRunner27MonotonicallyIncreasingTimeEv(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 5
  %3 = load double ()*, double ()** %2, align 8
  %4 = tail call double %3() #11
  ret double %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner9TerminateEv(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  tail call void @_ZN2v88platform16DelayedTaskQueue9TerminateEv(%"class.v8::platform::DelayedTaskQueue"* %4) #11
  %5 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.18"* %8, %6
  br i1 %9, label %23, label %10

10:                                               ; preds = %1, %21
  %11 = phi %"class.std::__1::unique_ptr.18"* [ %12, %21 ], [ %8, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %11, i64 -1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %13, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %13, align 8
  %15 = icmp eq %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %14 to void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)***
  %18 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)**, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %18, i64 1
  %20 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %19, align 8
  tail call void %20(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* nonnull %14) #11
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"class.std::__1::unique_ptr.18"* %12, %6
  br i1 %22, label %23, label %10

23:                                               ; preds = %21, %1
  store %"class.std::__1::unique_ptr.18"* %6, %"class.std::__1::unique_ptr.18"** %7, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret void
}

declare void @_ZN2v88platform16DelayedTaskQueue9TerminateEv(%"class.v8::platform::DelayedTaskQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner8PostTaskENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEE(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::Task"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %4 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  tail call void @_ZN2v88platform16DelayedTaskQueue6AppendENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEE(%"class.v8::platform::DelayedTaskQueue"* %8, %"class.v8::Task"* %1) #11
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  br label %16

9:                                                ; preds = %2
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  %10 = icmp eq %"class.v8::Task"* %1, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.v8::Task"* %1 to void (%"class.v8::Task"*)***
  %13 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %13, i64 1
  %15 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %14, align 8
  tail call void %15(%"class.v8::Task"* nonnull %1) #11
  br label %16

16:                                               ; preds = %7, %9, %11
  ret void
}

declare void @_ZN2v88platform16DelayedTaskQueue6AppendENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEE(%"class.v8::platform::DelayedTaskQueue"*, %"class.v8::Task"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner15PostDelayedTaskENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEEd(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::Task"*, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %4) #11
  %5 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  tail call void @_ZN2v88platform16DelayedTaskQueue13AppendDelayedENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEEd(%"class.v8::platform::DelayedTaskQueue"* %9, %"class.v8::Task"* %1, double %2) #11
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %4) #11
  br label %17

10:                                               ; preds = %3
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %4) #11
  %11 = icmp eq %"class.v8::Task"* %1, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.v8::Task"* %1 to void (%"class.v8::Task"*)***
  %14 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %14, i64 1
  %16 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %15, align 8
  tail call void %16(%"class.v8::Task"* nonnull %1) #11
  br label %17

17:                                               ; preds = %8, %10, %12
  ret void
}

declare void @_ZN2v88platform16DelayedTaskQueue13AppendDelayedENSt3__110unique_ptrINS_4TaskENS2_14default_deleteIS4_EEEEd(%"class.v8::platform::DelayedTaskQueue"*, %"class.v8::Task"*, double) local_unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12PostIdleTaskENSt3__110unique_ptrINS_8IdleTaskENS2_14default_deleteIS4_EEEE(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"* nocapture readnone, %"class.v8::IdleTask"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88platform30DefaultWorkerThreadsTaskRunner16IdleTasksEnabledEv(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Task"* @_ZN2v88platform30DefaultWorkerThreadsTaskRunner7GetNextEv(%"class.v8::platform::DefaultWorkerThreadsTaskRunner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %0, i64 0, i32 3
  %3 = tail call %"class.v8::Task"* @_ZN2v88platform16DelayedTaskQueue7GetNextEv(%"class.v8::platform::DelayedTaskQueue"* %2) #11
  ret %"class.v8::Task"* %3
}

declare %"class.v8::Task"* @_ZN2v88platform16DelayedTaskQueue7GetNextEv(%"class.v8::platform::DelayedTaskQueue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadC2EPS1_(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::base::Thread::Options", align 8
  %4 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 0
  %5 = bitcast %"class.v8::base::Thread::Options"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.v8::base::Thread::Options", %"class.v8::base::Thread::Options"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i8** %6, align 8
  %7 = getelementptr inbounds %"class.v8::base::Thread::Options", %"class.v8::base::Thread::Options"* %3, i64 0, i32 1
  store i32 0, i32* %7, align 8
  call void @_ZN2v84base6ThreadC2ERKNS1_7OptionsE(%"class.v8::base::Thread"* %4, %"class.v8::base::Thread::Options"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  %8 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 1
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %1, %"class.v8::platform::DefaultWorkerThreadsTaskRunner"** %9, align 8
  %10 = call zeroext i1 @_ZN2v84base6Thread5StartEv(%"class.v8::base::Thread"* %4) #11
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %2
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #13
  unreachable

12:                                               ; preds = %2
  ret void
}

declare void @_ZN2v84base6ThreadC2ERKNS1_7OptionsE(%"class.v8::base::Thread"*, %"class.v8::base::Thread::Options"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN2v84base6Thread5StartEv(%"class.v8::base::Thread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadD2Ev(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 0
  tail call void @_ZN2v84base6Thread4JoinEv(%"class.v8::base::Thread"* %3) #11
  tail call void @_ZN2v84base6ThreadD2Ev(%"class.v8::base::Thread"* %3) #11
  ret void
}

declare void @_ZN2v84base6Thread4JoinEv(%"class.v8::base::Thread"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v84base6ThreadD2Ev(%"class.v8::base::Thread"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadD0Ev(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 0
  tail call void @_ZN2v84base6Thread4JoinEv(%"class.v8::base::Thread"* %3) #11
  tail call void @_ZN2v84base6ThreadD2Ev(%"class.v8::base::Thread"* %3) #11
  %4 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThread3RunEv(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread", %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %0, i64 0, i32 1
  %3 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %3, i64 0, i32 3
  %5 = tail call %"class.v8::Task"* @_ZN2v88platform16DelayedTaskQueue7GetNextEv(%"class.v8::platform::DelayedTaskQueue"* %4) #11
  %6 = icmp eq %"class.v8::Task"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.v8::Task"* [ %18, %7 ], [ %5, %1 ]
  %9 = bitcast %"class.v8::Task"* %8 to void (%"class.v8::Task"*)***
  %10 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %10, i64 2
  %12 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %11, align 8
  tail call void %12(%"class.v8::Task"* nonnull %8) #11
  %13 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %9, align 8
  %14 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %13, i64 1
  %15 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %14, align 8
  tail call void %15(%"class.v8::Task"* nonnull %8) #11
  %16 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner"** %2, align 8
  %17 = getelementptr inbounds %"class.v8::platform::DefaultWorkerThreadsTaskRunner", %"class.v8::platform::DefaultWorkerThreadsTaskRunner"* %16, i64 0, i32 3
  %18 = tail call %"class.v8::Task"* @_ZN2v88platform16DelayedTaskQueue7GetNextEv(%"class.v8::platform::DelayedTaskQueue"* %17) #11
  %19 = icmp eq %"class.v8::Task"* %18, null
  br i1 %19, label %20, label %7

20:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v810TaskRunner19PostNonNestableTaskENSt3__110unique_ptrINS_4TaskENS1_14default_deleteIS3_EEEE(%"class.v8::TaskRunner"*, %"class.v8::Task"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.v8::Task"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.v8::Task"* %1 to void (%"class.v8::Task"*)***
  %6 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %6, i64 1
  %8 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %7, align 8
  tail call void %8(%"class.v8::Task"* nonnull %1) #11
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v810TaskRunner26PostNonNestableDelayedTaskENSt3__110unique_ptrINS_4TaskENS1_14default_deleteIS3_EEEEd(%"class.v8::TaskRunner"*, %"class.v8::Task"*, double) unnamed_addr #0 comdat align 2 {
  %4 = icmp eq %"class.v8::Task"* %1, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::Task"* %1 to void (%"class.v8::Task"*)***
  %7 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %7, i64 1
  %9 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %8, align 8
  tail call void %9(%"class.v8::Task"* nonnull %1) #11
  br label %10

10:                                               ; preds = %3, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v810TaskRunner23NonNestableTasksEnabledEv(%"class.v8::TaskRunner"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v810TaskRunner30NonNestableDelayedTasksEnabledEv(%"class.v8::TaskRunner"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2v88platform30DefaultWorkerThreadsTaskRunner12WorkerThreadENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.18"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.18"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.18"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.18"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.18"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.18"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.18"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.18"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.18"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.18"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.18"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.18"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.18"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.18"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.18"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !4

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.18"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.18"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.18"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.18"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.18"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.18"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.18"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.18"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.18"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.18"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.18"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.18"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.18"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.18"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.18"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.18"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.18"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.18"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.18"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.18"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.18"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.18"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.18"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.18"*, %"class.std::__1::unique_ptr.18"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.18"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.18"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.18"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.18"*
  %138 = icmp eq %"class.std::__1::unique_ptr.18"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.18"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %142, align 8
  store %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* null, %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"** %142, align 8
  %144 = icmp eq %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* %143 to void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)***
  %147 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)**, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %147, i64 1
  %149 = load void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)*, void (%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"*)** %148, align 8
  tail call void %149(%"class.v8::platform::DefaultWorkerThreadsTaskRunner::WorkerThread"* nonnull %143) #11
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.18"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
