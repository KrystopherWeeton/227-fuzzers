; ModuleID = '../../third_party/skia/src/core/SkPromiseImageTexture.cpp'
source_filename = "../../third_party/skia/src/core/SkPromiseImageTexture.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPromiseImageTexture = type <{ %class.SkNVRefCnt, [4 x i8], %class.SkSTArray, %class.GrBackendTexture, i32, [4 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.6, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.6 = type { %"struct.std::__1::atomic.1" }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.7, %class.sk_sp.9 }
%union.anon.7 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.8, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.8 = type { %"struct.std::__1::atomic.1" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.9 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.SkMessageBus = type { %class.SkTDArray, %class.SkMutex }
%class.SkTDArray = type { %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"**, i32, i32 }
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.1", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque

$_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_ = comdat any

$_ZN11GrUniqueKeyaSERKS_ = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EED2Ev = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv = comdat any

@_ZN21SkPromiseImageTexture9gUniqueIDE = hidden global { { i32 } } { { i32 } { i32 1 } }, align 4

@_ZN21SkPromiseImageTextureC1ERK16GrBackendTexture = hidden unnamed_addr alias void (%class.SkPromiseImageTexture*, %class.GrBackendTexture*), void (%class.SkPromiseImageTexture*, %class.GrBackendTexture*)* @_ZN21SkPromiseImageTextureC2ERK16GrBackendTexture
@_ZN21SkPromiseImageTextureD1Ev = hidden unnamed_addr alias void (%class.SkPromiseImageTexture*), void (%class.SkPromiseImageTexture*)* @_ZN21SkPromiseImageTextureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkPromiseImageTextureC2ERK16GrBackendTexture(%class.SkPromiseImageTexture*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 64
  %5 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %6 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %7 = bitcast i8* %6 to i64*
  %8 = bitcast i8* %4 to i8**
  store i8* %5, i8** %8, align 8
  store i64 8589934592, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 3
  tail call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %9) #5
  %10 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 4
  store i32 0, i32* %10, align 8
  %11 = tail call dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* %9, %class.GrBackendTexture* dereferenceable(176) %1) #5
  %12 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZN21SkPromiseImageTexture9gUniqueIDE, i64 0, i32 0, i32 0), i32 1 monotonic
  store i32 %12, i32* %10, align 8
  ret void
}

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #1

declare dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkPromiseImageTextureD2Ev(%class.SkPromiseImageTexture*) unnamed_addr #0 align 2 {
  %2 = alloca %class.GrUniqueKeyInvalidatedMessage, align 8
  %3 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 64
  %4 = bitcast i8* %3 to %class.GrUniqueKeyInvalidatedMessage**
  %5 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %4, align 8
  %6 = icmp eq %class.GrUniqueKeyInvalidatedMessage* %5, null
  br i1 %6, label %23, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = and i64 %11, 2147483647
  %13 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %5, i64 %12
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0
  %17 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %19 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %20 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 1
  %22 = bitcast i32* %21 to i8*
  br label %26

23:                                               ; preds = %45, %1, %7
  %24 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 3
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %24) #5
  %25 = bitcast i8* %3 to %class.SkTArray*
  call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EED2Ev(%class.SkTArray* %25) #5
  ret void

26:                                               ; preds = %15, %45
  %27 = phi %class.GrUniqueKeyInvalidatedMessage* [ %5, %15 ], [ %46, %45 ]
  %28 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %27, i64 0, i32 0
  store i32* %18, i32** %17, align 8
  store i32 0, i32* %18, align 8
  store i32 0, i32* %19, align 4
  store %class.SkData* null, %class.SkData** %20, align 8
  %29 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* nonnull %16, %class.GrUniqueKey* dereferenceable(56) %28) #5
  %30 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %27, i64 0, i32 1
  %31 = bitcast i32* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %31, i64 5, i1 false) #5
  call void @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_(%class.GrUniqueKeyInvalidatedMessage* nonnull %2)
  %32 = load %class.SkData*, %class.SkData** %20, align 8
  %33 = icmp eq %class.SkData* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.SkData, %class.SkData* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %32) #5
  %39 = bitcast %class.SkData* %32 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %39) #5
  br label %40

40:                                               ; preds = %38, %34, %26
  %41 = load i32*, i32** %17, align 8
  %42 = icmp eq i32* %41, %18
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast i32* %41 to i8*
  call void @_Z7sk_freePv(i8* %44) #5
  br label %45

45:                                               ; preds = %40, %43
  %46 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %27, i64 1
  %47 = icmp eq %class.GrUniqueKeyInvalidatedMessage* %46, %13
  br i1 %47, label %23, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE4PostES0_(%class.GrUniqueKeyInvalidatedMessage*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.GrUniqueKeyInvalidatedMessage, align 8
  %3 = tail call %class.SkMessageBus* @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE3GetEv() #5
  %4 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acquire
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %9) #5
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkMessageBus, %class.SkMessageBus* %3, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %0, i64 0, i32 1
  %17 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0
  %18 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %0, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %21 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %22 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %2, i64 0, i32 1
  %24 = bitcast i32* %23 to i8*
  %25 = bitcast i32* %16 to i8*
  br label %32

26:                                               ; preds = %88, %10
  %27 = atomicrmw add i32* %5, i32 1 release
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %4, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %30, i32 1) #5
  br label %31

31:                                               ; preds = %26, %29
  ret void

32:                                               ; preds = %14, %88
  %33 = phi i64 [ 0, %14 ], [ %89, %88 ]
  %34 = load %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"**, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*** %15, align 8
  %35 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"** %34, i64 %33
  %36 = load %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"*, %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"** %35, align 8
  %37 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %16, align 8
  %40 = icmp eq i32 %39, %38
  br i1 %40, label %41, label %88

41:                                               ; preds = %32
  store i32* %20, i32** %19, align 8
  store i32 0, i32* %20, align 8
  store i32 0, i32* %21, align 4
  store %class.SkData* null, %class.SkData** %22, align 8
  %42 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* nonnull %17, %class.GrUniqueKey* dereferenceable(56) %18) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 5, i1 false) #5
  %43 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acquire
  %46 = icmp slt i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %48) #5
  br label %49

49:                                               ; preds = %47, %41
  %50 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0
  call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %50, i32 1, i32 1) #5
  %51 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0, i32 0
  %52 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %51, align 8
  %53 = getelementptr inbounds %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox"* %36, i64 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56
  %58 = add i64 %54, 2
  %59 = and i64 %58, 4294967294
  %60 = and i64 %54, -4294967295
  %61 = or i64 %59, %60
  store i64 %61, i64* %53, align 8
  %62 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %57, i64 0, i32 0
  %63 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %64, i32** %63, align 8
  store i32 0, i32* %64, align 4
  %65 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 0, i32 1, i32 0
  store %class.SkData* null, %class.SkData** %66, align 8
  %67 = call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %62, %class.GrUniqueKey* nonnull dereferenceable(56) %17) #5
  %68 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %52, i64 %56, i32 1
  %69 = bitcast i32* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %24, i64 5, i1 false) #5
  %70 = atomicrmw add i32* %44, i32 1 release
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %49
  %73 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %43, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %73, i32 1) #5
  br label %74

74:                                               ; preds = %49, %72
  %75 = load %class.SkData*, %class.SkData** %22, align 8
  %76 = icmp eq %class.SkData* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %class.SkData, %class.SkData* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %75) #5
  %82 = bitcast %class.SkData* %75 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %82) #5
  br label %83

83:                                               ; preds = %81, %77, %74
  %84 = load i32*, i32** %19, align 8
  %85 = icmp eq i32* %84, %20
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = bitcast i32* %84 to i8*
  call void @_Z7sk_freePv(i8* %87) #5
  br label %88

88:                                               ; preds = %86, %83, %32
  %89 = add nuw nsw i64 %33, 1
  %90 = load i32, i32* %11, align 4
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %32, label %26
}

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21SkPromiseImageTexture18addKeyToInvalidateEjRK11GrUniqueKey(%class.SkPromiseImageTexture*, i32, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 64
  %5 = bitcast i8* %4 to %class.SkTArray*
  %6 = bitcast i8* %4 to %class.GrUniqueKeyInvalidatedMessage**
  %7 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %6, align 8
  %8 = icmp eq %class.GrUniqueKeyInvalidatedMessage* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 1
  %14 = and i64 %13, 2147483647
  %15 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %7, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %47, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = bitcast i32* %19 to i8*
  %21 = getelementptr inbounds i32, i32* %19, i64 2
  %22 = bitcast i32* %21 to i8*
  br label %23

23:                                               ; preds = %17, %44
  %24 = phi %class.GrUniqueKeyInvalidatedMessage* [ %7, %17 ], [ %45, %44 ]
  %25 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %28, label %44

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = tail call i32 @bcmp(i8* %31, i8* %20, i64 8) #5
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %28
  %35 = getelementptr inbounds i32, i32* %30, i64 2
  %36 = bitcast i32* %35 to i8*
  %37 = getelementptr inbounds i32, i32* %30, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = lshr i32 %38, 16
  %40 = zext i32 %39 to i64
  %41 = add nsw i64 %40, -8
  %42 = tail call i32 @bcmp(i8* %36, i8* %22, i64 %41) #5
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %67, label %44

44:                                               ; preds = %28, %23, %34
  %45 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %24, i64 1
  %46 = icmp eq %class.GrUniqueKeyInvalidatedMessage* %45, %15
  br i1 %46, label %47, label %23

47:                                               ; preds = %44, %3, %9
  tail call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %5, i32 1, i32 1) #5
  %48 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %6, align 8
  %49 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %0, i64 0, i32 2, i32 0, i32 0, i64 72
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %48, i64 %53
  %55 = add i64 %51, 2
  %56 = and i64 %55, 4294967294
  %57 = and i64 %51, -4294967295
  %58 = or i64 %56, %57
  store i64 %58, i64* %50, align 8
  %59 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %54, i64 0, i32 0
  %60 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %48, i64 %53, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32* %61, i32** %60, align 8
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %48, i64 %53, i32 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %48, i64 %53, i32 0, i32 1, i32 0
  store %class.SkData* null, %class.SkData** %63, align 8
  %64 = tail call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %59, %class.GrUniqueKey* dereferenceable(56) %2) #5
  %65 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %48, i64 %53, i32 1
  store i32 %1, i32* %65, align 8
  %66 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %48, i64 %53, i32 2
  store i8 0, i8* %66, align 4
  br label %67

67:                                               ; preds = %34, %47
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.GrUniqueKey* %0, %1
  br i1 %3, label %44, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 65535
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %15 = icmp eq i32* %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = bitcast i32* %13 to i8*
  tail call void @_Z7sk_freePv(i8* %17) #5
  br label %18

18:                                               ; preds = %16, %11
  store i32* %14, i32** %12, align 8
  store i32 0, i32* %14, align 4
  %19 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  store i32 0, i32* %19, align 4
  br label %44

20:                                               ; preds = %4
  %21 = lshr i32 %8, 16
  %22 = zext i32 %21 to i64
  %23 = lshr i64 %22, 2
  %24 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %27 = icmp eq i32* %25, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = bitcast i32* %25 to i8*
  tail call void @_Z7sk_freePv(i8* %29) #5
  br label %30

30:                                               ; preds = %28, %20
  %31 = icmp ugt i32 %8, 2097151
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = tail call i8* @_Z15sk_malloc_throwmm(i64 %23, i64 4) #5
  %34 = bitcast %class.GrUniqueKey* %0 to i8**
  store i8* %33, i8** %34, align 8
  br label %40

35:                                               ; preds = %30
  %36 = icmp eq i64 %23, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  store i32* %26, i32** %24, align 8
  %38 = bitcast i32* %26 to i8*
  br label %40

39:                                               ; preds = %35
  store i32* null, i32** %24, align 8
  br label %40

40:                                               ; preds = %39, %37, %32
  %41 = phi i8* [ %33, %32 ], [ %38, %37 ], [ null, %39 ]
  %42 = bitcast %class.GrUniqueKey* %1 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 %22, i1 false) #5
  br label %44

44:                                               ; preds = %2, %18, %40
  %45 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 1, i32 0
  %46 = load %class.SkData*, %class.SkData** %45, align 8
  %47 = icmp eq %class.SkData* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic, !noalias !2
  br label %51

51:                                               ; preds = %44, %48
  %52 = ptrtoint %class.SkData* %46 to i64
  %53 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 1
  %54 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %53, i64 0, i32 0
  %55 = load %class.SkData*, %class.SkData** %54, align 8
  %56 = bitcast %class.sk_sp* %53 to i64*
  store i64 %52, i64* %56, align 8
  %57 = icmp eq %class.SkData* %55, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %64

62:                                               ; preds = %58
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %55) #5
  %63 = bitcast %class.SkData* %55 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %63) #5
  br label %64

64:                                               ; preds = %62, %58, %51
  %65 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %1, i64 0, i32 2
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %0, i64 0, i32 2
  %69 = bitcast i8** %68 to i64*
  store i64 %67, i64* %69, align 8
  ret %class.GrUniqueKey* %0
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EED2Ev(%class.SkTArray*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 4294967294
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %12

8:                                                ; preds = %31, %1
  %9 = phi i64 [ %3, %1 ], [ %33, %31 ]
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %40, label %37

12:                                               ; preds = %6, %31
  %13 = phi i64 [ 0, %6 ], [ %32, %31 ]
  %14 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %7, align 8
  %15 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %13, i32 0, i32 1, i32 0
  %16 = load %class.SkData*, %class.SkData** %15, align 8
  %17 = icmp eq %class.SkData* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkData, %class.SkData* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %16) #5
  %23 = bitcast %class.SkData* %16 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %23) #5
  br label %24

24:                                               ; preds = %22, %18, %12
  %25 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %13, i32 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %13, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %28 = icmp eq i32* %26, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = bitcast i32* %26 to i8*
  tail call void @_Z7sk_freePv(i8* %30) #5
  br label %31

31:                                               ; preds = %24, %29
  %32 = add nuw nsw i64 %13, 1
  %33 = load i64, i64* %2, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = icmp ult i64 %32, %35
  br i1 %36, label %12, label %8

37:                                               ; preds = %8
  %38 = bitcast %class.SkTArray* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #5
  br label %40

40:                                               ; preds = %8, %37
  ret void
}

declare %class.SkMessageBus* @_ZN12SkMessageBusI29GrUniqueKeyInvalidatedMessagejLb1EE3GetEv() local_unnamed_addr #1

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %56

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %56, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 64) #5
  tail call void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv(%class.SkTArray* %0, i8* %44)
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  %48 = bitcast %class.SkTArray* %0 to i8**
  br i1 %47, label %52, label %49

49:                                               ; preds = %35
  %50 = load i8*, i8** %48, align 8
  tail call void @_Z7sk_freePv(i8* %50) #5
  %51 = load i64, i64* %4, align 8
  br label %52

52:                                               ; preds = %35, %49
  %53 = phi i64 [ %51, %49 ], [ %45, %35 ]
  store i8* %44, i8** %48, align 8
  %54 = and i64 %53, -4294967298
  %55 = or i64 %54, 1
  store i64 %55, i64* %4, align 8
  br label %56

56:                                               ; preds = %52, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI29GrUniqueKeyInvalidatedMessageLb0EE4moveILb0EEENSt3__19enable_ifIXntT_EvE4typeEPv(%class.SkTArray*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %10

9:                                                ; preds = %45, %2
  ret void

10:                                               ; preds = %7, %45
  %11 = phi i64 [ 0, %7 ], [ %46, %45 ]
  %12 = shl nuw nsw i64 %11, 6
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %8, align 8
  %15 = bitcast i8* %13 to %class.GrUniqueKey*
  %16 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %11, i32 0
  %17 = getelementptr inbounds i8, i8* %13, i64 8
  %18 = bitcast i8* %17 to i32*
  %19 = bitcast i8* %13 to i8**
  store i8* %17, i8** %19, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %13, i64 40
  %23 = bitcast i8* %22 to %class.SkData**
  store %class.SkData* null, %class.SkData** %23, align 8
  %24 = tail call dereferenceable(56) %class.GrUniqueKey* @_ZN11GrUniqueKeyaSERKS_(%class.GrUniqueKey* %15, %class.GrUniqueKey* dereferenceable(56) %16) #5
  %25 = getelementptr inbounds i8, i8* %13, i64 56
  %26 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %14, i64 %11, i32 1
  %27 = bitcast i32* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %27, i64 5, i1 false) #5
  %28 = load %class.GrUniqueKeyInvalidatedMessage*, %class.GrUniqueKeyInvalidatedMessage** %8, align 8
  %29 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 1, i32 0
  %30 = load %class.SkData*, %class.SkData** %29, align 8
  %31 = icmp eq %class.SkData* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %10
  %33 = getelementptr inbounds %class.SkData, %class.SkData* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %30) #5
  %37 = bitcast %class.SkData* %30 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %37) #5
  br label %38

38:                                               ; preds = %36, %32, %10
  %39 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 0, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %class.GrUniqueKeyInvalidatedMessage, %class.GrUniqueKeyInvalidatedMessage* %28, i64 %11, i32 0, i32 0, i32 0, i32 1, i32 0, i64 0
  %42 = icmp eq i32* %40, %41
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = bitcast i32* %40 to i8*
  tail call void @_Z7sk_freePv(i8* %44) #5
  br label %45

45:                                               ; preds = %38, %43
  %46 = add nuw nsw i64 %11, 1
  %47 = load i64, i64* %3, align 8
  %48 = lshr i64 %47, 1
  %49 = and i64 %48, 2147483647
  %50 = icmp ult i64 %46, %49
  br i1 %50, label %10, label %9
}

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind readonly }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI6SkDataE5sk_spIT_EPS2_"}
