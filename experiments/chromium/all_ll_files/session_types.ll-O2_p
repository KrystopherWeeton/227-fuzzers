; ModuleID = '../../components/sessions/core/session_types.cc'
source_filename = "../../components/sessions/core/session_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sessions::SessionTab" = type { %class.SessionID, %class.SessionID, i32, i32, %"class.absl::optional", i8, %"class.std::__1::basic_string", %"struct.sessions::SerializedUserAgentOverride", %"class.base::Time", %"class.base::TimeTicks", %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::map" }
%class.SessionID = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.tab_groups::TabGroupId" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.sessions::SerializedUserAgentOverride" = type { %"class.std::__1::basic_string", %"class.absl::optional.2" }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.7" }
%"class.base::time_internal::TimeBase.7" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sessions::SerializedNavigationEntry"*, %"class.sessions::SerializedNavigationEntry"*, %"class.std::__1::__compressed_pair.46" }
%"class.sessions::SerializedNavigationEntry" = type { i32, i32, %class.GURL, i32, %class.GURL, %"class.std::__1::basic_string.11", %"class.std::__1::basic_string", i32, i8, i64, %class.GURL, i8, %"class.base::Time", %class.GURL, i32, i8, %"class.std::__1::vector.20", %"class.absl::optional.26", i32, i32, %"class.std::__1::set", %"class.std::__1::map", i64, i64, i64 }
%"class.std::__1::basic_string.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.GURL* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, [7 x i8], %union.anon.30 }
%union.anon.30 = type { %"struct.sessions::SerializedNavigationEntry::ReplacedNavigationEntryData" }
%"struct.sessions::SerializedNavigationEntry::ReplacedNavigationEntryData" = type <{ %class.GURL, %"class.base::Time", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.sessions::SerializedNavigationEntry"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.39" }
%"class.std::__1::__tree.39" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.sessions::SessionTabGroup" = type { %"class.tab_groups::TabGroupId", %"class.tab_groups::TabGroupVisualData" }
%"class.tab_groups::TabGroupVisualData" = type <{ %"class.std::__1::basic_string.11", i32, i8, [3 x i8] }>
%"struct.sessions::SessionWindow" = type { %class.SessionID, %"class.gfx::Rect", %"class.std::__1::basic_string", i8, i32, i32, i8, %"class.base::Time", %"class.std::__1::vector.51", %"class.std::__1::vector.59", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.sessions::SessionTab"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.53"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sessions::SessionTabGroup"* }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::unique_ptr.61"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.15 }
%struct.anon.15 = type { %"struct.std::__1::__padding.16", i8 }
%"struct.std::__1::__padding.16" = type { [1 x i8] }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

@_ZN8sessions10SessionTabC1Ev = hidden unnamed_addr alias void (%"struct.sessions::SessionTab"*), void (%"struct.sessions::SessionTab"*)* @_ZN8sessions10SessionTabC2Ev
@_ZN8sessions10SessionTabD1Ev = hidden unnamed_addr alias void (%"struct.sessions::SessionTab"*), void (%"struct.sessions::SessionTab"*)* @_ZN8sessions10SessionTabD2Ev
@_ZN8sessions15SessionTabGroupC1ERKN10tab_groups10TabGroupIdE = hidden unnamed_addr alias void (%"struct.sessions::SessionTabGroup"*, %"class.tab_groups::TabGroupId"*), void (%"struct.sessions::SessionTabGroup"*, %"class.tab_groups::TabGroupId"*)* @_ZN8sessions15SessionTabGroupC2ERKN10tab_groups10TabGroupIdE
@_ZN8sessions15SessionTabGroupD1Ev = hidden unnamed_addr alias void (%"struct.sessions::SessionTabGroup"*), void (%"struct.sessions::SessionTabGroup"*)* @_ZN8sessions15SessionTabGroupD2Ev
@_ZN8sessions13SessionWindowC1Ev = hidden unnamed_addr alias void (%"struct.sessions::SessionWindow"*), void (%"struct.sessions::SessionWindow"*)* @_ZN8sessions13SessionWindowC2Ev
@_ZN8sessions13SessionWindowD1Ev = hidden unnamed_addr alias void (%"struct.sessions::SessionWindow"*), void (%"struct.sessions::SessionWindow"*)* @_ZN8sessions13SessionWindowD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions10SessionTabC2Ev(%"struct.sessions::SessionTab"*) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN9SessionID9NewUniqueEv() #5
  %3 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 0, i32 0
  store i32 %2, i32* %3, align 8
  %4 = tail call i32 @_ZN9SessionID9NewUniqueEv() #5
  %5 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 1, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 2
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 3
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 5
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 6
  %11 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #5
  %12 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 7
  tail call void @_ZN8sessions27SerializedUserAgentOverrideC1Ev(%"struct.sessions::SerializedUserAgentOverride"* %12) #5
  %13 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 13, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #5
  %18 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 88, i1 false)
  store %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"** %16, align 8
  ret void
}

declare i32 @_ZN9SessionID9NewUniqueEv() local_unnamed_addr #1

declare void @_ZN8sessions27SerializedUserAgentOverrideC1Ev(%"struct.sessions::SerializedUserAgentOverride"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions10SessionTabD2Ev(%"struct.sessions::SessionTab"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 13, i32 0
  %3 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %2, %"class.std::__1::__tree_node"* %5) #5
  %6 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 12
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %1, %11
  %15 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 11
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #6
  br label %23

23:                                               ; preds = %14, %20
  %24 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 10
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.sessions::SerializedNavigationEntry"*, %"class.sessions::SerializedNavigationEntry"** %25, align 8
  %27 = icmp eq %"class.sessions::SerializedNavigationEntry"* %26, null
  br i1 %27, label %42, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.sessions::SerializedNavigationEntry"* %26 to i8*
  %30 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 10, i32 0, i32 1
  %31 = load %"class.sessions::SerializedNavigationEntry"*, %"class.sessions::SerializedNavigationEntry"** %30, align 8
  %32 = icmp eq %"class.sessions::SerializedNavigationEntry"* %31, %26
  br i1 %32, label %40, label %33

33:                                               ; preds = %28, %33
  %34 = phi %"class.sessions::SerializedNavigationEntry"* [ %35, %33 ], [ %31, %28 ]
  %35 = getelementptr inbounds %"class.sessions::SerializedNavigationEntry", %"class.sessions::SerializedNavigationEntry"* %34, i64 -1
  tail call void @_ZN8sessions25SerializedNavigationEntryD1Ev(%"class.sessions::SerializedNavigationEntry"* %35) #5
  %36 = icmp eq %"class.sessions::SerializedNavigationEntry"* %35, %26
  br i1 %36, label %37, label %33

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::vector"* %24 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi i8* [ %39, %37 ], [ %29, %28 ]
  store %"class.sessions::SerializedNavigationEntry"* %26, %"class.sessions::SerializedNavigationEntry"** %30, align 8
  tail call void @_ZdlPv(i8* %41) #6
  br label %42

42:                                               ; preds = %23, %40
  %43 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 7
  tail call void @_ZN8sessions27SerializedUserAgentOverrideD1Ev(%"struct.sessions::SerializedUserAgentOverride"* %43) #5
  %44 = getelementptr inbounds %"struct.sessions::SessionTab", %"struct.sessions::SessionTab"* %0, i64 0, i32 6
  %45 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZdlPv(i8* %51) #6
  br label %52

52:                                               ; preds = %42, %49
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8sessions27SerializedUserAgentOverrideD1Ev(%"struct.sessions::SerializedUserAgentOverride"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions15SessionTabGroupC2ERKN10tab_groups10TabGroupIdE(%"struct.sessions::SessionTabGroup"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.sessions::SessionTabGroup", %"struct.sessions::SessionTabGroup"* %0, i64 0, i32 0
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %3, %"class.tab_groups::TabGroupId"* dereferenceable(16) %1) #5
  %4 = getelementptr inbounds %"struct.sessions::SessionTabGroup", %"struct.sessions::SessionTabGroup"* %0, i64 0, i32 1
  tail call void @_ZN10tab_groups18TabGroupVisualDataC1Ev(%"class.tab_groups::TabGroupVisualData"* %4) #5
  ret void
}

declare void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN10tab_groups18TabGroupVisualDataC1Ev(%"class.tab_groups::TabGroupVisualData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions15SessionTabGroupD2Ev(%"struct.sessions::SessionTabGroup"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.sessions::SessionTabGroup", %"struct.sessions::SessionTabGroup"* %0, i64 0, i32 1
  %3 = bitcast %"class.tab_groups::TabGroupVisualData"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.tab_groups::TabGroupVisualData"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions13SessionWindowC2Ev(%"struct.sessions::SessionWindow"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN9SessionID9NewUniqueEv() #5
  %3 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 0, i32 0
  store i32 %2, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 1
  %5 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 16, i1 false) #5
  %6 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 4
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false)
  store i32 -1, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 5
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 6
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 11
  %13 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 60, i1 false)
  %14 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions13SessionWindowD2Ev(%"struct.sessions::SessionWindow"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 12
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 11
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr.61"* %22, null
  br i1 %23, label %53, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::unique_ptr.61"* %22 to i8*
  %26 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 9, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.61"*, %"class.std::__1::unique_ptr.61"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr.61"* %27, %22
  br i1 %28, label %51, label %29

29:                                               ; preds = %24, %46
  %30 = phi %"class.std::__1::unique_ptr.61"* [ %31, %46 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.sessions::SessionTabGroup"*, %"struct.sessions::SessionTabGroup"** %32, align 8
  store %"struct.sessions::SessionTabGroup"* null, %"struct.sessions::SessionTabGroup"** %32, align 8
  %34 = icmp eq %"struct.sessions::SessionTabGroup"* %33, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.sessions::SessionTabGroup", %"struct.sessions::SessionTabGroup"* %33, i64 0, i32 1
  %37 = bitcast %"class.tab_groups::TabGroupVisualData"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = bitcast %"class.tab_groups::TabGroupVisualData"* %36 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #6
  br label %44

44:                                               ; preds = %41, %35
  %45 = bitcast %"struct.sessions::SessionTabGroup"* %33 to i8*
  tail call void @_ZdlPv(i8* %45) #6
  br label %46

46:                                               ; preds = %44, %29
  %47 = icmp eq %"class.std::__1::unique_ptr.61"* %31, %22
  br i1 %47, label %48, label %29

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector.59"* %20 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %24
  %52 = phi i8* [ %50, %48 ], [ %25, %24 ]
  store %"class.std::__1::unique_ptr.61"* %22, %"class.std::__1::unique_ptr.61"** %26, align 8
  tail call void @_ZdlPv(i8* %52) #6
  br label %53

53:                                               ; preds = %19, %51
  %54 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 8
  %55 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %54, i64 0, i32 0, i32 0
  %56 = load %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.53"* %56, null
  br i1 %57, label %78, label %58

58:                                               ; preds = %53
  %59 = bitcast %"class.std::__1::unique_ptr.53"* %56 to i8*
  %60 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 8, i32 0, i32 1
  %61 = load %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"** %60, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr.53"* %61, %56
  br i1 %62, label %76, label %63

63:                                               ; preds = %58, %71
  %64 = phi %"class.std::__1::unique_ptr.53"* [ %65, %71 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %64, i64 -1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"struct.sessions::SessionTab"*, %"struct.sessions::SessionTab"** %66, align 8
  store %"struct.sessions::SessionTab"* null, %"struct.sessions::SessionTab"** %66, align 8
  %68 = icmp eq %"struct.sessions::SessionTab"* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %63
  tail call void @_ZN8sessions10SessionTabD2Ev(%"struct.sessions::SessionTab"* nonnull %67) #5
  %70 = bitcast %"struct.sessions::SessionTab"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #6
  br label %71

71:                                               ; preds = %69, %63
  %72 = icmp eq %"class.std::__1::unique_ptr.53"* %65, %56
  br i1 %72, label %73, label %63

73:                                               ; preds = %71
  %74 = bitcast %"class.std::__1::vector.51"* %54 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %58
  %77 = phi i8* [ %75, %73 ], [ %59, %58 ]
  store %"class.std::__1::unique_ptr.53"* %56, %"class.std::__1::unique_ptr.53"** %60, align 8
  tail call void @_ZdlPv(i8* %77) #6
  br label %78

78:                                               ; preds = %53, %76
  %79 = getelementptr inbounds %"struct.sessions::SessionWindow", %"struct.sessions::SessionWindow"* %0, i64 0, i32 2
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #6
  br label %87

87:                                               ; preds = %78, %84
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8sessions25SerializedNavigationEntryD1Ev(%"class.sessions::SerializedNavigationEntry"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %0, %"class.std::__1::__tree_node"* %6) #5
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.39"* %0, %"class.std::__1::__tree_node"* %9) #5
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #6
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #6
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #6
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
