; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_parser_impl.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_parser_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSParserTokenStream" = type <{ %"class.WTF::Vector.908", %"class.blink::CSSTokenizer"*, %"class.blink::CSSParserToken", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.WTF::Vector.908" = type { %"class.WTF::VectorBuffer.909" }
%"class.WTF::VectorBuffer.909" = type { %"class.WTF::VectorBufferBase.910", [768 x i8] }
%"class.WTF::VectorBufferBase.910" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.898", %"class.WTF::Vector.903", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr }
%"class.WTF::Vector.898" = type { %"class.WTF::VectorBuffer.899" }
%"class.WTF::VectorBuffer.899" = type { %"class.WTF::VectorBufferBase.900", [32 x i8] }
%"class.WTF::VectorBufferBase.900" = type { i32*, i32, i32 }
%"class.WTF::Vector.903" = type { %"class.WTF::VectorBuffer.904" }
%"class.WTF::VectorBuffer.904" = type { %"class.WTF::VectorBufferBase.905" }
%"class.WTF::VectorBufferBase.905" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.911 }
%union.anon.911 = type { double }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.528" }
%"struct.std::__1::atomic.528" = type { %"struct.std::__1::__atomic_base.529" }
%"struct.std::__1::__atomic_base.529" = type { %"struct.std::__1::__atomic_base.530" }
%"struct.std::__1::__atomic_base.530" = type { %"struct.std::__1::__cxx_atomic_impl.531" }
%"struct.std::__1::__cxx_atomic_impl.531" = type { %"struct.std::__1::__cxx_atomic_base_impl.532" }
%"struct.std::__1::__cxx_atomic_base_impl.532" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.15", i32, [4 x i8], %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.192", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.131", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.111", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.125", [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { i64 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { float }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.134", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.143" }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.159" }
%"class.WTF::VectorBuffer.159" = type { %"class.WTF::VectorBufferBase.160" }
%"class.WTF::VectorBufferBase.160" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.173" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.881" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::CSSParserImpl" = type { %"class.blink::HeapVector", %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSParserObserver"*, %"class.blink::CSSLazyParsingState"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [6144 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSParserObserver" = type { i32 (...)** }
%"class.blink::CSSLazyParsingState" = type <{ %"class.blink::Member.313", %"class.WTF::String", %"class.blink::WeakMember.790", %"class.blink::WeakMember.572", i8, [7 x i8] }>
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::CSSParserContext"* }
%"class.blink::WeakMember.790" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::WeakMember.572" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.524", %"class.WTF::Vector.524", i8, i32, %"class.blink::Member.535", %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::Member.541", %"class.blink::Member.543", %"class.blink::Member.545", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.547", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.553", %"class.blink::Member.555", %"class.blink::Member.272", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.558", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.248", %"class.blink::Member.225", %"class.blink::Member.573", %"class.blink::Member.225", %"class.blink::Member.225", %"class.blink::Member.225", %"class.blink::UserActionElementSet", %"class.blink::Member.582", double, double, i64, i64, %"class.blink::HeapHashSet.584", %"class.blink::HeapHashSet.591", i16, i8, %"class.blink::Member.598", %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::Member.604", %"class.blink::TextLinkColors", %"class.blink::Member.606", i8, [7 x i8], %"class.blink::HeapHashMap.608", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.225", %"class.WTF::Vector.615", %"class.blink::Member.620", %"class.blink::Member.622", i8, %"class.blink::Member.225", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.624", %"class.blink::HeapVector.626", %"class.std::__1::unique_ptr.634", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.640", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.653", %"class.WTF::Vector.655", i8, i8, %"class.std::__1::unique_ptr.660", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.248", %"class.blink::HeapVector.666", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.674", i8, i32, %"class.blink::Member.676", %"class.blink::Member.678", %"class.blink::Member.680", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.682", %"class.WTF::HashMap.684", %"class.blink::Member.689", %"class.blink::Member.691", %"class.blink::Member.693", %"class.blink::Member.695", %"class.blink::Member.208", %"class.blink::Member.208", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.697", i8, i32, %"class.blink::Member.704", %"class.blink::Member.706", i32, %"class.blink::Member.708", %"class.blink::Member.710", %"class.blink::Member.721", %"class.std::__1::unique_ptr.723", i64, %"class.std::__1::unique_ptr.729", i32, i32, %"class.blink::Member.735", %"class.blink::Member.737", %"class.blink::Member.739", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.741", %"class.WTF::Vector.743", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.748", %"class.blink::Member.755", %"class.std::__1::unique_ptr.757", %"class.blink::Member.763", i8, i8, %"class.WTF::String", %"class.blink::Member.765", i8, [7 x i8], %"class.blink::HeapHashMap.767", %"class.blink::HeapObserverSet", %"class.blink::Member.781", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.783", i32, i8, i8, %"class.blink::WeakMember.785", %"class.blink::Member.786" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.198", %"class.blink::Member.198" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.198", %"class.blink::Member.200", %"class.blink::Member.198", %"class.blink::Member.198", %"class.blink::Member.202" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.206", %"class.blink::Member.208", %"class.blink::Member.200", %"class.blink::Member.210", %"class.blink::Member.210", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::Member.259", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.264", %"class.blink::HeapVector.266" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.214" }
%"class.blink::HeapHashMap.214" = type { %"class.WTF::HashMap.217" }
%"class.WTF::HashMap.217" = type { %"class.WTF::HashTable.218" }
%"class.WTF::HashTable.218" = type <{ %"struct.WTF::KeyValuePair.220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.220" = type { %"class.WTF::AtomicString", %"class.blink::Member.221" }
%"class.blink::Member.221" = type { %"class.blink::MemberBase.222" }
%"class.blink::MemberBase.222" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.225", i32, %"class.blink::HeapVector.248" }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.261" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::HeapHashMap.263"* }
%"class.blink::HeapHashMap.263" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.266" = type { %"class.WTF::Vector.269" }
%"class.WTF::Vector.269" = type { %"class.WTF::VectorBuffer.270" }
%"class.WTF::VectorBuffer.270" = type { %"class.WTF::VectorBufferBase.271" }
%"class.WTF::VectorBufferBase.271" = type { %"class.blink::Member.272"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.517" }
%"class.blink::HeapHashMap.517" = type { %"class.WTF::HashMap.520" }
%"class.WTF::HashMap.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"struct.WTF::KeyValuePair.523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.523" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.524" = type { %"class.WTF::VectorBuffer.525" }
%"class.WTF::VectorBuffer.525" = type { %"class.WTF::VectorBufferBase.526" }
%"class.WTF::VectorBufferBase.526" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.527 }
%class.scoped_refptr.527 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.528" }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.802", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.843", i32, i8, [3 x i8], %"class.blink::HeapVector.845", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.853", %"class.blink::Member.855", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.864", %"class.blink::Member.870", %"class.blink::Member.872", i8, [7 x i8] }>
%"class.blink::Supplementable.802" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.803" }
%"class.blink::HeapHashMap.803" = type { %"class.WTF::HashMap.806" }
%"class.WTF::HashMap.806" = type { %"class.WTF::HashTable.807" }
%"class.WTF::HashTable.807" = type <{ %"struct.WTF::KeyValuePair.809"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.809" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.818" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.810" }
%"class.blink::HeapObserverSet.810" = type { i32, [4 x i8], %"class.blink::HeapHashSet.811" }
%"class.blink::HeapHashSet.811" = type { %"class.WTF::HashSet.814" }
%"class.WTF::HashSet.814" = type { %"class.WTF::HashTable.815" }
%"class.WTF::HashTable.815" = type <{ %"class.blink::WeakMember.817"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.817" = type opaque
%"class.blink::Supplementable.818" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.819" }
%"class.blink::HeapHashMap.819" = type { %"class.WTF::HashMap.822" }
%"class.WTF::HashMap.822" = type { %"class.WTF::HashTable.823" }
%"class.WTF::HashTable.823" = type <{ %"struct.WTF::KeyValuePair.825"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.825" = type { i8*, %"class.blink::Member.968" }
%"class.blink::Member.968" = type { %"class.blink::MemberBase.969" }
%"class.blink::MemberBase.969" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.970" }
%"class.blink::Member.970" = type { %"class.blink::MemberBase.971" }
%"class.blink::MemberBase.971" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.826, %"class.std::__1::unique_ptr.827", %"class.std::__1::unique_ptr.827", %"class.std::__1::unique_ptr.833", %"class.std::__1::unique_ptr.833", %"class.blink::Member.537", i32, [4 x i8], %"class.WTF::HashSet.839", i32, i32 }
%class.scoped_refptr.826 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.839" = type { %"class.WTF::HashTable.840" }
%"class.WTF::HashTable.840" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.845" = type { %"class.WTF::Vector.848" }
%"class.WTF::Vector.848" = type { %"class.WTF::VectorBuffer.849" }
%"class.WTF::VectorBuffer.849" = type { %"class.WTF::VectorBufferBase.850" }
%"class.WTF::VectorBufferBase.850" = type { %"class.blink::Member.851"*, i32, i32 }
%"class.blink::Member.851" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.857", i32, i32 }
%"class.blink::HeapHashMap.857" = type { %"class.WTF::HashMap.860" }
%"class.WTF::HashMap.860" = type { %"class.WTF::HashTable.861" }
%"class.WTF::HashTable.861" = type <{ %"struct.WTF::KeyValuePair.863"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.863" = type opaque
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.274", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.493, %"class.WTF::Vector.389", %"class.WTF::Vector.389", %"class.blink::Member.198", %"class.blink::Member.494", %"class.blink::HeapHashSet.498", %"class.blink::Member.208", %"class.WTF::HashSet.380", %"class.WTF::TextPosition", %"class.blink::Member.505", %"class.blink::HeapVector.507", %"class.blink::Member.514" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%class.scoped_refptr.493 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.462", %"class.WTF::Vector.464" }
%"class.WTF::RefCounted.462" = type { %"class.base::RefCounted.463" }
%"class.base::RefCounted.463" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { %"class.std::__1::unique_ptr.467"*, i32, i32 }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.470", %"class.WTF::String" }
%"class.WTF::Vector.470" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.496" }
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.498" = type { %"class.WTF::HashSet.501" }
%"class.WTF::HashSet.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"class.blink::WeakMember.504"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.504" = type { %"class.blink::MemberBase.201" }
%"class.WTF::HashSet.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.493, %"class.blink::Member.272", %"class.blink::Member.494" }
%"class.blink::HeapVector.507" = type { %"class.WTF::Vector.510" }
%"class.WTF::Vector.510" = type { %"class.WTF::VectorBuffer.511" }
%"class.WTF::VectorBuffer.511" = type { %"class.WTF::VectorBufferBase.512" }
%"class.WTF::VectorBufferBase.512" = type { %"class.blink::Member.494"*, i32, i32 }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.557 }
%class.scoped_refptr.557 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.575" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.584" = type { %"class.WTF::HashSet.587" }
%"class.WTF::HashSet.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"class.blink::WeakMember.590"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.590" = type opaque
%"class.blink::HeapHashSet.591" = type { %"class.WTF::HashSet.594" }
%"class.WTF::HashSet.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"class.blink::WeakMember.597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.597" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.608" = type { %"class.WTF::HashMap.611" }
%"class.WTF::HashMap.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"struct.WTF::KeyValuePair.614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.614" = type opaque
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.620" = type { %"class.blink::MemberBase.621" }
%"class.blink::MemberBase.621" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.225" = type { %"class.blink::MemberBase.226" }
%"class.blink::MemberBase.226" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.230" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.228", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.228" = type { %"class.base::RefCounted.229" }
%"class.base::RefCounted.229" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.234", %"class.blink::Member.236", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.234" = type { %"class.WTF::SingleThreadedBitField.235" }
%"class.WTF::SingleThreadedBitField.235" = type { i32 }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.240 }
%class.scoped_refptr.240 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.241", %"class.WTF::AtomicString", %"class.WTF::Vector.243" }
%"class.WTF::RefCounted.241" = type { %"class.base::RefCounted.242" }
%"class.base::RefCounted.242" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.243" = type { %"class.WTF::VectorBuffer.244" }
%"class.WTF::VectorBuffer.244" = type { %"class.WTF::VectorBufferBase.245", [32 x i8] }
%"class.WTF::VectorBufferBase.245" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.626" = type { %"class.WTF::Vector.629" }
%"class.WTF::Vector.629" = type { %"class.WTF::VectorBuffer.630" }
%"class.WTF::VectorBuffer.630" = type { %"class.WTF::VectorBufferBase.631" }
%"class.WTF::VectorBufferBase.631" = type { %"class.blink::Member.632"*, i32, i32 }
%"class.blink::Member.632" = type opaque
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.640" = type { %"class.WTF::HashSet.643" }
%"class.WTF::HashSet.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ %"class.blink::WeakMember.646"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.646" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.647", i32, [4 x i8] }>
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"struct.std::__1::pair.650"*, i32, i32 }
%"struct.std::__1::pair.650" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.655" = type { %"class.WTF::VectorBuffer.656" }
%"class.WTF::VectorBuffer.656" = type { %"class.WTF::VectorBufferBase.657" }
%"class.WTF::VectorBufferBase.657" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.248" = type { %"class.WTF::Vector.251" }
%"class.WTF::Vector.251" = type { %"class.WTF::VectorBuffer.252" }
%"class.WTF::VectorBuffer.252" = type { %"class.WTF::VectorBufferBase.253" }
%"class.WTF::VectorBufferBase.253" = type { %"class.blink::Member.225"*, i32, i32 }
%"class.blink::HeapVector.666" = type { %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.blink::Member.672"*, i32, i32 }
%"class.blink::Member.672" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.208" }
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.684" = type { %"class.WTF::HashTable.685" }
%"class.WTF::HashTable.685" = type <{ %"struct.WTF::KeyValuePair.688"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.688" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.693" = type { %"class.blink::MemberBase.694" }
%"class.blink::MemberBase.694" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.695" = type { %"class.blink::MemberBase.696" }
%"class.blink::MemberBase.696" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.572", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.563, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.563 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.564" }>
%"class.base::RefCountedThreadSafe.564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.565 }
%class.scoped_refptr.565 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.566", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.566" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.567" }
%"struct.std::__1::atomic.567" = type { %"struct.std::__1::__atomic_base.568" }
%"struct.std::__1::__atomic_base.568" = type { %"struct.std::__1::__atomic_base.569" }
%"struct.std::__1::__atomic_base.569" = type { %"struct.std::__1::__cxx_atomic_impl.570" }
%"struct.std::__1::__cxx_atomic_impl.570" = type { %"struct.std::__1::__cxx_atomic_base_impl.571" }
%"struct.std::__1::__cxx_atomic_base_impl.571" = type { i8 }
%"class.blink::HeapHashSet.697" = type { %"class.WTF::HashSet.700" }
%"class.WTF::HashSet.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"class.blink::Member.703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.703" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type { %"class.blink::HeapHashMap.714", %"class.blink::HeapHashMap.714", i64 }
%"class.blink::HeapHashMap.714" = type { %"class.WTF::HashMap.717" }
%"class.WTF::HashMap.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"struct.WTF::KeyValuePair.720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.720" = type { %"class.WTF::AtomicString", %"class.blink::Member.980" }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member", %class.scoped_refptr.961, %"class.WTF::Vector.989", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.984" }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%class.scoped_refptr.961 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.962", %"class.WTF::Vector.903", %"class.WTF::Vector.964", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.962" = type { %"class.base::RefCounted.963" }
%"class.base::RefCounted.963" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.910" }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"class.std::__1::unique_ptr.992"*, i32, i32 }
%"class.std::__1::unique_ptr.992" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.735" = type { %"class.blink::MemberBase.736" }
%"class.blink::MemberBase.736" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.743" = type { %"class.WTF::VectorBuffer.744" }
%"class.WTF::VectorBuffer.744" = type { %"class.WTF::VectorBufferBase.745" }
%"class.WTF::VectorBufferBase.745" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.748" = type { %"class.WTF::HashMap.751" }
%"class.WTF::HashMap.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"struct.WTF::KeyValuePair.754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.754" = type opaque
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.767" = type { %"class.WTF::HashMap.770" }
%"class.WTF::HashMap.770" = type { %"class.WTF::HashTable.771" }
%"class.WTF::HashTable.771" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.774" }
%"class.blink::HeapHashSet.774" = type { %"class.WTF::HashSet.777" }
%"class.WTF::HashSet.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"class.blink::WeakMember.780"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.780" = type opaque
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.208", %"class.blink::HeapHashSet.793", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.800", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.793" = type { %"class.WTF::HashSet.796" }
%"class.WTF::HashSet.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"class.blink::Member.799"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.799" = type opaque
%"class.blink::HeapTaskRunnerTimer.800" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.801", { i64, i64 } }
%"class.blink::WeakMember.801" = type { %"class.blink::MemberBase.784" }
%"class.blink::WeakMember.785" = type { %"class.blink::MemberBase.199" }
%"class.blink::Member.786" = type { %"class.blink::MemberBase.787" }
%"class.blink::MemberBase.787" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.6, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.196", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::Document"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.278", %"class.WTF::String", %"class.blink::HeapVector.280", %"class.blink::HeapVector.287", %"class.blink::HeapVector.295", %"class.WTF::HashMap.306", %"class.WTF::AtomicString", %"class.blink::WeakMember.311", i8, [7 x i8], %"class.blink::Member.313", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.320", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type { %"class.blink::StyleRuleBase", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.274", %"class.blink::Member.874", %"class.WTF::String", %class.scoped_refptr.493, %"class.blink::Member.274", i8, i32 }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::StyleRuleImport::ImportedStyleSheetClient"* }
%"class.blink::StyleRuleImport::ImportedStyleSheetClient" = type { %"class.blink::ResourceClient.base", %"class.blink::Member.278" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.878", [7 x i8], %"class.blink::Member.879", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.878" = type { i8 }
%"class.blink::Member.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type opaque
%"class.blink::HeapVector.280" = type { %"class.WTF::Vector.283" }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.blink::Member.278"*, i32, i32 }
%"class.blink::HeapVector.287" = type { %"class.WTF::Vector.290" }
%"class.WTF::Vector.290" = type { %"class.WTF::VectorBuffer.291" }
%"class.WTF::VectorBuffer.291" = type { %"class.WTF::VectorBufferBase.292" }
%"class.WTF::VectorBufferBase.292" = type { %"class.blink::Member.293"*, i32, i32 }
%"class.blink::Member.293" = type opaque
%"class.blink::HeapVector.295" = type { %"class.WTF::Vector.298" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"class.blink::Member.301"*, i32, i32 }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::StyleRuleBase"* }
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.310" = type opaque
%"class.blink::WeakMember.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.317" }
%"class.WTF::HashTable.317" = type <{ %"class.blink::WeakMember.319"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.319" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.324", %"class.blink::HeapHashMap.324", %"class.blink::HeapHashMap.324", %"class.blink::HeapHashMap.324", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::HeapVector.331", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.394", %"class.blink::HeapVector.402", %"class.blink::HeapVector.410", %"class.blink::HeapVector.427", %"class.blink::HeapVector.435", %"class.blink::HeapVector.443", %"class.blink::HeapVector.451", %"class.WTF::Vector.458", i32, %"class.blink::Member.482" }
%"class.blink::HeapHashMap.324" = type { %"class.WTF::HashMap.327" }
%"class.WTF::HashMap.327" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"struct.WTF::KeyValuePair.330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.330" = type { %"class.WTF::AtomicString", %"class.blink::Member.978" }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::HeapVector.331"* }
%"class.blink::HeapVector.331" = type { %"class.WTF::Vector.334" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"class.blink::Member.337"*, i32, i32 }
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.341", i64, [4 x i32] }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.236", %"class.blink::Member.362" }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.367", %"class.WTF::HashMap.367", %"class.WTF::HashMap.367", %"class.WTF::HashMap.372", %class.scoped_refptr.377, %class.scoped_refptr.388, %class.scoped_refptr.387, %"class.WTF::Vector.389", %"class.WTF::Vector.389", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.367" = type { %"class.WTF::HashTable.368" }
%"class.WTF::HashTable.368" = type <{ %"struct.WTF::KeyValuePair.371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.371" = type { %"class.WTF::AtomicString", %class.scoped_refptr.972 }
%class.scoped_refptr.972 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.378", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.384", %"union.blink::InvalidationSet::Backing.385", %"union.blink::InvalidationSet::Backing.386", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.378" = type { %"class.base::RefCounted.379" }
%"class.base::RefCounted.379" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.384" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.385" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.386" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.372" = type { %"class.WTF::HashTable.373" }
%"class.WTF::HashTable.373" = type <{ %"struct.WTF::KeyValuePair.376"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.376" = type opaque
%class.scoped_refptr.377 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.387, %class.scoped_refptr.387 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.378", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.384", %"union.blink::InvalidationSet::Backing.385", %"union.blink::InvalidationSet::Backing.386", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.388 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.387 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::HeapVector.394" = type { %"class.WTF::Vector.397" }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::Member.400"*, i32, i32 }
%"class.blink::Member.400" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.236", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.402" = type { %"class.WTF::Vector.405" }
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"class.blink::Member.408"*, i32, i32 }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.236" }
%"class.blink::HeapVector.410" = type { %"class.WTF::Vector.413" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.blink::Member.416"*, i32, i32 }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.418", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.418" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::Member.424"*, i32, i32 }
%"class.blink::Member.424" = type opaque
%"class.blink::HeapVector.427" = type { %"class.WTF::Vector.430" }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"class.blink::Member.433"*, i32, i32 }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.236" }
%"class.blink::HeapVector.435" = type { %"class.WTF::Vector.438" }
%"class.WTF::Vector.438" = type { %"class.WTF::VectorBuffer.439" }
%"class.WTF::VectorBuffer.439" = type { %"class.WTF::VectorBufferBase.440" }
%"class.WTF::VectorBufferBase.440" = type { %"class.blink::Member.441"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::HeapVector.443" = type { %"class.WTF::Vector.446" }
%"class.WTF::Vector.446" = type { %"class.WTF::VectorBuffer.447" }
%"class.WTF::VectorBuffer.447" = type { %"class.WTF::VectorBufferBase.448" }
%"class.WTF::VectorBufferBase.448" = type { %"class.blink::Member.449"*, i32, i32 }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::HeapVector.451" = type { %"class.WTF::Vector.454" }
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.341", i32, i32 }
%"class.WTF::Vector.458" = type { %"class.WTF::VectorBuffer.459" }
%"class.WTF::VectorBuffer.459" = type { %"class.WTF::VectorBufferBase.460" }
%"class.WTF::VectorBufferBase.460" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.461, i8, [7 x i8] }>
%class.scoped_refptr.461 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.486", %"class.blink::HeapHashMap.486", %"class.blink::HeapHashMap.486", %"class.blink::HeapHashMap.486" }
%"class.blink::HeapHashMap.486" = type { %"class.WTF::HashMap.489" }
%"class.WTF::HashMap.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.886", %"class.blink::HeapVector.891", i8, [7 x i8] }>
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.889" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.888" }
%"class.blink::WeakMember.888" = type { %"class.blink::MemberBase.538" }
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.891" = type { %"class.WTF::Vector.894" }
%"class.WTF::Vector.894" = type { %"class.WTF::VectorBuffer.895" }
%"class.WTF::VectorBuffer.895" = type { %"class.WTF::VectorBufferBase", [96 x i8] }
%"struct.blink::CSSTokenizedValue" = type { %"class.blink::CSSParserTokenRange", %"class.WTF::StringView" }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.961, i32, [4 x i8] }>
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [10 x i64] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.917 }
%union.anon.917 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::StyleRuleCharset" = type { %"class.blink::StyleRuleBase" }
%"class.blink::StyleRuleNamespace" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::StyleRuleContainer" = type { %"class.blink::StyleRuleCondition", %"class.blink::Member.951" }
%"class.blink::StyleRuleCondition" = type { %"class.blink::StyleRuleGroup", %"class.WTF::String" }
%"class.blink::StyleRuleGroup" = type { %"class.blink::StyleRuleBase", %"class.blink::HeapVector.295" }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::ContainerQuery"* }
%"class.blink::ContainerQuery" = type <{ %class.scoped_refptr.493, %"class.base::StrongAlias", [7 x i8] }>
%"class.base::StrongAlias" = type { i8 }
%"class.blink::StyleRuleMedia" = type { %"class.blink::StyleRuleCondition", %class.scoped_refptr.493 }
%"class.blink::StyleRuleSupports" = type <{ %"class.blink::StyleRuleCondition", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::StyleRuleViewport" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.236" }
%"struct.blink::CSSParserImpl::RangeOffset" = type { i32, i32 }
%"class.blink::StyleRuleKeyframe" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.236", %"class.WTF::Vector.942" }
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { double*, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.918 }
%struct.anon.918 = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1016", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1016" = type { %"class.std::__1::__vector_base.1017" }
%"class.std::__1::__vector_base.1017" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1018", i64, i64 }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1029" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.blink::CSSParserSelector"* }
%"class.blink::CSSParserSelector" = type { %"class.std::__1::unique_ptr.928", %"class.std::__1::unique_ptr.922" }
%"class.std::__1::unique_ptr.928" = type { %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.blink::CSSSelector"* }
%"class.WTF::Vector.934" = type { %"class.WTF::VectorBuffer.935" }
%"class.WTF::VectorBuffer.935" = type { %"class.WTF::VectorBufferBase.936" }
%"class.WTF::VectorBufferBase.936" = type { %"class.std::__1::unique_ptr.922"*, i32, i32 }
%"class.blink::LocalFrame" = type opaque
%"class.blink::CSSLazyPropertyParserImpl" = type { %"class.blink::CSSLazyPropertyParser", i32, %"class.blink::Member.959" }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::CSSLazyParsingState"* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.1069" = type { i8 }

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE7EraseAtEjj = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN5blink13CSSParserModeEEEN4base11trace_event16TraceEventHandleEcPKhPKcSG_yjySG_OT_SG_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIjjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE5clearEv = comdat any

$_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv = comdat any

$_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27EEEENS_19CSSParserTokenRangeEv = comdat any

$_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev = comdat any

$_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19CSSLazyParsingStateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19CSSLazyParsingStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19CSSLazyParsingStateEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19CSSLazyParsingStateEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv = comdat any

$_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ContainerQueryEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ContainerQueryEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21CSSLazyPropertyParserEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21CSSLazyPropertyParserEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21CSSLazyPropertyParserEE7GetNameEPKv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE13gc_info_index = comdat any

@_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic258 = internal global i64 0, align 8
@.str = private unnamed_addr constant [18 x i8] c"blink,blink_style\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"CSSParserImpl::parseStyleSheet\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"baseUrl\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic261 = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [37 x i8] c"CSSParserImpl::parseStyleSheet.parse\00", align 1
@_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic285 = internal global i64 0, align 8
@_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic289 = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [11 x i8] c"tokenCount\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF11g_star_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream = private unnamed_addr constant %"class.blink::CSSParserTokenStream" <{ %"class.WTF::Vector.908" { %"class.WTF::VectorBuffer.909" { %"class.WTF::VectorBufferBase.910" { %"class.blink::CSSParserToken"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSParserToken"*), i32 -1431655766, i32 -1431655766 }, [768 x i8] c} }, %"class.blink::CSSTokenizer"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSTokenizer"*), %"class.blink::CSSParserToken" { i24 -5592406, i32 -1431655766, i8* inttoptr (i64 -6148914691236517206 to i8*), %union.anon.911 { double 0xFFFFFFFFFFFFFFFF } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"important\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink18g_static_eof_tokenE = external local_unnamed_addr constant %"class.blink::CSSParserToken"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink26RuntimeEnabledFeaturesBase31is_css_scroll_timeline_enabled_E = external local_unnamed_addr global i8, align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.26 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16CSSPropertyValueENS_12VectorTraitsIS3_EEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::CSSPropertyValue, WTF::VectorTraits<blink::CSSPropertyValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.27 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSLazyParsingStateEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSLazyParsingState]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19CSSLazyParsingStateEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19CSSLazyParsingStateEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19CSSLazyParsingStateEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::CSSParserSelector, std::__1::default_delete<blink::CSSParserSelector> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13StyleRuleBaseEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleRuleBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRuleBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StyleRuleBase>, WTF::VectorTraits<blink::Member<blink::StyleRuleBase> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ContainerQueryEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ContainerQuery]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ContainerQueryEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ContainerQueryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSLazyPropertyParserEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSLazyPropertyParser]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21CSSLazyPropertyParserEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21CSSLazyPropertyParserEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIdLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<double, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1

@_ZN5blink13CSSParserImplC1EPKNS_16CSSParserContextEPNS_18StyleSheetContentsE = hidden unnamed_addr alias void (%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*), void (%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*)* @_ZN5blink13CSSParserImplC2EPKNS_16CSSParserContextEPNS_18StyleSheetContentsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImplC2EPKNS_16CSSParserContextEPNS_18StyleSheetContentsE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %5 = bitcast %"class.blink::CSSParserImpl"* %0 to i8**
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %8 = bitcast i32* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 6148, i1 false) #11
  %9 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 2
  store %"class.blink::StyleSheetContents"* %2, %"class.blink::StyleSheetContents"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %12 = bitcast %"class.blink::CSSParserObserver"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink13CSSParserImpl10ParseValueEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKN3WTF6StringEbPKNS_16CSSParserContextE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.blink::CSSParserContext"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserImpl", align 8
  %8 = alloca %"class.blink::CSSTokenizer", align 8
  %9 = alloca %"class.blink::CSSParserTokenStream", align 8
  %10 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %11 = bitcast %"class.blink::CSSParserImpl"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.blink::CSSParserImpl"* %7 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 6148, i1 false) #11
  %17 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %4, %"class.blink::CSSParserContext"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::StyleSheetContents"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  %21 = load i32, i32* %19, align 4
  %22 = lshr i32 %21, 28
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 7
  %25 = icmp eq i8 %24, 3
  %26 = icmp eq i8 %24, 4
  %27 = select i1 %26, i32 4, i32 1
  %28 = select i1 %25, i32 14, i32 %27
  %29 = bitcast %"class.blink::CSSTokenizer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %2, i32 0) #11
  %30 = bitcast %"class.blink::CSSParserTokenStream"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %30) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 0, i32 0, i32 1, i64 0
  %32 = bitcast %"class.blink::CSSParserTokenStream"* %9 to i8**
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %8, %"class.blink::CSSTokenizer"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 2
  %37 = bitcast %"class.blink::CSSParserToken"* %36 to i32*
  store i32 11184671, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 3
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 4
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 6
  store i32 31, i32* %40, align 8
  %41 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %42 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %41, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %43 = ptrtoint i8* %42 to i64
  %44 = bitcast %"class.blink::CSSParserTokenStream"* %9 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = udiv i64 %41, 24
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %33, align 8
  %47 = bitcast %"struct.blink::CSSTokenizedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 40, i1 false)
  %48 = load i8, i8* %39, align 4, !range !2, !noalias !3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %5
  store i8 1, i8* %39, align 4, !noalias !3
  %51 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11, !noalias !3
  %52 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %35, align 8, !noalias !3
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %52) #11
  %53 = bitcast %"class.blink::CSSParserToken"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 24, i1 false) #11, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11, !noalias !3
  br label %54

54:                                               ; preds = %5, %50
  %55 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %35, align 8, !noalias !3
  %56 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 3
  %57 = load i32, i32* %56, align 8, !noalias !3
  %58 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv(%"class.blink::CSSParserTokenStream"* nonnull %9) #11, !noalias !3
  %59 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %58, 0
  %60 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %58, 1
  %61 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %35, align 8, !noalias !3
  %62 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %61, i64 0, i32 3
  %63 = load i32, i32* %62, align 8, !noalias !3
  %64 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %10, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %59, %"class.blink::CSSParserToken"** %64, align 8, !alias.scope !3
  %65 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %10, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %60, %"class.blink::CSSParserToken"** %65, align 8, !alias.scope !3
  %66 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %10, i64 0, i32 1
  %67 = sub i32 %63, %57
  call void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* sret %66, %"class.blink::CSSParserTokenStream"* nonnull %9, i32 %57, i32 %67) #11
  %68 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %10, i64 0, i32 0
  %69 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %17, align 8
  %70 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 0
  %71 = call zeroext i1 @_ZN5blink17CSSPropertyParser10ParseValueENS_13CSSPropertyIDEbRKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13StyleRuleBase8RuleTypeE(i32 %1, i1 zeroext %3, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %68, %"class.blink::CSSParserContext"* %69, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %70, i32 %28) #11
  %72 = load i32, i32* %15, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %54
  %75 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet19AddParsedPropertiesERKNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %70) #11
  %76 = zext i1 %75 to i16
  %77 = shl nuw nsw i16 %76, 8
  br label %78

78:                                               ; preds = %74, %54
  %79 = phi i16 [ 0, %54 ], [ 1, %74 ]
  %80 = phi i16 [ 0, %54 ], [ %77, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #11
  %81 = load i32, i32* %34, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !6

83:                                               ; preds = %78
  store i32 0, i32* %34, align 4
  br label %84

84:                                               ; preds = %83, %78
  %85 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %85, align 8
  %87 = bitcast i8* %31 to %"class.blink::CSSParserToken"*
  %88 = icmp eq %"class.blink::CSSParserToken"* %86, %87
  br i1 %88, label %91, label %89, !prof !7

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %9, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %90, %"class.blink::CSSParserToken"* %86) #11
  br label %91

91:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %30) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %29) #11
  %92 = load i32, i32* %15, align 4
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %93, label %95, label %97, !prof !6

95:                                               ; preds = %91
  %96 = bitcast i8* %12 to %"class.blink::CSSPropertyValue"*
  br label %128

97:                                               ; preds = %91
  %98 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %94, align 8
  %99 = icmp ne %"class.blink::CSSPropertyValue"* %98, null
  %100 = bitcast i8* %12 to %"class.blink::CSSPropertyValue"*
  %101 = icmp ne %"class.blink::CSSPropertyValue"* %98, %100
  %102 = and i1 %99, %101
  br i1 %102, label %128, label %103

103:                                              ; preds = %97
  %104 = zext i32 %92 to i64
  %105 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %98, i64 %104
  br label %106

106:                                              ; preds = %124, %103
  %107 = phi %"class.blink::CSSPropertyValue"* [ %125, %124 ], [ %98, %103 ]
  %108 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #11
  br label %124

124:                                              ; preds = %123, %120, %106
  %125 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %107, i64 1
  %126 = icmp eq %"class.blink::CSSPropertyValue"* %125, %105
  br i1 %126, label %127, label %106

127:                                              ; preds = %124
  store i32 0, i32* %15, align 4
  br label %128

128:                                              ; preds = %95, %127, %97
  %129 = phi %"class.blink::CSSPropertyValue"* [ %96, %95 ], [ %100, %127 ], [ %100, %97 ]
  %130 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %94, align 8
  %131 = icmp eq %"class.blink::CSSPropertyValue"* %130, %129
  br i1 %131, label %134, label %132, !prof !7

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %7, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %133, %"class.blink::CSSPropertyValue"* %130) #11
  br label %134

134:                                              ; preds = %128, %132
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %11) #11
  %135 = or i16 %80, %79
  ret i16 %135
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE(%"struct.blink::CSSTokenizedValue"* noalias sret, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #11
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %15 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv(%"class.blink::CSSParserTokenStream"* %1)
  %19 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %18, 0
  %20 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %18, 1
  %21 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  %22 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %21, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %19, %"class.blink::CSSParserToken"** %24, align 8
  %25 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"** %25, align 8
  %26 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 1
  %27 = sub i32 %23, %17
  call void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* sret %26, %"class.blink::CSSParserTokenStream"* %1, i32 %17, i32 %27) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl23ConsumeDeclarationValueERKNS_17CSSTokenizedValueENS_13CSSPropertyIDEbNS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"*, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i32, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %8 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink17CSSPropertyParser10ParseValueENS_13CSSPropertyIDEbRKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13StyleRuleBase8RuleTypeE(i32 %2, i1 zeroext %3, %"class.blink::CSSParserTokenRange"* dereferenceable(16) %6, %"class.blink::CSSParserContext"* %8, %"class.blink::HeapVector"* dereferenceable(6160) %9, i32 %4) #11
  ret void
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet19AddParsedPropertiesERKNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::HeapVector"* dereferenceable(6160)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.903", %"class.WTF::Vector.903"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !7

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !6

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.903"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !6

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !7

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.898", %"class.WTF::Vector.898"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.899"* %53, i32* %48) #11
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #11
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink13CSSParserImpl18ParseVariableValueEPNS_26MutableCSSPropertyValueSetERKN3WTF12AtomicStringERKNS3_6StringEbPKNS_16CSSParserContextEb(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.blink::CSSParserContext"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.blink::CSSParserImpl", align 8
  %9 = alloca %"class.blink::CSSTokenizer", align 8
  %10 = alloca %"class.blink::CSSParserTokenStream", align 8
  %11 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %12 = bitcast %"class.blink::CSSParserImpl"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %14 = bitcast %"class.blink::CSSParserImpl"* %8 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 6148, i1 false) #11
  %18 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %4, %"class.blink::CSSParserContext"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 2
  %20 = bitcast %"class.blink::CSSTokenizer"* %9 to i8*
  %21 = bitcast %"class.blink::StyleSheetContents"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %2, i32 0) #11
  %22 = bitcast %"class.blink::CSSParserTokenStream"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %22) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 0, i32 0, i32 1, i64 0
  %24 = bitcast %"class.blink::CSSParserTokenStream"* %10 to i8**
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %9, %"class.blink::CSSTokenizer"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  store i32 11184671, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 3
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 4
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 6
  store i32 31, i32* %32, align 8
  %33 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %34 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast %"class.blink::CSSParserTokenStream"* %10 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = udiv i64 %33, 24
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %25, align 8
  %39 = bitcast %"struct.blink::CSSTokenizedValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 40, i1 false)
  %40 = load i8, i8* %31, align 4, !range !2, !noalias !8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %6
  store i8 1, i8* %31, align 4, !noalias !8
  %43 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11, !noalias !8
  %44 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %27, align 8, !noalias !8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %44) #11
  %45 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %43, i64 24, i1 false) #11, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11, !noalias !8
  br label %46

46:                                               ; preds = %6, %42
  %47 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %27, align 8, !noalias !8
  %48 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %47, i64 0, i32 3
  %49 = load i32, i32* %48, align 8, !noalias !8
  %50 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv(%"class.blink::CSSParserTokenStream"* nonnull %10) #11, !noalias !8
  %51 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %50, 0
  %52 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %50, 1
  %53 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %27, align 8, !noalias !8
  %54 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8, !noalias !8
  %56 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %11, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %51, %"class.blink::CSSParserToken"** %56, align 8, !alias.scope !8
  %57 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %11, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %52, %"class.blink::CSSParserToken"** %57, align 8, !alias.scope !8
  %58 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %11, i64 0, i32 1
  %59 = sub i32 %55, %49
  call void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* sret %58, %"class.blink::CSSParserTokenStream"* nonnull %10, i32 %49, i32 %59) #11
  call void @_ZN5blink13CSSParserImpl20ConsumeVariableValueERKNS_17CSSTokenizedValueERKN3WTF12AtomicStringEbb(%"class.blink::CSSParserImpl"* nonnull %8, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %11, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %3, i1 zeroext %5)
  %60 = load i32, i32* %16, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0
  %64 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet19AddParsedPropertiesERKNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %63) #11
  %65 = zext i1 %64 to i16
  %66 = shl nuw nsw i16 %65, 8
  br label %67

67:                                               ; preds = %62, %46
  %68 = phi i16 [ 0, %46 ], [ 1, %62 ]
  %69 = phi i16 [ 0, %46 ], [ %66, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #11
  %70 = load i32, i32* %26, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !6

72:                                               ; preds = %67
  store i32 0, i32* %26, align 4
  br label %73

73:                                               ; preds = %72, %67
  %74 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %74, align 8
  %76 = bitcast i8* %23 to %"class.blink::CSSParserToken"*
  %77 = icmp eq %"class.blink::CSSParserToken"* %75, %76
  br i1 %77, label %80, label %78, !prof !7

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %10, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %79, %"class.blink::CSSParserToken"* %75) #11
  br label %80

80:                                               ; preds = %73, %78
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %22) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #11
  %81 = load i32, i32* %16, align 4
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %82, label %84, label %86, !prof !6

84:                                               ; preds = %80
  %85 = bitcast i8* %13 to %"class.blink::CSSPropertyValue"*
  br label %117

86:                                               ; preds = %80
  %87 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %83, align 8
  %88 = icmp ne %"class.blink::CSSPropertyValue"* %87, null
  %89 = bitcast i8* %13 to %"class.blink::CSSPropertyValue"*
  %90 = icmp ne %"class.blink::CSSPropertyValue"* %87, %89
  %91 = and i1 %88, %90
  br i1 %91, label %117, label %92

92:                                               ; preds = %86
  %93 = zext i32 %81 to i64
  %94 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %87, i64 %93
  br label %95

95:                                               ; preds = %113, %92
  %96 = phi %"class.blink::CSSPropertyValue"* [ %114, %113 ], [ %87, %92 ]
  %97 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %95
  %114 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %96, i64 1
  %115 = icmp eq %"class.blink::CSSPropertyValue"* %114, %94
  br i1 %115, label %116, label %95

116:                                              ; preds = %113
  store i32 0, i32* %16, align 4
  br label %117

117:                                              ; preds = %84, %116, %86
  %118 = phi %"class.blink::CSSPropertyValue"* [ %85, %84 ], [ %89, %116 ], [ %89, %86 ]
  %119 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %83, align 8
  %120 = icmp eq %"class.blink::CSSPropertyValue"* %119, %118
  br i1 %120, label %123, label %121, !prof !7

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %122, %"class.blink::CSSPropertyValue"* %119) #11
  br label %123

123:                                              ; preds = %117, %121
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %12) #11
  %124 = or i16 %69, %68
  ret i16 %124
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl20ConsumeVariableValueERKNS_17CSSTokenizedValueERKN3WTF12AtomicStringEbb(%"class.blink::CSSParserImpl"*, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSPropertyValue", align 8
  %7 = alloca %"class.blink::CSSPropertyName", align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %9 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %8, align 8
  %10 = tail call %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8) %2, %"struct.blink::CSSTokenizedValue"* dereferenceable(40) %1, i1 zeroext %4, %"class.blink::CSSParserContext"* dereferenceable(176) %9) #11
  %11 = icmp eq %"class.blink::CSSCustomPropertyDeclaration"* %10, null
  br i1 %11, label %94, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast %"class.blink::CSSPropertyName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 0
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #11
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !6

35:                                               ; preds = %26
  tail call void @llvm.trap() #11
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %12, %21, %36
  %39 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %10, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0
  call void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"* nonnull %40, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %7, i1 zeroext false, i32 0, i1 zeroext %3, i1 zeroext false) #11
  %41 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::CSSValue"* %39, %"class.blink::CSSValue"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %56, label %47, !prof !6

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %49, i64 %50
  %52 = bitcast %"class.blink::CSSPropertyValue"* %51 to i8*
  %53 = call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %52, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %6) #11
  %54 = load i32, i32* %42, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %42, align 4
  br label %57

56:                                               ; preds = %38
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"* %13, %"class.blink::CSSPropertyValue"* nonnull dereferenceable(24) %6) #11
  br label %57

57:                                               ; preds = %47, %56
  %58 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %57, %70, %73
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %91 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %8, align 8
  %92 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %91, i64 0, i32 3
  %93 = load i8, i8* %92, align 1
  call void @_ZNK5blink16CSSParserContext5CountENS_13CSSParserModeENS_13CSSPropertyIDE(%"class.blink::CSSParserContext"* %91, i8 zeroext %93, i32 1) #11
  br label %94

94:                                               ; preds = %5, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink13CSSParserImpl27ParseInlineStyleDeclarationERKN3WTF6StringEPNS_7ElementE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Element"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserImpl", align 8
  %4 = alloca %"class.blink::CSSTokenizer", align 8
  %5 = alloca %"class.blink::CSSParserTokenStream", align 8
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"* %9) #11
  %11 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %12, i64 0, i32 10, i32 0, i32 0
  %14 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %13, align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #11
  %16 = bitcast i8* %15 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_8DocumentE(%"class.blink::CSSParserContext"* %16, %"class.blink::CSSParserContext"* %14, %"class.blink::Document"* %9) #11
  %17 = getelementptr inbounds i8, i8* %15, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 33
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  %29 = zext i1 %28 to i8
  br label %30

30:                                               ; preds = %25, %2
  %31 = phi i8 [ 1, %2 ], [ %29, %25 ]
  %32 = getelementptr inbounds i8, i8* %15, i64 121
  store i8 %31, i8* %32, align 1
  %33 = bitcast %"class.blink::CSSParserImpl"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 6192, i1 false)
  %34 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"* %9) #11
  %35 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.blink::StyleSheetContents"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %39 = bitcast %"class.blink::CSSParserImpl"* %3 to i8**
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %42 = bitcast i32* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 6148, i1 false) #11
  %43 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 1
  %44 = bitcast %"class.blink::CSSParserContext"** %43 to i8**
  store i8* %15, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 2
  %46 = bitcast %"class.blink::StyleSheetContents"** %45 to i64*
  store i64 %37, i64* %46, align 8
  %47 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 3
  %48 = bitcast %"class.blink::CSSParserObserver"** %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #11
  %49 = bitcast %"class.blink::CSSTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %50 = bitcast %"class.blink::CSSParserTokenStream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %50) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %51 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %52 = bitcast %"class.blink::CSSParserTokenStream"* %5 to i8**
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %4, %"class.blink::CSSTokenizer"** %55, align 8
  %56 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 2
  %57 = bitcast %"class.blink::CSSParserToken"* %56 to i32*
  store i32 11184671, i32* %57, align 8
  %58 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 3
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 4
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 6
  store i32 31, i32* %60, align 8
  %61 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %62 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %61, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %63 = ptrtoint i8* %62 to i64
  %64 = bitcast %"class.blink::CSSParserTokenStream"* %5 to i64*
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = udiv i64 %61, 24
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %53, align 8
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* nonnull %3, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %5, i32 1)
  %67 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 0
  %68 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* nonnull dereferenceable(6160) %67, i8 zeroext %31)
  %69 = load i32, i32* %54, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71, !prof !6

71:                                               ; preds = %30
  store i32 0, i32* %54, align 4
  br label %72

72:                                               ; preds = %71, %30
  %73 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %73, align 8
  %75 = bitcast i8* %51 to %"class.blink::CSSParserToken"*
  %76 = icmp eq %"class.blink::CSSParserToken"* %74, %75
  br i1 %76, label %79, label %77, !prof !7

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %78, %"class.blink::CSSParserToken"* %74) #11
  br label %79

79:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %50) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %49) #11
  %80 = load i32, i32* %41, align 4
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %81, label %83, label %85, !prof !6

83:                                               ; preds = %79
  %84 = bitcast i8* %38 to %"class.blink::CSSPropertyValue"*
  br label %116

85:                                               ; preds = %79
  %86 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %82, align 8
  %87 = icmp ne %"class.blink::CSSPropertyValue"* %86, null
  %88 = bitcast i8* %38 to %"class.blink::CSSPropertyValue"*
  %89 = icmp ne %"class.blink::CSSPropertyValue"* %86, %88
  %90 = and i1 %87, %89
  br i1 %90, label %116, label %91

91:                                               ; preds = %85
  %92 = zext i32 %80 to i64
  %93 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %86, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.blink::CSSPropertyValue"* [ %113, %112 ], [ %86, %91 ]
  %96 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #11
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %95, i64 1
  %114 = icmp eq %"class.blink::CSSPropertyValue"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %41, align 4
  br label %116

116:                                              ; preds = %83, %115, %85
  %117 = phi %"class.blink::CSSPropertyValue"* [ %84, %83 ], [ %88, %115 ], [ %88, %85 ]
  %118 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %82, align 8
  %119 = icmp eq %"class.blink::CSSPropertyValue"* %118, %117
  br i1 %119, label %122, label %120, !prof !7

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %3, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %121, %"class.blink::CSSPropertyValue"* %118) #11
  br label %122

122:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %33) #11
  ret %"class.blink::ImmutableCSSPropertyValueSet"* %68
}

declare dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %7 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %6, align 8
  %8 = icmp eq %"class.blink::CSSParserObserver"* %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  switch i32 %2, label %17 [
    i32 12, label %10
    i32 11, label %10
    i32 10, label %10
    i32 6, label %10
    i32 1, label %10
    i32 8, label %10
  ]

10:                                               ; preds = %9, %9, %9, %9, %9, %9
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.blink::CSSParserObserver"* %7 to void (%"class.blink::CSSParserObserver"*, i32)***
  %14 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %14, i64 3
  %16 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %15, align 8
  tail call void %16(%"class.blink::CSSParserObserver"* nonnull %7, i32 %12) #11
  br label %17

17:                                               ; preds = %9, %3, %10
  %18 = phi i1 [ true, %10 ], [ false, %3 ], [ false, %9 ]
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  %21 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i8*
  %25 = bitcast %"class.blink::CSSParserToken"* %23 to i32*
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 6
  %27 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  %28 = icmp eq i32* %26, null
  br label %29

29:                                               ; preds = %90, %17
  br i1 %18, label %30, label %46

30:                                               ; preds = %29
  %31 = load i8, i8* %19, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %51

33:                                               ; preds = %30
  %34 = load i32, i32* %20, align 8
  %35 = call zeroext i1 @_ZN5blink20CSSParserTokenStream23ConsumeCommentOrNothingEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br i1 %35, label %36, label %46

36:                                               ; preds = %33, %36
  %37 = phi i32 [ %44, %36 ], [ %34, %33 ]
  %38 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %6, align 8
  %39 = load i32, i32* %20, align 8
  %40 = bitcast %"class.blink::CSSParserObserver"* %38 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %41 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %41, i64 6
  %43 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %42, align 8
  call void %43(%"class.blink::CSSParserObserver"* %38, i32 %37, i32 %39) #11
  %44 = load i32, i32* %20, align 8
  %45 = call zeroext i1 @_ZN5blink20CSSParserTokenStream23ConsumeCommentOrNothingEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br i1 %45, label %36, label %46

46:                                               ; preds = %36, %33, %29
  %47 = load i8, i8* %19, align 4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  store i8 1, i8* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %50 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %50) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %21, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %51

51:                                               ; preds = %30, %46, %49
  %52 = load i32, i32* %25, align 8
  %53 = and i32 %52, 63
  %54 = icmp eq i32 %53, 31
  %55 = and i32 %52, 192
  %56 = icmp eq i32 %55, 128
  %57 = or i1 %54, %56
  br i1 %57, label %109, label %58

58:                                               ; preds = %51
  switch i32 %53, label %91 [
    i32 17, label %59
    i32 21, label %59
    i32 0, label %67
  ]

59:                                               ; preds = %58, %58
  store i8 0, i8* %19, align 4
  %60 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  %61 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %60, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %60, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %61, align 4
  %65 = icmp ult i32 %63, %64
  %66 = select i1 %65, i32 %63, i32 %64
  store i32 %66, i32* %20, align 8
  br label %90

67:                                               ; preds = %58
  %68 = load i32, i32* %26, align 4
  store i32 21, i32* %26, align 4
  call void @_ZN5blink13CSSParserImpl18ConsumeDeclarationERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %2)
  %69 = load i8, i8* %19, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  store i8 1, i8* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %72 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %72) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %27, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  br label %73

73:                                               ; preds = %67, %71
  %74 = load i32, i32* %25, align 8
  %75 = and i32 %74, 63
  %76 = icmp eq i32 %75, 31
  %77 = and i32 %74, 192
  %78 = icmp eq i32 %77, 128
  %79 = or i1 %76, %78
  br i1 %79, label %88, label %80

80:                                               ; preds = %73
  store i8 0, i8* %19, align 4
  %81 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  %82 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %81, i64 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %81, i64 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* %82, align 4
  %86 = icmp ult i32 %84, %85
  %87 = select i1 %86, i32 %84, i32 %85
  store i32 %87, i32* %20, align 8
  br label %88

88:                                               ; preds = %80, %73
  br i1 %28, label %90, label %89

89:                                               ; preds = %88
  store i32 %68, i32* %26, align 4
  br label %90

90:                                               ; preds = %94, %89, %88, %101, %59
  br label %29

91:                                               ; preds = %58, %94
  %92 = phi i32 [ %96, %94 ], [ %53, %58 ]
  %93 = icmp eq i32 %92, 21
  br i1 %93, label %101, label %94

94:                                               ; preds = %91
  call void @_ZN5blink20CSSParserTokenStream30UncheckedConsumeComponentValueEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %95 = load i32, i32* %25, align 8
  %96 = and i32 %95, 63
  %97 = icmp eq i32 %96, 31
  %98 = and i32 %95, 192
  %99 = icmp eq i32 %98, 128
  %100 = or i1 %97, %99
  br i1 %100, label %90, label %91

101:                                              ; preds = %91
  store i8 0, i8* %19, align 4
  %102 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  %103 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %102, i64 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %102, i64 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = load i32, i32* %103, align 4
  %107 = icmp ult i32 %105, %106
  %108 = select i1 %107, i32 %105, i32 %106
  store i32 %108, i32* %20, align 8
  br label %90

109:                                              ; preds = %51
  br i1 %18, label %110, label %119

110:                                              ; preds = %109
  %111 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %6, align 8
  %112 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  %113 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %112, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = bitcast %"class.blink::CSSParserObserver"* %111 to void (%"class.blink::CSSParserObserver"*, i32)***
  %116 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %116, i64 4
  %118 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %117, align 8
  call void %118(%"class.blink::CSSParserObserver"* %111, i32 %114) #11
  br label %119

119:                                              ; preds = %110, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160), i8 zeroext) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::bitset", align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.WTF::HashSet.380", align 8
  %7 = bitcast %"class.std::__1::bitset"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 80, i1 false) #11
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %4, align 4
  %12 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6160, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8**
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %15, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 6144, i1 false) #11
  %16 = icmp ugt i32 %11, 256
  %17 = zext i32 %11 to i64
  br i1 %16, label %18, label %31

18:                                               ; preds = %2
  %19 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %17) #11
  %20 = udiv i64 %19, 24
  %21 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %20) #11
  %22 = ptrtoint %"class.blink::HeapVectorBacking"* %21 to i64
  %23 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = trunc i64 %20 to i32
  store i32 %24, i32* %15, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %21, i64 0, i32 0
  br i1 %26, label %31, label %28

28:                                               ; preds = %18
  %29 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  %30 = load i8*, i8** %14, align 8
  br label %31

31:                                               ; preds = %2, %18, %28
  %32 = phi i8* [ %27, %18 ], [ %30, %28 ], [ %13, %2 ]
  %33 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %11, i32* %33, align 4
  %34 = mul nuw nsw i64 %17, 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 %34, i1 false) #11
  %35 = bitcast %"class.WTF::HashSet.380"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %6, i64 0, i32 0, i32 0
  %37 = bitcast %"class.WTF::HashSet.380"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 20, i1 false) #11
  call fastcc void @_ZN5blinkL16FilterPropertiesEbRKNS_10HeapVectorINS_16CSSPropertyValueELj256EEERS2_RjRNSt3__16bitsetILm624EEERN3WTF7HashSetINSB_12AtomicStringENSB_16AtomicStringHashENSB_10HashTraitsISD_EENSB_18PartitionAllocatorEEE(i1 zeroext true, %"class.blink::HeapVector"* dereferenceable(6160) %0, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %5, i32* nonnull dereferenceable(4) %4, %"class.std::__1::bitset"* nonnull dereferenceable(80) %3, %"class.WTF::HashSet.380"* nonnull dereferenceable(24) %6)
  call fastcc void @_ZN5blinkL16FilterPropertiesEbRKNS_10HeapVectorINS_16CSSPropertyValueELj256EEERS2_RjRNSt3__16bitsetILm624EEERN3WTF7HashSetINSB_12AtomicStringENSB_16AtomicStringHashENSB_10HashTraitsISD_EENSB_18PartitionAllocatorEEE(i1 zeroext false, %"class.blink::HeapVector"* dereferenceable(6160) %0, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %5, i32* nonnull dereferenceable(4) %4, %"class.std::__1::bitset"* nonnull dereferenceable(80) %3, %"class.WTF::HashSet.380"* nonnull dereferenceable(24) %6)
  %38 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %38, align 8
  %40 = load i32, i32* %4, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %39, i64 %41
  %43 = load i32, i32* %33, align 4
  %44 = sub i32 %43, %40
  %45 = call %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink28ImmutableCSSPropertyValueSet6CreateEPKNS_16CSSPropertyValueEjNS_13CSSParserModeE(%"class.blink::CSSPropertyValue"* %42, i32 %44, i8 zeroext %1) #11
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"* %9)
  %46 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %36, align 8
  %47 = icmp eq %"class.WTF::AtomicString"* %46, null
  br i1 %47, label %80, label %48, !prof !7

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %6, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %48
  %53 = zext i32 %50 to i64
  br label %54

54:                                               ; preds = %75, %52
  %55 = phi i64 [ 0, %52 ], [ %76, %75 ]
  %56 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 %55
  %57 = bitcast %"class.WTF::AtomicString"* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast i8* %58 to %"class.WTF::StringImpl"*
  %60 = ptrtoint i8* %58 to i64
  switch i64 %60, label %61 [
    i64 -1, label %75
    i64 0, label %75
  ]

61:                                               ; preds = %54
  %62 = getelementptr inbounds i8, i8* %58, i64 8
  %63 = bitcast i8* %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = bitcast i8* %58 to i32*
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %61
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi i32 [ %70, %69 ], [ %68, %61 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %75

75:                                               ; preds = %74, %71, %54, %54
  %76 = add nuw nsw i64 %55, 1
  %77 = icmp eq i64 %76, %53
  br i1 %77, label %78, label %54

78:                                               ; preds = %75, %48
  %79 = bitcast %"class.WTF::AtomicString"* %46 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #11
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %36, align 8
  br label %80

80:                                               ; preds = %31, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  %81 = load i32, i32* %33, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85, !prof !6

83:                                               ; preds = %80
  %84 = bitcast i8* %13 to %"class.blink::CSSPropertyValue"*
  br label %116

85:                                               ; preds = %80
  %86 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %38, align 8
  %87 = icmp ne %"class.blink::CSSPropertyValue"* %86, null
  %88 = bitcast i8* %13 to %"class.blink::CSSPropertyValue"*
  %89 = icmp ne %"class.blink::CSSPropertyValue"* %86, %88
  %90 = and i1 %87, %89
  br i1 %90, label %116, label %91

91:                                               ; preds = %85
  %92 = zext i32 %81 to i64
  %93 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %86, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.blink::CSSPropertyValue"* [ %113, %112 ], [ %86, %91 ]
  %96 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #11
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %95, i64 1
  %114 = icmp eq %"class.blink::CSSPropertyValue"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %33, align 4
  br label %116

116:                                              ; preds = %83, %115, %85
  %117 = phi %"class.blink::CSSPropertyValue"* [ %84, %83 ], [ %88, %115 ], [ %88, %85 ]
  %118 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %38, align 8
  %119 = icmp eq %"class.blink::CSSPropertyValue"* %118, %117
  br i1 %119, label %122, label %120, !prof !7

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %121, %"class.blink::CSSPropertyValue"* %118) #11
  br label %122

122:                                              ; preds = %116, %120
  call void @llvm.lifetime.end.p0i8(i64 6160, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #11
  ret %"class.blink::ImmutableCSSPropertyValueSet"* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink13CSSParserImpl27ParseInlineStyleDeclarationERKN3WTF6StringENS_13CSSParserModeENS_17SecureContextModeE(%"class.WTF::String"* dereferenceable(8), i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserImpl", align 8
  %5 = alloca %"class.blink::CSSTokenizer", align 8
  %6 = alloca %"class.blink::CSSParserTokenStream", align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #11
  %8 = bitcast i8* %7 to %"class.blink::CSSParserContext"*
  tail call void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"* %8, i8 zeroext %1, i32 %2, i8 zeroext 0, %"class.blink::Document"* null) #11
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = bitcast %"class.blink::CSSParserImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.blink::CSSParserImpl"* %4 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %18 = bitcast i32* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 6148, i1 false) #11
  %19 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 1
  %20 = bitcast %"class.blink::CSSParserContext"** %19 to i8**
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 2
  %22 = bitcast %"class.blink::CSSTokenizer"* %5 to i8*
  %23 = bitcast %"class.blink::StyleSheetContents"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %22) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %24 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %24) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %26 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i8**
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %5, %"class.blink::CSSTokenizer"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 2
  %31 = bitcast %"class.blink::CSSParserToken"* %30 to i32*
  store i32 11184671, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 3
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 4
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 6
  store i32 31, i32* %34, align 8
  %35 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %37 = ptrtoint i8* %36 to i64
  %38 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = udiv i64 %35, 24
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %27, align 8
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* nonnull %4, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %6, i32 1)
  %41 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0
  %42 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* nonnull dereferenceable(6160) %41, i8 zeroext %1)
  %43 = load i32, i32* %28, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !6

45:                                               ; preds = %3
  store i32 0, i32* %28, align 4
  br label %46

46:                                               ; preds = %45, %3
  %47 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %47, align 8
  %49 = bitcast i8* %25 to %"class.blink::CSSParserToken"*
  %50 = icmp eq %"class.blink::CSSParserToken"* %48, %49
  br i1 %50, label %53, label %51, !prof !7

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %52, %"class.blink::CSSParserToken"* %48) #11
  br label %53

53:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %24) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %22) #11
  %54 = load i32, i32* %17, align 4
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %55, label %57, label %59, !prof !6

57:                                               ; preds = %53
  %58 = bitcast i8* %14 to %"class.blink::CSSPropertyValue"*
  br label %90

59:                                               ; preds = %53
  %60 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %56, align 8
  %61 = icmp ne %"class.blink::CSSPropertyValue"* %60, null
  %62 = bitcast i8* %14 to %"class.blink::CSSPropertyValue"*
  %63 = icmp ne %"class.blink::CSSPropertyValue"* %60, %62
  %64 = and i1 %61, %63
  br i1 %64, label %90, label %65

65:                                               ; preds = %59
  %66 = zext i32 %54 to i64
  %67 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %60, i64 %66
  br label %68

68:                                               ; preds = %86, %65
  %69 = phi %"class.blink::CSSPropertyValue"* [ %87, %86 ], [ %60, %65 ]
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #11
  br label %86

86:                                               ; preds = %85, %82, %68
  %87 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %69, i64 1
  %88 = icmp eq %"class.blink::CSSPropertyValue"* %87, %67
  br i1 %88, label %89, label %68

89:                                               ; preds = %86
  store i32 0, i32* %17, align 4
  br label %90

90:                                               ; preds = %57, %89, %59
  %91 = phi %"class.blink::CSSPropertyValue"* [ %58, %57 ], [ %62, %89 ], [ %62, %59 ]
  %92 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %56, align 8
  %93 = icmp eq %"class.blink::CSSPropertyValue"* %92, %91
  br i1 %93, label %96, label %94, !prof !7

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %95, %"class.blink::CSSPropertyValue"* %92) #11
  br label %96

96:                                               ; preds = %90, %94
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %13) #11
  ret %"class.blink::ImmutableCSSPropertyValueSet"* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CSSParserImpl20ParseDeclarationListEPNS_26MutableCSSPropertyValueSetERKN3WTF6StringEPKNS_16CSSParserContextE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserImpl", align 8
  %5 = alloca %"class.blink::CSSTokenizer", align 8
  %6 = alloca %"class.blink::CSSParserTokenStream", align 8
  %7 = alloca %"class.std::__1::bitset", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.blink::HeapVector", align 8
  %10 = alloca %"class.WTF::HashSet.380", align 8
  %11 = bitcast %"class.blink::CSSParserImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %13 = bitcast %"class.blink::CSSParserImpl"* %4 to i8**
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast i32* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 6148, i1 false) #11
  %17 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %2, %"class.blink::CSSParserContext"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::StyleSheetContents"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  %21 = load i32, i32* %19, align 4
  %22 = and i32 %21, 1879048192
  %23 = icmp eq i32 %22, 805306368
  %24 = select i1 %23, i32 14, i32 1
  %25 = bitcast %"class.blink::CSSTokenizer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %25) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %1, i32 0) #11
  %26 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %26) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %28 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i8**
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %5, %"class.blink::CSSTokenizer"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 2
  %33 = bitcast %"class.blink::CSSParserToken"* %32 to i32*
  store i32 11184671, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 3
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 4
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 6
  store i32 31, i32* %36, align 8
  %37 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %38 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %39 = ptrtoint i8* %38 to i64
  %40 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i64*
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = udiv i64 %37, 24
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %29, align 8
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* nonnull %4, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %6, i32 %24)
  %43 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0
  %44 = load i32, i32* %15, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %159, label %46

46:                                               ; preds = %3
  %47 = bitcast %"class.std::__1::bitset"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 80, i1 false) #11
  %48 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #11
  store i32 %44, i32* %8, align 4
  %49 = bitcast %"class.blink::HeapVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6160, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 1, i64 0
  %51 = bitcast %"class.blink::HeapVector"* %9 to i8**
  store i8* %50, i8** %51, align 8
  %52 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %52, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 6144, i1 false) #11
  %53 = icmp ugt i32 %44, 256
  %54 = zext i32 %44 to i64
  br i1 %53, label %55, label %68

55:                                               ; preds = %46
  %56 = call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %54) #11
  %57 = udiv i64 %56, 24
  %58 = call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %57) #11
  %59 = ptrtoint %"class.blink::HeapVectorBacking"* %58 to i64
  %60 = bitcast %"class.blink::HeapVector"* %9 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = trunc i64 %57 to i32
  store i32 %61, i32* %52, align 8
  %62 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %58, i64 0, i32 0
  br i1 %63, label %68, label %65

65:                                               ; preds = %55
  %66 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #11
  %67 = load i8*, i8** %51, align 8
  br label %68

68:                                               ; preds = %46, %55, %65
  %69 = phi i8* [ %64, %55 ], [ %67, %65 ], [ %50, %46 ]
  %70 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %44, i32* %70, align 4
  %71 = mul nuw nsw i64 %54, 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %71, i1 false) #11
  %72 = bitcast %"class.WTF::HashSet.380"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %10, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %10, i64 0, i32 0, i32 1
  %75 = bitcast %"class.WTF::HashSet.380"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 20, i1 false) #11
  call fastcc void @_ZN5blinkL16FilterPropertiesEbRKNS_10HeapVectorINS_16CSSPropertyValueELj256EEERS2_RjRNSt3__16bitsetILm624EEERN3WTF7HashSetINSB_12AtomicStringENSB_16AtomicStringHashENSB_10HashTraitsISD_EENSB_18PartitionAllocatorEEE(i1 zeroext true, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %43, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %9, i32* nonnull dereferenceable(4) %8, %"class.std::__1::bitset"* nonnull dereferenceable(80) %7, %"class.WTF::HashSet.380"* nonnull dereferenceable(24) %10)
  call fastcc void @_ZN5blinkL16FilterPropertiesEbRKNS_10HeapVectorINS_16CSSPropertyValueELj256EEERS2_RjRNSt3__16bitsetILm624EEERN3WTF7HashSetINSB_12AtomicStringENSB_16AtomicStringHashENSB_10HashTraitsISD_EENSB_18PartitionAllocatorEEE(i1 zeroext false, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %43, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %9, i32* nonnull dereferenceable(4) %8, %"class.std::__1::bitset"* nonnull dereferenceable(80) %7, %"class.WTF::HashSet.380"* nonnull dereferenceable(24) %10)
  %76 = load i32, i32* %8, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE7EraseAtEjj(%"class.WTF::Vector"* nonnull %79, i32 0, i32 %76)
  br label %80

80:                                               ; preds = %68, %78
  %81 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet19AddParsedPropertiesERKNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(%"class.blink::MutableCSSPropertyValueSet"* %0, %"class.blink::HeapVector"* nonnull dereferenceable(6160) %9) #11
  %82 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %73, align 8
  %83 = icmp eq %"class.WTF::AtomicString"* %82, null
  br i1 %83, label %115, label %84, !prof !7

84:                                               ; preds = %80
  %85 = load i32, i32* %74, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %113, label %87

87:                                               ; preds = %84
  %88 = zext i32 %85 to i64
  br label %89

89:                                               ; preds = %110, %87
  %90 = phi i64 [ 0, %87 ], [ %111, %110 ]
  %91 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %82, i64 %90
  %92 = bitcast %"class.WTF::AtomicString"* %91 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast i8* %93 to %"class.WTF::StringImpl"*
  %95 = ptrtoint i8* %93 to i64
  switch i64 %95, label %96 [
    i64 -1, label %110
    i64 0, label %110
  ]

96:                                               ; preds = %89
  %97 = getelementptr inbounds i8, i8* %93, i64 8
  %98 = bitcast i8* %97 to i32*
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = bitcast i8* %93 to i32*
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %96
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %96
  %107 = phi i32 [ %105, %104 ], [ %103, %96 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #11
  br label %110

110:                                              ; preds = %109, %106, %89, %89
  %111 = add nuw nsw i64 %90, 1
  %112 = icmp eq i64 %111, %88
  br i1 %112, label %113, label %89

113:                                              ; preds = %110, %84
  %114 = bitcast %"class.WTF::AtomicString"* %82 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %114) #11
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %73, align 8
  br label %115

115:                                              ; preds = %80, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  %116 = load i32, i32* %70, align 4
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %117, label %119, label %121, !prof !6

119:                                              ; preds = %115
  %120 = bitcast i8* %50 to %"class.blink::CSSPropertyValue"*
  br label %152

121:                                              ; preds = %115
  %122 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %118, align 8
  %123 = icmp ne %"class.blink::CSSPropertyValue"* %122, null
  %124 = bitcast i8* %50 to %"class.blink::CSSPropertyValue"*
  %125 = icmp ne %"class.blink::CSSPropertyValue"* %122, %124
  %126 = and i1 %123, %125
  br i1 %126, label %152, label %127

127:                                              ; preds = %121
  %128 = zext i32 %116 to i64
  %129 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %122, i64 %128
  br label %130

130:                                              ; preds = %148, %127
  %131 = phi %"class.blink::CSSPropertyValue"* [ %149, %148 ], [ %122, %127 ]
  %132 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #11
  br label %148

148:                                              ; preds = %147, %144, %130
  %149 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %131, i64 1
  %150 = icmp eq %"class.blink::CSSPropertyValue"* %149, %129
  br i1 %150, label %151, label %130

151:                                              ; preds = %148
  store i32 0, i32* %70, align 4
  br label %152

152:                                              ; preds = %119, %151, %121
  %153 = phi %"class.blink::CSSPropertyValue"* [ %120, %119 ], [ %124, %151 ], [ %124, %121 ]
  %154 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %118, align 8
  %155 = icmp eq %"class.blink::CSSPropertyValue"* %154, %153
  br i1 %155, label %158, label %156, !prof !7

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %157, %"class.blink::CSSPropertyValue"* %154) #11
  br label %158

158:                                              ; preds = %152, %156
  call void @llvm.lifetime.end.p0i8(i64 6160, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #11
  br label %159

159:                                              ; preds = %3, %158
  %160 = phi i1 [ %81, %158 ], [ false, %3 ]
  %161 = load i32, i32* %30, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %164, label %163, !prof !6

163:                                              ; preds = %159
  store i32 0, i32* %30, align 4
  br label %164

164:                                              ; preds = %163, %159
  %165 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %165, align 8
  %167 = bitcast i8* %27 to %"class.blink::CSSParserToken"*
  %168 = icmp eq %"class.blink::CSSParserToken"* %166, %167
  br i1 %168, label %171, label %169, !prof !7

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %170, %"class.blink::CSSParserToken"* %166) #11
  br label %171

171:                                              ; preds = %164, %169
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %26) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %25) #11
  %172 = load i32, i32* %15, align 4
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %173, label %175, label %177, !prof !6

175:                                              ; preds = %171
  %176 = bitcast i8* %12 to %"class.blink::CSSPropertyValue"*
  br label %208

177:                                              ; preds = %171
  %178 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %174, align 8
  %179 = icmp ne %"class.blink::CSSPropertyValue"* %178, null
  %180 = bitcast i8* %12 to %"class.blink::CSSPropertyValue"*
  %181 = icmp ne %"class.blink::CSSPropertyValue"* %178, %180
  %182 = and i1 %179, %181
  br i1 %182, label %208, label %183

183:                                              ; preds = %177
  %184 = zext i32 %172 to i64
  %185 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %178, i64 %184
  br label %186

186:                                              ; preds = %204, %183
  %187 = phi %"class.blink::CSSPropertyValue"* [ %205, %204 ], [ %178, %183 ]
  %188 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #11
  br label %204

204:                                              ; preds = %203, %200, %186
  %205 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %187, i64 1
  %206 = icmp eq %"class.blink::CSSPropertyValue"* %205, %185
  br i1 %206, label %207, label %186

207:                                              ; preds = %204
  store i32 0, i32* %15, align 4
  br label %208

208:                                              ; preds = %175, %207, %177
  %209 = phi %"class.blink::CSSPropertyValue"* [ %176, %175 ], [ %180, %207 ], [ %180, %177 ]
  %210 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %174, align 8
  %211 = icmp eq %"class.blink::CSSPropertyValue"* %210, %209
  br i1 %211, label %214, label %212, !prof !7

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %213, %"class.blink::CSSPropertyValue"* %210) #11
  br label %214

214:                                              ; preds = %208, %212
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %11) #11
  ret i1 %160
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL16FilterPropertiesEbRKNS_10HeapVectorINS_16CSSPropertyValueELj256EEERS2_RjRNSt3__16bitsetILm624EEERN3WTF7HashSetINSB_12AtomicStringENSB_16AtomicStringHashENSB_10HashTraitsISD_EENSB_18PartitionAllocatorEEE(i1 zeroext, %"class.blink::HeapVector"* dereferenceable(6160), %"class.blink::HeapVector"* dereferenceable(6160), i32* nocapture dereferenceable(4), %"class.std::__1::bitset"* nocapture dereferenceable(80), %"class.WTF::HashSet.380"* dereferenceable(24)) unnamed_addr #3 {
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::HashSet.380", %"class.WTF::HashSet.380"* %5, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0
  br label %17

16:                                               ; preds = %161, %6
  ret void

17:                                               ; preds = %11, %161
  %18 = phi i32 [ %9, %11 ], [ %19, %161 ]
  %19 = add i32 %18, -1
  %20 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %19) #11
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 0, i32 0, i32 1
  %22 = load i16, i16* %21, align 8
  %23 = and i16 %22, 16384
  %24 = icmp ne i16 %23, 0
  %25 = xor i1 %24, %0
  br i1 %25, label %161, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 0, i32 0
  %28 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %27) #11
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %89

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 0, i32 1, i32 0, i32 0
  %32 = bitcast %"class.blink::CSSValue"** %31 to %"class.blink::CSSCustomPropertyDeclaration"**
  %33 = load %"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::CSSCustomPropertyDeclaration"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %33, i64 0, i32 2
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %12, align 8
  %36 = icmp eq %"class.WTF::AtomicString"* %35, null
  br i1 %36, label %87, label %37

37:                                               ; preds = %30
  %38 = load i32, i32* %13, align 8
  %39 = add i32 %38, -1
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = lshr i32 %44, 8
  %46 = and i32 %45, %39
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 %47
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %87, label %52

52:                                               ; preds = %37
  %53 = xor i32 %45, -1
  %54 = lshr i32 %44, 31
  %55 = add nsw i32 %54, %53
  %56 = shl i32 %55, 12
  %57 = xor i32 %56, %55
  %58 = lshr i32 %57, 7
  %59 = xor i32 %58, %57
  %60 = shl i32 %59, 2
  %61 = xor i32 %60, %59
  %62 = lshr i32 %61, 20
  %63 = xor i32 %62, %61
  %64 = or i32 %63, 1
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %76, %52
  %67 = phi %"class.WTF::StringImpl"* [ %50, %52 ], [ %83, %76 ]
  %68 = phi %"class.WTF::AtomicString"* [ %48, %52 ], [ %81, %76 ]
  %69 = phi i64 [ %47, %52 ], [ %80, %76 ]
  %70 = phi i64 [ 0, %52 ], [ %78, %76 ]
  %71 = bitcast %"class.WTF::AtomicString"* %68 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp ne i8* %72, inttoptr (i64 -1 to i8*)
  %74 = icmp eq %"class.WTF::StringImpl"* %67, %42
  %75 = and i1 %74, %73
  br i1 %75, label %85, label %76

76:                                               ; preds = %66
  %77 = icmp eq i64 %70, 0
  %78 = select i1 %77, i64 %65, i64 %70
  %79 = add i64 %78, %69
  %80 = and i64 %79, %40
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 %80
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %87, label %66

85:                                               ; preds = %66
  %86 = icmp eq %"class.WTF::AtomicString"* %68, null
  br i1 %86, label %87, label %161

87:                                               ; preds = %76, %85, %37, %30
  %88 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.381"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %34, %"class.WTF::AtomicString"* dereferenceable(8) %34) #11
  br label %105

89:                                               ; preds = %26
  %90 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %27) #11
  %91 = add nsw i32 %90, -2
  %92 = zext i32 %91 to i64
  %93 = icmp ugt i32 %91, 623
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  tail call void @abort() #12
  unreachable

95:                                               ; preds = %89
  %96 = lshr i64 %92, 6
  %97 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %4, i64 0, i32 0, i32 0, i64 %96
  %98 = and i64 %92, 63
  %99 = shl i64 1, %98
  %100 = load i64, i64* %97, align 8
  %101 = and i64 %100, %99
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %161

103:                                              ; preds = %95
  %104 = or i64 %100, %99
  store i64 %104, i64* %97, align 8
  br label %105

105:                                              ; preds = %103, %87
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, -1
  store i32 %107, i32* %3, align 4
  %108 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 %107) #11
  %109 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %129, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = zext i32 %119 to i33
  %121 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #11
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !6

126:                                              ; preds = %117
  tail call void @llvm.trap() #11
  unreachable

127:                                              ; preds = %117
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %118, align 4
  br label %129

129:                                              ; preds = %127, %112, %105
  %130 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %131 = bitcast %"class.blink::CSSPropertyValue"* %108 to i64*
  %132 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  store i64 %130, i64* %131, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #11
  br label %148

148:                                              ; preds = %147, %144, %129
  %149 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %108, i64 0, i32 0, i32 1
  %150 = load i16, i16* %21, align 8
  store i16 %150, i16* %149, align 8
  %151 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %108, i64 0, i32 1
  %152 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 0, i32 1
  %153 = bitcast %"class.blink::Member"* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.blink::Member"* %151 to i64*
  store atomic i64 %154, i64* %155 monotonic, align 8
  %156 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %148
  %159 = inttoptr i64 %154 to i8*
  %160 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %159) #11
  br label %161

161:                                              ; preds = %85, %95, %158, %148, %17
  %162 = icmp eq i32 %19, 0
  br i1 %162, label %16, label %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE7EraseAtEjj(%"class.WTF::Vector"*, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %101, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #11
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i64 0, i64 0), i8* %18, i8* %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %23, %17, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 %31
  br label %33

33:                                               ; preds = %26, %51
  %34 = phi %"class.blink::CSSPropertyValue"* [ %52, %51 ], [ %30, %26 ]
  %35 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %51

51:                                               ; preds = %50, %47, %33
  %52 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %34, i64 1
  %53 = icmp eq %"class.blink::CSSPropertyValue"* %52, %32
  br i1 %53, label %54, label %33

54:                                               ; preds = %51
  %55 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %27, align 8
  %56 = load i32, i32* %12, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %55, i64 %57
  %59 = icmp ne %"class.blink::CSSPropertyValue"* %30, null
  %60 = icmp ne %"class.blink::CSSPropertyValue"* %32, null
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %91, !prof !7

62:                                               ; preds = %54
  %63 = icmp ult %"class.blink::CSSPropertyValue"* %32, %58
  br i1 %63, label %64, label %83

64:                                               ; preds = %62, %64
  %65 = phi %"class.blink::CSSPropertyValue"* [ %81, %64 ], [ %30, %62 ]
  %66 = phi %"class.blink::CSSPropertyValue"* [ %80, %64 ], [ %32, %62 ]
  %67 = bitcast %"class.blink::CSSPropertyValue"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::CSSPropertyValue"* %65 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %65, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %66, i64 0, i32 0, i32 1
  %72 = bitcast i16* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast i16* %70 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %65, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %66, i64 0, i32 1
  %77 = bitcast %"class.blink::Member"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.blink::Member"* %75 to i64*
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %66, i64 1
  %81 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %65, i64 1
  %82 = icmp ult %"class.blink::CSSPropertyValue"* %80, %58
  br i1 %82, label %64, label %83

83:                                               ; preds = %64, %62
  %84 = ptrtoint %"class.blink::CSSPropertyValue"* %58 to i64
  %85 = ptrtoint %"class.blink::CSSPropertyValue"* %32 to i64
  %86 = sub i64 %84, %85
  %87 = sdiv exact i64 %86, 24
  call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %30, i64 %87) #11
  %88 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %27, align 8
  %89 = load i32, i32* %12, align 4
  %90 = zext i32 %89 to i64
  br label %91

91:                                               ; preds = %54, %83
  %92 = phi i64 [ %57, %54 ], [ %90, %83 ]
  %93 = phi %"class.blink::CSSPropertyValue"* [ %55, %54 ], [ %88, %83 ]
  %94 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %93, i64 %92
  %95 = sub nsw i64 0, %31
  %96 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %94, i64 %95
  %97 = bitcast %"class.blink::CSSPropertyValue"* %96 to i8*
  %98 = mul nuw nsw i64 %31, 24
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %97, i64 %98) #11
  %99 = load i32, i32* %12, align 4
  %100 = sub i32 %99, %2
  store i32 %100, i32* %12, align 4
  br label %101

101:                                              ; preds = %3, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl9ParseRuleERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS0_16AllowedRulesTypeE(%"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSParserImpl", align 8
  %6 = alloca %"class.blink::CSSTokenizer", align 8
  %7 = alloca %"class.blink::CSSParserTokenStream", align 8
  %8 = bitcast %"class.blink::CSSParserImpl"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %10 = bitcast %"class.blink::CSSParserImpl"* %5 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 6148, i1 false) #11
  %14 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 2
  store %"class.blink::StyleSheetContents"* %2, %"class.blink::StyleSheetContents"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 3
  %17 = bitcast %"class.blink::CSSParserObserver"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #11
  %18 = bitcast %"class.blink::CSSTokenizer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %19 = bitcast %"class.blink::CSSParserTokenStream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %19) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %21 = bitcast %"class.blink::CSSParserTokenStream"* %7 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %6, %"class.blink::CSSTokenizer"** %24, align 8
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 2
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i32*
  store i32 11184671, i32* %26, align 8
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 3
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 4
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 6
  store i32 31, i32* %29, align 8
  %30 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %31 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast %"class.blink::CSSParserTokenStream"* %7 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = udiv i64 %30, 24
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %22, align 8
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* nonnull %7) #11
  %36 = load i32, i32* %26, align 8
  %37 = and i32 %36, 63
  %38 = icmp eq i32 %37, 31
  %39 = and i32 %36, 192
  %40 = icmp eq i32 %39, 128
  %41 = or i1 %38, %40
  br i1 %41, label %59, label %42

42:                                               ; preds = %4
  %43 = icmp eq i32 %37, 2
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* nonnull %5, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %7, i32 %3)
  br label %48

46:                                               ; preds = %42
  %47 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* nonnull %5, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %7, i32 %3)
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi %"class.blink::StyleRuleBase"* [ %45, %44 ], [ %47, %46 ]
  %50 = icmp eq %"class.blink::StyleRuleBase"* %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %48
  call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* nonnull %7) #11
  %52 = load i32, i32* %26, align 8
  %53 = and i32 %52, 63
  %54 = icmp eq i32 %53, 31
  %55 = and i32 %52, 192
  %56 = icmp eq i32 %55, 128
  %57 = or i1 %54, %56
  %58 = select i1 %57, %"class.blink::StyleRuleBase"* %49, %"class.blink::StyleRuleBase"* null
  br label %59

59:                                               ; preds = %51, %48, %4
  %60 = phi %"class.blink::StyleRuleBase"* [ null, %4 ], [ null, %48 ], [ %58, %51 ]
  %61 = load i32, i32* %23, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !6

63:                                               ; preds = %59
  store i32 0, i32* %23, align 4
  br label %64

64:                                               ; preds = %63, %59
  %65 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %65, align 8
  %67 = bitcast i8* %20 to %"class.blink::CSSParserToken"*
  %68 = icmp eq %"class.blink::CSSParserToken"* %66, %67
  br i1 %68, label %71, label %69, !prof !7

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %70, %"class.blink::CSSParserToken"* %66) #11
  br label %71

71:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %19) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %18) #11
  %72 = load i32, i32* %12, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %73, label %75, label %77, !prof !6

75:                                               ; preds = %71
  %76 = bitcast i8* %9 to %"class.blink::CSSPropertyValue"*
  br label %108

77:                                               ; preds = %71
  %78 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %74, align 8
  %79 = icmp ne %"class.blink::CSSPropertyValue"* %78, null
  %80 = bitcast i8* %9 to %"class.blink::CSSPropertyValue"*
  %81 = icmp ne %"class.blink::CSSPropertyValue"* %78, %80
  %82 = and i1 %79, %81
  br i1 %82, label %108, label %83

83:                                               ; preds = %77
  %84 = zext i32 %72 to i64
  %85 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %78, i64 %84
  br label %86

86:                                               ; preds = %104, %83
  %87 = phi %"class.blink::CSSPropertyValue"* [ %105, %104 ], [ %78, %83 ]
  %88 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #11
  br label %104

104:                                              ; preds = %103, %100, %86
  %105 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %87, i64 1
  %106 = icmp eq %"class.blink::CSSPropertyValue"* %105, %85
  br i1 %106, label %107, label %86

107:                                              ; preds = %104
  store i32 0, i32* %12, align 4
  br label %108

108:                                              ; preds = %75, %107, %77
  %109 = phi %"class.blink::CSSPropertyValue"* [ %76, %75 ], [ %80, %107 ], [ %80, %77 ]
  %110 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %74, align 8
  %111 = icmp eq %"class.blink::CSSPropertyValue"* %110, %109
  br i1 %111, label %114, label %112, !prof !7

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %113, %"class.blink::CSSPropertyValue"* %110) #11
  br label %114

114:                                              ; preds = %108, %112
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %8) #11
  ret %"class.blink::StyleRuleBase"* %60
}

declare void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::CSSParserToken", align 8
  %10 = alloca %"class.blink::CSSParserToken", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::CSSParserToken", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = bitcast %"class.blink::CSSParserToken"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* nonnull sret %12, %"class.blink::CSSParserTokenStream"* %1) #11
  %15 = bitcast %"class.blink::CSSParserToken"* %12 to i32*
  %16 = load i32, i32* %15, align 8, !noalias !11
  %17 = and i32 %16, 262144
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 0, i32 2
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8, !noalias !11
  %22 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %12, i64 0, i32 1
  %23 = load i32, i32* %22, align 4, !noalias !11
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = select i1 %18, i64 %24, i64 %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %27 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %29 = bitcast i8** %28 to i64*
  store i64 %21, i64* %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %23, i32* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 3, i64 0
  %32 = bitcast i8* %31 to i32*
  store i32 -1431655766, i32* %32, align 4
  %33 = call i32 @_ZN5blink11CssAtRuleIDEN3WTF10StringViewE(%"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %13) #11
  %34 = icmp slt i32 %2, 2
  %35 = icmp eq i32 %33, 3
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %215

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  store i8 1, i8* %38, align 4
  %42 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %44 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %43, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %44) #11
  %45 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %46 = bitcast %"class.blink::CSSParserToken"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %42, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  br label %47

47:                                               ; preds = %41, %37
  %48 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %49 = bitcast %"class.blink::CSSParserToken"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, 63
  switch i32 %51, label %217 [
    i32 29, label %52
    i32 4, label %52
    i32 1, label %73
  ]

52:                                               ; preds = %47, %47
  %53 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #11
  %54 = bitcast %"class.blink::CSSParserToken"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  call void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* nonnull sret %9, %"class.blink::CSSParserTokenStream"* %1) #11
  %55 = bitcast %"class.blink::CSSParserToken"* %9 to i32*
  %56 = load i32, i32* %55, align 8, !noalias !14
  %57 = and i32 %56, 262144
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 0, i32 2
  %60 = bitcast i8** %59 to i64*
  %61 = load i64, i64* %60, align 8, !noalias !14
  %62 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 0, i32 1
  %63 = load i32, i32* %62, align 4, !noalias !14
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = select i1 %58, i64 %64, i64 %65
  %67 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %66, i64* %67, align 8, !alias.scope !14
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %69 = bitcast i8** %68 to i64*
  store i64 %61, i64* %69, align 8, !alias.scope !14
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %63, i32* %70, align 8, !alias.scope !14
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %8) #11
  %72 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  br label %217

73:                                               ; preds = %47
  %74 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 2
  %75 = bitcast i8** %74 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !17
  %77 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2, i32 1
  %78 = load i32, i32* %77, align 4, !noalias !17
  %79 = icmp eq i32 %78, 3
  br i1 %79, label %80, label %217

80:                                               ; preds = %73
  %81 = and i32 %50, 262144
  %82 = icmp eq i32 %81, 0
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %85 = select i1 %82, i64 %83, i64 %84
  %86 = inttoptr i64 %85 to %"class.WTF::StringImpl"*
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %111, label %91

91:                                               ; preds = %80
  %92 = inttoptr i64 %76 to i8*
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i64
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 117), align 1
  %99 = sext i8 %98 to i32
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %101, label %217

101:                                              ; preds = %91
  %102 = getelementptr inbounds i8, i8* %92, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %109 = sext i8 %108 to i32
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %147, label %217

111:                                              ; preds = %80
  %112 = inttoptr i64 %76 to i16*
  %113 = load i16, i16* %112, align 2
  %114 = add i16 %113, -65
  %115 = icmp ult i16 %114, 26
  %116 = zext i1 %115 to i16
  %117 = shl nuw nsw i16 %116, 5
  %118 = or i16 %117, %113
  %119 = zext i16 %118 to i32
  %120 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 117), align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %119, %121
  br i1 %122, label %123, label %217

123:                                              ; preds = %111
  %124 = getelementptr inbounds i16, i16* %112, i64 1
  %125 = load i16, i16* %124, align 2
  %126 = add i16 %125, -65
  %127 = icmp ult i16 %126, 26
  %128 = zext i1 %127 to i16
  %129 = shl nuw nsw i16 %128, 5
  %130 = or i16 %129, %125
  %131 = zext i16 %130 to i32
  %132 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %133 = sext i8 %132 to i32
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %135, label %217

135:                                              ; preds = %123
  %136 = getelementptr inbounds i16, i16* %112, i64 2
  %137 = load i16, i16* %136, align 2
  %138 = add i16 %137, -65
  %139 = icmp ult i16 %138, 26
  %140 = zext i1 %139 to i16
  %141 = shl nuw nsw i16 %140, 5
  %142 = or i16 %141, %137
  %143 = zext i16 %142 to i32
  %144 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %145 = sext i8 %144 to i32
  %146 = icmp eq i32 %143, %145
  br i1 %146, label %157, label %217

147:                                              ; preds = %101
  %148 = getelementptr inbounds i8, i8* %92, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = zext i8 %152 to i32
  %154 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %153, %155
  br i1 %156, label %157, label %217

157:                                              ; preds = %147, %135
  %158 = load i8, i8* %38, align 4, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %165

160:                                              ; preds = %157
  store i8 1, i8* %38, align 4
  %161 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %161) #11
  %162 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %163 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %162, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %163) #11
  %164 = bitcast %"class.blink::CSSParserToken"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %161, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %161) #11
  br label %165

165:                                              ; preds = %160, %157
  store i8 0, i8* %38, align 4
  %166 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %167 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %167, i64 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %167, i64 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* %168, align 4
  %172 = icmp ult i32 %170, %171
  %173 = select i1 %172, i32 %170, i32 %171
  %174 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %173, i32* %174, align 8
  %175 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %176 = bitcast %"class.blink::CSSParserToken"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #11
  call void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* nonnull sret %10, %"class.blink::CSSParserTokenStream"* %1) #11
  %177 = bitcast %"class.blink::CSSParserToken"* %10 to i32*
  %178 = load i32, i32* %177, align 8
  %179 = and i32 %178, 63
  %180 = icmp eq i32 %179, 30
  br i1 %180, label %206, label %181

181:                                              ; preds = %165
  %182 = load i32, i32* %49, align 8
  %183 = and i32 %182, 63
  %184 = icmp eq i32 %183, 31
  %185 = and i32 %182, 192
  %186 = icmp eq i32 %185, 128
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %206

188:                                              ; preds = %181
  %189 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #11
  %190 = and i32 %178, 262144
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %10, i64 0, i32 2
  %193 = bitcast i8** %192 to i64*
  %194 = load i64, i64* %193, align 8, !noalias !20
  %195 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %10, i64 0, i32 1
  %196 = load i32, i32* %195, align 4, !noalias !20
  %197 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %198 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %199 = select i1 %191, i64 %197, i64 %198
  %200 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %199, i64* %200, align 8, !alias.scope !20
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %202 = bitcast i8** %201 to i64*
  store i64 %194, i64* %202, align 8, !alias.scope !20
  %203 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %196, i32* %203, align 8, !alias.scope !20
  %204 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %11) #11
  %205 = ptrtoint %"class.WTF::StringImpl"* %204 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #11
  br label %206

206:                                              ; preds = %188, %181, %165
  %207 = phi i64 [ %205, %188 ], [ 0, %181 ], [ 0, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #11
  %208 = load i8, i8* %38, align 4, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %214

210:                                              ; preds = %206
  store i8 1, i8* %38, align 4
  %211 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #11
  %212 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %166, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %212) #11
  %213 = bitcast %"class.blink::CSSParserToken"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* nonnull align 8 %211, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #11
  br label %214

214:                                              ; preds = %210, %206
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %217

215:                                              ; preds = %3
  %216 = icmp eq i32 %33, 0
  br i1 %216, label %225, label %217

217:                                              ; preds = %47, %52, %73, %91, %101, %111, %123, %135, %147, %214, %215
  %218 = phi i64 [ 0, %215 ], [ %72, %52 ], [ %207, %214 ], [ 0, %135 ], [ 0, %147 ], [ 0, %73 ], [ 0, %111 ], [ 0, %123 ], [ 0, %91 ], [ 0, %101 ], [ 0, %47 ]
  %219 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %220 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %220, i64 0, i32 13, i32 0, i32 0
  %222 = load %"class.blink::Document"*, %"class.blink::Document"** %221, align 8
  %223 = icmp eq %"class.blink::Document"* %222, null
  br i1 %223, label %225, label %224

224:                                              ; preds = %217
  call void @_ZN5blink11CountAtRuleEPKNS_16CSSParserContextENS_11CSSAtRuleIDE(%"class.blink::CSSParserContext"* %220, i32 %33) #11
  br label %225

225:                                              ; preds = %217, %215, %224
  %226 = phi i64 [ 0, %215 ], [ %218, %224 ], [ %218, %217 ]
  %227 = add i32 %2, -4
  %228 = icmp ult i32 %227, 3
  br i1 %228, label %229, label %230

229:                                              ; preds = %225
  call void @_ZN5blink22ConsumeErroneousAtRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  br label %335

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %232 = load i8, i8* %231, align 4, !range !2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %240

234:                                              ; preds = %230
  store i8 1, i8* %231, align 4
  %235 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #11
  %236 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %237 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %236, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %237) #11
  %238 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %239 = bitcast %"class.blink::CSSParserToken"* %238 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* nonnull align 8 %235, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #11
  br label %240

240:                                              ; preds = %230, %234
  %241 = icmp eq i32 %2, 0
  %242 = icmp eq i32 %33, 1
  %243 = and i1 %241, %242
  br i1 %243, label %244, label %288

244:                                              ; preds = %240
  %245 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %246 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %245, 0
  %247 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %245, 1
  %248 = call zeroext i1 @_ZN5blink40ConsumeEndOfPreludeForAtRuleWithoutBlockERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1) #11
  br i1 %248, label %249, label %285

249:                                              ; preds = %244
  %250 = icmp eq %"class.blink::CSSParserToken"* %246, %247
  %251 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %252 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %246, i64 1
  %253 = select i1 %250, %"class.blink::CSSParserToken"* %246, %"class.blink::CSSParserToken"* %252
  %254 = select i1 %250, %"class.blink::CSSParserToken"* %251, %"class.blink::CSSParserToken"* %246
  %255 = icmp ult %"class.blink::CSSParserToken"* %253, %247
  %256 = select i1 %255, %"class.blink::CSSParserToken"* %253, %"class.blink::CSSParserToken"* %251
  %257 = bitcast %"class.blink::CSSParserToken"* %256 to i32*
  %258 = load i32, i32* %257, align 8
  %259 = and i32 %258, 63
  %260 = icmp eq i32 %259, 17
  br i1 %260, label %261, label %270

261:                                              ; preds = %249, %261
  %262 = phi %"class.blink::CSSParserToken"* [ %263, %261 ], [ %253, %249 ]
  %263 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %262, i64 1
  %264 = icmp ult %"class.blink::CSSParserToken"* %263, %247
  %265 = select i1 %264, %"class.blink::CSSParserToken"* %263, %"class.blink::CSSParserToken"* %251
  %266 = bitcast %"class.blink::CSSParserToken"* %265 to i32*
  %267 = load i32, i32* %266, align 8
  %268 = and i32 %267, 63
  %269 = icmp eq i32 %268, 17
  br i1 %269, label %261, label %270

270:                                              ; preds = %261, %249
  %271 = phi %"class.blink::CSSParserToken"* [ %253, %249 ], [ %263, %261 ]
  %272 = bitcast %"class.blink::CSSParserToken"* %254 to i32*
  %273 = load i32, i32* %272, align 8
  %274 = and i32 %273, 63
  %275 = icmp eq i32 %274, 29
  %276 = icmp eq %"class.blink::CSSParserToken"* %271, %247
  %277 = and i1 %276, %275
  br i1 %277, label %278, label %285

278:                                              ; preds = %270
  %279 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 1) #11
  %280 = bitcast i8* %279 to %"class.blink::StyleRuleCharset"*
  store i8 0, i8* %279, align 1
  %281 = getelementptr inbounds i8, i8* %279, i64 -4
  %282 = bitcast i8* %281 to i16*
  %283 = load atomic i16, i16* %282 monotonic, align 2
  %284 = or i16 %283, 1
  store atomic i16 %284, i16* %282 release, align 2
  br label %285

285:                                              ; preds = %244, %270, %278
  %286 = phi %"class.blink::StyleRuleCharset"* [ null, %244 ], [ %280, %278 ], [ null, %270 ]
  %287 = getelementptr inbounds %"class.blink::StyleRuleCharset", %"class.blink::StyleRuleCharset"* %286, i64 0, i32 0
  br label %335

288:                                              ; preds = %240
  br i1 %36, label %289, label %293

289:                                              ; preds = %288
  %290 = inttoptr i64 %226 to %"class.WTF::StringImpl"*
  %291 = call %"class.blink::StyleRuleImport"* @_ZN5blink13CSSParserImpl17ConsumeImportRuleEN3WTF12AtomicStringERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.WTF::StringImpl"* %290, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %292 = getelementptr inbounds %"class.blink::StyleRuleImport", %"class.blink::StyleRuleImport"* %291, i64 0, i32 0
  br label %352

293:                                              ; preds = %288
  %294 = icmp slt i32 %2, 3
  %295 = icmp eq i32 %33, 6
  %296 = and i1 %294, %295
  br i1 %296, label %297, label %300

297:                                              ; preds = %293
  %298 = call %"class.blink::StyleRuleNamespace"* @_ZN5blink13CSSParserImpl20ConsumeNamespaceRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* undef, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %299 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %298, i64 0, i32 0
  br label %335

300:                                              ; preds = %293
  switch i32 %33, label %334 [
    i32 9, label %301
    i32 5, label %304
    i32 12, label %307
    i32 13, label %310
    i32 2, label %313
    i32 14, label %316
    i32 4, label %319
    i32 7, label %322
    i32 8, label %325
    i32 11, label %328
    i32 10, label %331
  ]

301:                                              ; preds = %300
  %302 = call %"class.blink::StyleRuleContainer"* @_ZN5blink13CSSParserImpl20ConsumeContainerRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %303 = getelementptr inbounds %"class.blink::StyleRuleContainer", %"class.blink::StyleRuleContainer"* %302, i64 0, i32 0, i32 0, i32 0
  br label %335

304:                                              ; preds = %300
  %305 = call %"class.blink::StyleRuleMedia"* @_ZN5blink13CSSParserImpl16ConsumeMediaRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %306 = getelementptr inbounds %"class.blink::StyleRuleMedia", %"class.blink::StyleRuleMedia"* %305, i64 0, i32 0, i32 0, i32 0
  br label %335

307:                                              ; preds = %300
  %308 = call %"class.blink::StyleRuleSupports"* @_ZN5blink13CSSParserImpl19ConsumeSupportsRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %309 = getelementptr inbounds %"class.blink::StyleRuleSupports", %"class.blink::StyleRuleSupports"* %308, i64 0, i32 0, i32 0, i32 0
  br label %335

310:                                              ; preds = %300
  %311 = call %"class.blink::StyleRuleViewport"* @_ZN5blink13CSSParserImpl19ConsumeViewportRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %312 = getelementptr inbounds %"class.blink::StyleRuleViewport", %"class.blink::StyleRuleViewport"* %311, i64 0, i32 0
  br label %335

313:                                              ; preds = %300
  %314 = call %"class.blink::StyleRuleFontFace"* @_ZN5blink13CSSParserImpl19ConsumeFontFaceRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %315 = getelementptr inbounds %"class.blink::StyleRuleFontFace", %"class.blink::StyleRuleFontFace"* %314, i64 0, i32 0
  br label %335

316:                                              ; preds = %300
  %317 = call %"class.blink::StyleRuleKeyframes"* @_ZN5blink13CSSParserImpl20ConsumeKeyframesRuleEbRNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, i1 zeroext true, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %318 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %317, i64 0, i32 0
  br label %335

319:                                              ; preds = %300
  %320 = call %"class.blink::StyleRuleKeyframes"* @_ZN5blink13CSSParserImpl20ConsumeKeyframesRuleEbRNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, i1 zeroext false, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %321 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %320, i64 0, i32 0
  br label %335

322:                                              ; preds = %300
  %323 = call %"class.blink::StyleRulePage"* @_ZN5blink13CSSParserImpl15ConsumePageRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %324 = getelementptr inbounds %"class.blink::StyleRulePage", %"class.blink::StyleRulePage"* %323, i64 0, i32 0
  br label %335

325:                                              ; preds = %300
  %326 = call %"class.blink::StyleRuleProperty"* @_ZN5blink13CSSParserImpl19ConsumePropertyRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %327 = getelementptr inbounds %"class.blink::StyleRuleProperty", %"class.blink::StyleRuleProperty"* %326, i64 0, i32 0
  br label %335

328:                                              ; preds = %300
  %329 = call %"class.blink::StyleRuleScrollTimeline"* @_ZN5blink13CSSParserImpl25ConsumeScrollTimelineRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %330 = getelementptr inbounds %"class.blink::StyleRuleScrollTimeline", %"class.blink::StyleRuleScrollTimeline"* %329, i64 0, i32 0
  br label %335

331:                                              ; preds = %300
  %332 = call %"class.blink::StyleRuleCounterStyle"* @_ZN5blink13CSSParserImpl23ConsumeCounterStyleRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %333 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %332, i64 0, i32 0
  br label %335

334:                                              ; preds = %300
  call void @_ZN5blink22ConsumeErroneousAtRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  br label %335

335:                                              ; preds = %334, %331, %328, %325, %322, %319, %316, %313, %310, %307, %304, %301, %297, %285, %229
  %336 = phi %"class.blink::StyleRuleBase"* [ null, %229 ], [ %287, %285 ], [ %299, %297 ], [ null, %334 ], [ %333, %331 ], [ %330, %328 ], [ %327, %325 ], [ %324, %322 ], [ %321, %319 ], [ %318, %316 ], [ %315, %313 ], [ %312, %310 ], [ %309, %307 ], [ %306, %304 ], [ %303, %301 ]
  %337 = inttoptr i64 %226 to %"class.WTF::StringImpl"*
  %338 = icmp eq i64 %226, 0
  br i1 %338, label %352, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #11
  br label %352

352:                                              ; preds = %289, %335, %348, %351
  %353 = phi %"class.blink::StyleRuleBase"* [ %292, %289 ], [ %336, %335 ], [ %336, %348 ], [ %336, %351 ]
  ret %"class.blink::StyleRuleBase"* %353
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.blink::CSSParserToken", align 8
  %9 = alloca %"class.blink::CSSParserToken", align 8
  %10 = alloca %"class.blink::CSSParserToken", align 8
  %11 = alloca %"class.blink::CSSParserToken", align 8
  %12 = alloca %"class.blink::CSSParserToken", align 8
  %13 = alloca %"class.blink::CSSParserToken", align 8
  %14 = alloca %"struct.blink::CSSParserImpl::RangeOffset", align 4
  %15 = icmp slt i32 %2, 4
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = tail call %"class.blink::StyleRule"* @_ZN5blink13CSSParserImpl16ConsumeStyleRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %18 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %17, i64 0, i32 0
  br label %197

19:                                               ; preds = %3
  switch i32 %2, label %197 [
    i32 4, label %20
    i32 5, label %92
  ]

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  store i8 1, i8* %21, align 4
  %25 = bitcast %"class.blink::CSSParserToken"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %27 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %13, %"class.blink::CSSTokenizer"* %27) #11
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %25, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  br label %30

30:                                               ; preds = %20, %24
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %32 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %32, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  %35 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1)
  %36 = bitcast %"struct.blink::CSSParserImpl::RangeOffset"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"struct.blink::CSSParserImpl::RangeOffset", %"struct.blink::CSSParserImpl::RangeOffset"* %14, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.blink::CSSParserImpl::RangeOffset", %"struct.blink::CSSParserImpl::RangeOffset"* %14, i64 0, i32 1
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  store i32 %34, i32* %37, align 4
  store i32 %41, i32* %38, align 4
  %42 = load i8, i8* %21, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %48

44:                                               ; preds = %30
  store i8 1, i8* %21, align 4
  %45 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %11, %"class.blink::CSSTokenizer"* %39) #11
  %46 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %47 = bitcast %"class.blink::CSSParserToken"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %45, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  br label %48

48:                                               ; preds = %30, %44
  %49 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %50 = bitcast %"class.blink::CSSParserToken"* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 63
  %53 = icmp eq i32 %52, 31
  %54 = and i32 %51, 192
  %55 = icmp eq i32 %54, 128
  %56 = or i1 %53, %55
  br i1 %56, label %90, label %57

57:                                               ; preds = %48
  %58 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %35, 1
  %59 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %35, 0
  %60 = load i8, i8* %21, align 4, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  store i8 1, i8* %21, align 4
  %63 = bitcast %"class.blink::CSSParserToken"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %10, %"class.blink::CSSTokenizer"* %64) #11
  %65 = bitcast %"class.blink::CSSParserToken"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %63, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  br label %66

66:                                               ; preds = %57, %62
  store i8 0, i8* %21, align 4
  %67 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  %68 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %67, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %67, i64 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %68, align 4
  %72 = icmp ult i32 %70, %71
  %73 = select i1 %72, i32 %70, i32 %71
  %74 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %73, i32* %74, align 8
  %75 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %76 = call %"class.blink::StyleRuleKeyframe"* @_ZN5blink13CSSParserImpl24ConsumeKeyframeStyleRuleENS_19CSSParserTokenRangeERKNS0_11RangeOffsetERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserToken"* %59, %"class.blink::CSSParserToken"* %58, %"struct.blink::CSSParserImpl::RangeOffset"* nonnull dereferenceable(8) %14, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  %77 = icmp eq %"class.blink::StyleRuleKeyframe"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %66
  %79 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %80 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %79, align 8
  call void @_ZNK5blink16CSSParserContext39ReportLayoutAnimationsViolationIfNeededERKNS_17StyleRuleKeyframeE(%"class.blink::CSSParserContext"* %80, %"class.blink::StyleRuleKeyframe"* nonnull dereferenceable(32) %76) #11
  br label %81

81:                                               ; preds = %66, %78
  %82 = getelementptr inbounds %"class.blink::StyleRuleKeyframe", %"class.blink::StyleRuleKeyframe"* %76, i64 0, i32 0
  %83 = load i8, i8* %21, align 4, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  store i8 1, i8* %21, align 4
  %86 = bitcast %"class.blink::CSSParserToken"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %9, %"class.blink::CSSTokenizer"* %87) #11
  %88 = bitcast %"class.blink::CSSParserToken"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* nonnull align 8 %86, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  br label %89

89:                                               ; preds = %81, %85
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %90

90:                                               ; preds = %48, %89
  %91 = phi %"class.blink::StyleRuleBase"* [ %82, %89 ], [ null, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %197

92:                                               ; preds = %19
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %93 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %94 = load i8, i8* %93, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  store i8 1, i8* %93, align 4
  %97 = bitcast %"class.blink::CSSParserToken"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #11
  %98 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %99 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %98, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %8, %"class.blink::CSSTokenizer"* %99) #11
  %100 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %101 = bitcast %"class.blink::CSSParserToken"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* nonnull align 8 %97, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #11
  br label %102

102:                                              ; preds = %92, %96
  %103 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %104 = bitcast %"class.blink::CSSParserToken"* %103 to i32*
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 63
  %107 = icmp eq i32 %106, 31
  %108 = and i32 %105, 192
  %109 = icmp eq i32 %108, 128
  %110 = or i1 %107, %109
  br i1 %110, label %197, label %111

111:                                              ; preds = %102
  %112 = load i8, i8* %93, align 4, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %121

114:                                              ; preds = %111
  store i8 1, i8* %93, align 4
  %115 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %117 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %116, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %117) #11
  %118 = bitcast %"class.blink::CSSParserToken"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %115, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  %119 = load i32, i32* %104, align 8
  %120 = and i32 %119, 63
  br label %121

121:                                              ; preds = %111, %114
  %122 = phi i32 [ %106, %111 ], [ %120, %114 ]
  %123 = icmp eq i32 %122, 27
  br i1 %123, label %157, label %124

124:                                              ; preds = %121
  %125 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %126 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %127 = bitcast %"class.blink::CSSParserToken"* %103 to i8*
  br label %128

128:                                              ; preds = %124, %141
  %129 = load i8, i8* %93, align 4, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  store i8 1, i8* %93, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #11
  %132 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %126, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %132) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %125, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #11
  br label %133

133:                                              ; preds = %128, %131
  %134 = load i32, i32* %104, align 8
  %135 = and i32 %134, 59
  %136 = and i32 %134, 192
  %137 = icmp ne i32 %136, 128
  %138 = or i32 %135, 4
  %139 = icmp ne i32 %138, 31
  %140 = and i1 %137, %139
  br i1 %140, label %141, label %142

141:                                              ; preds = %133
  call void @_ZN5blink20CSSParserTokenStream30UncheckedConsumeComponentValueEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %128

142:                                              ; preds = %133
  %143 = load i8, i8* %93, align 4, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %150

145:                                              ; preds = %142
  store i8 1, i8* %93, align 4
  %146 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #11
  %147 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %126, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %147) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %146, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #11
  %148 = load i32, i32* %104, align 8
  %149 = and i32 %148, 192
  br label %150

150:                                              ; preds = %142, %145
  %151 = phi i32 [ %136, %142 ], [ %149, %145 ]
  %152 = phi i32 [ %134, %142 ], [ %148, %145 ]
  %153 = and i32 %152, 63
  %154 = icmp eq i32 %153, 31
  %155 = icmp eq i32 %151, 128
  %156 = or i1 %154, %155
  br i1 %156, label %197, label %157

157:                                              ; preds = %121, %150
  %158 = phi i1 [ true, %150 ], [ false, %121 ]
  %159 = load i8, i8* %93, align 4, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %166

161:                                              ; preds = %157
  store i8 1, i8* %93, align 4
  %162 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  %163 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %164 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %163, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %164) #11
  %165 = bitcast %"class.blink::CSSParserToken"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* nonnull align 8 %162, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  br label %166

166:                                              ; preds = %157, %161
  store i8 0, i8* %93, align 4
  %167 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %168 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %168, i64 0, i32 0, i32 0
  %170 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %168, i64 0, i32 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* %169, align 4
  %173 = icmp ult i32 %171, %172
  %174 = select i1 %173, i32 %171, i32 %172
  %175 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %174, i32* %175, align 8
  %176 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br i1 %158, label %188, label %177

177:                                              ; preds = %166
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 4)
  %178 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %179 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %178, i8 zeroext 4)
  %180 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 16) #11
  %181 = bitcast i8* %180 to %"class.blink::StyleRuleFontFace"*
  %182 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %179, i64 0, i32 0
  call void @_ZN5blink17StyleRuleFontFaceC1EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleFontFace"* %181, %"class.blink::CSSPropertyValueSet"* %182) #11
  %183 = getelementptr inbounds i8, i8* %180, i64 -4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 monotonic, align 2
  %186 = or i16 %185, 1
  store atomic i16 %186, i16* %184 release, align 2
  %187 = bitcast i8* %180 to %"class.blink::StyleRuleBase"*
  br label %188

188:                                              ; preds = %166, %177
  %189 = phi %"class.blink::StyleRuleBase"* [ %187, %177 ], [ null, %166 ]
  %190 = load i8, i8* %93, align 4, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %188
  store i8 1, i8* %93, align 4
  %193 = bitcast %"class.blink::CSSParserToken"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #11
  %194 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %167, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %12, %"class.blink::CSSTokenizer"* %194) #11
  %195 = bitcast %"class.blink::CSSParserToken"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* nonnull align 8 %193, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #11
  br label %196

196:                                              ; preds = %188, %192
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %197

197:                                              ; preds = %19, %196, %150, %102, %90, %16
  %198 = phi %"class.blink::StyleRuleBase"* [ %18, %16 ], [ %91, %90 ], [ null, %102 ], [ %189, %196 ], [ null, %150 ], [ null, %19 ]
  ret %"class.blink::StyleRuleBase"* %198
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEb(%"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.blink::CSSTokenizer", align 8
  %12 = alloca %"class.blink::CSSParserTokenStream", align 8
  %13 = alloca %"class.blink::CSSParserImpl", align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = load atomic i64, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic258 monotonic, align 8
  %17 = inttoptr i64 %16 to i8*
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %22, !prof !6

19:                                               ; preds = %5
  %20 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #11
  %21 = ptrtoint i8* %20 to i64
  store atomic volatile i64 %21, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic258 monotonic, align 8
  br label %22

22:                                               ; preds = %19, %5
  %23 = phi i8* [ %20, %19 ], [ %17, %5 ]
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, 25
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %41, label %27, !prof !7

27:                                               ; preds = %22
  %28 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %1, i64 0, i32 0, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* %29, i32 0) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  %30 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %1, i64 0, i32 3
  %31 = load i8, i8* %30, align 1
  store i8 %31, i8* %10, align 1
  %32 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN5blink13CSSParserModeEEEN4base11trace_event16TraceEventHandleEcPKhPKcSG_yjySG_OT_SG_OT0_(i8 signext 66, i8* %23, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* nonnull dereferenceable(1) %10)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  %33 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %27, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br label %41

41:                                               ; preds = %22, %40
  %42 = load atomic i64, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic261 monotonic, align 8
  %43 = inttoptr i64 %42 to i8*
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %45, label %48, !prof !6

45:                                               ; preds = %41
  %46 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #11
  %47 = ptrtoint i8* %46 to i64
  store atomic volatile i64 %47, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic261 monotonic, align 8
  br label %48

48:                                               ; preds = %45, %41
  %49 = phi i8* [ %46, %45 ], [ %43, %41 ]
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 25
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %59, label %53, !prof !7

53:                                               ; preds = %48
  %54 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %55 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %57 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %57, i64* %56, align 8
  %58 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* %49, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %54, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %59

59:                                               ; preds = %48, %53
  %60 = bitcast %"class.blink::CSSTokenizer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %60) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %11, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %61 = bitcast %"class.blink::CSSParserTokenStream"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %61) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %62 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 0, i32 0, i32 1, i64 0
  %63 = bitcast %"class.blink::CSSParserTokenStream"* %12 to i8**
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %64, align 8
  %65 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %11, %"class.blink::CSSTokenizer"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 2
  %68 = bitcast %"class.blink::CSSParserToken"* %67 to i32*
  store i32 11184671, i32* %68, align 8
  %69 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 3
  store i32 0, i32* %69, align 8
  %70 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 4
  store i8 0, i8* %70, align 4
  %71 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 6
  store i32 31, i32* %71, align 8
  %72 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %73 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  %75 = bitcast %"class.blink::CSSParserTokenStream"* %12 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = udiv i64 %72, 24
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %64, align 8
  %78 = bitcast %"class.blink::CSSParserImpl"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %80 = bitcast %"class.blink::CSSParserImpl"* %13 to i8**
  store i8* %79, i8** %80, align 8
  %81 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %81, align 8
  %82 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %83 = bitcast i32* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 6148, i1 false) #11
  %84 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 2
  store %"class.blink::StyleSheetContents"* %2, %"class.blink::StyleSheetContents"** %85, align 8
  %86 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 3
  %87 = bitcast %"class.blink::CSSParserObserver"** %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #11
  %88 = icmp eq i32 %3, 1
  br i1 %88, label %89, label %99

89:                                               ; preds = %59
  %90 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSLazyParsingStateEEEPhm(i64 40) #11
  %91 = bitcast i8* %90 to %"class.blink::CSSLazyParsingState"*
  %92 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %85, align 8
  call void @_ZN5blink19CSSLazyParsingStateC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_18StyleSheetContentsE(%"class.blink::CSSLazyParsingState"* %91, %"class.blink::CSSParserContext"* %1, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::StyleSheetContents"* %92) #11
  %93 = getelementptr inbounds i8, i8* %90, i64 -4
  %94 = bitcast i8* %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = or i16 %95, 1
  store atomic i16 %96, i16* %94 release, align 2
  %97 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 4
  %98 = bitcast %"class.blink::CSSLazyParsingState"** %97 to i8**
  store i8* %90, i8** %98, align 8
  br label %99

99:                                               ; preds = %89, %59
  %100 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %101 = bitcast %"class.blink::CSSParserToken"* %67 to i8*
  br label %103

102:                                              ; preds = %171, %170
  br label %103

103:                                              ; preds = %102, %99
  %104 = phi i32 [ 0, %99 ], [ 1, %102 ]
  %105 = phi i32 [ 0, %99 ], [ %169, %102 ]
  %106 = phi i8 [ 0, %99 ], [ %156, %102 ]
  %107 = phi i8 [ 0, %99 ], [ %157, %102 ]
  br label %108

108:                                              ; preds = %174, %103
  %109 = phi i32 [ %105, %103 ], [ %169, %174 ]
  %110 = phi i8 [ %106, %103 ], [ %156, %174 ]
  %111 = phi i8 [ %107, %103 ], [ %157, %174 ]
  br label %112

112:                                              ; preds = %108, %150
  %113 = phi i8 [ %110, %108 ], [ %156, %150 ]
  %114 = phi i8 [ %111, %108 ], [ %157, %150 ]
  br label %115

115:                                              ; preds = %146, %112
  %116 = load i8, i8* %70, align 4, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  store i8 1, i8* %70, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %119 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %66, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %119) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* nonnull align 8 %100, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  br label %120

120:                                              ; preds = %118, %115
  %121 = load i32, i32* %68, align 8
  %122 = and i32 %121, 63
  %123 = icmp eq i32 %122, 31
  %124 = and i32 %121, 192
  %125 = icmp eq i32 %124, 128
  %126 = or i1 %123, %125
  br i1 %126, label %175, label %127

127:                                              ; preds = %120
  switch i32 %122, label %148 [
    i32 17, label %128
    i32 2, label %136
    i32 18, label %138
    i32 19, label %138
  ]

128:                                              ; preds = %127
  store i8 0, i8* %70, align 4
  %129 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %66, align 8
  %130 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %129, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %129, i64 0, i32 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = load i32, i32* %130, align 4
  %134 = icmp ult i32 %132, %133
  %135 = select i1 %134, i32 %132, i32 %133
  br label %146

136:                                              ; preds = %127
  %137 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* nonnull %13, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %12, i32 %109) #11
  br label %150

138:                                              ; preds = %127, %127
  store i8 0, i8* %70, align 4
  %139 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %66, align 8
  %140 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %139, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %139, i64 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = load i32, i32* %140, align 4
  %144 = icmp ult i32 %142, %143
  %145 = select i1 %144, i32 %142, i32 %143
  br label %146

146:                                              ; preds = %138, %128
  %147 = phi i32 [ %145, %138 ], [ %135, %128 ]
  store i32 %147, i32* %69, align 8
  br label %115

148:                                              ; preds = %127
  %149 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* nonnull %13, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %12, i32 %109) #11
  br label %150

150:                                              ; preds = %148, %136
  %151 = phi %"class.blink::StyleRuleBase"* [ %149, %148 ], [ %137, %136 ]
  %152 = and i8 %113, 1
  %153 = icmp eq i8 %152, 0
  %154 = icmp ne %"class.blink::StyleRuleBase"* %151, null
  %155 = zext i1 %154 to i8
  %156 = select i1 %153, i8 1, i8 %113
  %157 = select i1 %153, i8 %155, i8 %114
  %158 = icmp eq %"class.blink::StyleRuleBase"* %151, null
  br i1 %158, label %112, label %159

159:                                              ; preds = %150
  %160 = add i32 %109, -4
  %161 = icmp ult i32 %160, 3
  %162 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %151, i64 0, i32 0
  %163 = load i8, i8* %162, align 1
  br i1 %161, label %168, label %164

164:                                              ; preds = %159
  switch i8 %163, label %165 [
    i8 0, label %168
    i8 2, label %168
  ]

165:                                              ; preds = %164
  %166 = icmp eq i8 %163, 9
  %167 = select i1 %166, i32 2, i32 3
  br label %168

168:                                              ; preds = %165, %164, %164, %159
  %169 = phi i32 [ 1, %164 ], [ %167, %165 ], [ 1, %164 ], [ %109, %159 ]
  switch i8 %163, label %173 [
    i8 0, label %174
    i8 2, label %170
  ]

170:                                              ; preds = %168
  br i1 %4, label %171, label %102

171:                                              ; preds = %170
  %172 = call zeroext i1 @_ZNK5blink16CSSParserContext23IsForMarkupSanitizationEv(%"class.blink::CSSParserContext"* %1) #11
  br i1 %172, label %102, label %173

173:                                              ; preds = %171, %168
  call void @_ZN5blink18StyleSheetContents16ParserAppendRuleEPNS_13StyleRuleBaseE(%"class.blink::StyleSheetContents"* %2, %"class.blink::StyleRuleBase"* nonnull %151) #11
  br label %174

174:                                              ; preds = %173, %168
  br label %108

175:                                              ; preds = %120
  %176 = and i8 %114, 1
  %177 = icmp ne i8 %176, 0
  call void @_ZN5blink18StyleSheetContents33SetHasSyntacticallyValidCSSHeaderEb(%"class.blink::StyleSheetContents"* %2, i1 zeroext %177) #11
  %178 = load atomic i64, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic285 monotonic, align 8
  %179 = inttoptr i64 %178 to i8*
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %181, label %184, !prof !6

181:                                              ; preds = %175
  %182 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #11
  %183 = ptrtoint i8* %182 to i64
  store atomic volatile i64 %183, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic285 monotonic, align 8
  br label %184

184:                                              ; preds = %181, %175
  %185 = phi i8* [ %182, %181 ], [ %179, %175 ]
  %186 = load i8, i8* %185, align 1
  %187 = and i8 %186, 25
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %195, label %189, !prof !7

189:                                              ; preds = %184
  %190 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %191 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #11
  %192 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %193 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %193, i64* %192, align 8
  %194 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 69, i8* %185, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %190, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #11
  br label %195

195:                                              ; preds = %184, %189
  %196 = load atomic i64, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic289 monotonic, align 8
  %197 = inttoptr i64 %196 to i8*
  %198 = icmp eq i64 %196, 0
  br i1 %198, label %199, label %202, !prof !6

199:                                              ; preds = %195
  %200 = call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #11
  %201 = ptrtoint i8* %200 to i64
  store atomic volatile i64 %201, i64* @_ZZN5blink13CSSParserImpl15ParseStyleSheetERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsENS_23CSSDeferPropertyParsingEbE28trace_event_unique_atomic289 monotonic, align 8
  br label %202

202:                                              ; preds = %199, %195
  %203 = phi i8* [ %200, %199 ], [ %197, %195 ]
  %204 = load i8, i8* %203, align 1
  %205 = and i8 %204, 25
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %220, label %207, !prof !7

207:                                              ; preds = %202
  %208 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %208) #11
  %209 = call i32 @_ZN5blink12CSSTokenizer10TokenCountEv(%"class.blink::CSSTokenizer"* nonnull %11) #11
  store i32 %209, i32* %14, align 4
  %210 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210) #11
  %211 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %207
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 1
  %216 = load i32, i32* %215, align 4
  br label %217

217:                                              ; preds = %207, %214
  %218 = phi i32 [ %216, %214 ], [ 0, %207 ]
  store i32 %218, i32* %15, align 4
  %219 = call i64 @_ZN20trace_event_internal13AddTraceEventIjjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 69, i8* %203, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32* nonnull dereferenceable(4) %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32* nonnull dereferenceable(4) %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208) #11
  br label %220

220:                                              ; preds = %202, %217
  %221 = load i32, i32* %82, align 4
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %222, label %224, label %226, !prof !6

224:                                              ; preds = %220
  %225 = bitcast i8* %79 to %"class.blink::CSSPropertyValue"*
  br label %257

226:                                              ; preds = %220
  %227 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %223, align 8
  %228 = icmp ne %"class.blink::CSSPropertyValue"* %227, null
  %229 = bitcast i8* %79 to %"class.blink::CSSPropertyValue"*
  %230 = icmp ne %"class.blink::CSSPropertyValue"* %227, %229
  %231 = and i1 %228, %230
  br i1 %231, label %257, label %232

232:                                              ; preds = %226
  %233 = zext i32 %221 to i64
  %234 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %227, i64 %233
  br label %235

235:                                              ; preds = %253, %232
  %236 = phi %"class.blink::CSSPropertyValue"* [ %254, %253 ], [ %227, %232 ]
  %237 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %236, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #11
  br label %253

253:                                              ; preds = %252, %249, %235
  %254 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %236, i64 1
  %255 = icmp eq %"class.blink::CSSPropertyValue"* %254, %234
  br i1 %255, label %256, label %235

256:                                              ; preds = %253
  store i32 0, i32* %82, align 4
  br label %257

257:                                              ; preds = %224, %256, %226
  %258 = phi %"class.blink::CSSPropertyValue"* [ %225, %224 ], [ %229, %256 ], [ %229, %226 ]
  %259 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %223, align 8
  %260 = icmp eq %"class.blink::CSSPropertyValue"* %259, %258
  br i1 %260, label %263, label %261, !prof !7

261:                                              ; preds = %257
  %262 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %13, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %262, %"class.blink::CSSPropertyValue"* %259) #11
  br label %263

263:                                              ; preds = %257, %261
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %78) #11
  %264 = load i32, i32* %65, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %267, label %266, !prof !6

266:                                              ; preds = %263
  store i32 0, i32* %65, align 4
  br label %267

267:                                              ; preds = %266, %263
  %268 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %269 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %268, align 8
  %270 = bitcast i8* %62 to %"class.blink::CSSParserToken"*
  %271 = icmp eq %"class.blink::CSSParserToken"* %269, %270
  br i1 %271, label %274, label %272, !prof !7

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %12, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %273, %"class.blink::CSSParserToken"* %269) #11
  br label %274

274:                                              ; preds = %267, %272
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %61) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %60) #11
  ret i32 %104
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN5blink13CSSParserModeEEEN4base11trace_event16TraceEventHandleEcPKhPKcSG_yjySG_OT_SG_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i8* dereferenceable(1)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247569150, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %30 = select i1 %26, i8* %28, i8* %29
  %31 = bitcast %"union.base::trace_event::TraceValue"* %22 to i8**
  store i8* %30, i8** %31, align 8
  %32 = load i8, i8* %10, align 1
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %33, i64* %34, align 8
  %35 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %36 = load i8, i8* %18, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %11, %67
  %39 = phi i64 [ %68, %67 ], [ 0, %11 ]
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %54

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %45 = bitcast %"union.base::trace_event::TraceValue"* %44 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %46 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %46 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %46) #11
  %53 = load i8, i8* %40, align 1
  br label %54

54:                                               ; preds = %48, %38
  %55 = phi i8 [ %41, %38 ], [ %53, %48 ]
  %56 = icmp eq i8 %55, 9
  br i1 %56, label %57, label %67

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %39
  %59 = bitcast %"union.base::trace_event::TraceValue"* %58 to %"class.protozero::HeapBuffered"**
  %60 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %59, align 8
  %61 = icmp eq %"class.protozero::HeapBuffered"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %63) #11
  %64 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %64) #11
  %65 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %60, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %65) #11
  %66 = bitcast %"class.protozero::HeapBuffered"* %60 to i8*
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %62, %57, %54, %43
  %68 = add nuw nsw i64 %39, 1
  %69 = load i8, i8* %18, align 8
  %70 = zext i8 %69 to i64
  %71 = icmp ult i64 %68, %70
  br i1 %71, label %38, label %72

72:                                               ; preds = %67, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %35
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN5blink18StyleSheetContents33SetHasSyntacticallyValidCSSHeaderEb(%"class.blink::StyleSheetContents"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIjjEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247570430, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = load i32, i32* %10, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #11
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #11
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #11
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #11
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i64 %28
}

declare i32 @_ZN5blink12CSSTokenizer10TokenCountEv(%"class.blink::CSSTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl17ParsePageSelectorENS_19CSSParserTokenRangeEPNS_18StyleSheetContentsE(%"class.blink::CSSSelectorList"* noalias nocapture sret, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::StyleSheetContents"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.std::__1::unique_ptr.922", align 8
  %10 = alloca %"class.blink::QualifiedName", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.blink::QualifiedName", align 8
  %13 = alloca %"class.WTF::Vector.934", align 8
  %14 = alloca %"class.blink::CSSSelectorList", align 8
  %15 = icmp ult %"class.blink::CSSParserToken"* %1, %2
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %17 = select i1 %15, %"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %16
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 63
  %21 = icmp eq i32 %20, 17
  br i1 %21, label %22, label %33

22:                                               ; preds = %4, %22
  %23 = phi %"class.blink::CSSParserToken"* [ %24, %22 ], [ %1, %4 ]
  %24 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 1
  %25 = icmp ult %"class.blink::CSSParserToken"* %24, %2
  %26 = select i1 %25, %"class.blink::CSSParserToken"* %24, %"class.blink::CSSParserToken"* %16
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 17
  br i1 %30, label %22, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  br label %33

33:                                               ; preds = %31, %4
  %34 = phi i32* [ %18, %4 ], [ %32, %31 ]
  %35 = phi %"class.blink::CSSParserToken"* [ %1, %4 ], [ %24, %31 ]
  %36 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = load i32, i32* %34, align 8
  %39 = and i32 %38, 63
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %82

41:                                               ; preds = %33
  %42 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = icmp eq %"class.blink::CSSParserToken"* %35, %2
  %44 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %35, i64 1
  %45 = select i1 %43, %"class.blink::CSSParserToken"* %35, %"class.blink::CSSParserToken"* %44
  %46 = select i1 %43, %"class.blink::CSSParserToken"* %16, %"class.blink::CSSParserToken"* %35
  %47 = bitcast %"class.blink::CSSParserToken"* %46 to i32*
  %48 = load i32, i32* %47, align 8, !noalias !23
  %49 = and i32 %48, 262144
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %46, i64 0, i32 2
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !23
  %54 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %46, i64 0, i32 1
  %55 = load i32, i32* %54, align 4, !noalias !23
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %57 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %58 = select i1 %50, i64 %56, i64 %57
  %59 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %58, i64* %59, align 8, !alias.scope !23
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %61 = bitcast i8** %60 to i64*
  store i64 %53, i64* %61, align 8, !alias.scope !23
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %55, i32* %62, align 8, !alias.scope !23
  %63 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %6) #11
  %64 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %65 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  store i64 %64, i64* %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %41
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #11
  br label %81

81:                                               ; preds = %80, %77, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  br label %82

82:                                               ; preds = %81, %33
  %83 = phi %"class.blink::CSSParserToken"* [ %45, %81 ], [ %35, %33 ]
  %84 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %85, align 8
  %86 = icmp ult %"class.blink::CSSParserToken"* %83, %2
  %87 = select i1 %86, %"class.blink::CSSParserToken"* %83, %"class.blink::CSSParserToken"* %16
  %88 = bitcast %"class.blink::CSSParserToken"* %87 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 63
  %91 = icmp eq i32 %90, 20
  br i1 %91, label %92, label %145

92:                                               ; preds = %82
  %93 = icmp eq %"class.blink::CSSParserToken"* %83, %2
  %94 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %83, i64 1
  %95 = select i1 %93, %"class.blink::CSSParserToken"* %83, %"class.blink::CSSParserToken"* %94
  %96 = icmp ult %"class.blink::CSSParserToken"* %95, %2
  %97 = select i1 %96, %"class.blink::CSSParserToken"* %95, %"class.blink::CSSParserToken"* %16
  %98 = bitcast %"class.blink::CSSParserToken"* %97 to i32*
  %99 = load i32, i32* %98, align 8
  %100 = and i32 %99, 63
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %103, align 8
  br label %292

104:                                              ; preds = %92
  %105 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #11
  %106 = icmp eq %"class.blink::CSSParserToken"* %95, %2
  %107 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %95, i64 1
  %108 = select i1 %106, %"class.blink::CSSParserToken"* %95, %"class.blink::CSSParserToken"* %107
  %109 = select i1 %106, %"class.blink::CSSParserToken"* %16, %"class.blink::CSSParserToken"* %95
  %110 = bitcast %"class.blink::CSSParserToken"* %109 to i32*
  %111 = load i32, i32* %110, align 8, !noalias !26
  %112 = and i32 %111, 262144
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %109, i64 0, i32 2
  %115 = bitcast i8** %114 to i64*
  %116 = load i64, i64* %115, align 8, !noalias !26
  %117 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %109, i64 0, i32 1
  %118 = load i32, i32* %117, align 4, !noalias !26
  %119 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %120 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %121 = select i1 %113, i64 %119, i64 %120
  %122 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %121, i64* %122, align 8, !alias.scope !26
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %124 = bitcast i8** %123 to i64*
  store i64 %116, i64* %124, align 8, !alias.scope !26
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %118, i32* %125, align 8, !alias.scope !26
  %126 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %8) #11
  %127 = ptrtoint %"class.WTF::StringImpl"* %126 to i64
  %128 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  store i64 %127, i64* %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %104
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #11
  br label %144

144:                                              ; preds = %143, %140, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #11
  br label %145

145:                                              ; preds = %144, %82
  %146 = phi %"class.blink::CSSParserToken"* [ %108, %144 ], [ %83, %82 ]
  %147 = icmp ult %"class.blink::CSSParserToken"* %146, %2
  %148 = select i1 %147, %"class.blink::CSSParserToken"* %146, %"class.blink::CSSParserToken"* %16
  %149 = bitcast %"class.blink::CSSParserToken"* %148 to i32*
  %150 = load i32, i32* %149, align 8
  %151 = and i32 %150, 63
  %152 = icmp eq i32 %151, 17
  br i1 %152, label %153, label %162

153:                                              ; preds = %145, %153
  %154 = phi %"class.blink::CSSParserToken"* [ %155, %153 ], [ %146, %145 ]
  %155 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %154, i64 1
  %156 = icmp ult %"class.blink::CSSParserToken"* %155, %2
  %157 = select i1 %156, %"class.blink::CSSParserToken"* %155, %"class.blink::CSSParserToken"* %16
  %158 = bitcast %"class.blink::CSSParserToken"* %157 to i32*
  %159 = load i32, i32* %158, align 8
  %160 = and i32 %159, 63
  %161 = icmp eq i32 %160, 17
  br i1 %161, label %153, label %162

162:                                              ; preds = %153, %145
  %163 = phi %"class.blink::CSSParserToken"* [ %146, %145 ], [ %155, %153 ]
  %164 = icmp eq %"class.blink::CSSParserToken"* %163, %2
  br i1 %164, label %167, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %166, align 8
  br label %292

167:                                              ; preds = %162
  %168 = bitcast %"class.std::__1::unique_ptr.922"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #11
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %9, i64 0, i32 0, i32 0, i32 0
  %170 = bitcast %"class.std::__1::unique_ptr.922"* %9 to i64*
  store i64 0, i64* %170, align 8
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %172 = icmp ne %"class.WTF::StringImpl"* %171, null
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  %175 = and i1 %172, %174
  br i1 %175, label %176, label %187

176:                                              ; preds = %167
  %177 = bitcast %"class.blink::QualifiedName"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #11
  %178 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %179 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %10, %"class.WTF::AtomicString"* dereferenceable(8) %178, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* dereferenceable(8) %179) #11
  %180 = call noalias i8* @malloc(i64 16) #11
  %181 = bitcast i8* %180 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelectorC1ERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"* %181, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %10, i1 zeroext false) #11
  %182 = ptrtoint i8* %180 to i64
  %183 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %169, align 8
  store i64 %182, i64* %170, align 8
  %184 = icmp eq %"class.blink::CSSParserSelector"* %183, null
  br i1 %184, label %243, label %185

185:                                              ; preds = %176
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %183) #11
  %186 = bitcast %"class.blink::CSSParserSelector"* %183 to i8*
  call void @free(i8* %186) #11
  br label %243

187:                                              ; preds = %167
  %188 = call noalias i8* @malloc(i64 16) #11
  %189 = bitcast i8* %188 to %"class.blink::CSSParserSelector"*
  call void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"* %189) #11
  %190 = ptrtoint i8* %188 to i64
  %191 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %169, align 8
  store i64 %190, i64* %170, align 8
  %192 = icmp eq %"class.blink::CSSParserSelector"* %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %187
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %191) #11
  %194 = bitcast %"class.blink::CSSParserSelector"* %191 to i8*
  call void @free(i8* %194) #11
  br label %195

195:                                              ; preds = %193, %187
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %235, label %198

198:                                              ; preds = %195
  %199 = bitcast %"class.std::__1::unique_ptr.922"* %9 to i32***
  %200 = load i32**, i32*** %199, align 8
  %201 = load i32*, i32** %200, align 8
  %202 = load i32, i32* %201, align 8
  %203 = and i32 %202, -241
  %204 = or i32 %203, 96
  store i32 %204, i32* %201, align 8
  %205 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %169, align 8
  %206 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %206) #11
  %207 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %7) #11
  %208 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %208, align 8
  %209 = getelementptr inbounds %"class.blink::CSSParserSelector", %"class.blink::CSSParserSelector"* %205, i64 0, i32 0, i32 0, i32 0, i32 0
  %210 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %209, align 8
  call void @_ZN5blink11CSSSelector16UpdatePseudoPageERKN3WTF12AtomicStringE(%"class.blink::CSSSelector"* %210, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #11
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %198
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #11
  br label %226

226:                                              ; preds = %198, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %206) #11
  %227 = load i32**, i32*** %199, align 8
  %228 = load i32*, i32** %227, align 8
  %229 = load i32, i32* %228, align 8
  %230 = and i32 %229, 65280
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %235

232:                                              ; preds = %226
  %233 = bitcast i32** %227 to %"class.blink::CSSParserSelector"*
  %234 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %0, i64 0, i32 0
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %234, align 8
  br label %286

235:                                              ; preds = %226, %195
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %246, label %238

238:                                              ; preds = %235
  %239 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %169, align 8
  %240 = bitcast %"class.blink::QualifiedName"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #11
  %241 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %242 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_star_atomE, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %12, %"class.WTF::AtomicString"* dereferenceable(8) %241, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* dereferenceable(8) %242) #11
  call void @_ZN5blink17CSSParserSelector18PrependTagSelectorERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"* %239, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %12, i1 zeroext false) #11
  br label %243

243:                                              ; preds = %176, %185, %238
  %244 = phi %"class.blink::QualifiedName"* [ %12, %238 ], [ %10, %185 ], [ %10, %176 ]
  %245 = phi i8* [ %240, %238 ], [ %177, %185 ], [ %177, %176 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %244) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %245) #11
  br label %246

246:                                              ; preds = %243, %235
  %247 = bitcast %"class.std::__1::unique_ptr.922"* %9 to i32***
  %248 = load i32**, i32*** %247, align 8
  %249 = load i32*, i32** %248, align 8
  %250 = load i32, i32* %249, align 8
  %251 = or i32 %250, 524288
  store i32 %251, i32* %249, align 8
  %252 = bitcast %"class.WTF::Vector.934"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %252) #11
  %253 = getelementptr inbounds %"class.WTF::Vector.934", %"class.WTF::Vector.934"* %13, i64 0, i32 0, i32 0, i32 0
  %254 = getelementptr inbounds %"class.WTF::Vector.934", %"class.WTF::Vector.934"* %13, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 0, i64 16, i1 false) #11
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.934"* nonnull %13, %"class.std::__1::unique_ptr.922"* nonnull dereferenceable(8) %9) #11
  %255 = bitcast %"class.blink::CSSSelectorList"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #11
  %256 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %14, i64 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %256, align 8
  call void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* nonnull sret %14, %"class.WTF::Vector.934"* nonnull dereferenceable(16) %13) #11
  %257 = bitcast %"class.blink::CSSSelectorList"* %14 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.blink::CSSSelectorList"* %0 to i64*
  store i64 %258, i64* %259, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #11
  %260 = load %"class.std::__1::unique_ptr.922"*, %"class.std::__1::unique_ptr.922"** %253, align 8
  %261 = icmp eq %"class.std::__1::unique_ptr.922"* %260, null
  br i1 %261, label %284, label %262, !prof !7

262:                                              ; preds = %246
  %263 = bitcast %"class.std::__1::unique_ptr.922"* %260 to i8*
  %264 = load i32, i32* %254, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %282, label %266, !prof !6

266:                                              ; preds = %262
  %267 = zext i32 %264 to i64
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %260, i64 %267
  br label %269

269:                                              ; preds = %276, %266
  %270 = phi %"class.std::__1::unique_ptr.922"* [ %277, %276 ], [ %260, %266 ]
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %270, i64 0, i32 0, i32 0, i32 0
  %272 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %271, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %271, align 8
  %273 = icmp eq %"class.blink::CSSParserSelector"* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %269
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %272) #11
  %275 = bitcast %"class.blink::CSSParserSelector"* %272 to i8*
  call void @free(i8* %275) #11
  br label %276

276:                                              ; preds = %274, %269
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %270, i64 1
  %278 = icmp eq %"class.std::__1::unique_ptr.922"* %277, %268
  br i1 %278, label %279, label %269

279:                                              ; preds = %276
  store i32 0, i32* %254, align 4
  %280 = bitcast %"class.WTF::Vector.934"* %13 to i8**
  %281 = load i8*, i8** %280, align 8
  br label %282

282:                                              ; preds = %279, %262
  %283 = phi i8* [ %281, %279 ], [ %263, %262 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %283) #11
  store %"class.std::__1::unique_ptr.922"* null, %"class.std::__1::unique_ptr.922"** %253, align 8
  br label %284

284:                                              ; preds = %246, %282
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %252) #11
  %285 = load %"class.blink::CSSParserSelector"*, %"class.blink::CSSParserSelector"** %169, align 8
  br label %286

286:                                              ; preds = %284, %232
  %287 = phi %"class.blink::CSSParserSelector"* [ %285, %284 ], [ %233, %232 ]
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %169, align 8
  %288 = icmp eq %"class.blink::CSSParserSelector"* %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %286
  call void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"* nonnull %287) #11
  %290 = bitcast %"class.blink::CSSParserSelector"* %287 to i8*
  call void @free(i8* %290) #11
  br label %291

291:                                              ; preds = %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #11
  br label %292

292:                                              ; preds = %291, %165, %102
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #11
  br label %308

308:                                              ; preds = %292, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #11
  br label %324

324:                                              ; preds = %308, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

declare void @_ZN5blink17CSSParserSelector18PrependTagSelectorERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"*, %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink15CSSSelectorList19AdoptSelectorVectorERN3WTF6VectorINSt3__110unique_ptrINS_17CSSParserSelectorENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSSelectorList"* sret, %"class.WTF::Vector.934"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.942"* @_ZN5blink13CSSParserImpl20ParseKeyframeKeyListERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CSSTokenizer", align 8
  %3 = alloca %"class.WTF::Vector.908", align 8
  %4 = bitcast %"class.blink::CSSTokenizer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %2, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %5 = bitcast %"class.WTF::Vector.908"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %5) #11
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.908"* nonnull sret %3, %"class.blink::CSSTokenizer"* nonnull %2) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %3, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = call %"class.WTF::Vector.942"* @_ZN5blink13CSSParserImpl22ConsumeKeyframeKeyListENS_19CSSParserTokenRangeE(%"class.blink::CSSParserToken"* %7, %"class.blink::CSSParserToken"* %11)
  %13 = load i32, i32* %8, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !6

15:                                               ; preds = %1
  store i32 0, i32* %8, align 4
  br label %16

16:                                               ; preds = %15, %1
  %17 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %3, i64 0, i32 0, i32 1, i64 0
  %19 = bitcast i8* %18 to %"class.blink::CSSParserToken"*
  %20 = icmp eq %"class.blink::CSSParserToken"* %17, %19
  br i1 %20, label %23, label %21, !prof !7

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %22, %"class.blink::CSSParserToken"* %17) #11
  br label %23

23:                                               ; preds = %16, %21
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %5) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %4) #11
  ret %"class.WTF::Vector.942"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.942"* @_ZN5blink13CSSParserImpl22ConsumeKeyframeKeyListENS_19CSSParserTokenRangeE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #0 align 2 {
  %3 = alloca double, align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIdLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %8 = bitcast i8* %7 to %"class.WTF::Vector.942"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %9 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %10 = bitcast double* %3 to i8*
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = getelementptr inbounds i8, i8* %7, i64 8
  %14 = bitcast i8* %13 to i32*
  %15 = bitcast i8* %7 to double**
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  %17 = bitcast %"class.WTF::StringView"* %4 to i64*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %21 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %22 = sext i8 %21 to i32
  %23 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %24 = sext i8 %23 to i32
  %25 = bitcast i32* %6 to i8*
  %26 = bitcast i32* %5 to i8*
  br label %27

27:                                               ; preds = %192, %2
  %28 = phi %"class.blink::CSSParserToken"* [ %0, %2 ], [ %193, %192 ]
  %29 = icmp ult %"class.blink::CSSParserToken"* %28, %1
  %30 = select i1 %29, %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"* %9
  %31 = bitcast %"class.blink::CSSParserToken"* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 63
  %34 = icmp eq i32 %33, 17
  br i1 %34, label %35, label %44

35:                                               ; preds = %27, %35
  %36 = phi %"class.blink::CSSParserToken"* [ %37, %35 ], [ %28, %27 ]
  %37 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %36, i64 1
  %38 = icmp ult %"class.blink::CSSParserToken"* %37, %1
  %39 = select i1 %38, %"class.blink::CSSParserToken"* %37, %"class.blink::CSSParserToken"* %9
  %40 = bitcast %"class.blink::CSSParserToken"* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 63
  %43 = icmp eq i32 %42, 17
  br i1 %43, label %35, label %44

44:                                               ; preds = %35, %27
  %45 = phi %"class.blink::CSSParserToken"* [ %28, %27 ], [ %37, %35 ]
  %46 = icmp eq %"class.blink::CSSParserToken"* %45, %1
  %47 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %45, i64 1
  %48 = select i1 %46, %"class.blink::CSSParserToken"* %45, %"class.blink::CSSParserToken"* %47
  %49 = select i1 %46, %"class.blink::CSSParserToken"* %9, %"class.blink::CSSParserToken"* %45
  %50 = icmp ult %"class.blink::CSSParserToken"* %48, %1
  %51 = select i1 %50, %"class.blink::CSSParserToken"* %48, %"class.blink::CSSParserToken"* %9
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 63
  %55 = icmp eq i32 %54, 17
  br i1 %55, label %56, label %65

56:                                               ; preds = %44, %56
  %57 = phi %"class.blink::CSSParserToken"* [ %58, %56 ], [ %48, %44 ]
  %58 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %57, i64 1
  %59 = icmp ult %"class.blink::CSSParserToken"* %58, %1
  %60 = select i1 %59, %"class.blink::CSSParserToken"* %58, %"class.blink::CSSParserToken"* %9
  %61 = bitcast %"class.blink::CSSParserToken"* %60 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 63
  %64 = icmp eq i32 %63, 17
  br i1 %64, label %56, label %65

65:                                               ; preds = %56, %44
  %66 = phi %"class.blink::CSSParserToken"* [ %48, %44 ], [ %58, %56 ]
  %67 = bitcast %"class.blink::CSSParserToken"* %49 to i32*
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 63
  %70 = icmp eq i32 %69, 8
  br i1 %70, label %71, label %91

71:                                               ; preds = %65
  %72 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %49) #11
  %73 = fcmp ult double %72, 0.000000e+00
  br i1 %73, label %91, label %74

74:                                               ; preds = %71
  %75 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %49) #11
  %76 = fcmp ugt double %75, 1.000000e+02
  br i1 %76, label %91, label %77

77:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %78 = call double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"* %49) #11
  %79 = fdiv double %78, 1.000000e+02
  store double %79, double* %3, align 8
  %80 = load i32, i32* %12, align 4
  %81 = load i32, i32* %14, align 8
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %89, label %83, !prof !6

83:                                               ; preds = %77
  %84 = load double*, double** %15, align 8
  %85 = zext i32 %80 to i64
  %86 = getelementptr inbounds double, double* %84, i64 %85
  store double %79, double* %86, align 8
  %87 = load i32, i32* %12, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %12, align 4
  br label %90

89:                                               ; preds = %77
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.942"* %8, double* nonnull dereferenceable(8) %3) #11
  br label %90

90:                                               ; preds = %83, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %190

91:                                               ; preds = %74, %71, %65
  %92 = load i32, i32* %67, align 8
  %93 = and i32 %92, 63
  %94 = icmp eq i32 %93, 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  br i1 %94, label %95, label %119

95:                                               ; preds = %91
  %96 = and i32 %92, 262144
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 0, i32 2
  %99 = bitcast i8** %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !29
  %101 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 0, i32 1
  %102 = load i32, i32* %101, align 4, !noalias !29
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %105 = select i1 %97, i64 %103, i64 %104
  store i64 %105, i64* %17, align 8, !alias.scope !29
  store i64 %100, i64* %19, align 8, !alias.scope !29
  store i32 %102, i32* %20, align 8, !alias.scope !29
  %106 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [5 x i8]* nonnull dereferenceable(5) @.str.8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  br i1 %106, label %107, label %120

107:                                              ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #11
  store i32 0, i32* %5, align 4
  %108 = load i32, i32* %12, align 4
  %109 = load i32, i32* %14, align 8
  %110 = icmp eq i32 %108, %109
  br i1 %110, label %117, label %111, !prof !6

111:                                              ; preds = %107
  %112 = load double*, double** %15, align 8
  %113 = zext i32 %108 to i64
  %114 = getelementptr inbounds double, double* %112, i64 %113
  store double 0.000000e+00, double* %114, align 8
  %115 = load i32, i32* %12, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %12, align 4
  br label %118

117:                                              ; preds = %107
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.942"* %8, i32* nonnull dereferenceable(4) %5) #11
  br label %118

118:                                              ; preds = %111, %117
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  br label %190

119:                                              ; preds = %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  br label %120

120:                                              ; preds = %119, %95
  %121 = load i32, i32* %67, align 8
  %122 = and i32 %121, 63
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %198

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 0, i32 2
  %126 = bitcast i8** %125 to i64*
  %127 = load i64, i64* %126, align 8, !noalias !32
  %128 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 0, i32 1
  %129 = load i32, i32* %128, align 4, !noalias !32
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %131, label %198

131:                                              ; preds = %124
  %132 = and i32 %121, 262144
  %133 = icmp eq i32 %132, 0
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %135 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %136 = select i1 %133, i64 %134, i64 %135
  %137 = inttoptr i64 %136 to %"class.WTF::StringImpl"*
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %131
  %143 = inttoptr i64 %127 to i8*
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i32
  %149 = icmp eq i32 %148, %22
  br i1 %149, label %170, label %198

150:                                              ; preds = %131
  %151 = inttoptr i64 %127 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = add i16 %152, -65
  %154 = icmp ult i16 %153, 26
  %155 = zext i1 %154 to i16
  %156 = shl nuw nsw i16 %155, 5
  %157 = or i16 %156, %152
  %158 = zext i16 %157 to i32
  %159 = icmp eq i32 %158, %22
  br i1 %159, label %160, label %198

160:                                              ; preds = %150
  %161 = getelementptr inbounds i16, i16* %151, i64 1
  %162 = load i16, i16* %161, align 2
  %163 = add i16 %162, -65
  %164 = icmp ult i16 %163, 26
  %165 = zext i1 %164 to i16
  %166 = shl nuw nsw i16 %165, 5
  %167 = or i16 %166, %162
  %168 = zext i16 %167 to i32
  %169 = icmp eq i32 %168, %24
  br i1 %169, label %178, label %198

170:                                              ; preds = %142
  %171 = getelementptr inbounds i8, i8* %143, i64 1
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i64
  %174 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = icmp eq i32 %176, %24
  br i1 %177, label %178, label %198

178:                                              ; preds = %160, %170
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  store i32 1, i32* %6, align 4
  %179 = load i32, i32* %12, align 4
  %180 = load i32, i32* %14, align 8
  %181 = icmp eq i32 %179, %180
  br i1 %181, label %188, label %182, !prof !6

182:                                              ; preds = %178
  %183 = load double*, double** %15, align 8
  %184 = zext i32 %179 to i64
  %185 = getelementptr inbounds double, double* %183, i64 %184
  store double 1.000000e+00, double* %185, align 8
  %186 = load i32, i32* %12, align 4
  %187 = add i32 %186, 1
  store i32 %187, i32* %12, align 4
  br label %189

188:                                              ; preds = %178
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.942"* %8, i32* nonnull dereferenceable(4) %6) #11
  br label %189

189:                                              ; preds = %182, %188
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  br label %190

190:                                              ; preds = %118, %189, %90
  %191 = icmp eq %"class.blink::CSSParserToken"* %66, %1
  br i1 %191, label %210, label %192

192:                                              ; preds = %190
  %193 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %66, i64 1
  %194 = bitcast %"class.blink::CSSParserToken"* %66 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = and i32 %195, 63
  %197 = icmp eq i32 %196, 22
  br i1 %197, label %27, label %198

198:                                              ; preds = %142, %150, %124, %192, %170, %160, %120
  %199 = icmp eq i8* %7, null
  br i1 %199, label %212, label %200

200:                                              ; preds = %198
  %201 = load double*, double** %15, align 8
  %202 = icmp eq double* %201, null
  %203 = bitcast double* %201 to i8*
  br i1 %202, label %209, label %204, !prof !7

204:                                              ; preds = %200
  %205 = load i32, i32* %12, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %208, label %207, !prof !6

207:                                              ; preds = %204
  store i32 0, i32* %12, align 4
  br label %208

208:                                              ; preds = %207, %204
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %203) #11
  store double* null, double** %15, align 8
  br label %209

209:                                              ; preds = %208, %200
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %7) #11
  br label %212

210:                                              ; preds = %190
  %211 = bitcast i8* %7 to %"class.WTF::Vector.942"*
  br label %212

212:                                              ; preds = %210, %198, %209
  %213 = phi %"class.WTF::Vector.942"* [ null, %198 ], [ null, %209 ], [ %211, %210 ]
  ret %"class.WTF::Vector.942"* %213
}

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.908"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CSSParserImpl26ConsumeSupportsDeclarationERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::CSSParserObserver"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.blink::CSSParserObserver"* null, %"class.blink::CSSParserObserver"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  store i32 24, i32* %6, align 4
  tail call void @_ZN5blink13CSSParserImpl18ConsumeDeclarationERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 1)
  store i64 %5, i64* %4, align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"* %8)
  %12 = icmp eq i32* %6, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  store i32 %7, i32* %6, align 4
  br label %14

14:                                               ; preds = %2, %13
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl18ConsumeDeclarationERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"struct.blink::CSSTokenizedValue", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSParserTokenStream"* %1) #11
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %3
  store i8 1, i8* %13, align 4
  %17 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %19 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %18, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %19) #11
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %21 = bitcast %"class.blink::CSSParserToken"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %17, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br label %22

22:                                               ; preds = %3, %16
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 63
  %27 = icmp eq i32 %26, 20
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv(%"class.blink::CSSParserTokenStream"* %1)
  br label %147

30:                                               ; preds = %22
  store i8 0, i8* %13, align 4
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %32 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %32, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %32, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %33, align 4
  %37 = icmp ult i32 %35, %36
  %38 = select i1 %37, i32 %35, i32 %36
  store i32 %38, i32* %10, align 8
  %39 = bitcast %"struct.blink::CSSTokenizedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1
  %41 = bitcast %"class.WTF::StringView"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  store i8 1, i8* %13, align 4, !noalias !35
  %42 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11, !noalias !35
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %32) #11
  %43 = bitcast %"class.blink::CSSParserToken"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %42, i64 24, i1 false) #11, !noalias !35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11, !noalias !35
  %44 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8, !noalias !35
  %45 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 8, !noalias !35
  %47 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv(%"class.blink::CSSParserTokenStream"* %1) #11, !noalias !35
  %48 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %47, 0
  %49 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %47, 1
  %50 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8, !noalias !35
  %51 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %50, i64 0, i32 3
  %52 = load i32, i32* %51, align 8, !noalias !35
  %53 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0, i32 0
  store %"class.blink::CSSParserToken"* %48, %"class.blink::CSSParserToken"** %53, align 8, !alias.scope !35
  %54 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0, i32 1
  store %"class.blink::CSSParserToken"* %49, %"class.blink::CSSParserToken"** %54, align 8, !alias.scope !35
  %55 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 1
  %56 = sub i32 %52, %46
  call void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* sret %55, %"class.blink::CSSParserTokenStream"* %1, i32 %46, i32 %56) #11
  %57 = call zeroext i1 @_ZN5blink13CSSParserImpl34RemoveImportantAnnotationIfPresentERNS_17CSSTokenizedValueE(%"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %7)
  %58 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %59 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  switch i32 %2, label %67 [
    i32 12, label %61
    i32 11, label %61
    i32 6, label %61
    i32 4, label %61
  ]

61:                                               ; preds = %30, %30, %30, %30
  br i1 %57, label %146, label %62

62:                                               ; preds = %61
  %63 = call i32 @_ZNK5blink14CSSParserToken25ParseAsAtRuleDescriptorIDEv(%"class.blink::CSSParserToken"* nonnull %6) #11
  %64 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %65 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %64, align 8
  %66 = call zeroext i1 @_ZN5blink22AtRuleDescriptorParser11ParseAtRuleENS_13StyleRuleBase8RuleTypeENS_18AtRuleDescriptorIDERKNS_17CSSTokenizedValueERKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(i32 %2, i32 %63, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %7, %"class.blink::CSSParserContext"* dereferenceable(176) %65, %"class.blink::HeapVector"* dereferenceable(6160) %58) #11
  br label %131

67:                                               ; preds = %30
  %68 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %69 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %68, align 8
  %70 = call %"class.blink::ExecutionContext"* @_ZNK5blink16CSSParserContext19GetExecutionContextEv(%"class.blink::CSSParserContext"* %69) #11
  %71 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %68, align 8
  %72 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %71, i64 0, i32 3
  %73 = load i8, i8* %72, align 1
  %74 = call i32 @_ZNK5blink14CSSParserToken30ParseAsUnresolvedCSSPropertyIDEPKNS_16ExecutionContextENS_13CSSParserModeE(%"class.blink::CSSParserToken"* nonnull %6, %"class.blink::ExecutionContext"* %70, i8 zeroext %73) #11
  %75 = icmp eq i32 %2, 8
  %76 = and i1 %75, %57
  br i1 %76, label %146, label %77

77:                                               ; preds = %67
  switch i32 %74, label %116 [
    i32 1, label %78
    i32 0, label %131
  ]

78:                                               ; preds = %77
  switch i32 %2, label %146 [
    i32 8, label %79
    i32 1, label %79
  ]

79:                                               ; preds = %78, %78
  %80 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %81, align 8
  %82 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #11
  %83 = bitcast %"class.blink::CSSParserToken"* %6 to i32*
  %84 = load i32, i32* %83, align 8, !noalias !38
  %85 = and i32 %84, 262144
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %6, i64 0, i32 2
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8, !noalias !38
  %90 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %6, i64 0, i32 1
  %91 = load i32, i32* %90, align 4, !noalias !38
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = select i1 %86, i64 %92, i64 %93
  %95 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %94, i64* %95, align 8, !alias.scope !38
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %97 = bitcast i8** %96 to i64*
  store i64 %89, i64* %97, align 8, !alias.scope !38
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %91, i32* %98, align 8, !alias.scope !38
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %9) #11
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  call void @_ZN5blink13CSSParserImpl20ConsumeVariableValueERKNS_17CSSTokenizedValueERKN3WTF12AtomicStringEbb(%"class.blink::CSSParserImpl"* %0, %"struct.blink::CSSTokenizedValue"* nonnull dereferenceable(40) %7, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8, i1 zeroext %57, i1 zeroext %75)
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %79
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #11
  br label %115

115:                                              ; preds = %79, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  br label %131

116:                                              ; preds = %77
  %117 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 2
  %118 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %117, align 8
  %119 = icmp eq %"class.blink::StyleSheetContents"* %118, null
  br i1 %119, label %127, label %120

120:                                              ; preds = %116
  %121 = call %"class.blink::Document"* @_ZNK5blink18StyleSheetContents19SingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* nonnull %118) #11
  %122 = icmp eq %"class.blink::Document"* %121, null
  br i1 %122, label %127, label %123

123:                                              ; preds = %120
  %124 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %117, align 8
  %125 = call %"class.blink::Document"* @_ZNK5blink18StyleSheetContents19SingleOwnerDocumentEv(%"class.blink::StyleSheetContents"* %124) #11
  %126 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %125) #11
  call void @_ZN5blink11Deprecation26WarnOnDeprecatedPropertiesEPKNS_10LocalFrameENS_13CSSPropertyIDE(%"class.blink::LocalFrame"* %126, i32 %74) #11
  br label %127

127:                                              ; preds = %120, %116, %123
  %128 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %7, i64 0, i32 0
  %129 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %68, align 8
  %130 = call zeroext i1 @_ZN5blink17CSSPropertyParser10ParseValueENS_13CSSPropertyIDEbRKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13StyleRuleBase8RuleTypeE(i32 %74, i1 zeroext %57, %"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %128, %"class.blink::CSSParserContext"* %129, %"class.blink::HeapVector"* dereferenceable(6160) %58, i32 %2) #11
  br label %131

131:                                              ; preds = %62, %77, %127, %115
  %132 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %133 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %132, align 8
  %134 = icmp eq %"class.blink::CSSParserObserver"* %133, null
  br i1 %134, label %146, label %135

135:                                              ; preds = %131
  switch i32 %2, label %146 [
    i32 8, label %136
    i32 1, label %136
  ]

136:                                              ; preds = %135, %135
  %137 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  %138 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %137, i64 0, i32 3
  %139 = load i32, i32* %138, align 8
  %140 = load i32, i32* %59, align 4
  %141 = icmp ne i32 %140, %60
  %142 = bitcast %"class.blink::CSSParserObserver"* %133 to void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)***
  %143 = load void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)**, void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)*, void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)** %143, i64 5
  %145 = load void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)*, void (%"class.blink::CSSParserObserver"*, i32, i32, i1, i1)** %144, align 8
  call void %145(%"class.blink::CSSParserObserver"* nonnull %133, i32 %11, i32 %139, i1 zeroext %57, i1 zeroext %141) #11
  br label %146

146:                                              ; preds = %136, %131, %135, %78, %67, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #11
  br label %147

147:                                              ; preds = %146, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE5clearEv(%"class.WTF::Vector"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %51, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %10, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %11, i64 %12
  br label %14

14:                                               ; preds = %32, %9
  %15 = phi %"class.blink::CSSPropertyValue"* [ %33, %32 ], [ %11, %9 ]
  %16 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %15, i64 1
  %34 = icmp eq %"class.blink::CSSPropertyValue"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  store i32 0, i32* %6, align 4
  br label %41

41:                                               ; preds = %5, %35
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  store i32 256, i32* %2, align 8
  %47 = bitcast i8* %44 to %"class.blink::CSSPropertyValue"*
  %48 = icmp eq %"class.blink::CSSPropertyValue"* %43, %47
  br i1 %48, label %51, label %49, !prof !7

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %50, %"class.blink::CSSPropertyValue"* %43) #11
  br label %51

51:                                               ; preds = %1, %41, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl32ParseDeclarationListForInspectorERKN3WTF6StringEPKNS_16CSSParserContextERNS_17CSSParserObserverE(%"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*, %"class.blink::CSSParserObserver"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserImpl", align 8
  %5 = alloca %"class.blink::CSSTokenizer", align 8
  %6 = alloca %"class.blink::CSSParserTokenStream", align 8
  %7 = bitcast %"class.blink::CSSParserImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.blink::CSSParserImpl"* %4 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 6148, i1 false) #11
  %13 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 3
  %16 = bitcast %"class.blink::StyleSheetContents"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false)
  store %"class.blink::CSSParserObserver"* %2, %"class.blink::CSSParserObserver"** %15, align 8
  %17 = bitcast %"class.blink::CSSTokenizer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %18 = bitcast %"class.blink::CSSParserObserver"* %2 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %19 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %18, align 8
  %20 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %19, align 8
  call void %20(%"class.blink::CSSParserObserver"* %2, i32 1, i32 0) #11
  %21 = bitcast %"class.blink::CSSParserObserver"* %2 to void (%"class.blink::CSSParserObserver"*, i32)***
  %22 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %22, i64 1
  %24 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %23, align 8
  call void %24(%"class.blink::CSSParserObserver"* %2, i32 1) #11
  %25 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %25) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %27 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i8**
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %5, %"class.blink::CSSTokenizer"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 2
  %32 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  store i32 11184671, i32* %32, align 8
  %33 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 3
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 4
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 6
  store i32 31, i32* %35, align 8
  %36 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %38 = ptrtoint i8* %37 to i64
  %39 = bitcast %"class.blink::CSSParserTokenStream"* %6 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = udiv i64 %36, 24
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %28, align 8
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* nonnull %4, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %6, i32 1)
  %42 = load i32, i32* %29, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !6

44:                                               ; preds = %3
  store i32 0, i32* %29, align 4
  br label %45

45:                                               ; preds = %44, %3
  %46 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %46, align 8
  %48 = bitcast i8* %26 to %"class.blink::CSSParserToken"*
  %49 = icmp eq %"class.blink::CSSParserToken"* %47, %48
  br i1 %49, label %52, label %50, !prof !7

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %6, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %51, %"class.blink::CSSParserToken"* %47) #11
  br label %52

52:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %25) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %17) #11
  %53 = load i32, i32* %11, align 4
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %54, label %56, label %58, !prof !6

56:                                               ; preds = %52
  %57 = bitcast i8* %8 to %"class.blink::CSSPropertyValue"*
  br label %89

58:                                               ; preds = %52
  %59 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %55, align 8
  %60 = icmp ne %"class.blink::CSSPropertyValue"* %59, null
  %61 = bitcast i8* %8 to %"class.blink::CSSPropertyValue"*
  %62 = icmp ne %"class.blink::CSSPropertyValue"* %59, %61
  %63 = and i1 %60, %62
  br i1 %63, label %89, label %64

64:                                               ; preds = %58
  %65 = zext i32 %53 to i64
  %66 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %59, i64 %65
  br label %67

67:                                               ; preds = %85, %64
  %68 = phi %"class.blink::CSSPropertyValue"* [ %86, %85 ], [ %59, %64 ]
  %69 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #11
  br label %85

85:                                               ; preds = %84, %81, %67
  %86 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %68, i64 1
  %87 = icmp eq %"class.blink::CSSPropertyValue"* %86, %66
  br i1 %87, label %88, label %67

88:                                               ; preds = %85
  store i32 0, i32* %11, align 4
  br label %89

89:                                               ; preds = %56, %88, %58
  %90 = phi %"class.blink::CSSPropertyValue"* [ %57, %56 ], [ %61, %88 ], [ %61, %58 ]
  %91 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %55, align 8
  %92 = icmp eq %"class.blink::CSSPropertyValue"* %91, %90
  br i1 %92, label %95, label %93, !prof !7

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %94, %"class.blink::CSSPropertyValue"* %91) #11
  br label %95

95:                                               ; preds = %89, %93
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSParserImpl27ParseStyleSheetForInspectorERKN3WTF6StringEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERNS_17CSSParserObserverE(%"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSParserObserver"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserImpl", align 8
  %7 = alloca %"class.blink::CSSTokenizer", align 8
  %8 = alloca %"class.blink::CSSParserTokenStream", align 8
  %9 = bitcast %"class.blink::CSSParserImpl"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %11 = bitcast %"class.blink::CSSParserImpl"* %6 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %14 = bitcast i32* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 6148, i1 false) #11
  %15 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %1, %"class.blink::CSSParserContext"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 2
  store %"class.blink::StyleSheetContents"* %2, %"class.blink::StyleSheetContents"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 3
  %18 = getelementptr inbounds %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %17, i64 1
  %19 = bitcast %"class.blink::CSSParserObserver"** %18 to i64*
  store i64 0, i64* %19, align 8
  store %"class.blink::CSSParserObserver"* %3, %"class.blink::CSSParserObserver"** %17, align 8
  %20 = bitcast %"class.blink::CSSTokenizer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #11
  %21 = bitcast %"class.blink::CSSParserTokenStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %21) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %23 = bitcast %"class.blink::CSSParserTokenStream"* %8 to i8**
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %7, %"class.blink::CSSTokenizer"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 2
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i32*
  store i32 11184671, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 3
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 4
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 6
  store i32 31, i32* %31, align 8
  %32 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %33 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %34 = ptrtoint i8* %33 to i64
  %35 = bitcast %"class.blink::CSSParserTokenStream"* %8 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = udiv i64 %32, 24
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %24, align 8
  %38 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  %39 = bitcast %"class.blink::CSSParserToken"* %27 to i8*
  br label %40

40:                                               ; preds = %103, %4
  %41 = phi i32 [ 0, %4 ], [ %101, %103 ]
  %42 = phi i8 [ 0, %4 ], [ %88, %103 ]
  %43 = phi i8 [ 0, %4 ], [ %89, %103 ]
  br label %44

44:                                               ; preds = %40, %82
  %45 = phi i8 [ %42, %40 ], [ %88, %82 ]
  %46 = phi i8 [ %43, %40 ], [ %89, %82 ]
  br label %47

47:                                               ; preds = %78, %44
  %48 = load i8, i8* %30, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  store i8 1, i8* %30, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %51 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %51) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %38, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  br label %52

52:                                               ; preds = %50, %47
  %53 = load i32, i32* %28, align 8
  %54 = and i32 %53, 63
  %55 = icmp eq i32 %54, 31
  %56 = and i32 %53, 192
  %57 = icmp eq i32 %56, 128
  %58 = or i1 %55, %57
  br i1 %58, label %105, label %59

59:                                               ; preds = %52
  switch i32 %54, label %80 [
    i32 17, label %60
    i32 2, label %68
    i32 18, label %70
    i32 19, label %70
  ]

60:                                               ; preds = %59
  store i8 0, i8* %30, align 4
  %61 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  %62 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %61, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %61, i64 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %62, align 4
  %66 = icmp ult i32 %64, %65
  %67 = select i1 %66, i32 %64, i32 %65
  br label %78

68:                                               ; preds = %59
  %69 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* nonnull %6, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %8, i32 %41) #11
  br label %82

70:                                               ; preds = %59, %59
  store i8 0, i8* %30, align 4
  %71 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  %72 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %71, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %71, i64 0, i32 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %72, align 4
  %76 = icmp ult i32 %74, %75
  %77 = select i1 %76, i32 %74, i32 %75
  br label %78

78:                                               ; preds = %70, %60
  %79 = phi i32 [ %77, %70 ], [ %67, %60 ]
  store i32 %79, i32* %29, align 8
  br label %47

80:                                               ; preds = %59
  %81 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* nonnull %6, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %8, i32 %41) #11
  br label %82

82:                                               ; preds = %80, %68
  %83 = phi %"class.blink::StyleRuleBase"* [ %81, %80 ], [ %69, %68 ]
  %84 = and i8 %45, 1
  %85 = icmp eq i8 %84, 0
  %86 = icmp ne %"class.blink::StyleRuleBase"* %83, null
  %87 = zext i1 %86 to i8
  %88 = select i1 %85, i8 1, i8 %45
  %89 = select i1 %85, i8 %87, i8 %46
  %90 = icmp eq %"class.blink::StyleRuleBase"* %83, null
  br i1 %90, label %44, label %91

91:                                               ; preds = %82
  %92 = add i32 %41, -4
  %93 = icmp ult i32 %92, 3
  %94 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %83, i64 0, i32 0
  %95 = load i8, i8* %94, align 1
  br i1 %93, label %100, label %96

96:                                               ; preds = %91
  switch i8 %95, label %97 [
    i8 0, label %100
    i8 2, label %100
  ]

97:                                               ; preds = %96
  %98 = icmp eq i8 %95, 9
  %99 = select i1 %98, i32 2, i32 3
  br label %100

100:                                              ; preds = %97, %96, %96, %91
  %101 = phi i32 [ 1, %96 ], [ %99, %97 ], [ 1, %96 ], [ %41, %91 ]
  %102 = icmp eq i8 %95, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100, %104
  br label %40

104:                                              ; preds = %100
  call void @_ZN5blink18StyleSheetContents16ParserAppendRuleEPNS_13StyleRuleBaseE(%"class.blink::StyleSheetContents"* %2, %"class.blink::StyleRuleBase"* nonnull %83) #11
  br label %103

105:                                              ; preds = %52
  %106 = and i8 %46, 1
  %107 = icmp ne i8 %106, 0
  call void @_ZN5blink18StyleSheetContents33SetHasSyntacticallyValidCSSHeaderEb(%"class.blink::StyleSheetContents"* %2, i1 zeroext %107) #11
  %108 = load i32, i32* %25, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110, !prof !6

110:                                              ; preds = %105
  store i32 0, i32* %25, align 4
  br label %111

111:                                              ; preds = %110, %105
  %112 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %112, align 8
  %114 = bitcast i8* %22 to %"class.blink::CSSParserToken"*
  %115 = icmp eq %"class.blink::CSSParserToken"* %113, %114
  br i1 %115, label %118, label %116, !prof !7

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %8, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %117, %"class.blink::CSSParserToken"* %113) #11
  br label %118

118:                                              ; preds = %111, %116
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %21) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %20) #11
  %119 = load i32, i32* %13, align 4
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %120, label %122, label %124, !prof !6

122:                                              ; preds = %118
  %123 = bitcast i8* %10 to %"class.blink::CSSPropertyValue"*
  br label %155

124:                                              ; preds = %118
  %125 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %121, align 8
  %126 = icmp ne %"class.blink::CSSPropertyValue"* %125, null
  %127 = bitcast i8* %10 to %"class.blink::CSSPropertyValue"*
  %128 = icmp ne %"class.blink::CSSPropertyValue"* %125, %127
  %129 = and i1 %126, %128
  br i1 %129, label %155, label %130

130:                                              ; preds = %124
  %131 = zext i32 %119 to i64
  %132 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %125, i64 %131
  br label %133

133:                                              ; preds = %151, %130
  %134 = phi %"class.blink::CSSPropertyValue"* [ %152, %151 ], [ %125, %130 ]
  %135 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #11
  br label %151

151:                                              ; preds = %150, %147, %133
  %152 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %134, i64 1
  %153 = icmp eq %"class.blink::CSSPropertyValue"* %152, %132
  br i1 %153, label %154, label %133

154:                                              ; preds = %151
  store i32 0, i32* %13, align 4
  br label %155

155:                                              ; preds = %122, %154, %124
  %156 = phi %"class.blink::CSSPropertyValue"* [ %123, %122 ], [ %127, %154 ], [ %127, %124 ]
  %157 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %121, align 8
  %158 = icmp eq %"class.blink::CSSPropertyValue"* %157, %156
  br i1 %158, label %161, label %159, !prof !7

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %6, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %160, %"class.blink::CSSPropertyValue"* %157) #11
  br label %161

161:                                              ; preds = %155, %159
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE(%"class.WTF::String"* dereferenceable(8), i32, %"class.blink::CSSParserContext"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSTokenizer", align 8
  %7 = alloca %"class.blink::CSSParserTokenStream", align 8
  %8 = alloca %"class.blink::CSSParserImpl", align 8
  %9 = bitcast %"class.blink::CSSTokenizer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %0, i32 %1) #11
  %10 = bitcast %"class.blink::CSSParserTokenStream"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 832, i8* nonnull %10) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%"class.blink::CSSParserTokenStream"* @__const._ZN5blink13CSSParserImpl32ParseDeclarationListForLazyStyleERKN3WTF6StringEjPKNS_16CSSParserContextE.stream to i8*), i64 832, i1 false)
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast %"class.blink::CSSParserTokenStream"* %7 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 1
  store %"class.blink::CSSTokenizer"* %6, %"class.blink::CSSTokenizer"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  store i32 11184671, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 3
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 4
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 6
  store i32 31, i32* %20, align 8
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 3072) #11
  %22 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.blink::CSSParserTokenStream"* %7 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = udiv i64 %21, 24
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %13, align 8
  %27 = load i8, i8* %19, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %3
  store i8 1, i8* %19, align 4
  %30 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %15, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %31) #11
  %32 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %30, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %33

33:                                               ; preds = %3, %29
  store i8 0, i8* %19, align 4
  %34 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %15, align 8
  %35 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %34, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %34, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %35, align 4
  %39 = icmp ult i32 %37, %38
  %40 = select i1 %39, i32 %37, i32 %38
  store i32 %40, i32* %18, align 8
  %41 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* nonnull %7) #11
  %42 = bitcast %"class.blink::CSSParserImpl"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6192, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0
  %44 = bitcast %"class.blink::CSSParserImpl"* %8 to i8**
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i32 256, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast i32* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 6148, i1 false) #11
  %48 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 1
  store %"class.blink::CSSParserContext"* %2, %"class.blink::CSSParserContext"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 2
  %50 = bitcast %"class.blink::StyleSheetContents"** %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false)
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* nonnull %8, %"class.blink::CSSParserTokenStream"* nonnull dereferenceable(832) %7, i32 1)
  %51 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0
  %52 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %2, i64 0, i32 3
  %53 = load i8, i8* %52, align 1
  %54 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* nonnull dereferenceable(6160) %51, i8 zeroext %53)
  %55 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %54, i64 0, i32 0
  %56 = load i32, i32* %46, align 4
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br i1 %57, label %59, label %61, !prof !6

59:                                               ; preds = %33
  %60 = bitcast i8* %43 to %"class.blink::CSSPropertyValue"*
  br label %92

61:                                               ; preds = %33
  %62 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %58, align 8
  %63 = icmp ne %"class.blink::CSSPropertyValue"* %62, null
  %64 = bitcast i8* %43 to %"class.blink::CSSPropertyValue"*
  %65 = icmp ne %"class.blink::CSSPropertyValue"* %62, %64
  %66 = and i1 %63, %65
  br i1 %66, label %92, label %67

67:                                               ; preds = %61
  %68 = zext i32 %56 to i64
  %69 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %62, i64 %68
  br label %70

70:                                               ; preds = %88, %67
  %71 = phi %"class.blink::CSSPropertyValue"* [ %89, %88 ], [ %62, %67 ]
  %72 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %87, %84, %70
  %89 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %71, i64 1
  %90 = icmp eq %"class.blink::CSSPropertyValue"* %89, %69
  br i1 %90, label %91, label %70

91:                                               ; preds = %88
  store i32 0, i32* %46, align 4
  br label %92

92:                                               ; preds = %59, %91, %61
  %93 = phi %"class.blink::CSSPropertyValue"* [ %60, %59 ], [ %64, %91 ], [ %64, %61 ]
  %94 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %58, align 8
  %95 = icmp eq %"class.blink::CSSPropertyValue"* %94, %93
  br i1 %95, label %98, label %96, !prof !7

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %8, i64 0, i32 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* nonnull %97, %"class.blink::CSSPropertyValue"* %94) #11
  br label %98

98:                                               ; preds = %92, %96
  call void @llvm.lifetime.end.p0i8(i64 6192, i8* nonnull %42) #11
  %99 = load i8, i8* %19, align 4, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %98
  store i8 1, i8* %19, align 4
  %102 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #11
  %103 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %15, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %103) #11
  %104 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %102, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #11
  br label %105

105:                                              ; preds = %98, %101
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* nonnull %7) #11
  %106 = load i32, i32* %14, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108, !prof !6

108:                                              ; preds = %105
  store i32 0, i32* %14, align 4
  br label %109

109:                                              ; preds = %108, %105
  %110 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %110, align 8
  %112 = bitcast i8* %11 to %"class.blink::CSSParserToken"*
  %113 = icmp eq %"class.blink::CSSParserToken"* %111, %112
  br i1 %113, label %116, label %114, !prof !7

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* nonnull %115, %"class.blink::CSSParserToken"* %111) #11
  br label %116

116:                                              ; preds = %109, %114
  call void @llvm.lifetime.end.p0i8(i64 832, i8* nonnull %10) #11
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #11
  ret %"class.blink::CSSPropertyValueSet"* %55
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20ConsumeAtRulePreludeERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 {
  %2 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %0)
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #11
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 31
  %21 = and i32 %18, 192
  %22 = icmp eq i32 %21, 128
  %23 = or i1 %20, %22
  br i1 %23, label %92, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  %30 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  br label %37

31:                                               ; preds = %82
  %32 = and i32 %83, 63
  %33 = icmp eq i32 %32, 31
  %34 = and i32 %83, 192
  %35 = icmp eq i32 %34, 128
  %36 = or i1 %33, %35
  br i1 %36, label %89, label %37

37:                                               ; preds = %24, %31
  %38 = phi i32 [ %18, %24 ], [ %83, %31 ]
  %39 = phi i32 [ %19, %24 ], [ %32, %31 ]
  switch i32 %39, label %40 [
    i32 27, label %89
    i32 21, label %89
  ]

40:                                               ; preds = %37, %82
  %41 = phi i32 [ %83, %82 ], [ %38, %37 ]
  %42 = phi i32 [ %84, %82 ], [ %38, %37 ]
  %43 = phi i32 [ %76, %82 ], [ 0, %37 ]
  store i8 0, i8* %4, align 4
  %44 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %25, align 8
  %45 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %45, align 4
  %49 = icmp ult i32 %47, %48
  %50 = select i1 %49, i32 %47, i32 %48
  store i32 %50, i32* %26, align 8
  %51 = load i32, i32* %15, align 4
  %52 = load i32, i32* %27, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %61, label %54, !prof !6

54:                                               ; preds = %40
  %55 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %28, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %55, i64 %56
  %58 = bitcast %"class.blink::CSSParserToken"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %29, i64 24, i1 false) #11
  %59 = load i32, i32* %15, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %15, align 4
  br label %63

61:                                               ; preds = %40
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.908"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %16) #11
  %62 = load i32, i32* %17, align 8
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %41, %54 ]
  %65 = phi i32 [ %62, %61 ], [ %42, %54 ]
  %66 = lshr i32 %65, 6
  %67 = and i32 %66, 3
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = add i32 %43, 1
  br label %75

71:                                               ; preds = %63
  %72 = icmp eq i32 %67, 2
  %73 = zext i1 %72 to i32
  %74 = sub i32 %43, %73
  br label %75

75:                                               ; preds = %71, %69
  %76 = phi i32 [ %70, %69 ], [ %74, %71 ]
  %77 = load i8, i8* %4, align 4, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %75
  store i8 1, i8* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %80 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %25, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %80) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %30, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  %81 = load i32, i32* %17, align 8
  br label %82

82:                                               ; preds = %79, %75
  %83 = phi i32 [ %64, %75 ], [ %81, %79 ]
  %84 = phi i32 [ %65, %75 ], [ %81, %79 ]
  %85 = and i32 %84, 63
  %86 = icmp ne i32 %85, 31
  %87 = icmp ne i32 %76, 0
  %88 = and i1 %87, %86
  br i1 %88, label %40, label %31

89:                                               ; preds = %37, %37, %31
  %90 = load i32, i32* %15, align 4
  %91 = zext i32 %90 to i64
  br label %92

92:                                               ; preds = %89, %13
  %93 = phi i64 [ %91, %89 ], [ 0, %13 ]
  %94 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %95, i64 %93
  %97 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %95, 0
  %98 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %97, %"class.blink::CSSParserToken"* %96, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %98
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink40ConsumeEndOfPreludeForAtRuleWithoutBlockERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  store i8 1, i8* %5, align 4
  %9 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %11 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %11) #11
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %13 = bitcast %"class.blink::CSSParserToken"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 8 %9, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  br label %14

14:                                               ; preds = %1, %8
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %16 = bitcast %"class.blink::CSSParserToken"* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 63
  %19 = icmp eq i32 %18, 31
  %20 = and i32 %17, 192
  %21 = icmp eq i32 %20, 128
  %22 = or i1 %19, %21
  br i1 %22, label %61, label %23

23:                                               ; preds = %14
  %24 = icmp eq i32 %18, 21
  br i1 %24, label %25, label %35

25:                                               ; preds = %23
  store i8 0, i8* %5, align 4
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %27 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %27, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %27, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %28, align 4
  %32 = icmp ult i32 %30, %31
  %33 = select i1 %32, i32 %30, i32 %31
  %34 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  store i32 %33, i32* %34, align 8
  br label %61

35:                                               ; preds = %23
  %36 = load i8, i8* %5, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  store i8 1, i8* %5, align 4
  %39 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %41 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %40, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %41) #11
  %42 = bitcast %"class.blink::CSSParserToken"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %39, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  br label %43

43:                                               ; preds = %35, %38
  store i8 0, i8* %5, align 4
  %44 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %45 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %45, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %45, i64 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %46, align 4
  %50 = icmp ult i32 %48, %49
  %51 = select i1 %50, i32 %48, i32 %49
  %52 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  store i32 %51, i32* %52, align 8
  %53 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %0) #11
  %54 = load i8, i8* %5, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %43
  store i8 1, i8* %5, align 4
  %57 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %44, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %58) #11
  %59 = bitcast %"class.blink::CSSParserToken"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %57, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  br label %60

60:                                               ; preds = %43, %56
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %0) #11
  br label %61

61:                                               ; preds = %14, %25, %60
  %62 = phi i1 [ false, %60 ], [ true, %25 ], [ true, %14 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink37ConsumeEndOfPreludeForAtRuleWithBlockERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* nocapture dereferenceable(832)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  store i8 1, i8* %3, align 4
  %7 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %9 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %9) #11
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::CSSParserToken"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* nonnull align 8 %7, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::CSSParserToken"* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 63
  %17 = icmp eq i32 %16, 31
  %18 = and i32 %15, 192
  %19 = icmp eq i32 %18, 128
  %20 = or i1 %17, %19
  br i1 %20, label %33, label %21

21:                                               ; preds = %12
  %22 = icmp eq i32 %16, 21
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  store i8 0, i8* %3, align 4
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %25 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %25, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %25, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* %26, align 4
  %30 = icmp ult i32 %28, %29
  %31 = select i1 %30, i32 %28, i32 %29
  %32 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  store i32 %31, i32* %32, align 8
  br label %33

33:                                               ; preds = %12, %21, %23
  %34 = phi i1 [ false, %23 ], [ true, %21 ], [ false, %12 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ConsumeErroneousAtRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %0) #11
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  store i8 1, i8* %6, align 4
  %10 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %12 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %11, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %12) #11
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::CSSParserToken"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %10, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  br label %15

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 63
  %20 = icmp eq i32 %19, 31
  %21 = and i32 %18, 192
  %22 = icmp eq i32 %21, 128
  %23 = or i1 %20, %22
  br i1 %23, label %62, label %24

24:                                               ; preds = %15
  %25 = icmp eq i32 %19, 27
  br i1 %25, label %26, label %52

26:                                               ; preds = %24
  %27 = load i8, i8* %6, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  store i8 1, i8* %6, align 4
  %30 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %32 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %31, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %32) #11
  %33 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %30, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #11
  br label %34

34:                                               ; preds = %26, %29
  store i8 0, i8* %6, align 4
  %35 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %36 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %36, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %36, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %37, align 4
  %41 = icmp ult i32 %39, %40
  %42 = select i1 %41, i32 %39, i32 %40
  %43 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  store i32 %42, i32* %43, align 8
  %44 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %0) #11
  %45 = load i8, i8* %6, align 4, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %34
  store i8 1, i8* %6, align 4
  %48 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  %49 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %35, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %49) #11
  %50 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %48, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  br label %51

51:                                               ; preds = %34, %47
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %0) #11
  br label %62

52:                                               ; preds = %24
  store i8 0, i8* %6, align 4
  %53 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %54 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %54, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %54, i64 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* %55, align 4
  %59 = icmp ult i32 %57, %58
  %60 = select i1 %59, i32 %57, i32 %58
  %61 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  store i32 %60, i32* %61, align 8
  br label %62

62:                                               ; preds = %51, %52, %15
  ret void
}

declare void @_ZN5blink20CSSParserTokenStream26ConsumeIncludingWhitespaceEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

declare i32 @_ZN5blink11CssAtRuleIDEN3WTF10StringViewE(%"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare void @_ZN5blink11CountAtRuleEPKNS_16CSSParserContextENS_11CSSAtRuleIDE(%"class.blink::CSSParserContext"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleCharset"* @_ZN5blink13CSSParserImpl18ConsumeCharsetRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %2 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %0) #11
  %3 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %2, 0
  %4 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %2, 1
  %5 = tail call zeroext i1 @_ZN5blink40ConsumeEndOfPreludeForAtRuleWithoutBlockERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %0)
  br i1 %5, label %6, label %42

6:                                                ; preds = %1
  %7 = icmp eq %"class.blink::CSSParserToken"* %3, %4
  %8 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %9 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %3, i64 1
  %10 = select i1 %7, %"class.blink::CSSParserToken"* %3, %"class.blink::CSSParserToken"* %9
  %11 = select i1 %7, %"class.blink::CSSParserToken"* %8, %"class.blink::CSSParserToken"* %3
  %12 = icmp ult %"class.blink::CSSParserToken"* %10, %4
  %13 = select i1 %12, %"class.blink::CSSParserToken"* %10, %"class.blink::CSSParserToken"* %8
  %14 = bitcast %"class.blink::CSSParserToken"* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 63
  %17 = icmp eq i32 %16, 17
  br i1 %17, label %18, label %27

18:                                               ; preds = %6, %18
  %19 = phi %"class.blink::CSSParserToken"* [ %20, %18 ], [ %10, %6 ]
  %20 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %19, i64 1
  %21 = icmp ult %"class.blink::CSSParserToken"* %20, %4
  %22 = select i1 %21, %"class.blink::CSSParserToken"* %20, %"class.blink::CSSParserToken"* %8
  %23 = bitcast %"class.blink::CSSParserToken"* %22 to i32*
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 63
  %26 = icmp eq i32 %25, 17
  br i1 %26, label %18, label %27

27:                                               ; preds = %18, %6
  %28 = phi %"class.blink::CSSParserToken"* [ %10, %6 ], [ %20, %18 ]
  %29 = bitcast %"class.blink::CSSParserToken"* %11 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 63
  %32 = icmp eq i32 %31, 29
  %33 = icmp eq %"class.blink::CSSParserToken"* %28, %4
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %42

35:                                               ; preds = %27
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 1) #11
  %37 = bitcast i8* %36 to %"class.blink::StyleRuleCharset"*
  store i8 0, i8* %36, align 1
  %38 = getelementptr inbounds i8, i8* %36, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  br label %42

42:                                               ; preds = %35, %27, %1
  %43 = phi %"class.blink::StyleRuleCharset"* [ null, %1 ], [ %37, %35 ], [ null, %27 ]
  ret %"class.blink::StyleRuleCharset"* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleImport"* @_ZN5blink13CSSParserImpl17ConsumeImportRuleEN3WTF12AtomicStringERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* nocapture readonly, %"class.WTF::StringImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %class.scoped_refptr.493, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 1
  %8 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %2) #11
  %12 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %11, 0
  %13 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %11, 1
  %14 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %7, align 8
  %15 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink40ConsumeEndOfPreludeForAtRuleWithoutBlockERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %2)
  br i1 %17, label %18, label %61

18:                                               ; preds = %3
  %19 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %19, label %78, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %22 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %21, align 8
  %23 = icmp eq %"class.blink::CSSParserObserver"* %22, null
  br i1 %23, label %43, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::CSSParserObserver"* %22 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %26 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %25, align 8
  %27 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %26, align 8
  tail call void %27(%"class.blink::CSSParserObserver"* nonnull %22, i32 2, i32 %10) #11
  %28 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %21, align 8
  %29 = bitcast %"class.blink::CSSParserObserver"* %28 to void (%"class.blink::CSSParserObserver"*, i32)***
  %30 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %30, i64 1
  %32 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %31, align 8
  tail call void %32(%"class.blink::CSSParserObserver"* %28, i32 %16) #11
  %33 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %21, align 8
  %34 = bitcast %"class.blink::CSSParserObserver"* %33 to void (%"class.blink::CSSParserObserver"*, i32)***
  %35 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %35, i64 3
  %37 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %36, align 8
  tail call void %37(%"class.blink::CSSParserObserver"* %33, i32 %16) #11
  %38 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %21, align 8
  %39 = bitcast %"class.blink::CSSParserObserver"* %38 to void (%"class.blink::CSSParserObserver"*, i32)***
  %40 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %40, i64 4
  %42 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %41, align 8
  tail call void %42(%"class.blink::CSSParserObserver"* %38, i32 %16) #11
  br label %43

43:                                               ; preds = %20, %24
  %44 = bitcast %class.scoped_refptr.493* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %46 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %45, align 8
  %47 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink16CSSParserContext19GetExecutionContextEv(%"class.blink::CSSParserContext"* %46) #11
  %48 = tail call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser18ParseMediaQuerySetENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"* %12, %"class.blink::CSSParserToken"* %13, %"class.blink::ExecutionContext"* %47) #11
  %49 = getelementptr inbounds %class.scoped_refptr.493, %class.scoped_refptr.493* %5, i64 0, i32 0
  %50 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %45, align 8
  %51 = tail call zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"* %50) #11
  %52 = zext i1 %51 to i32
  %53 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 56) #11
  %54 = bitcast i8* %53 to %"class.blink::StyleRuleImport"*
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  store %"class.blink::MediaQuerySet"* null, %"class.blink::MediaQuerySet"** %49, align 8
  call void @_ZN5blink15StyleRuleImportC1ERKN3WTF6StringE13scoped_refptrINS_13MediaQuerySetEENS_11OriginCleanE(%"class.blink::StyleRuleImport"* %54, %"class.WTF::String"* nonnull dereferenceable(8) %55, %"class.blink::MediaQuerySet"* %48, i32 %52) #11
  %56 = getelementptr inbounds i8, i8* %53, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.493* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  br label %61

61:                                               ; preds = %3, %43
  %62 = phi %"class.WTF::StringImpl"* [ %1, %3 ], [ %60, %43 ]
  %63 = phi %"class.blink::StyleRuleImport"* [ null, %3 ], [ %54, %43 ]
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %78

78:                                               ; preds = %18, %61, %74, %77
  %79 = phi %"class.blink::StyleRuleImport"* [ %63, %61 ], [ %63, %74 ], [ %63, %77 ], [ null, %18 ]
  ret %"class.blink::StyleRuleImport"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleNamespace"* @_ZN5blink13CSSParserImpl20ConsumeNamespaceRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"* nocapture readnone, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::CSSParserTokenRange", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.blink::CSSParserTokenRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %5, i64 0, i32 1
  %10 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %11 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %10, 0
  store %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"** %8, align 8
  %12 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %10, 1
  store %"class.blink::CSSParserToken"* %12, %"class.blink::CSSParserToken"** %9, align 8
  %13 = tail call zeroext i1 @_ZN5blink40ConsumeEndOfPreludeForAtRuleWithoutBlockERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1)
  br i1 %13, label %14, label %315

14:                                               ; preds = %2
  %15 = icmp ult %"class.blink::CSSParserToken"* %11, %12
  %16 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %17 = select i1 %15, %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"* %16
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 63
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %65

22:                                               ; preds = %14
  %23 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = icmp eq %"class.blink::CSSParserToken"* %11, %12
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %11, i64 1
  store %"class.blink::CSSParserToken"* %26, %"class.blink::CSSParserToken"** %8, align 8
  br label %27

27:                                               ; preds = %22, %25
  %28 = phi %"class.blink::CSSParserToken"* [ %26, %25 ], [ %11, %22 ]
  %29 = phi %"class.blink::CSSParserToken"* [ %11, %25 ], [ %16, %22 ]
  %30 = icmp ult %"class.blink::CSSParserToken"* %28, %12
  %31 = select i1 %30, %"class.blink::CSSParserToken"* %28, %"class.blink::CSSParserToken"* %16
  %32 = bitcast %"class.blink::CSSParserToken"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 63
  %35 = icmp eq i32 %34, 17
  br i1 %35, label %36, label %45

36:                                               ; preds = %27, %36
  %37 = phi %"class.blink::CSSParserToken"* [ %38, %36 ], [ %28, %27 ]
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %37, i64 1
  store %"class.blink::CSSParserToken"* %38, %"class.blink::CSSParserToken"** %8, align 8
  %39 = icmp ult %"class.blink::CSSParserToken"* %38, %12
  %40 = select i1 %39, %"class.blink::CSSParserToken"* %38, %"class.blink::CSSParserToken"* %16
  %41 = bitcast %"class.blink::CSSParserToken"* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 63
  %44 = icmp eq i32 %43, 17
  br i1 %44, label %36, label %45

45:                                               ; preds = %36, %27
  %46 = bitcast %"class.blink::CSSParserToken"* %29 to i32*
  %47 = load i32, i32* %46, align 8, !noalias !41
  %48 = and i32 %47, 262144
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %29, i64 0, i32 2
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !41
  %53 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %29, i64 0, i32 1
  %54 = load i32, i32* %53, align 4, !noalias !41
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = select i1 %49, i64 %55, i64 %56
  %58 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %57, i64* %58, align 8, !alias.scope !41
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %60 = bitcast i8** %59 to i64*
  store i64 %52, i64* %60, align 8, !alias.scope !41
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %54, i32* %61, align 8, !alias.scope !41
  %62 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  %63 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %64 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  br label %65

65:                                               ; preds = %45, %14
  %66 = phi %"class.blink::CSSParserToken"* [ %64, %45 ], [ %12, %14 ]
  %67 = phi %"class.blink::CSSParserToken"* [ %63, %45 ], [ %11, %14 ]
  %68 = phi %"class.WTF::StringImpl"* [ %62, %45 ], [ null, %14 ]
  %69 = icmp ult %"class.blink::CSSParserToken"* %67, %66
  %70 = select i1 %69, %"class.blink::CSSParserToken"* %67, %"class.blink::CSSParserToken"* %16
  %71 = bitcast %"class.blink::CSSParserToken"* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 63
  switch i32 %73, label %299 [
    i32 29, label %74
    i32 4, label %74
    i32 1, label %100
  ]

74:                                               ; preds = %65, %65
  %75 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  %76 = icmp eq %"class.blink::CSSParserToken"* %67, %66
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %67, i64 1
  store %"class.blink::CSSParserToken"* %78, %"class.blink::CSSParserToken"** %8, align 8
  br label %79

79:                                               ; preds = %77, %74
  %80 = phi %"class.blink::CSSParserToken"* [ %78, %77 ], [ %66, %74 ]
  %81 = phi %"class.blink::CSSParserToken"* [ %67, %77 ], [ %16, %74 ]
  %82 = icmp ult %"class.blink::CSSParserToken"* %80, %66
  %83 = select i1 %82, %"class.blink::CSSParserToken"* %80, %"class.blink::CSSParserToken"* %16
  %84 = bitcast %"class.blink::CSSParserToken"* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 63
  %87 = icmp eq i32 %86, 17
  br i1 %87, label %88, label %97

88:                                               ; preds = %79, %88
  %89 = phi %"class.blink::CSSParserToken"* [ %90, %88 ], [ %80, %79 ]
  %90 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %89, i64 1
  store %"class.blink::CSSParserToken"* %90, %"class.blink::CSSParserToken"** %8, align 8
  %91 = icmp ult %"class.blink::CSSParserToken"* %90, %66
  %92 = select i1 %91, %"class.blink::CSSParserToken"* %90, %"class.blink::CSSParserToken"* %16
  %93 = bitcast %"class.blink::CSSParserToken"* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 63
  %96 = icmp eq i32 %95, 17
  br i1 %96, label %88, label %97

97:                                               ; preds = %88, %79
  %98 = bitcast %"class.blink::CSSParserToken"* %81 to i32*
  %99 = load i32, i32* %98, align 8, !noalias !44
  br label %217

100:                                              ; preds = %65
  %101 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %70, i64 0, i32 2
  %102 = bitcast i8** %101 to i64*
  %103 = load i64, i64* %102, align 8, !noalias !47
  %104 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %70, i64 0, i32 1
  %105 = load i32, i32* %104, align 4, !noalias !47
  %106 = icmp eq i32 %105, 3
  br i1 %106, label %107, label %299

107:                                              ; preds = %100
  %108 = and i32 %72, 262144
  %109 = icmp eq i32 %108, 0
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %112 = select i1 %109, i64 %110, i64 %111
  %113 = inttoptr i64 %112 to %"class.WTF::StringImpl"*
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %138, label %118

118:                                              ; preds = %107
  %119 = inttoptr i64 %103 to i8*
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 117), align 1
  %126 = sext i8 %125 to i32
  %127 = icmp eq i32 %124, %126
  br i1 %127, label %128, label %299

128:                                              ; preds = %118
  %129 = getelementptr inbounds i8, i8* %119, i64 1
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i64
  %132 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %174, label %299

138:                                              ; preds = %107
  %139 = inttoptr i64 %103 to i16*
  %140 = load i16, i16* %139, align 2
  %141 = add i16 %140, -65
  %142 = icmp ult i16 %141, 26
  %143 = zext i1 %142 to i16
  %144 = shl nuw nsw i16 %143, 5
  %145 = or i16 %144, %140
  %146 = zext i16 %145 to i32
  %147 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 117), align 1
  %148 = sext i8 %147 to i32
  %149 = icmp eq i32 %146, %148
  br i1 %149, label %150, label %299

150:                                              ; preds = %138
  %151 = getelementptr inbounds i16, i16* %139, i64 1
  %152 = load i16, i16* %151, align 2
  %153 = add i16 %152, -65
  %154 = icmp ult i16 %153, 26
  %155 = zext i1 %154 to i16
  %156 = shl nuw nsw i16 %155, 5
  %157 = or i16 %156, %152
  %158 = zext i16 %157 to i32
  %159 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 114), align 2
  %160 = sext i8 %159 to i32
  %161 = icmp eq i32 %158, %160
  br i1 %161, label %162, label %299

162:                                              ; preds = %150
  %163 = getelementptr inbounds i16, i16* %139, i64 2
  %164 = load i16, i16* %163, align 2
  %165 = add i16 %164, -65
  %166 = icmp ult i16 %165, 26
  %167 = zext i1 %166 to i16
  %168 = shl nuw nsw i16 %167, 5
  %169 = or i16 %168, %164
  %170 = zext i16 %169 to i32
  %171 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %172 = sext i8 %171 to i32
  %173 = icmp eq i32 %170, %172
  br i1 %173, label %184, label %299

174:                                              ; preds = %128
  %175 = getelementptr inbounds i8, i8* %119, i64 2
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i32
  %181 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 108), align 4
  %182 = sext i8 %181 to i32
  %183 = icmp eq i32 %180, %182
  br i1 %183, label %184, label %299

184:                                              ; preds = %174, %162
  %185 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* nonnull %5) #11
  %186 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %185, 0
  %187 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %185, 1
  %188 = icmp eq %"class.blink::CSSParserToken"* %186, %187
  %189 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %186, i64 1
  %190 = select i1 %188, %"class.blink::CSSParserToken"* %186, %"class.blink::CSSParserToken"* %189
  %191 = select i1 %188, %"class.blink::CSSParserToken"* %16, %"class.blink::CSSParserToken"* %186
  %192 = icmp ult %"class.blink::CSSParserToken"* %190, %187
  %193 = select i1 %192, %"class.blink::CSSParserToken"* %190, %"class.blink::CSSParserToken"* %16
  %194 = bitcast %"class.blink::CSSParserToken"* %193 to i32*
  %195 = load i32, i32* %194, align 8
  %196 = and i32 %195, 63
  %197 = icmp eq i32 %196, 17
  br i1 %197, label %198, label %207

198:                                              ; preds = %184, %198
  %199 = phi %"class.blink::CSSParserToken"* [ %200, %198 ], [ %190, %184 ]
  %200 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %199, i64 1
  %201 = icmp ult %"class.blink::CSSParserToken"* %200, %187
  %202 = select i1 %201, %"class.blink::CSSParserToken"* %200, %"class.blink::CSSParserToken"* %16
  %203 = bitcast %"class.blink::CSSParserToken"* %202 to i32*
  %204 = load i32, i32* %203, align 8
  %205 = and i32 %204, 63
  %206 = icmp eq i32 %205, 17
  br i1 %206, label %198, label %207

207:                                              ; preds = %198, %184
  %208 = phi %"class.blink::CSSParserToken"* [ %190, %184 ], [ %200, %198 ]
  %209 = bitcast %"class.blink::CSSParserToken"* %191 to i32*
  %210 = load i32, i32* %209, align 8
  %211 = and i32 %210, 63
  %212 = icmp ne i32 %211, 30
  %213 = icmp eq %"class.blink::CSSParserToken"* %208, %187
  %214 = and i1 %213, %212
  br i1 %214, label %215, label %299

215:                                              ; preds = %207
  %216 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #11
  br label %217

217:                                              ; preds = %97, %215
  %218 = phi i32 [ %99, %97 ], [ %210, %215 ]
  %219 = phi %"class.blink::CSSParserToken"* [ %81, %97 ], [ %191, %215 ]
  %220 = phi %"class.WTF::StringView"* [ %3, %97 ], [ %4, %215 ]
  %221 = phi i8* [ %75, %97 ], [ %216, %215 ]
  %222 = and i32 %218, 262144
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %219, i64 0, i32 2
  %225 = bitcast i8** %224 to i64*
  %226 = load i64, i64* %225, align 8, !noalias !50
  %227 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %219, i64 0, i32 1
  %228 = load i32, i32* %227, align 4, !noalias !50
  %229 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %230 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %231 = select i1 %223, i64 %229, i64 %230
  %232 = bitcast %"class.WTF::StringView"* %220 to i64*
  store i64 %231, i64* %232, align 8, !alias.scope !51
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %220, i64 0, i32 1
  %234 = bitcast i8** %233 to i64*
  store i64 %226, i64* %234, align 8, !alias.scope !51
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %220, i64 0, i32 2
  store i32 %228, i32* %235, align 8, !alias.scope !51
  %236 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView14ToAtomicStringEv(%"class.WTF::StringView"* nonnull %220) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #11
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %299, label %238

238:                                              ; preds = %217
  %239 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %8, align 8
  %240 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %9, align 8
  %241 = icmp eq %"class.blink::CSSParserToken"* %239, %240
  br i1 %241, label %242, label %285

242:                                              ; preds = %238
  %243 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #11
  %244 = bitcast i8* %243 to %"class.blink::StyleRuleNamespace"*
  %245 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %245, label %263, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %263

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = zext i32 %253 to i33
  %255 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %254, i33 1) #11
  %256 = extractvalue { i33, i1 } %255, 1
  %257 = extractvalue { i33, i1 } %255, 0
  %258 = icmp slt i33 %257, 0
  %259 = or i1 %256, %258
  br i1 %259, label %260, label %261, !prof !6

260:                                              ; preds = %251
  call void @llvm.trap() #11
  unreachable

261:                                              ; preds = %251
  %262 = trunc i33 %257 to i32
  store i32 %262, i32* %252, align 4
  br label %263

263:                                              ; preds = %242, %246, %261
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i33
  %272 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %271, i33 1) #11
  %273 = extractvalue { i33, i1 } %272, 1
  %274 = extractvalue { i33, i1 } %272, 0
  %275 = icmp slt i33 %274, 0
  %276 = or i1 %273, %275
  br i1 %276, label %277, label %278, !prof !6

277:                                              ; preds = %268
  call void @llvm.trap() #11
  unreachable

278:                                              ; preds = %268
  %279 = trunc i33 %274 to i32
  store i32 %279, i32* %269, align 4
  br label %280

280:                                              ; preds = %263, %278
  call void @_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_(%"class.blink::StyleRuleNamespace"* %244, %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"* nonnull %236) #11
  %281 = getelementptr inbounds i8, i8* %243, i64 -4
  %282 = bitcast i8* %281 to i16*
  %283 = load atomic i16, i16* %282 monotonic, align 2
  %284 = or i16 %283, 1
  store atomic i16 %284, i16* %282 release, align 2
  br label %285

285:                                              ; preds = %280, %238
  %286 = phi %"class.blink::StyleRuleNamespace"* [ %244, %280 ], [ null, %238 ]
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %285
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %285
  %296 = phi i32 [ %294, %293 ], [ %292, %285 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #11
  br label %299

299:                                              ; preds = %65, %128, %118, %150, %138, %100, %207, %174, %162, %217, %295, %298
  %300 = phi %"class.blink::StyleRuleNamespace"* [ %286, %295 ], [ %286, %298 ], [ null, %217 ], [ null, %162 ], [ null, %174 ], [ null, %207 ], [ null, %100 ], [ null, %138 ], [ null, %150 ], [ null, %118 ], [ null, %128 ], [ null, %65 ]
  %301 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %301, label %315, label %302

302:                                              ; preds = %299
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #11
  br label %315

315:                                              ; preds = %314, %311, %299, %2
  %316 = phi %"class.blink::StyleRuleNamespace"* [ null, %2 ], [ %300, %299 ], [ %300, %311 ], [ %300, %314 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret %"class.blink::StyleRuleNamespace"* %316
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleContainer"* @_ZN5blink13CSSParserImpl20ConsumeContainerRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleBase"*, align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %class.scoped_refptr.493, align 8
  %9 = alloca %"class.blink::HeapVector.295", align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %11 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %15 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %14, 0
  %16 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %14, 1
  %17 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %18 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %2
  store i8 1, i8* %20, align 4
  %24 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %17) #11
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %24, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  br label %27

27:                                               ; preds = %23, %2
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 63
  %32 = icmp eq i32 %31, 31
  %33 = and i32 %30, 192
  %34 = icmp eq i32 %33, 128
  %35 = or i1 %32, %34
  br i1 %35, label %196, label %36

36:                                               ; preds = %27
  %37 = icmp eq i32 %31, 21
  br i1 %37, label %38, label %47

38:                                               ; preds = %36
  store i8 0, i8* %20, align 4
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %40, align 4
  %44 = icmp ult i32 %42, %43
  %45 = select i1 %44, i32 %42, i32 %43
  %46 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %45, i32* %46, align 8
  br label %196

47:                                               ; preds = %36
  %48 = load i8, i8* %20, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %47
  store i8 1, i8* %20, align 4
  %51 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %52) #11
  %53 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  br label %54

54:                                               ; preds = %47, %50
  store i8 0, i8* %20, align 4
  %55 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %56 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %56, align 4
  %60 = icmp ult i32 %58, %59
  %61 = select i1 %60, i32 %58, i32 %59
  %62 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %61, i32* %62, align 8
  %63 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %64 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %65 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %64, align 8
  %66 = icmp eq %"class.blink::CSSParserObserver"* %65, null
  br i1 %66, label %82, label %67

67:                                               ; preds = %54
  %68 = bitcast %"class.blink::CSSParserObserver"* %65 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %69 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %68, align 8
  %70 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %69, align 8
  call void %70(%"class.blink::CSSParserObserver"* nonnull %65, i32 10, i32 %13) #11
  %71 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %64, align 8
  %72 = bitcast %"class.blink::CSSParserObserver"* %71 to void (%"class.blink::CSSParserObserver"*, i32)***
  %73 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %73, i64 1
  %75 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %74, align 8
  call void %75(%"class.blink::CSSParserObserver"* %71, i32 %19) #11
  %76 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %64, align 8
  %77 = load i32, i32* %62, align 8
  %78 = bitcast %"class.blink::CSSParserObserver"* %76 to void (%"class.blink::CSSParserObserver"*, i32)***
  %79 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %79, i64 3
  %81 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %80, align 8
  call void %81(%"class.blink::CSSParserObserver"* %76, i32 %77) #11
  br label %82

82:                                               ; preds = %54, %67
  %83 = bitcast %class.scoped_refptr.493* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = getelementptr inbounds %class.scoped_refptr.493, %class.scoped_refptr.493* %8, i64 0, i32 0
  %85 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %86 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %85, align 8
  %87 = call %"class.blink::ExecutionContext"* @_ZNK5blink16CSSParserContext19GetExecutionContextEv(%"class.blink::CSSParserContext"* %86) #11
  %88 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser18ParseMediaQuerySetENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %16, %"class.blink::ExecutionContext"* %87) #11
  store %"class.blink::MediaQuerySet"* %88, %"class.blink::MediaQuerySet"** %84, align 8
  %89 = icmp eq %"class.blink::MediaQuerySet"* %88, null
  br i1 %89, label %187, label %90

90:                                               ; preds = %82
  %91 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm(i64 16) #11
  %92 = bitcast i8* %91 to %"class.blink::ContainerQuery"*
  %93 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %84, align 8
  %94 = icmp eq %"class.blink::MediaQuerySet"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %93, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %96) #11
  br label %97

97:                                               ; preds = %90, %95
  call void @_ZN5blink14ContainerQueryC1E13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::ContainerQuery"* %92, %"class.blink::MediaQuerySet"* %93) #11
  %98 = getelementptr inbounds i8, i8* %91, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  %102 = bitcast %"class.blink::HeapVector.295"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %105 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 16, i1 false) #11
  %106 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  %107 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  %108 = bitcast %"class.blink::StyleRuleBase"** %3 to i8*
  %109 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %9, i64 0, i32 0
  br label %110

110:                                              ; preds = %170, %97
  %111 = phi i32 [ %151, %170 ], [ 3, %97 ]
  br label %112

112:                                              ; preds = %140, %110
  %113 = load i8, i8* %20, align 4, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %112
  store i8 1, i8* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #11
  %116 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %116) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* nonnull align 8 %106, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  br label %117

117:                                              ; preds = %115, %112
  %118 = load i32, i32* %29, align 8
  %119 = and i32 %118, 63
  %120 = icmp eq i32 %119, 31
  %121 = and i32 %118, 192
  %122 = icmp eq i32 %121, 128
  %123 = or i1 %120, %122
  br i1 %123, label %171, label %124

124:                                              ; preds = %117
  switch i32 %119, label %135 [
    i32 17, label %125
    i32 2, label %133
  ]

125:                                              ; preds = %124
  store i8 0, i8* %20, align 4
  %126 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %127 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %126, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %126, i64 0, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = load i32, i32* %127, align 4
  %131 = icmp ult i32 %129, %130
  %132 = select i1 %131, i32 %129, i32 %130
  store i32 %132, i32* %62, align 8
  br label %140

133:                                              ; preds = %124
  %134 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %111) #11
  br label %137

135:                                              ; preds = %124
  %136 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %111) #11
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi %"class.blink::StyleRuleBase"* [ %136, %135 ], [ %134, %133 ]
  %139 = icmp eq %"class.blink::StyleRuleBase"* %138, null
  br i1 %139, label %140, label %141

140:                                              ; preds = %137, %125
  br label %112

141:                                              ; preds = %137
  %142 = add i32 %111, -4
  %143 = icmp ult i32 %142, 3
  br i1 %143, label %150, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %138, i64 0, i32 0
  %146 = load i8, i8* %145, align 1
  switch i8 %146, label %147 [
    i8 0, label %150
    i8 2, label %150
  ]

147:                                              ; preds = %144
  %148 = icmp eq i8 %146, 9
  %149 = select i1 %148, i32 2, i32 3
  br label %150

150:                                              ; preds = %147, %144, %144, %141
  %151 = phi i32 [ %111, %141 ], [ 1, %144 ], [ %149, %147 ], [ 1, %144 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #11
  store %"class.blink::StyleRuleBase"* %138, %"class.blink::StyleRuleBase"** %3, align 8
  %152 = load i32, i32* %105, align 4
  %153 = load i32, i32* %104, align 8
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %169, label %155, !prof !6

155:                                              ; preds = %150
  %156 = ptrtoint %"class.blink::StyleRuleBase"* %138 to i64
  %157 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %103, align 8
  %158 = zext i32 %152 to i64
  %159 = getelementptr inbounds %"class.blink::Member.301", %"class.blink::Member.301"* %157, i64 %158
  %160 = bitcast %"class.blink::Member.301"* %159 to i64*
  store atomic i64 %156, i64* %160 monotonic, align 8
  %161 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %138, i64 0, i32 0
  %165 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %164) #11
  br label %166

166:                                              ; preds = %163, %155
  %167 = load i32, i32* %105, align 4
  %168 = add i32 %167, 1
  store i32 %168, i32* %105, align 4
  br label %170

169:                                              ; preds = %150
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.298"* nonnull %109, %"class.blink::StyleRuleBase"** nonnull dereferenceable(8) %3) #11
  br label %170

170:                                              ; preds = %169, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #11
  br label %110

171:                                              ; preds = %117
  %172 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %64, align 8
  %173 = icmp eq %"class.blink::CSSParserObserver"* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %171
  %175 = load i32, i32* %62, align 8
  %176 = bitcast %"class.blink::CSSParserObserver"* %172 to void (%"class.blink::CSSParserObserver"*, i32)***
  %177 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %177, i64 4
  %179 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %178, align 8
  call void %179(%"class.blink::CSSParserObserver"* nonnull %172, i32 %175) #11
  br label %180

180:                                              ; preds = %171, %174
  %181 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 40) #11
  %182 = bitcast i8* %181 to %"class.blink::StyleRuleContainer"*
  call void @_ZN5blink18StyleRuleContainerC1ERNS_14ContainerQueryERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleContainer"* %182, %"class.blink::ContainerQuery"* dereferenceable(16) %92, %"class.blink::HeapVector.295"* nonnull dereferenceable(16) %9) #11
  %183 = getelementptr inbounds i8, i8* %181, i64 -4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 monotonic, align 2
  %186 = or i16 %185, 1
  store atomic i16 %186, i16* %184 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #11
  br label %187

187:                                              ; preds = %82, %180
  %188 = phi %"class.blink::StyleRuleContainer"* [ %182, %180 ], [ null, %82 ]
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.493* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  %189 = load i8, i8* %20, align 4, !range !2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %195

191:                                              ; preds = %187
  store i8 1, i8* %20, align 4
  %192 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %192) #11
  %193 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %193) #11
  %194 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* nonnull align 8 %192, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %192) #11
  br label %195

195:                                              ; preds = %187, %191
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %196

196:                                              ; preds = %27, %38, %195
  %197 = phi %"class.blink::StyleRuleContainer"* [ %188, %195 ], [ null, %38 ], [ null, %27 ]
  ret %"class.blink::StyleRuleContainer"* %197
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleMedia"* @_ZN5blink13CSSParserImpl16ConsumeMediaRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleBase"*, align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.blink::HeapVector.295", align 8
  %9 = alloca %class.scoped_refptr.493, align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %11 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %15 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %14, 0
  %16 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %14, 1
  %17 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %18 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %2
  store i8 1, i8* %20, align 4
  %24 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %17) #11
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %24, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  br label %27

27:                                               ; preds = %23, %2
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 63
  %32 = icmp eq i32 %31, 31
  %33 = and i32 %30, 192
  %34 = icmp eq i32 %33, 128
  %35 = or i1 %32, %34
  br i1 %35, label %190, label %36

36:                                               ; preds = %27
  %37 = icmp eq i32 %31, 21
  br i1 %37, label %38, label %47

38:                                               ; preds = %36
  store i8 0, i8* %20, align 4
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %40, align 4
  %44 = icmp ult i32 %42, %43
  %45 = select i1 %44, i32 %42, i32 %43
  %46 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %45, i32* %46, align 8
  br label %190

47:                                               ; preds = %36
  %48 = load i8, i8* %20, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %47
  store i8 1, i8* %20, align 4
  %51 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %52) #11
  %53 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  br label %54

54:                                               ; preds = %47, %50
  store i8 0, i8* %20, align 4
  %55 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %56 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %56, align 4
  %60 = icmp ult i32 %58, %59
  %61 = select i1 %60, i32 %58, i32 %59
  %62 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %61, i32* %62, align 8
  %63 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %64 = bitcast %"class.blink::HeapVector.295"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #11
  %68 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %69 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %70 = icmp eq %"class.blink::CSSParserObserver"* %69, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %54
  %72 = bitcast %"class.blink::CSSParserObserver"* %69 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %73 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %72, align 8
  %74 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %73, align 8
  call void %74(%"class.blink::CSSParserObserver"* nonnull %69, i32 3, i32 %13) #11
  %75 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %76 = bitcast %"class.blink::CSSParserObserver"* %75 to void (%"class.blink::CSSParserObserver"*, i32)***
  %77 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %77, i64 1
  %79 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %78, align 8
  call void %79(%"class.blink::CSSParserObserver"* %75, i32 %19) #11
  %80 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %81 = load i32, i32* %62, align 8
  %82 = bitcast %"class.blink::CSSParserObserver"* %80 to void (%"class.blink::CSSParserObserver"*, i32)***
  %83 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %83, i64 3
  %85 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %84, align 8
  call void %85(%"class.blink::CSSParserObserver"* %80, i32 %81) #11
  br label %86

86:                                               ; preds = %54, %71
  %87 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 2
  %88 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %87, align 8
  %89 = icmp eq %"class.blink::StyleSheetContents"* %88, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  call void @_ZN5blink18StyleSheetContents18SetHasMediaQueriesEv(%"class.blink::StyleSheetContents"* nonnull %88) #11
  br label %91

91:                                               ; preds = %86, %90
  %92 = bitcast %class.scoped_refptr.493* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %class.scoped_refptr.493, %class.scoped_refptr.493* %9, i64 0, i32 0
  %94 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %95 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %94, align 8
  %96 = call %"class.blink::ExecutionContext"* @_ZNK5blink16CSSParserContext19GetExecutionContextEv(%"class.blink::CSSParserContext"* %95) #11
  %97 = call %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser18ParseMediaQuerySetENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %16, %"class.blink::ExecutionContext"* %96) #11
  store %"class.blink::MediaQuerySet"* %97, %"class.blink::MediaQuerySet"** %93, align 8
  %98 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  %99 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  %100 = bitcast %"class.blink::StyleRuleBase"** %3 to i8*
  %101 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %8, i64 0, i32 0
  br label %102

102:                                              ; preds = %162, %91
  %103 = phi i32 [ %143, %162 ], [ 3, %91 ]
  br label %104

104:                                              ; preds = %132, %102
  %105 = load i8, i8* %20, align 4, !range !2
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  store i8 1, i8* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #11
  %108 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %108) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %98, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #11
  br label %109

109:                                              ; preds = %107, %104
  %110 = load i32, i32* %29, align 8
  %111 = and i32 %110, 63
  %112 = icmp eq i32 %111, 31
  %113 = and i32 %110, 192
  %114 = icmp eq i32 %113, 128
  %115 = or i1 %112, %114
  br i1 %115, label %163, label %116

116:                                              ; preds = %109
  switch i32 %111, label %127 [
    i32 17, label %117
    i32 2, label %125
  ]

117:                                              ; preds = %116
  store i8 0, i8* %20, align 4
  %118 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %119 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %118, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %118, i64 0, i32 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = load i32, i32* %119, align 4
  %123 = icmp ult i32 %121, %122
  %124 = select i1 %123, i32 %121, i32 %122
  store i32 %124, i32* %62, align 8
  br label %132

125:                                              ; preds = %116
  %126 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %103) #11
  br label %129

127:                                              ; preds = %116
  %128 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %103) #11
  br label %129

129:                                              ; preds = %127, %125
  %130 = phi %"class.blink::StyleRuleBase"* [ %128, %127 ], [ %126, %125 ]
  %131 = icmp eq %"class.blink::StyleRuleBase"* %130, null
  br i1 %131, label %132, label %133

132:                                              ; preds = %129, %117
  br label %104

133:                                              ; preds = %129
  %134 = add i32 %103, -4
  %135 = icmp ult i32 %134, 3
  br i1 %135, label %142, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %130, i64 0, i32 0
  %138 = load i8, i8* %137, align 1
  switch i8 %138, label %139 [
    i8 0, label %142
    i8 2, label %142
  ]

139:                                              ; preds = %136
  %140 = icmp eq i8 %138, 9
  %141 = select i1 %140, i32 2, i32 3
  br label %142

142:                                              ; preds = %139, %136, %136, %133
  %143 = phi i32 [ %103, %133 ], [ 1, %136 ], [ %141, %139 ], [ 1, %136 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #11
  store %"class.blink::StyleRuleBase"* %130, %"class.blink::StyleRuleBase"** %3, align 8
  %144 = load i32, i32* %67, align 4
  %145 = load i32, i32* %66, align 8
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %161, label %147, !prof !6

147:                                              ; preds = %142
  %148 = ptrtoint %"class.blink::StyleRuleBase"* %130 to i64
  %149 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %65, align 8
  %150 = zext i32 %144 to i64
  %151 = getelementptr inbounds %"class.blink::Member.301", %"class.blink::Member.301"* %149, i64 %150
  %152 = bitcast %"class.blink::Member.301"* %151 to i64*
  store atomic i64 %148, i64* %152 monotonic, align 8
  %153 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %147
  %156 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %130, i64 0, i32 0
  %157 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %156) #11
  br label %158

158:                                              ; preds = %155, %147
  %159 = load i32, i32* %67, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %67, align 4
  br label %162

161:                                              ; preds = %142
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.298"* nonnull %101, %"class.blink::StyleRuleBase"** nonnull dereferenceable(8) %3) #11
  br label %162

162:                                              ; preds = %161, %158
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #11
  br label %102

163:                                              ; preds = %109
  %164 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %165 = icmp eq %"class.blink::CSSParserObserver"* %164, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %163
  %167 = load i32, i32* %62, align 8
  %168 = bitcast %"class.blink::CSSParserObserver"* %164 to void (%"class.blink::CSSParserObserver"*, i32)***
  %169 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %169, i64 4
  %171 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %170, align 8
  call void %171(%"class.blink::CSSParserObserver"* nonnull %164, i32 %167) #11
  br label %172

172:                                              ; preds = %163, %166
  %173 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 40) #11
  %174 = bitcast i8* %173 to %"class.blink::StyleRuleMedia"*
  %175 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %93, align 8
  %176 = icmp eq %"class.blink::MediaQuerySet"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %175, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %178) #11
  br label %179

179:                                              ; preds = %172, %177
  call void @_ZN5blink14StyleRuleMediaC1E13scoped_refptrINS_13MediaQuerySetEERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleMedia"* %174, %"class.blink::MediaQuerySet"* %175, %"class.blink::HeapVector.295"* nonnull dereferenceable(16) %8) #11
  %180 = getelementptr inbounds i8, i8* %173, i64 -4
  %181 = bitcast i8* %180 to i16*
  %182 = load atomic i16, i16* %181 monotonic, align 2
  %183 = or i16 %182, 1
  store atomic i16 %183, i16* %181 release, align 2
  call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.493* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #11
  %184 = load i8, i8* %20, align 4, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %179
  store i8 1, i8* %20, align 4
  %187 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #11
  %188 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %188) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* nonnull align 8 %187, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #11
  br label %189

189:                                              ; preds = %179, %186
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %190

190:                                              ; preds = %27, %38, %189
  %191 = phi %"class.blink::StyleRuleMedia"* [ %174, %189 ], [ null, %38 ], [ null, %27 ]
  ret %"class.blink::StyleRuleMedia"* %191
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleSupports"* @_ZN5blink13CSSParserImpl19ConsumeSupportsRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleRuleBase"*, align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.blink::HeapVector.295", align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %13 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = tail call i32 @_ZN5blink17CSSSupportsParser24ConsumeSupportsConditionERNS_20CSSParserTokenStreamERNS_13CSSParserImplE(%"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, %"class.blink::CSSParserImpl"* dereferenceable(6192) %0) #11
  tail call void @_ZN5blink20CSSParserTokenStream17ConsumeWhitespaceEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %17 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %18 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %17, 0
  %19 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %17, 1
  %20 = icmp eq %"class.blink::CSSParserToken"* %18, %19
  %21 = select i1 %20, i32 %16, i32 3
  %22 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  %23 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %22, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2
  store i8 1, i8* %25, align 4
  %29 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %22) #11
  %30 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %31 = bitcast %"class.blink::CSSParserToken"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %29, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  br label %32

32:                                               ; preds = %28, %2
  %33 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %34 = bitcast %"class.blink::CSSParserToken"* %33 to i32*
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 63
  %37 = icmp eq i32 %36, 31
  %38 = and i32 %35, 192
  %39 = icmp eq i32 %38, 128
  %40 = or i1 %37, %39
  br i1 %40, label %225, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %36, 21
  br i1 %42, label %43, label %52

43:                                               ; preds = %41
  store i8 0, i8* %25, align 4
  %44 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  %45 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %44, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %45, align 4
  %49 = icmp ult i32 %47, %48
  %50 = select i1 %49, i32 %47, i32 %48
  %51 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %50, i32* %51, align 8
  br label %225

52:                                               ; preds = %41
  %53 = load i8, i8* %25, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  store i8 1, i8* %25, align 4
  %56 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %57) #11
  %58 = bitcast %"class.blink::CSSParserToken"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* nonnull align 8 %56, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  br label %59

59:                                               ; preds = %52, %55
  store i8 0, i8* %25, align 4
  %60 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  %61 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %60, i64 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %60, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = load i32, i32* %61, align 4
  %65 = icmp ult i32 %63, %64
  %66 = select i1 %65, i32 %63, i32 %64
  %67 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %66, i32* %67, align 8
  %68 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %69 = icmp eq i32 %21, 3
  br i1 %69, label %216, label %70

70:                                               ; preds = %59
  %71 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %72 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %71, align 8
  %73 = icmp eq %"class.blink::CSSParserObserver"* %72, null
  br i1 %73, label %89, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.blink::CSSParserObserver"* %72 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %76 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %75, align 8
  %77 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %76, align 8
  call void %77(%"class.blink::CSSParserObserver"* nonnull %72, i32 13, i32 %15) #11
  %78 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %71, align 8
  %79 = bitcast %"class.blink::CSSParserObserver"* %78 to void (%"class.blink::CSSParserObserver"*, i32)***
  %80 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %80, i64 1
  %82 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %81, align 8
  call void %82(%"class.blink::CSSParserObserver"* %78, i32 %24) #11
  %83 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %71, align 8
  %84 = load i32, i32* %67, align 8
  %85 = bitcast %"class.blink::CSSParserObserver"* %83 to void (%"class.blink::CSSParserObserver"*, i32)***
  %86 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %86, i64 3
  %88 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %87, align 8
  call void %88(%"class.blink::CSSParserObserver"* %83, i32 %84) #11
  br label %89

89:                                               ; preds = %70, %74
  %90 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %92 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %94 = sub i32 %24, %15
  call void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* nonnull sret %10, %"class.blink::CSSParserTokenStream"* %1, i32 %15, i32 %94) #11
  %95 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %10) #11
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %95, %"class.WTF::StringImpl"** %96, align 8
  %97 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"* nonnull %9, i32 0) #11
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %91, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %89
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %89, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  %114 = bitcast %"class.blink::HeapVector.295"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #11
  %115 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 0, i64 16, i1 false) #11
  %118 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  %119 = bitcast %"class.blink::CSSParserToken"* %33 to i8*
  %120 = bitcast %"class.blink::StyleRuleBase"** %3 to i8*
  %121 = getelementptr inbounds %"class.blink::HeapVector.295", %"class.blink::HeapVector.295"* %11, i64 0, i32 0
  br label %122

122:                                              ; preds = %182, %113
  %123 = phi i32 [ %163, %182 ], [ 3, %113 ]
  br label %124

124:                                              ; preds = %152, %122
  %125 = load i8, i8* %25, align 4, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %124
  store i8 1, i8* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  %128 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %128) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %118, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  br label %129

129:                                              ; preds = %127, %124
  %130 = load i32, i32* %34, align 8
  %131 = and i32 %130, 63
  %132 = icmp eq i32 %131, 31
  %133 = and i32 %130, 192
  %134 = icmp eq i32 %133, 128
  %135 = or i1 %132, %134
  br i1 %135, label %183, label %136

136:                                              ; preds = %129
  switch i32 %131, label %147 [
    i32 17, label %137
    i32 2, label %145
  ]

137:                                              ; preds = %136
  store i8 0, i8* %25, align 4
  %138 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  %139 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %138, i64 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %138, i64 0, i32 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = load i32, i32* %139, align 4
  %143 = icmp ult i32 %141, %142
  %144 = select i1 %143, i32 %141, i32 %142
  store i32 %144, i32* %67, align 8
  br label %152

145:                                              ; preds = %136
  %146 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %123) #11
  br label %149

147:                                              ; preds = %136
  %148 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 %123) #11
  br label %149

149:                                              ; preds = %147, %145
  %150 = phi %"class.blink::StyleRuleBase"* [ %148, %147 ], [ %146, %145 ]
  %151 = icmp eq %"class.blink::StyleRuleBase"* %150, null
  br i1 %151, label %152, label %153

152:                                              ; preds = %149, %137
  br label %124

153:                                              ; preds = %149
  %154 = add i32 %123, -4
  %155 = icmp ult i32 %154, 3
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %150, i64 0, i32 0
  %158 = load i8, i8* %157, align 1
  switch i8 %158, label %159 [
    i8 0, label %162
    i8 2, label %162
  ]

159:                                              ; preds = %156
  %160 = icmp eq i8 %158, 9
  %161 = select i1 %160, i32 2, i32 3
  br label %162

162:                                              ; preds = %159, %156, %156, %153
  %163 = phi i32 [ %123, %153 ], [ 1, %156 ], [ %161, %159 ], [ 1, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  store %"class.blink::StyleRuleBase"* %150, %"class.blink::StyleRuleBase"** %3, align 8
  %164 = load i32, i32* %117, align 4
  %165 = load i32, i32* %116, align 8
  %166 = icmp eq i32 %164, %165
  br i1 %166, label %181, label %167, !prof !6

167:                                              ; preds = %162
  %168 = ptrtoint %"class.blink::StyleRuleBase"* %150 to i64
  %169 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %115, align 8
  %170 = zext i32 %164 to i64
  %171 = getelementptr inbounds %"class.blink::Member.301", %"class.blink::Member.301"* %169, i64 %170
  %172 = bitcast %"class.blink::Member.301"* %171 to i64*
  store atomic i64 %168, i64* %172 monotonic, align 8
  %173 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %150, i64 0, i32 0
  %177 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %176) #11
  br label %178

178:                                              ; preds = %175, %167
  %179 = load i32, i32* %117, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %117, align 4
  br label %182

181:                                              ; preds = %162
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.298"* nonnull %121, %"class.blink::StyleRuleBase"** nonnull dereferenceable(8) %3) #11
  br label %182

182:                                              ; preds = %181, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  br label %122

183:                                              ; preds = %129
  %184 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %71, align 8
  %185 = icmp eq %"class.blink::CSSParserObserver"* %184, null
  br i1 %185, label %192, label %186

186:                                              ; preds = %183
  %187 = load i32, i32* %67, align 8
  %188 = bitcast %"class.blink::CSSParserObserver"* %184 to void (%"class.blink::CSSParserObserver"*, i32)***
  %189 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %188, align 8
  %190 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %189, i64 4
  %191 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %190, align 8
  call void %191(%"class.blink::CSSParserObserver"* nonnull %184, i32 %187) #11
  br label %192

192:                                              ; preds = %183, %186
  %193 = icmp eq i32 %21, 1
  %194 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 48) #11
  %195 = bitcast i8* %194 to %"class.blink::StyleRuleSupports"*
  call void @_ZN5blink17StyleRuleSupportsC1ERKN3WTF6StringEbRNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleSupports"* %195, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext %193, %"class.blink::HeapVector.295"* nonnull dereferenceable(16) %11) #11
  %196 = getelementptr inbounds i8, i8* %194, i64 -4
  %197 = bitcast i8* %196 to i16*
  %198 = load atomic i16, i16* %197 monotonic, align 2
  %199 = or i16 %198, 1
  store atomic i16 %199, i16* %197 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #11
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %192
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #11
  br label %215

215:                                              ; preds = %192, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  br label %216

216:                                              ; preds = %59, %215
  %217 = phi %"class.blink::StyleRuleSupports"* [ %195, %215 ], [ null, %59 ]
  %218 = load i8, i8* %25, align 4, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %224

220:                                              ; preds = %216
  store i8 1, i8* %25, align 4
  %221 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #11
  %222 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %12, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %222) #11
  %223 = bitcast %"class.blink::CSSParserToken"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* nonnull align 8 %221, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #11
  br label %224

224:                                              ; preds = %216, %220
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %225

225:                                              ; preds = %32, %43, %224
  %226 = phi %"class.blink::StyleRuleSupports"* [ %217, %224 ], [ null, %43 ], [ null, %32 ]
  ret %"class.blink::StyleRuleSupports"* %226
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleViewport"* @_ZN5blink13CSSParserImpl19ConsumeViewportRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %7 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %11 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %10, 0
  %12 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %10, 1
  %13 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %14 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %2
  store i8 1, i8* %16, align 4
  %20 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %13) #11
  %21 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %22 = bitcast %"class.blink::CSSParserToken"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %20, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %23

23:                                               ; preds = %19, %2
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %25 = bitcast %"class.blink::CSSParserToken"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 63
  %28 = icmp eq i32 %27, 31
  %29 = and i32 %26, 192
  %30 = icmp eq i32 %29, 128
  %31 = or i1 %28, %30
  br i1 %31, label %117, label %32

32:                                               ; preds = %23
  %33 = icmp eq i32 %27, 21
  br i1 %33, label %34, label %43

34:                                               ; preds = %32
  store i8 0, i8* %16, align 4
  %35 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %36 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %35, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %35, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %36, align 4
  %40 = icmp ult i32 %38, %39
  %41 = select i1 %40, i32 %38, i32 %39
  %42 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %41, i32* %42, align 8
  br label %117

43:                                               ; preds = %32
  %44 = load i8, i8* %16, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  store i8 1, i8* %16, align 4
  %47 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %48) #11
  %49 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %47, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  br label %50

50:                                               ; preds = %43, %46
  store i8 0, i8* %16, align 4
  %51 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %52 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %51, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %51, i64 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = load i32, i32* %52, align 4
  %56 = icmp ult i32 %54, %55
  %57 = select i1 %56, i32 %54, i32 %55
  %58 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %57, i32* %58, align 8
  %59 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %60 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %61 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %61, i64 0, i32 3
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 5
  %65 = icmp eq %"class.blink::CSSParserToken"* %11, %12
  %66 = and i1 %65, %64
  br i1 %66, label %67, label %108

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %69 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %70 = icmp eq %"class.blink::CSSParserObserver"* %69, null
  br i1 %70, label %90, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.blink::CSSParserObserver"* %69 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %73 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %72, align 8
  %74 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %73, align 8
  call void %74(%"class.blink::CSSParserObserver"* nonnull %69, i32 14, i32 %9) #11
  %75 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %76 = bitcast %"class.blink::CSSParserObserver"* %75 to void (%"class.blink::CSSParserObserver"*, i32)***
  %77 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %77, i64 1
  %79 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %78, align 8
  call void %79(%"class.blink::CSSParserObserver"* %75, i32 %15) #11
  %80 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %81 = bitcast %"class.blink::CSSParserObserver"* %80 to void (%"class.blink::CSSParserObserver"*, i32)***
  %82 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %82, i64 3
  %84 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %83, align 8
  call void %84(%"class.blink::CSSParserObserver"* %80, i32 %15) #11
  %85 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %86 = bitcast %"class.blink::CSSParserObserver"* %85 to void (%"class.blink::CSSParserObserver"*, i32)***
  %87 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %87, i64 4
  %89 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %88, align 8
  call void %89(%"class.blink::CSSParserObserver"* %85, i32 %15) #11
  br label %90

90:                                               ; preds = %67, %71
  %91 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 2
  %92 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %91, align 8
  %93 = icmp eq %"class.blink::StyleSheetContents"* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %92, i64 0, i32 8
  %96 = load i8, i8* %95, align 8
  %97 = or i8 %96, 16
  store i8 %97, i8* %95, align 8
  br label %98

98:                                               ; preds = %90, %94
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 14)
  %99 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %100 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %99, i8 zeroext 3)
  %101 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 16) #11
  %102 = bitcast i8* %101 to %"class.blink::StyleRuleViewport"*
  %103 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %100, i64 0, i32 0
  call void @_ZN5blink17StyleRuleViewportC1EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleViewport"* %102, %"class.blink::CSSPropertyValueSet"* %103) #11
  %104 = getelementptr inbounds i8, i8* %101, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  br label %108

108:                                              ; preds = %50, %98
  %109 = phi %"class.blink::StyleRuleViewport"* [ %102, %98 ], [ null, %50 ]
  %110 = load i8, i8* %16, align 4, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  store i8 1, i8* %16, align 4
  %113 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #11
  %114 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %114) #11
  %115 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %113, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  br label %116

116:                                              ; preds = %108, %112
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %117

117:                                              ; preds = %23, %34, %116
  %118 = phi %"class.blink::StyleRuleViewport"* [ %109, %116 ], [ null, %34 ], [ null, %23 ]
  ret %"class.blink::StyleRuleViewport"* %118
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleFontFace"* @_ZN5blink13CSSParserImpl19ConsumeFontFaceRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %7 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %7, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %11 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %10, 0
  %12 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %10, 1
  %13 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %14 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %2
  store i8 1, i8* %16, align 4
  %20 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %13) #11
  %21 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %22 = bitcast %"class.blink::CSSParserToken"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %20, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %23

23:                                               ; preds = %19, %2
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %25 = bitcast %"class.blink::CSSParserToken"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 63
  %28 = icmp eq i32 %27, 31
  %29 = and i32 %26, 192
  %30 = icmp eq i32 %29, 128
  %31 = or i1 %28, %30
  br i1 %31, label %111, label %32

32:                                               ; preds = %23
  %33 = icmp eq i32 %27, 21
  br i1 %33, label %34, label %43

34:                                               ; preds = %32
  store i8 0, i8* %16, align 4
  %35 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %36 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %35, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %35, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %36, align 4
  %40 = icmp ult i32 %38, %39
  %41 = select i1 %40, i32 %38, i32 %39
  %42 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %41, i32* %42, align 8
  br label %111

43:                                               ; preds = %32
  %44 = load i8, i8* %16, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %43
  store i8 1, i8* %16, align 4
  %47 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %48) #11
  %49 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %47, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  br label %50

50:                                               ; preds = %43, %46
  store i8 0, i8* %16, align 4
  %51 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  %52 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %51, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %51, i64 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = load i32, i32* %52, align 4
  %56 = icmp ult i32 %54, %55
  %57 = select i1 %56, i32 %54, i32 %55
  %58 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %57, i32* %58, align 8
  %59 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %60 = icmp eq %"class.blink::CSSParserToken"* %11, %12
  br i1 %60, label %61, label %102

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %63 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %62, align 8
  %64 = icmp eq %"class.blink::CSSParserObserver"* %63, null
  br i1 %64, label %84, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.blink::CSSParserObserver"* %63 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %67 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %66, align 8
  %68 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %67, align 8
  call void %68(%"class.blink::CSSParserObserver"* nonnull %63, i32 4, i32 %9) #11
  %69 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %62, align 8
  %70 = bitcast %"class.blink::CSSParserObserver"* %69 to void (%"class.blink::CSSParserObserver"*, i32)***
  %71 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %71, i64 1
  %73 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %72, align 8
  call void %73(%"class.blink::CSSParserObserver"* %69, i32 %15) #11
  %74 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %62, align 8
  %75 = bitcast %"class.blink::CSSParserObserver"* %74 to void (%"class.blink::CSSParserObserver"*, i32)***
  %76 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %76, i64 3
  %78 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %77, align 8
  call void %78(%"class.blink::CSSParserObserver"* %74, i32 %15) #11
  %79 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %62, align 8
  %80 = bitcast %"class.blink::CSSParserObserver"* %79 to void (%"class.blink::CSSParserObserver"*, i32)***
  %81 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %81, i64 4
  %83 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %82, align 8
  call void %83(%"class.blink::CSSParserObserver"* %79, i32 %15) #11
  br label %84

84:                                               ; preds = %61, %65
  %85 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 2
  %86 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %85, align 8
  %87 = icmp eq %"class.blink::StyleSheetContents"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %86, i64 0, i32 8
  %90 = load i8, i8* %89, align 8
  %91 = or i8 %90, 8
  store i8 %91, i8* %89, align 8
  br label %92

92:                                               ; preds = %84, %88
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 4)
  %93 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %94 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %93, i8 zeroext 4)
  %95 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 16) #11
  %96 = bitcast i8* %95 to %"class.blink::StyleRuleFontFace"*
  %97 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %94, i64 0, i32 0
  call void @_ZN5blink17StyleRuleFontFaceC1EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleFontFace"* %96, %"class.blink::CSSPropertyValueSet"* %97) #11
  %98 = getelementptr inbounds i8, i8* %95, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  br label %102

102:                                              ; preds = %50, %92
  %103 = phi %"class.blink::StyleRuleFontFace"* [ %96, %92 ], [ null, %50 ]
  %104 = load i8, i8* %16, align 4, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  store i8 1, i8* %16, align 4
  %107 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #11
  %108 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %6, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %108) #11
  %109 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %107, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #11
  br label %110

110:                                              ; preds = %102, %106
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %111

111:                                              ; preds = %23, %34, %110
  %112 = phi %"class.blink::StyleRuleFontFace"* [ %103, %110 ], [ null, %34 ], [ null, %23 ]
  ret %"class.blink::StyleRuleFontFace"* %112
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleKeyframes"* @_ZN5blink13CSSParserImpl20ConsumeKeyframesRuleEbRNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, i1 zeroext, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 1
  %11 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %2) #11
  %15 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %14, 0
  %16 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %14, 1
  %17 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %18 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 4
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %3
  store i8 1, i8* %20, align 4
  %24 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %17) #11
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %26 = bitcast %"class.blink::CSSParserToken"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %24, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  br label %27

27:                                               ; preds = %23, %3
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 2
  %29 = bitcast %"class.blink::CSSParserToken"* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 63
  %32 = icmp eq i32 %31, 31
  %33 = and i32 %30, 192
  %34 = icmp eq i32 %33, 128
  %35 = or i1 %32, %34
  br i1 %35, label %265, label %36

36:                                               ; preds = %27
  %37 = icmp eq i32 %31, 21
  br i1 %37, label %38, label %47

38:                                               ; preds = %36
  store i8 0, i8* %20, align 4
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %39, i64 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %40, align 4
  %44 = icmp ult i32 %42, %43
  %45 = select i1 %44, i32 %42, i32 %43
  %46 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 3
  store i32 %45, i32* %46, align 8
  br label %265

47:                                               ; preds = %36
  %48 = load i8, i8* %20, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %54

50:                                               ; preds = %47
  store i8 1, i8* %20, align 4
  %51 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %52) #11
  %53 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  br label %54

54:                                               ; preds = %47, %50
  store i8 0, i8* %20, align 4
  %55 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %56 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %55, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* %56, align 4
  %60 = icmp ult i32 %58, %59
  %61 = select i1 %60, i32 %58, i32 %59
  %62 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %2, i64 0, i32 3
  store i32 %61, i32* %62, align 8
  %63 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %2) #11
  %64 = icmp eq %"class.blink::CSSParserToken"* %15, %16
  %65 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %66 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %15, i64 1
  %67 = select i1 %64, %"class.blink::CSSParserToken"* %15, %"class.blink::CSSParserToken"* %66
  %68 = select i1 %64, %"class.blink::CSSParserToken"* %65, %"class.blink::CSSParserToken"* %15
  %69 = icmp ult %"class.blink::CSSParserToken"* %67, %16
  %70 = select i1 %69, %"class.blink::CSSParserToken"* %67, %"class.blink::CSSParserToken"* %65
  %71 = bitcast %"class.blink::CSSParserToken"* %70 to i32*
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 63
  %74 = icmp eq i32 %73, 17
  br i1 %74, label %75, label %84

75:                                               ; preds = %54, %75
  %76 = phi %"class.blink::CSSParserToken"* [ %77, %75 ], [ %67, %54 ]
  %77 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %76, i64 1
  %78 = icmp ult %"class.blink::CSSParserToken"* %77, %16
  %79 = select i1 %78, %"class.blink::CSSParserToken"* %77, %"class.blink::CSSParserToken"* %65
  %80 = bitcast %"class.blink::CSSParserToken"* %79 to i32*
  %81 = load i32, i32* %80, align 8
  %82 = and i32 %81, 63
  %83 = icmp eq i32 %82, 17
  br i1 %83, label %75, label %84

84:                                               ; preds = %75, %54
  %85 = phi %"class.blink::CSSParserToken"* [ %67, %54 ], [ %77, %75 ]
  %86 = icmp eq %"class.blink::CSSParserToken"* %85, %16
  br i1 %86, label %87, label %256

87:                                               ; preds = %84
  %88 = bitcast %"class.blink::CSSParserToken"* %68 to i32*
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 63
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  %93 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  br label %103

94:                                               ; preds = %87
  %95 = icmp ne i32 %90, 29
  %96 = xor i1 %1, true
  %97 = or i1 %95, %96
  br i1 %97, label %256, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %100 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %99, align 8
  call void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"* %100, i32 572) #11
  %101 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #11
  %102 = load i32, i32* %88, align 8, !noalias !54
  br label %103

103:                                              ; preds = %98, %92
  %104 = phi i32 [ %102, %98 ], [ %89, %92 ]
  %105 = phi %"class.WTF::StringView"* [ %9, %98 ], [ %8, %92 ]
  %106 = phi i8* [ %101, %98 ], [ %93, %92 ]
  %107 = and i32 %104, 262144
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %68, i64 0, i32 2
  %110 = bitcast i8** %109 to i64*
  %111 = load i64, i64* %110, align 8, !noalias !50
  %112 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %68, i64 0, i32 1
  %113 = load i32, i32* %112, align 4, !noalias !50
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %115 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %116 = select i1 %108, i64 %114, i64 %115
  %117 = bitcast %"class.WTF::StringView"* %105 to i64*
  store i64 %116, i64* %117, align 8, !alias.scope !57
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %105, i64 0, i32 1
  %119 = bitcast i8** %118 to i64*
  store i64 %111, i64* %119, align 8, !alias.scope !57
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %105, i64 0, i32 2
  store i32 %113, i32* %120, align 8, !alias.scope !57
  %121 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #11
  %122 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %123 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %122, align 8
  %124 = icmp eq %"class.blink::CSSParserObserver"* %123, null
  br i1 %124, label %140, label %125

125:                                              ; preds = %103
  %126 = bitcast %"class.blink::CSSParserObserver"* %123 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %127 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %126, align 8
  %128 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %127, align 8
  call void %128(%"class.blink::CSSParserObserver"* nonnull %123, i32 7, i32 %13) #11
  %129 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %122, align 8
  %130 = bitcast %"class.blink::CSSParserObserver"* %129 to void (%"class.blink::CSSParserObserver"*, i32)***
  %131 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %131, i64 1
  %133 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %132, align 8
  call void %133(%"class.blink::CSSParserObserver"* %129, i32 %19) #11
  %134 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %122, align 8
  %135 = load i32, i32* %62, align 8
  %136 = bitcast %"class.blink::CSSParserObserver"* %134 to void (%"class.blink::CSSParserObserver"*, i32)***
  %137 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %137, i64 3
  %139 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %138, align 8
  call void %139(%"class.blink::CSSParserObserver"* %134, i32 %135) #11
  br label %140

140:                                              ; preds = %103, %125
  %141 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 40) #11
  %142 = bitcast i8* %141 to %"class.blink::StyleRuleKeyframes"*
  call void @_ZN5blink18StyleRuleKeyframesC1Ev(%"class.blink::StyleRuleKeyframes"* %142) #11
  %143 = getelementptr inbounds i8, i8* %141, i64 -4
  %144 = bitcast i8* %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  %146 = or i16 %145, 1
  store atomic i16 %146, i16* %144 release, align 2
  %147 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  %148 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  br label %149

149:                                              ; preds = %179, %140
  %150 = load i8, i8* %20, align 4, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %149
  store i8 1, i8* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #11
  %153 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %153) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* nonnull align 8 %147, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #11
  br label %154

154:                                              ; preds = %152, %149
  %155 = load i32, i32* %29, align 8
  %156 = and i32 %155, 63
  %157 = icmp eq i32 %156, 31
  %158 = and i32 %155, 192
  %159 = icmp eq i32 %158, 128
  %160 = or i1 %157, %159
  br i1 %160, label %180, label %161

161:                                              ; preds = %154
  switch i32 %156, label %172 [
    i32 17, label %162
    i32 2, label %170
  ]

162:                                              ; preds = %161
  store i8 0, i8* %20, align 4
  %163 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  %164 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %163, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %163, i64 0, i32 0, i32 1
  %166 = load i32, i32* %165, align 4
  %167 = load i32, i32* %164, align 4
  %168 = icmp ult i32 %166, %167
  %169 = select i1 %168, i32 %166, i32 %167
  store i32 %169, i32* %62, align 8
  br label %179

170:                                              ; preds = %161
  %171 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl13ConsumeAtRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %2, i32 4) #11
  br label %174

172:                                              ; preds = %161
  %173 = call %"class.blink::StyleRuleBase"* @_ZN5blink13CSSParserImpl20ConsumeQualifiedRuleERNS_20CSSParserTokenStreamENS0_16AllowedRulesTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %2, i32 4) #11
  br label %174

174:                                              ; preds = %172, %170
  %175 = phi %"class.blink::StyleRuleBase"* [ %173, %172 ], [ %171, %170 ]
  %176 = icmp eq %"class.blink::StyleRuleBase"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %174
  %178 = bitcast %"class.blink::StyleRuleBase"* %175 to %"class.blink::StyleRuleKeyframe"*
  call void @_ZN5blink18StyleRuleKeyframes20ParserAppendKeyframeEPNS_17StyleRuleKeyframeE(%"class.blink::StyleRuleKeyframes"* %142, %"class.blink::StyleRuleKeyframe"* nonnull %178) #11
  br label %179

179:                                              ; preds = %177, %174, %162
  br label %149

180:                                              ; preds = %154
  %181 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %181, label %205, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 acquire, align 4
  %185 = and i32 %184, 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %182
  %188 = load atomic i32, i32* %183 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %205

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #11
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !6

200:                                              ; preds = %191
  call void @llvm.trap() #11
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %205

203:                                              ; preds = %182
  %204 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %121) #11
  br label %205

205:                                              ; preds = %203, %201, %187, %180
  %206 = phi %"class.WTF::StringImpl"* [ %204, %203 ], [ %121, %187 ], [ %121, %201 ], [ null, %180 ]
  %207 = ptrtoint %"class.WTF::StringImpl"* %206 to i64
  %208 = getelementptr inbounds i8, i8* %141, i64 24
  %209 = bitcast i8* %208 to i64*
  %210 = bitcast i8* %208 to %"class.WTF::StringImpl"**
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  store i64 %207, i64* %209, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #11
  br label %226

226:                                              ; preds = %205, %222, %225
  %227 = zext i1 %1 to i32
  %228 = getelementptr inbounds i8, i8* %141, i64 32
  %229 = bitcast i8* %228 to i32*
  %230 = load i32, i32* %229, align 8
  %231 = shl nuw i32 %227, 31
  %232 = and i32 %230, 2147483647
  %233 = or i32 %232, %231
  store i32 %233, i32* %229, align 8
  %234 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %122, align 8
  %235 = icmp eq %"class.blink::CSSParserObserver"* %234, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %226
  %237 = load i32, i32* %62, align 8
  %238 = bitcast %"class.blink::CSSParserObserver"* %234 to void (%"class.blink::CSSParserObserver"*, i32)***
  %239 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %238, align 8
  %240 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %239, i64 4
  %241 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %240, align 8
  call void %241(%"class.blink::CSSParserObserver"* nonnull %234, i32 %237) #11
  br label %242

242:                                              ; preds = %236, %226
  br i1 %181, label %256, label %243

243:                                              ; preds = %242
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  br i1 %247, label %250, label %252

250:                                              ; preds = %243
  %251 = add i32 %249, -1
  store i32 %251, i32* %248, align 4
  br label %252

252:                                              ; preds = %250, %243
  %253 = phi i32 [ %251, %250 ], [ %249, %243 ]
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %252
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #11
  br label %256

256:                                              ; preds = %94, %255, %252, %242, %84
  %257 = phi %"class.blink::StyleRuleKeyframes"* [ null, %84 ], [ %142, %242 ], [ %142, %252 ], [ %142, %255 ], [ null, %94 ]
  %258 = load i8, i8* %20, align 4, !range !2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %260, label %264

260:                                              ; preds = %256
  store i8 1, i8* %20, align 4
  %261 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %261) #11
  %262 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %10, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %262) #11
  %263 = bitcast %"class.blink::CSSParserToken"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* nonnull align 8 %261, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %261) #11
  br label %264

264:                                              ; preds = %256, %260
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %2) #11
  br label %265

265:                                              ; preds = %27, %38, %264
  %266 = phi %"class.blink::StyleRuleKeyframes"* [ %257, %264 ], [ null, %38 ], [ null, %27 ]
  ret %"class.blink::StyleRuleKeyframes"* %266
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRulePage"* @_ZN5blink13CSSParserImpl15ConsumePageRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSSelectorList", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserToken", align 8
  %7 = alloca %"class.blink::CSSSelectorList", align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %9 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %13 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %14 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %13, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %2
  store i8 1, i8* %16, align 4
  %20 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %13) #11
  %21 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %22 = bitcast %"class.blink::CSSParserToken"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %20, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %23

23:                                               ; preds = %19, %2
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %25 = bitcast %"class.blink::CSSParserToken"* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, 63
  %28 = icmp eq i32 %27, 31
  %29 = and i32 %26, 192
  %30 = icmp eq i32 %29, 128
  %31 = or i1 %28, %30
  br i1 %31, label %116, label %32

32:                                               ; preds = %23
  %33 = icmp eq i32 %27, 21
  br i1 %33, label %34, label %43

34:                                               ; preds = %32
  store i8 0, i8* %16, align 4
  %35 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %36 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %35, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %35, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %36, align 4
  %40 = icmp ult i32 %38, %39
  %41 = select i1 %40, i32 %38, i32 %39
  %42 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %41, i32* %42, align 8
  br label %116

43:                                               ; preds = %32
  %44 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %12, 1
  %45 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %12, 0
  %46 = load i8, i8* %16, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %43
  store i8 1, i8* %16, align 4
  %49 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %50) #11
  %51 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %49, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  br label %52

52:                                               ; preds = %43, %48
  store i8 0, i8* %16, align 4
  %53 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %54 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %54, align 4
  %58 = icmp ult i32 %56, %57
  %59 = select i1 %58, i32 %56, i32 %57
  %60 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %59, i32* %60, align 8
  %61 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %62 = bitcast %"class.blink::CSSSelectorList"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %7, i64 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %63, align 8
  call void @_ZN5blink13CSSParserImpl17ParsePageSelectorENS_19CSSParserTokenRangeEPNS_18StyleSheetContentsE(%"class.blink::CSSSelectorList"* nonnull sret %7, %"class.blink::CSSParserToken"* %45, %"class.blink::CSSParserToken"* %44, %"class.blink::StyleSheetContents"* undef)
  %64 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %63, align 8
  %65 = icmp eq %"class.blink::CSSSelector"* %64, null
  br i1 %65, label %107, label %66

66:                                               ; preds = %52
  %67 = ptrtoint %"class.blink::CSSSelector"* %64 to i64
  %68 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %69 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %70 = icmp eq %"class.blink::CSSParserObserver"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %66
  %72 = bitcast %"class.blink::CSSParserObserver"* %69 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %73 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %72, align 8
  %74 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %73, align 8
  call void %74(%"class.blink::CSSParserObserver"* nonnull %69, i32 5, i32 %11) #11
  %75 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %68, align 8
  %76 = bitcast %"class.blink::CSSParserObserver"* %75 to void (%"class.blink::CSSParserObserver"*, i32)***
  %77 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %77, i64 1
  %79 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %78, align 8
  call void %79(%"class.blink::CSSParserObserver"* %75, i32 %15) #11
  %80 = bitcast %"class.blink::CSSSelectorList"* %7 to i64*
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %66, %71
  %83 = phi i64 [ %81, %71 ], [ %67, %66 ]
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 1)
  %84 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %85 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %86 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %86, i64 0, i32 3
  %88 = load i8, i8* %87, align 1
  %89 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %84, i8 zeroext %88)
  %90 = bitcast %"class.blink::CSSSelectorList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #11
  %92 = bitcast i8* %91 to %"class.blink::StyleRulePage"*
  %93 = bitcast %"class.blink::CSSSelectorList"* %3 to i64*
  store i64 %83, i64* %93, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %63, align 8
  %94 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %89, i64 0, i32 0
  call void @_ZN5blink13StyleRulePageC1ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRulePage"* %92, %"class.blink::CSSSelectorList"* nonnull %3, %"class.blink::CSSPropertyValueSet"* %94) #11
  %95 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %3, i64 0, i32 0
  %96 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %95, align 8
  %97 = icmp eq %"class.blink::CSSSelector"* %96, null
  br i1 %97, label %99, label %98

98:                                               ; preds = %82
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %3) #11
  br label %99

99:                                               ; preds = %98, %82
  %100 = getelementptr inbounds i8, i8* %91, i64 -4
  %101 = bitcast i8* %100 to i16*
  %102 = load atomic i16, i16* %101 monotonic, align 2
  %103 = or i16 %102, 1
  store atomic i16 %103, i16* %101 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  %104 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %63, align 8
  %105 = icmp eq %"class.blink::CSSSelector"* %104, null
  br i1 %105, label %107, label %106

106:                                              ; preds = %99
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %7) #11
  br label %107

107:                                              ; preds = %52, %99, %106
  %108 = phi %"class.blink::StyleRulePage"* [ %92, %99 ], [ %92, %106 ], [ null, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  %109 = load i8, i8* %16, align 4, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  store i8 1, i8* %16, align 4
  %112 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #11
  %113 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %6, %"class.blink::CSSTokenizer"* %113) #11
  %114 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %112, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #11
  br label %115

115:                                              ; preds = %107, %111
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %116

116:                                              ; preds = %23, %34, %115
  %117 = phi %"class.blink::StyleRulePage"* [ %108, %115 ], [ null, %34 ], [ null, %23 ]
  ret %"class.blink::StyleRulePage"* %117
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleProperty"* @_ZN5blink13CSSParserImpl19ConsumePropertyRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %9 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %13 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %12, 0
  %14 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %12, 1
  %15 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %16 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  store i8 1, i8* %18, align 4
  %22 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %15) #11
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %22, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %25

25:                                               ; preds = %21, %2
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 31
  %31 = and i32 %28, 192
  %32 = icmp eq i32 %31, 128
  %33 = or i1 %30, %32
  br i1 %33, label %159, label %34

34:                                               ; preds = %25
  %35 = icmp eq i32 %29, 21
  br i1 %35, label %36, label %45

36:                                               ; preds = %34
  store i8 0, i8* %18, align 4
  %37 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %38 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %37, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %37, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %38, align 4
  %42 = icmp ult i32 %40, %41
  %43 = select i1 %42, i32 %40, i32 %41
  %44 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %43, i32* %44, align 8
  br label %159

45:                                               ; preds = %34
  %46 = load i8, i8* %18, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %45
  store i8 1, i8* %18, align 4
  %49 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %50) #11
  %51 = bitcast %"class.blink::CSSParserToken"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %49, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  br label %52

52:                                               ; preds = %45, %48
  store i8 0, i8* %18, align 4
  %53 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %54 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %54, align 4
  %58 = icmp ult i32 %56, %57
  %59 = select i1 %58, i32 %56, i32 %57
  %60 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %59, i32* %60, align 8
  %61 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %62 = icmp eq %"class.blink::CSSParserToken"* %13, %14
  %63 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %64 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %13, i64 1
  %65 = select i1 %62, %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserToken"* %64
  %66 = select i1 %62, %"class.blink::CSSParserToken"* %63, %"class.blink::CSSParserToken"* %13
  %67 = icmp ult %"class.blink::CSSParserToken"* %65, %14
  %68 = select i1 %67, %"class.blink::CSSParserToken"* %65, %"class.blink::CSSParserToken"* %63
  %69 = bitcast %"class.blink::CSSParserToken"* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 63
  %72 = icmp eq i32 %71, 17
  br i1 %72, label %73, label %82

73:                                               ; preds = %52, %73
  %74 = phi %"class.blink::CSSParserToken"* [ %75, %73 ], [ %65, %52 ]
  %75 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %74, i64 1
  %76 = icmp ult %"class.blink::CSSParserToken"* %75, %14
  %77 = select i1 %76, %"class.blink::CSSParserToken"* %75, %"class.blink::CSSParserToken"* %63
  %78 = bitcast %"class.blink::CSSParserToken"* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 63
  %81 = icmp eq i32 %80, 17
  br i1 %81, label %73, label %82

82:                                               ; preds = %73, %52
  %83 = phi %"class.blink::CSSParserToken"* [ %65, %52 ], [ %75, %73 ]
  %84 = icmp eq %"class.blink::CSSParserToken"* %83, %14
  br i1 %84, label %85, label %150

85:                                               ; preds = %82
  %86 = call zeroext i1 @_ZN5blink17CSSVariableParser19IsValidVariableNameERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %66) #11
  br i1 %86, label %87, label %150

87:                                               ; preds = %85
  %88 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %89, align 8
  %90 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %91 = bitcast %"class.blink::CSSParserToken"* %66 to i32*
  %92 = load i32, i32* %91, align 8, !noalias !60
  %93 = and i32 %92, 262144
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %66, i64 0, i32 2
  %96 = bitcast i8** %95 to i64*
  %97 = load i64, i64* %96, align 8, !noalias !60
  %98 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %66, i64 0, i32 1
  %99 = load i32, i32* %98, align 4, !noalias !60
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %102 = select i1 %94, i64 %100, i64 %101
  %103 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %102, i64* %103, align 8, !alias.scope !60
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %105 = bitcast i8** %104 to i64*
  store i64 %97, i64* %105, align 8, !alias.scope !60
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %99, i32* %106, align 8, !alias.scope !60
  %107 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %7) #11
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %89, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  %108 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %109 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %108, align 8
  %110 = icmp eq %"class.blink::CSSParserObserver"* %109, null
  br i1 %110, label %120, label %111

111:                                              ; preds = %87
  %112 = bitcast %"class.blink::CSSParserObserver"* %109 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %113 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %112, align 8
  %114 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %113, align 8
  call void %114(%"class.blink::CSSParserObserver"* nonnull %109, i32 6, i32 %11) #11
  %115 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %108, align 8
  %116 = bitcast %"class.blink::CSSParserObserver"* %115 to void (%"class.blink::CSSParserObserver"*, i32)***
  %117 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %117, i64 1
  %119 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %118, align 8
  call void %119(%"class.blink::CSSParserObserver"* %115, i32 %17) #11
  br label %120

120:                                              ; preds = %87, %111
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 6)
  %121 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %122 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %123 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %123, i64 0, i32 3
  %125 = load i8, i8* %124, align 1
  %126 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %121, i8 zeroext %125)
  %127 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 24) #11
  %128 = bitcast i8* %127 to %"class.blink::StyleRuleProperty"*
  %129 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %126, i64 0, i32 0
  call void @_ZN5blink17StyleRulePropertyC1ERKN3WTF6StringEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleProperty"* %128, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::CSSPropertyValueSet"* %129) #11
  %130 = getelementptr inbounds i8, i8* %127, i64 -4
  %131 = bitcast i8* %130 to i16*
  %132 = load atomic i16, i16* %131 monotonic, align 2
  %133 = or i16 %132, 1
  store atomic i16 %133, i16* %131 release, align 2
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %120
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #11
  br label %149

149:                                              ; preds = %120, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11
  br label %150

150:                                              ; preds = %85, %82, %149
  %151 = phi %"class.blink::StyleRuleProperty"* [ %128, %149 ], [ null, %82 ], [ null, %85 ]
  %152 = load i8, i8* %18, align 4, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %158

154:                                              ; preds = %150
  store i8 1, i8* %18, align 4
  %155 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #11
  %156 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %156) #11
  %157 = bitcast %"class.blink::CSSParserToken"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* nonnull align 8 %155, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #11
  br label %158

158:                                              ; preds = %150, %154
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %159

159:                                              ; preds = %25, %36, %158
  %160 = phi %"class.blink::StyleRuleProperty"* [ %151, %158 ], [ null, %36 ], [ null, %25 ]
  ret %"class.blink::StyleRuleProperty"* %160
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleScrollTimeline"* @_ZN5blink13CSSParserImpl25ConsumeScrollTimelineRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %9 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %13 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %12, 0
  %14 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %12, 1
  %15 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %16 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %2
  store i8 1, i8* %18, align 4
  %22 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %15) #11
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %24 = bitcast %"class.blink::CSSParserToken"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %22, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br label %25

25:                                               ; preds = %21, %2
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 31
  %31 = and i32 %28, 192
  %32 = icmp eq i32 %31, 128
  %33 = or i1 %30, %32
  br i1 %33, label %162, label %34

34:                                               ; preds = %25
  %35 = icmp eq i32 %29, 21
  br i1 %35, label %36, label %45

36:                                               ; preds = %34
  store i8 0, i8* %18, align 4
  %37 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %38 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %37, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %37, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* %38, align 4
  %42 = icmp ult i32 %40, %41
  %43 = select i1 %42, i32 %40, i32 %41
  %44 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %43, i32* %44, align 8
  br label %162

45:                                               ; preds = %34
  %46 = load i8, i8* %18, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %45
  store i8 1, i8* %18, align 4
  %49 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #11
  %50 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %50) #11
  %51 = bitcast %"class.blink::CSSParserToken"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %49, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #11
  br label %52

52:                                               ; preds = %45, %48
  store i8 0, i8* %18, align 4
  %53 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %54 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %53, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* %54, align 4
  %58 = icmp ult i32 %56, %57
  %59 = select i1 %58, i32 %56, i32 %57
  %60 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %59, i32* %60, align 8
  %61 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %62 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_css_scroll_timeline_enabled_E, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %153, label %64

64:                                               ; preds = %52
  %65 = icmp eq %"class.blink::CSSParserToken"* %13, %14
  %66 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** @_ZN5blink18g_static_eof_tokenE, align 8
  %67 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %13, i64 1
  %68 = select i1 %65, %"class.blink::CSSParserToken"* %13, %"class.blink::CSSParserToken"* %67
  %69 = select i1 %65, %"class.blink::CSSParserToken"* %66, %"class.blink::CSSParserToken"* %13
  %70 = icmp ult %"class.blink::CSSParserToken"* %68, %14
  %71 = select i1 %70, %"class.blink::CSSParserToken"* %68, %"class.blink::CSSParserToken"* %66
  %72 = bitcast %"class.blink::CSSParserToken"* %71 to i32*
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 63
  %75 = icmp eq i32 %74, 17
  br i1 %75, label %76, label %85

76:                                               ; preds = %64, %76
  %77 = phi %"class.blink::CSSParserToken"* [ %78, %76 ], [ %68, %64 ]
  %78 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %77, i64 1
  %79 = icmp ult %"class.blink::CSSParserToken"* %78, %14
  %80 = select i1 %79, %"class.blink::CSSParserToken"* %78, %"class.blink::CSSParserToken"* %66
  %81 = bitcast %"class.blink::CSSParserToken"* %80 to i32*
  %82 = load i32, i32* %81, align 8
  %83 = and i32 %82, 63
  %84 = icmp eq i32 %83, 17
  br i1 %84, label %76, label %85

85:                                               ; preds = %76, %64
  %86 = phi %"class.blink::CSSParserToken"* [ %68, %64 ], [ %78, %76 ]
  %87 = icmp eq %"class.blink::CSSParserToken"* %86, %14
  br i1 %87, label %88, label %153

88:                                               ; preds = %85
  %89 = call zeroext i1 @_ZN5blink17css_parsing_utils14IsTimelineNameERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24) %69) #11
  br i1 %89, label %90, label %153

90:                                               ; preds = %88
  %91 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %92, align 8
  %93 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %94 = bitcast %"class.blink::CSSParserToken"* %69 to i32*
  %95 = load i32, i32* %94, align 8, !noalias !63
  %96 = and i32 %95, 262144
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %69, i64 0, i32 2
  %99 = bitcast i8** %98 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !63
  %101 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %69, i64 0, i32 1
  %102 = load i32, i32* %101, align 4, !noalias !63
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %105 = select i1 %97, i64 %103, i64 %104
  %106 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %105, i64* %106, align 8, !alias.scope !63
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %108 = bitcast i8** %107 to i64*
  store i64 %100, i64* %108, align 8, !alias.scope !63
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %102, i32* %109, align 8, !alias.scope !63
  %110 = call %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"* nonnull %7) #11
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  %111 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %112 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %111, align 8
  %113 = icmp eq %"class.blink::CSSParserObserver"* %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %90
  %115 = bitcast %"class.blink::CSSParserObserver"* %112 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %116 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %115, align 8
  %117 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %116, align 8
  call void %117(%"class.blink::CSSParserObserver"* nonnull %112, i32 12, i32 %11) #11
  %118 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %111, align 8
  %119 = bitcast %"class.blink::CSSParserObserver"* %118 to void (%"class.blink::CSSParserObserver"*, i32)***
  %120 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %120, i64 1
  %122 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %121, align 8
  call void %122(%"class.blink::CSSParserObserver"* %118, i32 %17) #11
  br label %123

123:                                              ; preds = %90, %114
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 12)
  %124 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %125 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %126 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %126, i64 0, i32 3
  %128 = load i8, i8* %127, align 1
  %129 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %124, i8 zeroext %128)
  %130 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 56) #11
  %131 = bitcast i8* %130 to %"class.blink::StyleRuleScrollTimeline"*
  %132 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %129, i64 0, i32 0
  call void @_ZN5blink23StyleRuleScrollTimelineC1ERKN3WTF6StringEPKNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleScrollTimeline"* %131, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::CSSPropertyValueSet"* %132) #11
  %133 = getelementptr inbounds i8, i8* %130, i64 -4
  %134 = bitcast i8* %133 to i16*
  %135 = load atomic i16, i16* %134 monotonic, align 2
  %136 = or i16 %135, 1
  store atomic i16 %136, i16* %134 release, align 2
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #11
  br label %152

152:                                              ; preds = %123, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  br label %153

153:                                              ; preds = %52, %152, %85, %88
  %154 = phi %"class.blink::StyleRuleScrollTimeline"* [ null, %52 ], [ %131, %152 ], [ null, %85 ], [ null, %88 ]
  %155 = load i8, i8* %18, align 4, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  store i8 1, i8* %18, align 4
  %158 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #11
  %159 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %159) #11
  %160 = bitcast %"class.blink::CSSParserToken"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* nonnull align 8 %158, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #11
  br label %161

161:                                              ; preds = %153, %157
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %162

162:                                              ; preds = %25, %36, %161
  %163 = phi %"class.blink::StyleRuleScrollTimeline"* [ %154, %161 ], [ null, %36 ], [ null, %25 ]
  ret %"class.blink::StyleRuleScrollTimeline"* %163
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleCounterStyle"* @_ZN5blink13CSSParserImpl23ConsumeCounterStyleRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSParserTokenRange", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %9 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.blink::CSSParserTokenRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %6, i64 0, i32 1
  %15 = tail call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27ELS2_21EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %16 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %15, 0
  store %"class.blink::CSSParserToken"* %16, %"class.blink::CSSParserToken"** %13, align 8
  %17 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %15, 1
  store %"class.blink::CSSParserToken"* %17, %"class.blink::CSSParserToken"** %14, align 8
  %18 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %19 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %2
  store i8 1, i8* %21, align 4
  %25 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %18) #11
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %27 = bitcast %"class.blink::CSSParserToken"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %25, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  br label %28

28:                                               ; preds = %24, %2
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %30 = bitcast %"class.blink::CSSParserToken"* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 63
  %33 = icmp eq i32 %32, 31
  %34 = and i32 %31, 192
  %35 = icmp eq i32 %34, 128
  %36 = or i1 %33, %35
  br i1 %36, label %121, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %32, 21
  br i1 %38, label %39, label %48

39:                                               ; preds = %37
  store i8 0, i8* %21, align 4
  %40 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %40, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %40, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %41, align 4
  %45 = icmp ult i32 %43, %44
  %46 = select i1 %45, i32 %43, i32 %44
  %47 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %46, i32* %47, align 8
  br label %121

48:                                               ; preds = %37
  %49 = load i8, i8* %21, align 4, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %48
  store i8 1, i8* %21, align 4
  %52 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %53 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %53) #11
  %54 = bitcast %"class.blink::CSSParserToken"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %52, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  br label %55

55:                                               ; preds = %48, %51
  store i8 0, i8* %21, align 4
  %56 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  %57 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %56, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %56, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %57, align 4
  %61 = icmp ult i32 %59, %60
  %62 = select i1 %61, i32 %59, i32 %60
  %63 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %62, i32* %63, align 8
  %64 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %65 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %68 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %67, align 8
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink17css_parsing_utils32ConsumeCounterStyleNameInPreludeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* nonnull dereferenceable(16) %6, %"class.blink::CSSParserContext"* dereferenceable(176) %68) #11
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %66, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %112, label %71

71:                                               ; preds = %55
  %72 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %73 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %72, align 8
  %74 = icmp eq %"class.blink::CSSParserObserver"* %73, null
  br i1 %74, label %84, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::CSSParserObserver"* %73 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %77 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %76, align 8
  %78 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %77, align 8
  call void %78(%"class.blink::CSSParserObserver"* nonnull %73, i32 11, i32 %11) #11
  %79 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %72, align 8
  %80 = bitcast %"class.blink::CSSParserObserver"* %79 to void (%"class.blink::CSSParserObserver"*, i32)***
  %81 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %81, i64 1
  %83 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %82, align 8
  call void %83(%"class.blink::CSSParserObserver"* %79, i32 %20) #11
  br label %84

84:                                               ; preds = %75, %71
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 11)
  %85 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %86 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %67, align 8
  %87 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %86, i64 0, i32 3
  %88 = load i8, i8* %87, align 1
  %89 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %85, i8 zeroext %88)
  %90 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 104) #11
  %91 = bitcast i8* %90 to %"class.blink::StyleRuleCounterStyle"*
  %92 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %89, i64 0, i32 0
  call void @_ZN5blink21StyleRuleCounterStyleC1ERKN3WTF12AtomicStringEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleCounterStyle"* %91, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::CSSPropertyValueSet"* %92) #11
  %93 = getelementptr inbounds i8, i8* %90, i64 -4
  %94 = bitcast i8* %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = or i16 %95, 1
  store atomic i16 %96, i16* %94 release, align 2
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %84
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #11
  br label %112

112:                                              ; preds = %55, %84, %108, %111
  %113 = phi %"class.blink::StyleRuleCounterStyle"* [ %91, %84 ], [ %91, %108 ], [ %91, %111 ], [ null, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  %114 = load i8, i8* %21, align 4, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %112
  store i8 1, i8* %21, align 4
  %117 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  %118 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %8, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %118) #11
  %119 = bitcast %"class.blink::CSSParserToken"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %117, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  br label %120

120:                                              ; preds = %112, %116
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %121

121:                                              ; preds = %28, %39, %120
  %122 = phi %"class.blink::StyleRuleCounterStyle"* [ %113, %120 ], [ null, %39 ], [ null, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  ret %"class.blink::StyleRuleCounterStyle"* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRule"* @_ZN5blink13CSSParserImpl16ConsumeStyleRuleERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSSelectorList", align 8
  %4 = alloca %"class.blink::CSSParserToken", align 8
  %5 = alloca %"class.blink::CSSParserToken", align 8
  %6 = alloca %"class.blink::CSSSelectorList", align 8
  %7 = alloca %"class.blink::CSSParserToken", align 8
  %8 = alloca %"class.blink::CSSParserToken", align 8
  %9 = alloca %"class.blink::CSSSelectorList", align 8
  %10 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %11 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %10, align 8
  %12 = icmp eq %"class.blink::CSSParserObserver"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %15 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.blink::CSSParserObserver"* %11 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %19 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %18, align 8
  %20 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %19, align 8
  tail call void %20(%"class.blink::CSSParserObserver"* nonnull %11, i32 1, i32 %17) #11
  %21 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %10, align 8
  br label %22

22:                                               ; preds = %2, %13
  %23 = phi %"class.blink::CSSParserObserver"* [ null, %2 ], [ %21, %13 ]
  %24 = bitcast %"class.blink::CSSSelectorList"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %9, i64 0, i32 0
  store %"class.blink::CSSSelector"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSSelector"*), %"class.blink::CSSSelector"** %25, align 8
  %26 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %27 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 2
  %29 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %28, align 8
  call void @_ZN5blink17CSSSelectorParser15ConsumeSelectorERNS_20CSSParserTokenStreamEPKNS_16CSSParserContextEPNS_18StyleSheetContentsEPNS_17CSSParserObserverE(%"class.blink::CSSSelectorList"* nonnull sret %9, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, %"class.blink::CSSParserContext"* %27, %"class.blink::StyleSheetContents"* %29, %"class.blink::CSSParserObserver"* %23) #11
  %30 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %25, align 8
  %31 = icmp eq %"class.blink::CSSSelector"* %30, null
  br i1 %31, label %32, label %55

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  store i8 1, i8* %33, align 4
  %37 = bitcast %"class.blink::CSSParserToken"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %39 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %38, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %7, %"class.blink::CSSTokenizer"* %39) #11
  %40 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %41 = bitcast %"class.blink::CSSParserToken"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %37, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  br label %42

42:                                               ; preds = %32, %36
  %43 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %44 = bitcast %"class.blink::CSSParserToken"* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 192
  %47 = icmp eq i32 %46, 128
  br i1 %47, label %55, label %48

48:                                               ; preds = %42, %51
  %49 = phi i32 [ %52, %51 ], [ %45, %42 ]
  %50 = and i32 %49, 63
  switch i32 %50, label %51 [
    i32 31, label %55
    i32 27, label %55
  ]

51:                                               ; preds = %48
  call void @_ZN5blink20CSSParserTokenStream30UncheckedConsumeComponentValueEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %52 = load i32, i32* %44, align 8
  %53 = and i32 %52, 192
  %54 = icmp eq i32 %53, 128
  br i1 %54, label %55, label %48

55:                                               ; preds = %51, %48, %48, %42, %22
  %56 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %10, align 8
  %57 = icmp eq %"class.blink::CSSParserObserver"* %56, null
  br i1 %57, label %67, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %60 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"class.blink::CSSParserObserver"* %56 to void (%"class.blink::CSSParserObserver"*, i32)***
  %64 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %64, i64 1
  %66 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %65, align 8
  call void %66(%"class.blink::CSSParserObserver"* nonnull %56, i32 %62) #11
  br label %67

67:                                               ; preds = %55, %58
  %68 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 4
  %69 = load i8, i8* %68, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  store i8 1, i8* %68, align 4
  %72 = bitcast %"class.blink::CSSParserToken"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %74 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %73, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %5, %"class.blink::CSSTokenizer"* %74) #11
  %75 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %76 = bitcast %"class.blink::CSSParserToken"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %72, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #11
  br label %77

77:                                               ; preds = %67, %71
  %78 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 2
  %79 = bitcast %"class.blink::CSSParserToken"* %78 to i32*
  %80 = load i32, i32* %79, align 8
  %81 = and i32 %80, 63
  %82 = icmp eq i32 %81, 31
  %83 = and i32 %80, 192
  %84 = icmp eq i32 %83, 128
  %85 = or i1 %82, %84
  br i1 %85, label %169, label %86

86:                                               ; preds = %77
  %87 = load i8, i8* %68, align 4, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %94

89:                                               ; preds = %86
  store i8 1, i8* %68, align 4
  %90 = bitcast %"class.blink::CSSParserToken"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %92 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %91, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %4, %"class.blink::CSSTokenizer"* %92) #11
  %93 = bitcast %"class.blink::CSSParserToken"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %90, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #11
  br label %94

94:                                               ; preds = %86, %89
  store i8 0, i8* %68, align 4
  %95 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 1
  %96 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %96, i64 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %96, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = load i32, i32* %97, align 4
  %101 = icmp ult i32 %99, %100
  %102 = select i1 %101, i32 %99, i32 %100
  %103 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %1, i64 0, i32 3
  store i32 %102, i32* %103, align 8
  %104 = call i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"* %1) #11
  %105 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %25, align 8
  %106 = icmp eq %"class.blink::CSSSelector"* %105, null
  br i1 %106, label %160, label %107

107:                                              ; preds = %94
  %108 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %10, align 8
  %109 = icmp eq %"class.blink::CSSParserObserver"* %108, null
  br i1 %109, label %110, label %135

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 4
  %112 = load %"class.blink::CSSLazyParsingState"*, %"class.blink::CSSLazyParsingState"** %111, align 8
  %113 = icmp eq %"class.blink::CSSLazyParsingState"* %112, null
  br i1 %113, label %135, label %114

114:                                              ; preds = %110
  %115 = load i32, i32* %103, align 8
  %116 = add i32 %115, -1
  %117 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSLazyPropertyParserEEEPhm(i64 24) #11
  %118 = bitcast i8* %117 to %"class.blink::CSSLazyPropertyParserImpl"*
  %119 = load %"class.blink::CSSLazyParsingState"*, %"class.blink::CSSLazyParsingState"** %111, align 8
  call void @_ZN5blink25CSSLazyPropertyParserImplC1EjPNS_19CSSLazyParsingStateE(%"class.blink::CSSLazyPropertyParserImpl"* %118, i32 %116, %"class.blink::CSSLazyParsingState"* %119) #11
  %120 = getelementptr inbounds i8, i8* %117, i64 -4
  %121 = bitcast i8* %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = or i16 %122, 1
  store atomic i16 %123, i16* %121 release, align 2
  %124 = bitcast %"class.blink::CSSSelectorList"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #11
  %125 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 32) #11
  %126 = bitcast i8* %125 to %"class.blink::StyleRule"*
  %127 = bitcast %"class.blink::CSSSelectorList"* %9 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::CSSSelectorList"* %3 to i64*
  store i64 %128, i64* %129, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %25, align 8
  %130 = bitcast i8* %117 to %"class.blink::CSSLazyPropertyParser"*
  call void @_ZN5blink9StyleRuleC1ENS_15CSSSelectorListEPNS_21CSSLazyPropertyParserE(%"class.blink::StyleRule"* %126, %"class.blink::CSSSelectorList"* nonnull %3, %"class.blink::CSSLazyPropertyParser"* %130) #11
  %131 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %3, i64 0, i32 0
  %132 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %131, align 8
  %133 = icmp eq %"class.blink::CSSSelector"* %132, null
  br i1 %133, label %152, label %134

134:                                              ; preds = %114
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %3) #11
  br label %152

135:                                              ; preds = %110, %107
  call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %1, i32 1)
  %136 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %137 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %26, align 8
  %138 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %137, i64 0, i32 3
  %139 = load i8, i8* %138, align 1
  %140 = call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %136, i8 zeroext %139)
  %141 = bitcast %"class.blink::CSSSelectorList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #11
  %142 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 32) #11
  %143 = bitcast i8* %142 to %"class.blink::StyleRule"*
  %144 = bitcast %"class.blink::CSSSelectorList"* %9 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.blink::CSSSelectorList"* %6 to i64*
  store i64 %145, i64* %146, align 8
  store %"class.blink::CSSSelector"* null, %"class.blink::CSSSelector"** %25, align 8
  %147 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %140, i64 0, i32 0
  call void @_ZN5blink9StyleRuleC1ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRule"* %143, %"class.blink::CSSSelectorList"* nonnull %6, %"class.blink::CSSPropertyValueSet"* %147) #11
  %148 = getelementptr inbounds %"class.blink::CSSSelectorList", %"class.blink::CSSSelectorList"* %6, i64 0, i32 0
  %149 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %148, align 8
  %150 = icmp eq %"class.blink::CSSSelector"* %149, null
  br i1 %150, label %152, label %151

151:                                              ; preds = %135
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %6) #11
  br label %152

152:                                              ; preds = %151, %135, %134, %114
  %153 = phi i8* [ %125, %114 ], [ %125, %134 ], [ %142, %135 ], [ %142, %151 ]
  %154 = phi i8* [ %124, %114 ], [ %124, %134 ], [ %141, %135 ], [ %141, %151 ]
  %155 = phi %"class.blink::StyleRule"* [ %126, %114 ], [ %126, %134 ], [ %143, %135 ], [ %143, %151 ]
  %156 = getelementptr inbounds i8, i8* %153, i64 -4
  %157 = bitcast i8* %156 to i16*
  %158 = load atomic i16, i16* %157 monotonic, align 2
  %159 = or i16 %158, 1
  store atomic i16 %159, i16* %157 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #11
  br label %160

160:                                              ; preds = %152, %94
  %161 = phi %"class.blink::StyleRule"* [ null, %94 ], [ %155, %152 ]
  %162 = load i8, i8* %68, align 4, !range !2
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  store i8 1, i8* %68, align 4
  %165 = bitcast %"class.blink::CSSParserToken"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #11
  %166 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %95, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %8, %"class.blink::CSSTokenizer"* %166) #11
  %167 = bitcast %"class.blink::CSSParserToken"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* nonnull align 8 %165, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #11
  br label %168

168:                                              ; preds = %160, %164
  call void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"* %1) #11
  br label %169

169:                                              ; preds = %77, %168
  %170 = phi %"class.blink::StyleRule"* [ %161, %168 ], [ null, %77 ]
  %171 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %25, align 8
  %172 = icmp eq %"class.blink::CSSSelector"* %171, null
  br i1 %172, label %174, label %173

173:                                              ; preds = %169
  call void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"* nonnull %9) #11
  br label %174

174:                                              ; preds = %169, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  ret %"class.blink::StyleRule"* %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream24ConsumeUntilPeekedTypeIsIJLNS_18CSSParserTokenTypeE27EEEENS_19CSSParserTokenRangeEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #11
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %17 = bitcast %"class.blink::CSSParserToken"* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 192
  %20 = icmp eq i32 %19, 128
  br i1 %20, label %86, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.blink::CSSParserToken"* %16 to i8*
  %27 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  br label %31

28:                                               ; preds = %76
  %29 = and i32 %77, 192
  %30 = icmp eq i32 %29, 128
  br i1 %30, label %83, label %31

31:                                               ; preds = %21, %28
  %32 = phi i32 [ %18, %21 ], [ %77, %28 ]
  %33 = and i32 %32, 63
  switch i32 %33, label %34 [
    i32 31, label %83
    i32 27, label %83
  ]

34:                                               ; preds = %31, %76
  %35 = phi i32 [ %77, %76 ], [ %32, %31 ]
  %36 = phi i32 [ %78, %76 ], [ %32, %31 ]
  %37 = phi i32 [ %70, %76 ], [ 0, %31 ]
  store i8 0, i8* %4, align 4
  %38 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  %39 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %38, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %38, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %39, align 4
  %43 = icmp ult i32 %41, %42
  %44 = select i1 %43, i32 %41, i32 %42
  store i32 %44, i32* %23, align 8
  %45 = load i32, i32* %15, align 4
  %46 = load i32, i32* %24, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %55, label %48, !prof !6

48:                                               ; preds = %34
  %49 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %25, align 8
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %49, i64 %50
  %52 = bitcast %"class.blink::CSSParserToken"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %26, i64 24, i1 false) #11
  %53 = load i32, i32* %15, align 4
  %54 = add i32 %53, 1
  store i32 %54, i32* %15, align 4
  br label %57

55:                                               ; preds = %34
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.908"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %16) #11
  %56 = load i32, i32* %17, align 8
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %35, %48 ]
  %59 = phi i32 [ %56, %55 ], [ %36, %48 ]
  %60 = lshr i32 %59, 6
  %61 = and i32 %60, 3
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %65

63:                                               ; preds = %57
  %64 = add i32 %37, 1
  br label %69

65:                                               ; preds = %57
  %66 = icmp eq i32 %61, 2
  %67 = zext i1 %66 to i32
  %68 = sub i32 %37, %67
  br label %69

69:                                               ; preds = %65, %63
  %70 = phi i32 [ %64, %63 ], [ %68, %65 ]
  %71 = load i8, i8* %4, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %69
  store i8 1, i8* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %74 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %22, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %74) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %75 = load i32, i32* %17, align 8
  br label %76

76:                                               ; preds = %73, %69
  %77 = phi i32 [ %58, %69 ], [ %75, %73 ]
  %78 = phi i32 [ %59, %69 ], [ %75, %73 ]
  %79 = and i32 %78, 63
  %80 = icmp ne i32 %79, 31
  %81 = icmp ne i32 %70, 0
  %82 = and i1 %81, %80
  br i1 %82, label %34, label %28

83:                                               ; preds = %31, %31, %28
  %84 = load i32, i32* %15, align 4
  %85 = zext i32 %84 to i64
  br label %86

86:                                               ; preds = %83, %13
  %87 = phi i64 [ %85, %83 ], [ 0, %13 ]
  %88 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %89, i64 %87
  %91 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %89, 0
  %92 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %91, %"class.blink::CSSParserToken"* %90, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %92
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleRuleKeyframe"* @_ZN5blink13CSSParserImpl24ConsumeKeyframeStyleRuleENS_19CSSParserTokenRangeERKNS0_11RangeOffsetERNS_20CSSParserTokenStreamE(%"class.blink::CSSParserImpl"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"struct.blink::CSSParserImpl::RangeOffset"* nocapture readonly dereferenceable(8), %"class.blink::CSSParserTokenStream"* dereferenceable(832)) local_unnamed_addr #0 align 2 {
  %6 = tail call %"class.WTF::Vector.942"* @_ZN5blink13CSSParserImpl22ConsumeKeyframeKeyListENS_19CSSParserTokenRangeE(%"class.blink::CSSParserToken"* %1, %"class.blink::CSSParserToken"* %2)
  %7 = icmp eq %"class.WTF::Vector.942"* %6, null
  br i1 %7, label %39, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 3
  %10 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %9, align 8
  %11 = icmp eq %"class.blink::CSSParserObserver"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.blink::CSSParserImpl::RangeOffset", %"struct.blink::CSSParserImpl::RangeOffset"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.blink::CSSParserObserver"* %10 to void (%"class.blink::CSSParserObserver"*, i32, i32)***
  %16 = load void (%"class.blink::CSSParserObserver"*, i32, i32)**, void (%"class.blink::CSSParserObserver"*, i32, i32)*** %15, align 8
  %17 = load void (%"class.blink::CSSParserObserver"*, i32, i32)*, void (%"class.blink::CSSParserObserver"*, i32, i32)** %16, align 8
  tail call void %17(%"class.blink::CSSParserObserver"* nonnull %10, i32 8, i32 %14) #11
  %18 = load %"class.blink::CSSParserObserver"*, %"class.blink::CSSParserObserver"** %9, align 8
  %19 = getelementptr inbounds %"struct.blink::CSSParserImpl::RangeOffset", %"struct.blink::CSSParserImpl::RangeOffset"* %3, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = bitcast %"class.blink::CSSParserObserver"* %18 to void (%"class.blink::CSSParserObserver"*, i32)***
  %22 = load void (%"class.blink::CSSParserObserver"*, i32)**, void (%"class.blink::CSSParserObserver"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %22, i64 1
  %24 = load void (%"class.blink::CSSParserObserver"*, i32)*, void (%"class.blink::CSSParserObserver"*, i32)** %23, align 8
  tail call void %24(%"class.blink::CSSParserObserver"* %18, i32 %20) #11
  br label %25

25:                                               ; preds = %8, %12
  tail call void @_ZN5blink13CSSParserImpl22ConsumeDeclarationListERNS_20CSSParserTokenStreamENS_13StyleRuleBase8RuleTypeE(%"class.blink::CSSParserImpl"* %0, %"class.blink::CSSParserTokenStream"* dereferenceable(832) %4, i32 8)
  %26 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::CSSParserImpl", %"class.blink::CSSParserImpl"* %0, i64 0, i32 1
  %28 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %28, i64 0, i32 3
  %30 = load i8, i8* %29, align 1
  %31 = tail call fastcc %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blinkL25CreateCSSPropertyValueSetERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13CSSParserModeE(%"class.blink::HeapVector"* dereferenceable(6160) %26, i8 zeroext %30)
  %32 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64 32) #11
  %33 = bitcast i8* %32 to %"class.blink::StyleRuleKeyframe"*
  %34 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %31, i64 0, i32 0
  tail call void @_ZN5blink17StyleRuleKeyframeC1ENSt3__110unique_ptrIN3WTF6VectorIdLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleKeyframe"* %33, %"class.WTF::Vector.942"* nonnull %6, %"class.blink::CSSPropertyValueSet"* %34) #11
  %35 = getelementptr inbounds i8, i8* %32, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  br label %39

39:                                               ; preds = %5, %25
  %40 = phi %"class.blink::StyleRuleKeyframe"* [ %33, %25 ], [ null, %5 ]
  ret %"class.blink::StyleRuleKeyframe"* %40
}

declare void @_ZNK5blink16CSSParserContext39ReportLayoutAnimationsViolationIfNeededERKNS_17StyleRuleKeyframeE(%"class.blink::CSSParserContext"*, %"class.blink::StyleRuleKeyframe"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN5blink20CSSParserTokenStream30UncheckedConsumeComponentValueEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

declare %"class.blink::MediaQuerySet"* @_ZN5blink16MediaQueryParser18ParseMediaQuerySetENS_19CSSParserTokenRangeEPKNS_16ExecutionContextE(%"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink16CSSParserContext19GetExecutionContextEv(%"class.blink::CSSParserContext"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16CSSParserContext13IsOriginCleanEv(%"class.blink::CSSParserContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.493*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.493, %class.scoped_refptr.493* %0, i64 0, i32 0
  %3 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %2, align 8
  %4 = icmp eq %"class.blink::MediaQuerySet"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.467"*, %"class.std::__1::unique_ptr.467"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.467"* %13, null
  br i1 %14, label %38, label %15, !prof !7

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::unique_ptr.467"* %13 to i8*
  %17 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20, !prof !6

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.467"* %13, i64 %21
  br label %23

23:                                               ; preds = %30, %20
  %24 = phi %"class.std::__1::unique_ptr.467"* [ %31, %30 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.467"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %25, align 8
  store %"class.blink::MediaQuery"* null, %"class.blink::MediaQuery"** %25, align 8
  %27 = icmp eq %"class.blink::MediaQuery"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  tail call void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"* nonnull %26) #11
  %29 = bitcast %"class.blink::MediaQuery"* %26 to i8*
  tail call void @free(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %23
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.467", %"class.std::__1::unique_ptr.467"* %24, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.467"* %31, %22
  br i1 %32, label %33, label %23

33:                                               ; preds = %30
  store i32 0, i32* %17, align 4
  %34 = bitcast %"class.WTF::Vector.464"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %37) #11
  br label %38

38:                                               ; preds = %10, %36
  %39 = bitcast %"class.blink::MediaQuerySet"* %3 to i8*
  tail call void @free(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %5, %1
  ret void
}

declare void @_ZN5blink18StyleSheetContents18SetHasMediaQueriesEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #2

declare i32 @_ZN5blink17CSSSupportsParser24ConsumeSupportsConditionERNS_20CSSParserTokenStreamERNS_13CSSParserImplE(%"class.blink::CSSParserTokenStream"* dereferenceable(832), %"class.blink::CSSParserImpl"* dereferenceable(6192)) local_unnamed_addr #2

declare void @_ZNK5blink20CSSParserTokenStream13StringRangeAtEjj(%"class.WTF::StringView"* sret, %"class.blink::CSSParserTokenStream"*, i32, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF10StringView8ToStringEv(%"class.WTF::StringView"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceENS_13StripBehaviorE(%"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext5CountENS_5mojom10WebFeatureE(%"class.blink::CSSParserContext"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17CSSVariableParser19IsValidVariableNameERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17css_parsing_utils32ConsumeCounterStyleNameInPreludeERNS_19CSSParserTokenRangeERKNS_16CSSParserContextE(%"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17css_parsing_utils14IsTimelineNameERKNS_14CSSParserTokenE(%"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink17CSSSelectorParser15ConsumeSelectorERNS_20CSSParserTokenStreamEPKNS_16CSSParserContextEPNS_18StyleSheetContentsEPNS_17CSSParserObserverE(%"class.blink::CSSSelectorList"* sret, %"class.blink::CSSParserTokenStream"* dereferenceable(832), %"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSParserObserver"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20CSSParserTokenStream23ConsumeCommentOrNothingEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink20CSSParserTokenStream26ConsumeUntilPeekedBoundaryEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::CSSParserToken", align 8
  %3 = alloca %"class.blink::CSSParserToken", align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  store i8 1, i8* %4, align 4
  %8 = bitcast %"class.blink::CSSParserToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %10 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %9, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %3, %"class.blink::CSSTokenizer"* %10) #11
  %11 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::CSSParserToken"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* nonnull align 8 %8, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 2
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 63
  %21 = icmp eq i32 %20, 31
  %22 = and i32 %19, 192
  %23 = icmp eq i32 %22, 128
  %24 = or i1 %21, %23
  br i1 %24, label %95, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.blink::CSSParserToken"* %17 to i8*
  %31 = bitcast %"class.blink::CSSParserToken"* %2 to i8*
  br label %38

32:                                               ; preds = %85
  %33 = and i32 %86, 63
  %34 = icmp eq i32 %33, 31
  %35 = and i32 %86, 192
  %36 = icmp eq i32 %35, 128
  %37 = or i1 %34, %36
  br i1 %37, label %92, label %38

38:                                               ; preds = %25, %32
  %39 = phi i32 [ %19, %25 ], [ %86, %32 ]
  %40 = phi i32 [ %20, %25 ], [ %33, %32 ]
  %41 = load i32, i32* %16, align 8
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %92, label %43

43:                                               ; preds = %38, %85
  %44 = phi i32 [ %86, %85 ], [ %39, %38 ]
  %45 = phi i32 [ %87, %85 ], [ %39, %38 ]
  %46 = phi i32 [ %79, %85 ], [ 0, %38 ]
  store i8 0, i8* %4, align 4
  %47 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  %48 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %47, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %47, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %48, align 4
  %52 = icmp ult i32 %50, %51
  %53 = select i1 %52, i32 %50, i32 %51
  store i32 %53, i32* %27, align 8
  %54 = load i32, i32* %15, align 4
  %55 = load i32, i32* %28, align 8
  %56 = icmp eq i32 %54, %55
  br i1 %56, label %64, label %57, !prof !6

57:                                               ; preds = %43
  %58 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %29, align 8
  %59 = zext i32 %54 to i64
  %60 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %58, i64 %59
  %61 = bitcast %"class.blink::CSSParserToken"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %30, i64 24, i1 false) #11
  %62 = load i32, i32* %15, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %15, align 4
  br label %66

64:                                               ; preds = %43
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.908"* %14, %"class.blink::CSSParserToken"* dereferenceable(24) %17) #11
  %65 = load i32, i32* %18, align 8
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %44, %57 ]
  %68 = phi i32 [ %65, %64 ], [ %45, %57 ]
  %69 = lshr i32 %68, 6
  %70 = and i32 %69, 3
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %66
  %73 = add i32 %46, 1
  br label %78

74:                                               ; preds = %66
  %75 = icmp eq i32 %70, 2
  %76 = zext i1 %75 to i32
  %77 = sub i32 %46, %76
  br label %78

78:                                               ; preds = %74, %72
  %79 = phi i32 [ %73, %72 ], [ %77, %74 ]
  %80 = load i8, i8* %4, align 4, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %78
  store i8 1, i8* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %83 = load %"class.blink::CSSTokenizer"*, %"class.blink::CSSTokenizer"** %26, align 8
  call void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* nonnull sret %2, %"class.blink::CSSTokenizer"* %83) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %31, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %84 = load i32, i32* %18, align 8
  br label %85

85:                                               ; preds = %82, %78
  %86 = phi i32 [ %67, %78 ], [ %84, %82 ]
  %87 = phi i32 [ %68, %78 ], [ %84, %82 ]
  %88 = and i32 %87, 63
  %89 = icmp ne i32 %88, 31
  %90 = icmp ne i32 %79, 0
  %91 = and i1 %90, %89
  br i1 %91, label %43, label %32

92:                                               ; preds = %38, %32
  %93 = load i32, i32* %15, align 4
  %94 = zext i32 %93 to i64
  br label %95

95:                                               ; preds = %92, %13
  %96 = phi i64 [ %94, %92 ], [ 0, %13 ]
  %97 = getelementptr inbounds %"class.blink::CSSParserTokenStream", %"class.blink::CSSParserTokenStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %98, i64 %96
  %100 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %98, 0
  %101 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %100, %"class.blink::CSSParserToken"* %99, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %101
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CSSParserImpl34RemoveImportantAnnotationIfPresentERNS_17CSSTokenizedValueE(%"struct.blink::CSSTokenizedValue"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  br label %8

8:                                                ; preds = %12, %1
  %9 = phi %"class.blink::CSSParserToken"* [ %7, %1 ], [ %10, %12 ]
  %10 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 -1
  %11 = icmp ult %"class.blink::CSSParserToken"* %10, %5
  br i1 %11, label %84, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::CSSParserToken"* %10 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 63
  %16 = icmp eq i32 %15, 17
  br i1 %16, label %8, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %20, label %83

20:                                               ; preds = %17
  %21 = and i32 %14, 262144
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 -1, i32 2
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !66
  %26 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %9, i64 -1, i32 1
  %27 = load i32, i32* %26, align 4, !noalias !66
  %28 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = select i1 %22, i64 %28, i64 %29
  %31 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !66
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %33 = bitcast i8** %32 to i64*
  store i64 %25, i64* %33, align 8, !alias.scope !66
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %27, i32* %34, align 8, !alias.scope !66
  %35 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str.7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br i1 %35, label %36, label %84

36:                                               ; preds = %20, %40
  %37 = phi %"class.blink::CSSParserToken"* [ %38, %40 ], [ %10, %20 ]
  %38 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %37, i64 -1
  %39 = icmp ult %"class.blink::CSSParserToken"* %38, %5
  br i1 %39, label %84, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::CSSParserToken"* %38 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 63
  switch i32 %43, label %84 [
    i32 17, label %36
    i32 6, label %44
  ]

44:                                               ; preds = %40
  %45 = call zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"* %38) #11
  %46 = icmp eq i16 %45, 33
  br i1 %46, label %47, label %84

47:                                               ; preds = %44
  %48 = call { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"* %3, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %38) #11
  %49 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %48, 0
  %50 = extractvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %48, 1
  store %"class.blink::CSSParserToken"* %49, %"class.blink::CSSParserToken"** %4, align 8
  store %"class.blink::CSSParserToken"* %50, %"class.blink::CSSParserToken"** %6, align 8
  %51 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 1, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %51, i64 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.blink::CSSTokenizedValue", %"struct.blink::CSSTokenizedValue"* %0, i64 0, i32 1, i32 1
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast i8* %58 to i16*
  %60 = ptrtoint %"class.WTF::StringImpl"* %55 to i64
  %61 = ptrtoint i8* %58 to i64
  br label %62

62:                                               ; preds = %76, %47
  %63 = phi i32 [ %53, %47 ], [ %64, %76 ]
  %64 = add i32 %63, -1
  %65 = load atomic i32, i32* %56 monotonic, align 4
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = zext i32 %64 to i64
  br i1 %67, label %73, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds i8, i8* %58, i64 %68
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  br label %76

73:                                               ; preds = %62
  %74 = getelementptr inbounds i16, i16* %59, i64 %68
  %75 = load i16, i16* %74, align 2
  br label %76

76:                                               ; preds = %69, %73
  %77 = phi i16 [ %72, %69 ], [ %75, %73 ]
  %78 = icmp eq i16 %77, 33
  br i1 %78, label %79, label %62

79:                                               ; preds = %76
  %80 = bitcast %"class.WTF::StringView"* %51 to i64*
  %81 = load atomic i32, i32* %56 monotonic, align 4
  %82 = bitcast i8** %57 to i64*
  store i64 %60, i64* %80, align 8
  store i64 %61, i64* %82, align 8
  store i32 %64, i32* %52, align 8
  br label %84

83:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br label %84

84:                                               ; preds = %8, %36, %40, %20, %83, %44, %79
  %85 = phi i1 [ true, %79 ], [ false, %44 ], [ false, %83 ], [ false, %20 ], [ false, %40 ], [ false, %36 ], [ false, %8 ]
  ret i1 %85
}

declare i32 @_ZNK5blink14CSSParserToken25ParseAsAtRuleDescriptorIDEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22AtRuleDescriptorParser11ParseAtRuleENS_13StyleRuleBase8RuleTypeENS_18AtRuleDescriptorIDERKNS_17CSSTokenizedValueERKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEE(i32, i32, %"struct.blink::CSSTokenizedValue"* dereferenceable(40), %"class.blink::CSSParserContext"* dereferenceable(176), %"class.blink::HeapVector"* dereferenceable(6160)) local_unnamed_addr #2

declare i32 @_ZNK5blink14CSSParserToken30ParseAsUnresolvedCSSPropertyIDEPKNS_16ExecutionContextENS_13CSSParserModeE(%"class.blink::CSSParserToken"*, %"class.blink::ExecutionContext"*, i8 zeroext) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink18StyleSheetContents19SingleOwnerDocumentEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #2

declare void @_ZN5blink11Deprecation26WarnOnDeprecatedPropertiesEPKNS_10LocalFrameENS_13CSSPropertyIDE(%"class.blink::LocalFrame"*, i32) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::CSSCustomPropertyDeclaration"* @_ZN5blink17CSSVariableParser21ParseDeclarationValueERKN3WTF12AtomicStringERKNS_17CSSTokenizedValueEbRKNS_16CSSParserContextE(%"class.WTF::AtomicString"* dereferenceable(8), %"struct.blink::CSSTokenizedValue"* dereferenceable(40), i1 zeroext, %"class.blink::CSSParserContext"* dereferenceable(176)) local_unnamed_addr #2

declare void @_ZNK5blink16CSSParserContext5CountENS_13CSSParserModeENS_13CSSPropertyIDE(%"class.blink::CSSParserContext"*, i8 zeroext, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17CSSPropertyParser10ParseValueENS_13CSSPropertyIDEbRKNS_19CSSParserTokenRangeEPKNS_16CSSParserContextERNS_10HeapVectorINS_16CSSPropertyValueELj256EEENS_13StyleRuleBase8RuleTypeE(i32, i1 zeroext, %"class.blink::CSSParserTokenRange"* dereferenceable(16), %"class.blink::CSSParserContext"*, %"class.blink::HeapVector"* dereferenceable(6160), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

declare zeroext i16 @_ZNK5blink14CSSParserToken9DelimiterEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"*, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #2

declare double @_ZNK5blink14CSSParserToken12NumericValueEv(%"class.blink::CSSParserToken"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.899"*, i32*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::ImmutableCSSPropertyValueSet"* @_ZN5blink28ImmutableCSSPropertyValueSet6CreateEPKNS_16CSSPropertyValueEjNS_13CSSParserModeE(%"class.blink::CSSPropertyValue"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.381"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.381"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #11
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !6

91:                                               ; preds = %82
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.381"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.381"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.381"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #11
  ret %"class.WTF::AtomicString"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.381"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.381"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.381"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #11
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.381", %"class.WTF::HashTable.381"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #11
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::CSSPropertyValue"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11CSSSelector16UpdatePseudoPageERKN3WTF12AtomicStringE(%"class.blink::CSSSelector"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15CSSSelectorList15DeleteSelectorsEv(%"class.blink::CSSSelectorList"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare i32 @_ZNK5blink20CSSParserTokenStream15BlockStackDepthEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

declare void @_ZN5blink20CSSParserTokenStream25UncheckedSkipToEndOfBlockEv(%"class.blink::CSSParserTokenStream"*) local_unnamed_addr #2

declare void @_ZN5blink12CSSTokenizer14TokenizeSingleEv(%"class.blink::CSSParserToken"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #2

declare { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS2_EEvOT_(%"class.WTF::Vector.908"*, %"class.blink::CSSParserToken"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSParserToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSParserToken"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.908"* %0, i32 %5) #11
  %14 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSParserToken"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.908"* %0, i32 %5) #11
  %20 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSParserToken"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSParserToken"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSParserToken"* %27 to i8*
  %29 = bitcast %"class.blink::CSSParserToken"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #11
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.908"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !7

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %31, align 8
  %33 = icmp eq %"class.blink::CSSParserToken"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %37) #11
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.908"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 24
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.908"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.908"* %0, i32 %27) #11
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.908"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %5, align 8
  %7 = icmp eq %"class.blink::CSSParserToken"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSParserToken"*
  %10 = icmp eq %"class.blink::CSSParserToken"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.908"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.908"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !6

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::CSSParserToken"* %6 to i8*
  %27 = mul nuw nsw i64 %25, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* %19, %"class.blink::CSSParserToken"* nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #11
  %33 = udiv i64 %31, 24
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::CSSParserToken"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !7

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::CSSParserToken"* %36 to i8*
  %45 = mul nuw nsw i64 %43, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #11
  %46 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::CSSParserToken"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::CSSParserToken"*
  %51 = icmp eq %"class.blink::CSSParserToken"* %48, %50
  br i1 %51, label %54, label %52, !prof !7

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.909"* %53, %"class.blink::CSSParserToken"* %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.908"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.908", %"class.WTF::Vector.908"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

declare void @_ZN5blink24CSSPropertyValueMetadataC1ERKNS_15CSSPropertyNameEbibb(%"struct.blink::CSSPropertyValueMetadata"*, %"class.blink::CSSPropertyName"* dereferenceable(16), i1 zeroext, i32, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink10MediaQueryD1Ev(%"class.blink::MediaQuery"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink17CSSParserSelectorD1Ev(%"class.blink::CSSParserSelector"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS1_EEE14AllocateObjectIS5_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16CSSPropertyValueENS_12VectorTraitsIS3_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !6

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %69, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::CSSPropertyValue"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !6

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi i64 [ 0, %52 ], [ %67, %66 ]
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to %"class.blink::CSSValue"*
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %61, i64 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %66

66:                                               ; preds = %60, %54
  %67 = add nuw nsw i64 %55, 1
  %68 = icmp ult i64 %67, %50
  br i1 %68, label %54, label %69

69:                                               ; preds = %66, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS3_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !6

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %47

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 257
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %5, align 8
  %7 = icmp eq %"class.blink::CSSPropertyValue"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::CSSPropertyValue"*
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %15, align 8
  br label %73

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 256, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::CSSPropertyValue"* %6 to i8*
  %26 = mul nuw nsw i64 %19, 24
  br i1 %24, label %28, label %27, !prof !6

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #11
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %9, i64 %19) #11
  br label %28

28:                                               ; preds = %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #11
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %20, %"class.blink::CSSPropertyValue"* nonnull %6) #11
  br label %73

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %30) #11
  %32 = udiv i64 %31, 24
  %33 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %32) #11
  %34 = bitcast %"class.blink::HeapVectorBacking"* %33 to %"class.blink::CSSPropertyValue"*
  %35 = ptrtoint %"class.blink::HeapVectorBacking"* %33 to i64
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %39 = icmp ne %"class.blink::HeapVectorBacking"* %33, null
  %40 = icmp ne %"class.blink::CSSPropertyValue"* %37, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %52, !prof !7

42:                                               ; preds = %29
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = bitcast i8* %43 to %"class.blink::CSSPropertyValue"*
  %45 = icmp eq %"class.blink::CSSPropertyValue"* %37, %44
  %46 = load i32, i32* %38, align 4
  %47 = zext i32 %46 to i64
  %48 = bitcast %"class.blink::CSSPropertyValue"* %37 to i8*
  %49 = mul nuw nsw i64 %47, 24
  %50 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %50, i8* nonnull %48, i64 %49) #11
  br i1 %45, label %51, label %52

51:                                               ; preds = %42
  tail call void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"* nonnull %34, i64 %47) #11
  br label %52

52:                                               ; preds = %29, %42, %51
  %53 = bitcast %"class.WTF::Vector"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = load i32, i32* %38, align 4
  %56 = zext i32 %55 to i64
  %57 = mul nuw nsw i64 %56, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %54, i64 %57) #11
  %58 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %36, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %"class.blink::CSSPropertyValue"*
  %61 = icmp eq %"class.blink::CSSPropertyValue"* %58, %60
  br i1 %61, label %64, label %62, !prof !7

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %63, %"class.blink::CSSPropertyValue"* %58) #11
  br label %64

64:                                               ; preds = %52, %62
  %65 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %35, i64* %65 monotonic, align 8
  %66 = trunc i64 %32 to i32
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %66, i32* %67, align 8
  %68 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %33, i64 0, i32 0
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #11
  br label %73

73:                                               ; preds = %70, %64, %28, %12
  ret void
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator16NotifyNewObjectsINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEvPT_m(%"class.blink::CSSPropertyValue"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSPropertyValue"* %0 to i8*
  %4 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !6

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %52, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %49, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %44, %25
  %28 = phi i8* [ %3, %25 ], [ %45, %44 ]
  %29 = phi i64 [ %1, %25 ], [ %30, %44 ]
  %30 = add i64 %29, -1
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %26, align 8
  %32 = getelementptr inbounds i8, i8* %28, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load atomic i64, i64* %33 monotonic, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %38 = inttoptr i64 %34 to %"class.blink::CSSValue"*
  %39 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %38, i64 0, i32 0
  %40 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %37, i8* %39, i8* %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  br label %44

44:                                               ; preds = %27, %36
  %45 = getelementptr inbounds i8, i8* %28, i64 24
  %46 = icmp eq i64 %30, 0
  br i1 %46, label %47, label %27

47:                                               ; preds = %44
  %48 = load i64, i64* %21, align 8
  br label %49

49:                                               ; preds = %47, %20
  %50 = phi i64 [ %48, %47 ], [ %23, %20 ]
  %51 = add i64 %50, -1
  store i64 %51, i64* %21, align 8
  br label %52

52:                                               ; preds = %2, %13, %49
  ret void
}

declare void @_ZN5blink16CSSParserContextC1EPKS0_PKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"*, %"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #11
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #11
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #11
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

declare void @_ZN5blink16CSSParserContextC1ENS_13CSSParserModeENS_17SecureContextModeENS0_15SelectorProfileEPKNS_8DocumentE(%"class.blink::CSSParserContext"*, i8 zeroext, i32, i8 zeroext, %"class.blink::Document"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

declare void @_ZN5blink19CSSLazyParsingStateC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_18StyleSheetContentsE(%"class.blink::CSSLazyParsingState"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::StyleSheetContents"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19CSSLazyParsingStateEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19CSSLazyParsingStateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19CSSLazyParsingStateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSLazyParsingStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSLazyParsingState"*
  tail call void @_ZNK5blink19CSSLazyParsingState5TraceEPNS_7VisitorE(%"class.blink::CSSLazyParsingState"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19CSSLazyParsingStateEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 8
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19CSSLazyParsingStateEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19CSSLazyParsingState5TraceEPNS_7VisitorE(%"class.blink::CSSLazyParsingState"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16CSSParserContext23IsForMarkupSanitizationEv(%"class.blink::CSSParserContext"*) local_unnamed_addr #2

declare void @_ZN5blink18StyleSheetContents16ParserAppendRuleEPNS_13StyleRuleBaseE(%"class.blink::StyleSheetContents"*, %"class.blink::StyleRuleBase"*) local_unnamed_addr #2

declare void @_ZN5blink17CSSParserSelectorC1ERKNS_13QualifiedNameEb(%"class.blink::CSSParserSelector"*, %"class.blink::QualifiedName"* dereferenceable(8), i1 zeroext) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare void @_ZN5blink17CSSParserSelectorC1Ev(%"class.blink::CSSParserSelector"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.934"*, %"class.std::__1::unique_ptr.922"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.934", %"class.WTF::Vector.934"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.934", %"class.WTF::Vector.934"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.922"*, %"class.std::__1::unique_ptr.922"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.922"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.922"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.934", %"class.WTF::Vector.934"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.922"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.934"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.922"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.922"*, %"class.std::__1::unique_ptr.922"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.922"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.922"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.934"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.934"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.922"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.922"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.922"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.934", %"class.WTF::Vector.934"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.922"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CSSParserSelectorENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.934"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.922"*, %"class.std::__1::unique_ptr.922"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.922"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.922"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.934"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.934"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.922"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.922"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.922"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.922"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.922", %"class.std::__1::unique_ptr.922"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.922"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::CSSParserSelector"* null, %"class.blink::CSSParserSelector"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.922"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CSSParserSelectorENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink17StyleRuleFontFaceC1EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleFontFace"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13StyleRuleBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13StyleRuleBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13StyleRuleBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_13StyleRuleBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleRuleBase"*
  tail call void @_ZN5blink13StyleRuleBase30FinalizeGarbageCollectedObjectEv(%"class.blink::StyleRuleBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13StyleRuleBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink13StyleRuleBase30FinalizeGarbageCollectedObjectEv(%"class.blink::StyleRuleBase"*) local_unnamed_addr #2

declare void @_ZN5blink15StyleRuleImportC1ERKN3WTF6StringE13scoped_refptrINS_13MediaQuerySetEENS_11OriginCleanE(%"class.blink::StyleRuleImport"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::MediaQuerySet"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StyleRuleNamespaceC2EN3WTF12AtomicStringES2_(%"class.blink::StyleRuleNamespace"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 0, i32 0
  store i8 9, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #11
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !6

21:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.blink::StyleRuleNamespace", %"class.blink::StyleRuleNamespace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %25, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %26, label %56, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !6

41:                                               ; preds = %34
  tail call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = load atomic i32, i32* %28 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %51 = add i32 %45, -1
  store i32 %51, i32* %50, align 4
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ %51, %49 ], [ %45, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %56

56:                                               ; preds = %24, %52, %55
  br i1 %6, label %70, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #11
  br label %70

70:                                               ; preds = %56, %66, %69
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.298"*, %"class.blink::StyleRuleBase"** dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.298"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.301", %"class.blink::Member.301"* %16, i64 %18
  %20 = bitcast %"class.blink::StyleRuleBase"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.301"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.298"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %8, align 8
  %10 = icmp eq %"class.blink::Member.301"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1069"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1069"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.298"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1069", %"class.blink::HeapVectorBacking.1069"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %8, align 8
  %26 = icmp eq %"class.blink::Member.301"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.301"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.298"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13StyleRuleBaseEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.298"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.298"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.298"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1069"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1069"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.301"*, %"class.blink::Member.301"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1069"* %17, null
  %23 = icmp ne %"class.blink::Member.301"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.301"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !7

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.298"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1069", %"class.blink::HeapVectorBacking.1069"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.298"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.298"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.298", %"class.WTF::Vector.298"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1069", %"class.blink::HeapVectorBacking.1069"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13StyleRuleBaseEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1069"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1069"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1069"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13StyleRuleBaseEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.301"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi i64 [ 0, %25 ], [ %40, %39 ]
  %29 = getelementptr inbounds %"class.blink::Member.301", %"class.blink::Member.301"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.301"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to %"class.blink::StyleRuleBase"*
  %35 = getelementptr inbounds %"class.blink::StyleRuleBase", %"class.blink::StyleRuleBase"* %34, i64 0, i32 0
  %36 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %37 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, i64 5
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, align 8
  tail call void %38(%"class.blink::Visitor"* %0, i8* %35, i8* %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13StyleRuleBaseEE5TraceEPNS_7VisitorEPKv) #11
  br label %39

39:                                               ; preds = %33, %27
  %40 = add nuw nsw i64 %28, 1
  %41 = icmp eq i64 %40, %23
  br i1 %41, label %42, label %27

42:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13StyleRuleBaseEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink14StyleRuleMediaC1E13scoped_refptrINS_13MediaQuerySetEERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleMedia"*, %"class.blink::MediaQuerySet"*, %"class.blink::HeapVector.295"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN5blink17StyleRuleSupportsC1ERKN3WTF6StringEbRNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleSupports"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.blink::HeapVector.295"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink17StyleRuleViewportC1EPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleViewport"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

declare void @_ZN5blink18StyleRuleKeyframesC1Ev(%"class.blink::StyleRuleKeyframes"*) unnamed_addr #2

declare void @_ZN5blink18StyleRuleKeyframes20ParserAppendKeyframeEPNS_17StyleRuleKeyframeE(%"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframe"*) local_unnamed_addr #2

declare void @_ZN5blink13StyleRulePageC1ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRulePage"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

declare void @_ZN5blink17StyleRulePropertyC1ERKN3WTF6StringEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleProperty"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

declare void @_ZN5blink21StyleRuleCounterStyleC1ERKN3WTF12AtomicStringEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleCounterStyle"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

declare void @_ZN5blink23StyleRuleScrollTimelineC1ERKN3WTF6StringEPKNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleScrollTimeline"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

declare void @_ZN5blink14ContainerQueryC1E13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::ContainerQuery"*, %"class.blink::MediaQuerySet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ContainerQueryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ContainerQueryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ContainerQueryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ContainerQueryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ContainerQueryEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %class.scoped_refptr.493*
  tail call void @_ZN13scoped_refptrIN5blink13MediaQuerySetEED2Ev(%class.scoped_refptr.493* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ContainerQueryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink18StyleRuleContainerC1ERNS_14ContainerQueryERNS_10HeapVectorINS_6MemberINS_13StyleRuleBaseEEELj0EEE(%"class.blink::StyleRuleContainer"*, %"class.blink::ContainerQuery"* dereferenceable(16), %"class.blink::HeapVector.295"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink17StyleRuleKeyframeC1ENSt3__110unique_ptrIN3WTF6VectorIdLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleKeyframe"*, %"class.WTF::Vector.942"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

declare void @_ZN5blink25CSSLazyPropertyParserImplC1EjPNS_19CSSLazyParsingStateE(%"class.blink::CSSLazyPropertyParserImpl"*, i32, %"class.blink::CSSLazyParsingState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21CSSLazyPropertyParserEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CSSLazyPropertyParserEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21CSSLazyPropertyParserEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CSSLazyPropertyParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSLazyPropertyParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSLazyPropertyParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSLazyPropertyParser"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21CSSLazyPropertyParserEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSLazyPropertyParser"*
  %3 = bitcast i8* %0 to void (%"class.blink::CSSLazyPropertyParser"*)***
  %4 = load void (%"class.blink::CSSLazyPropertyParser"*)**, void (%"class.blink::CSSLazyPropertyParser"*)*** %3, align 8
  %5 = load void (%"class.blink::CSSLazyPropertyParser"*)*, void (%"class.blink::CSSLazyPropertyParser"*)** %4, align 8
  tail call void %5(%"class.blink::CSSLazyPropertyParser"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21CSSLazyPropertyParserEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink9StyleRuleC1ENS_15CSSSelectorListEPNS_21CSSLazyPropertyParserE(%"class.blink::StyleRule"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSLazyPropertyParser"*) unnamed_addr #2

declare void @_ZN5blink9StyleRuleC1ENS_15CSSSelectorListEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRule"*, %"class.blink::CSSSelectorList"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::CSSPropertyValue"*
  %4 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::CSSPropertyValue"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %0 to i64*
  store i64 %6, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = bitcast i8* %8 to i16*
  %10 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 0, i32 1
  %11 = load i16, i16* %10, align 8
  store i16 %11, i16* %9, align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 16
  %13 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %1, i64 0, i32 1
  %14 = bitcast %"class.blink::Member"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %53, label %19

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #11
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !6

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #11
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 9
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %53, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %37, align 8
  %39 = load atomic i64, i64* %16 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %38, i64 0, i32 0, i32 0
  %43 = inttoptr i64 %39 to %"class.blink::CSSValue"*
  %44 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %43, i64 0, i32 0
  %45 = bitcast %"class.blink::MarkingVisitor"* %38 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %42, i8* %44, i8* %44, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #11
  %49 = load i64, i64* %34, align 8
  br label %50

50:                                               ; preds = %41, %33
  %51 = phi i64 [ %36, %33 ], [ %49, %41 ]
  %52 = add i64 %51, -1
  store i64 %52, i64* %34, align 8
  br label %53

53:                                               ; preds = %2, %26, %50
  ret %"class.blink::CSSPropertyValue"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector"*, %"class.blink::CSSPropertyValue"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSPropertyValue"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertyValue"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #11
  %14 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::CSSPropertyValue"* %1 to i64
  %17 = ptrtoint %"class.blink::CSSPropertyValue"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #11
  %20 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::CSSPropertyValue"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::CSSPropertyValue"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %23, i64 %26
  %28 = bitcast %"class.blink::CSSPropertyValue"* %27 to i8*
  %29 = tail call %"class.blink::CSSPropertyValue"* @_ZN3WTF15ConstructTraitsIN5blink16CSSPropertyValueENS_12VectorTraitsIS2_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS2_EEEPS2_PvDpOT_(i8* %28, %"class.blink::CSSPropertyValue"* dereferenceable(24) %24)
  %30 = load i32, i32* %3, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* %15, i8* %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #11
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %10 = icmp eq %"class.blink::CSSPropertyValue"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 256
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %14) #11
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16CSSPropertyValueEN3WTF12VectorTraitsIS2_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #11
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 256, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::CSSPropertyValue"*
  %33 = icmp eq %"class.blink::CSSPropertyValue"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 257
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16CSSPropertyValueEEEmm(i64 %37) #11
  %39 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %8, align 8
  %40 = icmp eq %"class.blink::CSSPropertyValue"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 6144, %34 ]
  %43 = phi %"class.blink::CSSPropertyValue"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::CSSPropertyValue"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #11
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = udiv i64 %42, 24
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #11
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !6

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #11
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0)) #11
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink16CSSPropertyValueELj256ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.942"*, double* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load double*, double** %6, align 8
  %8 = icmp ugt double* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds double, double* %7, i64 %10
  %12 = icmp ugt double* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq double* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.942"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to double*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load double*, double** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne double* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast double* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.942"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.942"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to double*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint double* %1 to i64
  %56 = ptrtoint double* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq double* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.942"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load double*, double** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne double* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast double* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.942"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.942"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to double*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi double* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds double, double* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi double* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi double* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds double, double* %100, i64 %103
  %105 = bitcast double* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast double* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.942"*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.942", %"class.WTF::Vector.942"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  br i1 %15, label %18, label %45, !prof !7

18:                                               ; preds = %2
  %19 = icmp eq double* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.942"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load double*, double** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne double* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast double* %27 to i8*
  br i1 %30, label %32, label %38, !prof !7

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.942"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.942"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to double*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi double* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds double, double* %46, i64 %48
  %50 = load i32, i32* %1, align 4
  %51 = sitofp i32 %50 to double
  store double %51, double* %49, align 8
  %52 = load i32, i32* %3, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5blink14CSSParserToken5ValueEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink14CSSParserToken5ValueEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink14CSSParserToken5ValueEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink14CSSParserToken5ValueEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink14CSSParserToken5ValueEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5blink14CSSParserToken5ValueEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink14CSSParserToken5ValueEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink14CSSParserToken5ValueEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE: argument 0"}
!37 = distinct !{!37, !"_ZN5blink13CSSParserImpl12ConsumeValueERNS_20CSSParserTokenStreamE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink14CSSParserToken5ValueEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink14CSSParserToken5ValueEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5blink14CSSParserToken5ValueEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5blink14CSSParserToken5ValueEv"}
!50 = !{}
!51 = !{!52, !45}
!52 = distinct !{!52, !53, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!53 = distinct !{!53, !"_ZNK5blink14CSSParserToken5ValueEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink14CSSParserToken5ValueEv"}
!57 = !{!58, !55}
!58 = distinct !{!58, !59, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink14CSSParserToken5ValueEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!62 = distinct !{!62, !"_ZNK5blink14CSSParserToken5ValueEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink14CSSParserToken5ValueEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5blink14CSSParserToken5ValueEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5blink14CSSParserToken5ValueEv"}
