; ModuleID = '../../ui/gfx/geometry/quaternion.cc'
source_filename = "../../ui/gfx/geometry/quaternion.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Quaternion" = type { double, double, double, double }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [18 x i8] c"[%f %f %f %f], v:\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c", \CE\B8:%f\CF\80\00", align 1

@_ZN3gfx10QuaternionC1ERKNS_9Vector3dFEd = hidden unnamed_addr alias void (%"class.gfx::Quaternion"*, %"class.gfx::Vector3dF"*, double), void (%"class.gfx::Quaternion"*, %"class.gfx::Vector3dF"*, double)* @_ZN3gfx10QuaternionC2ERKNS_9Vector3dFEd
@_ZN3gfx10QuaternionC1ERKNS_9Vector3dFES3_ = hidden unnamed_addr alias void (%"class.gfx::Quaternion"*, %"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"*), void (%"class.gfx::Quaternion"*, %"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"*)* @_ZN3gfx10QuaternionC2ERKNS_9Vector3dFES3_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10QuaternionC2ERKNS_9Vector3dFEd(%"class.gfx::Quaternion"* nocapture, %"class.gfx::Vector3dF"* dereferenceable(12), double) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 3
  %6 = bitcast %"class.gfx::Quaternion"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  store double 1.000000e+00, double* %5, align 8
  %7 = tail call float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"* %1) #8
  %8 = tail call float @llvm.fabs.f32(float %7)
  %9 = fpext float %8 to double
  %10 = fcmp olt double %9, 1.000000e-05
  br i1 %10, label %30, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  %13 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  %15 = bitcast %"class.gfx::Vector3dF"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 4 %15, i64 12, i1 false)
  %16 = fdiv float 1.000000e+00, %7
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* nonnull %4, float %16, float %16, float %16) #8
  %17 = fmul double %2, 5.000000e-01
  %18 = call double @sin(double %17) #8
  %19 = bitcast %"class.gfx::Vector3dF"* %4 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 8
  %21 = fpext <2 x float> %20 to <2 x double>
  %22 = insertelement <2 x double> undef, double %18, i32 0
  %23 = shufflevector <2 x double> %22, <2 x double> undef, <2 x i32> zeroinitializer
  %24 = fmul <2 x double> %23, %21
  %25 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %24, <2 x double>* %25, align 8
  %26 = load float, float* %14, align 8
  %27 = fpext float %26 to double
  %28 = fmul double %18, %27
  store double %28, double* %12, align 8
  %29 = call double @cos(double %17) #8
  store double %29, double* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %13) #8
  br label %30

30:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare float @_ZNK3gfx9Vector3dF6LengthEv(%"class.gfx::Vector3dF"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare double @sin(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @cos(double) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx10QuaternionC2ERKNS_9Vector3dFES3_(%"class.gfx::Quaternion"* nocapture, %"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 3
  %7 = bitcast %"class.gfx::Quaternion"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  store double 1.000000e+00, double* %6, align 8
  %8 = tail call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12) %1, %"class.gfx::Vector3dF"* dereferenceable(12) %2) #8
  %9 = fpext float %8 to double
  %10 = tail call double @_ZNK3gfx9Vector3dF13LengthSquaredEv(%"class.gfx::Vector3dF"* %1) #8
  %11 = tail call double @_ZNK3gfx9Vector3dF13LengthSquaredEv(%"class.gfx::Vector3dF"* %2) #8
  %12 = fmul double %10, %11
  %13 = tail call double @sqrt(double %12) #8
  %14 = fadd double %13, %9
  %15 = fmul double %13, 1.000000e-05
  %16 = fcmp olt double %14, %15
  br i1 %16, label %17, label %34

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = tail call float @llvm.fabs.f32(float %19) #8
  %21 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = tail call float @llvm.fabs.f32(float %22) #8
  %24 = fcmp ogt float %20, %23
  %25 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fsub float -0.000000e+00, %26
  %28 = fsub float -0.000000e+00, %22
  %29 = select i1 %24, float 0.000000e+00, float %26
  %30 = select i1 %24, float %19, float %28
  %31 = select i1 %24, float %27, float 0.000000e+00
  %32 = insertelement <2 x float> undef, float %31, i32 0
  %33 = insertelement <2 x float> %32, float %30, i32 1
  br label %41

34:                                               ; preds = %3
  %35 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  %37 = bitcast %"class.gfx::Vector3dF"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 4 %37, i64 12, i1 false) #8
  call void @_ZN3gfx9Vector3dF5CrossERKS0_(%"class.gfx::Vector3dF"* nonnull %4, %"class.gfx::Vector3dF"* dereferenceable(12) %2) #8
  %38 = bitcast %"class.gfx::Vector3dF"* %4 to <2 x float>*
  %39 = load <2 x float>, <2 x float>* %38, align 8
  %40 = load float, float* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35)
  br label %41

41:                                               ; preds = %34, %17
  %42 = phi float [ %29, %17 ], [ %40, %34 ]
  %43 = phi <2 x float> [ %33, %17 ], [ %39, %34 ]
  %44 = phi double [ 0.000000e+00, %17 ], [ %14, %34 ]
  %45 = fpext <2 x float> %43 to <2 x double>
  %46 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %45, <2 x double>* %46, align 8
  %47 = fpext float %42 to double
  store double %47, double* %5, align 8
  store double %44, double* %6, align 8
  %48 = fmul <2 x double> %45, %45
  %49 = extractelement <2 x double> %48, i32 0
  %50 = extractelement <2 x double> %48, i32 1
  %51 = fadd double %49, %50
  %52 = fmul double %47, %47
  %53 = fadd double %52, %51
  %54 = fmul double %44, %44
  %55 = fadd double %54, %53
  %56 = fcmp olt double %55, 1.000000e-05
  %57 = insertelement <2 x double> undef, double %47, i32 0
  %58 = insertelement <2 x double> %57, double %44, i32 1
  br i1 %56, label %70, label %59

59:                                               ; preds = %41
  %60 = call double @sqrt(double %55) #8, !noalias !2
  %61 = fdiv double 1.000000e+00, %60
  %62 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  %63 = load <2 x double>, <2 x double>* %62, align 8, !noalias !5
  %64 = insertelement <2 x double> undef, double %61, i32 0
  %65 = shufflevector <2 x double> %64, <2 x double> undef, <2 x i32> zeroinitializer
  %66 = fmul <2 x double> %65, %63
  %67 = bitcast double* %5 to <2 x double>*
  %68 = load <2 x double>, <2 x double>* %67, align 8, !noalias !5
  %69 = fmul <2 x double> %65, %68
  br label %70

70:                                               ; preds = %41, %59
  %71 = phi <2 x double> [ %66, %59 ], [ %45, %41 ]
  %72 = phi <2 x double> [ %69, %59 ], [ %58, %41 ]
  %73 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %71, <2 x double>* %73, align 8
  %74 = bitcast double* %5 to <2 x double>*
  store <2 x double> %72, <2 x double>* %74, align 8
  ret void
}

declare float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #3

declare double @_ZNK3gfx9Vector3dF13LengthSquaredEv(%"class.gfx::Vector3dF"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10Quaternion10NormalizedEv(%"class.gfx::Quaternion"* noalias nocapture sret, %"class.gfx::Quaternion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gfx::Quaternion"* %1 to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8
  %5 = fmul <2 x double> %4, %4
  %6 = extractelement <2 x double> %5, i32 0
  %7 = extractelement <2 x double> %5, i32 1
  %8 = fadd double %6, %7
  %9 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 2
  %10 = bitcast double* %9 to <2 x double>*
  %11 = load <2 x double>, <2 x double>* %10, align 8
  %12 = fmul <2 x double> %11, %11
  %13 = extractelement <2 x double> %12, i32 0
  %14 = fadd double %8, %13
  %15 = extractelement <2 x double> %12, i32 1
  %16 = fadd double %14, %15
  %17 = fcmp olt double %16, 1.000000e-05
  br i1 %17, label %18, label %21

18:                                               ; preds = %2
  %19 = bitcast %"class.gfx::Quaternion"* %0 to i8*
  %20 = bitcast %"class.gfx::Quaternion"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 32, i1 false)
  br label %35

21:                                               ; preds = %2
  %22 = tail call double @sqrt(double %16) #8
  %23 = fdiv double 1.000000e+00, %22
  %24 = bitcast %"class.gfx::Quaternion"* %1 to <2 x double>*
  %25 = load <2 x double>, <2 x double>* %24, align 8, !noalias !10
  %26 = insertelement <2 x double> undef, double %23, i32 0
  %27 = shufflevector <2 x double> %26, <2 x double> undef, <2 x i32> zeroinitializer
  %28 = fmul <2 x double> %27, %25
  %29 = bitcast double* %9 to <2 x double>*
  %30 = load <2 x double>, <2 x double>* %29, align 8, !noalias !10
  %31 = fmul <2 x double> %27, %30
  %32 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %28, <2 x double>* %32, align 8, !alias.scope !10
  %33 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  %34 = bitcast double* %33 to <2 x double>*
  store <2 x double> %31, <2 x double>* %34, align 8, !alias.scope !10
  br label %35

35:                                               ; preds = %21, %18
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3gfx10Quaternion13FromAxisAngleEdddd(%"class.gfx::Quaternion"* noalias nocapture sret, double, double, double, double) local_unnamed_addr #4 align 2 {
  %6 = fmul double %1, %1
  %7 = fmul double %2, %2
  %8 = fadd double %6, %7
  %9 = fmul double %3, %3
  %10 = fadd double %8, %9
  %11 = tail call double @sqrt(double %10) #8
  %12 = tail call double @llvm.fabs.f64(double %11) #8
  %13 = fcmp olt double %12, 1.000000e-05
  br i1 %13, label %25, label %14

14:                                               ; preds = %5
  %15 = fmul double %4, 5.000000e-01
  %16 = tail call double @sin(double %15) #8
  %17 = fdiv double %16, %11
  %18 = insertelement <2 x double> undef, double %17, i32 0
  %19 = shufflevector <2 x double> %18, <2 x double> undef, <2 x i32> zeroinitializer
  %20 = insertelement <2 x double> undef, double %1, i32 0
  %21 = insertelement <2 x double> %20, double %2, i32 1
  %22 = fmul <2 x double> %19, %21
  %23 = fmul double %17, %3
  %24 = tail call double @cos(double %15) #8
  br label %25

25:                                               ; preds = %5, %14
  %26 = phi double [ %23, %14 ], [ 0.000000e+00, %5 ]
  %27 = phi double [ %24, %14 ], [ 1.000000e+00, %5 ]
  %28 = phi <2 x double> [ %22, %14 ], [ zeroinitializer, %5 ]
  %29 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %28, <2 x double>* %29, align 8
  %30 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  store double %26, double* %30, align 8
  %31 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 3
  store double %27, double* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10Quaternion5SlerpERKS0_d(%"class.gfx::Quaternion"* noalias nocapture sret, %"class.gfx::Quaternion"* nocapture readonly, %"class.gfx::Quaternion"* nocapture readonly dereferenceable(32), double) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.gfx::Quaternion"* %1 to i8*
  %6 = bitcast %"class.gfx::Quaternion"* %1 to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8
  %8 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 2
  %9 = bitcast double* %8 to <2 x double>*
  %10 = load <2 x double>, <2 x double>* %9, align 8
  %11 = bitcast %"class.gfx::Quaternion"* %2 to <2 x double>*
  %12 = load <2 x double>, <2 x double>* %11, align 8
  %13 = fmul <2 x double> %7, %12
  %14 = extractelement <2 x double> %13, i32 0
  %15 = extractelement <2 x double> %13, i32 1
  %16 = fadd double %14, %15
  %17 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %2, i64 0, i32 2
  %18 = bitcast double* %17 to <2 x double>*
  %19 = load <2 x double>, <2 x double>* %18, align 8
  %20 = fmul <2 x double> %10, %19
  %21 = extractelement <2 x double> %20, i32 0
  %22 = fadd double %16, %21
  %23 = extractelement <2 x double> %20, i32 1
  %24 = fadd double %22, %23
  %25 = fcmp olt double %24, 0.000000e+00
  br i1 %25, label %26, label %30

26:                                               ; preds = %4
  %27 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %7
  %28 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %10
  %29 = fsub double -0.000000e+00, %24
  br label %30

30:                                               ; preds = %26, %4
  %31 = phi double [ %29, %26 ], [ %24, %4 ]
  %32 = phi <2 x double> [ %27, %26 ], [ %7, %4 ]
  %33 = phi <2 x double> [ %28, %26 ], [ %10, %4 ]
  %34 = fcmp ogt double %31, 1.000000e+00
  %35 = select i1 %34, double 1.000000e+00, double %31
  %36 = fmul double %35, %35
  %37 = fsub double 1.000000e+00, %36
  %38 = tail call double @sqrt(double %37) #8
  %39 = fcmp olt double %38, 1.000000e-05
  br i1 %39, label %40, label %42

40:                                               ; preds = %30
  %41 = bitcast %"class.gfx::Quaternion"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %5, i64 32, i1 false)
  br label %68

42:                                               ; preds = %30
  %43 = tail call double @acos(double %35) #8
  %44 = fsub double 1.000000e+00, %3
  %45 = fmul double %44, %43
  %46 = tail call double @sin(double %45) #8
  %47 = fdiv double %46, %38
  %48 = fmul double %43, %3
  %49 = tail call double @sin(double %48) #8
  %50 = fdiv double %49, %38
  %51 = insertelement <2 x double> undef, double %47, i32 0
  %52 = shufflevector <2 x double> %51, <2 x double> undef, <2 x i32> zeroinitializer
  %53 = fmul <2 x double> %32, %52
  %54 = fmul <2 x double> %33, %52
  %55 = bitcast %"class.gfx::Quaternion"* %2 to <2 x double>*
  %56 = load <2 x double>, <2 x double>* %55, align 8, !noalias !15
  %57 = insertelement <2 x double> undef, double %50, i32 0
  %58 = shufflevector <2 x double> %57, <2 x double> undef, <2 x i32> zeroinitializer
  %59 = fmul <2 x double> %56, %58
  %60 = bitcast double* %17 to <2 x double>*
  %61 = load <2 x double>, <2 x double>* %60, align 8, !noalias !15
  %62 = fmul <2 x double> %58, %61
  %63 = fadd <2 x double> %53, %59
  %64 = fadd <2 x double> %54, %62
  %65 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %63, <2 x double>* %65, align 8, !alias.scope !18
  %66 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  %67 = bitcast double* %66 to <2 x double>*
  store <2 x double> %64, <2 x double>* %67, align 8, !alias.scope !18
  br label %68

68:                                               ; preds = %42, %40
  ret void
}

; Function Attrs: nofree nounwind
declare double @acos(double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10Quaternion4LerpERKS0_d(%"class.gfx::Quaternion"* noalias nocapture sret, %"class.gfx::Quaternion"* nocapture readonly, %"class.gfx::Quaternion"* nocapture readonly dereferenceable(32), double) local_unnamed_addr #0 align 2 {
  %5 = fsub double 1.000000e+00, %3
  %6 = bitcast %"class.gfx::Quaternion"* %1 to <2 x double>*
  %7 = load <2 x double>, <2 x double>* %6, align 8, !noalias !21
  %8 = insertelement <2 x double> undef, double %5, i32 0
  %9 = shufflevector <2 x double> %8, <2 x double> undef, <2 x i32> zeroinitializer
  %10 = fmul <2 x double> %9, %7
  %11 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 2
  %12 = bitcast double* %11 to <2 x double>*
  %13 = load <2 x double>, <2 x double>* %12, align 8, !noalias !21
  %14 = fmul <2 x double> %9, %13
  %15 = bitcast %"class.gfx::Quaternion"* %2 to <2 x double>*
  %16 = load <2 x double>, <2 x double>* %15, align 8, !noalias !24
  %17 = insertelement <2 x double> undef, double %3, i32 0
  %18 = shufflevector <2 x double> %17, <2 x double> undef, <2 x i32> zeroinitializer
  %19 = fmul <2 x double> %16, %18
  %20 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %2, i64 0, i32 2
  %21 = bitcast double* %20 to <2 x double>*
  %22 = load <2 x double>, <2 x double>* %21, align 8, !noalias !24
  %23 = fmul <2 x double> %22, %18
  %24 = fadd <2 x double> %10, %19
  %25 = fadd <2 x double> %14, %23
  %26 = fmul <2 x double> %24, %24
  %27 = extractelement <2 x double> %26, i32 0
  %28 = extractelement <2 x double> %26, i32 1
  %29 = fadd double %27, %28
  %30 = fmul <2 x double> %25, %25
  %31 = extractelement <2 x double> %30, i32 0
  %32 = fadd double %29, %31
  %33 = extractelement <2 x double> %30, i32 1
  %34 = fadd double %32, %33
  %35 = fcmp olt double %34, 1.000000e-05
  br i1 %35, label %43, label %36

36:                                               ; preds = %4
  %37 = tail call double @sqrt(double %34) #8, !noalias !27
  %38 = fdiv double 1.000000e+00, %37
  %39 = insertelement <2 x double> undef, double %38, i32 0
  %40 = shufflevector <2 x double> %39, <2 x double> undef, <2 x i32> zeroinitializer
  %41 = fmul <2 x double> %24, %40
  %42 = fmul <2 x double> %25, %40
  br label %43

43:                                               ; preds = %4, %36
  %44 = phi <2 x double> [ %41, %36 ], [ %24, %4 ]
  %45 = phi <2 x double> [ %42, %36 ], [ %25, %4 ]
  %46 = bitcast %"class.gfx::Quaternion"* %0 to <2 x double>*
  store <2 x double> %44, <2 x double>* %46, align 8
  %47 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  %48 = bitcast double* %47 to <2 x double>*
  store <2 x double> %45, <2 x double>* %48, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZNK3gfx10Quaternion6LengthEv(%"class.gfx::Quaternion"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 0
  %3 = load double, double* %2, align 8
  %4 = fmul double %3, %3
  %5 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 1
  %6 = load double, double* %5, align 8
  %7 = fmul double %6, %6
  %8 = fadd double %4, %7
  %9 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %0, i64 0, i32 2
  %10 = bitcast double* %9 to <2 x double>*
  %11 = load <2 x double>, <2 x double>* %10, align 8
  %12 = fmul <2 x double> %11, %11
  %13 = extractelement <2 x double> %12, i32 0
  %14 = fadd double %8, %13
  %15 = extractelement <2 x double> %12, i32 1
  %16 = fadd double %14, %15
  ret double %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx10Quaternion8ToStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.gfx::Quaternion"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Vector3dF", align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 3
  %9 = load double, double* %8, align 8
  %10 = tail call double @acos(double %9) #8
  %11 = fmul double %10, 2.000000e+00
  %12 = fptrunc double %11 to float
  %13 = fpext float %12 to double
  %14 = fmul double %13, 5.000000e-01
  %15 = tail call double @sin(double %14) #8
  %16 = fdiv double 1.000000e+00, %15
  %17 = fptrunc double %16 to float
  %18 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 1
  %21 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  %22 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 0
  %23 = load double, double* %22, align 8
  %24 = fptrunc double %23 to float
  %25 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 1
  %26 = load double, double* %25, align 8
  %27 = fptrunc double %26 to float
  %28 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 2
  %29 = load double, double* %28, align 8
  %30 = fptrunc double %29 to float
  store float %24, float* %19, align 4
  store float %27, float* %20, align 4
  store float %30, float* %21, align 4
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* nonnull %3, float %17, float %17, float %17) #8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %33 = load double, double* %22, align 8
  %34 = load double, double* %25, align 8
  %35 = load double, double* %28, align 8
  %36 = load double, double* %8, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), double %33, double %34, double %35, double %36) #8
  %37 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  call void @_ZNK3gfx9Vector3dF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.gfx::Vector3dF"* nonnull %3) #8
  %38 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1, !noalias !30
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8, !noalias !30
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8, !noalias !30
  %46 = zext i8 %40 to i64
  %47 = select i1 %41, i8* %43, i8* %37
  %48 = select i1 %41, i64 %45, i64 %46
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %47, i64 %48) #8, !noalias !30
  %50 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %50, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #8, !noalias !30
  %51 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8
  %52 = fdiv float %12, 0x400921FB60000000
  %53 = fpext float %52 to double
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), double %53) #8
  %54 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1, !noalias !33
  %57 = icmp slt i8 %56, 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8, !noalias !33
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8, !noalias !33
  %62 = zext i8 %56 to i64
  %63 = select i1 %57, i8* %59, i8* %51
  %64 = select i1 %57, i64 %61, i64 %62
  %65 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %63, i64 %64) #8, !noalias !33
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #8, !noalias !33
  %68 = load i8, i8* %55, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %2
  %71 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %71) #9
  br label %72

72:                                               ; preds = %2, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8
  %73 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #9
  br label %80

80:                                               ; preds = %72, %77
  %81 = load i8, i8* %39, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  %86 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #8
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare void @_ZNK3gfx9Vector3dF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::Vector3dF"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

declare void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"*, float, float, float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

declare void @_ZN3gfx9Vector3dF5CrossERKS0_(%"class.gfx::Vector3dF"*, %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3gfx10Quaternion10NormalizedEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3gfx10Quaternion10NormalizedEv"}
!5 = !{!6, !8, !3}
!6 = distinct !{!6, !7, !"_ZN3gfxmlERKNS_10QuaternionEd: argument 0"}
!7 = distinct !{!7, !"_ZN3gfxmlERKNS_10QuaternionEd"}
!8 = distinct !{!8, !9, !"_ZN3gfxdvERKNS_10QuaternionEd: argument 0"}
!9 = distinct !{!9, !"_ZN3gfxdvERKNS_10QuaternionEd"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3gfxmlERKNS_10QuaternionEd: argument 0"}
!12 = distinct !{!12, !"_ZN3gfxmlERKNS_10QuaternionEd"}
!13 = distinct !{!13, !14, !"_ZN3gfxdvERKNS_10QuaternionEd: argument 0"}
!14 = distinct !{!14, !"_ZN3gfxdvERKNS_10QuaternionEd"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3gfxmlEdRKNS_10QuaternionE: argument 0"}
!17 = distinct !{!17, !"_ZN3gfxmlEdRKNS_10QuaternionE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK3gfx10QuaternionplERKS0_: argument 0"}
!20 = distinct !{!20, !"_ZNK3gfx10QuaternionplERKS0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3gfxmlEdRKNS_10QuaternionE: argument 0"}
!23 = distinct !{!23, !"_ZN3gfxmlEdRKNS_10QuaternionE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3gfxmlEdRKNS_10QuaternionE: argument 0"}
!26 = distinct !{!26, !"_ZN3gfxmlEdRKNS_10QuaternionE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK3gfx10Quaternion10NormalizedEv: argument 0"}
!29 = distinct !{!29, !"_ZNK3gfx10Quaternion10NormalizedEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
