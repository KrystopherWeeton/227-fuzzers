; ModuleID = '../../third_party/icu/source/i18n/fpositer.cpp'
source_filename = "../../third_party/icu/source/i18n/fpositer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::FieldPositionIterator" = type <{ %"class.icu_69::UObject", %"class.icu_69::UVector32"*, i32, [4 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%"class.icu_69::FieldPosition" = type <{ %"class.icu_69::UObject", i32, i32, i32, [4 x i8] }>

@_ZTVN6icu_6921FieldPositionIteratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6icu_6921FieldPositionIteratorE to i8*), i8* bitcast (void (%"class.icu_69::FieldPositionIterator"*)* @_ZN6icu_6921FieldPositionIteratorD2Ev to i8*), i8* bitcast (void (%"class.icu_69::FieldPositionIterator"*)* @_ZN6icu_6921FieldPositionIteratorD0Ev to i8*), i8* bitcast (i8* (%"class.icu_69::UObject"*)* @_ZNK6icu_697UObject17getDynamicClassIDEv to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6icu_6921FieldPositionIteratorE = hidden constant [33 x i8] c"N6icu_6921FieldPositionIteratorE\00", align 1
@_ZTIN6icu_697UObjectE = external constant i8*
@_ZTIN6icu_6921FieldPositionIteratorE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @_ZTSN6icu_6921FieldPositionIteratorE, i32 0, i32 0), i8* bitcast (i8** @_ZTIN6icu_697UObjectE to i8*) }, align 8

@_ZN6icu_6921FieldPositionIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::FieldPositionIterator"*), void (%"class.icu_69::FieldPositionIterator"*)* @_ZN6icu_6921FieldPositionIteratorD2Ev
@_ZN6icu_6921FieldPositionIteratorC1Ev = hidden unnamed_addr alias void (%"class.icu_69::FieldPositionIterator"*), void (%"class.icu_69::FieldPositionIterator"*)* @_ZN6icu_6921FieldPositionIteratorC2Ev
@_ZN6icu_6921FieldPositionIteratorC1ERKS0_ = hidden unnamed_addr alias void (%"class.icu_69::FieldPositionIterator"*, %"class.icu_69::FieldPositionIterator"*), void (%"class.icu_69::FieldPositionIterator"*, %"class.icu_69::FieldPositionIterator"*)* @_ZN6icu_6921FieldPositionIteratorC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921FieldPositionIteratorD2Ev(%"class.icu_69::FieldPositionIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6921FieldPositionIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector32"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::UVector32"* %4 to void (%"class.icu_69::UVector32"*)***
  %8 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %8, i64 1
  %10 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %9, align 8
  tail call void %10(%"class.icu_69::UVector32"* nonnull %4) #6
  br label %11

11:                                               ; preds = %6, %1
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %3, align 8
  %12 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %13) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921FieldPositionIteratorD0Ev(%"class.icu_69::FieldPositionIterator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6921FieldPositionIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  %4 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %3, align 8
  %5 = icmp eq %"class.icu_69::UVector32"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.icu_69::UVector32"* %4 to void (%"class.icu_69::UVector32"*)***
  %8 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %8, i64 1
  %10 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %9, align 8
  tail call void %10(%"class.icu_69::UVector32"* nonnull %4) #6
  br label %11

11:                                               ; preds = %1, %6
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %3, align 8
  %12 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 0
  tail call void @_ZN6icu_697UObjectD2Ev(%"class.icu_69::UObject"* %13) #6
  %14 = bitcast %"class.icu_69::FieldPositionIterator"* %0 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* %14) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6921FieldPositionIteratorC2Ev(%"class.icu_69::FieldPositionIterator"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6921FieldPositionIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921FieldPositionIteratorC2ERKS0_(%"class.icu_69::FieldPositionIterator"* nocapture, %"class.icu_69::FieldPositionIterator"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6icu_6921FieldPositionIteratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %1, i64 0, i32 1
  %10 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %9, align 8
  %11 = icmp eq %"class.icu_69::UVector32"* %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %2
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  store i32 0, i32* %3, align 4
  %14 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #6
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast i8* %14 to %"class.icu_69::UVector32"*
  call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* nonnull %17, i32* nonnull dereferenceable(4) %3) #6
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi %"class.icu_69::UVector32"* [ %17, %16 ], [ null, %12 ]
  store %"class.icu_69::UVector32"* %19, %"class.icu_69::UVector32"** %5, align 8
  %20 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %9, align 8
  call void @_ZN6icu_699UVector326assignERKS0_R10UErrorCode(%"class.icu_69::UVector32"* %19, %"class.icu_69::UVector32"* dereferenceable(32) %20, i32* nonnull dereferenceable(4) %3) #6
  %21 = load i32, i32* %3, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %18
  %24 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %5, align 8
  %25 = icmp eq %"class.icu_69::UVector32"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.icu_69::UVector32"* %24 to void (%"class.icu_69::UVector32"*)***
  %28 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %28, i64 1
  %30 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %29, align 8
  call void %30(%"class.icu_69::UVector32"* nonnull %24) #6
  br label %31

31:                                               ; preds = %26, %23
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %5, align 8
  store i32 -1, i32* %6, align 8
  br label %32

32:                                               ; preds = %18, %31
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  br label %33

33:                                               ; preds = %2, %32
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #1

declare void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"*, i32* dereferenceable(4)) unnamed_addr #4

declare void @_ZN6icu_699UVector326assignERKS0_R10UErrorCode(%"class.icu_69::UVector32"*, %"class.icu_69::UVector32"* dereferenceable(32), i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZNK6icu_6921FieldPositionIteratoreqERKS0_(%"class.icu_69::FieldPositionIterator"* readonly, %"class.icu_69::FieldPositionIterator"* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.icu_69::FieldPositionIterator"* %1, %0
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  %12 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %11, align 8
  %13 = icmp eq %"class.icu_69::UVector32"* %12, null
  %14 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %1, i64 0, i32 1
  %15 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %14, align 8
  %16 = icmp eq %"class.icu_69::UVector32"* %15, null
  br i1 %13, label %17, label %19

17:                                               ; preds = %10
  %18 = zext i1 %16 to i8
  br label %22

19:                                               ; preds = %10
  br i1 %16, label %22, label %20

20:                                               ; preds = %19
  %21 = tail call signext i8 @_ZN6icu_699UVector32eqERKS0_(%"class.icu_69::UVector32"* nonnull %12, %"class.icu_69::UVector32"* nonnull dereferenceable(32) %15) #6
  br label %22

22:                                               ; preds = %20, %19, %4, %2, %17
  %23 = phi i8 [ %18, %17 ], [ 1, %2 ], [ 0, %4 ], [ %21, %20 ], [ 0, %19 ]
  ret i8 %23
}

declare signext i8 @_ZN6icu_699UVector32eqERKS0_(%"class.icu_69::UVector32"*, %"class.icu_69::UVector32"* dereferenceable(32)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_6921FieldPositionIterator7setDataEPNS_9UVector32ER10UErrorCode(%"class.icu_69::FieldPositionIterator"* nocapture, %"class.icu_69::UVector32"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  %6 = icmp ne %"class.icu_69::UVector32"* %1, null
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %46

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = bitcast %"class.icu_69::UVector32"* %1 to void (%"class.icu_69::UVector32"*)***
  %14 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %14, i64 1
  %16 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %15, align 8
  tail call void %16(%"class.icu_69::UVector32"* nonnull %1) #6
  %17 = load i32, i32* %2, align 4
  br label %46

18:                                               ; preds = %8
  %19 = and i32 %10, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = icmp sgt i32 %10, 2
  br i1 %22, label %23, label %59

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %1, i64 0, i32 4
  %25 = sext i32 %10 to i64
  %26 = load i32*, i32** %24, align 8
  br label %31

27:                                               ; preds = %18
  store i32 1, i32* %2, align 4
  br label %53

28:                                               ; preds = %41
  %29 = trunc i64 %44 to i32
  %30 = icmp sgt i32 %10, %29
  br i1 %30, label %31, label %46

31:                                               ; preds = %23, %28
  %32 = phi i64 [ 2, %23 ], [ %44, %28 ]
  %33 = getelementptr inbounds i32, i32* %26, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = or i64 %32, 1
  %36 = icmp slt i64 %35, %25
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  %38 = load i32*, i32** %24, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 %35
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %31, %37
  %42 = phi i32 [ %40, %37 ], [ 0, %31 ]
  %43 = icmp slt i32 %34, %42
  %44 = add nuw i64 %32, 4
  br i1 %43, label %28, label %45

45:                                               ; preds = %41
  store i32 1, i32* %2, align 4
  br label %50

46:                                               ; preds = %28, %12, %3
  %47 = phi i32 [ %17, %12 ], [ %4, %3 ], [ %4, %28 ]
  %48 = phi %"class.icu_69::UVector32"* [ null, %12 ], [ %1, %3 ], [ %1, %28 ]
  %49 = icmp sgt i32 %47, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %45, %46
  %51 = phi %"class.icu_69::UVector32"* [ %48, %46 ], [ %1, %45 ]
  %52 = icmp eq %"class.icu_69::UVector32"* %51, null
  br i1 %52, label %73, label %53

53:                                               ; preds = %27, %50
  %54 = phi %"class.icu_69::UVector32"* [ %1, %27 ], [ %51, %50 ]
  %55 = bitcast %"class.icu_69::UVector32"* %54 to void (%"class.icu_69::UVector32"*)***
  %56 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %56, i64 1
  %58 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %57, align 8
  tail call void %58(%"class.icu_69::UVector32"* nonnull %54) #6
  br label %73

59:                                               ; preds = %21, %46
  %60 = phi %"class.icu_69::UVector32"* [ %48, %46 ], [ %1, %21 ]
  %61 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  %62 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %61, align 8
  %63 = icmp eq %"class.icu_69::UVector32"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = bitcast %"class.icu_69::UVector32"* %62 to void (%"class.icu_69::UVector32"*)***
  %66 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %66, i64 1
  %68 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %67, align 8
  tail call void %68(%"class.icu_69::UVector32"* nonnull %62) #6
  br label %69

69:                                               ; preds = %64, %59
  store %"class.icu_69::UVector32"* %60, %"class.icu_69::UVector32"** %61, align 8
  %70 = icmp eq %"class.icu_69::UVector32"* %60, null
  %71 = sext i1 %70 to i32
  %72 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  store i32 %71, i32* %72, align 8
  br label %73

73:                                               ; preds = %50, %53, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_6921FieldPositionIterator4nextERNS_13FieldPositionE(%"class.icu_69::FieldPositionIterator"* nocapture, %"class.icu_69::FieldPosition"* nocapture dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = add nuw nsw i32 %4, 1
  %8 = getelementptr inbounds %"class.icu_69::FieldPositionIterator", %"class.icu_69::FieldPositionIterator"* %0, i64 0, i32 1
  %9 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %8, align 8
  %10 = add nsw i32 %4, 2
  store i32 %10, i32* %3, align 8
  %11 = icmp sgt i32 %4, -2
  br i1 %11, label %12, label %24

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %9, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  %16 = icmp sgt i32 %14, %7
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %9, i64 0, i32 4
  %20 = load i32*, i32** %19, align 8
  %21 = sext i32 %7 to i64
  %22 = getelementptr inbounds i32, i32* %20, i64 %21
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %6, %12, %18
  %25 = phi i32 [ %23, %18 ], [ 0, %12 ], [ 0, %6 ]
  %26 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %1, i64 0, i32 1
  store i32 %25, i32* %26, align 8
  %27 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %8, align 8
  %28 = load i32, i32* %3, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %3, align 8
  %30 = icmp sgt i32 %28, -1
  br i1 %30, label %31, label %43

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %27, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %33, 0
  %35 = icmp sgt i32 %33, %28
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %27, i64 0, i32 4
  %39 = load i32*, i32** %38, align 8
  %40 = sext i32 %28 to i64
  %41 = getelementptr inbounds i32, i32* %39, i64 %40
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %24, %31, %37
  %44 = phi i32 [ %42, %37 ], [ 0, %31 ], [ 0, %24 ]
  %45 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %1, i64 0, i32 2
  store i32 %44, i32* %45, align 4
  %46 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %8, align 8
  %47 = load i32, i32* %3, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %3, align 8
  %49 = icmp sgt i32 %47, -1
  br i1 %49, label %50, label %62

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %46, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, 0
  %54 = icmp sgt i32 %52, %47
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %46, i64 0, i32 4
  %58 = load i32*, i32** %57, align 8
  %59 = sext i32 %47 to i64
  %60 = getelementptr inbounds i32, i32* %58, i64 %59
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %43, %50, %56
  %63 = phi i32 [ %61, %56 ], [ 0, %50 ], [ 0, %43 ]
  %64 = getelementptr inbounds %"class.icu_69::FieldPosition", %"class.icu_69::FieldPosition"* %1, i64 0, i32 3
  store i32 %63, i32* %64, align 8
  %65 = load i32, i32* %3, align 8
  %66 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %8, align 8
  %67 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %66, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %65, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %62
  store i32 -1, i32* %3, align 8
  br label %71

71:                                               ; preds = %62, %70, %2
  %72 = phi i8 [ 0, %2 ], [ 1, %70 ], [ 1, %62 ]
  ret i8 %72
}

declare i8* @_ZNK6icu_697UObject17getDynamicClassIDEv(%"class.icu_69::UObject"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
