; ModuleID = '../../third_party/blink/renderer/modules/webdatabase/database_authorizer.cc'
source_filename = "../../third_party/blink/renderer/modules/webdatabase/database_authorizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::String, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::String, WTF::CaseFoldingHash, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::DatabaseAuthorizer" = type { i32, i8, %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::HashTable" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_ = comdat any

@_ZN5blink12kSQLAuthDenyE = external local_unnamed_addr constant i32, align 4
@_ZN5blink13kSQLAuthAllowE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [5 x i8] c"fts3\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"sqlite_rename_column\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"sqlite_rename_table\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"sqlite_rename_test\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"changes\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"coalesce\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"ifnull\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"hex\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"last_insert_rowid\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"like\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"ltrim\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"nullif\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"rtrim\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"soundex\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"sqlite_source_id\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"sqlite_version\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"total_changes\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"trim\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"zeroblob\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"datetime\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"julianday\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"strftime\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"avg\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"group_concat\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"snippet\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"offsets\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"optimize\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"regexp\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"printf\00", align 1
@.str.47 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.48 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@.str.49 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

@_ZN5blink18DatabaseAuthorizerC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::DatabaseAuthorizer"*, %"class.WTF::String"*), void (%"class.blink::DatabaseAuthorizer"*, %"class.WTF::String"*)* @_ZN5blink18DatabaseAuthorizerC2ERKN3WTF6StringE
@_ZN5blink18DatabaseAuthorizerD1Ev = hidden unnamed_addr alias void (%"class.blink::DatabaseAuthorizer"*), void (%"class.blink::DatabaseAuthorizer"*)* @_ZN5blink18DatabaseAuthorizerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18DatabaseAuthorizerC2ERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, -2
  store i8 %5, i8* %3, align 4
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  %27 = load i8, i8* %3, align 4
  br label %28

28:                                               ; preds = %2, %10, %25
  %29 = phi i8 [ %5, %2 ], [ %5, %10 ], [ %27, %25 ]
  %30 = and i8 %29, -7
  store i8 %30, i8* %3, align 4
  %31 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  store i32 0, i32* %31, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18DatabaseAuthorizer5ResetEv(%"class.blink::DatabaseAuthorizer"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, -7
  store i8 %4, i8* %2, align 4
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18DatabaseAuthorizerD2Ev(%"class.blink::DatabaseAuthorizer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18DatabaseAuthorizer12ResetDeletesEv(%"class.blink::DatabaseAuthorizer"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, -9
  store i8 %4, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11CreateTableERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = or i8 %6, 4
  store i8 %10, i8* %5, align 4
  br label %56

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %56

16:                                               ; preds = %11
  %17 = or i8 %6, 4
  store i8 %17, i8* %5, align 4
  %18 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %9, %51, %11
  %57 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %11 ], [ %55, %51 ], [ @_ZN5blink13kSQLAuthAllowE, %9 ]
  %58 = load i32, i32* %57, align 4
  ret i32 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink18DatabaseAuthorizer10AllowWriteEv(%"class.blink::DatabaseAuthorizer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = and i32 %8, 4
  %13 = icmp eq i32 %12, 0
  br label %14

14:                                               ; preds = %6, %1, %11
  %15 = phi i1 [ true, %1 ], [ false, %6 ], [ %13, %11 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18DatabaseAuthorizer20DenyBasedOnTableNameERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %14, %18
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %34, i64* %35, align 8
  br label %43

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %42, align 8
  br label %43

43:                                               ; preds = %32, %36
  %44 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  %46 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %47 = select i1 %46, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %48

48:                                               ; preds = %43, %2
  %49 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %2 ], [ %47, %43 ]
  %50 = load i32, i32* %49, align 4
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer15CreateTempTableERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %53

14:                                               ; preds = %9
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %21, i64* %22, align 8
  br label %30

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  br label %30

30:                                               ; preds = %23, %19
  %31 = phi i32 [ %26, %23 ], [ 0, %19 ]
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %39, i64* %40, align 8
  br label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  br label %48

48:                                               ; preds = %41, %37
  %49 = phi i32 [ %44, %41 ], [ 0, %37 ]
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %49, i32* %50, align 8
  %51 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %52 = select i1 %51, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %53

53:                                               ; preds = %48, %2, %9
  %54 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %9 ], [ %52, %48 ], [ @_ZN5blink13kSQLAuthAllowE, %2 ]
  %55 = load i32, i32* %54, align 4
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer9DropTableERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %55, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %62

16:                                               ; preds = %9
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  br label %32

32:                                               ; preds = %25, %21
  %33 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %41, i64* %42, align 8
  br label %50

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  br label %50

50:                                               ; preds = %43, %39
  %51 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %54 = select i1 %53, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %55

55:                                               ; preds = %2, %50
  %56 = phi i32* [ %54, %50 ], [ @_ZN5blink13kSQLAuthAllowE, %2 ]
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = load i8, i8* %5, align 4
  %61 = or i8 %60, 8
  store i8 %61, i8* %5, align 4
  br label %62

62:                                               ; preds = %59, %55, %14
  %63 = phi i32 [ %15, %14 ], [ 0, %55 ], [ %57, %59 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer29UpdateDeletesBasedOnTableNameERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %18, %14
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %34, i64* %35, align 8
  br label %43

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %42, align 8
  br label %43

43:                                               ; preds = %36, %32
  %44 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  %46 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %47 = select i1 %46, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %48

48:                                               ; preds = %2, %43
  %49 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %2 ], [ %47, %43 ]
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = load i8, i8* %5, align 4
  %54 = or i8 %53, 8
  store i8 %54, i8* %5, align 4
  br label %55

55:                                               ; preds = %48, %52
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer13DropTempTableERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %55, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %62

16:                                               ; preds = %9
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  br label %32

32:                                               ; preds = %25, %21
  %33 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %41, i64* %42, align 8
  br label %50

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  br label %50

50:                                               ; preds = %43, %39
  %51 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %54 = select i1 %53, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %55

55:                                               ; preds = %2, %50
  %56 = phi i32* [ %54, %50 ], [ @_ZN5blink13kSQLAuthAllowE, %2 ]
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = load i8, i8* %5, align 4
  %61 = or i8 %60, 8
  store i8 %61, i8* %5, align 4
  br label %62

62:                                               ; preds = %59, %55, %14
  %63 = phi i32 [ %15, %14 ], [ 0, %55 ], [ %57, %59 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer15AllowAlterTableERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = or i8 %7, 4
  store i8 %11, i8* %6, align 4
  br label %57

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %12
  %18 = or i8 %7, 4
  store i8 %18, i8* %6, align 4
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %26, align 8
  br label %34

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %33, align 8
  br label %34

34:                                               ; preds = %27, %23
  %35 = phi i32 [ %30, %27 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %43, i64* %44, align 8
  br label %52

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  br label %52

52:                                               ; preds = %45, %41
  %53 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %56 = select i1 %55, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %57

57:                                               ; preds = %10, %52, %12
  %58 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %12 ], [ %56, %52 ], [ @_ZN5blink13kSQLAuthAllowE, %10 ]
  %59 = load i32, i32* %58, align 4
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11CreateIndexERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = or i8 %7, 4
  store i8 %11, i8* %6, align 4
  br label %57

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %12
  %18 = or i8 %7, 4
  store i8 %18, i8* %6, align 4
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %26, align 8
  br label %34

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %33, align 8
  br label %34

34:                                               ; preds = %27, %23
  %35 = phi i32 [ %30, %27 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %43, i64* %44, align 8
  br label %52

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  br label %52

52:                                               ; preds = %45, %41
  %53 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %56 = select i1 %55, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %57

57:                                               ; preds = %10, %52, %12
  %58 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %12 ], [ %56, %52 ], [ @_ZN5blink13kSQLAuthAllowE, %10 ]
  %59 = load i32, i32* %58, align 4
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer15CreateTempIndexERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %54

15:                                               ; preds = %10
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %23 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %22, i64* %23, align 8
  br label %31

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %30, align 8
  br label %31

31:                                               ; preds = %24, %20
  %32 = phi i32 [ %27, %24 ], [ 0, %20 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %40, i64* %41, align 8
  br label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  br label %49

49:                                               ; preds = %42, %38
  %50 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %53 = select i1 %52, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %54

54:                                               ; preds = %49, %3, %10
  %55 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %10 ], [ %53, %49 ], [ @_ZN5blink13kSQLAuthAllowE, %3 ]
  %56 = load i32, i32* %55, align 4
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer9DropIndexERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %63

17:                                               ; preds = %10
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %3, %51
  %57 = phi i32* [ %55, %51 ], [ @_ZN5blink13kSQLAuthAllowE, %3 ]
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = load i8, i8* %6, align 4
  %62 = or i8 %61, 8
  store i8 %62, i8* %6, align 4
  br label %63

63:                                               ; preds = %60, %56, %15
  %64 = phi i32 [ %16, %15 ], [ 0, %56 ], [ %58, %60 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer13DropTempIndexERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %63

17:                                               ; preds = %10
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %3, %51
  %57 = phi i32* [ %55, %51 ], [ @_ZN5blink13kSQLAuthAllowE, %3 ]
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = load i8, i8* %6, align 4
  %62 = or i8 %61, 8
  store i8 %62, i8* %6, align 4
  br label %63

63:                                               ; preds = %60, %56, %15
  %64 = phi i32 [ %16, %15 ], [ 0, %56 ], [ %58, %60 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer13CreateTriggerERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = or i8 %7, 4
  store i8 %11, i8* %6, align 4
  br label %57

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %12
  %18 = or i8 %7, 4
  store i8 %18, i8* %6, align 4
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %26, align 8
  br label %34

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %33, align 8
  br label %34

34:                                               ; preds = %27, %23
  %35 = phi i32 [ %30, %27 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %43, i64* %44, align 8
  br label %52

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  br label %52

52:                                               ; preds = %45, %41
  %53 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %56 = select i1 %55, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %57

57:                                               ; preds = %10, %52, %12
  %58 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %12 ], [ %56, %52 ], [ @_ZN5blink13kSQLAuthAllowE, %10 ]
  %59 = load i32, i32* %58, align 4
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer17CreateTempTriggerERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %54, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %54

15:                                               ; preds = %10
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %23 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %22, i64* %23, align 8
  br label %31

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %30, align 8
  br label %31

31:                                               ; preds = %24, %20
  %32 = phi i32 [ %27, %24 ], [ 0, %20 ]
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %40, i64* %41, align 8
  br label %49

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  br label %49

49:                                               ; preds = %42, %38
  %50 = phi i32 [ %45, %42 ], [ 0, %38 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %53 = select i1 %52, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %54

54:                                               ; preds = %49, %3, %10
  %55 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %10 ], [ %53, %49 ], [ @_ZN5blink13kSQLAuthAllowE, %3 ]
  %56 = load i32, i32* %55, align 4
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11DropTriggerERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %63

17:                                               ; preds = %10
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %3, %51
  %57 = phi i32* [ %55, %51 ], [ @_ZN5blink13kSQLAuthAllowE, %3 ]
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = load i8, i8* %6, align 4
  %62 = or i8 %61, 8
  store i8 %62, i8* %6, align 4
  br label %63

63:                                               ; preds = %60, %56, %15
  %64 = phi i32 [ %16, %15 ], [ 0, %56 ], [ %58, %60 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer15DropTempTriggerERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %63

17:                                               ; preds = %10
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %3, %51
  %57 = phi i32* [ %55, %51 ], [ @_ZN5blink13kSQLAuthAllowE, %3 ]
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = load i8, i8* %6, align 4
  %62 = or i8 %61, 8
  store i8 %62, i8* %6, align 4
  br label %63

63:                                               ; preds = %60, %56, %15
  %64 = phi i32 [ %16, %15 ], [ 0, %56 ], [ %58, %60 ]
  ret i32 %64
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer10CreateViewERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7, %2
  br label %13

13:                                               ; preds = %7, %12
  %14 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %12 ], [ @_ZN5blink12kSQLAuthDenyE, %7 ]
  %15 = load i32, i32* %14, align 4
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer14CreateTempViewERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7, %2
  br label %13

13:                                               ; preds = %7, %12
  %14 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %12 ], [ @_ZN5blink12kSQLAuthDenyE, %7 ]
  %15 = load i32, i32* %14, align 4
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer8DropViewERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7, %2
  %13 = or i8 %4, 8
  store i8 %13, i8* %3, align 4
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %12 ], [ @_ZN5blink12kSQLAuthDenyE, %7 ]
  %16 = load i32, i32* %15, align 4
  ret i32 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer12DropTempViewERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7, %2
  %13 = or i8 %4, 8
  store i8 %13, i8* %3, align 4
  br label %14

14:                                               ; preds = %7, %12
  %15 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %12 ], [ @_ZN5blink12kSQLAuthDenyE, %7 ]
  %16 = load i32, i32* %15, align 4
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer12CreateVTableERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %80

16:                                               ; preds = %11, %3
  %17 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [5 x i8]* nonnull dereferenceable(5) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br i1 %35, label %36, label %80

36:                                               ; preds = %32
  %37 = load i8, i8* %7, align 4
  %38 = or i8 %37, 4
  store i8 %38, i8* %7, align 4
  %39 = and i8 %37, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %80, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %47, align 8
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %49 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %48, i64* %49, align 8
  br label %57

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 1
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %56 = bitcast i8** %55 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %56, align 8
  br label %57

57:                                               ; preds = %50, %46
  %58 = phi i32 [ %53, %50 ], [ 0, %46 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %65, align 8
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %66, i64* %67, align 8
  br label %75

68:                                               ; preds = %57
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %74 = bitcast i8** %73 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %74, align 8
  br label %75

75:                                               ; preds = %68, %64
  %76 = phi i32 [ %71, %68 ], [ 0, %64 ]
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %76, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  %79 = select i1 %78, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %80

80:                                               ; preds = %75, %36, %32, %11
  %81 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %11 ], [ @_ZN5blink12kSQLAuthDenyE, %32 ], [ @_ZN5blink13kSQLAuthAllowE, %36 ], [ %79, %75 ]
  %82 = load i32, i32* %81, align 4
  ret i32 %82
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer10DropVTableERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 4
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %97

19:                                               ; preds = %12, %3
  %20 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %25, align 8
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %26, i64* %27, align 8
  br label %36

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 1
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %36

36:                                               ; preds = %24, %28
  %37 = phi i64 [ %35, %28 ], [ %26, %24 ]
  %38 = phi i32 [ %31, %28 ], [ 0, %24 ]
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %38, i32* %39, align 8
  %40 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %37, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %43, align 8
  %44 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %97

47:                                               ; preds = %36
  %48 = load i8, i8* %8, align 4
  %49 = and i8 %48, 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %90, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %56, label %60

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %57, align 8
  %58 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %59 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %58, i64* %59, align 8
  br label %67

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %66 = bitcast i8** %65 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %66, align 8
  br label %67

67:                                               ; preds = %60, %56
  %68 = phi i32 [ %63, %60 ], [ 0, %56 ]
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %68, i32* %69, align 8
  %70 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %76, i64* %77, align 8
  br label %85

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi i32 [ %81, %78 ], [ 0, %74 ]
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %86, i32* %87, align 8
  %88 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  %89 = select i1 %88, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %90

90:                                               ; preds = %85, %47
  %91 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %47 ], [ %89, %85 ]
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = load i8, i8* %8, align 4
  %96 = or i8 %95, 8
  store i8 %96, i8* %8, align 4
  br label %97

97:                                               ; preds = %94, %90, %45, %17
  %98 = phi i32 [ %46, %45 ], [ %18, %17 ], [ 0, %90 ], [ %92, %94 ]
  ret i32 %98
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11AllowDeleteERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %55, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  br label %62

16:                                               ; preds = %9
  %17 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  br label %32

32:                                               ; preds = %25, %21
  %33 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %40, align 8
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %41, i64* %42, align 8
  br label %50

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  br label %50

50:                                               ; preds = %43, %39
  %51 = phi i32 [ %46, %43 ], [ 0, %39 ]
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  %54 = select i1 %53, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %55

55:                                               ; preds = %2, %50
  %56 = phi i32* [ %54, %50 ], [ @_ZN5blink13kSQLAuthAllowE, %2 ]
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = load i8, i8* %5, align 4
  %61 = or i8 %60, 8
  store i8 %61, i8* %5, align 4
  br label %62

62:                                               ; preds = %59, %55, %14
  %63 = phi i32 [ %15, %14 ], [ 0, %55 ], [ %57, %59 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11AllowInsertERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = or i8 %6, 6
  store i8 %10, i8* %5, align 4
  br label %56

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 6
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %56

16:                                               ; preds = %11
  %17 = or i8 %6, 6
  store i8 %17, i8* %5, align 4
  %18 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %9, %51, %11
  %57 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %11 ], [ %55, %51 ], [ @_ZN5blink13kSQLAuthAllowE, %9 ]
  %58 = load i32, i32* %57, align 4
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11AllowUpdateERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = or i8 %7, 4
  store i8 %11, i8* %6, align 4
  br label %57

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %12
  %18 = or i8 %7, 4
  store i8 %18, i8* %6, align 4
  %19 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %24, align 8
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %25, i64* %26, align 8
  br label %34

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %33 = bitcast i8** %32 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %33, align 8
  br label %34

34:                                               ; preds = %27, %23
  %35 = phi i32 [ %30, %27 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %43, i64* %44, align 8
  br label %52

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  br label %52

52:                                               ; preds = %45, %41
  %53 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  %55 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %56 = select i1 %55, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %57

57:                                               ; preds = %10, %52, %12
  %58 = phi i32* [ @_ZN5blink12kSQLAuthDenyE, %12 ], [ %56, %52 ], [ @_ZN5blink13kSQLAuthAllowE, %10 ]
  %59 = load i32, i32* %58, align 4
  ret i32 %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer16AllowTransactionEv(%"class.blink::DatabaseAuthorizer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  %6 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  %7 = load i32, i32* @_ZN5blink13kSQLAuthAllowE, align 4
  %8 = select i1 %5, i32 %7, i32 %6
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer9AllowReadERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %9, label %16, label %14

14:                                               ; preds = %3
  %15 = select i1 %13, i32* @_ZN5blink13kSQLAuthAllowE, i32* @_ZN5blink12kSQLAuthDenyE
  br label %56

16:                                               ; preds = %3
  br i1 %13, label %56, label %17

17:                                               ; preds = %16
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %23, align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %24, i64* %25, align 8
  br label %33

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %32 = bitcast i8** %31 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %32, align 8
  br label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %29, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %43 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %42, i64* %43, align 8
  br label %51

44:                                               ; preds = %33
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %50 = bitcast i8** %49 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %50, align 8
  br label %51

51:                                               ; preds = %44, %40
  %52 = phi i32 [ %47, %44 ], [ 0, %40 ]
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %52, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  %55 = select i1 %54, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %56

56:                                               ; preds = %14, %51, %16
  %57 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %16 ], [ %55, %51 ], [ %15, %14 ]
  %58 = load i32, i32* %57, align 4
  ret i32 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer12AllowReindexERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 6
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7, %2
  br label %13

13:                                               ; preds = %7, %12
  %14 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %12 ], [ @_ZN5blink12kSQLAuthDenyE, %7 ]
  %15 = load i32, i32* %14, align 4
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer12AllowAnalyzeERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %15, align 8
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %16, i64* %17, align 8
  br label %25

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = bitcast i8** %23 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %24, align 8
  br label %25

25:                                               ; preds = %18, %14
  %26 = phi i32 [ %21, %18 ], [ 0, %14 ]
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %26, i32* %27, align 8
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %33, align 8
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %35 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %34, i64* %35, align 8
  br label %43

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %42 = bitcast i8** %41 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %42, align 8
  br label %43

43:                                               ; preds = %36, %32
  %44 = phi i32 [ %39, %36 ], [ 0, %32 ]
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %44, i32* %45, align 8
  %46 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  %47 = select i1 %46, i32* @_ZN5blink12kSQLAuthDenyE, i32* @_ZN5blink13kSQLAuthAllowE
  br label %48

48:                                               ; preds = %2, %43
  %49 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %2 ], [ %47, %43 ]
  %50 = load i32, i32* %49, align 4
  ret i32 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer11AllowPragmaERKN3WTF6StringES4_(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* nocapture readnone dereferenceable(8), %"class.WTF::String"* nocapture readnone dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  %8 = load i32, i32* @_ZN5blink12kSQLAuthDenyE, align 4
  %9 = load i32, i32* @_ZN5blink13kSQLAuthAllowE, align 4
  %10 = select i1 %7, i32 %9, i32 %8
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18DatabaseAuthorizer13AllowFunctionERKN3WTF6StringE(%"class.blink::DatabaseAuthorizer"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca [47 x %"class.WTF::String"], align 8
  %4 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %93, label %8

8:                                                ; preds = %2
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %91, !prof !3

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list) #11
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %91, label %14

14:                                               ; preds = %11
  %15 = bitcast [47 x %"class.WTF::String"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %15) #11
  %16 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #11
  %17 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 19) #11
  %18 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 18) #11
  %19 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 3
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #11
  %20 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #11
  %21 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7) #11
  %22 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #11
  %23 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #11
  %24 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #11
  %25 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3) #11
  %26 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i64 17) #11
  %27 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i64 6) #11
  %28 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 4) #11
  %29 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5) #11
  %30 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5) #11
  %31 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 15
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i64 3) #11
  %32 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i64 3) #11
  %33 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 6) #11
  %34 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %34, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 5) #11
  %35 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 19
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0), i64 7) #11
  %36 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 20
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i64 5) #11
  %37 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 21
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), i64 5) #11
  %38 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 22
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i64 7) #11
  %39 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 23
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i64 16) #11
  %40 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 24
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), i64 14) #11
  %41 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 25
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %41, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i64 6) #11
  %42 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 26
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %42, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i64 13) #11
  %43 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 27
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i64 4) #11
  %44 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 28
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i64 6) #11
  %45 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 29
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %45, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5) #11
  %46 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 30
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i64 8) #11
  %47 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 31
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i64 4) #11
  %48 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 32
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i64 4) #11
  %49 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 33
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i64 8) #11
  %50 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 34
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i64 9) #11
  %51 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 35
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i64 8) #11
  %52 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 36
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i64 3) #11
  %53 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 37
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %53, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i64 5) #11
  %54 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 38
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %54, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i64 12) #11
  %55 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 39
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i64 3) #11
  %56 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 40
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i64 5) #11
  %57 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 41
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i64 5) #11
  %58 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 42
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i64 7) #11
  %59 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 43
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i64 7) #11
  %60 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 44
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i64 8) #11
  %61 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 45
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i64 6) #11
  %62 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 46
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* %62, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i64 6) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list to %"class.WTF::HashTable"*), i32 47) #11
  %63 = getelementptr inbounds [47 x %"class.WTF::String"], [47 x %"class.WTF::String"]* %3, i64 0, i64 47
  br label %64

64:                                               ; preds = %64, %14
  %65 = phi %"class.WTF::String"* [ %67, %64 ], [ %16, %14 ]
  %66 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list to %"class.WTF::HashTable"*), %"class.WTF::String"* dereferenceable(8) %65, %"class.WTF::String"* dereferenceable(8) %65) #11
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 1
  %68 = icmp eq %"class.WTF::String"* %67, %63
  br i1 %68, label %69, label %64

69:                                               ; preds = %64, %88
  %70 = phi %"class.WTF::String"* [ %71, %88 ], [ %63, %64 ]
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 -1
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %87, %84, %69
  %89 = icmp eq %"class.WTF::String"* %71, %16
  br i1 %89, label %90, label %69

90:                                               ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %15) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list) #11
  br label %91

91:                                               ; preds = %8, %11, %90
  %92 = call zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_116AllowedFunctionsEvE6s_list to %"class.WTF::HashTable"*), %"class.WTF::String"* dereferenceable(8) %1) #11
  br i1 %92, label %93, label %94

93:                                               ; preds = %2, %91
  br label %94

94:                                               ; preds = %91, %93
  %95 = phi i32* [ @_ZN5blink13kSQLAuthAllowE, %93 ], [ @_ZN5blink12kSQLAuthDenyE, %91 ]
  %96 = load i32, i32* %95, align 4
  ret i32 %96
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18DatabaseAuthorizer7DisableEv(%"class.blink::DatabaseAuthorizer"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = and i8 %3, -2
  store i8 %4, i8* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18DatabaseAuthorizer6EnableEv(%"class.blink::DatabaseAuthorizer"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = or i8 %3, 1
  store i8 %4, i8* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18DatabaseAuthorizer14SetPermissionsEi(%"class.blink::DatabaseAuthorizer"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::DatabaseAuthorizer", %"class.blink::DatabaseAuthorizer"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  ret void
}

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.47, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.48, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #11
  %30 = bitcast i8* %29 to %"class.WTF::String"*
  %31 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %30, i32 %17, %"class.WTF::String"* null) #11
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #11
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #11
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #11
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #11
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 %15
  %17 = ptrtoint %"class.WTF::String"* %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %27 = bitcast %"class.WTF::StringView"* %4 to i8*
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = bitcast i8** %29 to %"class.WTF::StringImpl"**
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %32 = xor i32 %13, -1
  %33 = lshr i32 %13, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %53

45:                                               ; preds = %72
  %46 = ptrtoint %"class.WTF::String"* %78 to i64
  br label %47

47:                                               ; preds = %45, %2
  %48 = phi i64 [ %17, %2 ], [ %46, %45 ]
  %49 = phi %"class.WTF::String"* [ null, %2 ], [ %73, %45 ]
  %50 = icmp eq %"class.WTF::String"* %49, null
  %51 = ptrtoint %"class.WTF::String"* %49 to i64
  %52 = select i1 %50, i64 %48, i64 %51
  br label %83

53:                                               ; preds = %72, %21
  %54 = phi %"class.WTF::String"* [ null, %21 ], [ %73, %72 ]
  %55 = phi %"class.WTF::StringImpl"* [ %19, %21 ], [ %81, %72 ]
  %56 = phi i64 [ %17, %21 ], [ %79, %72 ]
  %57 = phi %"class.WTF::String"* [ %16, %21 ], [ %78, %72 ]
  %58 = phi i64 [ %15, %21 ], [ %77, %72 ]
  %59 = phi i64 [ 0, %21 ], [ %75, %72 ]
  %60 = bitcast %"class.WTF::String"* %57 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, inttoptr (i64 -1 to i8*)
  br i1 %62, label %72, label %63

63:                                               ; preds = %53
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %23, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %25, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %28, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %30, align 8
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %31, align 8
  %71 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  br i1 %71, label %83, label %72

72:                                               ; preds = %63, %53
  %73 = phi %"class.WTF::String"* [ %54, %63 ], [ %57, %53 ]
  %74 = icmp eq i64 %59, 0
  %75 = select i1 %74, i64 %44, i64 %59
  %76 = add i64 %75, %58
  %77 = and i64 %76, %10
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 %77
  %79 = ptrtoint %"class.WTF::String"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %45, label %53

83:                                               ; preds = %63, %47
  %84 = phi i64 [ %52, %47 ], [ %56, %63 ]
  %85 = phi i8 [ 0, %47 ], [ 1, %63 ]
  %86 = inttoptr i64 %84 to %"class.WTF::String"*
  %87 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %86, 0
  %88 = insertvalue { %"class.WTF::String"*, i8 } %87, i8 %85, 1
  ret { %"class.WTF::String"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #11
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #11
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #11
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #11
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #5

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp eq %"class.WTF::String"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* null)
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"class.WTF::String"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #11
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %22
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %89, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %33 = bitcast %"class.WTF::StringView"* %5 to i8*
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %38 = xor i32 %20, -1
  %39 = lshr i32 %20, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %27, %69
  %52 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %77, %69 ]
  %53 = phi %"class.WTF::String"* [ %23, %27 ], [ %75, %69 ]
  %54 = phi %"class.WTF::String"* [ null, %27 ], [ %70, %69 ]
  %55 = phi i64 [ %22, %27 ], [ %74, %69 ]
  %56 = phi i64 [ 0, %27 ], [ %72, %69 ]
  %57 = bitcast %"class.WTF::String"* %53 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, inttoptr (i64 -1 to i8*)
  br i1 %59, label %69, label %60

60:                                               ; preds = %51
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %31, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %34, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %36, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %37, align 8
  %68 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  br i1 %68, label %142, label %69

69:                                               ; preds = %51, %60
  %70 = phi %"class.WTF::String"* [ %54, %60 ], [ %53, %51 ]
  %71 = icmp eq i64 %56, 0
  %72 = select i1 %71, i64 %50, i64 %56
  %73 = add i64 %72, %55
  %74 = and i64 %73, %17
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %74
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %79, label %51

79:                                               ; preds = %69
  %80 = icmp eq %"class.WTF::String"* %70, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %79
  %82 = bitcast %"class.WTF::String"* %70 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, 2147483647
  %86 = and i32 %85, 2147483647
  %87 = and i32 %84, -2147483648
  %88 = or i32 %86, %87
  store i32 %88, i32* %83, align 8
  br label %89

89:                                               ; preds = %12, %79, %81
  %90 = phi %"class.WTF::String"* [ %70, %81 ], [ %75, %79 ], [ %23, %12 ]
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %111, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %111

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i33
  %103 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #11
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %99
  call void @llvm.trap() #11
  unreachable

109:                                              ; preds = %99
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %100, align 4
  br label %111

111:                                              ; preds = %109, %94, %89
  %112 = ptrtoint %"class.WTF::StringImpl"* %92 to i64
  %113 = bitcast %"class.WTF::String"* %90 to i64*
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  store i64 %112, i64* %113, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #11
  br label %130

130:                                              ; preds = %111, %126, %129
  %131 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = add i32 %132, 1
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = add i32 %135, %133
  %137 = shl i32 %136, 1
  %138 = load i32, i32* %14, align 8
  %139 = icmp ult i32 %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %130
  %141 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %90)
  br label %142

142:                                              ; preds = %60, %130, %140
  %143 = phi i8 [ 1, %130 ], [ 1, %140 ], [ 0, %60 ]
  %144 = phi %"class.WTF::String"* [ %90, %130 ], [ %141, %140 ], [ %53, %60 ]
  %145 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %144, 0
  %146 = insertvalue { %"class.WTF::String"*, i8 } %145, i8 %143, 1
  ret { %"class.WTF::String"*, i8 } %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.47, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #11
  ret %"class.WTF::String"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_15CaseFoldingHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorIS3_S5_S6_EES1_EEbRKT0_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** %5, align 8
  %7 = icmp eq %"class.WTF::String"* %6, null
  br i1 %7, label %72, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #11
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 %17
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %72, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %33 = xor i32 %15, -1
  %34 = lshr i32 %15, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %63, %22
  %47 = phi %"class.WTF::StringImpl"* [ %20, %22 ], [ %70, %63 ]
  %48 = phi %"class.WTF::String"* [ %18, %22 ], [ %68, %63 ]
  %49 = phi i64 [ %17, %22 ], [ %67, %63 ]
  %50 = phi i64 [ 0, %22 ], [ %65, %63 ]
  %51 = bitcast %"class.WTF::String"* %48 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %63, label %54

54:                                               ; preds = %46
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %24, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %26, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %29, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %31, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %32, align 8
  %62 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br i1 %62, label %72, label %63

63:                                               ; preds = %54, %46
  %64 = icmp eq i64 %50, 0
  %65 = select i1 %64, i64 %45, i64 %50
  %66 = add i64 %65, %49
  %67 = and i64 %66, %12
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 %67
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %72, label %46

72:                                               ; preds = %54, %63, %2, %8
  %73 = phi %"class.WTF::String"* [ null, %2 ], [ null, %8 ], [ %48, %54 ], [ null, %63 ]
  %74 = icmp ne %"class.WTF::String"* %73, null
  ret i1 %74
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{i8 0, i8 2}
