; ModuleID = '../../third_party/webrtc/modules/audio_processing/three_band_filter_bank.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/three_band_filter_bank.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::ThreeBandFilterBank" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [10 x %"struct.std::__1::array.0"] }
%"struct.std::__1::array.0" = type { [15 x float] }
%"class.rtc::ArrayView.3" = type { %"class.rtc::impl::ArrayViewBase.4" }
%"class.rtc::impl::ArrayViewBase.4" = type { float*, i64 }
%"struct.std::__1::array.5" = type { [160 x float] }

@_ZN6webrtc12_GLOBAL__N_113kFilterCoeffsE = internal constant [10 x [4 x float]] [[4 x float] [float 0xBF3F4AF3E0000000, float 0xBF745A3FA0000000, float 0x3FC52E28E0000000, float 0x3F716DA620000000], [4 x float] [float 0xBF5C642F00000000, float 0xBF903D05A0000000, float 0x3FC32F98C0000000, float 0x3F845C03E0000000], [4 x float] [float 0xBF68F86F20000000, float 0xBF99F82FE0000000, float 0x3FBF1D99C0000000, float 0x3F87B737E0000000], [4 x float] [float 0xBF6C6BFC20000000, float 0xBF9A7FFCE0000000, float 0x3FA85F9B00000000, float 0x3F78E315C0000000], [4 x float] [float 0xBF59594D20000000, float 0xBF87444F60000000, float 0x3F8C6A46A0000000, float 0x3F5E883620000000], [4 x float] [float 0x3F5E883620000000, float 0x3F8C6A46A0000000, float 0xBF87444F60000000, float 0xBF59594D20000000], [4 x float] [float 0x3F78E315C0000000, float 0x3FA85F9B00000000, float 0xBF9A7FFCE0000000, float 0xBF6C6BFC20000000], [4 x float] [float 0x3F8422DCC0000000, float 0x3FB5DEDAE0000000, float 0xBF9E8B2500000000, float 0xBF6F6AC440000000], [4 x float] [float 0x3F845C03E0000000, float 0x3FC32F98C0000000, float 0xBF903D05A0000000, float 0xBF5C642F00000000], [4 x float] [float 0x3F716DA620000000, float 0x3FC52E28E0000000, float 0xBF745A3FA0000000, float 0xBF3F4AF3E0000000]], align 16
@_ZN6webrtc12_GLOBAL__N_114kDctModulationE = internal unnamed_addr constant [10 x [3 x float]] [[3 x float] [float 2.000000e+00, float 2.000000e+00, float 2.000000e+00], [3 x float] [float 0x3FFBB67AE0000000, float 0.000000e+00, float 0xBFFBB67AE0000000], [3 x float] [float 1.000000e+00, float -2.000000e+00, float 1.000000e+00], [3 x float] [float -1.000000e+00, float 2.000000e+00, float -1.000000e+00], [3 x float] [float 0xBFFBB67AE0000000, float 0.000000e+00, float 0x3FFBB67AE0000000], [3 x float] [float -2.000000e+00, float -2.000000e+00, float -2.000000e+00], [3 x float] [float 0xBFFBB67AE0000000, float 0.000000e+00, float 0x3FFBB67AE0000000], [3 x float] [float -1.000000e+00, float 2.000000e+00, float -1.000000e+00], [3 x float] [float 1.000000e+00, float -2.000000e+00, float 1.000000e+00], [3 x float] [float 0x3FFBB67AE0000000, float 0.000000e+00, float 0xBFFBB67AE0000000]], align 16

@_ZN6webrtc19ThreeBandFilterBankC1Ev = hidden unnamed_addr alias void (%"class.webrtc::ThreeBandFilterBank"*), void (%"class.webrtc::ThreeBandFilterBank"*)* @_ZN6webrtc19ThreeBandFilterBankC2Ev
@_ZN6webrtc19ThreeBandFilterBankD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ThreeBandFilterBank"*), void (%"class.webrtc::ThreeBandFilterBank"*)* @_ZN6webrtc19ThreeBandFilterBankD2Ev

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc19ThreeBandFilterBankC2Ev(%"class.webrtc::ThreeBandFilterBank"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.webrtc::ThreeBandFilterBank"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 1200, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc19ThreeBandFilterBankD2Ev(%"class.webrtc::ThreeBandFilterBank"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc19ThreeBandFilterBank8AnalysisEN3rtc9ArrayViewIKfLl480EEENS2_IKNS2_IfLln4711EEELl3EEE(%"class.webrtc::ThreeBandFilterBank"*, float*, %"class.rtc::ArrayView.3"*) local_unnamed_addr #3 align 2 {
  %4 = alloca %"struct.std::__1::array.5", align 4
  %5 = alloca %"struct.std::__1::array.5", align 4
  %6 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 2
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = bitcast %"class.rtc::ArrayView.3"* %2 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp slt i64 %7, 1
  %14 = select i1 %13, i64 %7, i64 1
  %15 = shl i64 %14, 2
  %16 = add i64 %15, -4
  %17 = sub i64 %8, %16
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 %17, i1 false)
  br label %18

18:                                               ; preds = %10, %3
  %19 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 1, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = shl i64 %20, 2
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %159, label %168

23:                                               ; preds = %72
  ret void

24:                                               ; preds = %72, %182
  %25 = phi i64 [ 0, %182 ], [ %73, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %183) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %183, i8 -1, i64 640, i1 false)
  %26 = sub nuw nsw i64 2, %25
  br label %27

27:                                               ; preds = %27, %24
  %28 = phi i64 [ 0, %24 ], [ %68, %27 ]
  %29 = mul nuw nsw i64 %28, 3
  %30 = add nuw nsw i64 %26, %29
  %31 = getelementptr inbounds float, float* %1, i64 %30
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %4, i64 0, i32 0, i64 %28
  %35 = bitcast float* %34 to i32*
  store i32 %33, i32* %35, align 4
  %36 = add nuw nsw i64 %28, 1
  %37 = mul nuw nsw i64 %36, 3
  %38 = add nuw nsw i64 %26, %37
  %39 = getelementptr inbounds float, float* %1, i64 %38
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %4, i64 0, i32 0, i64 %36
  %43 = bitcast float* %42 to i32*
  store i32 %41, i32* %43, align 4
  %44 = add nuw nsw i64 %28, 2
  %45 = mul nuw nsw i64 %44, 3
  %46 = add nuw nsw i64 %26, %45
  %47 = getelementptr inbounds float, float* %1, i64 %46
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %4, i64 0, i32 0, i64 %44
  %51 = bitcast float* %50 to i32*
  store i32 %49, i32* %51, align 4
  %52 = add nuw nsw i64 %28, 3
  %53 = mul nuw nsw i64 %52, 3
  %54 = add nuw nsw i64 %26, %53
  %55 = getelementptr inbounds float, float* %1, i64 %54
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %4, i64 0, i32 0, i64 %52
  %59 = bitcast float* %58 to i32*
  store i32 %57, i32* %59, align 4
  %60 = add nuw nsw i64 %28, 4
  %61 = mul nuw nsw i64 %60, 3
  %62 = add nuw nsw i64 %26, %61
  %63 = getelementptr inbounds float, float* %1, i64 %62
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %4, i64 0, i32 0, i64 %60
  %67 = bitcast float* %66 to i32*
  store i32 %65, i32* %67, align 4
  %68 = add nuw nsw i64 %28, 5
  %69 = icmp eq i64 %68, 160
  br i1 %69, label %70, label %27

70:                                               ; preds = %27
  %71 = trunc i64 %25 to i32
  br label %75

72:                                               ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %183) #4
  %73 = add nuw nsw i64 %25, 1
  %74 = icmp eq i64 %73, 3
  br i1 %74, label %23, label %24

75:                                               ; preds = %114, %70
  %76 = phi i32 [ %115, %114 ], [ 0, %70 ]
  %77 = mul nuw nsw i32 %76, 3
  %78 = add nuw nsw i32 %77, %71
  switch i32 %78, label %79 [
    i32 9, label %114
    i32 3, label %114
  ]

79:                                               ; preds = %75
  %80 = icmp ult i32 %78, 3
  br i1 %80, label %85, label %81

81:                                               ; preds = %79
  %82 = icmp ult i32 %78, 9
  %83 = select i1 %82, i32 -1, i32 -2
  %84 = add nsw i32 %83, %78
  br label %85

85:                                               ; preds = %81, %79
  %86 = phi i32 [ %78, %79 ], [ %84, %81 ]
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [10 x [4 x float]], [10 x [4 x float]]* @_ZN6webrtc12_GLOBAL__N_113kFilterCoeffsE, i64 0, i64 %87, i64 0
  %89 = getelementptr inbounds %"class.webrtc::ThreeBandFilterBank", %"class.webrtc::ThreeBandFilterBank"* %0, i64 0, i32 0, i32 0, i64 %87, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %184) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %184, i8 -1, i64 640, i1 false)
  call fastcc void @_ZN6webrtc12_GLOBAL__N_110FilterCoreEN3rtc9ArrayViewIKfLl4EEENS2_IS3_Ll160EEEiNS2_IfLl160EEENS2_IfLl15EEE(float* %88, float* nonnull %185, i32 %76, float* nonnull %186, float* %89)
  %90 = getelementptr inbounds [10 x [3 x float]], [10 x [3 x float]]* @_ZN6webrtc12_GLOBAL__N_114kDctModulationE, i64 0, i64 %87, i64 0
  %91 = load float, float* %90, align 4
  br label %95

92:                                               ; preds = %95
  %93 = getelementptr inbounds [10 x [3 x float]], [10 x [3 x float]]* @_ZN6webrtc12_GLOBAL__N_114kDctModulationE, i64 0, i64 %87, i64 1
  %94 = load float, float* %93, align 4
  br label %117

95:                                               ; preds = %95, %85
  %96 = phi i64 [ 0, %85 ], [ %112, %95 ]
  %97 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %96
  %98 = load float, float* %97, align 4
  %99 = fmul float %91, %98
  %100 = load float*, float** %187, align 8
  %101 = getelementptr inbounds float, float* %100, i64 %96
  %102 = load float, float* %101, align 4
  %103 = fadd float %99, %102
  store float %103, float* %101, align 4
  %104 = or i64 %96, 1
  %105 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %104
  %106 = load float, float* %105, align 4
  %107 = fmul float %91, %106
  %108 = load float*, float** %187, align 8
  %109 = getelementptr inbounds float, float* %108, i64 %104
  %110 = load float, float* %109, align 4
  %111 = fadd float %107, %110
  store float %111, float* %109, align 4
  %112 = add nuw nsw i64 %96, 2
  %113 = icmp eq i64 %112, 160
  br i1 %113, label %92, label %95

114:                                              ; preds = %75, %75, %158
  %115 = add nuw nsw i32 %76, 1
  %116 = icmp eq i32 %115, 4
  br i1 %116, label %72, label %75

117:                                              ; preds = %117, %92
  %118 = phi i64 [ 0, %92 ], [ %134, %117 ]
  %119 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %118
  %120 = load float, float* %119, align 4
  %121 = fmul float %94, %120
  %122 = load float*, float** %188, align 8
  %123 = getelementptr inbounds float, float* %122, i64 %118
  %124 = load float, float* %123, align 4
  %125 = fadd float %121, %124
  store float %125, float* %123, align 4
  %126 = or i64 %118, 1
  %127 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %126
  %128 = load float, float* %127, align 4
  %129 = fmul float %94, %128
  %130 = load float*, float** %188, align 8
  %131 = getelementptr inbounds float, float* %130, i64 %126
  %132 = load float, float* %131, align 4
  %133 = fadd float %129, %132
  store float %133, float* %131, align 4
  %134 = add nuw nsw i64 %118, 2
  %135 = icmp eq i64 %134, 160
  br i1 %135, label %136, label %117

136:                                              ; preds = %117
  %137 = getelementptr inbounds [10 x [3 x float]], [10 x [3 x float]]* @_ZN6webrtc12_GLOBAL__N_114kDctModulationE, i64 0, i64 %87, i64 2
  %138 = load float, float* %137, align 4
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi i64 [ 0, %136 ], [ %156, %139 ]
  %141 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %140
  %142 = load float, float* %141, align 4
  %143 = fmul float %138, %142
  %144 = load float*, float** %189, align 8
  %145 = getelementptr inbounds float, float* %144, i64 %140
  %146 = load float, float* %145, align 4
  %147 = fadd float %143, %146
  store float %147, float* %145, align 4
  %148 = or i64 %140, 1
  %149 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %148
  %150 = load float, float* %149, align 4
  %151 = fmul float %138, %150
  %152 = load float*, float** %189, align 8
  %153 = getelementptr inbounds float, float* %152, i64 %148
  %154 = load float, float* %153, align 4
  %155 = fadd float %151, %154
  store float %155, float* %153, align 4
  %156 = add nuw nsw i64 %140, 2
  %157 = icmp eq i64 %156, 160
  br i1 %157, label %158, label %139

158:                                              ; preds = %139
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %184) #4
  br label %114

159:                                              ; preds = %18
  %160 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 1, i32 0, i32 0
  %161 = bitcast float** %160 to i8**
  %162 = load i8*, i8** %161, align 8
  %163 = icmp slt i64 %20, 1
  %164 = select i1 %163, i64 %20, i64 1
  %165 = shl i64 %164, 2
  %166 = add i64 %165, -4
  %167 = sub i64 %21, %166
  call void @llvm.memset.p0i8.i64(i8* align 4 %162, i8 0, i64 %167, i1 false)
  br label %168

168:                                              ; preds = %159, %18
  %169 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 2, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = shl i64 %170, 2
  %172 = icmp sgt i64 %171, 0
  br i1 %172, label %173, label %182

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 2, i32 0, i32 0
  %175 = bitcast float** %174 to i8**
  %176 = load i8*, i8** %175, align 8
  %177 = icmp slt i64 %170, 1
  %178 = select i1 %177, i64 %170, i64 1
  %179 = shl i64 %178, 2
  %180 = add i64 %179, -4
  %181 = sub i64 %171, %180
  call void @llvm.memset.p0i8.i64(i8* align 4 %176, i8 0, i64 %181, i1 false)
  br label %182

182:                                              ; preds = %173, %168
  %183 = bitcast %"struct.std::__1::array.5"* %4 to i8*
  %184 = bitcast %"struct.std::__1::array.5"* %5 to i8*
  %185 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %4, i64 0, i32 0, i64 0
  %186 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 0
  %187 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 1, i32 0, i32 0
  %189 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %2, i64 2, i32 0, i32 0
  br label %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6webrtc12_GLOBAL__N_110FilterCoreEN3rtc9ArrayViewIKfLl4EEENS2_IS3_Ll160EEEiNS2_IfLl160EEENS2_IfLl15EEE(float*, float*, i32, float*, float*) unnamed_addr #3 {
  %6 = bitcast float* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 640, i1 false)
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %5
  %9 = sub nsw i32 15, %2
  %10 = zext i32 %2 to i64
  %11 = getelementptr inbounds float, float* %0, i64 1
  %12 = getelementptr inbounds float, float* %0, i64 2
  %13 = getelementptr inbounds float, float* %0, i64 3
  br label %22

14:                                               ; preds = %22
  %15 = icmp slt i32 %2, 16
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = sub nsw i32 16, %2
  br label %57

18:                                               ; preds = %5, %14
  %19 = sext i32 %2 to i64
  %20 = sub i32 16, %2
  %21 = zext i32 %20 to i64
  br label %129

22:                                               ; preds = %53, %8
  %23 = phi float [ 0.000000e+00, %8 ], [ %56, %53 ]
  %24 = phi i64 [ 0, %8 ], [ %51, %53 ]
  %25 = phi i32 [ %9, %8 ], [ %54, %53 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds float, float* %3, i64 %24
  %28 = getelementptr inbounds float, float* %4, i64 %26
  %29 = load float, float* %28, align 4
  %30 = load float, float* %0, align 4
  %31 = fmul float %29, %30
  %32 = fadd float %23, %31
  store float %32, float* %27, align 4
  %33 = add nsw i64 %26, -4
  %34 = getelementptr inbounds float, float* %4, i64 %33
  %35 = load float, float* %34, align 4
  %36 = load float, float* %11, align 4
  %37 = fmul float %35, %36
  %38 = fadd float %32, %37
  store float %38, float* %27, align 4
  %39 = add nsw i64 %26, -8
  %40 = getelementptr inbounds float, float* %4, i64 %39
  %41 = load float, float* %40, align 4
  %42 = load float, float* %12, align 4
  %43 = fmul float %41, %42
  %44 = fadd float %38, %43
  store float %44, float* %27, align 4
  %45 = add nsw i64 %26, -12
  %46 = getelementptr inbounds float, float* %4, i64 %45
  %47 = load float, float* %46, align 4
  %48 = load float, float* %13, align 4
  %49 = fmul float %47, %48
  %50 = fadd float %44, %49
  store float %50, float* %27, align 4
  %51 = add nuw nsw i64 %24, 1
  %52 = icmp eq i64 %51, %10
  br i1 %52, label %14, label %53

53:                                               ; preds = %22
  %54 = add i32 %25, 1
  %55 = getelementptr inbounds float, float* %3, i64 %51
  %56 = load float, float* %55, align 4
  br label %22

57:                                               ; preds = %193, %16
  %58 = phi i32 [ %17, %16 ], [ %20, %193 ]
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds float, float* %0, i64 1
  %61 = getelementptr inbounds float, float* %0, i64 2
  %62 = getelementptr inbounds float, float* %0, i64 3
  %63 = getelementptr float, float* %3, i64 16
  %64 = bitcast float* %63 to i8*
  %65 = getelementptr float, float* %3, i64 160
  %66 = add nsw i64 %59, -12
  %67 = getelementptr float, float* %1, i64 %66
  %68 = add nsw i64 %59, 144
  %69 = getelementptr float, float* %1, i64 %68
  %70 = getelementptr float, float* %0, i64 3
  %71 = bitcast float* %70 to i8*
  %72 = getelementptr i8, i8* %71, i64 1
  %73 = icmp ult float* %63, %69
  %74 = icmp ult float* %67, %65
  %75 = and i1 %73, %74
  %76 = icmp ugt i8* %72, %64
  %77 = icmp ult float* %62, %65
  %78 = and i1 %76, %77
  %79 = or i1 %75, %78
  br i1 %79, label %208, label %80

80:                                               ; preds = %57
  %81 = load float, float* %0, align 4, !alias.scope !2
  %82 = insertelement <4 x float> undef, float %81, i32 0
  %83 = shufflevector <4 x float> %82, <4 x float> undef, <4 x i32> zeroinitializer
  %84 = load float, float* %60, align 4, !alias.scope !2
  %85 = insertelement <4 x float> undef, float %84, i32 0
  %86 = shufflevector <4 x float> %85, <4 x float> undef, <4 x i32> zeroinitializer
  %87 = load float, float* %61, align 4, !alias.scope !2
  %88 = insertelement <4 x float> undef, float %87, i32 0
  %89 = shufflevector <4 x float> %88, <4 x float> undef, <4 x i32> zeroinitializer
  %90 = load float, float* %62, align 4, !alias.scope !2
  %91 = insertelement <4 x float> undef, float %90, i32 0
  %92 = shufflevector <4 x float> %91, <4 x float> undef, <4 x i32> zeroinitializer
  br label %93

93:                                               ; preds = %93, %80
  %94 = phi i64 [ 0, %80 ], [ %127, %93 ]
  %95 = add i64 %94, 16
  %96 = add i64 %94, %59
  %97 = getelementptr inbounds float, float* %3, i64 %95
  %98 = getelementptr inbounds float, float* %1, i64 %96
  %99 = bitcast float* %98 to <4 x float>*
  %100 = load <4 x float>, <4 x float>* %99, align 4, !alias.scope !5
  %101 = fmul <4 x float> %100, %83
  %102 = bitcast float* %97 to <4 x float>*
  %103 = load <4 x float>, <4 x float>* %102, align 4, !alias.scope !7, !noalias !9
  %104 = fadd <4 x float> %103, %101
  %105 = bitcast float* %97 to <4 x float>*
  store <4 x float> %104, <4 x float>* %105, align 4, !alias.scope !7, !noalias !9
  %106 = add nsw i64 %96, -4
  %107 = getelementptr inbounds float, float* %1, i64 %106
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 4, !alias.scope !5
  %110 = fmul <4 x float> %109, %86
  %111 = fadd <4 x float> %104, %110
  %112 = bitcast float* %97 to <4 x float>*
  store <4 x float> %111, <4 x float>* %112, align 4, !alias.scope !7, !noalias !9
  %113 = add nsw i64 %96, -8
  %114 = getelementptr inbounds float, float* %1, i64 %113
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 4, !alias.scope !5
  %117 = fmul <4 x float> %116, %89
  %118 = fadd <4 x float> %111, %117
  %119 = bitcast float* %97 to <4 x float>*
  store <4 x float> %118, <4 x float>* %119, align 4, !alias.scope !7, !noalias !9
  %120 = add nsw i64 %96, -12
  %121 = getelementptr inbounds float, float* %1, i64 %120
  %122 = bitcast float* %121 to <4 x float>*
  %123 = load <4 x float>, <4 x float>* %122, align 4, !alias.scope !5
  %124 = fmul <4 x float> %123, %92
  %125 = fadd <4 x float> %118, %124
  %126 = bitcast float* %97 to <4 x float>*
  store <4 x float> %125, <4 x float>* %126, align 4, !alias.scope !7, !noalias !9
  %127 = add i64 %94, 4
  %128 = icmp eq i64 %127, 144
  br i1 %128, label %239, label %93, !llvm.loop !10

129:                                              ; preds = %193, %18
  %130 = phi i64 [ %19, %18 ], [ %194, %193 ]
  %131 = phi i32 [ 11, %18 ], [ %197, %193 ]
  %132 = phi i64 [ 0, %18 ], [ %196, %193 ]
  %133 = phi i32 [ 0, %18 ], [ %195, %193 ]
  %134 = trunc i64 %132 to i32
  %135 = lshr i32 %134, 2
  %136 = icmp ult i32 %135, 3
  %137 = select i1 %136, i32 %135, i32 3
  %138 = add nuw nsw i32 %137, 1
  %139 = zext i32 %138 to i64
  %140 = lshr i32 %133, 2
  %141 = icmp ult i32 %140, 3
  %142 = select i1 %141, i32 %140, i32 3
  %143 = shl nuw nsw i32 %142, 2
  %144 = sub i32 %131, %143
  %145 = sext i32 %144 to i64
  %146 = add nuw nsw i32 %142, 1
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds float, float* %3, i64 %130
  %149 = load float, float* %148, align 4
  %150 = and i64 %139, 1
  %151 = icmp eq i32 %137, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %129
  %153 = sub nuw nsw i64 %139, %150
  br label %170

154:                                              ; preds = %170, %129
  %155 = phi float [ undef, %129 ], [ %188, %170 ]
  %156 = phi float [ %149, %129 ], [ %188, %170 ]
  %157 = phi i64 [ 0, %129 ], [ %189, %170 ]
  %158 = phi i64 [ %132, %129 ], [ %190, %170 ]
  %159 = icmp eq i64 %150, 0
  br i1 %159, label %167, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds float, float* %1, i64 %158
  %162 = load float, float* %161, align 4
  %163 = getelementptr inbounds float, float* %0, i64 %157
  %164 = load float, float* %163, align 4
  %165 = fmul float %162, %164
  %166 = fadd float %156, %165
  store float %166, float* %148, align 4
  br label %167

167:                                              ; preds = %154, %160
  %168 = phi float [ %155, %154 ], [ %166, %160 ]
  %169 = icmp ult i32 %146, 4
  br i1 %169, label %199, label %193

170:                                              ; preds = %170, %152
  %171 = phi float [ %149, %152 ], [ %188, %170 ]
  %172 = phi i64 [ 0, %152 ], [ %189, %170 ]
  %173 = phi i64 [ %132, %152 ], [ %190, %170 ]
  %174 = phi i64 [ %153, %152 ], [ %191, %170 ]
  %175 = getelementptr inbounds float, float* %1, i64 %173
  %176 = load float, float* %175, align 4
  %177 = getelementptr inbounds float, float* %0, i64 %172
  %178 = load float, float* %177, align 4
  %179 = fmul float %176, %178
  %180 = fadd float %171, %179
  store float %180, float* %148, align 4
  %181 = or i64 %172, 1
  %182 = add nsw i64 %173, -4
  %183 = getelementptr inbounds float, float* %1, i64 %182
  %184 = load float, float* %183, align 4
  %185 = getelementptr inbounds float, float* %0, i64 %181
  %186 = load float, float* %185, align 4
  %187 = fmul float %184, %186
  %188 = fadd float %180, %187
  store float %188, float* %148, align 4
  %189 = add nuw nsw i64 %172, 2
  %190 = add nsw i64 %173, -8
  %191 = add i64 %174, -2
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %154, label %170

193:                                              ; preds = %199, %243, %253, %263, %167
  %194 = add nsw i64 %130, 1
  %195 = add nuw nsw i32 %133, 1
  %196 = add nuw nsw i64 %132, 1
  %197 = add nuw i32 %131, 1
  %198 = icmp eq i64 %196, %21
  br i1 %198, label %57, label %129

199:                                              ; preds = %167
  %200 = getelementptr inbounds float, float* %4, i64 %145
  %201 = load float, float* %200, align 4
  %202 = getelementptr inbounds float, float* %0, i64 %147
  %203 = load float, float* %202, align 4
  %204 = fmul float %201, %203
  %205 = fadd float %168, %204
  store float %205, float* %148, align 4
  %206 = add nuw nsw i64 %147, 1
  %207 = icmp ult i64 %206, 4
  br i1 %207, label %243, label %193

208:                                              ; preds = %57, %208
  %209 = phi i64 [ %236, %208 ], [ 16, %57 ]
  %210 = phi i64 [ %237, %208 ], [ %59, %57 ]
  %211 = getelementptr inbounds float, float* %3, i64 %209
  %212 = getelementptr inbounds float, float* %1, i64 %210
  %213 = load float, float* %212, align 4
  %214 = load float, float* %0, align 4
  %215 = fmul float %213, %214
  %216 = load float, float* %211, align 4
  %217 = fadd float %216, %215
  store float %217, float* %211, align 4
  %218 = add nsw i64 %210, -4
  %219 = getelementptr inbounds float, float* %1, i64 %218
  %220 = load float, float* %219, align 4
  %221 = load float, float* %60, align 4
  %222 = fmul float %220, %221
  %223 = fadd float %217, %222
  store float %223, float* %211, align 4
  %224 = add nsw i64 %210, -8
  %225 = getelementptr inbounds float, float* %1, i64 %224
  %226 = load float, float* %225, align 4
  %227 = load float, float* %61, align 4
  %228 = fmul float %226, %227
  %229 = fadd float %223, %228
  store float %229, float* %211, align 4
  %230 = add nsw i64 %210, -12
  %231 = getelementptr inbounds float, float* %1, i64 %230
  %232 = load float, float* %231, align 4
  %233 = load float, float* %62, align 4
  %234 = fmul float %232, %233
  %235 = fadd float %229, %234
  store float %235, float* %211, align 4
  %236 = add nuw nsw i64 %209, 1
  %237 = add nsw i64 %210, 1
  %238 = icmp eq i64 %236, 160
  br i1 %238, label %239, label %208, !llvm.loop !12

239:                                              ; preds = %93, %208
  %240 = getelementptr inbounds float, float* %1, i64 145
  %241 = bitcast float* %4 to i8*
  %242 = bitcast float* %240 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %241, i8* align 4 %242, i64 60, i1 false) #4
  ret void

243:                                              ; preds = %199
  %244 = add nsw i64 %145, -4
  %245 = getelementptr inbounds float, float* %4, i64 %244
  %246 = load float, float* %245, align 4
  %247 = getelementptr inbounds float, float* %0, i64 %206
  %248 = load float, float* %247, align 4
  %249 = fmul float %246, %248
  %250 = fadd float %205, %249
  store float %250, float* %148, align 4
  %251 = add nuw nsw i64 %147, 2
  %252 = icmp ult i64 %251, 4
  br i1 %252, label %253, label %193

253:                                              ; preds = %243
  %254 = add nsw i64 %145, -8
  %255 = getelementptr inbounds float, float* %4, i64 %254
  %256 = load float, float* %255, align 4
  %257 = getelementptr inbounds float, float* %0, i64 %251
  %258 = load float, float* %257, align 4
  %259 = fmul float %256, %258
  %260 = fadd float %250, %259
  store float %260, float* %148, align 4
  %261 = add nuw nsw i64 %147, 3
  %262 = icmp ult i64 %261, 4
  br i1 %262, label %263, label %193

263:                                              ; preds = %253
  %264 = add nsw i64 %145, -12
  %265 = getelementptr inbounds float, float* %4, i64 %264
  %266 = load float, float* %265, align 4
  %267 = getelementptr inbounds float, float* %0, i64 %261
  %268 = load float, float* %267, align 4
  %269 = fmul float %266, %268
  %270 = fadd float %260, %269
  store float %270, float* %148, align 4
  br label %193
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc19ThreeBandFilterBank9SynthesisEN3rtc9ArrayViewIKNS2_IfLln4711EEELl3EEENS2_IfLl480EEE(%"class.webrtc::ThreeBandFilterBank"*, %"class.rtc::ArrayView.3"*, float*) local_unnamed_addr #3 align 2 {
  %4 = bitcast float* %2 to i8*
  %5 = alloca %"struct.std::__1::array.5", align 4
  %6 = bitcast %"struct.std::__1::array.5"* %5 to i8*
  %7 = alloca %"struct.std::__1::array.5", align 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 1920, i1 false)
  %8 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 0
  %9 = bitcast %"struct.std::__1::array.5"* %7 to i8*
  %10 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %7, i64 0, i32 0, i64 0
  %11 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %1, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %1, i64 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.rtc::ArrayView.3", %"class.rtc::ArrayView.3"* %1, i64 2, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 1
  %15 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 0
  %16 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 1, i32 0, i64 0
  %17 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 1, i32 0, i64 0
  %18 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 1, i32 0, i64 0
  br label %19

19:                                               ; preds = %23, %3
  %20 = phi i64 [ 0, %3 ], [ %24, %23 ]
  %21 = trunc i64 %20 to i32
  br label %26

22:                                               ; preds = %23
  ret void

23:                                               ; preds = %185
  %24 = add nuw nsw i64 %20, 1
  %25 = icmp eq i64 %24, 3
  br i1 %25, label %22, label %19

26:                                               ; preds = %185, %19
  %27 = phi i32 [ 0, %19 ], [ %186, %185 ]
  %28 = mul nuw nsw i32 %27, 3
  %29 = add nuw nsw i32 %28, %21
  switch i32 %29, label %30 [
    i32 9, label %185
    i32 3, label %185
  ]

30:                                               ; preds = %26
  %31 = icmp ult i32 %29, 3
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = icmp ult i32 %29, 9
  %34 = select i1 %33, i32 -1, i32 -2
  %35 = add nsw i32 %34, %29
  br label %36

36:                                               ; preds = %30, %32
  %37 = phi i32 [ %29, %30 ], [ %35, %32 ]
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [10 x [4 x float]], [10 x [4 x float]]* @_ZN6webrtc12_GLOBAL__N_113kFilterCoeffsE, i64 0, i64 %38, i64 0
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 640, i1 false)
  %40 = getelementptr inbounds [10 x [3 x float]], [10 x [3 x float]]* @_ZN6webrtc12_GLOBAL__N_114kDctModulationE, i64 0, i64 %38, i64 0
  %41 = load float, float* %40, align 4
  %42 = load float*, float** %11, align 8
  %43 = load float, float* %42, align 4
  %44 = fmul float %41, %43
  %45 = fadd float %44, 0.000000e+00
  store float %45, float* %15, align 4
  %46 = getelementptr float, float* %42, i64 1
  %47 = getelementptr float, float* %42, i64 160
  %48 = icmp ult float* %14, %47
  %49 = icmp ult float* %46, %16
  %50 = and i1 %48, %49
  br i1 %50, label %51, label %61

51:                                               ; preds = %66, %36
  %52 = phi i64 [ 1, %36 ], [ 153, %66 ]
  %53 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %52
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds float, float* %42, i64 %52
  %56 = load float, float* %55, align 4
  %57 = fmul float %41, %56
  %58 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %52
  %59 = fadd float %54, %57
  store float %59, float* %58, align 4
  %60 = add nuw nsw i64 %52, 1
  br label %144

61:                                               ; preds = %36
  %62 = insertelement <4 x float> undef, float %41, i32 0
  %63 = shufflevector <4 x float> %62, <4 x float> undef, <4 x i32> zeroinitializer
  %64 = insertelement <4 x float> undef, float %41, i32 0
  %65 = shufflevector <4 x float> %64, <4 x float> undef, <4 x i32> zeroinitializer
  br label %66

66:                                               ; preds = %279, %61
  %67 = phi i64 [ 0, %61 ], [ %299, %279 ]
  %68 = or i64 %67, 1
  %69 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %68
  %70 = bitcast float* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 4, !alias.scope !13, !noalias !16
  %72 = getelementptr inbounds float, float* %69, i64 4
  %73 = bitcast float* %72 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 4, !alias.scope !13, !noalias !16
  %75 = getelementptr inbounds float, float* %42, i64 %68
  %76 = bitcast float* %75 to <4 x float>*
  %77 = load <4 x float>, <4 x float>* %76, align 4, !alias.scope !16
  %78 = getelementptr inbounds float, float* %75, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %80 = load <4 x float>, <4 x float>* %79, align 4, !alias.scope !16
  %81 = fmul <4 x float> %63, %77
  %82 = fmul <4 x float> %65, %80
  %83 = fadd <4 x float> %71, %81
  %84 = fadd <4 x float> %74, %82
  %85 = bitcast float* %69 to <4 x float>*
  store <4 x float> %83, <4 x float>* %85, align 4, !alias.scope !13, !noalias !16
  %86 = bitcast float* %72 to <4 x float>*
  store <4 x float> %84, <4 x float>* %86, align 4, !alias.scope !13, !noalias !16
  %87 = or i64 %67, 8
  %88 = icmp eq i64 %87, 152
  br i1 %88, label %51, label %279, !llvm.loop !18

89:                                               ; preds = %144
  %90 = getelementptr inbounds [10 x [3 x float]], [10 x [3 x float]]* @_ZN6webrtc12_GLOBAL__N_114kDctModulationE, i64 0, i64 %38, i64 1
  %91 = load float, float* %90, align 4
  %92 = load float*, float** %12, align 8
  %93 = getelementptr float, float* %92, i64 160
  %94 = bitcast float* %93 to %"struct.std::__1::array.5"*
  %95 = icmp ult %"struct.std::__1::array.5"* %5, %94
  %96 = icmp ult float* %92, %17
  %97 = and i1 %95, %96
  br i1 %97, label %188, label %98

98:                                               ; preds = %89
  %99 = insertelement <4 x float> undef, float %91, i32 0
  %100 = shufflevector <4 x float> %99, <4 x float> undef, <4 x i32> zeroinitializer
  %101 = insertelement <4 x float> undef, float %91, i32 0
  %102 = shufflevector <4 x float> %101, <4 x float> undef, <4 x i32> zeroinitializer
  br label %103

103:                                              ; preds = %103, %98
  %104 = phi i64 [ 0, %98 ], [ %142, %103 ]
  %105 = getelementptr inbounds float, float* %92, i64 %104
  %106 = bitcast float* %105 to <4 x float>*
  %107 = load <4 x float>, <4 x float>* %106, align 4, !alias.scope !19
  %108 = getelementptr inbounds float, float* %105, i64 4
  %109 = bitcast float* %108 to <4 x float>*
  %110 = load <4 x float>, <4 x float>* %109, align 4, !alias.scope !19
  %111 = fmul <4 x float> %100, %107
  %112 = fmul <4 x float> %102, %110
  %113 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %104
  %114 = bitcast float* %113 to <4 x float>*
  %115 = load <4 x float>, <4 x float>* %114, align 4, !alias.scope !22, !noalias !19
  %116 = getelementptr inbounds float, float* %113, i64 4
  %117 = bitcast float* %116 to <4 x float>*
  %118 = load <4 x float>, <4 x float>* %117, align 4, !alias.scope !22, !noalias !19
  %119 = fadd <4 x float> %115, %111
  %120 = fadd <4 x float> %118, %112
  %121 = bitcast float* %113 to <4 x float>*
  store <4 x float> %119, <4 x float>* %121, align 4, !alias.scope !22, !noalias !19
  %122 = bitcast float* %116 to <4 x float>*
  store <4 x float> %120, <4 x float>* %122, align 4, !alias.scope !22, !noalias !19
  %123 = or i64 %104, 8
  %124 = getelementptr inbounds float, float* %92, i64 %123
  %125 = bitcast float* %124 to <4 x float>*
  %126 = load <4 x float>, <4 x float>* %125, align 4, !alias.scope !19
  %127 = getelementptr inbounds float, float* %124, i64 4
  %128 = bitcast float* %127 to <4 x float>*
  %129 = load <4 x float>, <4 x float>* %128, align 4, !alias.scope !19
  %130 = fmul <4 x float> %100, %126
  %131 = fmul <4 x float> %102, %129
  %132 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %123
  %133 = bitcast float* %132 to <4 x float>*
  %134 = load <4 x float>, <4 x float>* %133, align 4, !alias.scope !22, !noalias !19
  %135 = getelementptr inbounds float, float* %132, i64 4
  %136 = bitcast float* %135 to <4 x float>*
  %137 = load <4 x float>, <4 x float>* %136, align 4, !alias.scope !22, !noalias !19
  %138 = fadd <4 x float> %134, %130
  %139 = fadd <4 x float> %137, %131
  %140 = bitcast float* %132 to <4 x float>*
  store <4 x float> %138, <4 x float>* %140, align 4, !alias.scope !22, !noalias !19
  %141 = bitcast float* %135 to <4 x float>*
  store <4 x float> %139, <4 x float>* %141, align 4, !alias.scope !22, !noalias !19
  %142 = add nuw nsw i64 %104, 16
  %143 = icmp eq i64 %142, 160
  br i1 %143, label %205, label %103, !llvm.loop !24

144:                                              ; preds = %144, %51
  %145 = phi i64 [ %60, %51 ], [ %161, %144 ]
  %146 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %145
  %147 = load float, float* %146, align 4
  %148 = getelementptr inbounds float, float* %42, i64 %145
  %149 = load float, float* %148, align 4
  %150 = fmul float %41, %149
  %151 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %145
  %152 = fadd float %147, %150
  store float %152, float* %151, align 4
  %153 = add nuw nsw i64 %145, 1
  %154 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %153
  %155 = load float, float* %154, align 4
  %156 = getelementptr inbounds float, float* %42, i64 %153
  %157 = load float, float* %156, align 4
  %158 = fmul float %41, %157
  %159 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %153
  %160 = fadd float %155, %158
  store float %160, float* %159, align 4
  %161 = add nuw nsw i64 %145, 2
  %162 = icmp eq i64 %161, 160
  br i1 %162, label %89, label %144, !llvm.loop !25

163:                                              ; preds = %164
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %6) #4
  br label %185

164:                                              ; preds = %164, %277
  %165 = phi i64 [ 0, %277 ], [ %183, %164 ]
  %166 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %7, i64 0, i32 0, i64 %165
  %167 = load float, float* %166, align 4
  %168 = fmul float %167, 3.000000e+00
  %169 = mul nuw nsw i64 %165, 3
  %170 = add nuw nsw i64 %169, %20
  %171 = getelementptr inbounds float, float* %2, i64 %170
  %172 = load float, float* %171, align 4
  %173 = fadd float %172, %168
  store float %173, float* %171, align 4
  %174 = or i64 %165, 1
  %175 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %7, i64 0, i32 0, i64 %174
  %176 = load float, float* %175, align 4
  %177 = fmul float %176, 3.000000e+00
  %178 = mul nuw nsw i64 %174, 3
  %179 = add nuw nsw i64 %178, %20
  %180 = getelementptr inbounds float, float* %2, i64 %179
  %181 = load float, float* %180, align 4
  %182 = fadd float %181, %177
  store float %182, float* %180, align 4
  %183 = add nuw nsw i64 %165, 2
  %184 = icmp eq i64 %183, 160
  br i1 %184, label %163, label %164

185:                                              ; preds = %26, %26, %163
  %186 = add nuw nsw i32 %27, 1
  %187 = icmp eq i32 %186, 4
  br i1 %187, label %23, label %26

188:                                              ; preds = %89, %188
  %189 = phi i64 [ %203, %188 ], [ 0, %89 ]
  %190 = getelementptr inbounds float, float* %92, i64 %189
  %191 = load float, float* %190, align 4
  %192 = fmul float %91, %191
  %193 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %189
  %194 = load float, float* %193, align 4
  %195 = fadd float %194, %192
  store float %195, float* %193, align 4
  %196 = or i64 %189, 1
  %197 = getelementptr inbounds float, float* %92, i64 %196
  %198 = load float, float* %197, align 4
  %199 = fmul float %91, %198
  %200 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %196
  %201 = load float, float* %200, align 4
  %202 = fadd float %201, %199
  store float %202, float* %200, align 4
  %203 = add nuw nsw i64 %189, 2
  %204 = icmp eq i64 %203, 160
  br i1 %204, label %205, label %188, !llvm.loop !26

205:                                              ; preds = %103, %188
  %206 = getelementptr inbounds [10 x [3 x float]], [10 x [3 x float]]* @_ZN6webrtc12_GLOBAL__N_114kDctModulationE, i64 0, i64 %38, i64 2
  %207 = load float, float* %206, align 4
  %208 = load float*, float** %13, align 8
  %209 = getelementptr float, float* %208, i64 160
  %210 = bitcast float* %209 to %"struct.std::__1::array.5"*
  %211 = icmp ult %"struct.std::__1::array.5"* %5, %210
  %212 = icmp ult float* %208, %18
  %213 = and i1 %211, %212
  br i1 %213, label %260, label %214

214:                                              ; preds = %205
  %215 = insertelement <4 x float> undef, float %207, i32 0
  %216 = shufflevector <4 x float> %215, <4 x float> undef, <4 x i32> zeroinitializer
  %217 = insertelement <4 x float> undef, float %207, i32 0
  %218 = shufflevector <4 x float> %217, <4 x float> undef, <4 x i32> zeroinitializer
  br label %219

219:                                              ; preds = %219, %214
  %220 = phi i64 [ 0, %214 ], [ %258, %219 ]
  %221 = getelementptr inbounds float, float* %208, i64 %220
  %222 = bitcast float* %221 to <4 x float>*
  %223 = load <4 x float>, <4 x float>* %222, align 4, !alias.scope !27
  %224 = getelementptr inbounds float, float* %221, i64 4
  %225 = bitcast float* %224 to <4 x float>*
  %226 = load <4 x float>, <4 x float>* %225, align 4, !alias.scope !27
  %227 = fmul <4 x float> %216, %223
  %228 = fmul <4 x float> %218, %226
  %229 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %220
  %230 = bitcast float* %229 to <4 x float>*
  %231 = load <4 x float>, <4 x float>* %230, align 4, !alias.scope !30, !noalias !27
  %232 = getelementptr inbounds float, float* %229, i64 4
  %233 = bitcast float* %232 to <4 x float>*
  %234 = load <4 x float>, <4 x float>* %233, align 4, !alias.scope !30, !noalias !27
  %235 = fadd <4 x float> %231, %227
  %236 = fadd <4 x float> %234, %228
  %237 = bitcast float* %229 to <4 x float>*
  store <4 x float> %235, <4 x float>* %237, align 4, !alias.scope !30, !noalias !27
  %238 = bitcast float* %232 to <4 x float>*
  store <4 x float> %236, <4 x float>* %238, align 4, !alias.scope !30, !noalias !27
  %239 = or i64 %220, 8
  %240 = getelementptr inbounds float, float* %208, i64 %239
  %241 = bitcast float* %240 to <4 x float>*
  %242 = load <4 x float>, <4 x float>* %241, align 4, !alias.scope !27
  %243 = getelementptr inbounds float, float* %240, i64 4
  %244 = bitcast float* %243 to <4 x float>*
  %245 = load <4 x float>, <4 x float>* %244, align 4, !alias.scope !27
  %246 = fmul <4 x float> %216, %242
  %247 = fmul <4 x float> %218, %245
  %248 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %239
  %249 = bitcast float* %248 to <4 x float>*
  %250 = load <4 x float>, <4 x float>* %249, align 4, !alias.scope !30, !noalias !27
  %251 = getelementptr inbounds float, float* %248, i64 4
  %252 = bitcast float* %251 to <4 x float>*
  %253 = load <4 x float>, <4 x float>* %252, align 4, !alias.scope !30, !noalias !27
  %254 = fadd <4 x float> %250, %246
  %255 = fadd <4 x float> %253, %247
  %256 = bitcast float* %248 to <4 x float>*
  store <4 x float> %254, <4 x float>* %256, align 4, !alias.scope !30, !noalias !27
  %257 = bitcast float* %251 to <4 x float>*
  store <4 x float> %255, <4 x float>* %257, align 4, !alias.scope !30, !noalias !27
  %258 = add nuw nsw i64 %220, 16
  %259 = icmp eq i64 %258, 160
  br i1 %259, label %277, label %219, !llvm.loop !32

260:                                              ; preds = %205, %260
  %261 = phi i64 [ %275, %260 ], [ 0, %205 ]
  %262 = getelementptr inbounds float, float* %208, i64 %261
  %263 = load float, float* %262, align 4
  %264 = fmul float %207, %263
  %265 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %261
  %266 = load float, float* %265, align 4
  %267 = fadd float %266, %264
  store float %267, float* %265, align 4
  %268 = or i64 %261, 1
  %269 = getelementptr inbounds float, float* %208, i64 %268
  %270 = load float, float* %269, align 4
  %271 = fmul float %207, %270
  %272 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %268
  %273 = load float, float* %272, align 4
  %274 = fadd float %273, %271
  store float %274, float* %272, align 4
  %275 = add nuw nsw i64 %261, 2
  %276 = icmp eq i64 %275, 160
  br i1 %276, label %277, label %260, !llvm.loop !33

277:                                              ; preds = %219, %260
  %278 = getelementptr inbounds %"class.webrtc::ThreeBandFilterBank", %"class.webrtc::ThreeBandFilterBank"* %0, i64 0, i32 1, i32 0, i64 %38, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -1, i64 640, i1 false)
  call fastcc void @_ZN6webrtc12_GLOBAL__N_110FilterCoreEN3rtc9ArrayViewIKfLl4EEENS2_IS3_Ll160EEEiNS2_IfLl160EEENS2_IfLl15EEE(float* %39, float* nonnull %8, i32 %27, float* nonnull %10, float* %278)
  br label %164

279:                                              ; preds = %66
  %280 = or i64 %67, 9
  %281 = getelementptr inbounds %"struct.std::__1::array.5", %"struct.std::__1::array.5"* %5, i64 0, i32 0, i64 %280
  %282 = bitcast float* %281 to <4 x float>*
  %283 = load <4 x float>, <4 x float>* %282, align 4, !alias.scope !13, !noalias !16
  %284 = getelementptr inbounds float, float* %281, i64 4
  %285 = bitcast float* %284 to <4 x float>*
  %286 = load <4 x float>, <4 x float>* %285, align 4, !alias.scope !13, !noalias !16
  %287 = getelementptr inbounds float, float* %42, i64 %280
  %288 = bitcast float* %287 to <4 x float>*
  %289 = load <4 x float>, <4 x float>* %288, align 4, !alias.scope !16
  %290 = getelementptr inbounds float, float* %287, i64 4
  %291 = bitcast float* %290 to <4 x float>*
  %292 = load <4 x float>, <4 x float>* %291, align 4, !alias.scope !16
  %293 = fmul <4 x float> %63, %289
  %294 = fmul <4 x float> %65, %292
  %295 = fadd <4 x float> %283, %293
  %296 = fadd <4 x float> %286, %294
  %297 = bitcast float* %281 to <4 x float>*
  store <4 x float> %295, <4 x float>* %297, align 4, !alias.scope !13, !noalias !16
  %298 = bitcast float* %284 to <4 x float>*
  store <4 x float> %296, <4 x float>* %298, align 4, !alias.scope !13, !noalias !16
  %299 = add nuw nsw i64 %67, 16
  br label %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = !{!8}
!8 = distinct !{!8, !4}
!9 = !{!6, !3}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !11}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !11}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !11}
!25 = distinct !{!25, !11}
!26 = distinct !{!26, !11}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !11}
!33 = distinct !{!33, !11}
