; ModuleID = '../../third_party/blink/renderer/platform/widget/input/elastic_overscroll_controller_bezier.cc'
source_filename = "../../third_party/blink/renderer/platform/widget/input/elastic_overscroll_controller_bezier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ElasticOverscrollControllerBezier" = type { %"class.blink::ElasticOverscrollController.base", %"class.gfx::Vector2dF", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.gfx::Vector2dF", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.blink::ElasticOverscrollController.base" = type <{ i32 (...)**, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"class.base::TimeTicks", %"class.cc::ScrollElasticityHelper"*, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", %"class.gfx::Vector2dF", i8, [3 x i8], %"struct.cc::OverscrollBehavior" }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::TimeDelta" = type { i64 }
%"class.cc::ScrollElasticityHelper" = type { i32 (...)** }
%"class.gfx::CubicBezier" = type { double, double, double, double, double, double, double, double, double, double, [11 x double] }
%"class.blink::ElasticOverscrollController" = type <{ i32 (...)**, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"class.base::TimeTicks", %"class.cc::ScrollElasticityHelper"*, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", [4 x i8], %"class.base::TimeTicks", %"class.gfx::Vector2dF", i8, [3 x i8], %"struct.cc::OverscrollBehavior", [4 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink27ElasticOverscrollControllerD2Ev = comdat any

$_ZN5blink33ElasticOverscrollControllerBezierD0Ev = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

@_ZTVN5blink33ElasticOverscrollControllerBezierE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ElasticOverscrollController"*)* @_ZN5blink27ElasticOverscrollControllerD2Ev to i8*), i8* bitcast (void (%"class.blink::ElasticOverscrollControllerBezier"*)* @_ZN5blink33ElasticOverscrollControllerBezierD0Ev to i8*), i8* bitcast (void (%"class.blink::ElasticOverscrollControllerBezier"*)* @_ZN5blink33ElasticOverscrollControllerBezier29DidEnterMomentumAnimatedStateEv to i8*), i8* bitcast (i64 (%"class.blink::ElasticOverscrollControllerBezier"*, %"class.base::TimeDelta"*)* @_ZNK5blink33ElasticOverscrollControllerBezier25StretchAmountForTimeDeltaERKN4base9TimeDeltaE to i8*), i8* bitcast (i64 (%"class.blink::ElasticOverscrollControllerBezier"*, %"class.gfx::Vector2dF"*)* @_ZNK5blink33ElasticOverscrollControllerBezier37StretchAmountForAccumulatedOverscrollERKN3gfx9Vector2dFE to i8*), i8* bitcast (i64 (%"class.blink::ElasticOverscrollControllerBezier"*, %"class.gfx::Vector2dF"*)* @_ZNK5blink33ElasticOverscrollControllerBezier37AccumulatedOverscrollForStretchAmountERKN3gfx9Vector2dFE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1

@_ZN5blink33ElasticOverscrollControllerBezierC1EPN2cc22ScrollElasticityHelperE = hidden unnamed_addr alias void (%"class.blink::ElasticOverscrollControllerBezier"*, %"class.cc::ScrollElasticityHelper"*), void (%"class.blink::ElasticOverscrollControllerBezier"*, %"class.cc::ScrollElasticityHelper"*)* @_ZN5blink33ElasticOverscrollControllerBezierC2EPN2cc22ScrollElasticityHelperE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink31InitialVelocityBasedBezierCurveEddddd(%"class.gfx::CubicBezier"* noalias sret, double, double, double, double, double) local_unnamed_addr #0 {
  %7 = tail call double @llvm.fabs.f64(double %1) #9
  %8 = fmul double %7, %2
  %9 = fcmp olt double %8, %3
  %10 = fdiv double %3, %7
  %11 = select i1 %9, double %2, double %10
  %12 = select i1 %9, double %8, double %3
  tail call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* %0, double %11, double %12, double %4, double %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"*, double, double, double, double) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ElasticOverscrollControllerBezierC2EPN2cc22ScrollElasticityHelperE(%"class.blink::ElasticOverscrollControllerBezier"*, %"class.cc::ScrollElasticityHelper"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::ElasticOverscrollControllerBezier"* %0 to %"class.blink::ElasticOverscrollController"*
  tail call void @_ZN5blink27ElasticOverscrollControllerC2EPN2cc22ScrollElasticityHelperE(%"class.blink::ElasticOverscrollController"* %3, %"class.cc::ScrollElasticityHelper"* %1) #9
  %4 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink33ElasticOverscrollControllerBezierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 2, i32 0
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 40, i1 false)
  ret void
}

declare void @_ZN5blink27ElasticOverscrollControllerC2EPN2cc22ScrollElasticityHelperE(%"class.blink::ElasticOverscrollController"*, %"class.cc::ScrollElasticityHelper"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK5blink33ElasticOverscrollControllerBezier18OverscrollBoundaryERKN3gfx4SizeE(%"class.blink::ElasticOverscrollControllerBezier"* nocapture readnone, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sitofp i32 %4 to double
  %6 = fmul double %5, 0x3FB99999A0000000
  %7 = fptrunc double %6 to float
  %8 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to double
  %11 = fmul double %10, 0x3FB99999A0000000
  %12 = fptrunc double %11 to float
  %13 = insertelement <2 x float> undef, float %7, i32 0
  %14 = insertelement <2 x float> %13, float %12, i32 1
  ret <2 x float> %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33ElasticOverscrollControllerBezier29DidEnterMomentumAnimatedStateEv(%"class.blink::ElasticOverscrollControllerBezier"* nocapture) unnamed_addr #4 align 2 {
  %2 = alloca %"class.gfx::Vector2dF", align 4
  %3 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 7
  %4 = bitcast %"class.gfx::Vector2dF"* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = extractelement <2 x float> %5, i32 0
  %7 = tail call float @llvm.fabs.f32(float %6) #9
  %8 = fcmp ogt float %7, 2.000000e+02
  %9 = fdiv float %6, 1.000000e+03
  %10 = select i1 %8, float %9, float 0.000000e+00
  %11 = extractelement <2 x float> %5, i32 1
  %12 = tail call float @llvm.fabs.f32(float %11) #9
  %13 = fcmp ogt float %12, 2.000000e+02
  %14 = fdiv float %11, 1.000000e+03
  %15 = select i1 %13, float %14, float 0.000000e+00
  %16 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 1, i32 0
  store float %10, float* %16, align 4
  %17 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 1, i32 1
  store float %15, float* %17, align 4
  %18 = bitcast %"class.gfx::Vector2dF"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %2, i64 0, i32 0
  %20 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %2, i64 0, i32 1
  %21 = tail call float @llvm.fabs.f32(float %10) #9
  %22 = tail call float @sqrtf(float %21) #9
  %23 = tail call float @llvm.fabs.f32(float %15) #9
  %24 = tail call float @sqrtf(float %23) #9
  store float %22, float* %19, align 4
  store float %24, float* %20, align 4
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %2, float 3.500000e+01, float 3.500000e+01) #9
  %25 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 4
  %26 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %25, align 8
  %27 = bitcast %"class.cc::ScrollElasticityHelper"* %26 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %28 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %28, i64 3
  %30 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %29, align 8
  %31 = call i64 %30(%"class.cc::ScrollElasticityHelper"* %26) #9
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %31, 32
  %34 = trunc i64 %33 to i32
  %35 = sitofp i32 %32 to double
  %36 = fmul double %35, 0x3FB99999A0000000
  %37 = fptrunc double %36 to float
  %38 = sitofp i32 %34 to double
  %39 = fmul double %38, 0x3FB99999A0000000
  %40 = fptrunc double %39 to float
  %41 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 1, i32 0
  %42 = load float, float* %41, align 4
  %43 = call float @llvm.fabs.f32(float %42) #9
  %44 = load float, float* %19, align 4
  %45 = fadd float %43, %44
  %46 = fcmp olt float %45, %37
  %47 = select i1 %46, float %45, float %37
  %48 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 4, i32 0
  %49 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 1, i32 1
  %50 = load float, float* %49, align 4
  %51 = call float @llvm.fabs.f32(float %50) #9
  %52 = load float, float* %20, align 4
  %53 = fadd float %51, %52
  %54 = fcmp olt float %53, %40
  %55 = select i1 %54, float %53, float %40
  %56 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 4, i32 1
  %57 = fcmp oeq float %42, 0.000000e+00
  %58 = call float @llvm.copysign.f32(float %47, float %10) #9
  %59 = call float @llvm.copysign.f32(float %47, float %42) #9
  %60 = select i1 %57, float %58, float %59
  store float %60, float* %48, align 4
  %61 = fcmp oeq float %50, 0.000000e+00
  %62 = call float @llvm.copysign.f32(float %55, float %15) #9
  %63 = call float @llvm.copysign.f32(float %55, float %50) #9
  %64 = select i1 %61, float %62, float %63
  store float %64, float* %56, align 4
  %65 = fpext float %44 to double
  %66 = fmul double %65, 2.500000e+00
  %67 = fcmp olt double %66, 1.500000e+02
  %68 = select i1 %67, double %66, double 1.500000e+02
  %69 = fmul double %68, 1.000000e+03
  %70 = fcmp ult double %69, 0xC3E0000000000000
  %71 = fcmp ugt double %69, 0x43DFFFFFFFFFFFFF
  %72 = fcmp ogt double %69, 0xC3E0000000000000
  %73 = select i1 %72, double %69, double 0xC3E0000000000000
  %74 = fptosi double %73 to i64
  %75 = select i1 %70, i64 0, i64 9223372036854775807
  %76 = select i1 %71, i64 %75, i64 %74
  %77 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 2, i32 0
  store i64 %76, i64* %77, align 8
  %78 = fpext float %52 to double
  %79 = fmul double %78, 2.500000e+00
  %80 = fcmp olt double %79, 1.500000e+02
  %81 = select i1 %80, double %79, double 1.500000e+02
  %82 = fmul double %81, 1.000000e+03
  %83 = fcmp ult double %82, 0xC3E0000000000000
  %84 = fcmp ugt double %82, 0x43DFFFFFFFFFFFFF
  %85 = fcmp ogt double %82, 0xC3E0000000000000
  %86 = select i1 %85, double %82, double 0xC3E0000000000000
  %87 = fptosi double %86 to i64
  %88 = select i1 %83, i64 0, i64 9223372036854775807
  %89 = select i1 %84, i64 %88, i64 %87
  %90 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 3, i32 0
  store i64 %89, i64* %90, align 8
  %91 = call float @llvm.fabs.f32(float %60)
  %92 = fpext float %91 to double
  %93 = fmul double %92, 1.500000e+01
  %94 = fcmp olt double %93, 3.000000e+02
  %95 = select i1 %94, double %93, double 3.000000e+02
  %96 = fmul double %95, 1.000000e+03
  %97 = fcmp ult double %96, 0xC3E0000000000000
  %98 = fcmp ugt double %96, 0x43DFFFFFFFFFFFFF
  %99 = fcmp ogt double %96, 0xC3E0000000000000
  %100 = select i1 %99, double %96, double 0xC3E0000000000000
  %101 = fptosi double %100 to i64
  %102 = select i1 %97, i64 0, i64 9223372036854775807
  %103 = select i1 %98, i64 %102, i64 %101
  %104 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 5, i32 0
  store i64 %103, i64* %104, align 8
  %105 = call float @llvm.fabs.f32(float %64)
  %106 = fpext float %105 to double
  %107 = fmul double %106, 1.500000e+01
  %108 = fcmp olt double %107, 3.000000e+02
  %109 = select i1 %108, double %107, double 3.000000e+02
  %110 = fmul double %109, 1.000000e+03
  %111 = fcmp ult double %110, 0xC3E0000000000000
  %112 = fcmp ugt double %110, 0x43DFFFFFFFFFFFFF
  %113 = fcmp ogt double %110, 0xC3E0000000000000
  %114 = select i1 %113, double %110, double 0xC3E0000000000000
  %115 = fptosi double %114 to i64
  %116 = select i1 %111, i64 0, i64 9223372036854775807
  %117 = select i1 %112, i64 %116, i64 %115
  %118 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 6, i32 0
  store i64 %117, i64* %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink33ElasticOverscrollControllerBezier29StretchAmountForForwardBounceEN3gfx11CubicBezierERKN4base9TimeDeltaES6_ddd(%"class.blink::ElasticOverscrollControllerBezier"* nocapture readnone, %"class.gfx::CubicBezier"*, %"class.base::TimeDelta"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8), double, double, double) local_unnamed_addr #0 align 2 {
  %8 = fcmp uge double %4, 0.000000e+00
  %9 = fcmp olt double %5, 0.000000e+00
  %10 = xor i1 %8, %9
  br i1 %10, label %11, label %26

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, %13
  br i1 %16, label %17, label %26

17:                                               ; preds = %11
  %18 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %2) #9
  %19 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %3) #9
  %20 = fdiv double %18, %19
  %21 = tail call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* %1, double %20) #9
  %22 = fsub double 1.000000e+00, %21
  %23 = fmul double %22, %5
  %24 = fmul double %21, %6
  %25 = fadd double %24, %23
  br label %26

26:                                               ; preds = %7, %11, %17
  %27 = phi double [ %25, %17 ], [ 0.000000e+00, %11 ], [ 0.000000e+00, %7 ]
  ret double %27
}

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink33ElasticOverscrollControllerBezier30StretchAmountForBackwardBounceEN3gfx11CubicBezierERKN4base9TimeDeltaES6_d(%"class.blink::ElasticOverscrollControllerBezier"* nocapture readnone, %"class.gfx::CubicBezier"*, %"class.base::TimeDelta"* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8), double) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %9, %7
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %2) #9
  %13 = tail call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %3) #9
  %14 = fdiv double %12, %13
  %15 = tail call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* %1, double %14) #9
  %16 = fsub double 1.000000e+00, %15
  %17 = fmul double %16, %4
  br label %18

18:                                               ; preds = %5, %11
  %19 = phi double [ %17, %11 ], [ 0.000000e+00, %5 ]
  ret double %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink33ElasticOverscrollControllerBezier25StretchAmountForTimeDeltaERKN4base9TimeDeltaE(%"class.blink::ElasticOverscrollControllerBezier"*, %"class.base::TimeDelta"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.gfx::CubicBezier", align 8
  %5 = alloca %"class.gfx::CubicBezier", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.gfx::Vector2d"*
  %8 = alloca %"class.gfx::Vector2dF", align 4
  %9 = alloca %"class.gfx::CubicBezier", align 8
  %10 = alloca %"class.gfx::CubicBezier", align 8
  %11 = alloca %"class.gfx::CubicBezier", align 8
  %12 = alloca %"class.gfx::CubicBezier", align 8
  %13 = alloca %"class.gfx::Vector2dF", align 4
  %14 = alloca %"class.gfx::CubicBezier", align 8
  %15 = alloca %"class.gfx::CubicBezier", align 8
  %16 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %17, align 8
  %20 = bitcast %"class.gfx::CubicBezier"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %20) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -1, i64 168, i1 false)
  %21 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 1, i32 0
  %22 = load float, float* %21, align 4
  %23 = tail call float @llvm.fabs.f32(float %22)
  %24 = fpext float %23 to double
  %25 = fmul double %24, 2.500000e-01
  %26 = fcmp olt double %25, 1.000000e+00
  %27 = fdiv double 1.000000e+00, %24
  %28 = select i1 %26, double 2.500000e-01, double %27
  %29 = select i1 %26, double %25, double 1.000000e+00
  call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* nonnull %4, double %28, double %29, double 0x3FEFAE147AE147AE, double 1.000000e+00) #9
  %30 = bitcast %"class.gfx::CubicBezier"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -1, i64 168, i1 false)
  %31 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 1, i32 1
  %32 = load float, float* %31, align 4
  %33 = call float @llvm.fabs.f32(float %32)
  %34 = fpext float %33 to double
  %35 = fmul double %34, 2.500000e-01
  %36 = fcmp olt double %35, 1.000000e+00
  %37 = fdiv double 1.000000e+00, %34
  %38 = select i1 %36, double 2.500000e-01, double %37
  %39 = select i1 %36, double %35, double 1.000000e+00
  call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* nonnull %5, double %38, double %39, double 0x3FEFAE147AE147AE, double 1.000000e+00) #9
  %40 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = bitcast i64* %6 to i32*
  store i32 -1431655766, i32* %41, align 8
  %42 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %7, i64 0, i32 1
  store i32 -1431655766, i32* %42, align 4
  %43 = bitcast %"class.gfx::Vector2dF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  call void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"* nonnull %9, %"class.gfx::CubicBezier"* nonnull dereferenceable(168) %4) #9
  %44 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 7
  %46 = bitcast %"class.gfx::Vector2dF"* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = extractelement <2 x float> %47, i32 0
  %49 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 1, i32 0
  %50 = load float, float* %49, align 4
  %51 = fpext float %50 to double
  %52 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 4, i32 0
  %53 = load float, float* %52, align 4
  %54 = fpext float %53 to double
  %55 = fcmp uge float %48, 0.000000e+00
  %56 = fcmp olt float %50, 0.000000e+00
  %57 = xor i1 %55, %56
  br i1 %57, label %58, label %72

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %44, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp slt i64 %19, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %58
  %63 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #9
  %64 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %44) #9
  %65 = fdiv double %63, %64
  %66 = call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* nonnull %9, double %65) #9
  %67 = fsub double 1.000000e+00, %66
  %68 = fmul double %67, %51
  %69 = fmul double %66, %54
  %70 = fadd double %69, %68
  %71 = fptrunc double %70 to float
  br label %72

72:                                               ; preds = %2, %58, %62
  %73 = phi float [ %71, %62 ], [ 0.000000e+00, %58 ], [ 0.000000e+00, %2 ]
  call void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"* nonnull %10, %"class.gfx::CubicBezier"* nonnull dereferenceable(168) %5) #9
  %74 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 3
  %75 = load <2 x float>, <2 x float>* %46, align 4
  %76 = extractelement <2 x float> %75, i32 1
  %77 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 1, i32 1
  %78 = load float, float* %77, align 4
  %79 = fpext float %78 to double
  %80 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 4, i32 1
  %81 = load float, float* %80, align 4
  %82 = fpext float %81 to double
  %83 = fcmp uge float %76, 0.000000e+00
  %84 = fcmp olt float %78, 0.000000e+00
  %85 = xor i1 %83, %84
  br i1 %85, label %86, label %101

86:                                               ; preds = %72
  %87 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %74, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = load i64, i64* %17, align 8
  %90 = icmp slt i64 %89, %88
  br i1 %90, label %91, label %101

91:                                               ; preds = %86
  %92 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #9
  %93 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %74) #9
  %94 = fdiv double %92, %93
  %95 = call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* nonnull %10, double %94) #9
  %96 = fsub double 1.000000e+00, %95
  %97 = fmul double %96, %79
  %98 = fmul double %95, %82
  %99 = fadd double %98, %97
  %100 = fptrunc double %99 to float
  br label %101

101:                                              ; preds = %72, %86, %91
  %102 = phi float [ %100, %91 ], [ 0.000000e+00, %86 ], [ 0.000000e+00, %72 ]
  %103 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 0
  store float %73, float* %103, align 4
  %104 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 1
  store float %102, float* %104, align 4
  %105 = call i64 @_ZN3gfx17ToRoundedVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %8) #9
  store i64 %105, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %106 = call zeroext i1 @_ZNK3gfx8Vector2d6IsZeroEv(%"class.gfx::Vector2d"* nonnull %7) #9
  br i1 %106, label %109, label %107

107:                                              ; preds = %101
  %108 = load i64, i64* %6, align 8
  br label %172

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 2, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %111) #9
  store i64 %112, i64* %17, align 8
  %113 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 3, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %114) #9
  store i64 %115, i64* %17, align 8
  %116 = bitcast %"class.gfx::CubicBezier"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %116) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -1, i64 168, i1 false)
  %117 = load float, float* %21, align 4
  %118 = call float @llvm.fabs.f32(float %117)
  %119 = fpext float %118 to double
  %120 = fmul double %119, 5.000000e-02
  %121 = fcmp olt double %120, 0x3FE6666666666666
  %122 = fdiv double 0x3FE6666666666666, %119
  %123 = select i1 %121, double 5.000000e-02, double %122
  %124 = select i1 %121, double %120, double 0x3FE6666666666666
  call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* nonnull %11, double %123, double %124, double 2.500000e-01, double 1.000000e+00) #9
  %125 = bitcast %"class.gfx::CubicBezier"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %125) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -1, i64 168, i1 false)
  %126 = load float, float* %31, align 4
  %127 = call float @llvm.fabs.f32(float %126)
  %128 = fpext float %127 to double
  %129 = fmul double %128, 5.000000e-02
  %130 = fcmp olt double %129, 0x3FE6666666666666
  %131 = fdiv double 0x3FE6666666666666, %128
  %132 = select i1 %130, double 5.000000e-02, double %131
  %133 = select i1 %130, double %129, double 0x3FE6666666666666
  call void @_ZN3gfx11CubicBezierC1Edddd(%"class.gfx::CubicBezier"* nonnull %12, double %132, double %133, double 2.500000e-01, double 1.000000e+00) #9
  %134 = bitcast %"class.gfx::Vector2dF"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #9
  call void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"* nonnull %14, %"class.gfx::CubicBezier"* nonnull dereferenceable(168) %11) #9
  %135 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 5
  %136 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %135, i64 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = load i64, i64* %17, align 8
  %139 = icmp slt i64 %138, %137
  br i1 %139, label %140, label %150

140:                                              ; preds = %109
  %141 = load float, float* %52, align 4
  %142 = fpext float %141 to double
  %143 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #9
  %144 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %135) #9
  %145 = fdiv double %143, %144
  %146 = call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* nonnull %14, double %145) #9
  %147 = fsub double 1.000000e+00, %146
  %148 = fmul double %147, %142
  %149 = fptrunc double %148 to float
  br label %150

150:                                              ; preds = %109, %140
  %151 = phi float [ %149, %140 ], [ 0.000000e+00, %109 ]
  call void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"* nonnull %15, %"class.gfx::CubicBezier"* nonnull dereferenceable(168) %12) #9
  %152 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 6
  %153 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %152, i64 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = load i64, i64* %17, align 8
  %156 = icmp slt i64 %155, %154
  br i1 %156, label %157, label %167

157:                                              ; preds = %150
  %158 = load float, float* %80, align 4
  %159 = fpext float %158 to double
  %160 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #9
  %161 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %152) #9
  %162 = fdiv double %160, %161
  %163 = call double @_ZNK3gfx11CubicBezier5SolveEd(%"class.gfx::CubicBezier"* nonnull %15, double %162) #9
  %164 = fsub double 1.000000e+00, %163
  %165 = fmul double %164, %159
  %166 = fptrunc double %165 to float
  br label %167

167:                                              ; preds = %150, %157
  %168 = phi float [ %166, %157 ], [ 0.000000e+00, %150 ]
  %169 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %13, i64 0, i32 0
  store float %151, float* %169, align 4
  %170 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %13, i64 0, i32 1
  store float %168, float* %170, align 4
  %171 = call i64 @_ZN3gfx17ToRoundedVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %125) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %116) #9
  br label %172

172:                                              ; preds = %167, %107
  %173 = phi i64 [ %171, %167 ], [ %108, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %30) #9
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  ret i64 %173
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN3gfx17ToRoundedVector2dERKNS_9Vector2dFE(%"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3gfx11CubicBezierC1ERKS0_(%"class.gfx::CubicBezier"*, %"class.gfx::CubicBezier"* dereferenceable(168)) unnamed_addr #2

declare zeroext i1 @_ZNK3gfx8Vector2d6IsZeroEv(%"class.gfx::Vector2d"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink33ElasticOverscrollControllerBezier37StretchAmountForAccumulatedOverscrollERKN3gfx9Vector2dFE(%"class.blink::ElasticOverscrollControllerBezier"* nocapture readonly, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 4
  %4 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %5 = bitcast %"class.cc::ScrollElasticityHelper"* %4 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %6 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %6, i64 3
  %8 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %7, align 8
  %9 = tail call i64 %8(%"class.cc::ScrollElasticityHelper"* %4) #9
  %10 = lshr i64 %9, 32
  %11 = trunc i64 %10 to i32
  %12 = sitofp i32 %11 to double
  %13 = fmul double %12, 0x3FB99999A0000000
  %14 = fptrunc double %13 to float
  %15 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %16 = bitcast %"class.cc::ScrollElasticityHelper"* %15 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %17 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %17, i64 3
  %19 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %18, align 8
  %20 = tail call i64 %19(%"class.cc::ScrollElasticityHelper"* %15) #9
  %21 = trunc i64 %20 to i32
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %2
  %24 = trunc i64 %9 to i32
  %25 = sitofp i32 %24 to double
  %26 = fmul double %25, 0x3FB99999A0000000
  %27 = fptrunc double %26 to float
  %28 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = fmul float %29, 2.000000e+00
  %31 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %32 = bitcast %"class.cc::ScrollElasticityHelper"* %31 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %33 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %32, align 8
  %34 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %33, i64 3
  %35 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %34, align 8
  %36 = tail call i64 %35(%"class.cc::ScrollElasticityHelper"* %31) #9
  %37 = trunc i64 %36 to i32
  %38 = sitofp i32 %37 to float
  %39 = fdiv float %30, %38
  %40 = tail call float @tanhf(float %39) #9
  %41 = fmul float %40, %27
  %42 = fptosi float %41 to i32
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %23, %2
  %45 = phi i64 [ %43, %23 ], [ 0, %2 ]
  %46 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %47 = bitcast %"class.cc::ScrollElasticityHelper"* %46 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %48 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %48, i64 3
  %50 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %49, align 8
  %51 = tail call i64 %50(%"class.cc::ScrollElasticityHelper"* %46) #9
  %52 = lshr i64 %51, 32
  %53 = trunc i64 %52 to i32
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %74

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, 2.000000e+00
  %59 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %60 = bitcast %"class.cc::ScrollElasticityHelper"* %59 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %61 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %60, align 8
  %62 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %61, i64 3
  %63 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %62, align 8
  %64 = tail call i64 %63(%"class.cc::ScrollElasticityHelper"* %59) #9
  %65 = lshr i64 %64, 32
  %66 = trunc i64 %65 to i32
  %67 = sitofp i32 %66 to float
  %68 = fdiv float %58, %67
  %69 = tail call float @tanhf(float %68) #9
  %70 = fmul float %69, %14
  %71 = fptosi float %70 to i32
  %72 = zext i32 %71 to i64
  %73 = shl nuw i64 %72, 32
  br label %74

74:                                               ; preds = %55, %44
  %75 = phi i64 [ %73, %55 ], [ 0, %44 ]
  %76 = or i64 %75, %45
  ret i64 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink33ElasticOverscrollControllerBezier37AccumulatedOverscrollForStretchAmountERKN3gfx9Vector2dFE(%"class.blink::ElasticOverscrollControllerBezier"* nocapture readonly, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::ElasticOverscrollControllerBezier", %"class.blink::ElasticOverscrollControllerBezier"* %0, i64 0, i32 0, i32 4
  %4 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %5 = bitcast %"class.cc::ScrollElasticityHelper"* %4 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %6 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %6, i64 3
  %8 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %7, align 8
  %9 = tail call i64 %8(%"class.cc::ScrollElasticityHelper"* %4) #9
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = sitofp i32 %10 to double
  %14 = fmul double %13, 0x3FB99999A0000000
  %15 = fptrunc double %14 to float
  %16 = sitofp i32 %12 to double
  %17 = fmul double %16, 0x3FB99999A0000000
  %18 = fptrunc double %17 to float
  %19 = fcmp ogt float %15, 0.000000e+00
  br i1 %19, label %20, label %37

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fdiv float %22, %15
  %24 = tail call float @atanhf(float %23) #9
  %25 = fmul float %24, 5.000000e-01
  %26 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %27 = bitcast %"class.cc::ScrollElasticityHelper"* %26 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %28 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %28, i64 3
  %30 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %29, align 8
  %31 = tail call i64 %30(%"class.cc::ScrollElasticityHelper"* %26) #9
  %32 = trunc i64 %31 to i32
  %33 = sitofp i32 %32 to float
  %34 = fmul float %25, %33
  %35 = fptosi float %34 to i32
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %20, %2
  %38 = phi i64 [ %36, %20 ], [ 0, %2 ]
  %39 = fcmp ogt float %18, 0.000000e+00
  br i1 %39, label %40, label %59

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fdiv float %42, %18
  %44 = tail call float @atanhf(float %43) #9
  %45 = fmul float %44, 5.000000e-01
  %46 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %3, align 8
  %47 = bitcast %"class.cc::ScrollElasticityHelper"* %46 to i64 (%"class.cc::ScrollElasticityHelper"*)***
  %48 = load i64 (%"class.cc::ScrollElasticityHelper"*)**, i64 (%"class.cc::ScrollElasticityHelper"*)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %48, i64 3
  %50 = load i64 (%"class.cc::ScrollElasticityHelper"*)*, i64 (%"class.cc::ScrollElasticityHelper"*)** %49, align 8
  %51 = tail call i64 %50(%"class.cc::ScrollElasticityHelper"* %46) #9
  %52 = lshr i64 %51, 32
  %53 = trunc i64 %52 to i32
  %54 = sitofp i32 %53 to float
  %55 = fmul float %45, %54
  %56 = fptosi float %55 to i32
  %57 = zext i32 %56 to i64
  %58 = shl nuw i64 %57, 32
  br label %59

59:                                               ; preds = %40, %37
  %60 = phi i64 [ %58, %40 ], [ 0, %37 ]
  %61 = or i64 %60, %38
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ElasticOverscrollControllerD2Ev(%"class.blink::ElasticOverscrollController"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33ElasticOverscrollControllerBezierD0Ev(%"class.blink::ElasticOverscrollControllerBezier"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ElasticOverscrollControllerBezier"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #6

declare void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.copysign.f32(float, float) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #9
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #9
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #5

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare float @tanhf(float) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare float @atanhf(float) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
