; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/fake_quant.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/fake_quant.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteFakeQuantParams = type { float, float, i32, i8 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }

$_ZN6tflite3ops7builtin10fake_quant4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/fake_quant.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [131 x i8] c"narrow_range FakeQuant is not currently supported at runtime. narrow_range is only meant to be applied to weights, not activations\00", align 1
@_ZZN6tflite3ops7builtin23Register_FAKE_QUANT_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin10fake_quant7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin10fake_quant4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin10fake_quant7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32 43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 1) #6
  br label %60

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32 44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %15, i32 1) #6
  br label %60

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %22 = bitcast i8** %21 to %struct.TfLiteFakeQuantParams**
  %23 = load %struct.TfLiteFakeQuantParams*, %struct.TfLiteFakeQuantParams** %22, align 8
  %24 = getelementptr inbounds %struct.TfLiteFakeQuantParams, %struct.TfLiteFakeQuantParams* %23, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %29 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %28, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %29(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %60

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %34, %30
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %30 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %52 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %51, align 8
  %53 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %52) #6
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %58 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %57, align 8
  %59 = tail call i32 %58(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %50, %struct.TfLiteIntArray* %53) #6
  br label %60

60:                                               ; preds = %27, %49, %17, %8
  %61 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %27 ], [ %59, %49 ]
  ret i32 %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_FAKE_QUANT_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_FAKE_QUANT_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin10fake_quant4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %15 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %14, align 8
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 %16
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi %struct.TfLiteTensor* [ %17, %13 ], [ null, %2 ]
  %20 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %21 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %20, align 8
  %22 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %21, i64 0, i32 1, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %27 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %26, align 8
  %28 = sext i32 %23 to i64
  %29 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %27, i64 %28
  br label %30

30:                                               ; preds = %18, %25
  %31 = phi %struct.TfLiteTensor* [ %29, %25 ], [ null, %18 ]
  %32 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %33 = bitcast i8** %32 to %struct.TfLiteFakeQuantParams**
  %34 = load %struct.TfLiteFakeQuantParams*, %struct.TfLiteFakeQuantParams** %33, align 8
  %35 = getelementptr inbounds %struct.TfLiteFakeQuantParams, %struct.TfLiteFakeQuantParams* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.TfLiteFakeQuantParams, %struct.TfLiteFakeQuantParams* %34, i64 0, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.TfLiteFakeQuantParams, %struct.TfLiteFakeQuantParams* %34, i64 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #6
  %42 = icmp eq %struct.TfLiteTensor* %19, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %44, align 8, !alias.scope !3
  br label %73

45:                                               ; preds = %30
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %19, i64 0, i32 2
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8, !noalias !3
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !3
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %49, i32* %51, align 8, !alias.scope !3
  %52 = icmp sgt i32 %49, 5
  br i1 %52, label %53, label %60

53:                                               ; preds = %45
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 2
  %56 = tail call i8* @_Znam(i64 %55) #7, !noalias !3
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %58 = bitcast i32** %57 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !3
  %59 = bitcast i8* %56 to i32*
  br label %65

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %62 = bitcast %union.anon* %61 to i32*
  %63 = sext i32 %49 to i64
  %64 = shl nsw i64 %63, 2
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi i64 [ %55, %53 ], [ %64, %60 ]
  %67 = phi i32* [ %59, %53 ], [ %62, %60 ]
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast i32* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 %66, i1 false) #6
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %19, i64 0, i32 1
  %71 = bitcast %union.TfLitePtrUnion* %70 to float**
  %72 = load float*, float** %71, align 8
  br label %73

73:                                               ; preds = %43, %65
  %74 = phi i32 [ %49, %65 ], [ 0, %43 ]
  %75 = phi float* [ %72, %65 ], [ null, %43 ]
  %76 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #6
  %77 = icmp eq %struct.TfLiteTensor* %31, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %79, align 8, !alias.scope !6
  br label %108

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8, !noalias !6
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4, !noalias !6
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %84, i32* %86, align 8, !alias.scope !6
  %87 = icmp sgt i32 %84, 5
  br i1 %87, label %88, label %95

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = shl nsw i64 %89, 2
  %91 = tail call i8* @_Znam(i64 %90) #7, !noalias !6
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8, !alias.scope !6
  %94 = bitcast i8* %91 to i32*
  br label %100

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %97 = bitcast %union.anon* %96 to i32*
  %98 = sext i32 %84 to i64
  %99 = shl nsw i64 %98, 2
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %95 ]
  %102 = phi i32* [ %94, %88 ], [ %97, %95 ]
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %101, i1 false) #6
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %31, i64 0, i32 1
  %106 = bitcast %union.TfLitePtrUnion* %105 to float**
  %107 = load float*, float** %106, align 8
  br label %108

108:                                              ; preds = %78, %100
  %109 = phi i32 [ %84, %100 ], [ 0, %78 ]
  %110 = phi float* [ %107, %100 ], [ null, %78 ]
  %111 = shl nsw i32 -1, %36
  %112 = xor i32 %111, -1
  %113 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #6
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %114 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #6
  store float 0xFFFFFFFFE0000000, float* %4, align 4
  %115 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #6
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  call void @_ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_(float %38, float %40, i32 0, i32 %112, float* nonnull %3, float* nonnull %4, float* nonnull %5) #6
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %117 = icmp sgt i32 %74, 5
  br i1 %117, label %118, label %121

118:                                              ; preds = %108
  %119 = getelementptr inbounds %union.anon, %union.anon* %116, i64 0, i32 0
  %120 = load i32*, i32** %119, align 8
  br label %124

121:                                              ; preds = %108
  %122 = bitcast %union.anon* %116 to i32*
  %123 = icmp sgt i32 %74, 0
  br i1 %123, label %124, label %227

124:                                              ; preds = %121, %118
  %125 = phi i32* [ %120, %118 ], [ %122, %121 ]
  %126 = zext i32 %74 to i64
  %127 = icmp ult i32 %74, 8
  br i1 %127, label %213, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 3
  %134 = icmp ult i64 %130, 24
  br i1 %134, label %180, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %177, %137 ]
  %139 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %135 ], [ %175, %137 ]
  %140 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %135 ], [ %176, %137 ]
  %141 = phi i64 [ %136, %135 ], [ %178, %137 ]
  %142 = getelementptr inbounds i32, i32* %125, i64 %138
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4
  %145 = getelementptr inbounds i32, i32* %142, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = mul nsw <4 x i32> %144, %139
  %149 = mul nsw <4 x i32> %147, %140
  %150 = or i64 %138, 8
  %151 = getelementptr inbounds i32, i32* %125, i64 %150
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = getelementptr inbounds i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = mul nsw <4 x i32> %153, %148
  %158 = mul nsw <4 x i32> %156, %149
  %159 = or i64 %138, 16
  %160 = getelementptr inbounds i32, i32* %125, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = getelementptr inbounds i32, i32* %160, i64 4
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = mul nsw <4 x i32> %162, %157
  %167 = mul nsw <4 x i32> %165, %158
  %168 = or i64 %138, 24
  %169 = getelementptr inbounds i32, i32* %125, i64 %168
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = getelementptr inbounds i32, i32* %169, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4
  %175 = mul nsw <4 x i32> %171, %166
  %176 = mul nsw <4 x i32> %174, %167
  %177 = add i64 %138, 32
  %178 = add i64 %141, -4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %137, !llvm.loop !9

180:                                              ; preds = %137, %128
  %181 = phi <4 x i32> [ undef, %128 ], [ %175, %137 ]
  %182 = phi <4 x i32> [ undef, %128 ], [ %176, %137 ]
  %183 = phi i64 [ 0, %128 ], [ %177, %137 ]
  %184 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %128 ], [ %175, %137 ]
  %185 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %128 ], [ %176, %137 ]
  %186 = icmp eq i64 %133, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %180, %187
  %188 = phi i64 [ %200, %187 ], [ %183, %180 ]
  %189 = phi <4 x i32> [ %198, %187 ], [ %184, %180 ]
  %190 = phi <4 x i32> [ %199, %187 ], [ %185, %180 ]
  %191 = phi i64 [ %201, %187 ], [ %133, %180 ]
  %192 = getelementptr inbounds i32, i32* %125, i64 %188
  %193 = bitcast i32* %192 to <4 x i32>*
  %194 = load <4 x i32>, <4 x i32>* %193, align 4
  %195 = getelementptr inbounds i32, i32* %192, i64 4
  %196 = bitcast i32* %195 to <4 x i32>*
  %197 = load <4 x i32>, <4 x i32>* %196, align 4
  %198 = mul nsw <4 x i32> %194, %189
  %199 = mul nsw <4 x i32> %197, %190
  %200 = add i64 %188, 8
  %201 = add i64 %191, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %187, !llvm.loop !11

203:                                              ; preds = %187, %180
  %204 = phi <4 x i32> [ %181, %180 ], [ %198, %187 ]
  %205 = phi <4 x i32> [ %182, %180 ], [ %199, %187 ]
  %206 = mul <4 x i32> %205, %204
  %207 = shufflevector <4 x i32> %206, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %208 = mul <4 x i32> %206, %207
  %209 = shufflevector <4 x i32> %208, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %210 = mul <4 x i32> %208, %209
  %211 = extractelement <4 x i32> %210, i32 0
  %212 = icmp eq i64 %129, %126
  br i1 %212, label %224, label %213

213:                                              ; preds = %203, %124
  %214 = phi i64 [ 0, %124 ], [ %129, %203 ]
  %215 = phi i32 [ 1, %124 ], [ %211, %203 ]
  br label %216

216:                                              ; preds = %213, %216
  %217 = phi i64 [ %222, %216 ], [ %214, %213 ]
  %218 = phi i32 [ %221, %216 ], [ %215, %213 ]
  %219 = getelementptr inbounds i32, i32* %125, i64 %217
  %220 = load i32, i32* %219, align 4
  %221 = mul nsw i32 %220, %218
  %222 = add nuw nsw i64 %217, 1
  %223 = icmp eq i64 %222, %126
  br i1 %223, label %224, label %216, !llvm.loop !13

224:                                              ; preds = %216, %203
  %225 = phi i32 [ %211, %203 ], [ %221, %216 ]
  %226 = sitofp i32 %225 to float
  br label %227

227:                                              ; preds = %121, %224
  %228 = phi float [ 1.000000e+00, %121 ], [ %226, %224 ]
  %229 = load float, float* %5, align 4
  %230 = load float, float* %3, align 4
  %231 = load float, float* %4, align 4
  call void @_ZN6tflite17FakeQuantizeArrayEfffPKfPff(float %229, float %230, float %231, float* %75, float* %110, float %228) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #6
  %232 = icmp sgt i32 %109, 5
  br i1 %232, label %233, label %239

233:                                              ; preds = %227
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %233
  %238 = bitcast i32* %235 to i8*
  call void @_ZdaPv(i8* %238) #7
  br label %239

239:                                              ; preds = %227, %233, %237
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #6
  br i1 %117, label %240, label %246

240:                                              ; preds = %239
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %242 = load i32*, i32** %241, align 8
  %243 = icmp eq i32* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = bitcast i32* %242 to i8*
  call void @_ZdaPv(i8* %245) #7
  br label %246

246:                                              ; preds = %239, %240, %244
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #6
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin19Register_FAKE_QUANTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin23Register_FAKE_QUANT_REFEvE1r to %struct.TfLiteRegistration*)
}

declare void @_ZN6tflite22NudgeQuantizationRangeEffiiPfS0_S0_(float, float, i32, i32, float*, float*, float*) local_unnamed_addr #2

declare void @_ZN6tflite17FakeQuantizeArrayEfffPKfPff(float, float, float, float*, float*, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !14, !10}
!14 = !{!"llvm.loop.unroll.runtime.disable"}
