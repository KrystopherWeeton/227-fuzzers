; ModuleID = '../../native_client/src/trusted/service_runtime/sys_parallel_io.c'
source_filename = "../../native_client/src/trusted/service_runtime/sys_parallel_io.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.nacl_abi_stat = type opaque
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }

@.str = private unnamed_addr constant [60 x i8] c"Entered NaClSysPRead(0x%08lx, %d, 0x%08x, %u[0x%x], 0(%x))\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"... pread offset %lu (0x%lx)\0A\00", align 1
@.str.2 = private unnamed_addr constant [61 x i8] c"Entered NaClSysPWrite(0x%08lx, %d, 0x%08x, %u[0x%x], 0(%x))\0A\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"... pwrite offset %lu (0x%lx)\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysPRead(%struct.NaClAppThread*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %8 = load %struct.NaClApp*, %struct.NaClApp** %7, align 8
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #3
  store i64 -6148914691236517206, i64* %6, align 8
  %10 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 %10, i32 %1, i32 %2, i32 %3, i32 %3, i32 %4) #3
  %11 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %8, i32 %1) #3
  %12 = icmp eq %struct.NaClDesc* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %5
  %14 = zext i32 %4 to i64
  %15 = call i32 @NaClCopyInFromUser(%struct.NaClApp* %8, i8* nonnull %9, i64 %14, i64 8) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = load i64, i64* %6, align 8
  call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 %18, i64 %18) #3
  %19 = zext i32 %2 to i64
  %20 = zext i32 %3 to i64
  %21 = icmp eq i32 %2, 0
  br i1 %21, label %45, label %22

22:                                               ; preds = %17
  %23 = add nuw nsw i64 %20, %19
  %24 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %8, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = zext i8 %25 to i64
  %27 = shl i64 1, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %45, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %8, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %19
  %33 = icmp eq i64 %32, -1
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = add i32 %2, -1
  %36 = add i32 %35, %3
  call void @NaClVmIoWillStart(%struct.NaClApp* %8, i32 %2, i32 %36) #3
  %37 = bitcast %struct.NaClDesc* %11 to %struct.NaClDescVtbl**
  %38 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %37, align 8
  %39 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %38, i64 0, i32 5
  %40 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %39, align 8
  %41 = inttoptr i64 %32 to i8*
  %42 = load i64, i64* %6, align 8
  %43 = call i64 %40(%struct.NaClDesc* nonnull %11, i8* %41, i64 %20, i64 %42) #3
  call void @NaClVmIoHasEnded(%struct.NaClApp* %8, i32 %2, i32 %36) #3
  %44 = trunc i64 %43 to i32
  br label %45

45:                                               ; preds = %22, %17, %29, %13, %5, %34
  %46 = phi i32 [ %44, %34 ], [ -9, %5 ], [ -14, %13 ], [ -14, %29 ], [ -14, %17 ], [ -14, %22 ]
  call void @NaClDescSafeUnref(%struct.NaClDesc* %11) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #3
  ret i32 %46
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

declare %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp*, i32) local_unnamed_addr #2

declare i32 @NaClCopyInFromUser(%struct.NaClApp*, i8*, i64, i64) local_unnamed_addr #2

declare void @NaClVmIoWillStart(%struct.NaClApp*, i32, i32) local_unnamed_addr #2

declare void @NaClVmIoHasEnded(%struct.NaClApp*, i32, i32) local_unnamed_addr #2

declare void @NaClDescSafeUnref(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysPWrite(%struct.NaClAppThread*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %6 = alloca i64, align 8
  %7 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %8 = load %struct.NaClApp*, %struct.NaClApp** %7, align 8
  %9 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #3
  store i64 -6148914691236517206, i64* %6, align 8
  %10 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2, i64 0, i64 0), i64 %10, i32 %1, i32 %2, i32 %3, i32 %3, i32 %4) #3
  %11 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %8, i32 %1) #3
  %12 = icmp eq %struct.NaClDesc* %11, null
  br i1 %12, label %45, label %13

13:                                               ; preds = %5
  %14 = zext i32 %4 to i64
  %15 = call i32 @NaClCopyInFromUser(%struct.NaClApp* %8, i8* nonnull %9, i64 %14, i64 8) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = load i64, i64* %6, align 8
  call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i64 %18, i64 %18) #3
  %19 = zext i32 %2 to i64
  %20 = zext i32 %3 to i64
  %21 = icmp eq i32 %2, 0
  br i1 %21, label %45, label %22

22:                                               ; preds = %17
  %23 = add nuw nsw i64 %20, %19
  %24 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %8, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = zext i8 %25 to i64
  %27 = shl i64 1, %26
  %28 = icmp ult i64 %27, %23
  br i1 %28, label %45, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %8, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %19
  %33 = icmp eq i64 %32, -1
  br i1 %33, label %45, label %34

34:                                               ; preds = %29
  %35 = add i32 %2, -1
  %36 = add i32 %35, %3
  call void @NaClVmIoWillStart(%struct.NaClApp* %8, i32 %2, i32 %36) #3
  %37 = bitcast %struct.NaClDesc* %11 to %struct.NaClDescVtbl**
  %38 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %37, align 8
  %39 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %38, i64 0, i32 6
  %40 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %39, align 8
  %41 = inttoptr i64 %32 to i8*
  %42 = load i64, i64* %6, align 8
  %43 = call i64 %40(%struct.NaClDesc* nonnull %11, i8* %41, i64 %20, i64 %42) #3
  call void @NaClVmIoHasEnded(%struct.NaClApp* %8, i32 %2, i32 %36) #3
  %44 = trunc i64 %43 to i32
  br label %45

45:                                               ; preds = %22, %17, %29, %13, %5, %34
  %46 = phi i32 [ %44, %34 ], [ -9, %5 ], [ -14, %13 ], [ -14, %29 ], [ -14, %17 ], [ -14, %22 ]
  call void @NaClDescSafeUnref(%struct.NaClDesc* %11) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #3
  ret i32 %46
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
