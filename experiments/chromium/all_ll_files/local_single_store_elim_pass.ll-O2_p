; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/local_single_store_elim_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/local_single_store_elim_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::LocalSingleStoreElimPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.931", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.954", %"class.std::__1::map.961" }
%"class.std::__1::vector.954" = type { %"class.std::__1::__vector_base.955" }
%"class.std::__1::__vector_base.955" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.961" = type { %"class.std::__1::__tree.962" }
%"class.std::__1::__tree.962" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::function.941" = type { %"class.std::__1::__function::__policy_func.945" }
%"class.std::__1::__function::__policy_func.945" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.946", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.946" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::function.1010" = type { %"class.std::__1::__function::__policy_func.1014" }
%"class.std::__1::__function::__policy_func.1014" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1015", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1015" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.992", %"class.std::__1::map.999", i8, [7 x i8] }>
%"class.std::__1::vector.992" = type { %"class.std::__1::__vector_base.993" }
%"class.std::__1::__vector_base.993" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.994" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.992", i32, i32 }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.999" = type { %"class.std::__1::__tree.1000" }
%"class.std::__1::__tree.1000" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.970" = type { %"class.std::__1::__hash_table.971" }
%"class.std::__1::__hash_table.971" = type <{ %"class.std::__1::unique_ptr.972", %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.987", %"class.std::__1::__compressed_pair.989", [4 x i8] }>
%"class.std::__1::unique_ptr.972" = type { %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974", %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"struct.std::__1::__hash_node_base.975"** }
%"struct.std::__1::__hash_node_base.975" = type { %"struct.std::__1::__hash_node_base.975"* }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.std::__1::__bucket_list_deallocator.977" }
%"class.std::__1::__bucket_list_deallocator.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.983" }
%"struct.std::__1::__compressed_pair_elem.983" = type { %"struct.std::__1::__hash_node_base.975" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__hash_node.1075" = type { %"struct.std::__1::__hash_node_base.975", i64, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1017" = type { %"class.std::__1::__function::__policy_func.1021" }
%"class.std::__1::__function::__policy_func.1021" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1022", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1022" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1048" = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__tree_node.1061" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1062" }
%"struct.std::__1::pair.1062" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt24LocalSingleStoreElimPassD2Ev = comdat any

$_ZN8spvtools3opt24LocalSingleStoreElimPassD0Ev = comdat any

$_ZNK8spvtools3opt24LocalSingleStoreElimPass4nameEv = comdat any

$_ZN8spvtools3opt24LocalSingleStoreElimPass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt24LocalSingleStoreElimPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::LocalSingleStoreElimPass"*)* @_ZN8spvtools3opt24LocalSingleStoreElimPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LocalSingleStoreElimPass"*)* @_ZN8spvtools3opt24LocalSingleStoreElimPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LocalSingleStoreElimPass"*)* @_ZNK8spvtools3opt24LocalSingleStoreElimPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LocalSingleStoreElimPass"*)* @_ZN8spvtools3opt24LocalSingleStoreElimPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LocalSingleStoreElimPass"*)* @_ZN8spvtools3opt24LocalSingleStoreElimPass7ProcessEv to i8*)] }, align 8
@.str = private unnamed_addr constant [41 x i8] c"SPV_AMD_shader_explicit_vertex_parameter\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"SPV_AMD_shader_trinary_minmax\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SPV_AMD_gcn_shader\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"SPV_KHR_shader_ballot\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"SPV_AMD_shader_ballot\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"SPV_AMD_gpu_shader_half_float\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"SPV_KHR_shader_draw_parameters\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"SPV_KHR_subgroup_vote\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"SPV_KHR_8bit_storage\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"SPV_KHR_16bit_storage\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"SPV_KHR_device_group\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"SPV_KHR_multiview\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"SPV_NVX_multiview_per_view_attributes\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"SPV_NV_viewport_array2\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"SPV_NV_stereo_view_rendering\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"SPV_NV_sample_mask_override_coverage\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"SPV_NV_geometry_shader_passthrough\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"SPV_AMD_texture_gather_bias_lod\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"SPV_KHR_storage_buffer_storage_class\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"SPV_KHR_variable_pointers\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"SPV_AMD_gpu_shader_int16\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"SPV_KHR_post_depth_coverage\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"SPV_KHR_shader_atomic_counter_ops\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"SPV_EXT_shader_stencil_export\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"SPV_EXT_shader_viewport_index_layer\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"SPV_AMD_shader_image_load_store_lod\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"SPV_AMD_shader_fragment_mask\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"SPV_EXT_fragment_fully_covered\00", align 1
@.str.28 = private unnamed_addr constant [36 x i8] c"SPV_AMD_gpu_shader_half_float_fetch\00", align 1
@.str.29 = private unnamed_addr constant [27 x i8] c"SPV_GOOGLE_decorate_string\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"SPV_GOOGLE_hlsl_functionality1\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"SPV_NV_shader_subgroup_partitioned\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"SPV_EXT_descriptor_indexing\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"SPV_NV_fragment_shader_barycentric\00", align 1
@.str.34 = private unnamed_addr constant [34 x i8] c"SPV_NV_compute_shader_derivatives\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"SPV_NV_shader_image_footprint\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"SPV_NV_shading_rate\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"SPV_NV_mesh_shader\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"SPV_NV_ray_tracing\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"SPV_KHR_ray_query\00", align 1
@.str.40 = private unnamed_addr constant [36 x i8] c"SPV_EXT_fragment_invocation_density\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"SPV_EXT_physical_storage_buffer\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"SPV_KHR_terminate_invocation\00", align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.44 = private unnamed_addr constant [29 x i8] c"eliminate-local-single-store\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt24LocalSingleStoreElimPass11ProcessImplEvE3$_0FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt24LocalSingleStoreElimPass8FindUsesEPKNS5_11InstructionEPNS_6vectorIPS7_NS_9allocatorISB_EEEEE3$_1FvSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt24LocalSingleStoreElimPass11FeedsAStoreEPNS5_11InstructionEE3$_2FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8spvtools3opt24LocalSingleStoreElimPassC1Ev = hidden unnamed_addr alias void (%"class.spvtools::opt::LocalSingleStoreElimPass"*), void (%"class.spvtools::opt::LocalSingleStoreElimPass"*)* @_ZN8spvtools3opt24LocalSingleStoreElimPassC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass20LocalSingleStoreElimEPNS0_8FunctionE(%"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %6, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %6, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to %"class.spvtools::opt::Instruction"*
  %12 = icmp eq %"class.spvtools::opt::Instruction"* %8, %11
  br i1 %12, label %30, label %13

13:                                               ; preds = %2, %20
  %14 = phi %"class.spvtools::opt::Instruction"* [ %28, %20 ], [ %11, %2 ]
  %15 = phi i64 [ %27, %20 ], [ %10, %2 ]
  %16 = phi i8 [ %23, %20 ], [ 0, %2 ]
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 59
  br i1 %19, label %20, label %30

20:                                               ; preds = %13
  %21 = tail call zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass15ProcessVariableEPNS0_11InstructionE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::Instruction"* %14)
  %22 = zext i1 %21 to i8
  %23 = or i8 %16, %22
  %24 = inttoptr i64 %15 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %25 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %24, i64 0, i32 1
  %26 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = inttoptr i64 %27 to %"class.spvtools::opt::Instruction"*
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %8, %28
  br i1 %29, label %30, label %13

30:                                               ; preds = %13, %20, %2
  %31 = phi i8 [ 0, %2 ], [ %23, %20 ], [ %16, %13 ]
  %32 = icmp ne i8 %31, 0
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass15ProcessVariableEPNS0_11InstructionE(%"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.947", align 8
  %4 = alloca i8, align 1
  %5 = bitcast %"class.std::__1::vector.947"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #12
  call void @_ZNK8spvtools3opt24LocalSingleStoreElimPass8FindUsesEPKNS0_11InstructionEPNSt3__16vectorIPS2_NS5_9allocatorIS7_EEEE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.947"* nonnull %3)
  %8 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt24LocalSingleStoreElimPass27FindSingleStoreAndCheckUsesEPNS0_11InstructionERKNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.947"* nonnull dereferenceable(24) %3)
  %9 = icmp eq %"class.spvtools::opt::Instruction"* %8, null
  br i1 %9, label %106, label %10

10:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %11 = call zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass12RewriteLoadsEPNS0_11InstructionERKNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPb(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::Instruction"* nonnull %8, %"class.std::__1::vector.947"* nonnull dereferenceable(24) %3, i8* nonnull %4)
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = zext i8 %17 to i32
  %19 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %18) #12
  br label %20

20:                                               ; preds = %10, %15
  %21 = phi i32 [ %19, %15 ], [ 0, %10 ]
  %22 = load i8, i8* %4, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %104, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 65536
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %24
  %32 = call i8* @_Znwm(i64 232) #13
  %33 = bitcast i8* %32 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %33, %"class.spvtools::opt::IRContext"* %26) #12
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 21
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.593"* %35 to i64*
  store i64 %34, i64* %38, align 8
  %39 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %37, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %37) #12
  %41 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %37 to i8*
  call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %40, %31
  %43 = load i32, i32* %27, align 8
  %44 = or i32 %43, 65536
  store i32 %44, i32* %27, align 8
  br label %45

45:                                               ; preds = %24, %42
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 21, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %46, align 8
  %48 = call zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager23IsVariableDebugDeclaredEj(%"class.spvtools::opt::analysis::DebugInfoManager"* %47, i32 %21) #12
  br i1 %48, label %49, label %104

49:                                               ; preds = %45
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 11
  %52 = load i32, i32* %51, align 8
  %53 = trunc i32 %52 to i16
  %54 = icmp slt i16 %53, 0
  br i1 %54, label %70, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5
  %57 = call i8* @_Znwm(i64 240) #13
  %58 = bitcast i8* %57 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %58, %"class.std::__1::function"* dereferenceable(32) %56, %"class.spvtools::opt::IRContext"* %50) #12
  %59 = ptrtoint i8* %57 to i64
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 20
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr.480"* %60 to i64*
  store i64 %59, i64* %63, align 8
  %64 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %62, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %55
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %62) #12
  %66 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %62 to i8*
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %65, %55
  %68 = load i32, i32* %51, align 8
  %69 = or i32 %68, 32768
  store i32 %69, i32* %51, align 8
  br label %70

70:                                               ; preds = %49, %67
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 20, i32 0, i32 0, i32 0
  %72 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %74 = load i8, i8* %73, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #12
  br label %78

78:                                               ; preds = %70, %76
  %79 = phi i32 [ %77, %76 ], [ 0, %70 ]
  %80 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %72, i32 %79) #12
  %81 = bitcast %"class.spvtools::opt::analysis::Type"* %80 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %82 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %82, i64 33
  %84 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %83, align 8
  %85 = call %"class.spvtools::opt::analysis::Pointer"* %84(%"class.spvtools::opt::analysis::Type"* %80) #12
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %85, i64 0, i32 2
  %87 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %86, align 8
  %88 = bitcast %"class.spvtools::opt::analysis::Type"* %87 to %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)***
  %89 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %89, i64 29
  %91 = load %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)** %90, align 8
  %92 = call %"class.spvtools::opt::analysis::Struct"* %91(%"class.spvtools::opt::analysis::Type"* %87) #12
  %93 = icmp eq %"class.spvtools::opt::analysis::Struct"* %92, null
  br i1 %93, label %94, label %104

94:                                               ; preds = %78
  %95 = bitcast %"class.spvtools::opt::analysis::Type"* %87 to %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)***
  %96 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %96, i64 25
  %98 = load %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)** %97, align 8
  %99 = call %"class.spvtools::opt::analysis::Array"* %98(%"class.spvtools::opt::analysis::Type"* %87) #12
  %100 = icmp eq %"class.spvtools::opt::analysis::Array"* %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = call zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass20RewriteDebugDeclaresEPNS0_11InstructionEj(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::Instruction"* nonnull %8, i32 %21)
  %103 = or i1 %11, %102
  br label %104

104:                                              ; preds = %101, %78, %94, %20, %45
  %105 = phi i1 [ %11, %45 ], [ %11, %20 ], [ %11, %78 ], [ %11, %94 ], [ %103, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br label %106

106:                                              ; preds = %2, %104
  %107 = phi i1 [ %105, %104 ], [ false, %2 ]
  %108 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %6, align 8
  %109 = icmp eq %"class.spvtools::opt::Instruction"** %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = ptrtoint %"class.spvtools::opt::Instruction"** %108 to i64
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %7 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"class.spvtools::opt::Instruction"** %108 to i8*
  call void @_ZdlPv(i8* %113) #13
  br label %114

114:                                              ; preds = %106, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt24LocalSingleStoreElimPass22AllExtensionsSupportedEv(%"class.spvtools::opt::LocalSingleStoreElimPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 4, i32 0, i32 1, i32 0, i32 1
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::Instruction"** %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to %"class.spvtools::opt::Instruction"*
  %12 = icmp eq %"class.spvtools::opt::Instruction"* %8, %11
  br i1 %12, label %77, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0
  br label %21

21:                                               ; preds = %13, %70
  %22 = phi %"class.spvtools::opt::Instruction"* [ %11, %13 ], [ %75, %70 ]
  %23 = phi i64 [ %10, %13 ], [ %74, %70 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i64 1, i64 2
  %31 = xor i1 %29, true
  %32 = zext i1 %31 to i64
  %33 = select i1 %26, i64 %32, i64 %30
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 6, i32 0, i32 0
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 %33, i32 1, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %36, align 8
  %38 = icmp eq %"class.std::__1::vector.3"* %37, null
  %39 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %37, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 %33, i32 1, i32 2
  %41 = select i1 %38, i32** %40, i32** %39
  %42 = bitcast i32** %41 to i8**
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %44 = call i64 @strlen(i8* %43) #12
  %45 = icmp ugt i64 %44, -17
  br i1 %45, label %46, label %48

46:                                               ; preds = %21
  %47 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %47) #14
  unreachable

48:                                               ; preds = %21
  %49 = icmp ult i64 %44, 23
  br i1 %49, label %55, label %50

50:                                               ; preds = %48
  %51 = add nuw i64 %44, 16
  %52 = and i64 %51, -16
  %53 = call i8* @_Znwm(i64 %52) #13
  store i8* %53, i8** %15, align 8
  %54 = or i64 %52, -9223372036854775808
  store i64 %54, i64* %16, align 8
  store i64 %44, i64* %17, align 8
  br label %58

55:                                               ; preds = %48
  %56 = trunc i64 %44 to i8
  store i8 %56, i8* %19, align 1
  %57 = icmp eq i64 %44, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %55, %50
  %59 = phi i8* [ %53, %50 ], [ %14, %55 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 %43, i64 %44, i1 false) #12
  br label %60

60:                                               ; preds = %55, %58
  %61 = phi i8* [ %14, %55 ], [ %59, %58 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %44
  store i8 0, i8* %62, align 1
  %63 = call %"struct.std::__1::__hash_node_base.915"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.911"* %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #12
  %64 = icmp eq %"struct.std::__1::__hash_node_base.915"* %63, null
  %65 = load i8, i8* %19, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %60
  %68 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %60, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br i1 %64, label %77, label %70

70:                                               ; preds = %69
  %71 = inttoptr i64 %23 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %72 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %71, i64 0, i32 1
  %73 = bitcast %"class.spvtools::opt::Instruction"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %74 to %"class.spvtools::opt::Instruction"*
  %76 = icmp eq %"class.spvtools::opt::Instruction"* %8, %75
  br i1 %76, label %77, label %21

77:                                               ; preds = %70, %69, %1
  %78 = phi i1 [ true, %1 ], [ false, %69 ], [ true, %70 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt24LocalSingleStoreElimPass11ProcessImplEv(%"class.spvtools::opt::LocalSingleStoreElimPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.941", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  %8 = icmp eq %"class.spvtools::opt::FeatureManager"* %7, null
  br i1 %8, label %9, label %47

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 1
  %11 = tail call i8* @_Znwm(i64 48) #13
  %12 = bitcast i8* %11 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %10, %"class.spvtools::AssemblyGrammar"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 40, i1 false) #12
  %14 = ptrtoint i8* %11 to i64
  %15 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.152"* %5 to i64*
  store i64 %14, i64* %16, align 8
  %17 = icmp eq %"class.spvtools::opt::FeatureManager"* %15, null
  %18 = bitcast i8* %11 to %"class.spvtools::opt::FeatureManager"*
  br i1 %17, label %42, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %15, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %20, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %20, align 8
  %22 = icmp eq %"class.std::__1::set.158"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %21, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %24, %"class.std::__1::__tree_node"* %27) #12
  %28 = bitcast %"class.std::__1::set.158"* %21 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %15, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %30, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %30, align 8
  %32 = icmp eq %"class.std::__1::set.158"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %31, i64 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node"**
  %37 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %36, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %34, %"class.std::__1::__tree_node"* %37) #12
  %38 = bitcast %"class.std::__1::set.158"* %31 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %33, %29
  %40 = bitcast %"class.spvtools::opt::FeatureManager"* %15 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  %41 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi %"class.spvtools::opt::FeatureManager"* [ %41, %39 ], [ %18, %9 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %44, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %43, %"class.spvtools::opt::Module"* %45) #12
  %46 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %6, align 8
  br label %47

47:                                               ; preds = %1, %42
  %48 = phi %"class.spvtools::opt::FeatureManager"* [ %7, %1 ], [ %46, %42 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %48, i64 0, i32 2, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 16
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %74

53:                                               ; preds = %47
  %54 = tail call zeroext i1 @_ZNK8spvtools3opt24LocalSingleStoreElimPass22AllExtensionsSupportedEv(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0)
  br i1 %54, label %55, label %74

55:                                               ; preds = %53
  %56 = bitcast %"class.std::__1::function.941"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #12
  %57 = getelementptr inbounds %"class.std::__1::function.941", %"class.std::__1::function.941"* %2, i64 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::function.941", %"class.std::__1::function.941"* %2, i64 0, i32 0, i32 2
  %59 = ptrtoint %"class.spvtools::opt::LocalSingleStoreElimPass"* %0 to i64
  %60 = getelementptr inbounds %"class.std::__1::function.941", %"class.std::__1::function.941"* %2, i64 0, i32 0, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to i64*
  store i64 -6148914691236517206, i64* %61, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_24LocalSingleStoreElimPass11ProcessImplEvE3$_0S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %57, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt24LocalSingleStoreElimPass11ProcessImplEvE3$_0FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %58, align 8
  %62 = bitcast %"class.std::__1::function.941"* %2 to i64*
  store i64 %59, i64* %62, align 8
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %64 = call zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %63, %"class.std::__1::function.941"* nonnull dereferenceable(32) %2) #12
  %65 = select i1 %64, i32 16, i32 17
  %66 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %58, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %66, i64 0, i32 1
  %68 = load void (i8*)*, void (i8*)** %67, align 8
  %69 = icmp eq void (i8*)* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.std::__1::function.941", %"class.std::__1::function.941"* %2, i64 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void %68(i8* %72) #12
  br label %73

73:                                               ; preds = %55, %70
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #12
  br label %74

74:                                               ; preds = %47, %53, %73
  %75 = phi i32 [ %65, %73 ], [ 17, %47 ], [ 17, %53 ]
  ret i32 %75
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext25ProcessEntryPointCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.941"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt24LocalSingleStoreElimPassC2Ev(%"class.spvtools::opt::LocalSingleStoreElimPass"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.spvtools::opt::LocalSingleStoreElimPass"* %0 to %"class.spvtools::opt::Pass"*
  tail call void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"* %2) #12
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt24LocalSingleStoreElimPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.931"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_set.910"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %6, align 4
  ret void
}

declare void @_ZN8spvtools3opt4PassC2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt24LocalSingleStoreElimPass7ProcessEv(%"class.spvtools::opt::LocalSingleStoreElimPass"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt24LocalSingleStoreElimPass22InitExtensionAllowListEv(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0)
  %2 = tail call i32 @_ZN8spvtools3opt24LocalSingleStoreElimPass11ProcessImplEv(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt24LocalSingleStoreElimPass22InitExtensionAllowListEv(%"class.spvtools::opt::LocalSingleStoreElimPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [43 x %"class.std::__1::basic_string"], align 8
  %3 = bitcast [43 x %"class.std::__1::basic_string"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %3) #12
  %4 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0
  %5 = tail call i8* @_Znwm(i64 48) #13
  %6 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i64 40, i1 false) #12
  %9 = getelementptr inbounds i8, i8* %5, i64 40
  store i8 0, i8* %9, align 1
  %10 = tail call i8* @_Znwm(i64 32) #13
  %11 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 29, i1 false) #12
  %14 = getelementptr inbounds i8, i8* %10, i64 29
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 18, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, i1 false) #12
  %19 = getelementptr inbounds i8, i8* %18, i64 18
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  store i8 21, i8* %22, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21, i1 false) #12
  %24 = getelementptr inbounds i8, i8* %23, i64 21
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 4
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 21, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i64 21, i1 false) #12
  %29 = getelementptr inbounds i8, i8* %28, i64 21
  store i8 0, i8* %29, align 1
  %30 = tail call i8* @_Znwm(i64 32) #13
  %31 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %33, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i64 29, i1 false) #12
  %34 = getelementptr inbounds i8, i8* %30, i64 29
  store i8 0, i8* %34, align 1
  %35 = tail call i8* @_Znwm(i64 32) #13
  %36 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast i64* %37 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %38, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i64 30, i1 false) #12
  %39 = getelementptr inbounds i8, i8* %35, i64 30
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 7
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  store i8 21, i8* %42, align 1
  %43 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 21, i1 false) #12
  %44 = getelementptr inbounds i8, i8* %43, i64 21
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 8
  %46 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  store i8 20, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %48, i64 20
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 9
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 21, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21, i1 false) #12
  %54 = getelementptr inbounds i8, i8* %53, i64 21
  store i8 0, i8* %54, align 1
  %55 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 10
  %56 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 20, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i64 20, i1 false) #12
  %59 = getelementptr inbounds i8, i8* %58, i64 20
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 11
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  store i8 17, i8* %62, align 1
  %63 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i64 17, i1 false) #12
  %64 = getelementptr inbounds i8, i8* %63, i64 17
  store i8 0, i8* %64, align 1
  %65 = tail call i8* @_Znwm(i64 48) #13
  %66 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %65, i8** %66, align 8
  %67 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %68, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i64 37, i1 false) #12
  %69 = getelementptr inbounds i8, i8* %65, i64 37
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 13
  %71 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 22, i8* %72, align 1
  %73 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i64 22, i1 false) #12
  %74 = getelementptr inbounds i8, i8* %73, i64 22
  store i8 0, i8* %74, align 2
  %75 = tail call i8* @_Znwm(i64 32) #13
  %76 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %75, i8** %76, align 8
  %77 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = bitcast i64* %77 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %78, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %75, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i64 28, i1 false) #12
  %79 = getelementptr inbounds i8, i8* %75, i64 28
  store i8 0, i8* %79, align 1
  %80 = tail call i8* @_Znwm(i64 48) #13
  %81 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %80, i8** %81, align 8
  %82 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %83, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i64 36, i1 false) #12
  %84 = getelementptr inbounds i8, i8* %80, i64 36
  store i8 0, i8* %84, align 1
  %85 = tail call i8* @_Znwm(i64 48) #13
  %86 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %85, i8** %86, align 8
  %87 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %88, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i64 34, i1 false) #12
  %89 = getelementptr inbounds i8, i8* %85, i64 34
  store i8 0, i8* %89, align 1
  %90 = tail call i8* @_Znwm(i64 32) #13
  %91 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %90, i8** %91, align 8
  %92 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %93, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %90, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0), i64 31, i1 false) #12
  %94 = getelementptr inbounds i8, i8* %90, i64 31
  store i8 0, i8* %94, align 1
  %95 = tail call i8* @_Znwm(i64 48) #13
  %96 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = bitcast i64* %97 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %98, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %95, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i64 36, i1 false) #12
  %99 = getelementptr inbounds i8, i8* %95, i64 36
  store i8 0, i8* %99, align 1
  %100 = tail call i8* @_Znwm(i64 32) #13
  %101 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %103, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %100, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i64 25, i1 false) #12
  %104 = getelementptr inbounds i8, i8* %100, i64 25
  store i8 0, i8* %104, align 1
  %105 = tail call i8* @_Znwm(i64 32) #13
  %106 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = bitcast i64* %107 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %108, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %105, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i64 24, i1 false) #12
  %109 = getelementptr inbounds i8, i8* %105, i64 24
  store i8 0, i8* %109, align 1
  %110 = tail call i8* @_Znwm(i64 32) #13
  %111 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %110, i8** %111, align 8
  %112 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 21, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = bitcast i64* %112 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %113, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %110, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i64 27, i1 false) #12
  %114 = getelementptr inbounds i8, i8* %110, i64 27
  store i8 0, i8* %114, align 1
  %115 = tail call i8* @_Znwm(i64 48) #13
  %116 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %115, i8** %116, align 8
  %117 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 22, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %118, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %115, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i64 33, i1 false) #12
  %119 = getelementptr inbounds i8, i8* %115, i64 33
  store i8 0, i8* %119, align 1
  %120 = tail call i8* @_Znwm(i64 32) #13
  %121 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %120, i8** %121, align 8
  %122 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %123 = bitcast i64* %122 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %123, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %120, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0), i64 29, i1 false) #12
  %124 = getelementptr inbounds i8, i8* %120, i64 29
  store i8 0, i8* %124, align 1
  %125 = tail call i8* @_Znwm(i64 48) #13
  %126 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %125, i8** %126, align 8
  %127 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %128, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %125, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0), i64 35, i1 false) #12
  %129 = getelementptr inbounds i8, i8* %125, i64 35
  store i8 0, i8* %129, align 1
  %130 = tail call i8* @_Znwm(i64 48) #13
  %131 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %133, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %130, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i64 0, i64 0), i64 35, i1 false) #12
  %134 = getelementptr inbounds i8, i8* %130, i64 35
  store i8 0, i8* %134, align 1
  %135 = tail call i8* @_Znwm(i64 32) #13
  %136 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %135, i8** %136, align 8
  %137 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %138, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %135, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i64 0, i64 0), i64 28, i1 false) #12
  %139 = getelementptr inbounds i8, i8* %135, i64 28
  store i8 0, i8* %139, align 1
  %140 = tail call i8* @_Znwm(i64 32) #13
  %141 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %140, i8** %141, align 8
  %142 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 27, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %143 = bitcast i64* %142 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %143, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %140, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i64 0, i64 0), i64 30, i1 false) #12
  %144 = getelementptr inbounds i8, i8* %140, i64 30
  store i8 0, i8* %144, align 1
  %145 = tail call i8* @_Znwm(i64 48) #13
  %146 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %145, i8** %146, align 8
  %147 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 28, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %148, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %145, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0), i64 35, i1 false) #12
  %149 = getelementptr inbounds i8, i8* %145, i64 35
  store i8 0, i8* %149, align 1
  %150 = tail call i8* @_Znwm(i64 32) #13
  %151 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %150, i8** %151, align 8
  %152 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 -9223372036854775776, i64* %152, align 8
  %153 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 26, i64* %153, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %150, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.29, i64 0, i64 0), i64 26, i1 false) #12
  %154 = getelementptr inbounds i8, i8* %150, i64 26
  store i8 0, i8* %154, align 1
  %155 = tail call i8* @_Znwm(i64 32) #13
  %156 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %155, i8** %156, align 8
  %157 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %158 = bitcast i64* %157 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %158, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %155, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i64 0, i64 0), i64 30, i1 false) #12
  %159 = getelementptr inbounds i8, i8* %155, i64 30
  store i8 0, i8* %159, align 1
  %160 = tail call i8* @_Znwm(i64 48) #13
  %161 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %160, i8** %161, align 8
  %162 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %163, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %160, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i64 34, i1 false) #12
  %164 = getelementptr inbounds i8, i8* %160, i64 34
  store i8 0, i8* %164, align 1
  %165 = tail call i8* @_Znwm(i64 32) #13
  %166 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %165, i8** %166, align 8
  %167 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = bitcast i64* %167 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %168, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %165, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i64 0, i64 0), i64 27, i1 false) #12
  %169 = getelementptr inbounds i8, i8* %165, i64 27
  store i8 0, i8* %169, align 1
  %170 = tail call i8* @_Znwm(i64 48) #13
  %171 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %170, i8** %171, align 8
  %172 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 33, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = bitcast i64* %172 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %173, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %170, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0), i64 34, i1 false) #12
  %174 = getelementptr inbounds i8, i8* %170, i64 34
  store i8 0, i8* %174, align 1
  %175 = tail call i8* @_Znwm(i64 48) #13
  %176 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %175, i8** %176, align 8
  %177 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 34, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %178 = bitcast i64* %177 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %178, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %175, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i64 33, i1 false) #12
  %179 = getelementptr inbounds i8, i8* %175, i64 33
  store i8 0, i8* %179, align 1
  %180 = tail call i8* @_Znwm(i64 32) #13
  %181 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %180, i8** %181, align 8
  %182 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 35, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %183 = bitcast i64* %182 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %183, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %180, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i64 0, i64 0), i64 29, i1 false) #12
  %184 = getelementptr inbounds i8, i8* %180, i64 29
  store i8 0, i8* %184, align 1
  %185 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 36
  %186 = bitcast %"class.std::__1::basic_string"* %185 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %187 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %186, i64 0, i32 1, i32 0
  store i8 19, i8* %187, align 1
  %188 = bitcast %"class.std::__1::basic_string"* %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0), i64 19, i1 false) #12
  %189 = getelementptr inbounds i8, i8* %188, i64 19
  store i8 0, i8* %189, align 1
  %190 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 37
  %191 = bitcast %"class.std::__1::basic_string"* %190 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %191, i64 0, i32 1, i32 0
  store i8 18, i8* %192, align 1
  %193 = bitcast %"class.std::__1::basic_string"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0), i64 18, i1 false) #12
  %194 = getelementptr inbounds i8, i8* %193, i64 18
  store i8 0, i8* %194, align 2
  %195 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 38
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  store i8 18, i8* %197, align 1
  %198 = bitcast %"class.std::__1::basic_string"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i64 18, i1 false) #12
  %199 = getelementptr inbounds i8, i8* %198, i64 18
  store i8 0, i8* %199, align 2
  %200 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 39
  %201 = bitcast %"class.std::__1::basic_string"* %200 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %201, i64 0, i32 1, i32 0
  store i8 17, i8* %202, align 1
  %203 = bitcast %"class.std::__1::basic_string"* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0), i64 17, i1 false) #12
  %204 = getelementptr inbounds i8, i8* %203, i64 17
  store i8 0, i8* %204, align 1
  %205 = tail call i8* @_Znwm(i64 48) #13
  %206 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 40, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %205, i8** %206, align 8
  %207 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 40, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %208, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %205, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.40, i64 0, i64 0), i64 35, i1 false) #12
  %209 = getelementptr inbounds i8, i8* %205, i64 35
  store i8 0, i8* %209, align 1
  %210 = tail call i8* @_Znwm(i64 32) #13
  %211 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 41, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %210, i8** %211, align 8
  %212 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 41, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 -9223372036854775776, i64* %212, align 8
  %213 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 41, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 31, i64* %213, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %210, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0), i64 31, i1 false) #12
  %214 = getelementptr inbounds i8, i8* %210, i64 31
  store i8 0, i8* %214, align 1
  %215 = tail call i8* @_Znwm(i64 32) #13
  %216 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %215, i8** %216, align 8
  %217 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 42, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %218 = bitcast i64* %217 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %218, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %215, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0), i64 28, i1 false) #12
  %219 = getelementptr inbounds i8, i8* %215, i64 28
  store i8 0, i8* %219, align 1
  %220 = getelementptr inbounds [43 x %"class.std::__1::basic_string"], [43 x %"class.std::__1::basic_string"]* %2, i64 0, i64 43
  %221 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0
  br label %222

222:                                              ; preds = %222, %1
  %223 = phi %"class.std::__1::basic_string"* [ %4, %1 ], [ %225, %222 ]
  %224 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %221, %"class.std::__1::basic_string"* dereferenceable(24) %223, %"class.std::__1::basic_string"* dereferenceable(24) %223) #12
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %223, i64 1
  %226 = icmp eq %"class.std::__1::basic_string"* %225, %220
  br i1 %226, label %227, label %222

227:                                              ; preds = %222, %237
  %228 = phi %"class.std::__1::basic_string"* [ %229, %237 ], [ %220, %222 ]
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %228, i64 -1
  %230 = bitcast %"class.std::__1::basic_string"* %229 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  call void @_ZdlPv(i8* %236) #13
  br label %237

237:                                              ; preds = %227, %234
  %238 = icmp eq %"class.std::__1::basic_string"* %229, %4
  br i1 %238, label %239, label %227

239:                                              ; preds = %237
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt24LocalSingleStoreElimPass8FindUsesEPKNS0_11InstructionEPNSt3__16vectorIPS2_NS5_9allocatorIS7_EEEE(%"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.947"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1010", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #13
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #12
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #12
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #12
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = bitcast %"class.std::__1::function.1010"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_24LocalSingleStoreElimPass8FindUsesEPKS4_PNS_6vectorIS5_NS_9allocatorIS5_EEEEE3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt24LocalSingleStoreElimPass8FindUsesEPKNS5_11InstructionEPNS_6vectorIPS7_NS_9allocatorISB_EEEEE3$_1FvSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.1010"* %4 to %"class.std::__1::vector.947"**
  store %"class.std::__1::vector.947"* %2, %"class.std::__1::vector.947"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast [8 x i8]* %42 to %"class.spvtools::opt::LocalSingleStoreElimPass"**
  store %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::LocalSingleStoreElimPass"** %43, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %37, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.1010"* nonnull dereferenceable(32) %4) #12
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #12
  br label %51

51:                                               ; preds = %35, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt24LocalSingleStoreElimPass27FindSingleStoreAndCheckUsesEPNS0_11InstructionERKNSt3__16vectorIS3_NS4_9allocatorIS3_EEEE(%"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::Instruction"* readonly, %"class.std::__1::vector.947"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %6 = bitcast %"struct.spvtools::opt::Operand"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 48
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, i32 1, i32 2
  %19 = xor i1 %17, true
  %20 = zext i1 %19 to i32
  %21 = select i1 %14, i32 %20, i32 %18
  %22 = trunc i64 %11 to i32
  %23 = sub i32 %22, %21
  %24 = icmp ugt i32 %23, 1
  %25 = select i1 %24, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* null
  %26 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %2, i64 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %2, i64 0, i32 0, i32 1
  %29 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %28, align 8
  %30 = icmp eq %"class.spvtools::opt::Instruction"** %27, %29
  br i1 %30, label %51, label %31

31:                                               ; preds = %3, %47
  %32 = phi %"class.spvtools::opt::Instruction"* [ %48, %47 ], [ %25, %3 ]
  %33 = phi %"class.spvtools::opt::Instruction"** [ %49, %47 ], [ %27, %3 ]
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %45 [
    i32 62, label %37
    i32 65, label %39
    i32 66, label %39
    i32 61, label %47
    i32 60, label %47
    i32 5, label %47
    i32 83, label %47
    i32 12, label %41
  ]

37:                                               ; preds = %31
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %32, null
  br i1 %38, label %47, label %51

39:                                               ; preds = %31, %31
  %40 = tail call zeroext i1 @_ZNK8spvtools3opt24LocalSingleStoreElimPass11FeedsAStoreEPNS0_11InstructionE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %0, %"class.spvtools::opt::Instruction"* %34)
  br i1 %40, label %51, label %47

41:                                               ; preds = %31
  %42 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %34) #12
  %43 = or i32 %42, 1
  %44 = icmp eq i32 %43, 29
  br i1 %44, label %47, label %51

45:                                               ; preds = %31
  %46 = tail call zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32 %36) #12
  br i1 %46, label %47, label %51

47:                                               ; preds = %37, %45, %31, %31, %31, %31, %39, %41
  %48 = phi %"class.spvtools::opt::Instruction"* [ %32, %45 ], [ %32, %41 ], [ %32, %31 ], [ %32, %31 ], [ %32, %31 ], [ %32, %31 ], [ %32, %39 ], [ %34, %37 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, i64 1
  %50 = icmp eq %"class.spvtools::opt::Instruction"** %49, %29
  br i1 %50, label %51, label %31

51:                                               ; preds = %41, %37, %39, %45, %47, %3
  %52 = phi %"class.spvtools::opt::Instruction"* [ %25, %3 ], [ %48, %47 ], [ null, %45 ], [ null, %39 ], [ null, %37 ], [ null, %41 ]
  ret %"class.spvtools::opt::Instruction"* %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass12RewriteLoadsEPNS0_11InstructionERKNSt3__16vectorIS3_NS4_9allocatorIS3_EEEEPb(%"class.spvtools::opt::LocalSingleStoreElimPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.947"* nocapture readonly dereferenceable(24), i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %6, %"class.spvtools::opt::Instruction"* %1)
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 0
  %10 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %9, align 8
  %11 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Function"* %10) #12
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, i32 1, i32 2
  %19 = xor i1 %17, true
  %20 = zext i1 %19 to i32
  %21 = select i1 %14, i32 %20, i32 %18
  %22 = add nuw nsw i32 %21, 1
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %22) #12
  store i8 1, i8* %3, align 1
  %24 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %2, i64 0, i32 0, i32 1
  %27 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %26, align 8
  %28 = icmp eq %"class.spvtools::opt::Instruction"** %25, %27
  br i1 %28, label %31, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %11, i64 0, i32 0
  br label %35

31:                                               ; preds = %77, %4
  %32 = phi i8 [ 0, %4 ], [ %78, %77 ]
  %33 = and i8 %32, 1
  %34 = icmp ne i8 %33, 0
  ret i1 %34

35:                                               ; preds = %29, %77
  %36 = phi i8 [ 0, %29 ], [ %78, %77 ]
  %37 = phi %"class.spvtools::opt::Instruction"** [ %25, %29 ], [ %79, %77 ]
  %38 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 62
  br i1 %41, label %77, label %42

42:                                               ; preds = %35
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"* %38) #12
  %44 = or i32 %43, 1
  %45 = icmp eq i32 %44, 29
  br i1 %45, label %77, label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %39, align 8
  %48 = icmp eq i32 %47, 61
  br i1 %48, label %49, label %76

49:                                               ; preds = %46
  %50 = tail call zeroext i1 @_ZNK8spvtools3opt21DominatorAnalysisBase9DominatesEPNS0_11InstructionES3_(%"class.spvtools::opt::DominatorAnalysisBase"* %30, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* %38) #12
  br i1 %50, label %51, label %76

51:                                               ; preds = %49
  %52 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 4
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = zext i8 %58 to i32
  %60 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %38, i32 %59) #12
  br label %61

61:                                               ; preds = %51, %56
  %62 = phi i32 [ %60, %56 ], [ 0, %51 ]
  tail call void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"* %52, i32 %62) #12
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %64 = load i8, i8* %53, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = zext i8 %68 to i32
  %70 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %38, i32 %69) #12
  br label %71

71:                                               ; preds = %61, %66
  %72 = phi i32 [ %70, %66 ], [ 0, %61 ]
  %73 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %63, i32 %72, i32 %23) #12
  %74 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %75 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %74, %"class.spvtools::opt::Instruction"* %38) #12
  br label %77

76:                                               ; preds = %49, %46
  store i8 0, i8* %3, align 1
  br label %77

77:                                               ; preds = %42, %76, %71, %35
  %78 = phi i8 [ %36, %35 ], [ %36, %42 ], [ 1, %71 ], [ %36, %76 ]
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %37, i64 1
  %80 = icmp eq %"class.spvtools::opt::Instruction"** %79, %27
  br i1 %80, label %31, label %35
}

declare zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager23IsVariableDebugDeclaredEj(%"class.spvtools::opt::analysis::DebugInfoManager"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass20RewriteDebugDeclaresEPNS0_11InstructionEj(%"class.spvtools::opt::LocalSingleStoreElimPass"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unordered_set.970", align 8
  %5 = bitcast %"class.std::__1::unordered_set.970"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::unordered_set.970", %"class.std::__1::unordered_set.970"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unordered_set.970", %"class.std::__1::unordered_set.970"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unordered_set.970", %"class.std::__1::unordered_set.970"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.970", %"class.std::__1::unordered_set.970"* %4, i64 0, i32 0, i32 4, i64 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.970", %"class.std::__1::unordered_set.970"* %4, i64 0, i32 0, i32 3
  %11 = bitcast %"class.std::__1::__compressed_pair.989"* %10 to i32*
  %12 = bitcast i8* %9 to i32*
  store i32 -1431655766, i32* %12, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  %19 = select i1 %18, i32 1, i32 2
  %20 = xor i1 %18, true
  %21 = zext i1 %20 to i32
  %22 = select i1 %15, i32 %21, i32 %19
  %23 = add nuw nsw i32 %22, 1
  %24 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %23) #12
  %25 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 65536
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %3
  %32 = tail call i8* @_Znwm(i64 232) #13
  %33 = bitcast i8* %32 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %33, %"class.spvtools::opt::IRContext"* %26) #12
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 21
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.593"* %35 to i64*
  store i64 %34, i64* %38, align 8
  %39 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %37, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %37) #12
  %41 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %37 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %40, %31
  %43 = load i32, i32* %27, align 8
  %44 = or i32 %43, 65536
  store i32 %44, i32* %27, align 8
  br label %45

45:                                               ; preds = %3, %42
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 21, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %46, align 8
  %48 = call zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager31AddDebugValueIfVarDeclIsVisibleEPNS0_11InstructionEjjS4_PNSt3__113unordered_setIS4_NS5_4hashIS4_EENS5_8equal_toIS4_EENS5_9allocatorIS4_EEEE(%"class.spvtools::opt::analysis::DebugInfoManager"* %47, %"class.spvtools::opt::Instruction"* %1, i32 %2, i32 %24, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::unordered_set.970"* nonnull %4) #12
  %49 = zext i1 %48 to i8
  %50 = load i64, i64* %8, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %100, label %52

52:                                               ; preds = %45
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %54 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %53, %"class.spvtools::opt::Instruction"* %1)
  %55 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %54, i64 0, i32 0
  %57 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %56, align 8
  %58 = call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %55, %"class.spvtools::opt::Function"* %57) #12
  %59 = bitcast %"struct.std::__1::__hash_node_base.975"** %7 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %100, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %58, i64 0, i32 0
  br label %64

64:                                               ; preds = %62, %95
  %65 = phi i64 [ %60, %62 ], [ %98, %95 ]
  %66 = phi i8 [ %49, %62 ], [ %96, %95 ]
  %67 = inttoptr i64 %65 to %"struct.std::__1::__hash_node.1075"*
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node.1075", %"struct.std::__1::__hash_node.1075"* %67, i64 0, i32 2
  %69 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %68, align 8
  %70 = call zeroext i1 @_ZNK8spvtools3opt21DominatorAnalysisBase9DominatesEPNS0_11InstructionES3_(%"class.spvtools::opt::DominatorAnalysisBase"* %63, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"* %69) #12
  br i1 %70, label %71, label %95

71:                                               ; preds = %64
  %72 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 11
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 65536
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %71
  %78 = call i8* @_Znwm(i64 232) #13
  %79 = bitcast i8* %78 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %79, %"class.spvtools::opt::IRContext"* %72) #12
  %80 = ptrtoint i8* %78 to i64
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 21
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %82, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.593"* %81 to i64*
  store i64 %80, i64* %84, align 8
  %85 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %83, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %77
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %83) #12
  %87 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %83 to i8*
  call void @_ZdlPv(i8* %87) #13
  br label %88

88:                                               ; preds = %86, %77
  %89 = load i32, i32* %73, align 8
  %90 = or i32 %89, 65536
  store i32 %90, i32* %73, align 8
  br label %91

91:                                               ; preds = %71, %88
  %92 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 21, i32 0, i32 0, i32 0
  %93 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %92, align 8
  %94 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis16DebugInfoManager20AddDebugValueForDeclEPNS0_11InstructionEjS4_S4_(%"class.spvtools::opt::analysis::DebugInfoManager"* %93, %"class.spvtools::opt::Instruction"* %69, i32 %24, %"class.spvtools::opt::Instruction"* %69, %"class.spvtools::opt::Instruction"* %1) #12
  br label %95

95:                                               ; preds = %91, %64
  %96 = phi i8 [ 1, %91 ], [ %66, %64 ]
  %97 = inttoptr i64 %65 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %64

100:                                              ; preds = %95, %52, %45
  %101 = phi i8 [ %49, %45 ], [ %49, %52 ], [ %96, %95 ]
  %102 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 11
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 65536
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %121

107:                                              ; preds = %100
  %108 = call i8* @_Znwm(i64 232) #13
  %109 = bitcast i8* %108 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %109, %"class.spvtools::opt::IRContext"* %102) #12
  %110 = ptrtoint i8* %108 to i64
  %111 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 21
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.593"* %111 to i64*
  store i64 %110, i64* %114, align 8
  %115 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %113, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %107
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %113) #12
  %117 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %113 to i8*
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %116, %107
  %119 = load i32, i32* %103, align 8
  %120 = or i32 %119, 65536
  store i32 %120, i32* %103, align 8
  br label %121

121:                                              ; preds = %100, %118
  %122 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 21, i32 0, i32 0, i32 0
  %123 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %122, align 8
  %124 = call zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager17KillDebugDeclaresEj(%"class.spvtools::opt::analysis::DebugInfoManager"* %123, i32 %2) #12
  %125 = zext i1 %124 to i32
  %126 = and i8 %101, 1
  %127 = zext i8 %126 to i32
  %128 = or i32 %125, %127
  %129 = icmp ne i32 %128, 0
  %130 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %7, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.975"* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %121, %132
  %133 = phi %"struct.std::__1::__hash_node_base.975"* [ %135, %132 ], [ %130, %121 ]
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.975", %"struct.std::__1::__hash_node_base.975"* %133, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %134, align 8
  %136 = bitcast %"struct.std::__1::__hash_node_base.975"* %133 to i8*
  call void @_ZdlPv(i8* %136) #13
  %137 = icmp eq %"struct.std::__1::__hash_node_base.975"* %135, null
  br i1 %137, label %138, label %132

138:                                              ; preds = %132, %121
  %139 = load %"struct.std::__1::__hash_node_base.975"**, %"struct.std::__1::__hash_node_base.975"*** %6, align 8
  store %"struct.std::__1::__hash_node_base.975"** null, %"struct.std::__1::__hash_node_base.975"*** %6, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.975"** %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = bitcast %"struct.std::__1::__hash_node_base.975"** %139 to i8*
  call void @_ZdlPv(i8* %142) #13
  br label %143

143:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #12
  ret i1 %129
}

declare zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager31AddDebugValueIfVarDeclIsVisibleEPNS0_11InstructionEjjS4_PNSt3__113unordered_setIS4_NS5_4hashIS4_EENS5_8equal_toIS4_EENS5_9allocatorIS4_EEEE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::Instruction"*, i32, i32, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_set.970"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #12, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt21DominatorAnalysisBase9DominatesEPNS0_11InstructionES3_(%"class.spvtools::opt::DominatorAnalysisBase"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis16DebugInfoManager20AddDebugValueForDeclEPNS0_11InstructionEjS4_S4_(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::Instruction"*, i32, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager17KillDebugDeclaresEj(%"class.spvtools::opt::analysis::DebugInfoManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt24LocalSingleStoreElimPass11FeedsAStoreEPNS0_11InstructionE(%"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1017", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #13
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #12
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #12
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %2, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::function.1017"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #12
  %38 = ptrtoint %"class.spvtools::opt::LocalSingleStoreElimPass"* %0 to i64
  %39 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %3, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_24LocalSingleStoreElimPass11FeedsAStoreES5_E3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt24LocalSingleStoreElimPass11FeedsAStoreEPNS5_11InstructionEE3$_2FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = bitcast %"class.std::__1::function.1017"* %3 to i64*
  store i64 %38, i64* %41, align 8
  %42 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %36, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::function.1017"* nonnull dereferenceable(32) %3) #12
  %43 = xor i1 %42, true
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %3, i64 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void %46(i8* %50) #12
  br label %51

51:                                               ; preds = %34, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #12
  ret i1 %43
}

declare i32 @_ZNK8spvtools3opt11Instruction23GetOpenCL100DebugOpcodeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1010"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1017"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext21KillNamesAndDecoratesEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt24LocalSingleStoreElimPassD2Ev(%"class.spvtools::opt::LocalSingleStoreElimPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt24LocalSingleStoreElimPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.915"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %21, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %29 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %29, i64 0, i32 1
  %31 = load void (i8*)*, void (i8*)** %30, align 8
  %32 = icmp eq void (i8*)* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void %31(i8* %35) #12
  br label %36

36:                                               ; preds = %27, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt24LocalSingleStoreElimPassD0Ev(%"class.spvtools::opt::LocalSingleStoreElimPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt24LocalSingleStoreElimPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 2
  %11 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  %20 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.915"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %29 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %29, i64 0, i32 1
  %31 = load void (i8*)*, void (i8*)** %30, align 8
  %32 = icmp eq void (i8*)* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::LocalSingleStoreElimPass", %"class.spvtools::opt::LocalSingleStoreElimPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void %31(i8* %35) #12
  br label %36

36:                                               ; preds = %27, %33
  %37 = bitcast %"class.spvtools::opt::LocalSingleStoreElimPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %37) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt24LocalSingleStoreElimPass4nameEv(%"class.spvtools::opt::LocalSingleStoreElimPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt24LocalSingleStoreElimPass20GetPreservedAnalysesEv(%"class.spvtools::opt::LocalSingleStoreElimPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49155
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.601"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.601"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.601"* %9 to %"struct.std::__1::__hash_node_base.975"**
  %11 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.975"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.975"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.975", %"struct.std::__1::__hash_node_base.975"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.975"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  %18 = icmp eq %"struct.std::__1::__hash_node_base.975"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.601"* %20 to %"struct.std::__1::__hash_node_base.975"***
  %22 = load %"struct.std::__1::__hash_node_base.975"**, %"struct.std::__1::__hash_node_base.975"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.975"** null, %"struct.std::__1::__hash_node_base.975"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.975"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.975"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.601"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  %28 = icmp eq %"struct.std::__1::__hash_node_base.601"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.601"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.601"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.601"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.601"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.601"* %43 to %"struct.std::__1::__hash_node_base.975"**
  %45 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.975"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.975"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.975", %"struct.std::__1::__hash_node_base.975"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.975"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  %52 = icmp eq %"struct.std::__1::__hash_node_base.975"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.601"* %54 to %"struct.std::__1::__hash_node_base.975"***
  %56 = load %"struct.std::__1::__hash_node_base.975"**, %"struct.std::__1::__hash_node_base.975"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.975"** null, %"struct.std::__1::__hash_node_base.975"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.975"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.975"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #13
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.601"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  %62 = icmp eq %"struct.std::__1::__hash_node_base.601"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.601"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.601"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.601"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.601"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.601"* %77 to %"struct.std::__1::__hash_node_base.975"**
  %79 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.975"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.975"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.975", %"struct.std::__1::__hash_node_base.975"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.975"*, %"struct.std::__1::__hash_node_base.975"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.975"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #13
  %86 = icmp eq %"struct.std::__1::__hash_node_base.975"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.601"* %88 to %"struct.std::__1::__hash_node_base.975"***
  %90 = load %"struct.std::__1::__hash_node_base.975"**, %"struct.std::__1::__hash_node_base.975"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.975"** null, %"struct.std::__1::__hash_node_base.975"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.975"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.975"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.601"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  %96 = icmp eq %"struct.std::__1::__hash_node_base.601"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.601"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.601"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #13
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #13
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #12
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #12
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #13
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1048", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1017", align 8
  %6 = alloca %"class.std::__1::function.1010", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !4

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1010"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1010"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1017"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1010"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1017"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1017", %"class.std::__1::function.1017"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #12
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #12
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #12
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #12
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %3) #12
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #12
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #12
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #12
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #12
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #12
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #12
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1010"**
  %4 = load %"class.std::__1::function.1010"*, %"class.std::__1::function.1010"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1010", %"class.std::__1::function.1010"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1048", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1048", %"class.std::__1::tuple.1048"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1048"* nonnull dereferenceable(1) %4) #12
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1048"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !6
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !6
  %75 = load i64, i64* %74, align 8, !noalias !6
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !6
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !6
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !6
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !6
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #12, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #3 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !9

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1061"**
  %34 = load %"class.std::__1::__tree_node.1061"*, %"class.std::__1::__tree_node.1061"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1061"* %34) #12
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1061"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1061"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1061"* %1 to %"class.std::__1::__tree_node.1061"**
  %6 = load %"class.std::__1::__tree_node.1061"*, %"class.std::__1::__tree_node.1061"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1061"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1061", %"class.std::__1::__tree_node.1061"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1061"**
  %9 = load %"class.std::__1::__tree_node.1061"*, %"class.std::__1::__tree_node.1061"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1061"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.1061"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.915"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table.911"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #12, !range !3
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.915"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.915"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.915"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.915"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.915"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.915"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.915"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.915"* %112
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_24LocalSingleStoreElimPass11ProcessImplEvE3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LocalSingleStoreElimPass"**
  %4 = load %"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::LocalSingleStoreElimPass"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %8, i64 0, i32 2, i32 0, i32 1
  %11 = bitcast %"class.spvtools::opt::Instruction"** %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = inttoptr i64 %12 to %"class.spvtools::opt::Instruction"*
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %10, %13
  br i1 %14, label %32, label %15

15:                                               ; preds = %2, %22
  %16 = phi %"class.spvtools::opt::Instruction"* [ %30, %22 ], [ %13, %2 ]
  %17 = phi i64 [ %29, %22 ], [ %12, %2 ]
  %18 = phi i8 [ %25, %22 ], [ 0, %2 ]
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 59
  br i1 %21, label %22, label %32

22:                                               ; preds = %15
  %23 = tail call zeroext i1 @_ZN8spvtools3opt24LocalSingleStoreElimPass15ProcessVariableEPNS0_11InstructionE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %4, %"class.spvtools::opt::Instruction"* %16) #12
  %24 = zext i1 %23 to i8
  %25 = or i8 %18, %24
  %26 = inttoptr i64 %17 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = inttoptr i64 %29 to %"class.spvtools::opt::Instruction"*
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %10, %30
  br i1 %31, label %32, label %15

32:                                               ; preds = %15, %22, %2
  %33 = phi i8 [ 0, %2 ], [ %18, %15 ], [ %25, %22 ]
  %34 = icmp ne i8 %33, 0
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i8* %10, i8* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #12
  %18 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %15, i64 %16) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #12
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %3
  %23 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.915"* %37, null
  br i1 %38, label %112, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %42, label %112, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  %45 = load i8, i8* %6, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i64, i64* %11, align 8
  %48 = zext i8 %45 to i64
  %49 = select i1 %46, i64 %47, i64 %48
  %50 = load i8*, i8** %9, align 8
  %51 = select i1 %46, i8* %50, i8* %13
  %52 = icmp eq i64 %49, 0
  br label %53

53:                                               ; preds = %43, %96
  %54 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %43 ], [ %98, %96 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.915"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %18
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %24, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %44
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %20
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %20
  br label %66

66:                                               ; preds = %60, %62, %64
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %33
  br i1 %68, label %69, label %112

69:                                               ; preds = %53, %66
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.915"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %54, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.915"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %74, i64 %77, i64 %78
  %80 = icmp eq i64 %79, %49
  br i1 %80, label %81, label %96

81:                                               ; preds = %69
  %82 = bitcast %"struct.std::__1::__hash_node_base.915"* %70 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %70 to i8*
  %85 = select i1 %74, i8* %83, i8* %84
  br i1 %74, label %92, label %86

86:                                               ; preds = %81
  br i1 %52, label %210, label %87

87:                                               ; preds = %86
  %88 = ptrtoint i8* %83 to i64
  %89 = trunc i64 %88 to i8
  %90 = load i8, i8* %51, align 1
  %91 = icmp eq i8 %90, %89
  br i1 %91, label %100, label %96

92:                                               ; preds = %81
  br i1 %52, label %210, label %93

93:                                               ; preds = %92
  %94 = call i32 @bcmp(i8* %85, i8* %51, i64 %49) #12
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %210, label %96

96:                                               ; preds = %107, %69, %87, %93
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %54, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %112, label %53

100:                                              ; preds = %87, %107
  %101 = phi i64 [ %104, %107 ], [ %78, %87 ]
  %102 = phi i8* [ %105, %107 ], [ %84, %87 ]
  %103 = phi i8* [ %108, %107 ], [ %51, %87 ]
  %104 = add i64 %101, -1
  %105 = getelementptr inbounds i8, i8* %102, i64 1
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %210, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds i8, i8* %103, i64 1
  %109 = load i8, i8* %105, align 1
  %110 = load i8, i8* %108, align 1
  %111 = icmp eq i8 %109, %110
  br i1 %111, label %100, label %96

112:                                              ; preds = %66, %96, %39, %32, %3
  %113 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %39 ], [ %33, %96 ], [ %33, %66 ]
  %114 = call i8* @_Znwm(i64 40) #13, !noalias !10
  %115 = getelementptr inbounds i8, i8* %114, i64 16
  %116 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1, !noalias !10
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %112
  %121 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %121, i64 24, i1 false) #12, !noalias !10
  br label %128

122:                                              ; preds = %112
  %123 = bitcast i8* %115 to %"class.std::__1::basic_string"*
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8, !noalias !10
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8, !noalias !10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %123, i8* %125, i64 %127) #12, !noalias !10
  br label %128

128:                                              ; preds = %120, %122
  %129 = getelementptr inbounds i8, i8* %114, i64 8
  %130 = bitcast i8* %129 to i64*
  store i64 %18, i64* %130, align 8, !noalias !10
  %131 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %131, align 8, !noalias !10
  %132 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 1
  %135 = uitofp i64 %134 to float
  %136 = uitofp i64 %20 to float
  %137 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %136
  %140 = fcmp olt float %139, %135
  %141 = or i1 %21, %140
  br i1 %141, label %142, label %165

142:                                              ; preds = %128
  %143 = shl i64 %20, 1
  %144 = icmp ult i64 %20, 3
  %145 = call i64 @llvm.ctpop.i64(i64 %20) #12, !range !3
  %146 = icmp ugt i64 %145, 1
  %147 = or i1 %144, %146
  %148 = zext i1 %147 to i64
  %149 = or i64 %143, %148
  %150 = fdiv float %135, %138
  %151 = call float @llvm.ceil.f32(float %150) #12
  %152 = fptoui float %151 to i64
  %153 = icmp ult i64 %149, %152
  %154 = select i1 %153, i64 %152, i64 %149
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %154)
  %155 = load i64, i64* %19, align 8
  %156 = call i64 @llvm.ctpop.i64(i64 %155) #12, !range !3
  %157 = icmp ugt i64 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %142
  %159 = add i64 %155, -1
  %160 = and i64 %159, %18
  br label %165

161:                                              ; preds = %142
  %162 = icmp ult i64 %18, %155
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = urem i64 %18, %155
  br label %165

165:                                              ; preds = %163, %161, %158, %128
  %166 = phi i64 [ %20, %128 ], [ %155, %158 ], [ %155, %161 ], [ %155, %163 ]
  %167 = phi i64 [ %113, %128 ], [ %160, %158 ], [ %18, %161 ], [ %164, %163 ]
  %168 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %168, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %169, i64 %167
  %171 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.915"* %171, null
  br i1 %172, label %173, label %199

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %"struct.std::__1::__hash_node_base.915"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast i8* %114 to i64*
  store i64 %176, i64* %177, align 8
  %178 = bitcast %"struct.std::__1::__hash_node_base.915"* %174 to i8**
  store i8* %114, i8** %178, align 8
  store %"struct.std::__1::__hash_node_base.915"* %174, %"struct.std::__1::__hash_node_base.915"** %170, align 8
  %179 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.915"* %179, null
  br i1 %180, label %206, label %181

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %179, i64 1
  %183 = bitcast %"struct.std::__1::__hash_node_base.915"* %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = call i64 @llvm.ctpop.i64(i64 %166) #12, !range !3
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %181
  %188 = add i64 %166, -1
  %189 = and i64 %184, %188
  br label %194

190:                                              ; preds = %181
  %191 = icmp ult i64 %184, %166
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %184, %166
  br label %194

194:                                              ; preds = %187, %190, %192
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %184, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %168, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %196, i64 %195
  %198 = bitcast %"struct.std::__1::__hash_node_base.915"** %197 to i8**
  br label %204

199:                                              ; preds = %165
  %200 = bitcast %"struct.std::__1::__hash_node_base.915"* %171 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast i8* %114 to i64*
  store i64 %201, i64* %202, align 8
  %203 = bitcast %"struct.std::__1::__hash_node_base.915"* %171 to i8**
  br label %204

204:                                              ; preds = %194, %199
  %205 = phi i8** [ %203, %199 ], [ %198, %194 ]
  store i8* %114, i8** %205, align 8
  br label %206

206:                                              ; preds = %204, %173
  %207 = bitcast i8* %114 to %"struct.std::__1::__hash_node_base.915"*
  %208 = load i64, i64* %132, align 8
  %209 = add i64 %208, 1
  store i64 %209, i64* %132, align 8
  br label %210

210:                                              ; preds = %86, %92, %93, %100, %206
  %211 = phi i8 [ 1, %206 ], [ 0, %100 ], [ 0, %93 ], [ 0, %92 ], [ 0, %86 ]
  %212 = phi %"struct.std::__1::__hash_node_base.915"* [ %207, %206 ], [ %54, %100 ], [ %54, %93 ], [ %54, %92 ], [ %54, %86 ]
  %213 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %212, 0
  %214 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %213, i8 %211, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %214
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %186, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !13

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %194, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %194, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %180
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %184, %180 ]
  %81 = phi i64 [ %71, %77 ], [ %182, %180 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %181, %180 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %180, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %118, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.915"* %102, null
  br i1 %103, label %166, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 3
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = zext i8 %108 to i64
  %114 = select i1 %109, i64 %112, i64 %113
  %115 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i8**
  %116 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i8*
  %117 = icmp eq i64 %114, 0
  br label %119

118:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %180

119:                                              ; preds = %104, %162
  %120 = phi %"struct.std::__1::__hash_node_base.915"* [ %102, %104 ], [ %164, %162 ]
  %121 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %104 ], [ %120, %162 ]
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %120, i64 2
  %123 = bitcast %"struct.std::__1::__hash_node_base.915"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %120, i64 3
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = zext i8 %125 to i64
  %131 = select i1 %126, i64 %129, i64 %130
  %132 = icmp eq i64 %114, %131
  br i1 %132, label %133, label %166

133:                                              ; preds = %119
  %134 = load i8*, i8** %115, align 8
  %135 = select i1 %109, i8* %134, i8* %116
  %136 = bitcast %"struct.std::__1::__hash_node_base.915"* %122 to i8**
  %137 = load i8*, i8** %136, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.915"* %122 to i8*
  %139 = select i1 %126, i8* %137, i8* %138
  br i1 %109, label %146, label %140

140:                                              ; preds = %133
  br i1 %117, label %162, label %141

141:                                              ; preds = %140
  %142 = ptrtoint i8* %134 to i64
  %143 = trunc i64 %142 to i8
  %144 = load i8, i8* %139, align 1
  %145 = icmp eq i8 %144, %143
  br i1 %145, label %147, label %166

146:                                              ; preds = %133
  br i1 %117, label %162, label %159

147:                                              ; preds = %141, %154
  %148 = phi i64 [ %151, %154 ], [ %113, %141 ]
  %149 = phi i8* [ %152, %154 ], [ %116, %141 ]
  %150 = phi i8* [ %155, %154 ], [ %139, %141 ]
  %151 = add i64 %148, -1
  %152 = getelementptr inbounds i8, i8* %149, i64 1
  %153 = icmp eq i64 %151, 0
  br i1 %153, label %162, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds i8, i8* %150, i64 1
  %156 = load i8, i8* %152, align 1
  %157 = load i8, i8* %155, align 1
  %158 = icmp eq i8 %156, %157
  br i1 %158, label %147, label %166

159:                                              ; preds = %146
  %160 = tail call i32 @bcmp(i8* %135, i8* %139, i64 %114) #12
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %166

162:                                              ; preds = %147, %140, %146, %159
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %120, i64 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.915"* %164, null
  br i1 %165, label %166, label %119

166:                                              ; preds = %159, %162, %119, %141, %154, %100
  %167 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %100 ], [ %121, %154 ], [ %121, %141 ], [ %121, %159 ], [ %120, %162 ], [ %121, %119 ]
  %168 = bitcast %"struct.std::__1::__hash_node_base.915"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %169, i64* %170, align 8
  %171 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %171, i64 %93
  %173 = bitcast %"struct.std::__1::__hash_node_base.915"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %168, align 8
  %176 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %176, i64 %93
  %178 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %178, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %179, align 8
  br label %180

180:                                              ; preds = %92, %166, %118
  %181 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %118 ], [ %82, %166 ], [ %80, %92 ]
  %182 = phi i64 [ %93, %118 ], [ %81, %166 ], [ %81, %92 ]
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %181, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.915"* %184, null
  br i1 %185, label %194, label %79

186:                                              ; preds = %2
  %187 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %187, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.915"** %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = bitcast %"struct.std::__1::__hash_node_base.915"** %188 to i8*
  tail call void @_ZdlPv(i8* %191) #13
  br label %192

192:                                              ; preds = %186, %190
  %193 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %193, align 8
  br label %194

194:                                              ; preds = %180, %70, %35, %192
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_24LocalSingleStoreElimPass8FindUsesEPKS4_PNS_6vectorIS5_NS_9allocatorIS5_EEEEE3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %"class.spvtools::opt::LocalSingleStoreElimPass"**
  %6 = load %"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::LocalSingleStoreElimPass"** %5, align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.947"**
  %8 = load %"class.std::__1::vector.947"*, %"class.std::__1::vector.947"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %8, i64 0, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::Instruction"** %10, %12
  %14 = ptrtoint %"class.spvtools::opt::Instruction"** %12 to i64
  br i1 %13, label %20, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %10 to i64*
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, i64 1
  %18 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  %19 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  store i64 %18, i64* %19, align 8
  br label %77

20:                                               ; preds = %2
  %21 = ptrtoint %"class.spvtools::opt::Instruction"** %10 to i64
  %22 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  %23 = bitcast %"class.std::__1::vector.947"* %8 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.947"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #14
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %11 to i64*
  %33 = sub i64 %14, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %31 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"**
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi %"class.spvtools::opt::Instruction"** [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, i64 %26
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, i64 %50
  %54 = ptrtoint %"class.spvtools::opt::Instruction"** %53 to i64
  %55 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %3, i64* %55, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, i64 1
  %57 = ptrtoint %"class.spvtools::opt::Instruction"** %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.947", %"class.std::__1::vector.947"* %8, i64 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %58, align 8
  %60 = load i64, i64* %22, align 8
  %61 = ptrtoint %"class.spvtools::opt::Instruction"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, i64 %64
  %66 = ptrtoint %"class.spvtools::opt::Instruction"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %49
  %69 = bitcast %"class.spvtools::opt::Instruction"** %65 to i8*
  %70 = bitcast %"class.spvtools::opt::Instruction"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #12
  %71 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %49
  %73 = phi %"class.spvtools::opt::Instruction"** [ %59, %49 ], [ %71, %68 ]
  store i64 %66, i64* %23, align 8
  store i64 %57, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.spvtools::opt::Instruction"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %75, %72, %15
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 83
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = load %"class.std::__1::vector.947"*, %"class.std::__1::vector.947"** %7, align 8
  tail call void @_ZNK8spvtools3opt24LocalSingleStoreElimPass8FindUsesEPKNS0_11InstructionEPNSt3__16vectorIPS2_NS5_9allocatorIS7_EEEE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %6, %"class.spvtools::opt::Instruction"* %1, %"class.std::__1::vector.947"* %82) #12
  br label %83

83:                                               ; preds = %77, %81
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_24LocalSingleStoreElimPass11FeedsAStoreES5_E3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 62, label %13
    i32 65, label %5
    i32 66, label %5
    i32 83, label %5
    i32 61, label %10
    i32 60, label %10
    i32 5, label %10
  ]

5:                                                ; preds = %2, %2, %2
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::LocalSingleStoreElimPass"**
  %7 = load %"class.spvtools::opt::LocalSingleStoreElimPass"*, %"class.spvtools::opt::LocalSingleStoreElimPass"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK8spvtools3opt24LocalSingleStoreElimPass11FeedsAStoreEPNS0_11InstructionE(%"class.spvtools::opt::LocalSingleStoreElimPass"* %7, %"class.spvtools::opt::Instruction"* %1) #12
  %9 = xor i1 %8, true
  br label %13

10:                                               ; preds = %2, %2, %2
  br label %13

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_Z21spvOpcodeIsDecoration6SpvOp_(i32 %4) #12
  br label %13

13:                                               ; preds = %2, %5, %10, %11
  %14 = phi i1 [ %12, %11 ], [ true, %10 ], [ %9, %5 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!9 = distinct !{!9, !5}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_"}
!13 = distinct !{!13, !5}
