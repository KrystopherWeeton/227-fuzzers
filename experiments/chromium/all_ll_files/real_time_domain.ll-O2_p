; ModuleID = '../../base/task/sequence_manager/real_time_domain.cc'
source_filename = "../../base/task/sequence_manager/real_time_domain.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.base::sequence_manager::internal::RealTimeDomain" = type { %"class.base::sequence_manager::TimeDomain", %"class.base::TickClock"* }
%"class.base::sequence_manager::TimeDomain" = type { i32 (...)**, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %"class.base::internal::IntrusiveHeap.137", i32, %class.scoped_refptr }
%"class.base::internal::IntrusiveHeap.137" = type { %"class.base::IntrusiveHeap.138" }
%"class.base::IntrusiveHeap.138" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp, base::internal::IntrusiveHeapImpl<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp> >::Impl" = type { %"class.std::__1::vector.140" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"*, %"class.std::__1::__compressed_pair.142" }
%"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp" = type { %"struct.base::sequence_manager::internal::DelayedWakeUp", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr, %class.scoped_refptr.17, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.17 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.18", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.18" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.19", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.24, i8, [7 x i8] }>
%class.scoped_refptr.24 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.25", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.25" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.26" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64 }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.29", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type { i64, i64, i64, %"struct.base::sequence_manager::Task"*, %"class.std::__1::unique_ptr.29" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.15, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.13 }
%class.scoped_refptr.13 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.14", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.15 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.16" }>
%"class.base::RefCountedThreadSafe.16" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.68", %"class.base::RepeatingCallback.69", %"class.absl::optional.70", i8, [7 x i8], %"class.absl::optional", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type <{ %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", %"class.base::sequence_manager::internal::WorkQueueSets"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, i64, %"class.base::HeapHandle", i8*, %"class.base::sequence_manager::EnqueueOrder", i32, [4 x i8] }>
%"class.base::sequence_manager::internal::WorkQueueSets" = type { i8*, %"struct.std::__1::array.38", %"class.base::sequence_manager::internal::WorkQueueSets::Observer"* }
%"struct.std::__1::array.38" = type { [7 x %"class.base::internal::IntrusiveHeap"] }
%"class.base::internal::IntrusiveHeap" = type { %"class.base::IntrusiveHeap" }
%"class.base::IntrusiveHeap" = type { %"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" }
%"struct.base::IntrusiveHeap<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder, base::internal::IntrusiveHeapImpl<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder>::GreaterUsingLessEqual, base::DefaultHeapHandleAccessor<base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder> >::Impl" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"*, %"class.std::__1::__compressed_pair.39" }
%"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder" = type { %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.base::sequence_manager::internal::WorkQueueSets::OldestTaskEnqueueOrder"* }
%"class.base::sequence_manager::internal::WorkQueueSets::Observer" = type { i32 (...)** }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector.47", %"struct.std::__1::less" }>
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.56" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type { %"class.base::trace_event::TraceLog::AsyncEnabledStateObserver", i8*, i8*, i8*, i8*, i64, i8*, i64, i8*, %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::trace_event::TraceLog::AsyncEnabledStateObserver" = type { i32 (...)** }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.61 }
%class.scoped_refptr.61 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.62", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.62" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.63" }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl.66" }
%"struct.std::__1::__cxx_atomic_impl.66" = type { %"struct.std::__1::__cxx_atomic_base_impl.67" }
%"struct.std::__1::__cxx_atomic_base_impl.67" = type { i8 }
%"class.base::RepeatingCallback.68" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.69" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr, %"class.std::__1::unique_ptr.7", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.1", i64, [64 x %"class.base::RepeatingCallback.147"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.7", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i64 }
%"class.base::RepeatingCallback.147" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.base::sequence_manager::TimeDomain::ScheduledDelayedWakeUp"* }
%class.scoped_refptr = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type { %"class.base::sequence_manager::SequenceManager", %"class.base::sequence_manager::internal::SequencedTaskSource", %"class.base::sequence_manager::internal::TaskQueueSelector::Observer", %"class.base::RunLoop::NestingObserver", %class.scoped_refptr, %"class.base::sequence_manager::internal::EnqueueOrderGenerator", %"class.std::__1::unique_ptr", %"struct.base::sequence_manager::SequenceManager::Settings", %"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings", i32, %"class.base::sequence_manager::internal::AtomicFlagSet", i32, %"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly", %"class.base::WeakPtrFactory.136" }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.base::sequence_manager::internal::SequencedTaskSource" = type { i32 (...)** }
%"class.base::sequence_manager::internal::TaskQueueSelector::Observer" = type { i32 (...)** }
%"class.base::RunLoop::NestingObserver" = type { i32 (...)** }
%"class.base::sequence_manager::internal::EnqueueOrderGenerator" = type { %"struct.std::__1::atomic.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::ThreadController"* }
%"class.base::sequence_manager::internal::ThreadController" = type { i32 (...)** }
%"struct.base::sequence_manager::SequenceManager::Settings" = type <{ i32, i8, [3 x i8], %"class.base::TickClock"*, i8, [7 x i8] }>
%"struct.base::sequence_manager::SequenceManager::MetricRecordingSettings" = type { double }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::MainThreadOnly" = type { i32, %"class.base::circular_deque", %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"*, %"struct.std::__1::array.75", %"class.std::__1::mersenne_twister_engine", %"class.std::__1::uniform_real_distribution", %"class.base::sequence_manager::internal::TaskQueueSelector", %"class.base::ObserverList", %"class.base::ObserverList.77", %"class.std::__1::set", %"class.std::__1::unique_ptr.90", i8, %"class.base::TimeTicks", %"class.std::__1::set.96", %"class.std::__1::map", %"class.std::__1::map", i8, i8, %"class.std::__1::deque", %"class.base::sequence_manager::SequenceManager::Observer"*, %"class.base::ObserverList.123", %"class.std::__1::multiset" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask"*, i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DeferredNonNestableTask" = type <{ %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i32, [4 x i8] }>
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"struct.std::__1::array.75" = type { [64 x i8] }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.std::__1::uniform_real_distribution" = type { %"class.std::__1::uniform_real_distribution<double>::param_type" }
%"class.std::__1::uniform_real_distribution<double>::param_type" = type { double, double }
%"class.base::sequence_manager::internal::TaskQueueSelector" = type { %"class.base::sequence_manager::internal::WorkQueueSets::Observer", %class.scoped_refptr, %"struct.std::__1::array.76", %"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker", %"class.base::sequence_manager::internal::WorkQueueSets", %"class.base::sequence_manager::internal::WorkQueueSets", i64, %"class.base::sequence_manager::internal::TaskQueueSelector::Observer"* }
%"struct.std::__1::array.76" = type { [7 x i32] }
%"class.base::sequence_manager::internal::TaskQueueSelector::ActivePriorityTracker" = type { i64 }
%"class.base::ObserverList.77" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList.78", i64, i32, [4 x i8] }>
%"class.base::LinkedList.78" = type { %"class.base::LinkNode.79" }
%"class.base::LinkNode.79" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.base::sequence_manager::internal::RealTimeDomain"* }
%"class.std::__1::set.96" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.106" }
%"class.std::__1::__tree.106" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::__split_buffer" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"**, %"class.std::__1::__compressed_pair.114" }
%"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask" = type { %"struct.base::sequence_manager::Task", %"class.base::sequence_manager::internal::TaskQueueImpl"*, i8*, %"class.base::sequence_manager::TaskQueue::TaskTiming", i8, i32 }
%"class.base::sequence_manager::TaskQueue::TaskTiming" = type { i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::ThreadTicks", %"class.base::ThreadTicks" }
%"class.base::ThreadTicks" = type { %"class.base::time_internal::TimeBase.113" }
%"class.base::time_internal::TimeBase.113" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.base::sequence_manager::internal::SequenceManagerImpl::ExecutingTask"** }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%"class.base::ObserverList.123" = type <{ %"class.std::__1::vector.54", %"class.base::LinkedList.124", i64, i32, [4 x i8] }>
%"class.base::LinkedList.124" = type { %"class.base::LinkNode.125" }
%"class.base::LinkNode.125" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::multiset" = type { %"class.std::__1::__tree.127" }
%"class.std::__1::__tree.127" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"class.base::WeakPtrFactory.136" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::sequence_manager::LazyNow" = type { %"class.base::TickClock"*, %"class.absl::optional" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.155", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.157", i64, i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.168" }
%"class.std::__1::list.168" = type { %"class.std::__1::__list_imp.169" }
%"class.std::__1::__list_imp.169" = type { %"struct.std::__1::__list_node_base.170", %"class.std::__1::__compressed_pair.171" }
%"struct.std::__1::__list_node_base.170" = type { %"struct.std::__1::__list_node_base.170"*, %"struct.std::__1::__list_node_base.170"* }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.27" }

$_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN4base16sequence_manager8internal14RealTimeDomainD0Ev = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [34 x i8] c"RealTimeDomain::DelayTillNextTask\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"delay_ms\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"RealTimeDomain\00", align 1
@_ZTVN4base16sequence_manager8internal14RealTimeDomainE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomainD2Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::internal::RealTimeDomain"*)* @_ZN4base16sequence_manager8internal14RealTimeDomainD0Ev to i8*), i8* bitcast (void (%"class.base::sequence_manager::LazyNow"*, %"class.base::sequence_manager::internal::RealTimeDomain"*)* @_ZNK4base16sequence_manager8internal14RealTimeDomain13CreateLazyNowEv to i8*), i8* bitcast (i64 (%"class.base::sequence_manager::internal::RealTimeDomain"*)* @_ZNK4base16sequence_manager8internal14RealTimeDomain3NowEv to i8*), i8* bitcast ({ i8, i64 } (%"class.base::sequence_manager::internal::RealTimeDomain"*, %"class.base::sequence_manager::LazyNow"*)* @_ZN4base16sequence_manager8internal14RealTimeDomain17DelayTillNextTaskEPNS0_7LazyNowE to i8*), i8* bitcast (i1 (%"class.base::sequence_manager::internal::RealTimeDomain"*, i1)* @_ZN4base16sequence_manager8internal14RealTimeDomain26MaybeFastForwardToNextTaskEb to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64)* @_ZN4base16sequence_manager10TimeDomain20SetNextDelayedDoWorkEPNS0_7LazyNowENS_9TimeTicksE to i8*), i8* bitcast (void (%"class.base::sequence_manager::TimeDomain"*)* @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv to i8*), i8* bitcast (i8* (%"class.base::sequence_manager::internal::RealTimeDomain"*)* @_ZNK4base16sequence_manager8internal14RealTimeDomain7GetNameEv to i8*), i8* bitcast (void (%"class.base::sequence_manager::internal::RealTimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*)* @_ZN4base16sequence_manager8internal14RealTimeDomain29OnRegisterWithSequenceManagerEPNS1_19SequenceManagerImplE to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base16sequence_manager8internal14RealTimeDomain29OnRegisterWithSequenceManagerEPNS1_19SequenceManagerImplE(%"class.base::sequence_manager::internal::RealTimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::RealTimeDomain", %"class.base::sequence_manager::internal::RealTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE(%"class.base::sequence_manager::TimeDomain"* %3, %"class.base::sequence_manager::internal::SequenceManagerImpl"* %1) #7
  %4 = bitcast %"class.base::sequence_manager::internal::SequenceManagerImpl"* %1 to %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)***
  %5 = load %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)**, %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)*, %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)** %5, i64 11
  %7 = load %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)*, %"class.base::TickClock"* (%"class.base::sequence_manager::internal::SequenceManagerImpl"*)** %6, align 8
  %8 = tail call %"class.base::TickClock"* %7(%"class.base::sequence_manager::internal::SequenceManagerImpl"* %1) #7
  %9 = getelementptr inbounds %"class.base::sequence_manager::internal::RealTimeDomain", %"class.base::sequence_manager::internal::RealTimeDomain"* %0, i64 0, i32 1
  store %"class.base::TickClock"* %8, %"class.base::TickClock"** %9, align 8
  ret void
}

declare void @_ZN4base16sequence_manager10TimeDomain29OnRegisterWithSequenceManagerEPNS0_8internal19SequenceManagerImplE(%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base16sequence_manager8internal14RealTimeDomain13CreateLazyNowEv(%"class.base::sequence_manager::LazyNow"* noalias sret, %"class.base::sequence_manager::internal::RealTimeDomain"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::sequence_manager::internal::RealTimeDomain", %"class.base::sequence_manager::internal::RealTimeDomain"* %1, i64 0, i32 1
  %4 = load %"class.base::TickClock"*, %"class.base::TickClock"** %3, align 8
  tail call void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"* %0, %"class.base::TickClock"* %4) #7
  ret void
}

declare void @_ZN4base16sequence_manager7LazyNowC1EPKNS_9TickClockE(%"class.base::sequence_manager::LazyNow"*, %"class.base::TickClock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4base16sequence_manager8internal14RealTimeDomain3NowEv(%"class.base::sequence_manager::internal::RealTimeDomain"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::RealTimeDomain", %"class.base::sequence_manager::internal::RealTimeDomain"* %0, i64 0, i32 1
  %3 = load %"class.base::TickClock"*, %"class.base::TickClock"** %2, align 8
  %4 = bitcast %"class.base::TickClock"* %3 to i64 (%"class.base::TickClock"*)***
  %5 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %5, i64 2
  %7 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::TickClock"* %3) #7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN4base16sequence_manager8internal14RealTimeDomain17DelayTillNextTaskEPNS0_7LazyNowE(%"class.base::sequence_manager::internal::RealTimeDomain"*, %"class.base::sequence_manager::LazyNow"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca double, align 8
  %5 = getelementptr inbounds %"class.base::sequence_manager::internal::RealTimeDomain", %"class.base::sequence_manager::internal::RealTimeDomain"* %0, i64 0, i32 0
  %6 = tail call { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"* %5) #7
  %7 = extractvalue { i8, i64 } %6, 0
  %8 = extractvalue { i8, i64 } %6, 1
  %9 = icmp eq i8 %7, 0
  br i1 %9, label %30, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"* %1) #7
  %12 = icmp sgt i64 %8, %11
  br i1 %12, label %13, label %30

13:                                               ; preds = %10
  %14 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %16 = sub nsw i64 %8, %11
  store i64 %16, i64* %15, align 8
  %17 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 111, i32 0), align 16
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %28, label %20, !prof !2

20:                                               ; preds = %13
  %21 = bitcast double* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  %22 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #7
  store double %22, double* %4, align 8
  %23 = call i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 111, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), double* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  %24 = load i64, i64* %15, align 8
  %25 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 111, i32 0), align 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %20
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 111, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 %23) #7
  br label %28

28:                                               ; preds = %13, %20, %27
  %29 = phi i64 [ %24, %20 ], [ %24, %27 ], [ %16, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  br label %30

30:                                               ; preds = %10, %2, %28
  %31 = phi i8 [ 0, %2 ], [ 1, %10 ], [ 1, %28 ]
  %32 = phi i64 [ undef, %2 ], [ 0, %10 ], [ %29, %28 ]
  %33 = insertvalue { i8, i64 } undef, i8 %31, 0
  %34 = insertvalue { i8, i64 } %33, i64 %32, 1
  ret { i8, i64 } %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { i8, i64 } @_ZNK4base16sequence_manager10TimeDomain20NextScheduledRunTimeEv(%"class.base::sequence_manager::TimeDomain"*) local_unnamed_addr #1

declare i64 @_ZN4base16sequence_manager7LazyNow3NowEv(%"class.base::sequence_manager::LazyNow"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIdEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, double* dereferenceable(8)) local_unnamed_addr #3 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #7
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 4, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast double* %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #7
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #7
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #7
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #7
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #7
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #8
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  ret i64 %22
}

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base16sequence_manager8internal14RealTimeDomain26MaybeFastForwardToNextTaskEb(%"class.base::sequence_manager::internal::RealTimeDomain"* nocapture readnone, i1 zeroext) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK4base16sequence_manager8internal14RealTimeDomain7GetNameEv(%"class.base::sequence_manager::internal::RealTimeDomain"* nocapture readnone) unnamed_addr #4 align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind
declare void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base16sequence_manager8internal14RealTimeDomainD0Ev(%"class.base::sequence_manager::internal::RealTimeDomain"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::sequence_manager::internal::RealTimeDomain", %"class.base::sequence_manager::internal::RealTimeDomain"* %0, i64 0, i32 0
  tail call void @_ZN4base16sequence_manager10TimeDomainD2Ev(%"class.base::sequence_manager::TimeDomain"* %2) #7
  %3 = bitcast %"class.base::sequence_manager::internal::RealTimeDomain"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

declare void @_ZN4base16sequence_manager10TimeDomain20SetNextDelayedDoWorkEPNS0_7LazyNowENS_9TimeTicksE(%"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::LazyNow"*, i64) unnamed_addr #1

declare void @_ZN4base16sequence_manager10TimeDomain13RequestDoWorkEv(%"class.base::sequence_manager::TimeDomain"*) unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
