; ModuleID = '../../ui/base/cursor/mojom/cursor_mojom_traits.cc'
source_filename = "../../ui/base/cursor/mojom/cursor_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::mojom::internal::Cursor_Data" = type { %"struct.mojo::internal::StructHeader", i32, float, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.21, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.21 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::Point" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.28 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.22, i32, i32 }
%class.sk_sp.22 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.28 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.skia::mojom::internal::BitmapN32_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.29", %"class.mojo_base::mojom::internal::BigBuffer_Data" }
%"struct.mojo::internal::Pointer.29" = type { i64 }
%"class.mojo_base::mojom::internal::BigBuffer_Data" = type { i32, i32, %"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" }
%"union.mojo_base::mojom::internal::BigBuffer_Data::Union_" = type { %"struct.mojo::internal::Pointer.30" }
%"struct.mojo::internal::Pointer.30" = type { i64 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ui5mojom14CursorDataViewENS1_6CursorEE4ReadES3_PS4_(%"class.ui::mojom::internal::Cursor_Data"*, %"class.mojo::Message"*, %"class.ui::Cursor"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.ui::Cursor", align 8
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %"class.ui::Cursor", align 8
  %7 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 1
  %9 = icmp eq i32 %8, 45
  br i1 %9, label %48, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.ui::Cursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #4
  call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* nonnull %4, i32 %8) #4
  %12 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 1
  %16 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 1, i32 0
  %17 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %16, align 8
  %18 = icmp eq %"class.ui::PlatformCursor"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %17, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %20) #4
  br label %21

21:                                               ; preds = %19, %10
  %22 = ptrtoint %"class.ui::PlatformCursor"* %17 to i64
  %23 = bitcast %class.scoped_refptr.21* %15 to i64*
  %24 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %15, i64 0, i32 0
  %25 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %24, align 8
  store i64 %22, i64* %23, align 8
  %26 = icmp eq %"class.ui::PlatformCursor"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %25, i64 0, i32 1
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #4
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %28, i64 -2
  %35 = bitcast %"class.base::RefCounted"* %34 to %"class.ui::PlatformCursor"*
  %36 = bitcast %"class.base::RefCounted"* %34 to void (%"class.ui::PlatformCursor"*)***
  %37 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %37, i64 1
  %39 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %38, align 8
  call void %39(%"class.ui::PlatformCursor"* nonnull %35) #4
  br label %40

40:                                               ; preds = %21, %27, %33
  %41 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 2
  %42 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 2
  %43 = bitcast float* %41 to i8*
  %44 = bitcast float* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 12, i1 false) #4
  %45 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 4
  %46 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %4, i64 0, i32 4
  %47 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %45, %class.SkBitmap* dereferenceable(56) %46) #4
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #4
  br label %127

48:                                               ; preds = %3
  %49 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %49) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %5) #4
  %50 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 3
  %51 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %50, i64 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  %54 = bitcast %"struct.mojo::internal::Pointer"* %50 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 %52
  br i1 %53, label %66, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds i8, i8* %55, i64 8
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 1
  %60 = getelementptr inbounds i8, i8* %55, i64 12
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 1
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %59 to i64
  br label %66

66:                                               ; preds = %56, %48
  %67 = phi i64 [ 0, %48 ], [ %64, %56 ]
  %68 = phi i64 [ 0, %48 ], [ %65, %56 ]
  %69 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 4
  %70 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %69, i64 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* nonnull %5) #4
  br label %79

74:                                               ; preds = %66
  %75 = bitcast %"struct.mojo::internal::Pointer.0"* %69 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 %71
  %77 = bitcast i8* %76 to %"class.skia::mojom::internal::BitmapN32_Data"*
  %78 = call zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"* nonnull %77, %"class.mojo::Message"* %1, %class.SkBitmap* nonnull %5) #4
  br i1 %78, label %79, label %125

79:                                               ; preds = %73, %74
  %80 = bitcast %"class.ui::Cursor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %80) #4
  call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* nonnull %6, i32 45) #4
  %81 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %6, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 0
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 1
  %85 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %6, i64 0, i32 1, i32 0
  %86 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %85, align 8
  %87 = icmp eq %"class.ui::PlatformCursor"* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %86, i64 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %89) #4
  br label %90

90:                                               ; preds = %88, %79
  %91 = ptrtoint %"class.ui::PlatformCursor"* %86 to i64
  %92 = bitcast %class.scoped_refptr.21* %84 to i64*
  %93 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %84, i64 0, i32 0
  %94 = load %"class.ui::PlatformCursor"*, %"class.ui::PlatformCursor"** %93, align 8
  store i64 %91, i64* %92, align 8
  %95 = icmp eq %"class.ui::PlatformCursor"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.ui::PlatformCursor", %"class.ui::PlatformCursor"* %94, i64 0, i32 1
  %98 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #4
  %99 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %97, i64 -2
  %104 = bitcast %"class.base::RefCounted"* %103 to %"class.ui::PlatformCursor"*
  %105 = bitcast %"class.base::RefCounted"* %103 to void (%"class.ui::PlatformCursor"*)***
  %106 = load void (%"class.ui::PlatformCursor"*)**, void (%"class.ui::PlatformCursor"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %106, i64 1
  %108 = load void (%"class.ui::PlatformCursor"*)*, void (%"class.ui::PlatformCursor"*)** %107, align 8
  call void %108(%"class.ui::PlatformCursor"* nonnull %104) #4
  br label %109

109:                                              ; preds = %90, %96, %102
  %110 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 2
  %111 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %6, i64 0, i32 2
  %112 = bitcast float* %110 to i8*
  %113 = bitcast float* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 12, i1 false) #4
  %114 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 4
  %115 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %6, i64 0, i32 4
  %116 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %114, %class.SkBitmap* dereferenceable(56) %115) #4
  call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %80) #4
  %117 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %114, %class.SkBitmap* nonnull dereferenceable(56) %5) #4
  %118 = getelementptr inbounds %"class.ui::Cursor", %"class.ui::Cursor"* %2, i64 0, i32 3
  %119 = bitcast %"class.gfx::Point"* %118 to i64*
  %120 = or i64 %68, %67
  store i64 %120, i64* %119, align 4
  %121 = getelementptr inbounds %"class.ui::mojom::internal::Cursor_Data", %"class.ui::mojom::internal::Cursor_Data"* %0, i64 0, i32 2
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 1
  %124 = bitcast float* %110 to i32*
  store i32 %123, i32* %124, align 8
  br label %125

125:                                              ; preds = %74, %109
  %126 = phi i1 [ true, %109 ], [ false, %74 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %49) #4
  br label %127

127:                                              ; preds = %125, %40
  %128 = phi i1 [ true, %40 ], [ %126, %125 ]
  ret i1 %128
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN4skia5mojom17BitmapN32DataViewE8SkBitmapE4ReadES3_PS4_(%"class.skia::mojom::internal::BitmapN32_Data"*, %"class.mojo::Message"*, %class.SkBitmap*) local_unnamed_addr #2

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
