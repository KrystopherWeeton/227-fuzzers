; ModuleID = '../../base/task/thread_pool/task_tracker.cc'
source_filename = "../../base/task/thread_pool/task_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.perfetto::Track" = type { i64, i64 }
%"struct.std::__1::atomic.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::internal::TaskTracker" = type { i32 (...)**, %"class.base::TaskAnnotator", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr", %"struct.std::__1::atomic", %"struct.std::__1::atomic.5", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.9", %"class.base::OnceCallback", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr.19", %"class.base::internal::TrackedRefFactory" }
%"class.base::TaskAnnotator" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::TaskTracker::State"* }
%"class.base::internal::TaskTracker::State" = type { i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.12, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.12 = type { i64 }
%union.anon.14 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::WaitableEvent"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.22, i8, [7 x i8] }>
%class.scoped_refptr.22 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.23", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.base::internal::TrackedRefFactory" = type { %"class.base::internal::TaskTracker"*, %"class.base::AtomicRefCount", [4 x i8], %"class.absl::optional", %"class.absl::optional.33" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.32 }
%union.anon.32 = type { %"class.base::WaitableEvent" }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.base::internal::TrackedRef" }
%"class.base::internal::TrackedRef" = type { %"class.base::internal::TaskTracker"*, %"class.base::internal::TrackedRefFactory"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector.91", %"class.std::__1::map", i64 }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.base::internal::Task" = type { %"struct.base::PendingTask.base", [3 x i8] }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }
%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::internal::RegisteredTaskSource" = type { %class.scoped_refptr.40, %"class.base::internal::TaskTracker"* }
%class.scoped_refptr.40 = type { %"class.base::internal::TaskSource"* }
%"class.base::internal::TaskSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.41", %"class.base::TaskTraits", %"struct.std::__1::atomic.43", [4 x i8], %"class.base::internal::CheckedLock", %"class.base::HeapHandle", %"class.base::TaskRunner"*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array.42" }
%"struct.std::__1::array.42" = type { [8 x i8] }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"class.base::HeapHandle" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.47", [4 x i8] }>
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, [7 x i8], %union.anon.52 }
%union.anon.52 = type { %"struct.base::internal::Task" }
%"class.base::internal::TaskSource::Transaction" = type { %"class.base::internal::TaskSource"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"struct.std::__1::pair.194" = type { %"struct.base::trace_event::TraceSourceLocation", i64 }
%"struct.base::trace_event::TraceSourceLocation" = type { i8*, i8*, i64 }
%"class.perfetto::EventContext" = type { %"class.protozero::MessageHandle", %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"* }
%"class.protozero::MessageHandle" = type { %"class.protozero::MessageHandleBase" }
%"class.protozero::MessageHandleBase" = type { %"class.protozero::Message"* }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.112" }
%"class.std::__1::list.112" = type { %"class.std::__1::__list_imp.113" }
%"class.std::__1::__list_imp.113" = type { %"struct.std::__1::__list_node_base.114", %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::__list_node_base.114" = type { %"struct.std::__1::__list_node_base.114"*, %"struct.std::__1::__list_node_base.114"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.perfetto::protos::pbzero::TrackEvent" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"struct.perfetto::internal::TrackEventIncrementalState" = type { i8, %"class.protozero::HeapBuffered", %"struct.std::__1::array.132", %"class.perfetto::base::FlatSet", %"class.std::__1::unordered_map" }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.119", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.121", i64, i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::InternedData.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::InternedData.base" = type { %"class.protozero::Message.base" }
%"struct.std::__1::array.132" = type { [32 x %"struct.std::__1::pair.133"] }
%"struct.std::__1::pair.133" = type { i64, %"class.std::__1::unique_ptr.134" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.perfetto::internal::BaseTrackEventInternedDataIndex"* }
%"class.perfetto::internal::BaseTrackEventInternedDataIndex" = type { i32 (...)** }
%"class.perfetto::base::FlatSet" = type { %"class.std::__1::vector.140" }
%"class.std::__1::vector.140" = type { %"class.std::__1::__vector_base.141" }
%"class.std::__1::__vector_base.141" = type { i64*, i64*, %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { i64* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.162", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { float }
%"class.base::trace_event::TrackEventHandle" = type { %"class.perfetto::protos::pbzero::TrackEvent"*, %"struct.perfetto::internal::TrackEventIncrementalState"*, %"class.base::trace_event::TrackEventHandle::CompletionListener"* }
%"class.base::trace_event::TrackEventHandle::CompletionListener" = type { i32 (...)** }
%"struct.base::internal::ExecutionEnvironment" = type { %"class.base::SequenceToken", %"class.base::internal::SequenceLocalStorageMap"* }
%"class.base::SequenceToken" = type { i32 }
%"class.base::internal::SequenceLocalStorageMap" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::pair"* }
%"class.base::ScopedSetSequenceTokenForCurrentThread" = type { %"class.base::SequenceToken", %"class.base::TaskToken" }
%"class.base::TaskToken" = type { i32 }
%"class.base::internal::ScopedSetTaskPriorityForCurrentThread" = type { i8 }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.base::internal::SequenceLocalStorageMap" }
%"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread" = type { i8 }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.base::SequencedTaskRunnerHandle" }
%"class.base::SequencedTaskRunnerHandle" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.47" }>
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.base::ThreadTaskRunnerHandle" }
%"class.base::ThreadTaskRunnerHandle" = type { %class.scoped_refptr.78, %"class.base::SequencedTaskRunnerHandle" }
%class.scoped_refptr.78 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.absl::optional.79" = type { %"class.absl::optional_internal::optional_data.80" }
%"class.absl::optional_internal::optional_data.80" = type { %"class.absl::optional_internal::optional_data_base.81" }
%"class.absl::optional_internal::optional_data_base.81" = type { %"class.absl::optional_internal::optional_data_dtor_base.82" }
%"class.absl::optional_internal::optional_data_dtor_base.82" = type { i8, %union.anon.83 }
%union.anon.83 = type { %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor" }
%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor" = type { %"class.base::TaskExecutor", %"class.base::SequencedTaskRunner"*, %"class.base::SingleThreadTaskRunner"*, %"class.base::TaskTraits"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%"struct.base::trace_event::InternedSourceLocation" = type { %"class.perfetto::TrackEventInternedDataIndex" }
%"class.perfetto::TrackEventInternedDataIndex" = type { %"class.perfetto::internal::BaseTrackEventInternedDataIndex", %"class.perfetto::BigInternedDataTraits::Index" }
%"class.perfetto::BigInternedDataTraits::Index" = type { %"class.std::__1::unordered_map.165" }
%"class.std::__1::unordered_map.165" = type { %"class.std::__1::__hash_table.166" }
%"class.std::__1::__hash_table.166" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.186", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.170"** }
%"struct.std::__1::__hash_node_base.170" = type { %"struct.std::__1::__hash_node_base.170"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator.172" }
%"class.std::__1::__bucket_list_deallocator.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.170" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"class.perfetto::protos::pbzero::InternedData" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.base::trace_event::AllocationContextTracker" = type <{ %"class.std::__1::vector.214", i8*, %"class.std::__1::vector.221", i32, [4 x i8] }>
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.base::trace_event::StackFrame"*, %"struct.base::trace_event::StackFrame"*, %"class.std::__1::__compressed_pair.216" }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.base::trace_event::StackFrame"* }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { i8**, i8**, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { i8** }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered.267" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage.268" }
%"class.protozero::RootMessage.268" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.base::internal::(anonymous namespace)::TaskTracingInfo" = type <{ %"class.base::trace_event::ConvertableToTraceFormat", %"class.base::TaskTraits", i8, i8*, %"class.base::SequenceToken", [4 x i8] }>
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.236" }
%"union.absl::variant_internal::DestructibleUnionImpl.236" = type { %"union.absl::variant_internal::DestructibleUnionImpl.237" }
%"union.absl::variant_internal::DestructibleUnionImpl.237" = type { %"union.absl::variant_internal::DestructibleUnionImpl.238" }
%"union.absl::variant_internal::DestructibleUnionImpl.238" = type { %"union.absl::variant_internal::DestructibleUnionImpl.239" }
%"union.absl::variant_internal::DestructibleUnionImpl.239" = type { %"class.std::__1::basic_string" }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }

$_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEED2Ev = comdat any

$_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEE24GetOrCreateIndexForFieldEPNS_8internal26TrackEventIncrementalStateE = comdat any

$_ZN8perfetto4base8BasenameEPKc = comdat any

$_ZN4base11trace_event22InternedSourceLocationD0Ev = comdat any

$_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED2Ev = comdat any

$_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_mEEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base11trace_event24ConvertableToTraceFormatD2Ev = comdat any

$_ZTVN4base11trace_event22InternedSourceLocationE = comdat any

$_ZTVN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEEE = comdat any

@_ZTVN4base8internal11TaskTrackerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::TaskTracker"*)* @_ZN4base8internal11TaskTrackerD2Ev to i8*), i8* bitcast (void (%"class.base::internal::TaskTracker"*)* @_ZN4base8internal11TaskTrackerD0Ev to i8*), i8* bitcast (void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)* @_ZN4base8internal11TaskTracker7RunTaskENS0_4TaskEPNS0_10TaskSourceERKNS_10TaskTraitsE to i8*), i8* bitcast (void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)* @_ZN4base8internal11TaskTracker21BeginCompleteShutdownERNS_13WaitableEventE to i8*)] }, align 8
@.str = private unnamed_addr constant [20 x i8] c"ThreadPool_PostTask\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"../../base/task/thread_pool/task_tracker.cc\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [20 x i8] c"ThreadPool_TaskInfo\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"task_info\00", align 1
@_ZN4base8internal12_GLOBAL__N_120kExecutionModeStringE = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [38 x i8] c"ThreadPool_RunTask_ContinueOnShutdown\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"ThreadPool_RunTask_SkipOnShutdown\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"ThreadPool_RunTask_BlockShutdown\00", align 1
@_ZN8switches19kLogBestEffortTasksE = external constant [0 x i8], align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"ThreadPool_RunTask\00", align 1
@_ZN20trace_event_internal13kDefaultTrackE = external local_unnamed_addr global %"struct.perfetto::Track", align 8
@.str.9 = private unnamed_addr constant [86 x i8] c"../../third_party/perfetto/include/perfetto/tracing/track_event_interned_data_index.h\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"%s (errno: %d, %s)\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"PERFETTO_CHECK(false)\00", align 1
@_ZTVN4base11trace_event22InternedSourceLocationE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.perfetto::TrackEventInternedDataIndex"*)* @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED2Ev to i8*), i8* bitcast (void (%"struct.base::trace_event::InternedSourceLocation"*)* @_ZN4base11trace_event22InternedSourceLocationD0Ev to i8*)] }, comdat, align 8
@_ZTVN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.perfetto::TrackEventInternedDataIndex"*)* @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED2Ev to i8*), i8* bitcast (void (%"class.perfetto::TrackEventInternedDataIndex"*)* @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED0Ev to i8*)] }, comdat, align 8
@_ZN4base11trace_event24AllocationContextTracker13capture_mode_E = external local_unnamed_addr global %"struct.std::__1::atomic.228", align 4
@.str.13 = private unnamed_addr constant [9 x i8] c"parallel\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"sequenced\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"single thread\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"job\00", align 1
@_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*)* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorD2Ev to i8*), i8* bitcast (void (%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*)* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorD0Ev to i8*), i8* bitcast (i1 (%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*, %"class.base::Location"*, %"class.base::TaskTraits"*, %"class.base::OnceCallback"*, i64)* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE to i8*), i8* bitcast (%"class.base::TaskRunner"* (%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*, %"class.base::TaskTraits"*)* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor16CreateTaskRunnerERKNS_10TaskTraitsE to i8*), i8* bitcast (%"class.base::SequencedTaskRunner"* (%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*, %"class.base::TaskTraits"*)* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor25CreateSequencedTaskRunnerERKNS_10TaskTraitsE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*, %"class.base::TaskTraits"*, i32)* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN4base8internal12_GLOBAL__N_115TaskTracingInfoE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*)* @_ZN4base11trace_event24ConvertableToTraceFormatD2Ev to i8*), i8* bitcast (void (%"class.base::internal::(anonymous namespace)::TaskTracingInfo"*)* @_ZN4base8internal12_GLOBAL__N_115TaskTracingInfoD0Ev to i8*), i8* bitcast (void (%"class.base::internal::(anonymous namespace)::TaskTracingInfo"*, %"class.std::__1::basic_string"*)* @_ZNK4base8internal12_GLOBAL__N_115TaskTracingInfo19AppendAsTraceFormatEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, align 8
@.str.17 = private unnamed_addr constant [14 x i8] c"task_priority\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"execution_mode\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"sequence_token\00", align 1

@_ZN4base8internal11TaskTrackerC1Ev = hidden unnamed_addr alias void (%"class.base::internal::TaskTracker"*), void (%"class.base::internal::TaskTracker"*)* @_ZN4base8internal11TaskTrackerC2Ev
@_ZN4base8internal11TaskTrackerD1Ev = hidden unnamed_addr alias void (%"class.base::internal::TaskTracker"*), void (%"class.base::internal::TaskTracker"*)* @_ZN4base8internal11TaskTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTrackerC2Ev(%"class.base::internal::TaskTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8internal11TaskTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 1
  tail call void @_ZN4base13TaskAnnotatorC1Ev(%"class.base::TaskAnnotator"* %3) #14
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #14
  %6 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 3
  %7 = tail call zeroext i1 @_ZN4base11CommandLine28InitializedForCurrentProcessEv() #14
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = tail call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #14
  %10 = tail call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %9, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8switches19kLogBestEffortTasksE, i64 0, i64 0)) #14
  %11 = zext i1 %10 to i8
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i8 [ 0, %1 ], [ %11, %8 ]
  store i8 %13, i8* %6, align 8
  %14 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4
  %15 = tail call i8* @_Znwm(i64 4) #15
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = ptrtoint i8* %15 to i64
  %18 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %21, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %22) #14
  %23 = tail call i8* @_Znwm(i64 64) #15
  %24 = bitcast i8* %23 to %"class.base::ConditionVariable"*
  %25 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %21, i64 0, i32 0
  tail call void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"* nonnull %24, %"class.base::Lock"* %25) #14
  %26 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::ConditionVariable"** %26 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %29 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %29) #14
  %30 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11
  %31 = bitcast %"class.std::__1::unique_ptr.19"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12
  %33 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %32, i64 0, i32 0
  store %"class.base::internal::TaskTracker"* %0, %"class.base::internal::TaskTracker"** %33, align 8
  %34 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = ptrtoint %"class.base::internal::TaskTracker"* %0 to i64
  %37 = ptrtoint %"class.base::internal::TrackedRefFactory"* %32 to i64
  %38 = atomicrmw add i32* %34, i32 1 monotonic
  %39 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %39, align 8
  %40 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = bitcast %"class.base::internal::TrackedRef"* %40 to i64*
  store i64 %36, i64* %41, align 8
  %42 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %43 = bitcast %"class.base::internal::TrackedRefFactory"** %42 to i64*
  store i64 %37, i64* %43, align 8
  ret void
}

declare void @_ZN4base13TaskAnnotatorC1Ev(%"class.base::TaskAnnotator"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTrackerD2Ev(%"class.base::internal::TaskTracker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4base8internal11TaskTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 12
  tail call void @_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEED2Ev(%"class.base::internal::TrackedRefFactory"* %3) #14
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %4, align 8
  store %"class.base::WaitableEvent"* null, %"class.base::WaitableEvent"** %4, align 8
  %6 = icmp eq %"class.base::WaitableEvent"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %5) #14
  %8 = bitcast %"class.base::WaitableEvent"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %10) #14
  %11 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #14
  %12 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %13 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %12, align 8
  store %"class.base::ConditionVariable"* null, %"class.base::ConditionVariable"** %12, align 8
  %14 = icmp eq %"class.base::ConditionVariable"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  tail call void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"* nonnull %13) #14
  %16 = bitcast %"class.base::ConditionVariable"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %9, %15
  %18 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %18) #14
  %19 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %19, align 8
  store %"class.base::internal::TaskTracker::State"* null, %"class.base::internal::TaskTracker::State"** %19, align 8
  %21 = icmp eq %"class.base::internal::TaskTracker::State"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.base::internal::TaskTracker::State"* %20 to i8*
  tail call void @_ZdlPv(i8* %23) #15
  br label %24

24:                                               ; preds = %17, %22
  %25 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #15
  br label %33

33:                                               ; preds = %24, %30
  %34 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 1
  tail call void @_ZN4base13TaskAnnotatorD1Ev(%"class.base::TaskAnnotator"* %34) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal17TrackedRefFactoryINS0_11TaskTrackerEED2Ev(%"class.base::internal::TrackedRefFactory"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %6) #14
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %8, i32 0, i32 1) #14
  store i8 1, i8* %2, align 8
  %9 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %32, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %14 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %13, align 8
  %15 = icmp eq %"class.base::internal::TrackedRefFactory"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %13, align 8
  %22 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %20
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %21, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %27) #14
  br label %28

28:                                               ; preds = %12, %16, %26
  store i8 0, i8* %9, align 8
  %29 = load i8, i8* %2, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32, !prof !3

31:                                               ; preds = %28
  tail call void @llvm.trap() #14
  unreachable

32:                                               ; preds = %7, %28
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* %8) #14
  %33 = load i8, i8* %9, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %37 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %36, align 8
  %38 = icmp eq %"class.base::internal::TrackedRefFactory"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = load %"class.base::internal::TrackedRefFactory"*, %"class.base::internal::TrackedRefFactory"** %36, align 8
  %45 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %43
  tail call void @llvm.trap() #14
  unreachable

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.base::internal::TrackedRefFactory", %"class.base::internal::TrackedRefFactory"* %44, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %50) #14
  br label %51

51:                                               ; preds = %49, %39, %35
  store i8 0, i8* %9, align 8
  br label %52

52:                                               ; preds = %32, %51
  %53 = load i8, i8* %2, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %52
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %8) #14
  store i8 0, i8* %2, align 8
  br label %56

56:                                               ; preds = %52, %55
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13TaskAnnotatorD1Ev(%"class.base::TaskAnnotator"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTrackerD0Ev(%"class.base::internal::TaskTracker"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base8internal11TaskTrackerD2Ev(%"class.base::internal::TaskTracker"* %0) #14
  %2 = bitcast %"class.base::internal::TaskTracker"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker13StartShutdownEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = tail call i8* @_Znwm(i64 16) #15
  %10 = bitcast i8* %9 to %"class.base::WaitableEvent"*
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* nonnull %10, i32 0, i32 1) #14
  %11 = ptrtoint i8* %9 to i64
  %12 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.19"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.19"* %12 to i64*
  store i64 %11, i64* %15, align 8
  %16 = icmp eq %"class.base::WaitableEvent"* %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %8
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* nonnull %14) #14
  %18 = bitcast %"class.base::WaitableEvent"* %14 to i8*
  tail call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %17, %8
  %20 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %20, align 8
  %22 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %21, i64 0, i32 0
  %23 = atomicrmw volatile add i32* %22, i32 1 monotonic
  %24 = add nsw i32 %23, 1
  %25 = icmp ugt i32 %24, 1
  br i1 %25, label %28, label %26

26:                                               ; preds = %19
  %27 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %13, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %27) #14
  br label %28

28:                                               ; preds = %19, %26
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker16CompleteShutdownEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %3 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %2, align 8
  %4 = bitcast %"class.base::internal::TaskTracker"* %0 to void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)***
  %5 = load void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)**, void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)** %5, i64 3
  %7 = load void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)*, void (%"class.base::internal::TaskTracker"*, %"class.base::WaitableEvent"*)** %6, align 8
  tail call void %7(%"class.base::internal::TaskTracker"* %0, %"class.base::WaitableEvent"* dereferenceable(16) %3) #14
  %8 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %2, align 8
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* %8) #14
  %9 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %10) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13, !prof !4

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %9, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %14) #14
  br label %15

15:                                               ; preds = %1, %13
  %16 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %16, align 8
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %17) #14
  %18 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #14
  tail call void @_ZN4base8internal11TaskTracker27CallFlushCallbackForTestingEv(%"class.base::internal::TaskTracker"* %0)
  ret void
}

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker27CallFlushCallbackForTestingEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %6 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #14
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !4

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #14
  br label %12

12:                                               ; preds = %1, %10
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 9, i32 0
  %15 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* nonnull %13, %"class.base::internal::CallbackBase"* dereferenceable(8) %14) #14
  %16 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #14
  %17 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %5, align 8
  %18 = icmp eq %"class.base::internal::BindStateBase"* %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %12
  %20 = ptrtoint %"class.base::internal::BindStateBase"* %17 to i64
  %21 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %20, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %17, i64 0, i32 1
  %25 = bitcast void ()** %24 to void (%"class.base::internal::BindStateBase"*)**
  %26 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %25, align 8
  call void %26(%"class.base::internal::BindStateBase"* nonnull %17) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %27

27:                                               ; preds = %12, %19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker15FlushForTestingEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %14 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %13, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %12, %30
  %19 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #14
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %18
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #14
  br label %22

22:                                               ; preds = %21, %18
  %23 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %16, align 8
  %24 = icmp eq %"class.base::WaitableEvent"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #14
  br label %30

27:                                               ; preds = %22
  %28 = tail call zeroext i1 @_ZN4base13WaitableEvent10IsSignaledEv(%"class.base::WaitableEvent"* nonnull %23) #14
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #14
  br i1 %28, label %34, label %30

30:                                               ; preds = %25, %27
  %31 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %17, align 8
  notail call void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"* %31) #14
  %32 = load atomic i32, i32* %9 acquire, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %18

34:                                               ; preds = %30, %27, %8
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal11TaskTracker18IsShutdownCompleteEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #14
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !4

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %9, align 8
  %11 = icmp eq %"class.base::WaitableEvent"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call zeroext i1 @_ZN4base13WaitableEvent10IsSignaledEv(%"class.base::WaitableEvent"* nonnull %10) #14
  br label %14

14:                                               ; preds = %8, %12
  %15 = phi i1 [ false, %8 ], [ %13, %12 ]
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret i1 %15
}

declare void @_ZN4base17ConditionVariable4WaitEv(%"class.base::ConditionVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker20FlushAsyncForTestingENS_12OnceCallbackIFvvEEE(%"class.base::internal::TaskTracker"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #14
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #14
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 9, i32 0
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %12 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %10, %"class.base::internal::CallbackBase"* dereferenceable(8) %11) #14
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #14
  %14 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %33, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %19 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %19) #14
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22, !prof !4

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %18, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %23) #14
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %26 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %25, align 8
  %27 = icmp eq %"class.base::WaitableEvent"* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #14
  br label %34

30:                                               ; preds = %24
  %31 = tail call zeroext i1 @_ZN4base13WaitableEvent10IsSignaledEv(%"class.base::WaitableEvent"* nonnull %26) #14
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %19) #14
  br i1 %31, label %33, label %34

33:                                               ; preds = %30, %9
  tail call void @_ZN4base8internal11TaskTracker27CallFlushCallbackForTestingEv(%"class.base::internal::TaskTracker"* %0)
  br label %34

34:                                               ; preds = %28, %33, %30
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker15SetCanRunPolicyENS0_12CanRunPolicyE(%"class.base::internal::TaskTracker"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %1, i32* %3 seq_cst, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal11TaskTracker12WillPostTaskEPNS0_4TaskENS_20TaskShutdownBehaviorE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %5, i64 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %25, label %10

10:                                               ; preds = %3
  %11 = icmp eq i8 %2, 2
  br i1 %11, label %12, label %28

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %18 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %18) #14
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21, !prof !4

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %17, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %22) #14
  br label %23

23:                                               ; preds = %16, %21
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #14
  br label %25

25:                                               ; preds = %3, %23
  %26 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 1
  %27 = bitcast %"struct.base::internal::Task"* %1 to %"struct.base::PendingTask"*
  tail call void @_ZN4base13TaskAnnotator13WillQueueTaskEPKcPNS_11PendingTaskES2_(%"class.base::TaskAnnotator"* %26, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"struct.base::PendingTask"* %27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0)) #14
  br label %28

28:                                               ; preds = %12, %10, %25
  %29 = phi i1 [ true, %25 ], [ false, %10 ], [ false, %12 ]
  ret i1 %29
}

declare void @_ZN4base13TaskAnnotator13WillQueueTaskEPKcPNS_11PendingTaskES2_(%"class.base::TaskAnnotator"*, i8*, %"struct.base::PendingTask"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal11TaskTracker15WillPostTaskNowERKNS0_4TaskENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* nocapture readonly, %"struct.base::internal::Task"* dereferenceable(112), i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %11, i64 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %47

16:                                               ; preds = %9, %3
  %17 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 3
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = icmp eq i8 %2, 0
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %47

22:                                               ; preds = %16
  %23 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 0) #14
  br i1 %23, label %24, label %47

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %25) #14
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i32 383, i32 0) #14
  %26 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %26 to %"class.std::__1::basic_ostream"*
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #14
  %29 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 1
  call void @_ZNK4base8Location8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::Location"* %29) #14
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %32 to i64
  %39 = select i1 %33, i8* %35, i8* %28
  %40 = select i1 %33, i64 %37, i64 %38
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* %39, i64 %40) #14
  %42 = load i8, i8* %31, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %24
  %45 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %45) #15
  br label %46

46:                                               ; preds = %24, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #14
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %25) #14
  br label %47

47:                                               ; preds = %9, %46, %22, %16
  %48 = phi i1 [ false, %9 ], [ true, %16 ], [ true, %22 ], [ true, %46 ]
  ret i1 %48
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare void @_ZNK4base8Location8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Location"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker18RegisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::RegisteredTaskSource"* noalias sret, %"class.base::internal::TaskTracker"*, %"class.base::internal::TaskSource"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %2, i64 0, i32 2, i32 2
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 127
  %7 = icmp eq i8 %6, 2
  %8 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %9, i64 0, i32 0
  br i1 %7, label %11, label %24

11:                                               ; preds = %3
  %12 = atomicrmw volatile add i32* %10, i32 2 monotonic
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 10
  %17 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %17) #14
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20, !prof !4

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %16, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %21) #14
  br label %22

22:                                               ; preds = %20, %15
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #14
  br label %28

24:                                               ; preds = %3
  %25 = load atomic i32, i32* %10 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24, %22, %11
  %29 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  tail call void @_ZN4base8internal20RegisteredTaskSourceC1E13scoped_refptrINS0_10TaskSourceEEPNS0_11TaskTrackerE(%"class.base::internal::RegisteredTaskSource"* %0, %"class.base::internal::TaskSource"* %2, %"class.base::internal::TaskTracker"* %1) #14
  br label %45

31:                                               ; preds = %24
  tail call void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"* %0, i8* null) #14
  %32 = icmp eq %"class.base::internal::TaskSource"* %2, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %2, i64 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %45

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.41", %"class.base::RefCountedThreadSafe.41"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe.41"* %39 to %"class.base::internal::TaskSource"*
  %41 = bitcast %"class.base::RefCountedThreadSafe.41"* %39 to void (%"class.base::internal::TaskSource"*)***
  %42 = load void (%"class.base::internal::TaskSource"*)**, void (%"class.base::internal::TaskSource"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %42, i64 4
  %44 = load void (%"class.base::internal::TaskSource"*)*, void (%"class.base::internal::TaskSource"*)** %43, align 8
  tail call void %44(%"class.base::internal::TaskSource"* nonnull %40) #14
  br label %45

45:                                               ; preds = %28, %31, %33, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal11TaskTracker21BeforeQueueTaskSourceENS_20TaskShutdownBehaviorE(%"class.base::internal::TaskTracker"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8 %1, 2
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %5, i64 0, i32 0
  br i1 %3, label %7, label %20

7:                                                ; preds = %2
  %8 = atomicrmw volatile add i32* %6, i32 2 monotonic
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %13) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16, !prof !4

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %17) #14
  br label %18

18:                                               ; preds = %11, %16
  %19 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #14
  br label %24

20:                                               ; preds = %2
  %21 = load atomic i32, i32* %6 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br label %24

24:                                               ; preds = %7, %18, %20
  %25 = phi i1 [ %23, %20 ], [ true, %18 ], [ true, %7 ]
  ret i1 %25
}

declare void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"*, i8*) unnamed_addr #1

declare void @_ZN4base8internal20RegisteredTaskSourceC1E13scoped_refptrINS0_10TaskSourceEEPNS0_11TaskTrackerE(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::TaskSource"*, %"class.base::internal::TaskTracker"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal11TaskTracker14CanRunPriorityENS_12TaskPriorityE(%"class.base::internal::TaskTracker"* nocapture readonly, i8 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 seq_cst, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = icmp eq i32 %4, 1
  %8 = icmp ne i8 %1, 0
  %9 = and i1 %8, %7
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi i1 [ true, %2 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker17RunAndPopNextTaskENS0_20RegisteredTaskSourceE(%"class.base::internal::RegisteredTaskSource"* noalias sret, %"class.base::internal::TaskTracker"*, %"class.base::internal::RegisteredTaskSource"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.48", align 8
  %5 = alloca %"class.base::TaskTraits", align 1
  %6 = alloca %"class.base::internal::TaskSource::Transaction", align 8
  %7 = alloca %"struct.base::internal::Task", align 8
  %8 = alloca %"class.base::TaskTraits", align 1
  %9 = alloca %"struct.base::internal::Task", align 8
  %10 = getelementptr inbounds %"class.base::internal::RegisteredTaskSource", %"class.base::internal::RegisteredTaskSource"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %11, i64 0, i32 2, i32 2
  %13 = load i8, i8* %12, align 1
  %14 = and i8 %13, 127
  switch i8 %14, label %45 [
    i8 2, label %46
    i8 1, label %15
    i8 0, label %38
  ]

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %17, i64 0, i32 0
  %19 = atomicrmw volatile add i32* %18, i32 2 monotonic
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %15
  %23 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %16, align 8
  %24 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %23, i64 0, i32 0
  %25 = atomicrmw volatile add i32* %24, i32 -2 monotonic
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %46

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 10
  %29 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %29) #14
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !4

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %28, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %33) #14
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %36 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %35, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %36) #14
  %37 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #14
  br label %46

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %39, align 8
  %41 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %40, i64 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br label %46

45:                                               ; preds = %3
  br label %46

46:                                               ; preds = %3, %15, %22, %34, %38, %45
  %47 = phi i1 [ false, %45 ], [ %44, %38 ], [ true, %3 ], [ true, %15 ], [ false, %22 ], [ false, %34 ]
  %48 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %48) #14
  %49 = bitcast %"class.absl::optional.48"* %4 to i64*
  store i64 -6148914691236517206, i64* %49, align 8
  store i8 0, i8* %48, align 8
  %50 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = bitcast %union.anon.52* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 112, i1 false) #14
  %52 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 0, i32 1, i32 0, i64 0
  %54 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 1
  %55 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 2
  %56 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %5, i64 0, i32 3
  store i8 0, i8* %52, align 1, !alias.scope !5
  %57 = bitcast i8* %53 to i64*
  store i64 0, i64* %57, align 1, !alias.scope !5
  store i8 2, i8* %54, align 1
  store i8 1, i8* %55, align 1
  %58 = bitcast i8* %56 to i32*
  store i32 0, i32* %58, align 1
  %59 = bitcast %"class.base::internal::TaskSource::Transaction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #14
  %60 = getelementptr inbounds %"class.base::internal::TaskSource::Transaction", %"class.base::internal::TaskSource::Transaction"* %6, i64 0, i32 0
  store %"class.base::internal::TaskSource"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::TaskSource"*), %"class.base::internal::TaskSource"** %60, align 8
  %61 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %10, align 8
  call void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* nonnull sret %6, %"class.base::internal::TaskSource"* %61) #14
  %62 = bitcast %"struct.base::internal::Task"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %62) #14
  br i1 %47, label %63, label %64

63:                                               ; preds = %46
  call void @_ZN4base8internal20RegisteredTaskSource8TakeTaskEPNS0_10TaskSource11TransactionE(%"struct.base::internal::Task"* nonnull sret %7, %"class.base::internal::RegisteredTaskSource"* %2, %"class.base::internal::TaskSource::Transaction"* nonnull %6) #14
  br label %65

64:                                               ; preds = %46
  call void @_ZN4base8internal20RegisteredTaskSource5ClearEPNS0_10TaskSource11TransactionE(%"struct.base::internal::Task"* nonnull sret %7, %"class.base::internal::RegisteredTaskSource"* %2, %"class.base::internal::TaskSource::Transaction"* nonnull %6) #14
  br label %65

65:                                               ; preds = %64, %63
  %66 = load i8, i8* %48, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %67, label %71, label %69

69:                                               ; preds = %65
  %70 = call dereferenceable(112) %"struct.base::internal::Task"* @_ZN4base8internal4TaskaSEOS1_(%"struct.base::internal::Task"* %68, %"struct.base::internal::Task"* nonnull dereferenceable(112) %7) #14
  br label %72

71:                                               ; preds = %65
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* %68, %"struct.base::internal::Task"* nonnull dereferenceable(112) %7) #14
  store i8 1, i8* %48, align 8
  br label %72

72:                                               ; preds = %69, %71
  %73 = bitcast %"struct.base::internal::Task"* %7 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %73) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %62) #14
  %74 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %74)
  %75 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %60, align 8, !noalias !8
  %76 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %75, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 %76, i64 9, i1 false) #14
  %77 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %8, i64 0, i32 1
  %78 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %75, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %77, i8* align 1 %78, i64 6, i1 false) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* nonnull align 1 %74, i64 15, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %74)
  call void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  %79 = load i8, i8* %48, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %72
  call void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"* nonnull %9, %"struct.base::internal::Task"* dereferenceable(112) %68) #14
  %82 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %10, align 8
  %83 = bitcast %"class.base::internal::TaskTracker"* %1 to void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)***
  %84 = load void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)**, void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)*, void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)** %84, i64 2
  %86 = load void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)*, void (%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"*)** %85, align 8
  call void %86(%"class.base::internal::TaskTracker"* %1, %"struct.base::internal::Task"* nonnull %9, %"class.base::internal::TaskSource"* %82, %"class.base::TaskTraits"* nonnull dereferenceable(15) %5) #14
  %87 = bitcast %"struct.base::internal::Task"* %9 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* nonnull %87) #14
  br label %88

88:                                               ; preds = %72, %81
  br i1 %47, label %89, label %112

89:                                               ; preds = %88
  %90 = load %"class.base::internal::TaskSource"*, %"class.base::internal::TaskSource"** %10, align 8
  %91 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %90, i64 0, i32 2, i32 2
  %92 = load i8, i8* %91, align 1
  %93 = and i8 %92, 127
  %94 = icmp eq i8 %93, 1
  br i1 %94, label %95, label %112

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %97 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %96, align 8
  %98 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %97, i64 0, i32 0
  %99 = atomicrmw volatile add i32* %98, i32 -2 monotonic
  %100 = icmp eq i32 %99, 3
  br i1 %100, label %101, label %112

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 10
  %103 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %103) #14
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106, !prof !4

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %102, i64 0, i32 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %107) #14
  br label %108

108:                                              ; preds = %106, %101
  %109 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %110 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %109, align 8
  call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %110) #14
  %111 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %103) #14
  br label %112

112:                                              ; preds = %108, %95, %89, %88
  %113 = call zeroext i1 @_ZN4base8internal20RegisteredTaskSource14DidProcessTaskEPNS0_10TaskSource11TransactionE(%"class.base::internal::RegisteredTaskSource"* %2, %"class.base::internal::TaskSource::Transaction"* null) #14
  br i1 %113, label %114, label %115

114:                                              ; preds = %112
  call void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"* %0, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16) %2) #14
  br label %116

115:                                              ; preds = %112
  call void @_ZN4base8internal20RegisteredTaskSourceC1EDn(%"class.base::internal::RegisteredTaskSource"* %0, i8* null) #14
  br label %116

116:                                              ; preds = %115, %114
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %52) #14
  %117 = load i8, i8* %48, align 8, !range !2
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"struct.base::internal::Task"* %68 to %"struct.base::PendingTask"*
  call void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"* %120) #14
  store i8 0, i8* %48, align 8
  br label %121

121:                                              ; preds = %116, %119
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %48) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal11TaskTracker13BeforeRunTaskENS_20TaskShutdownBehaviorE(%"class.base::internal::TaskTracker"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %33 [
    i8 2, label %34
    i8 1, label %3
    i8 0, label %26
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %5, i64 0, i32 0
  %7 = atomicrmw volatile add i32* %6, i32 2 monotonic
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %3
  %11 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %4, align 8
  %12 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %11, i64 0, i32 0
  %13 = atomicrmw volatile add i32* %12, i32 -2 monotonic
  %14 = icmp eq i32 %13, 3
  br i1 %14, label %15, label %34

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %17 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %17) #14
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20, !prof !4

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %16, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %21) #14
  br label %22

22:                                               ; preds = %20, %15
  %23 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %24 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %23, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %24) #14
  %25 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %17) #14
  br label %34

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %27, align 8
  %29 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %28, i64 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br label %34

33:                                               ; preds = %2
  br label %34

34:                                               ; preds = %3, %22, %10, %2, %33, %26
  %35 = phi i1 [ false, %33 ], [ %32, %26 ], [ true, %2 ], [ true, %3 ], [ false, %10 ], [ false, %22 ]
  ret i1 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base8internal10TaskSource16BeginTransactionEv(%"class.base::internal::TaskSource::Transaction"* sret, %"class.base::internal::TaskSource"*) local_unnamed_addr #1

declare void @_ZN4base8internal20RegisteredTaskSource8TakeTaskEPNS0_10TaskSource11TransactionE(%"struct.base::internal::Task"* sret, %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::TaskSource::Transaction"*) local_unnamed_addr #1

declare void @_ZN4base8internal20RegisteredTaskSource5ClearEPNS0_10TaskSource11TransactionE(%"struct.base::internal::Task"* sret, %"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::TaskSource::Transaction"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind
declare void @_ZN4base8internal10TaskSource11TransactionD1Ev(%"class.base::internal::TaskSource::Transaction"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal4TaskC1EOS1_(%"struct.base::internal::Task"*, %"struct.base::internal::Task"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker12AfterRunTaskENS_20TaskShutdownBehaviorE(%"class.base::internal::TaskTracker"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8 %1, 1
  br i1 %3, label %4, label %21

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %6, i64 0, i32 0
  %8 = atomicrmw volatile add i32* %7, i32 -2 monotonic
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %12) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %17, label %15, !prof !4

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %11, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %16) #14
  br label %17

17:                                               ; preds = %15, %10
  %18 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %19 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %18, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %19) #14
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %12) #14
  br label %21

21:                                               ; preds = %17, %4, %2
  ret void
}

declare zeroext i1 @_ZN4base8internal20RegisteredTaskSource14DidProcessTaskEPNS0_10TaskSource11TransactionE(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::TaskSource::Transaction"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal20RegisteredTaskSourceC1EOS1_(%"class.base::internal::RegisteredTaskSource"*, %"class.base::internal::RegisteredTaskSource"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal11TaskTracker18HasShutdownStartedEv(%"class.base::internal::TaskTracker"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %3, i64 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = and i32 %5, 1
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

declare zeroext i1 @_ZN4base13WaitableEvent10IsSignaledEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker7RunTaskENS0_4TaskEPNS0_10TaskSourceERKNS_10TaskTraitsE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*, %"class.base::internal::TaskSource"*, %"class.base::TaskTraits"* dereferenceable(15)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::trace_event::TraceArguments", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"struct.std::__1::pair.194", align 8
  %8 = alloca [15 x i8], align 1
  %9 = alloca %"struct.base::trace_event::TraceSourceLocation", align 16
  %10 = alloca %"class.perfetto::EventContext", align 8
  %11 = alloca %"class.base::trace_event::TrackEventHandle", align 8
  %12 = alloca %"class.perfetto::EventContext", align 8
  %13 = alloca %"class.perfetto::EventContext", align 8
  %14 = alloca %"class.base::trace_event::TrackEventHandle", align 8
  %15 = alloca %"class.perfetto::EventContext", align 8
  %16 = alloca %"struct.base::internal::ExecutionEnvironment", align 8
  %17 = alloca %"class.base::ScopedSetSequenceTokenForCurrentThread", align 4
  %18 = alloca %"class.base::internal::ScopedSetTaskPriorityForCurrentThread", align 1
  %19 = alloca %"class.absl::optional.62", align 8
  %20 = alloca %"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread", align 1
  %21 = alloca %"class.absl::optional.67", align 8
  %22 = alloca %"class.absl::optional.73", align 8
  %23 = alloca %"class.absl::optional.79", align 8
  %24 = alloca %"class.base::OnceCallback", align 8
  %25 = bitcast %"struct.base::internal::ExecutionEnvironment"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %26 = bitcast %"class.base::internal::TaskSource"* %2 to { i32, %"class.base::internal::SequenceLocalStorageMap"* } (%"class.base::internal::TaskSource"*)***
  %27 = load { i32, %"class.base::internal::SequenceLocalStorageMap"* } (%"class.base::internal::TaskSource"*)**, { i32, %"class.base::internal::SequenceLocalStorageMap"* } (%"class.base::internal::TaskSource"*)*** %26, align 8
  %28 = load { i32, %"class.base::internal::SequenceLocalStorageMap"* } (%"class.base::internal::TaskSource"*)*, { i32, %"class.base::internal::SequenceLocalStorageMap"* } (%"class.base::internal::TaskSource"*)** %27, align 8
  %29 = tail call { i32, %"class.base::internal::SequenceLocalStorageMap"* } %28(%"class.base::internal::TaskSource"* %2) #14
  %30 = getelementptr inbounds %"struct.base::internal::ExecutionEnvironment", %"struct.base::internal::ExecutionEnvironment"* %16, i64 0, i32 0, i32 0
  %31 = extractvalue { i32, %"class.base::internal::SequenceLocalStorageMap"* } %29, 0
  store i32 %31, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.base::internal::ExecutionEnvironment", %"struct.base::internal::ExecutionEnvironment"* %16, i64 0, i32 1
  %33 = extractvalue { i32, %"class.base::internal::SequenceLocalStorageMap"* } %29, 1
  store %"class.base::internal::SequenceLocalStorageMap"* %33, %"class.base::internal::SequenceLocalStorageMap"** %32, align 8
  %34 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 2
  %35 = bitcast %"class.base::ScopedSetSequenceTokenForCurrentThread"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.base::ScopedSetSequenceTokenForCurrentThread", %"class.base::ScopedSetSequenceTokenForCurrentThread"* %17, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %36, align 4
  %37 = getelementptr inbounds %"class.base::ScopedSetSequenceTokenForCurrentThread", %"class.base::ScopedSetSequenceTokenForCurrentThread"* %17, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.base::internal::ExecutionEnvironment", %"struct.base::internal::ExecutionEnvironment"* %16, i64 0, i32 0
  call void @_ZN4base38ScopedSetSequenceTokenForCurrentThreadC1ERKNS_13SequenceTokenE(%"class.base::ScopedSetSequenceTokenForCurrentThread"* nonnull %17, %"class.base::SequenceToken"* nonnull dereferenceable(4) %38) #14
  %39 = getelementptr inbounds %"class.base::internal::ScopedSetTaskPriorityForCurrentThread", %"class.base::internal::ScopedSetTaskPriorityForCurrentThread"* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #14
  store i8 -86, i8* %39, align 1
  %40 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 1
  %41 = load i8, i8* %40, align 1
  call void @_ZN4base8internal37ScopedSetTaskPriorityForCurrentThreadC1ENS_12TaskPriorityE(%"class.base::internal::ScopedSetTaskPriorityForCurrentThread"* nonnull %18, i8 zeroext %41) #14
  %42 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #14
  %43 = bitcast %"class.absl::optional.62"* %19 to i64*
  store i64 -6148914691236517206, i64* %43, align 8
  store i8 0, i8* %42, align 8
  %44 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %union.anon.66* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #14
  %46 = load %"class.base::internal::SequenceLocalStorageMap"*, %"class.base::internal::SequenceLocalStorageMap"** %32, align 8
  %47 = icmp eq %"class.base::internal::SequenceLocalStorageMap"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %4
  %49 = getelementptr inbounds %"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread", %"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %49) #14
  store i8 -86, i8* %49, align 1
  br label %56

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base8internal23SequenceLocalStorageMapC1Ev(%"class.base::internal::SequenceLocalStorageMap"* %51) #14
  store i8 1, i8* %42, align 8
  %52 = load %"class.base::internal::SequenceLocalStorageMap"*, %"class.base::internal::SequenceLocalStorageMap"** %32, align 8
  %53 = getelementptr inbounds %"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread", %"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread"* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #14
  store i8 -86, i8* %53, align 1
  %54 = icmp eq %"class.base::internal::SequenceLocalStorageMap"* %52, null
  %55 = select i1 %54, %"class.base::internal::SequenceLocalStorageMap"* %51, %"class.base::internal::SequenceLocalStorageMap"* %52
  br label %56

56:                                               ; preds = %50, %48
  %57 = phi i8* [ %49, %48 ], [ %53, %50 ]
  %58 = phi %"class.base::internal::SequenceLocalStorageMap"* [ %46, %48 ], [ %55, %50 ]
  call void @_ZN4base8internal48ScopedSetSequenceLocalStorageMapForCurrentThreadC1EPNS0_23SequenceLocalStorageMapE(%"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread"* nonnull %20, %"class.base::internal::SequenceLocalStorageMap"* %58) #14
  %59 = getelementptr inbounds %"class.absl::optional.67", %"class.absl::optional.67"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.absl::optional.73", %"class.absl::optional.73"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #14
  %62 = bitcast %"class.absl::optional.79"* %23 to i64*
  store i64 -6148914691236517206, i64* %62, align 8
  store i8 0, i8* %61, align 8
  %63 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %union.anon.83* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 32, i1 false) #14
  %65 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %2, i64 0, i32 8
  %66 = load i32, i32* %65, align 8
  switch i32 %66, label %115 [
    i32 2, label %88
    i32 1, label %67
  ]

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %2, i64 0, i32 7
  %69 = bitcast %"class.base::TaskRunner"** %68 to %"class.base::SequencedTaskRunner"**
  %70 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %69, align 8
  %71 = getelementptr inbounds %"class.absl::optional.67", %"class.absl::optional.67"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %72 = icmp eq %"class.base::SequencedTaskRunner"* %70, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %70, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 1 monotonic
  br label %76

76:                                               ; preds = %67, %73
  call void @_ZN4base25SequencedTaskRunnerHandleC1E13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::SequencedTaskRunnerHandle"* %71, %"class.base::SequencedTaskRunner"* %70) #14
  store i8 1, i8* %59, align 8
  %77 = bitcast %"class.base::TaskRunner"** %68 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load i8, i8* %61, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  call void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"* null) #14
  store i8 0, i8* %61, align 8
  br label %83

83:                                               ; preds = %76, %81
  %84 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %85 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %86 = bitcast %"class.base::SequencedTaskRunner"** %85 to i64*
  store i64 %78, i64* %86, align 8
  %87 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %87, align 8
  br label %110

88:                                               ; preds = %56
  %89 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %2, i64 0, i32 7
  %90 = bitcast %"class.base::TaskRunner"** %89 to %"class.base::SingleThreadTaskRunner"**
  %91 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %90, align 8
  %92 = getelementptr inbounds %"class.absl::optional.73", %"class.absl::optional.73"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %93 = icmp eq %"class.base::SingleThreadTaskRunner"* %91, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %91, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 1 monotonic
  br label %97

97:                                               ; preds = %88, %94
  call void @_ZN4base22ThreadTaskRunnerHandleC1E13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::ThreadTaskRunnerHandle"* %92, %"class.base::SingleThreadTaskRunner"* %91) #14
  store i8 1, i8* %60, align 8
  %98 = bitcast %"class.base::TaskRunner"** %89 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = load i8, i8* %61, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  call void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"* null) #14
  store i8 0, i8* %61, align 8
  br label %104

104:                                              ; preds = %97, %102
  %105 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %106 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %107 = bitcast %"class.base::SequencedTaskRunner"** %106 to i64*
  store i64 %99, i64* %107, align 8
  %108 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %109 = bitcast %"class.base::SingleThreadTaskRunner"** %108 to i64*
  store i64 %99, i64* %109, align 8
  br label %110

110:                                              ; preds = %83, %104
  %111 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %112 = ptrtoint %"class.base::TaskTraits"* %3 to i64
  %113 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %114 = bitcast %"class.base::TaskTraits"** %113 to i64*
  store i64 %112, i64* %114, align 8
  call void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"* %111) #14
  store i8 1, i8* %61, align 8
  br label %115

115:                                              ; preds = %110, %56
  %116 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), align 16
  %117 = and i8 %116, 25
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %220, label %119, !prof !4

119:                                              ; preds = %115
  %120 = bitcast %"class.perfetto::EventContext"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #14
  %121 = bitcast %"class.base::trace_event::TrackEventHandle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #14
  %122 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %11, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 24, i1 false) #14
  %123 = load i64, i64* getelementptr inbounds (%"struct.perfetto::Track", %"struct.perfetto::Track"* @_ZN20trace_event_internal13kDefaultTrackE, i64 0, i32 0), align 8
  call void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* nonnull sret %11, i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i64 0, i64 %123, i1 zeroext false) #14
  %124 = load %"class.perfetto::protos::pbzero::TrackEvent"*, %"class.perfetto::protos::pbzero::TrackEvent"** %122, align 8
  %125 = icmp eq %"class.perfetto::protos::pbzero::TrackEvent"* %124, null
  br i1 %125, label %219, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %11, i64 0, i32 1
  %128 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %12, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %130, %"class.protozero::Message"* null) #14
  %131 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %12, i64 0, i32 1
  store %"class.perfetto::protos::pbzero::TrackEvent"* %124, %"class.perfetto::protos::pbzero::TrackEvent"** %131, align 8
  %132 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %12, i64 0, i32 2
  %133 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %132 to i64*
  store i64 %129, i64* %133, align 8
  %134 = bitcast %"class.perfetto::EventContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #14
  %135 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %10, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* nonnull %135, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %130) #14
  %136 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %10, i64 0, i32 1
  %137 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %136 to i8*
  %138 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 8 %138, i64 16, i1 false) #14
  %139 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %136 to %"class.protozero::Message"**
  %140 = load %"class.protozero::Message"*, %"class.protozero::Message"** %139, align 8
  %141 = call %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"* %140, i32 5) #14
  %142 = bitcast %"struct.base::trace_event::TraceSourceLocation"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #14
  %143 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 1
  %144 = bitcast %"class.base::Location"* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8
  %146 = bitcast %"struct.base::trace_event::TraceSourceLocation"* %9 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %146, align 16
  %147 = getelementptr inbounds %"struct.base::trace_event::TraceSourceLocation", %"struct.base::trace_event::TraceSourceLocation"* %9, i64 0, i32 2
  %148 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 1, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = sext i32 %149 to i64
  store i64 %150, i64* %147, align 16
  %151 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %10, i64 0, i32 2
  %152 = load %"struct.perfetto::internal::TrackEventIncrementalState"*, %"struct.perfetto::internal::TrackEventIncrementalState"** %151, align 8
  %153 = call %"struct.base::trace_event::InternedSourceLocation"* @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEE24GetOrCreateIndexForFieldEPNS_8internal26TrackEventIncrementalStateE(%"struct.perfetto::internal::TrackEventIncrementalState"* %152) #14
  %154 = getelementptr inbounds %"struct.base::trace_event::InternedSourceLocation", %"struct.base::trace_event::InternedSourceLocation"* %153, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 1
  %157 = bitcast %"struct.std::__1::pair.194"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %157, i8* nonnull align 16 %142, i64 24, i1 false) #14
  %158 = getelementptr inbounds %"struct.std::__1::pair.194", %"struct.std::__1::pair.194"* %7, i64 0, i32 1
  store i64 %156, i64* %158, align 8, !alias.scope !11
  %159 = getelementptr inbounds %"struct.base::trace_event::InternedSourceLocation", %"struct.base::trace_event::InternedSourceLocation"* %153, i64 0, i32 0, i32 1, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::__1::pair.194", %"struct.std::__1::pair.194"* %7, i64 0, i32 0
  %161 = call { %"struct.std::__1::__hash_node_base.170"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_mEEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.166"* %159, %"struct.base::trace_event::TraceSourceLocation"* nonnull dereferenceable(24) %160, %"struct.std::__1::pair.194"* nonnull dereferenceable(32) %7) #14
  %162 = extractvalue { %"struct.std::__1::__hash_node_base.170"*, i8 } %161, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #14
  %163 = and i8 %162, 1
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %170, !prof !14

165:                                              ; preds = %126
  %166 = extractvalue { %"struct.std::__1::__hash_node_base.170"*, i8 } %161, 0
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %166, i64 5
  %168 = bitcast %"struct.std::__1::__hash_node_base.170"* %167 to i64*
  %169 = load i64, i64* %168, align 8
  br label %174

170:                                              ; preds = %126
  %171 = load %"struct.perfetto::internal::TrackEventIncrementalState"*, %"struct.perfetto::internal::TrackEventIncrementalState"** %151, align 8
  %172 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %171, i64 0, i32 1, i32 2
  %173 = bitcast %"class.protozero::RootMessage"* %172 to %"class.perfetto::protos::pbzero::InternedData"*
  call void @_ZN4base11trace_event22InternedSourceLocation3AddEPN8perfetto6protos6pbzero12InternedDataEmRKNS0_19TraceSourceLocationE(%"class.perfetto::protos::pbzero::InternedData"* %173, i64 %156, %"struct.base::trace_event::TraceSourceLocation"* nonnull dereferenceable(24) %9) #14
  br label %174

174:                                              ; preds = %170, %165
  %175 = phi i64 [ %169, %165 ], [ %156, %170 ]
  %176 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %141, i64 0, i32 2
  %177 = load %"class.protozero::Message"*, %"class.protozero::Message"** %176, align 8
  %178 = icmp eq %"class.protozero::Message"* %177, null
  br i1 %178, label %180, label %179

179:                                              ; preds = %174
  call void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"* %141) #14
  br label %180

180:                                              ; preds = %179, %174
  %181 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %181) #14
  %182 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %182, i8 -86, i64 14, i1 false) #14
  store i8 8, i8* %181, align 1
  %183 = icmp ugt i64 %175, 127
  %184 = trunc i64 %175 to i8
  br i1 %183, label %185, label %196

185:                                              ; preds = %180, %185
  %186 = phi i8 [ %193, %185 ], [ %184, %180 ]
  %187 = phi i64 [ %191, %185 ], [ %175, %180 ]
  %188 = phi i8* [ %190, %185 ], [ %182, %180 ]
  %189 = or i8 %186, -128
  %190 = getelementptr inbounds i8, i8* %188, i64 1
  store i8 %189, i8* %188, align 1
  %191 = lshr i64 %187, 7
  %192 = icmp ugt i64 %187, 16383
  %193 = trunc i64 %191 to i8
  br i1 %192, label %185, label %194

194:                                              ; preds = %185
  %195 = trunc i64 %191 to i8
  br label %196

196:                                              ; preds = %194, %180
  %197 = phi i8* [ %182, %180 ], [ %190, %194 ]
  %198 = phi i8 [ %184, %180 ], [ %195, %194 ]
  store i8 %198, i8* %197, align 1
  %199 = getelementptr inbounds i8, i8* %197, i64 1
  %200 = ptrtoint i8* %199 to i64
  %201 = ptrtoint [15 x i8]* %8 to i64
  %202 = sub i64 %200, %201
  %203 = trunc i64 %202 to i32
  %204 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %141, i64 0, i32 0
  %205 = load %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter"** %204, align 8
  %206 = and i64 %202, 4294967295
  %207 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %205, i64 0, i32 2
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds i8, i8* %208, i64 %206
  %210 = getelementptr inbounds %"class.protozero::ScatteredStreamWriter", %"class.protozero::ScatteredStreamWriter"* %205, i64 0, i32 1, i32 1
  %211 = load i8*, i8** %210, align 8
  %212 = icmp ugt i8* %209, %211
  br i1 %212, label %214, label %213, !prof !3

213:                                              ; preds = %196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* nonnull align 1 %181, i64 %206, i1 false) #14
  store i8* %209, i8** %207, align 8
  br label %215

214:                                              ; preds = %196
  call void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"* %205, i8* nonnull %181, i64 %206) #14
  br label %215

215:                                              ; preds = %214, %213
  %216 = getelementptr inbounds %"class.protozero::Message", %"class.protozero::Message"* %141, i64 0, i32 4
  %217 = load i32, i32* %216, align 8
  %218 = add i32 %217, %203
  store i32 %218, i32* %216, align 8
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %181) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #14
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #14
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %12) #14
  br label %219

219:                                              ; preds = %119, %215
  call void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #14
  br label %220

220:                                              ; preds = %115, %219
  %221 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 1, i32 1
  %222 = load i8*, i8** %221, align 8
  %223 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %230, label %225

225:                                              ; preds = %220
  %226 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %230, label %228, !prof !4

228:                                              ; preds = %225
  %229 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  call void @_ZN4base11trace_event24AllocationContextTracker22PushCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"* %229, i8* %222) #14
  br label %230

230:                                              ; preds = %220, %225, %228
  %231 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 1, i32 3
  %232 = load i8*, i8** %231, align 8
  %233 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %240, label %235

235:                                              ; preds = %230
  %236 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %237 = icmp eq i32 %236, 2
  br i1 %237, label %238, label %240, !prof !3

238:                                              ; preds = %235
  %239 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  call void @_ZN4base11trace_event24AllocationContextTracker20PushNativeStackFrameEPKv(%"class.base::trace_event::AllocationContextTracker"* %239, i8* %232) #14
  br label %240

240:                                              ; preds = %230, %235, %238
  %241 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 126, i32 0), align 16
  %242 = and i8 %241, 25
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %307, label %244, !prof !4

244:                                              ; preds = %240
  %245 = load i32, i32* %65, align 8
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZN4base8internal12_GLOBAL__N_120kExecutionModeStringE, i64 0, i64 %246
  %248 = call i8* @_Znwm(i64 40) #15
  %249 = bitcast i8** %247 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast i8* %248 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_115TaskTracingInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %251, align 8
  %252 = getelementptr inbounds i8, i8* %248, i64 8
  %253 = getelementptr inbounds %"class.base::TaskTraits", %"class.base::TaskTraits"* %3, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %252, i8* align 1 %253, i64 9, i1 false) #14
  %254 = getelementptr inbounds i8, i8* %248, i64 17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %254, i8* align 1 %40, i64 6, i1 false) #14
  %255 = getelementptr inbounds i8, i8* %248, i64 24
  %256 = bitcast i8* %255 to i64*
  store i64 %250, i64* %256, align 8
  %257 = getelementptr inbounds i8, i8* %248, i64 32
  %258 = bitcast i8* %257 to i32*
  %259 = load i32, i32* %30, align 8
  store i32 %259, i32* %258, align 8
  %260 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #14
  %261 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #14
  %262 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %263 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #14
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %264) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 40, i1 false) #14
  store i8 1, i8* %264, align 8
  %265 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 0
  store i8 8, i8* %265, align 1
  %266 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8** %266, align 8
  %267 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 0
  %268 = bitcast %"union.base::trace_event::TraceValue"* %267 to i8**
  store i8* %248, i8** %268, align 8
  %269 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 126, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %260, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %5, i32 0) #14
  %270 = load i8, i8* %264, align 8
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %306, label %272

272:                                              ; preds = %244, %301
  %273 = phi i64 [ %302, %301 ], [ 0, %244 ]
  %274 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = icmp eq i8 %275, 8
  br i1 %276, label %277, label %288

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %273
  %279 = bitcast %"union.base::trace_event::TraceValue"* %278 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %280 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %279, align 8
  %281 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %280, null
  br i1 %281, label %301, label %282

282:                                              ; preds = %277
  %283 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %280 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %284 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %284, i64 1
  %286 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %285, align 8
  call void %286(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %280) #14
  %287 = load i8, i8* %274, align 1
  br label %288

288:                                              ; preds = %282, %272
  %289 = phi i8 [ %275, %272 ], [ %287, %282 ]
  %290 = icmp eq i8 %289, 9
  br i1 %290, label %291, label %301

291:                                              ; preds = %288
  %292 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %273
  %293 = bitcast %"union.base::trace_event::TraceValue"* %292 to %"class.protozero::HeapBuffered.267"**
  %294 = load %"class.protozero::HeapBuffered.267"*, %"class.protozero::HeapBuffered.267"** %293, align 8
  %295 = icmp eq %"class.protozero::HeapBuffered.267"* %294, null
  br i1 %295, label %301, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.protozero::HeapBuffered.267", %"class.protozero::HeapBuffered.267"* %294, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %297) #14
  %298 = getelementptr inbounds %"class.protozero::HeapBuffered.267", %"class.protozero::HeapBuffered.267"* %294, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %298) #14
  %299 = getelementptr inbounds %"class.protozero::HeapBuffered.267", %"class.protozero::HeapBuffered.267"* %294, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %299) #14
  %300 = bitcast %"class.protozero::HeapBuffered.267"* %294 to i8*
  call void @_ZdlPv(i8* %300) #15
  br label %301

301:                                              ; preds = %296, %291, %288, %277
  %302 = add nuw nsw i64 %273, 1
  %303 = load i8, i8* %264, align 8
  %304 = zext i8 %303 to i64
  %305 = icmp ult i64 %302, %304
  br i1 %305, label %272, label %306

306:                                              ; preds = %301, %244
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %264) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #14
  br label %307

307:                                              ; preds = %240, %306
  %308 = phi i64 [ -6148914691236517206, %240 ], [ %269, %306 ]
  %309 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %240 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), %306 ]
  %310 = phi i8* [ null, %240 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 126, i32 0), %306 ]
  %311 = load i8, i8* %34, align 1
  %312 = and i8 %311, 127
  switch i8 %312, label %316 [
    i8 0, label %313
    i8 1, label %314
    i8 2, label %315
  ]

313:                                              ; preds = %307
  call void @_ZN4base8internal11TaskTracker21RunContinueOnShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"* %0, %"struct.base::internal::Task"* %1) #14
  br label %316

314:                                              ; preds = %307
  call void @_ZN4base8internal11TaskTracker17RunSkipOnShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"* %0, %"struct.base::internal::Task"* %1) #14
  br label %316

315:                                              ; preds = %307
  call void @_ZN4base8internal11TaskTracker16RunBlockShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"* %0, %"struct.base::internal::Task"* %1) #14
  br label %316

316:                                              ; preds = %307, %313, %314, %315
  %317 = bitcast %"class.base::OnceCallback"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #14
  %318 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %318, align 8
  %319 = getelementptr inbounds %"struct.base::internal::Task", %"struct.base::internal::Task"* %1, i64 0, i32 0, i32 0, i32 0
  %320 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 0, i32 0
  %321 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %319, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %320) #14
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %320) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #14
  %322 = icmp eq i8* %310, null
  br i1 %322, label %327, label %323

323:                                              ; preds = %316
  %324 = load i8, i8* %310, align 1
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %327, label %326

326:                                              ; preds = %323
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %310, i8* %309, i64 %308) #14
  br label %327

327:                                              ; preds = %316, %323, %326
  %328 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %335, label %330

330:                                              ; preds = %327
  %331 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %332 = icmp eq i32 %331, 2
  br i1 %332, label %333, label %335, !prof !3

333:                                              ; preds = %330
  %334 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  call void @_ZN4base11trace_event24AllocationContextTracker19PopNativeStackFrameEPKv(%"class.base::trace_event::AllocationContextTracker"* %334, i8* %232) #14
  br label %335

335:                                              ; preds = %327, %330, %333
  %336 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %343, label %338

338:                                              ; preds = %335
  %339 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.228", %"struct.std::__1::atomic.228"* @_ZN4base11trace_event24AllocationContextTracker13capture_mode_E, i64 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %343, label %341, !prof !4

341:                                              ; preds = %338
  %342 = call %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() #14
  call void @_ZN4base11trace_event24AllocationContextTracker21PopCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"* %342, i8* %222) #14
  br label %343

343:                                              ; preds = %335, %338, %341
  %344 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), align 16
  %345 = and i8 %344, 25
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %368, label %347, !prof !4

347:                                              ; preds = %343
  %348 = bitcast %"class.perfetto::EventContext"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %348) #14
  %349 = bitcast %"class.base::trace_event::TrackEventHandle"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %349) #14
  %350 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %14, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %349, i8 -86, i64 24, i1 false) #14
  %351 = load i64, i64* getelementptr inbounds (%"struct.perfetto::Track", %"struct.perfetto::Track"* @_ZN20trace_event_internal13kDefaultTrackE, i64 0, i32 0), align 8
  call void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* nonnull sret %14, i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 127, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0, i64 %351, i1 zeroext false) #14
  %352 = load %"class.perfetto::protos::pbzero::TrackEvent"*, %"class.perfetto::protos::pbzero::TrackEvent"** %350, align 8
  %353 = icmp eq %"class.perfetto::protos::pbzero::TrackEvent"* %352, null
  br i1 %353, label %367, label %354

354:                                              ; preds = %347
  %355 = getelementptr inbounds %"class.base::trace_event::TrackEventHandle", %"class.base::trace_event::TrackEventHandle"* %14, i64 0, i32 1
  %356 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %355 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %15, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"* nonnull %358, %"class.protozero::Message"* null) #14
  %359 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %15, i64 0, i32 1
  store %"class.perfetto::protos::pbzero::TrackEvent"* %352, %"class.perfetto::protos::pbzero::TrackEvent"** %359, align 8
  %360 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %15, i64 0, i32 2
  %361 = bitcast %"struct.perfetto::internal::TrackEventIncrementalState"** %360 to i64*
  store i64 %357, i64* %361, align 8
  %362 = bitcast %"class.perfetto::EventContext"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %362) #14
  %363 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %13, i64 0, i32 0, i32 0
  call void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"* nonnull %363, %"class.protozero::MessageHandleBase"* nonnull dereferenceable(8) %358) #14
  %364 = getelementptr inbounds %"class.perfetto::EventContext", %"class.perfetto::EventContext"* %13, i64 0, i32 1
  %365 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %364 to i8*
  %366 = bitcast %"class.perfetto::protos::pbzero::TrackEvent"** %359 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %365, i8* align 8 %366, i64 16, i1 false) #14
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %362) #14
  call void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"* nonnull %15) #14
  br label %367

367:                                              ; preds = %347, %354
  call void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %349) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %348) #14
  br label %368

368:                                              ; preds = %343, %367
  %369 = load i8, i8* %61, align 8, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %373, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.absl::optional.79", %"class.absl::optional.79"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %372, align 8
  call void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"* null) #14
  store i8 0, i8* %61, align 8
  br label %373

373:                                              ; preds = %368, %371
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #14
  %374 = load i8, i8* %60, align 8, !range !2
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %378, label %376

376:                                              ; preds = %373
  %377 = getelementptr inbounds %"class.absl::optional.73", %"class.absl::optional.73"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base22ThreadTaskRunnerHandleD1Ev(%"class.base::ThreadTaskRunnerHandle"* %377) #14
  store i8 0, i8* %60, align 8
  br label %378

378:                                              ; preds = %373, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #14
  %379 = load i8, i8* %59, align 8, !range !2
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %383, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %"class.absl::optional.67", %"class.absl::optional.67"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base25SequencedTaskRunnerHandleD1Ev(%"class.base::SequencedTaskRunnerHandle"* %382) #14
  store i8 0, i8* %59, align 8
  br label %383

383:                                              ; preds = %378, %381
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #14
  call void @_ZN4base8internal48ScopedSetSequenceLocalStorageMapForCurrentThreadD1Ev(%"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread"* nonnull %20) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %57) #14
  %384 = load i8, i8* %42, align 8, !range !2
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %388, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.absl::optional.62", %"class.absl::optional.62"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base8internal23SequenceLocalStorageMapD1Ev(%"class.base::internal::SequenceLocalStorageMap"* %387) #14
  store i8 0, i8* %42, align 8
  br label %388

388:                                              ; preds = %383, %386
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #14
  call void @_ZN4base8internal37ScopedSetTaskPriorityForCurrentThreadD1Ev(%"class.base::internal::ScopedSetTaskPriorityForCurrentThread"* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #14
  call void @_ZN4base38ScopedSetSequenceTokenForCurrentThreadD1Ev(%"class.base::ScopedSetSequenceTokenForCurrentThread"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #14
  ret void
}

declare void @_ZN4base38ScopedSetSequenceTokenForCurrentThreadC1ERKNS_13SequenceTokenE(%"class.base::ScopedSetSequenceTokenForCurrentThread"*, %"class.base::SequenceToken"* dereferenceable(4)) unnamed_addr #1

declare void @_ZN4base8internal37ScopedSetTaskPriorityForCurrentThreadC1ENS_12TaskPriorityE(%"class.base::internal::ScopedSetTaskPriorityForCurrentThread"*, i8 zeroext) unnamed_addr #1

declare void @_ZN4base8internal48ScopedSetSequenceLocalStorageMapForCurrentThreadC1EPNS0_23SequenceLocalStorageMapE(%"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread"*, %"class.base::internal::SequenceLocalStorageMap"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker27RunTaskWithShutdownBehaviorENS_20TaskShutdownBehaviorEPNS0_4TaskE(%"class.base::internal::TaskTracker"*, i8 zeroext, %"struct.base::internal::Task"*) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %7 [
    i8 0, label %4
    i8 1, label %5
    i8 2, label %6
  ]

4:                                                ; preds = %3
  tail call void @_ZN4base8internal11TaskTracker21RunContinueOnShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"* %0, %"struct.base::internal::Task"* %2)
  br label %7

5:                                                ; preds = %3
  tail call void @_ZN4base8internal11TaskTracker17RunSkipOnShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"* %0, %"struct.base::internal::Task"* %2)
  br label %7

6:                                                ; preds = %3
  tail call void @_ZN4base8internal11TaskTracker16RunBlockShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"* %0, %"struct.base::internal::Task"* %2)
  br label %7

7:                                                ; preds = %4, %5, %6, %3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal48ScopedSetSequenceLocalStorageMapForCurrentThreadD1Ev(%"class.base::internal::ScopedSetSequenceLocalStorageMapForCurrentThread"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal37ScopedSetTaskPriorityForCurrentThreadD1Ev(%"class.base::internal::ScopedSetTaskPriorityForCurrentThread"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base38ScopedSetSequenceTokenForCurrentThreadD1Ev(%"class.base::ScopedSetSequenceTokenForCurrentThread"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker21BeginCompleteShutdownERNS_13WaitableEventE(%"class.base::internal::TaskTracker"* nocapture, %"class.base::WaitableEvent"* nocapture dereferenceable(16)) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal11TaskTracker34HasIncompleteTaskSourcesForTestingEv(%"class.base::internal::TaskTracker"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker33DecrementNumItemsBlockingShutdownEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %2, align 8
  %4 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %3, i64 0, i32 0
  %5 = atomicrmw volatile add i32* %4, i32 -2 monotonic
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %9 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %9) #14
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !4

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %8, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %13) #14
  br label %14

14:                                               ; preds = %7, %12
  %15 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %16 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %15, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %16) #14
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %9) #14
  br label %18

18:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::internal::TaskSource"* @_ZN4base8internal11TaskTracker20UnregisterTaskSourceE13scoped_refptrINS0_10TaskSourceEE(%"class.base::internal::TaskTracker"*, %"class.base::internal::TaskSource"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskSource", %"class.base::internal::TaskSource"* %1, i64 0, i32 2, i32 2
  %4 = load i8, i8* %3, align 1
  %5 = and i8 %4, 127
  %6 = icmp eq i8 %5, 2
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::TaskTracker::State"*, %"class.base::internal::TaskTracker::State"** %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::TaskTracker::State", %"class.base::internal::TaskTracker::State"* %9, i64 0, i32 0
  %11 = atomicrmw volatile add i32* %10, i32 -2 monotonic
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %24

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %15) #14
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18, !prof !4

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %14, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %19) #14
  br label %20

20:                                               ; preds = %18, %13
  %21 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %22 = load %"class.base::WaitableEvent"*, %"class.base::WaitableEvent"** %21, align 8
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %22) #14
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %15) #14
  br label %24

24:                                               ; preds = %20, %7, %2
  %25 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 seq_cst
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %39

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %30 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %30) #14
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33, !prof !4

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %29, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %34) #14
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %37 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %36, align 8
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %37) #14
  %38 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %30) #14
  tail call void @_ZN4base8internal11TaskTracker27CallFlushCallbackForTestingEv(%"class.base::internal::TaskTracker"* %0) #14
  br label %39

39:                                               ; preds = %35, %24
  ret %"class.base::internal::TaskSource"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker33DecrementNumIncompleteTaskSourcesEv(%"class.base::internal::TaskTracker"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw sub i32* %2, i32 1 seq_cst
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #14
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !4

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::internal::CheckedLock", %"class.base::internal::CheckedLock"* %6, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #14
  br label %12

12:                                               ; preds = %5, %10
  %13 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %14 = load %"class.base::ConditionVariable"*, %"class.base::ConditionVariable"** %13, align 8
  tail call void @_ZN4base17ConditionVariable6SignalEv(%"class.base::ConditionVariable"* %14) #14
  %15 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #14
  tail call void @_ZN4base8internal11TaskTracker27CallFlushCallbackForTestingEv(%"class.base::internal::TaskTracker"* %0)
  br label %16

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker21RunContinueOnShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 1
  %4 = bitcast %"struct.base::internal::Task"* %1 to %"struct.base::PendingTask"*
  notail call void @_ZN4base13TaskAnnotator7RunTaskEPKcPNS_11PendingTaskE(%"class.base::TaskAnnotator"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), %"struct.base::PendingTask"* %4) #14
  ret void
}

declare void @_ZN4base13TaskAnnotator7RunTaskEPKcPNS_11PendingTaskE(%"class.base::TaskAnnotator"*, i8*, %"struct.base::PendingTask"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker17RunSkipOnShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 1
  %4 = bitcast %"struct.base::internal::Task"* %1 to %"struct.base::PendingTask"*
  notail call void @_ZN4base13TaskAnnotator7RunTaskEPKcPNS_11PendingTaskE(%"class.base::TaskAnnotator"* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), %"struct.base::PendingTask"* %4) #14
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base8internal11TaskTracker16RunBlockShutdownEPNS0_4TaskE(%"class.base::internal::TaskTracker"*, %"struct.base::internal::Task"*) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::TaskTracker", %"class.base::internal::TaskTracker"* %0, i64 0, i32 1
  %4 = bitcast %"struct.base::internal::Task"* %1 to %"struct.base::PendingTask"*
  notail call void @_ZN4base13TaskAnnotator7RunTaskEPKcPNS_11PendingTaskE(%"class.base::TaskAnnotator"* %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), %"struct.base::PendingTask"* %4) #14
  ret void
}

declare zeroext i1 @_ZN4base11CommandLine28InitializedForCurrentProcessEv() local_unnamed_addr #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare void @_ZN4base17ConditionVariableC1EPNS_4LockE(%"class.base::ConditionVariable"*, %"class.base::Lock"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN20trace_event_internal16CreateTrackEventEcPKhN8perfetto12StaticStringEN4base9TimeTicksEmb(%"class.base::trace_event::TrackEventHandle"* sret, i8 signext, i8*, i8*, i64, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8perfetto12EventContextD1Ev(%"class.perfetto::EventContext"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base11trace_event16TrackEventHandleD1Ev(%"class.base::trace_event::TrackEventHandle"*) unnamed_addr #3

declare void @_ZN9protozero7Message16EndNestedMessageEv(%"class.protozero::Message"*) local_unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriter18WriteBytesSlowPathEPKhm(%"class.protozero::ScatteredStreamWriter"*, i8*, i64) local_unnamed_addr #1

declare %"class.protozero::Message"* @_ZN9protozero7Message26BeginNestedMessageInternalEj(%"class.protozero::Message"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.base::trace_event::InternedSourceLocation"* @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEE24GetOrCreateIndexForFieldEPNS_8internal26TrackEventIncrementalStateE(%"struct.perfetto::internal::TrackEventIncrementalState"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 0
  %3 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %2, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 1
  %8 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %11, label %101

11:                                               ; preds = %246, %241, %236, %231, %226, %221, %216, %211, %206, %201, %196, %191, %186, %181, %176, %171, %166, %161, %156, %151, %146, %141, %136, %131, %126, %121, %116, %111, %106, %101, %6, %1
  %12 = phi %"struct.std::__1::pair.133"* [ %2, %1 ], [ %7, %6 ], [ %102, %101 ], [ %107, %106 ], [ %112, %111 ], [ %117, %116 ], [ %122, %121 ], [ %127, %126 ], [ %132, %131 ], [ %137, %136 ], [ %142, %141 ], [ %147, %146 ], [ %152, %151 ], [ %157, %156 ], [ %162, %161 ], [ %167, %166 ], [ %172, %171 ], [ %177, %176 ], [ %182, %181 ], [ %187, %186 ], [ %192, %191 ], [ %197, %196 ], [ %202, %201 ], [ %207, %206 ], [ %212, %211 ], [ %217, %216 ], [ %222, %221 ], [ %227, %226 ], [ %232, %231 ], [ %237, %236 ], [ %242, %241 ], [ %247, %246 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %32

14:                                               ; preds = %94, %92, %90, %88, %86, %84, %82, %80, %78, %76, %74, %72, %70, %68, %66, %64, %62, %60, %58, %56, %54, %52, %50, %48, %46, %44, %42, %40, %38, %36, %30, %251
  %15 = phi %"struct.std::__1::pair.133"* [ %2, %251 ], [ %7, %30 ], [ %102, %36 ], [ %107, %38 ], [ %112, %40 ], [ %117, %42 ], [ %122, %44 ], [ %127, %46 ], [ %132, %48 ], [ %137, %50 ], [ %142, %52 ], [ %147, %54 ], [ %152, %56 ], [ %157, %58 ], [ %162, %60 ], [ %167, %62 ], [ %172, %64 ], [ %177, %66 ], [ %182, %68 ], [ %187, %70 ], [ %192, %72 ], [ %197, %74 ], [ %202, %76 ], [ %207, %78 ], [ %212, %80 ], [ %217, %82 ], [ %222, %84 ], [ %227, %86 ], [ %232, %88 ], [ %237, %90 ], [ %242, %92 ], [ %247, %94 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %15, i64 0, i32 0
  store i64 4, i64* %16, align 8
  %17 = tail call i8* @_Znwm(i64 48) #15
  %18 = bitcast i8* %17 to i32 (...)***
  %19 = getelementptr inbounds i8, i8* %17, i64 40
  %20 = bitcast i8* %19 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 0, i64 48, i1 false)
  store i32 1065353216, i32* %20, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base11trace_event22InternedSourceLocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.perfetto::internal::BaseTrackEventInternedDataIndex"*, %"class.perfetto::internal::BaseTrackEventInternedDataIndex"** %21, align 8
  %23 = bitcast %"class.perfetto::internal::BaseTrackEventInternedDataIndex"** %21 to i8**
  store i8* %17, i8** %23, align 8
  %24 = icmp eq %"class.perfetto::internal::BaseTrackEventInternedDataIndex"* %22, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %14
  %26 = bitcast %"class.perfetto::internal::BaseTrackEventInternedDataIndex"* %22 to void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)***
  %27 = load void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)**, void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)*, void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)** %27, i64 1
  %29 = load void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)*, void (%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*)** %28, align 8
  tail call void %29(%"class.perfetto::internal::BaseTrackEventInternedDataIndex"* nonnull %22) #14
  br label %32

30:                                               ; preds = %251
  %31 = icmp eq i64 %9, 0
  br i1 %31, label %14, label %36

32:                                               ; preds = %25, %14, %11
  %33 = phi %"class.perfetto::internal::BaseTrackEventInternedDataIndex"** [ %13, %11 ], [ %21, %14 ], [ %21, %25 ]
  %34 = bitcast %"class.perfetto::internal::BaseTrackEventInternedDataIndex"** %33 to %"struct.base::trace_event::InternedSourceLocation"**
  %35 = load %"struct.base::trace_event::InternedSourceLocation"*, %"struct.base::trace_event::InternedSourceLocation"** %34, align 8
  ret %"struct.base::trace_event::InternedSourceLocation"* %35

36:                                               ; preds = %30
  %37 = icmp eq i64 %104, 0
  br i1 %37, label %14, label %38

38:                                               ; preds = %36
  %39 = icmp eq i64 %109, 0
  br i1 %39, label %14, label %40

40:                                               ; preds = %38
  %41 = icmp eq i64 %114, 0
  br i1 %41, label %14, label %42

42:                                               ; preds = %40
  %43 = icmp eq i64 %119, 0
  br i1 %43, label %14, label %44

44:                                               ; preds = %42
  %45 = icmp eq i64 %124, 0
  br i1 %45, label %14, label %46

46:                                               ; preds = %44
  %47 = icmp eq i64 %129, 0
  br i1 %47, label %14, label %48

48:                                               ; preds = %46
  %49 = icmp eq i64 %134, 0
  br i1 %49, label %14, label %50

50:                                               ; preds = %48
  %51 = icmp eq i64 %139, 0
  br i1 %51, label %14, label %52

52:                                               ; preds = %50
  %53 = icmp eq i64 %144, 0
  br i1 %53, label %14, label %54

54:                                               ; preds = %52
  %55 = icmp eq i64 %149, 0
  br i1 %55, label %14, label %56

56:                                               ; preds = %54
  %57 = icmp eq i64 %154, 0
  br i1 %57, label %14, label %58

58:                                               ; preds = %56
  %59 = icmp eq i64 %159, 0
  br i1 %59, label %14, label %60

60:                                               ; preds = %58
  %61 = icmp eq i64 %164, 0
  br i1 %61, label %14, label %62

62:                                               ; preds = %60
  %63 = icmp eq i64 %169, 0
  br i1 %63, label %14, label %64

64:                                               ; preds = %62
  %65 = icmp eq i64 %174, 0
  br i1 %65, label %14, label %66

66:                                               ; preds = %64
  %67 = icmp eq i64 %179, 0
  br i1 %67, label %14, label %68

68:                                               ; preds = %66
  %69 = icmp eq i64 %184, 0
  br i1 %69, label %14, label %70

70:                                               ; preds = %68
  %71 = icmp eq i64 %189, 0
  br i1 %71, label %14, label %72

72:                                               ; preds = %70
  %73 = icmp eq i64 %194, 0
  br i1 %73, label %14, label %74

74:                                               ; preds = %72
  %75 = icmp eq i64 %199, 0
  br i1 %75, label %14, label %76

76:                                               ; preds = %74
  %77 = icmp eq i64 %204, 0
  br i1 %77, label %14, label %78

78:                                               ; preds = %76
  %79 = icmp eq i64 %209, 0
  br i1 %79, label %14, label %80

80:                                               ; preds = %78
  %81 = icmp eq i64 %214, 0
  br i1 %81, label %14, label %82

82:                                               ; preds = %80
  %83 = icmp eq i64 %219, 0
  br i1 %83, label %14, label %84

84:                                               ; preds = %82
  %85 = icmp eq i64 %224, 0
  br i1 %85, label %14, label %86

86:                                               ; preds = %84
  %87 = icmp eq i64 %229, 0
  br i1 %87, label %14, label %88

88:                                               ; preds = %86
  %89 = icmp eq i64 %234, 0
  br i1 %89, label %14, label %90

90:                                               ; preds = %88
  %91 = icmp eq i64 %239, 0
  br i1 %91, label %14, label %92

92:                                               ; preds = %90
  %93 = icmp eq i64 %244, 0
  br i1 %93, label %14, label %94

94:                                               ; preds = %92
  %95 = icmp eq i64 %249, 0
  br i1 %95, label %14, label %96

96:                                               ; preds = %94
  %97 = tail call i8* @_ZN8perfetto4base8BasenameEPKc(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.9, i64 0, i64 0))
  %98 = tail call i32* @__errno_location() #16
  %99 = load i32, i32* %98, align 4
  %100 = tail call i8* @strerror(i32 %99) #14
  tail call void (i32, i8*, i32, i8*, ...) @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32 3, i8* %97, i32 244, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i32 %99, i8* %100) #14
  tail call void @llvm.trap()
  unreachable

101:                                              ; preds = %6
  %102 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 2
  %103 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %102, i64 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, 4
  br i1 %105, label %11, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 3
  %108 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %107, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 4
  br i1 %110, label %11, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 4
  %113 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %112, i64 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 4
  br i1 %115, label %11, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 5
  %118 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %117, i64 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, 4
  br i1 %120, label %11, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 6
  %123 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %122, i64 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = icmp eq i64 %124, 4
  br i1 %125, label %11, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 7
  %128 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %127, i64 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 4
  br i1 %130, label %11, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %132, i64 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 4
  br i1 %135, label %11, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 9
  %138 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %137, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, 4
  br i1 %140, label %11, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 10
  %143 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %142, i64 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = icmp eq i64 %144, 4
  br i1 %145, label %11, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 11
  %148 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %147, i64 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %149, 4
  br i1 %150, label %11, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 12
  %153 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %152, i64 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, 4
  br i1 %155, label %11, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 13
  %158 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %157, i64 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = icmp eq i64 %159, 4
  br i1 %160, label %11, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 14
  %163 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %162, i64 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, 4
  br i1 %165, label %11, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 15
  %168 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %167, i64 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %169, 4
  br i1 %170, label %11, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 16
  %173 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %172, i64 0, i32 0
  %174 = load i64, i64* %173, align 8
  %175 = icmp eq i64 %174, 4
  br i1 %175, label %11, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 17
  %178 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %177, i64 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 4
  br i1 %180, label %11, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 18
  %183 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %182, i64 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp eq i64 %184, 4
  br i1 %185, label %11, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 19
  %188 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %187, i64 0, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = icmp eq i64 %189, 4
  br i1 %190, label %11, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 20
  %193 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %192, i64 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp eq i64 %194, 4
  br i1 %195, label %11, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 21
  %198 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %197, i64 0, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 4
  br i1 %200, label %11, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 22
  %203 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %202, i64 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = icmp eq i64 %204, 4
  br i1 %205, label %11, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 23
  %208 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %207, i64 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = icmp eq i64 %209, 4
  br i1 %210, label %11, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 24
  %213 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %212, i64 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = icmp eq i64 %214, 4
  br i1 %215, label %11, label %216

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 25
  %218 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %217, i64 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = icmp eq i64 %219, 4
  br i1 %220, label %11, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 26
  %223 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %222, i64 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = icmp eq i64 %224, 4
  br i1 %225, label %11, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 27
  %228 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %227, i64 0, i32 0
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i64 %229, 4
  br i1 %230, label %11, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 28
  %233 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %232, i64 0, i32 0
  %234 = load i64, i64* %233, align 8
  %235 = icmp eq i64 %234, 4
  br i1 %235, label %11, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 29
  %238 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %237, i64 0, i32 0
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, 4
  br i1 %240, label %11, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 30
  %243 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %242, i64 0, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = icmp eq i64 %244, 4
  br i1 %245, label %11, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"struct.perfetto::internal::TrackEventIncrementalState", %"struct.perfetto::internal::TrackEventIncrementalState"* %0, i64 0, i32 2, i32 0, i64 31
  %248 = getelementptr inbounds %"struct.std::__1::pair.133", %"struct.std::__1::pair.133"* %247, i64 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = icmp eq i64 %249, 4
  br i1 %250, label %11, label %251

251:                                              ; preds = %246
  %252 = icmp eq i64 %4, 0
  br i1 %252, label %14, label %30
}

declare void @_ZN4base11trace_event22InternedSourceLocation3AddEPN8perfetto6protos6pbzero12InternedDataEmRKNS0_19TraceSourceLocationE(%"class.perfetto::protos::pbzero::InternedData"*, i64, %"struct.base::trace_event::TraceSourceLocation"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8perfetto4base10LogMessageENS0_6LogLevEPKciS3_z(i32, i8*, i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN8perfetto4base8BasenameEPKc(i8*) local_unnamed_addr #0 comdat {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds i8, i8* %3, i64 1
  br i1 %5, label %7, label %2

7:                                                ; preds = %2, %7
  %8 = phi i8* [ %11, %7 ], [ %0, %2 ]
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds i8, i8* %8, i64 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7, %15
  %13 = phi i8* [ %16, %15 ], [ %3, %7 ]
  %14 = icmp ugt i8* %13, %0
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, i8* %13, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 47
  %19 = icmp ult i8* %16, %8
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %12

21:                                               ; preds = %12, %15
  ret i8* %13
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event22InternedSourceLocationD0Ev(%"struct.base::trace_event::InternedSourceLocation"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::trace_event::InternedSourceLocation", %"struct.base::trace_event::InternedSourceLocation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.base::trace_event::InternedSourceLocation", %"struct.base::trace_event::InternedSourceLocation"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.170"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.170"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.170"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base.170"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"struct.base::trace_event::InternedSourceLocation", %"struct.base::trace_event::InternedSourceLocation"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.170"** null, %"struct.std::__1::__hash_node_base.170"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.170"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.170"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"struct.base::trace_event::InternedSourceLocation", %"struct.base::trace_event::InternedSourceLocation"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN8perfetto8internal31BaseTrackEventInternedDataIndexD2Ev(%"class.perfetto::internal::BaseTrackEventInternedDataIndex"* %19) #14
  %20 = bitcast %"struct.base::trace_event::InternedSourceLocation"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED2Ev(%"class.perfetto::TrackEventInternedDataIndex"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.170"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.170"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.170"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base.170"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.170"** null, %"struct.std::__1::__hash_node_base.170"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.170"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.170"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 0
  tail call void @_ZN8perfetto8internal31BaseTrackEventInternedDataIndexD2Ev(%"class.perfetto::internal::BaseTrackEventInternedDataIndex"* %19) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEED0Ev(%"class.perfetto::TrackEventInternedDataIndex"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8perfetto27TrackEventInternedDataIndexIN4base11trace_event22InternedSourceLocationELm4ENS2_19TraceSourceLocationENS_21BigInternedDataTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.170"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.170"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.170"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base.170"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.170"** null, %"struct.std::__1::__hash_node_base.170"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.170"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.170"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.perfetto::TrackEventInternedDataIndex", %"class.perfetto::TrackEventInternedDataIndex"* %0, i64 0, i32 0
  tail call void @_ZN8perfetto8internal31BaseTrackEventInternedDataIndexD2Ev(%"class.perfetto::internal::BaseTrackEventInternedDataIndex"* %19) #14
  %20 = bitcast %"class.perfetto::TrackEventInternedDataIndex"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8perfetto8internal31BaseTrackEventInternedDataIndexD2Ev(%"class.perfetto::internal::BaseTrackEventInternedDataIndex"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.170"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JNS_4pairIS4_mEEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.166"*, %"struct.base::trace_event::TraceSourceLocation"* dereferenceable(24), %"struct.std::__1::pair.194"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"struct.base::trace_event::TraceSourceLocation"* %1 to i8*
  %5 = tail call i64 @_ZN4base8FastHashENS_4spanIKhLm18446744073709551615EEE(i64 24, i8* %4) #14
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %73, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !15
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.170"* %24, null
  br i1 %25, label %73, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.170"* %28, null
  br i1 %29, label %73, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  %32 = getelementptr inbounds %"struct.base::trace_event::TraceSourceLocation", %"struct.base::trace_event::TraceSourceLocation"* %1, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"struct.base::trace_event::TraceSourceLocation", %"struct.base::trace_event::TraceSourceLocation"* %1, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.base::trace_event::TraceSourceLocation", %"struct.base::trace_event::TraceSourceLocation"* %1, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %30, %69
  %39 = phi %"struct.std::__1::__hash_node_base.170"* [ %28, %30 ], [ %71, %69 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base.170"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %11, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %31
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %7
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %7
  br label %51

51:                                               ; preds = %45, %47, %49
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %54, label %73

54:                                               ; preds = %38, %51
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %39, i64 3
  %56 = bitcast %"struct.std::__1::__hash_node_base.170"* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, %33
  br i1 %58, label %59, label %69

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %39, i64 2
  %61 = bitcast %"struct.std::__1::__hash_node_base.170"* %60 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, %35
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %39, i64 4
  %66 = bitcast %"struct.std::__1::__hash_node_base.170"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %37
  br i1 %68, label %163, label %69

69:                                               ; preds = %59, %54, %64
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %39, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.170"* %71, null
  br i1 %72, label %73, label %38

73:                                               ; preds = %51, %69, %26, %19, %3
  %74 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %26 ], [ %20, %69 ], [ %20, %51 ]
  %75 = tail call i8* @_Znwm(i64 48) #15, !noalias !16
  %76 = getelementptr inbounds i8, i8* %75, i64 16
  %77 = bitcast %"struct.std::__1::pair.194"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 24, i1 false) #14, !noalias !16
  %78 = getelementptr inbounds i8, i8* %75, i64 40
  %79 = bitcast i8* %78 to i64*
  %80 = getelementptr inbounds %"struct.std::__1::pair.194", %"struct.std::__1::pair.194"* %2, i64 0, i32 1
  %81 = load i64, i64* %80, align 8, !noalias !16
  store i64 %81, i64* %79, align 8, !noalias !16
  %82 = getelementptr inbounds i8, i8* %75, i64 8
  %83 = bitcast i8* %82 to i64*
  store i64 %5, i64* %83, align 8, !noalias !16
  %84 = bitcast i8* %75 to %"struct.std::__1::__hash_node_base.170"**
  store %"struct.std::__1::__hash_node_base.170"* null, %"struct.std::__1::__hash_node_base.170"** %84, align 8, !noalias !16
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  %88 = uitofp i64 %87 to float
  %89 = uitofp i64 %7 to float
  %90 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 3, i32 0, i32 0
  %91 = load float, float* %90, align 4
  %92 = fmul float %91, %89
  %93 = fcmp olt float %92, %88
  %94 = or i1 %8, %93
  br i1 %94, label %95, label %118

95:                                               ; preds = %73
  %96 = shl i64 %7, 1
  %97 = icmp ult i64 %7, 3
  %98 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !15
  %99 = icmp ugt i64 %98, 1
  %100 = or i1 %97, %99
  %101 = zext i1 %100 to i64
  %102 = or i64 %96, %101
  %103 = fdiv float %88, %91
  %104 = tail call float @llvm.ceil.f32(float %103) #14
  %105 = fptoui float %104 to i64
  %106 = icmp ult i64 %102, %105
  %107 = select i1 %106, i64 %105, i64 %102
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.166"* %0, i64 %107)
  %108 = load i64, i64* %6, align 8
  %109 = tail call i64 @llvm.ctpop.i64(i64 %108) #14, !range !15
  %110 = icmp ugt i64 %109, 1
  br i1 %110, label %114, label %111

111:                                              ; preds = %95
  %112 = add i64 %108, -1
  %113 = and i64 %112, %5
  br label %118

114:                                              ; preds = %95
  %115 = icmp ult i64 %5, %108
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = urem i64 %5, %108
  br label %118

118:                                              ; preds = %116, %114, %111, %73
  %119 = phi i64 [ %7, %73 ], [ %108, %111 ], [ %108, %114 ], [ %108, %116 ]
  %120 = phi i64 [ %74, %73 ], [ %113, %111 ], [ %5, %114 ], [ %117, %116 ]
  %121 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %121, align 8
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %122, i64 %120
  %124 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.170"* %124, null
  br i1 %125, label %126, label %152

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 1, i32 0, i32 0
  %128 = bitcast %"struct.std::__1::__hash_node_base.170"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i8* %75 to i64*
  store i64 %129, i64* %130, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.170"* %127 to i8**
  store i8* %75, i8** %131, align 8
  store %"struct.std::__1::__hash_node_base.170"* %127, %"struct.std::__1::__hash_node_base.170"** %123, align 8
  %132 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %84, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.170"* %132, null
  br i1 %133, label %159, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.170"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = tail call i64 @llvm.ctpop.i64(i64 %119) #14, !range !15
  %139 = icmp ugt i64 %138, 1
  br i1 %139, label %143, label %140

140:                                              ; preds = %134
  %141 = add i64 %119, -1
  %142 = and i64 %137, %141
  br label %147

143:                                              ; preds = %134
  %144 = icmp ult i64 %137, %119
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = urem i64 %137, %119
  br label %147

147:                                              ; preds = %140, %143, %145
  %148 = phi i64 [ %142, %140 ], [ %146, %145 ], [ %137, %143 ]
  %149 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %121, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %149, i64 %148
  %151 = bitcast %"struct.std::__1::__hash_node_base.170"** %150 to i8**
  br label %157

152:                                              ; preds = %118
  %153 = bitcast %"struct.std::__1::__hash_node_base.170"* %124 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast i8* %75 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.170"* %124 to i8**
  br label %157

157:                                              ; preds = %147, %152
  %158 = phi i8** [ %156, %152 ], [ %151, %147 ]
  store i8* %75, i8** %158, align 8
  br label %159

159:                                              ; preds = %157, %126
  %160 = bitcast i8* %75 to %"struct.std::__1::__hash_node_base.170"*
  %161 = load i64, i64* %85, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %85, align 8
  br label %163

163:                                              ; preds = %64, %159
  %164 = phi i8 [ 1, %159 ], [ 0, %64 ]
  %165 = phi %"struct.std::__1::__hash_node_base.170"* [ %160, %159 ], [ %39, %64 ]
  %166 = insertvalue { %"struct.std::__1::__hash_node_base.170"*, i8 } undef, %"struct.std::__1::__hash_node_base.170"* %165, 0
  %167 = insertvalue { %"struct.std::__1::__hash_node_base.170"*, i8 } %166, i8 %164, 1
  ret { %"struct.std::__1::__hash_node_base.170"*, i8 } %167
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.166"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.166"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.166"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZN4base8FastHashENS_4spanIKhLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.166"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %150, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.166"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.170"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.170"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.172", %"class.std::__1::__bucket_list_deallocator.172"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.170"* null, %"struct.std::__1::__hash_node_base.170"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !19

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.170"* %38, null
  br i1 %39, label %158, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.170"* null, %"struct.std::__1::__hash_node_base.170"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.170"* null, %"struct.std::__1::__hash_node_base.170"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.170"* null, %"struct.std::__1::__hash_node_base.170"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.170"* null, %"struct.std::__1::__hash_node_base.170"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.170"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.170"* %36, %"struct.std::__1::__hash_node_base.170"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.170"* %75, null
  br i1 %76, label %158, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %144
  %80 = phi %"struct.std::__1::__hash_node_base.170"* [ %75, %77 ], [ %148, %144 ]
  %81 = phi i64 [ %71, %77 ], [ %146, %144 ]
  %82 = phi %"struct.std::__1::__hash_node_base.170"* [ %38, %77 ], [ %145, %144 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.170"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %144, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.170"* %98, null
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %80, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base.170"* %101 to i8**
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %80, i64 4
  %104 = bitcast %"struct.std::__1::__hash_node_base.170"* %103 to i64*
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.170"* %105 to i8**
  br label %108

107:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.170"* %82, %"struct.std::__1::__hash_node_base.170"** %97, align 8
  br label %144

108:                                              ; preds = %100, %125
  %109 = phi %"struct.std::__1::__hash_node_base.170"* [ %111, %125 ], [ %80, %100 ]
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %109, i64 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.170"* %111, null
  br i1 %112, label %131, label %113

113:                                              ; preds = %108
  %114 = load i8*, i8** %102, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %111, i64 3
  %116 = bitcast %"struct.std::__1::__hash_node_base.170"* %115 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = icmp eq i8* %114, %117
  br i1 %118, label %119, label %131

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %111, i64 2
  %121 = load i8*, i8** %106, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.170"* %120 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = icmp eq i8* %121, %123
  br i1 %124, label %125, label %131

125:                                              ; preds = %119
  %126 = load i64, i64* %104, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %111, i64 4
  %128 = bitcast %"struct.std::__1::__hash_node_base.170"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %126, %129
  br i1 %130, label %108, label %131

131:                                              ; preds = %113, %119, %108, %125
  %132 = ptrtoint %"struct.std::__1::__hash_node_base.170"* %111 to i64
  %133 = bitcast %"struct.std::__1::__hash_node_base.170"* %109 to i64*
  %134 = bitcast %"struct.std::__1::__hash_node_base.170"* %82 to i64*
  store i64 %132, i64* %134, align 8
  %135 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %135, i64 %93
  %137 = bitcast %"struct.std::__1::__hash_node_base.170"** %136 to i64**
  %138 = load i64*, i64** %137, align 8
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %133, align 8
  %140 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %11, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %140, i64 %93
  %142 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %141, align 8
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %142, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.170"* %80, %"struct.std::__1::__hash_node_base.170"** %143, align 8
  br label %144

144:                                              ; preds = %92, %131, %107
  %145 = phi %"struct.std::__1::__hash_node_base.170"* [ %80, %107 ], [ %82, %131 ], [ %80, %92 ]
  %146 = phi i64 [ %93, %107 ], [ %81, %131 ], [ %81, %92 ]
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.170", %"struct.std::__1::__hash_node_base.170"* %145, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.170"*, %"struct.std::__1::__hash_node_base.170"** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.170"* %148, null
  br i1 %149, label %158, label %79

150:                                              ; preds = %2
  %151 = getelementptr inbounds %"class.std::__1::__hash_table.166", %"class.std::__1::__hash_table.166"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.170"**, %"struct.std::__1::__hash_node_base.170"*** %151, align 8
  store %"struct.std::__1::__hash_node_base.170"** null, %"struct.std::__1::__hash_node_base.170"*** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.170"** %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %150
  %155 = bitcast %"struct.std::__1::__hash_node_base.170"** %152 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %150, %154
  %157 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.172", %"class.std::__1::__bucket_list_deallocator.172"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %157, align 8
  br label %158

158:                                              ; preds = %144, %70, %35, %156
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #13

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #13

; Function Attrs: nounwind
declare void @_ZN9protozero17MessageHandleBaseC2EOS0_(%"class.protozero::MessageHandleBase"*, %"class.protozero::MessageHandleBase"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN9protozero17MessageHandleBaseC2EPNS_7MessageE(%"class.protozero::MessageHandleBase"*, %"class.protozero::Message"*) unnamed_addr #1

declare %"class.base::trace_event::AllocationContextTracker"* @_ZN4base11trace_event24AllocationContextTracker27GetInstanceForCurrentThreadEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker22PushCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker20PushNativeStackFrameEPKv(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker19PopNativeStackFrameEPKv(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event24AllocationContextTracker21PopCurrentTaskContextEPKc(%"class.base::trace_event::AllocationContextTracker"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorD2Ev(%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor", %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"* null) #14
  ret void
}

declare void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorD0Ev(%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor", %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4base8internal12_GLOBAL__N_121EphemeralTaskExecutorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN4base31SetTaskExecutorForCurrentThreadEPNS_12TaskExecutorE(%"class.base::TaskExecutor"* null) #14
  %3 = bitcast %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor15PostDelayedTaskERKNS_8LocationERKNS_10TaskTraitsENS_12OnceCallbackIFvvEEENS_9TimeDeltaE(%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* nocapture readonly, %"class.base::Location"* dereferenceable(32), %"class.base::TaskTraits"* nocapture readnone dereferenceable(15), %"class.base::OnceCallback"* nocapture, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor", %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0, i64 0, i32 1
  %8 = bitcast %"class.base::SequencedTaskRunner"** %7 to %"class.base::TaskRunner"**
  %9 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %8, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.base::TaskRunner"* %9 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %15 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %14, align 8
  %16 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %15, align 8
  %17 = call zeroext i1 %16(%"class.base::TaskRunner"* %9, %"class.base::Location"* dereferenceable(32) %1, %"class.base::OnceCallback"* nonnull %6, i64 %4) #14
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #14
  ret i1 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal %"class.base::TaskRunner"* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor16CreateTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* nocapture readonly, %"class.base::TaskTraits"* nocapture readnone dereferenceable(15)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor", %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::SequencedTaskRunner"** %3 to %"class.base::TaskRunner"**
  %5 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::TaskRunner"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::TaskRunner", %"class.base::TaskRunner"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  ret %"class.base::TaskRunner"* %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal %"class.base::SequencedTaskRunner"* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor25CreateSequencedTaskRunnerERKNS_10TaskTraitsE(%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* nocapture readonly, %"class.base::TaskTraits"* nocapture readnone dereferenceable(15)) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor", %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0, i64 0, i32 1
  %4 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  ret %"class.base::SequencedTaskRunner"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal %"class.base::SingleThreadTaskRunner"* @_ZN4base8internal12_GLOBAL__N_121EphemeralTaskExecutor28CreateSingleThreadTaskRunnerERKNS_10TaskTraitsENS_32SingleThreadTaskRunnerThreadModeE(%"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* nocapture readonly, %"class.base::TaskTraits"* nocapture readnone dereferenceable(15), i32) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor", %"class.base::internal::(anonymous namespace)::EphemeralTaskExecutor"* %0, i64 0, i32 2
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %3, %7
  ret %"class.base::SingleThreadTaskRunner"* %5
}

; Function Attrs: nounwind
declare void @_ZN4base22ThreadTaskRunnerHandleD1Ev(%"class.base::ThreadTaskRunnerHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base25SequencedTaskRunnerHandleD1Ev(%"class.base::SequencedTaskRunnerHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal23SequenceLocalStorageMapD1Ev(%"class.base::internal::SequenceLocalStorageMap"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base17ConditionVariableD1Ev(%"class.base::ConditionVariable"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #3

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare dereferenceable(112) %"struct.base::internal::Task"* @_ZN4base8internal4TaskaSEOS1_(%"struct.base::internal::Task"*, %"struct.base::internal::Task"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN4base8internal23SequenceLocalStorageMapC1Ev(%"class.base::internal::SequenceLocalStorageMap"*) unnamed_addr #1

declare void @_ZN4base25SequencedTaskRunnerHandleC1E13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::SequencedTaskRunnerHandle"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #1

declare void @_ZN4base22ThreadTaskRunnerHandleC1E13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::ThreadTaskRunnerHandle"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event24ConvertableToTraceFormatD2Ev(%"class.base::trace_event::ConvertableToTraceFormat"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4base8internal12_GLOBAL__N_115TaskTracingInfoD0Ev(%"class.base::internal::(anonymous namespace)::TaskTracingInfo"*) unnamed_addr #11 align 2 {
  %2 = bitcast %"class.base::internal::(anonymous namespace)::TaskTracingInfo"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK4base8internal12_GLOBAL__N_115TaskTracingInfo19AppendAsTraceFormatEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::internal::(anonymous namespace)::TaskTracingInfo"*, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::DictionaryValue", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #14
  %6 = bitcast %"class.base::DictionaryValue"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #14
  %7 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::TaskTracingInfo", %"class.base::internal::(anonymous namespace)::TaskTracingInfo"* %0, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = call i8* @_ZN4base20TaskPriorityToStringENS_12TaskPriorityE(i8 zeroext %9) #14
  %11 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i64 13, i8* %10) #14
  %12 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::TaskTracingInfo", %"class.base::internal::(anonymous namespace)::TaskTracingInfo"* %0, i64 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i64 14, i8* %13) #14
  %15 = getelementptr inbounds %"class.base::internal::(anonymous namespace)::TaskTracingInfo", %"class.base::internal::(anonymous namespace)::TaskTracingInfo"* %0, i64 0, i32 4
  %16 = call zeroext i1 @_ZNK4base13SequenceToken7IsValidEv(%"class.base::SequenceToken"* %15) #14
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = call i32 @_ZNK4base13SequenceToken15ToInternalValueEv(%"class.base::SequenceToken"* %15) #14
  %19 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i64 14, i32 %18) #14
  br label %20

20:                                               ; preds = %17, %2
  %21 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #14
  %24 = call zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* nonnull dereferenceable(32) %7, %"class.std::__1::basic_string"* nonnull %4, i64 200) #14
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %22, align 8
  %30 = load i64, i64* %23, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i8* %29, i8* %21
  %33 = select i1 %28, i64 %30, i64 %31
  %34 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %1, i8* %32, i64 %33) #14
  %35 = load i8, i8* %26, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %20
  %38 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %38) #15
  br label %39

39:                                               ; preds = %20, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #14
  ret void
}

declare zeroext i1 @_ZN4base11trace_event24ConvertableToTraceFormat13AppendToProtoEPNS1_13ProtoAppenderE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #1

declare void @_ZN4base11trace_event24ConvertableToTraceFormat27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #1

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPKc(%"class.base::Value"*, i8*, i64, i8*) local_unnamed_addr #1

declare i8* @_ZN4base20TaskPriorityToStringENS_12TaskPriorityE(i8 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base13SequenceToken7IsValidEv(%"class.base::SequenceToken"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #1

declare i32 @_ZNK4base13SequenceToken15ToInternalValueEv(%"class.base::SequenceToken"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readnone }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13trait_helpers22GetTaskTraitsExtensionIJEEENS_26TaskTraitsExtensionStorageENSt3__117integral_constantIbLb1EEEDpT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base8internal10TaskSource11Transaction6traitsEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__19make_pairIRKN4base11trace_event19TraceSourceLocationERmEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__19make_pairIRKN4base11trace_event19TraceSourceLocationERmEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!14 = !{!"branch_weights", i32 2146410443, i32 1073205}
!15 = !{i64 0, i64 65}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIS4_mEEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4base11trace_event19TraceSourceLocationEmEENS_22__unordered_map_hasherIS4_S5_NS_4hashIS4_EENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIS4_mEEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
