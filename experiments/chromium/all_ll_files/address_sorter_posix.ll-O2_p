; ModuleID = '../../net/dns/address_sorter_posix.cc'
source_filename = "../../net/dns/address_sorter_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::AddressSorterPosix::PolicyEntry" = type { [16 x i8], i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::nothrow_t" = type { i8 }
%"class.net::AddressSorterPosix" = type { %"class.net::AddressSorter", %"class.net::NetworkChangeNotifier::IPAddressObserver", %"class.std::__1::map", %"class.net::ClientSocketFactory"*, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.net::AddressSorter" = type { i32 (...)** }
%"class.net::NetworkChangeNotifier::IPAddressObserver" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.net::AddressSorterPosix::PolicyEntry"* }
%"class.net::ClientSocketFactory" = type { i32 (...)** }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.134" }
%"struct.std::__1::pair.134" = type { %"class.net::IPAddress", %"struct.net::AddressSorterPosix::SourceAddressInfo" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"struct.net::AddressSorterPosix::SourceAddressInfo" = type { i32, i32, i64, i8, i8, i8 }
%"class.net::AddressList" = type { %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.11" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::basic_string"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.28 }
%class.scoped_refptr.28 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.net::IPAddress"* }
%"class.std::__1::tuple.137" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.net::(anonymous namespace)::DestinationInfo"* }
%"struct.net::(anonymous namespace)::DestinationInfo" = type { %"class.net::IPAddress", i32, i32, i32, %"struct.net::AddressSorterPosix::SourceAddressInfo"*, i64 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.16" }
%"class.net::NetLog" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::map.67" = type { %"class.std::__1::__tree.68" }
%"class.std::__1::__tree.68" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.net::internal::AddressTrackerLinux" = type <{ i32 (...)**, i8* (i32, i8*)*, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::ScopedGeneric", %"class.std::__1::unique_ptr.46", %"class.base::Lock", %"class.std::__1::map.67", %"class.base::Lock", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set.95", %"class.base::Lock", i8, [7 x i8], %"class.base::ConditionVariable", i32, i8, [3 x i8], i32, %"class.base::ThreadChecker", [3 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.base::FileDescriptorWatcher::Controller"* }
%"class.base::FileDescriptorWatcher::Controller" = type { %"class.base::RepeatingCallback", %class.scoped_refptr.49, %"class.base::FileDescriptorWatcher::Controller::Watcher"*, %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtrFactory" }
%class.scoped_refptr.49 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.50" }>
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FileDescriptorWatcher::Controller::Watcher" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.51, i8, [7 x i8] }>
%class.scoped_refptr.51 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.52", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.52" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.53" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.58", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.59" }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i8 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.76", %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.91", [4 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78", %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { float }
%"class.std::__1::unordered_set.95" = type { %"class.std::__1::__hash_table.96" }
%"class.std::__1::__hash_table.96" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.107", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base.100"** }
%"struct.std::__1::__hash_node_base.100" = type { %"struct.std::__1::__hash_node_base.100"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator.102" }
%"class.std::__1::__bucket_list_deallocator.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base.100" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.121, %union.anon.123, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.121 = type { i64 }
%union.anon.123 = type { i64 }
%"class.base::ThreadChecker" = type { i8 }
%"class.std::__1::__tree_node.156" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.157" }
%"struct.std::__1::__value_type.157" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.net::IPAddress", %struct.ifaddrmsg }
%struct.ifaddrmsg = type { i8, i8, i8, i8, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3net13AddressSorterD2Ev = comdat any

$_ZN3net13AddressSorterD0Ev = comdat any

$_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEbT0_SA_T_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZTVN3net13AddressSorterE = comdat any

@_ZTVN3net18AddressSorterPosixE = hidden unnamed_addr constant { [6 x i8*], [5 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::AddressSorterPosix"*)* @_ZN3net18AddressSorterPosixD2Ev to i8*), i8* bitcast (void (%"class.net::AddressSorterPosix"*)* @_ZN3net18AddressSorterPosixD0Ev to i8*), i8* bitcast (void (%"class.net::AddressSorterPosix"*, %"class.net::AddressList"*, %"class.base::OnceCallback"*)* @_ZNK3net18AddressSorterPosix4SortERKNS_11AddressListEN4base12OnceCallbackIFvbS3_EEE to i8*), i8* bitcast (void (%"class.net::AddressSorterPosix"*)* @_ZN3net18AddressSorterPosix18OnIPAddressChangedEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.net::AddressSorterPosix"*)* @_ZThn8_N3net18AddressSorterPosix18OnIPAddressChangedEv to i8*), i8* bitcast (void (%"class.net::AddressSorterPosix"*)* @_ZThn8_N3net18AddressSorterPosixD1Ev to i8*), i8* bitcast (void (%"class.net::AddressSorterPosix"*)* @_ZThn8_N3net18AddressSorterPosixD0Ev to i8*)] }, align 8
@_ZN3net12_GLOBAL__N_122kDefaultIPv4ScopeTableE = internal unnamed_addr constant [3 x %"struct.net::AddressSorterPosix::PolicyEntry"] [%"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\FF\7F\00\00\00", i32 104, i32 2 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\FF\A9\FE\00\00", i32 112, i32 2 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] zeroinitializer, i32 0, i32 14 }], align 16
@.str = private unnamed_addr constant [38 x i8] c"../../net/dns/address_sorter_posix.cc\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Could not connect to \00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c" reason \00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Could not get local address for \00", align 1
@_ZTVN3net13AddressSorterE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::AddressSorter"*)* @_ZN3net13AddressSorterD2Ev to i8*), i8* bitcast (void (%"class.net::AddressSorter"*)* @_ZN3net13AddressSorterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN3net12_GLOBAL__N_123kDefaultPrecedenceTableE = internal unnamed_addr constant <{ %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, [15 x i8] }>, i32, i32 }, %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } }> <{ %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i32 128, i32 50 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] zeroinitializer, i32 0, i32 40 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\FF\00\00\00\00", i32 96, i32 35 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 32, i8 2, [14 x i8] zeroinitializer }>, i32 16, i32 30 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 32, i8 1, [14 x i8] zeroinitializer }>, i32 32, i32 5 }, { <{ i8, [15 x i8] }>, i32, i32 } { <{ i8, [15 x i8] }> <{ i8 -4, [15 x i8] zeroinitializer }>, i32 7, i32 3 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] zeroinitializer, i32 96, i32 1 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 -2, i8 -64, [14 x i8] zeroinitializer }>, i32 10, i32 1 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 63, i8 -2, [14 x i8] zeroinitializer }>, i32 16, i32 1 } }>, align 16
@_ZN3net12_GLOBAL__N_118kDefaultLabelTableE = internal unnamed_addr constant <{ %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, [15 x i8] }>, i32, i32 }, %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } }> <{ %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i32 128, i32 0 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] zeroinitializer, i32 0, i32 1 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\FF\00\00\00\00", i32 96, i32 4 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 32, i8 2, [14 x i8] zeroinitializer }>, i32 16, i32 2 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 32, i8 1, [14 x i8] zeroinitializer }>, i32 32, i32 5 }, { <{ i8, [15 x i8] }>, i32, i32 } { <{ i8, [15 x i8] }> <{ i8 -4, [15 x i8] zeroinitializer }>, i32 7, i32 13 }, %"struct.net::AddressSorterPosix::PolicyEntry" { [16 x i8] zeroinitializer, i32 96, i32 3 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 -2, i8 -64, [14 x i8] zeroinitializer }>, i32 10, i32 11 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } { <{ i8, i8, [14 x i8] }> <{ i8 63, i8 -2, [14 x i8] zeroinitializer }>, i32 16, i32 12 } }>, align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN3net18AddressSorterPosixC1EPNS_19ClientSocketFactoryE = hidden unnamed_addr alias void (%"class.net::AddressSorterPosix"*, %"class.net::ClientSocketFactory"*), void (%"class.net::AddressSorterPosix"*, %"class.net::ClientSocketFactory"*)* @_ZN3net18AddressSorterPosixC2EPNS_19ClientSocketFactoryE
@_ZN3net18AddressSorterPosixD1Ev = hidden unnamed_addr alias void (%"class.net::AddressSorterPosix"*), void (%"class.net::AddressSorterPosix"*)* @_ZN3net18AddressSorterPosixD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18AddressSorterPosixC2EPNS_19ClientSocketFactoryE(%"class.net::AddressSorterPosix"*, %"class.net::ClientSocketFactory"*) unnamed_addr #0 align 2 {
  %3 = alloca i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, align 8
  %4 = alloca i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, align 8
  %5 = alloca i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, align 8
  %6 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net13AddressSorterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 1
  tail call void @_ZN3net21NetworkChangeNotifier17IPAddressObserverC2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %7) #12
  %8 = bitcast %"class.net::AddressSorterPosix"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN3net18AddressSorterPosixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN3net18AddressSorterPosixE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 3
  store %"class.net::ClientSocketFactory"* %1, %"class.net::ClientSocketFactory"** %13, align 8
  %14 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 4, i32 0, i32 1
  %16 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %17 = tail call i8* @_Znwm(i64 216) #13
  %18 = bitcast i8* %17 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %19 = bitcast %"class.std::__1::vector"* %14 to i8**
  store i8* %17, i8** %19, align 8, !alias.scope !2
  %20 = getelementptr inbounds i8, i8* %17, i64 216
  %21 = bitcast i8* %20 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %22 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %16 to i8**
  store i8* %20, i8** %22, align 8, !alias.scope !2
  %23 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %15 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 16 getelementptr inbounds (<{ %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, [15 x i8] }>, i32, i32 }, %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } }>, <{ %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, [15 x i8] }>, i32, i32 }, %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } }>* @_ZN3net12_GLOBAL__N_123kDefaultPrecedenceTableE, i64 0, i32 0, i32 0, i64 0), i64 216, i1 false) #12, !noalias !2
  %24 = ptrtoint i8* %20 to i64
  store i64 %24, i64* %23, align 8, !alias.scope !2
  %25 = bitcast i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12, !noalias !2
  store i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)* @_ZN3net12_GLOBAL__N_113ComparePolicyERKNS_18AddressSorterPosix11PolicyEntryES4_, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %4, align 8, !noalias !2
  call void @_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* nonnull %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %21, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** nonnull dereferenceable(8) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12, !noalias !2
  %26 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5
  %27 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5, i32 0, i32 1
  %28 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %29 = call i8* @_Znwm(i64 216) #13
  %30 = bitcast i8* %29 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %31 = bitcast %"class.std::__1::vector"* %26 to i8**
  store i8* %29, i8** %31, align 8, !alias.scope !5
  %32 = getelementptr inbounds i8, i8* %29, i64 216
  %33 = bitcast i8* %32 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %34 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %28 to i8**
  store i8* %32, i8** %34, align 8, !alias.scope !5
  %35 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %27 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* align 16 getelementptr inbounds (<{ %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, [15 x i8] }>, i32, i32 }, %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } }>, <{ %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, [15 x i8] }>, i32, i32 }, %"struct.net::AddressSorterPosix::PolicyEntry", { <{ i8, i8, [14 x i8] }>, i32, i32 }, { <{ i8, i8, [14 x i8] }>, i32, i32 } }>* @_ZN3net12_GLOBAL__N_118kDefaultLabelTableE, i64 0, i32 0, i32 0, i64 0), i64 216, i1 false) #12, !noalias !5
  %36 = ptrtoint i8* %32 to i64
  store i64 %36, i64* %35, align 8, !alias.scope !5
  %37 = bitcast i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12, !noalias !5
  store i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)* @_ZN3net12_GLOBAL__N_113ComparePolicyERKNS_18AddressSorterPosix11PolicyEntryES4_, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %3, align 8, !noalias !5
  call void @_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* nonnull %30, %"struct.net::AddressSorterPosix::PolicyEntry"* %33, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12, !noalias !5
  %38 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6
  %39 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6, i32 0, i32 1
  %40 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %41 = call i8* @_Znwm(i64 72) #13
  %42 = bitcast i8* %41 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %43 = bitcast %"class.std::__1::vector"* %38 to i8**
  store i8* %41, i8** %43, align 8, !alias.scope !8
  %44 = getelementptr inbounds i8, i8* %41, i64 72
  %45 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %40 to i8**
  store i8* %44, i8** %45, align 8, !alias.scope !8
  %46 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %39 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 16 getelementptr inbounds ([3 x %"struct.net::AddressSorterPosix::PolicyEntry"], [3 x %"struct.net::AddressSorterPosix::PolicyEntry"]* @_ZN3net12_GLOBAL__N_122kDefaultIPv4ScopeTableE, i64 0, i64 0, i32 0, i64 0), i64 72, i1 false) #12, !noalias !8
  %47 = ptrtoint i8* %44 to i64
  store i64 %47, i64* %46, align 8, !alias.scope !8
  %48 = bitcast i8* %44 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %49 = bitcast i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #12, !noalias !8
  store i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)* @_ZN3net12_GLOBAL__N_113ComparePolicyERKNS_18AddressSorterPosix11PolicyEntryES4_, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %5, align 8, !noalias !8
  call void @_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* nonnull %42, %"struct.net::AddressSorterPosix::PolicyEntry"* %48, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** nonnull dereferenceable(8) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #12, !noalias !8
  call void @_ZN3net21NetworkChangeNotifier20AddIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %7) #12
  %50 = bitcast %"class.net::AddressSorterPosix"* %0 to void (%"class.net::AddressSorterPosix"*)***
  %51 = load void (%"class.net::AddressSorterPosix"*)**, void (%"class.net::AddressSorterPosix"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.net::AddressSorterPosix"*)*, void (%"class.net::AddressSorterPosix"*)** %51, i64 3
  %53 = load void (%"class.net::AddressSorterPosix"*)*, void (%"class.net::AddressSorterPosix"*)** %52, align 8
  call void %53(%"class.net::AddressSorterPosix"* %0) #12
  ret void
}

declare void @_ZN3net21NetworkChangeNotifier17IPAddressObserverC2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) unnamed_addr #1

declare void @_ZN3net21NetworkChangeNotifier20AddIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18AddressSorterPosixD2Ev(%"class.net::AddressSorterPosix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 1
  %3 = bitcast %"class.net::AddressSorterPosix"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN3net18AddressSorterPosixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN3net18AddressSorterPosixE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  tail call void @_ZN3net21NetworkChangeNotifier23RemoveIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %2) #12
  %4 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"** %4, align 8
  %6 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %5 to i64
  %9 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6, i32 0, i32 1
  %10 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %5, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"** %13, align 8
  %15 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %14 to i64
  %18 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5, i32 0, i32 1
  %19 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %14, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 4, i32 0, i32 0
  %23 = load %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"** %22, align 8
  %24 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %23 to i64
  %27 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 4, i32 0, i32 1
  %28 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %23, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #12
  tail call void @_ZN3net21NetworkChangeNotifier17IPAddressObserverD2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"* %2) #12
  ret void
}

declare void @_ZN3net21NetworkChangeNotifier23RemoveIPAddressObserverEPNS0_17IPAddressObserverE(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net21NetworkChangeNotifier17IPAddressObserverD2Ev(%"class.net::NetworkChangeNotifier::IPAddressObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net18AddressSorterPosixD1Ev(%"class.net::AddressSorterPosix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 -1, i32 6, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.4"* %2 to %"class.net::AddressSorterPosix"*
  tail call void @_ZN3net18AddressSorterPosixD2Ev(%"class.net::AddressSorterPosix"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18AddressSorterPosixD0Ev(%"class.net::AddressSorterPosix"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net18AddressSorterPosixD2Ev(%"class.net::AddressSorterPosix"* %0) #12
  %2 = bitcast %"class.net::AddressSorterPosix"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net18AddressSorterPosixD0Ev(%"class.net::AddressSorterPosix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 -1, i32 6, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.4"* %2 to %"class.net::AddressSorterPosix"*
  tail call void @_ZN3net18AddressSorterPosixD2Ev(%"class.net::AddressSorterPosix"* %3) #12
  %4 = bitcast %"class.std::__1::__compressed_pair.4"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net18AddressSorterPosix4SortERKNS_11AddressListEN4base12OnceCallbackIFvbS3_EEE(%"class.net::AddressSorterPosix"*, %"class.net::AddressList"* nocapture readonly dereferenceable(48), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.137", align 1
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, align 8
  %8 = alloca %"class.std::__1::vector.30", align 8
  %9 = alloca %"struct.net::NetLogSource", align 8
  %10 = alloca %"class.net::IPEndPoint", align 2
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.net::IPEndPoint", align 2
  %14 = alloca %"class.logging::LogMessage", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.net::AddressList", align 8
  %17 = alloca %"class.net::IPEndPoint", align 2
  %18 = bitcast %"class.std::__1::vector.30"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #12
  %22 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.net::IPEndPoint"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.net::AddressList"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %65, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 4
  %32 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 3
  %34 = bitcast %"struct.net::NetLogSource"* %9 to i8*
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %36 = bitcast %"class.logging::LogMessage"* %11 to i8*
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %45 = bitcast %"class.logging::LogMessage"* %14 to i8*
  %46 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %14, i64 0, i32 2
  %47 = bitcast %"class.std::__1::basic_ostringstream"* %46 to %"class.std::__1::basic_ostream"*
  %48 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %13, i64 0, i32 0
  %54 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0
  %55 = bitcast %"class.std::__1::tuple"* %4 to i8*
  %56 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::tuple.137", %"class.std::__1::tuple.137"* %5, i64 0, i32 0
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %13, i64 0, i32 0, i32 0, i32 1
  %59 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  %60 = bitcast %"class.std::__1::vector.30"* %8 to i64*
  %61 = bitcast %"class.std::__1::unique_ptr"** %21 to i64*
  br label %102

62:                                               ; preds = %374
  %63 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %64 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  br label %65

65:                                               ; preds = %62, %3
  %66 = phi %"class.std::__1::unique_ptr"* [ %64, %62 ], [ null, %3 ]
  %67 = phi %"class.std::__1::unique_ptr"* [ %63, %62 ], [ null, %3 ]
  %68 = bitcast i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = ptrtoint %"class.std::__1::unique_ptr"* %67 to i64
  %70 = ptrtoint %"class.std::__1::unique_ptr"* %66 to i64
  store i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)* @_ZN3net12_GLOBAL__N_119CompareDestinationsERKNSt3__110unique_ptrINS0_15DestinationInfoENS1_14default_deleteIS3_EEEES8_, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %7, align 8
  %71 = sub i64 %70, %69
  %72 = ashr exact i64 %71, 3
  %73 = icmp sgt i64 %71, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %65
  %75 = icmp slt i64 %72, 1152921504606846975
  %76 = select i1 %75, i64 %72, i64 1152921504606846975
  br label %77

77:                                               ; preds = %82, %74
  %78 = phi i64 [ %83, %82 ], [ %76, %74 ]
  %79 = shl i64 %78, 3
  %80 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %79, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %77
  %83 = lshr i64 %78, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %77

85:                                               ; preds = %82, %65
  call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %67, %"class.std::__1::unique_ptr"* %66, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %7, i64 %72, %"class.std::__1::unique_ptr"* null, i64 0) #12
  br label %88

86:                                               ; preds = %77
  %87 = bitcast i8* %80 to %"class.std::__1::unique_ptr"*
  call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %67, %"class.std::__1::unique_ptr"* %66, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %7, i64 %72, %"class.std::__1::unique_ptr"* nonnull %87, i64 %78) #12
  call void @_ZdlPv(i8* nonnull %80) #13
  br label %88

88:                                               ; preds = %85, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  %89 = bitcast %"class.net::AddressList"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %89) #12
  %90 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %16, i64 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %16, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"class.net::AddressList"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 48, i1 false)
  call void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"* nonnull %16) #12
  %93 = bitcast %"class.std::__1::unique_ptr"** %20 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.30"* %8 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %94, %96
  br i1 %97, label %381, label %98

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %100 = bitcast %"class.net::IPEndPoint"** %90 to i64*
  %101 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %16, i64 0, i32 0
  br label %415

102:                                              ; preds = %28, %374
  %103 = phi i64 [ 0, %28 ], [ %375, %374 ]
  %104 = call i8* @_Znwm(i64 48) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %104, i8 0, i64 48, i1 false)
  %105 = bitcast i8* %104 to %"class.net::IPAddress"*
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %105) #12
  %106 = ptrtoint i8* %104 to i64
  %107 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %29, align 8
  %108 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %107, i64 %103, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* align 1 %108, i64 17, i1 false)
  %109 = call fastcc i32 @_ZN3net12_GLOBAL__N_18GetScopeERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %30, %"class.net::IPAddress"* nonnull dereferenceable(17) %105)
  %110 = getelementptr inbounds i8, i8* %104, i64 20
  %111 = bitcast i8* %110 to i32*
  store i32 %109, i32* %111, align 4
  %112 = call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %31, %"class.net::IPAddress"* nonnull dereferenceable(17) %105)
  %113 = getelementptr inbounds i8, i8* %104, i64 24
  %114 = bitcast i8* %113 to i32*
  store i32 %112, i32* %114, align 8
  %115 = call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %32, %"class.net::IPAddress"* nonnull dereferenceable(17) %105)
  %116 = getelementptr inbounds i8, i8* %104, i64 28
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 4
  %118 = load %"class.net::ClientSocketFactory"*, %"class.net::ClientSocketFactory"** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  call void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"* nonnull %9) #12
  %119 = bitcast %"class.net::ClientSocketFactory"* %118 to %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)***
  %120 = load %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)**, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*** %119, align 8
  %121 = getelementptr inbounds %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)** %120, i64 2
  %122 = load %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)*, %"class.net::DatagramClientSocket"* (%"class.net::ClientSocketFactory"*, i32, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)** %121, align 8
  %123 = call %"class.net::DatagramClientSocket"* %122(%"class.net::ClientSocketFactory"* %118, i32 1, %"class.net::NetLog"* null, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %35) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %35, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %10, %"class.net::IPAddress"* nonnull dereferenceable(17) %105, i16 zeroext 80) #12
  %124 = bitcast %"class.net::DatagramClientSocket"* %123 to i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)***
  %125 = load i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*** %124, align 8
  %126 = getelementptr inbounds i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)** %125, i64 9
  %127 = load i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramClientSocket"*, %"class.net::IPEndPoint"*)** %126, align 8
  %128 = call i32 %127(%"class.net::DatagramClientSocket"* %123, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %10) #12
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %150, label %130

130:                                              ; preds = %102
  %131 = call i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i64 38) #12
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %360

133:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 291, i32 -1) #12
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i64 21) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  call void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.net::IPEndPoint"* nonnull %10) #12
  %135 = load i8, i8* %41, align 1
  %136 = icmp slt i8 %135, 0
  %137 = load i8*, i8** %42, align 8
  %138 = load i64, i64* %43, align 8
  %139 = zext i8 %135 to i64
  %140 = select i1 %136, i8* %137, i8* %39
  %141 = select i1 %136, i64 %138, i64 %139
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %134, i8* %140, i64 %141) #12
  %143 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %142, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #12
  %144 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %143, i32 %128) #12
  %145 = load i8, i8* %41, align 1
  %146 = icmp slt i8 %145, 0
  br i1 %146, label %147, label %149

147:                                              ; preds = %133
  %148 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %133, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #12
  br label %360

150:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %44) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %44, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %13) #12
  %151 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %123, i64 0, i32 0
  %152 = bitcast %"class.net::DatagramClientSocket"* %123 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %153 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %152, align 8
  %154 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %153, i64 4
  %155 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %154, align 8
  %156 = call i32 %155(%"class.net::DatagramSocket"* %151, %"class.net::IPEndPoint"* nonnull %13) #12
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %177, label %158

158:                                              ; preds = %150
  %159 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #12
  br i1 %159, label %160, label %358

160:                                              ; preds = %158
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %45) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 299, i32 1) #12
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i64 32) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  call void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.net::IPEndPoint"* nonnull %10) #12
  %162 = load i8, i8* %50, align 1
  %163 = icmp slt i8 %162, 0
  %164 = load i8*, i8** %51, align 8
  %165 = load i64, i64* %52, align 8
  %166 = zext i8 %162 to i64
  %167 = select i1 %163, i8* %164, i8* %48
  %168 = select i1 %163, i64 %165, i64 %166
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %161, i8* %167, i64 %168) #12
  %170 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %169, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #12
  %171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %170, i32 %156) #12
  %172 = load i8, i8* %50, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %160
  %175 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %175) #13
  br label %176

176:                                              ; preds = %160, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %45) #12
  br label %358

177:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  store %"class.net::IPAddress"* %53, %"class.net::IPAddress"** %56, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %57) #12
  %178 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %54, %"class.net::IPAddress"* nonnull dereferenceable(17) %53, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.137"* nonnull dereferenceable(1) %5) #12
  %179 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %178, 0
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %179, i64 7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %57) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to i32*
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %189

184:                                              ; preds = %177
  %185 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"struct.net::AddressSorterPosix::SourceAddressInfo"*
  %186 = call fastcc i32 @_ZN3net12_GLOBAL__N_18GetScopeERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %30, %"class.net::IPAddress"* nonnull dereferenceable(17) %53) #12
  store i32 %186, i32* %181, align 8
  %187 = call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %32, %"class.net::IPAddress"* nonnull dereferenceable(17) %53) #12
  %188 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %185, i64 0, i32 1
  store i32 %187, i32* %188, align 4
  br label %189

189:                                              ; preds = %184, %177
  %190 = getelementptr inbounds i8, i8* %104, i64 32
  %191 = bitcast i8* %190 to %"class.std::__1::__tree_end_node"**
  store %"class.std::__1::__tree_end_node"* %180, %"class.std::__1::__tree_end_node"** %191, align 8
  %192 = getelementptr inbounds i8, i8* %104, i64 16
  %193 = load i8, i8* %192, align 1
  %194 = load i8, i8* %58, align 2
  %195 = icmp eq i8 %193, %194
  br i1 %195, label %196, label %206

196:                                              ; preds = %189
  %197 = bitcast i8* %190 to %"struct.net::AddressSorterPosix::SourceAddressInfo"**
  %198 = call i64 @_ZN3net18CommonPrefixLengthERKNS_9IPAddressES2_(%"class.net::IPAddress"* nonnull dereferenceable(17) %105, %"class.net::IPAddress"* nonnull dereferenceable(17) %53) #12
  %199 = load %"struct.net::AddressSorterPosix::SourceAddressInfo"*, %"struct.net::AddressSorterPosix::SourceAddressInfo"** %197, align 8
  %200 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %199, i64 0, i32 2
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %201, %198
  %203 = select i1 %202, i64 %201, i64 %198
  %204 = getelementptr inbounds i8, i8* %104, i64 40
  %205 = bitcast i8* %204 to i64*
  store i64 %203, i64* %205, align 8
  br label %206

206:                                              ; preds = %196, %189
  %207 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %208 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %209 = icmp ult %"class.std::__1::unique_ptr"* %207, %208
  %210 = ptrtoint %"class.std::__1::unique_ptr"* %208 to i64
  br i1 %209, label %211, label %215

211:                                              ; preds = %206
  %212 = bitcast %"class.std::__1::unique_ptr"* %207 to i64*
  store i64 %106, i64* %212, align 8
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %207, i64 1
  %214 = ptrtoint %"class.std::__1::unique_ptr"* %213 to i64
  store i64 %214, i64* %59, align 8
  br label %358

215:                                              ; preds = %206
  %216 = ptrtoint %"class.std::__1::unique_ptr"* %207 to i64
  %217 = load i64, i64* %60, align 8
  %218 = sub i64 %216, %217
  %219 = ashr exact i64 %218, 3
  %220 = add nsw i64 %219, 1
  %221 = icmp ugt i64 %220, 2305843009213693951
  %222 = inttoptr i64 %217 to %"class.std::__1::unique_ptr"*
  br i1 %221, label %223, label %225

223:                                              ; preds = %215
  %224 = bitcast %"class.std::__1::vector.30"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %224) #14
  unreachable

225:                                              ; preds = %215
  %226 = sub i64 %210, %217
  %227 = ashr exact i64 %226, 3
  %228 = icmp ult i64 %227, 1152921504606846975
  br i1 %228, label %229, label %237

229:                                              ; preds = %225
  %230 = ashr exact i64 %226, 2
  %231 = icmp ult i64 %230, %220
  %232 = select i1 %231, i64 %220, i64 %230
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %242, label %234

234:                                              ; preds = %229
  %235 = icmp ugt i64 %232, 2305843009213693951
  br i1 %235, label %236, label %237

236:                                              ; preds = %234
  call void @abort() #14
  unreachable

237:                                              ; preds = %234, %225
  %238 = phi i64 [ %232, %234 ], [ 2305843009213693951, %225 ]
  %239 = shl i64 %238, 3
  %240 = call i8* @_Znwm(i64 %239) #13
  %241 = bitcast i8* %240 to %"class.std::__1::unique_ptr"*
  br label %242

242:                                              ; preds = %237, %229
  %243 = phi i64 [ %238, %237 ], [ 0, %229 ]
  %244 = phi %"class.std::__1::unique_ptr"* [ %241, %237 ], [ null, %229 ]
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %244, i64 %219
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %244, i64 %243
  %247 = ptrtoint %"class.std::__1::unique_ptr"* %246 to i64
  %248 = bitcast %"class.std::__1::unique_ptr"* %245 to i64*
  store i64 %106, i64* %248, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %245, i64 1
  %250 = ptrtoint %"class.std::__1::unique_ptr"* %249 to i64
  %251 = icmp eq %"class.std::__1::unique_ptr"* %207, %222
  br i1 %251, label %336, label %252

252:                                              ; preds = %242
  %253 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %207, i64 -1
  %254 = bitcast %"class.std::__1::unique_ptr"* %253 to i8*
  %255 = sub i64 0, %217
  %256 = getelementptr i8, i8* %254, i64 %255
  %257 = ptrtoint i8* %256 to i64
  %258 = lshr i64 %257, 3
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 7
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %274, label %262

262:                                              ; preds = %252, %262
  %263 = phi %"class.std::__1::unique_ptr"* [ %266, %262 ], [ %245, %252 ]
  %264 = phi %"class.std::__1::unique_ptr"* [ %267, %262 ], [ %207, %252 ]
  %265 = phi i64 [ %272, %262 ], [ %260, %252 ]
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %263, i64 -1
  %267 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %264, i64 -1
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %267, i64 0, i32 0, i32 0, i32 0
  %269 = bitcast %"class.std::__1::unique_ptr"* %267 to i64*
  %270 = load i64, i64* %269, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %268, align 8
  %271 = bitcast %"class.std::__1::unique_ptr"* %266 to i64*
  store i64 %270, i64* %271, align 8
  %272 = add i64 %265, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %262, !llvm.loop !11

274:                                              ; preds = %262, %252
  %275 = phi %"class.std::__1::unique_ptr"* [ undef, %252 ], [ %266, %262 ]
  %276 = phi %"class.std::__1::unique_ptr"* [ %245, %252 ], [ %266, %262 ]
  %277 = phi %"class.std::__1::unique_ptr"* [ %207, %252 ], [ %267, %262 ]
  %278 = icmp ult i8* %256, inttoptr (i64 56 to i8*)
  br i1 %278, label %331, label %279

279:                                              ; preds = %274, %279
  %280 = phi %"class.std::__1::unique_ptr"* [ %324, %279 ], [ %276, %274 ]
  %281 = phi %"class.std::__1::unique_ptr"* [ %325, %279 ], [ %277, %274 ]
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -1
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -1
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %283, i64 0, i32 0, i32 0, i32 0
  %285 = bitcast %"class.std::__1::unique_ptr"* %283 to i64*
  %286 = load i64, i64* %285, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %284, align 8
  %287 = bitcast %"class.std::__1::unique_ptr"* %282 to i64*
  store i64 %286, i64* %287, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -2
  %289 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -2
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %289, i64 0, i32 0, i32 0, i32 0
  %291 = bitcast %"class.std::__1::unique_ptr"* %289 to i64*
  %292 = load i64, i64* %291, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %290, align 8
  %293 = bitcast %"class.std::__1::unique_ptr"* %288 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -3
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -3
  %296 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %295, i64 0, i32 0, i32 0, i32 0
  %297 = bitcast %"class.std::__1::unique_ptr"* %295 to i64*
  %298 = load i64, i64* %297, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %296, align 8
  %299 = bitcast %"class.std::__1::unique_ptr"* %294 to i64*
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -4
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -4
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %301, i64 0, i32 0, i32 0, i32 0
  %303 = bitcast %"class.std::__1::unique_ptr"* %301 to i64*
  %304 = load i64, i64* %303, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %302, align 8
  %305 = bitcast %"class.std::__1::unique_ptr"* %300 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -5
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -5
  %308 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %307, i64 0, i32 0, i32 0, i32 0
  %309 = bitcast %"class.std::__1::unique_ptr"* %307 to i64*
  %310 = load i64, i64* %309, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %308, align 8
  %311 = bitcast %"class.std::__1::unique_ptr"* %306 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -6
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -6
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %313, i64 0, i32 0, i32 0, i32 0
  %315 = bitcast %"class.std::__1::unique_ptr"* %313 to i64*
  %316 = load i64, i64* %315, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %314, align 8
  %317 = bitcast %"class.std::__1::unique_ptr"* %312 to i64*
  store i64 %316, i64* %317, align 8
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -7
  %319 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -7
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %319, i64 0, i32 0, i32 0, i32 0
  %321 = bitcast %"class.std::__1::unique_ptr"* %319 to i64*
  %322 = load i64, i64* %321, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %320, align 8
  %323 = bitcast %"class.std::__1::unique_ptr"* %318 to i64*
  store i64 %322, i64* %323, align 8
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %280, i64 -8
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 -8
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %325, i64 0, i32 0, i32 0, i32 0
  %327 = bitcast %"class.std::__1::unique_ptr"* %325 to i64*
  %328 = load i64, i64* %327, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %326, align 8
  %329 = bitcast %"class.std::__1::unique_ptr"* %324 to i64*
  store i64 %328, i64* %329, align 8
  %330 = icmp eq %"class.std::__1::unique_ptr"* %325, %222
  br i1 %330, label %331, label %279

331:                                              ; preds = %279, %274
  %332 = phi %"class.std::__1::unique_ptr"* [ %275, %274 ], [ %324, %279 ]
  %333 = load i64, i64* %60, align 8
  %334 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %335 = inttoptr i64 %333 to %"class.std::__1::unique_ptr"*
  br label %336

336:                                              ; preds = %242, %331
  %337 = phi %"class.std::__1::unique_ptr"* [ %335, %331 ], [ %222, %242 ]
  %338 = phi %"class.std::__1::unique_ptr"* [ %334, %331 ], [ %207, %242 ]
  %339 = phi %"class.std::__1::unique_ptr"* [ %332, %331 ], [ %245, %242 ]
  %340 = phi i64 [ %333, %331 ], [ %217, %242 ]
  %341 = ptrtoint %"class.std::__1::unique_ptr"* %339 to i64
  store i64 %341, i64* %60, align 8
  store i64 %250, i64* %59, align 8
  store i64 %247, i64* %61, align 8
  %342 = icmp eq %"class.std::__1::unique_ptr"* %338, %337
  br i1 %342, label %354, label %343

343:                                              ; preds = %336, %352
  %344 = phi %"class.std::__1::unique_ptr"* [ %345, %352 ], [ %338, %336 ]
  %345 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %344, i64 -1
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %345, i64 0, i32 0, i32 0, i32 0
  %347 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %346, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %346, align 8
  %348 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %347, null
  br i1 %348, label %352, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %347, i64 0, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %350) #12
  %351 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %347, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %351) #13
  br label %352

352:                                              ; preds = %349, %343
  %353 = icmp eq %"class.std::__1::unique_ptr"* %345, %337
  br i1 %353, label %354, label %343

354:                                              ; preds = %352, %336
  %355 = icmp eq i64 %340, 0
  br i1 %355, label %358, label %356

356:                                              ; preds = %354
  %357 = inttoptr i64 %340 to i8*
  call void @_ZdlPv(i8* %357) #13
  br label %358

358:                                              ; preds = %356, %354, %211, %176, %158
  %359 = phi i64 [ %106, %158 ], [ %106, %176 ], [ 0, %211 ], [ 0, %354 ], [ 0, %356 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %44) #12
  br label %360

360:                                              ; preds = %149, %130, %358
  %361 = phi i64 [ %359, %358 ], [ %106, %130 ], [ %106, %149 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %35) #12
  %362 = icmp eq %"class.net::DatagramClientSocket"* %123, null
  br i1 %362, label %368, label %363

363:                                              ; preds = %360
  %364 = bitcast %"class.net::DatagramClientSocket"* %123 to void (%"class.net::DatagramClientSocket"*)***
  %365 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %364, align 8
  %366 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %365, i64 1
  %367 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %366, align 8
  call void %367(%"class.net::DatagramClientSocket"* nonnull %123) #12
  br label %368

368:                                              ; preds = %360, %363
  %369 = inttoptr i64 %361 to %"struct.net::(anonymous namespace)::DestinationInfo"*
  %370 = icmp eq i64 %361, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %369, i64 0, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %372) #12
  %373 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %369, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %373) #13
  br label %374

374:                                              ; preds = %368, %371
  %375 = add nuw i64 %103, 1
  %376 = load i64, i64* %23, align 8
  %377 = load i64, i64* %25, align 8
  %378 = sub i64 %376, %377
  %379 = sdiv exact i64 %378, 20
  %380 = icmp ult i64 %375, %379
  br i1 %380, label %102, label %62

381:                                              ; preds = %429, %88
  %382 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #12
  %383 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %384 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %385 = load i64, i64* %384, align 8
  %386 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %385, i64* %386, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %383, align 8
  %387 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %388 = inttoptr i64 %385 to %"class.base::internal::BindStateBase"*
  %389 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %388, i64 0, i32 1
  %390 = bitcast void ()** %389 to void (%"class.base::internal::BindStateBase"*, i1, %"class.net::AddressList"*)**
  %391 = load void (%"class.base::internal::BindStateBase"*, i1, %"class.net::AddressList"*)*, void (%"class.base::internal::BindStateBase"*, i1, %"class.net::AddressList"*)** %390, align 8
  call void %391(%"class.base::internal::BindStateBase"* %388, i1 zeroext true, %"class.net::AddressList"* nonnull dereferenceable(48) %16) #12
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %387) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #12
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %89) #12
  %392 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %393 = icmp eq %"class.std::__1::unique_ptr"* %392, null
  br i1 %393, label %414, label %394

394:                                              ; preds = %381
  %395 = bitcast %"class.std::__1::unique_ptr"* %392 to i8*
  %396 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %397 = icmp eq %"class.std::__1::unique_ptr"* %396, %392
  br i1 %397, label %412, label %398

398:                                              ; preds = %394, %407
  %399 = phi %"class.std::__1::unique_ptr"* [ %400, %407 ], [ %396, %394 ]
  %400 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %399, i64 -1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %401, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %401, align 8
  %403 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %402, null
  br i1 %403, label %407, label %404

404:                                              ; preds = %398
  %405 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %402, i64 0, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %405) #12
  %406 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %402, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %406) #13
  br label %407

407:                                              ; preds = %404, %398
  %408 = icmp eq %"class.std::__1::unique_ptr"* %400, %392
  br i1 %408, label %409, label %398

409:                                              ; preds = %407
  %410 = bitcast %"class.std::__1::vector.30"* %8 to i8**
  %411 = load i8*, i8** %410, align 8
  br label %412

412:                                              ; preds = %409, %394
  %413 = phi i8* [ %411, %409 ], [ %395, %394 ]
  store %"class.std::__1::unique_ptr"* %392, %"class.std::__1::unique_ptr"** %20, align 8
  call void @_ZdlPv(i8* %413) #13
  br label %414

414:                                              ; preds = %381, %412
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  ret void

415:                                              ; preds = %98, %429
  %416 = phi i64 [ %96, %98 ], [ %432, %429 ]
  %417 = phi i64 [ 0, %98 ], [ %430, %429 ]
  %418 = inttoptr i64 %416 to %"class.std::__1::unique_ptr"*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %99) #12
  %419 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %418, i64 %417, i32 0, i32 0, i32 0
  %420 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %419, align 8
  %421 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %420, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %17, %"class.net::IPAddress"* dereferenceable(17) %421, i16 zeroext 0) #12
  %422 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %90, align 8
  %423 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %91, align 8
  %424 = icmp eq %"class.net::IPEndPoint"* %422, %423
  br i1 %424, label %428, label %425

425:                                              ; preds = %415
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %422, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %17) #12
  %426 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %422, i64 1
  %427 = ptrtoint %"class.net::IPEndPoint"* %426 to i64
  store i64 %427, i64* %100, align 8
  br label %429

428:                                              ; preds = %415
  call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.9"* nonnull %101, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %17) #12
  br label %429

429:                                              ; preds = %425, %428
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %99) #12
  %430 = add nuw i64 %417, 1
  %431 = load i64, i64* %93, align 8
  %432 = load i64, i64* %95, align 8
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 3
  %435 = icmp ult i64 %430, %434
  br i1 %435, label %415, label %381
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12_GLOBAL__N_18GetScopeERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 {
  %3 = alloca %"class.net::IPAddress", align 1
  %4 = tail call zeroext i1 @_ZNK3net9IPAddress6IsIPv6Ev(%"class.net::IPAddress"* %1) #12
  br i1 %4, label %5, label %29

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 0, i32 0, i64 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 0, i32 0, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = and i8 %11, 15
  %13 = zext i8 %12 to i32
  br label %33

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %3, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %15) #12
  call void @_ZN3net9IPAddress13IPv6LocalhostEv(%"class.net::IPAddress"* nonnull sret %3) #12
  %16 = call zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"* %1, %"class.net::IPAddress"* nonnull dereferenceable(17) %3) #12
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %15) #12
  br i1 %16, label %33, label %17

17:                                               ; preds = %14
  %18 = load i8, i8* %6, align 1
  %19 = icmp eq i8 %18, -2
  %20 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %1, i64 0, i32 0, i32 0, i32 0, i64 1
  %21 = load i8, i8* %20, align 1
  %22 = and i8 %21, -64
  %23 = icmp eq i8 %22, -128
  %24 = and i1 %19, %23
  br i1 %24, label %33, label %25

25:                                               ; preds = %17
  %26 = icmp ugt i8 %21, -65
  %27 = and i1 %19, %26
  %28 = select i1 %27, i32 5, i32 14
  br label %33

29:                                               ; preds = %2
  %30 = tail call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %1) #12
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = tail call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %0, %"class.net::IPAddress"* dereferenceable(17) %1)
  br label %33

33:                                               ; preds = %17, %29, %25, %14, %31, %9
  %34 = phi i32 [ %13, %9 ], [ %32, %31 ], [ 2, %14 ], [ %28, %25 ], [ 1, %29 ], [ 2, %17 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #0 {
  %3 = alloca %"class.net::IPAddress", align 1
  %4 = alloca %"class.net::IPAddress", align 1
  %5 = tail call zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"* %1) #12
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %38, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %4, i64 0, i32 0, i32 0, i32 0, i64 0
  br label %25

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %3, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %16) #12
  call void @_ZN3net27ConvertIPv4ToIPv4MappedIPv6ERKNS_9IPAddressE(%"class.net::IPAddress"* nonnull sret %3, %"class.net::IPAddress"* dereferenceable(17) %1) #12
  %17 = call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %0, %"class.net::IPAddress"* nonnull dereferenceable(17) %3)
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %16) #12
  br label %43

18:                                               ; preds = %25
  %19 = zext i32 %37 to i64
  %20 = load i64, i64* %8, align 8
  %21 = load i64, i64* %10, align 8
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 24
  %24 = icmp ugt i64 %23, %19
  br i1 %24, label %25, label %38

25:                                               ; preds = %13, %18
  %26 = phi i64 [ %11, %13 ], [ %21, %18 ]
  %27 = phi i64 [ 0, %13 ], [ %19, %18 ]
  %28 = phi i32 [ 0, %13 ], [ %37, %18 ]
  %29 = inttoptr i64 %26 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %14) #12
  %30 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %29, i64 %27, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"* nonnull %4, i8* %30, i64 16) #12
  %31 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %29, i64 %27, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17) %1, %"class.net::IPAddress"* nonnull dereferenceable(17) %4, i64 %33) #12
  %35 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %29, i64 %27, i32 2
  %36 = load i32, i32* %35, align 4
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %14) #12
  %37 = add i32 %28, 1
  br i1 %34, label %43, label %18

38:                                               ; preds = %18, %6
  %39 = phi i64 [ %9, %6 ], [ %20, %18 ]
  %40 = inttoptr i64 %39 to %"struct.net::AddressSorterPosix::PolicyEntry"*
  %41 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %40, i64 -1, i32 2
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %25, %38, %15
  %44 = phi i32 [ %17, %15 ], [ %42, %38 ], [ %36, %25 ]
  ret i32 %44
}

declare void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net18AddressSorterPosix10FillPolicyERKNS_9IPAddressEPNS0_17SourceAddressInfoE(%"class.net::AddressSorterPosix"* nocapture readonly, %"class.net::IPAddress"* dereferenceable(17), %"struct.net::AddressSorterPosix::SourceAddressInfo"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6
  %5 = tail call fastcc i32 @_ZN3net12_GLOBAL__N_18GetScopeERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %4, %"class.net::IPAddress"* dereferenceable(17) %1)
  %6 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %2, i64 0, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5
  %8 = tail call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %7, %"class.net::IPAddress"* dereferenceable(17) %1)
  %9 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %2, i64 0, i32 1
  store i32 %8, i32* %9, align 4
  ret void
}

declare i64 @_ZN3net18CommonPrefixLengthERKNS_9IPAddressES2_(%"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_119CompareDestinationsERKNSt3__110unique_ptrINS0_15DestinationInfoENS1_14default_deleteIS3_EEEES8_(%"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr"* nocapture readonly dereferenceable(8)) #6 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %3, align 8
  %5 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %4, i64 0, i32 4
  %6 = load %"struct.net::AddressSorterPosix::SourceAddressInfo"*, %"struct.net::AddressSorterPosix::SourceAddressInfo"** %5, align 8
  %7 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %4, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %12, align 8
  %14 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %13, i64 0, i32 4
  %15 = load %"struct.net::AddressSorterPosix::SourceAddressInfo"*, %"struct.net::AddressSorterPosix::SourceAddressInfo"** %14, align 8
  %16 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %13, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %17, %19
  %21 = xor i1 %11, %20
  br i1 %21, label %82, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %6, i64 0, i32 3
  %24 = load i8, i8* %23, align 8, !range !13
  %25 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %15, i64 0, i32 3
  %26 = load i8, i8* %25, align 8, !range !13
  %27 = icmp eq i8 %24, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = icmp eq i8 %24, 0
  br label %82

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %6, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !13
  %33 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %15, i64 0, i32 4
  %34 = load i8, i8* %33, align 1, !range !13
  %35 = icmp eq i8 %32, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = icmp ne i8 %32, 0
  br label %82

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %6, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %4, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  %44 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %15, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %13, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %45, %47
  %49 = xor i1 %43, %48
  br i1 %49, label %82, label %50

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %4, i64 0, i32 2
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %13, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %58, label %56

56:                                               ; preds = %50
  %57 = icmp ugt i32 %52, %54
  br label %82

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %6, i64 0, i32 5
  %60 = load i8, i8* %59, align 2, !range !13
  %61 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %15, i64 0, i32 5
  %62 = load i8, i8* %61, align 2, !range !13
  %63 = icmp eq i8 %60, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  %65 = icmp ne i8 %60, 0
  br label %82

66:                                               ; preds = %58
  %67 = icmp eq i32 %10, %19
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = icmp slt i32 %10, %19
  br label %82

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %4, i64 0, i32 0, i32 0, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %13, i64 0, i32 0, i32 0, i32 1
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %72, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %4, i64 0, i32 5
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %13, i64 0, i32 5
  %80 = load i64, i64* %79, align 8
  %81 = icmp ugt i64 %78, %80
  ret i1 %81

82:                                               ; preds = %56, %64, %68, %38, %70, %2, %36, %28
  %83 = phi i1 [ %29, %28 ], [ %37, %36 ], [ %11, %2 ], [ %57, %56 ], [ %65, %64 ], [ %69, %68 ], [ %43, %38 ], [ false, %70 ]
  ret i1 %83
}

declare void @_ZN3net11AddressListC1Ev(%"class.net::AddressList"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18AddressSorterPosix18OnIPAddressChangedEv(%"class.net::AddressSorterPosix"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.137", align 1
  %4 = alloca %"class.std::__1::map.67", align 8
  %5 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %5, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %12, align 8
  %13 = tail call %"class.net::internal::AddressTrackerLinux"* @_ZN3net21NetworkChangeNotifier17GetAddressTrackerEv() #12
  %14 = icmp eq %"class.net::internal::AddressTrackerLinux"* %13, null
  br i1 %14, label %90, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.std::__1::map.67"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::map.67", %"class.std::__1::map.67"* %4, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::map.67"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_ZNK3net8internal19AddressTrackerLinux13GetAddressMapEv(%"class.std::__1::map.67"* nonnull sret %4, %"class.net::internal::AddressTrackerLinux"* nonnull %13) #12
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %20 = getelementptr inbounds %"class.std::__1::map.67", %"class.std::__1::map.67"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = icmp eq %"class.std::__1::__tree_end_node"* %19, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %24 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple.137", %"class.std::__1::tuple.137"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 0, i32 5
  br label %32

28:                                               ; preds = %87, %15
  %29 = getelementptr inbounds %"class.std::__1::map.67", %"class.std::__1::map.67"* %4, i64 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node.156"**
  %31 = load %"class.std::__1::__tree_node.156"*, %"class.std::__1::__tree_node.156"** %30, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.68"* nonnull %29, %"class.std::__1::__tree_node.156"* %31) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %90

32:                                               ; preds = %22, %87
  %33 = phi %"class.std::__1::__tree_end_node"* [ %19, %22 ], [ %88, %87 ]
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node.156"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.156", %"class.std::__1::__tree_node.156"* %34, i64 0, i32 1, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  store %"class.net::IPAddress"* %35, %"class.net::IPAddress"** %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #12
  %36 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %6, %"class.net::IPAddress"* dereferenceable(17) %35, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.137"* nonnull dereferenceable(1) %3) #12
  %37 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %36, 0
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 7
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"struct.net::AddressSorterPosix::SourceAddressInfo"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  %40 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %39, i64 0, i32 5
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.156", %"class.std::__1::__tree_node.156"* %34, i64 0, i32 1, i32 0, i32 1, i32 2
  %42 = load i8, i8* %41, align 2
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 9
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i8*
  %45 = lshr i8 %42, 5
  %46 = and i8 %45, 1
  store i8 %46, i8* %44, align 8
  %47 = load i8, i8* %41, align 2
  %48 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %39, i64 0, i32 4
  %49 = lshr i8 %47, 4
  %50 = and i8 %49, 1
  store i8 %50, i8* %48, align 1
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.156", %"class.std::__1::__tree_node.156"* %34, i64 0, i32 1, i32 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 8
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = call fastcc i32 @_ZN3net12_GLOBAL__N_18GetScopeERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %26, %"class.net::IPAddress"* dereferenceable(17) %35) #12
  %57 = bitcast %"class.std::__1::__tree_end_node"* %38 to i32*
  store i32 %56, i32* %57, align 8
  %58 = call fastcc i32 @_ZN3net12_GLOBAL__N_114GetPolicyValueERKNSt3__16vectorINS_18AddressSorterPosix11PolicyEntryENS1_9allocatorIS4_EEEERKNS_9IPAddressE(%"class.std::__1::vector"* dereferenceable(24) %27, %"class.net::IPAddress"* dereferenceable(17) %35) #12
  %59 = getelementptr inbounds %"struct.net::AddressSorterPosix::SourceAddressInfo", %"struct.net::AddressSorterPosix::SourceAddressInfo"* %39, i64 0, i32 1
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 1, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %71

63:                                               ; preds = %32
  %64 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 2
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to %"class.std::__1::__tree_end_node"**
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %64
  br i1 %70, label %87, label %78

71:                                               ; preds = %32, %71
  %72 = phi %"class.std::__1::__tree_node_base"* [ %74, %71 ], [ %61, %32 ]
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %76, label %71

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %72, i64 0, i32 0
  br label %87

78:                                               ; preds = %63, %78
  %79 = phi %"class.std::__1::__tree_end_node"** [ %82, %78 ], [ %66, %63 ]
  %80 = bitcast %"class.std::__1::__tree_end_node"** %79 to %"class.std::__1::__tree_node_base"**
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 2
  %83 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 0, i32 0
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %84, align 8
  %86 = icmp eq %"class.std::__1::__tree_node_base"* %85, %81
  br i1 %86, label %87, label %78

87:                                               ; preds = %78, %63, %76
  %88 = phi %"class.std::__1::__tree_end_node"* [ %77, %76 ], [ %67, %63 ], [ %83, %78 ]
  %89 = icmp eq %"class.std::__1::__tree_end_node"* %88, %20
  br i1 %89, label %28, label %32

90:                                               ; preds = %1, %28
  ret void
}

declare %"class.net::internal::AddressTrackerLinux"* @_ZN3net21NetworkChangeNotifier17GetAddressTrackerEv() local_unnamed_addr #1

declare void @_ZNK3net8internal19AddressTrackerLinux13GetAddressMapEv(%"class.std::__1::map.67"* sret, %"class.net::internal::AddressTrackerLinux"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N3net18AddressSorterPosix18OnIPAddressChangedEv(%"class.net::AddressSorterPosix"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::AddressSorterPosix", %"class.net::AddressSorterPosix"* %0, i64 -1, i32 6, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__compressed_pair.4"* %2 to %"class.net::AddressSorterPosix"*
  tail call void @_ZN3net18AddressSorterPosix18OnIPAddressChangedEv(%"class.net::AddressSorterPosix"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::AddressSorter"* @_ZN3net13AddressSorter19CreateAddressSorterEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 128) #13
  %2 = bitcast i8* %1 to %"class.net::AddressSorterPosix"*
  %3 = tail call %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() #12
  tail call void @_ZN3net18AddressSorterPosixC2EPNS_19ClientSocketFactoryE(%"class.net::AddressSorterPosix"* nonnull %2, %"class.net::ClientSocketFactory"* %3)
  %4 = bitcast i8* %1 to %"class.net::AddressSorter"*
  ret %"class.net::AddressSorter"* %4
}

declare %"class.net::ClientSocketFactory"* @_ZN3net19ClientSocketFactory17GetDefaultFactoryEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net13AddressSorterD2Ev(%"class.net::AddressSorter"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net13AddressSorterD0Ev(%"class.net::AddressSorter"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN3net12_GLOBAL__N_113ComparePolicyERKNS_18AddressSorterPosix11PolicyEntryES4_(%"struct.net::AddressSorterPosix::PolicyEntry"* nocapture readonly dereferenceable(24), %"struct.net::AddressSorterPosix::PolicyEntry"* nocapture readonly dereferenceable(24)) #6 {
  %3 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %4, %6
  ret i1 %7
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.net::AddressSorterPosix::PolicyEntry", align 4
  br label %5

5:                                                ; preds = %238, %3
  %6 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %1, %3 ], [ %212, %238 ]
  %7 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %0, %3 ], [ %18, %238 ]
  %8 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %6 to i64
  %9 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1
  %10 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %9, i64 0, i32 0, i64 0
  %11 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1, i32 1
  %12 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1, i32 2
  %13 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %9 to <16 x i8>*
  %14 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %6 to i64
  br label %15

15:                                               ; preds = %249, %5
  %16 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %7, %5 ], [ %250, %249 ]
  br label %17

17:                                               ; preds = %141, %15
  %18 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %16, %15 ], [ %132, %141 ]
  %19 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %18 to i64
  %20 = sub i64 %8, %19
  %21 = sdiv exact i64 %20, 24
  switch i64 %21, label %53 [
    i64 0, label %253
    i64 1, label %253
    i64 2, label %22
    i64 3, label %38
    i64 4, label %42
    i64 5, label %47
  ]

22:                                               ; preds = %17
  %23 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %24 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1
  %25 = tail call zeroext i1 %23(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %24, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %18) #12
  br i1 %25, label %26, label %253

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 0, i32 0, i64 0
  %28 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %18 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 4
  %30 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %24, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %34, i64 24, i1 false) #12
  %35 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %24 to <16 x i8>*
  store <16 x i8> %29, <16 x i8>* %35, align 4
  %36 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1, i32 1
  store i32 %31, i32* %36, align 4
  %37 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1, i32 2
  store i32 %33, i32* %37, align 4
  br label %253

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 1
  %40 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1
  %41 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %39, %"struct.net::AddressSorterPosix::PolicyEntry"* %40, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %253

42:                                               ; preds = %17
  %43 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 1
  %44 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 2
  %45 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1
  %46 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %43, %"struct.net::AddressSorterPosix::PolicyEntry"* %44, %"struct.net::AddressSorterPosix::PolicyEntry"* %45, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %253

47:                                               ; preds = %17
  %48 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 1
  %49 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 2
  %50 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 3
  %51 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i64 -1
  %52 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %48, %"struct.net::AddressSorterPosix::PolicyEntry"* %49, %"struct.net::AddressSorterPosix::PolicyEntry"* %50, %"struct.net::AddressSorterPosix::PolicyEntry"* %51, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %253

53:                                               ; preds = %17
  %54 = icmp slt i64 %20, 744
  br i1 %54, label %55, label %84

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 2
  %57 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 1
  %58 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %57, %"struct.net::AddressSorterPosix::PolicyEntry"* %56, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2) #12
  %59 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 3
  %60 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %59, %6
  br i1 %60, label %253, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %4, i64 0, i32 0, i64 0
  br label %63

63:                                               ; preds = %81, %61
  %64 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %59, %61 ], [ %82, %81 ]
  %65 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %56, %61 ], [ %64, %81 ]
  %66 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %67 = call zeroext i1 %66(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %64, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %65) #12
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  %69 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %64, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 %69, i64 24, i1 false) #12
  br label %70

70:                                               ; preds = %76, %68
  %71 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %64, %68 ], [ %72, %76 ]
  %72 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %65, %68 ], [ %78, %76 ]
  %73 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %71, i64 0, i32 0, i64 0
  %74 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %72, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 24, i1 false) #12
  %75 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %72, %18
  br i1 %75, label %80, label %76

76:                                               ; preds = %70
  %77 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %78 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %72, i64 -1
  %79 = call zeroext i1 %77(%"struct.net::AddressSorterPosix::PolicyEntry"* nonnull dereferenceable(24) %4, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %78) #12
  br i1 %79, label %70, label %80

80:                                               ; preds = %76, %70
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %74, i8* nonnull align 4 %62, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #12
  br label %81

81:                                               ; preds = %80, %63
  %82 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %64, i64 1
  %83 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %82, %6
  br i1 %83, label %253, label %63

84:                                               ; preds = %53
  %85 = icmp sgt i64 %20, 23976
  %86 = udiv i64 %20, 48
  %87 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 %86
  br i1 %85, label %88, label %93

88:                                               ; preds = %84
  %89 = udiv i64 %20, 96
  %90 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 %89
  %91 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %87, i64 %89
  %92 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %90, %"struct.net::AddressSorterPosix::PolicyEntry"* %87, %"struct.net::AddressSorterPosix::PolicyEntry"* %91, %"struct.net::AddressSorterPosix::PolicyEntry"* %9, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %95

93:                                               ; preds = %84
  %94 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %87, %"struct.net::AddressSorterPosix::PolicyEntry"* %9, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %95

95:                                               ; preds = %93, %88
  %96 = phi i32 [ %92, %88 ], [ %94, %93 ]
  %97 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %98 = tail call zeroext i1 %97(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %18, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %87) #12
  br i1 %98, label %171, label %99

99:                                               ; preds = %95, %155
  %100 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %101, %155 ], [ %9, %95 ]
  %101 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %100, i64 -1
  %102 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %18, %101
  br i1 %102, label %103, label %155

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 1
  %105 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %106 = tail call zeroext i1 %105(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %18, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %9) #12
  br i1 %106, label %125, label %107

107:                                              ; preds = %103
  %108 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %104, %9
  br i1 %108, label %253, label %109

109:                                              ; preds = %107, %122
  %110 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %123, %122 ], [ %104, %107 ]
  %111 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %112 = tail call zeroext i1 %111(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %18, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %110) #12
  br i1 %112, label %113, label %122

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %110, i64 0, i32 0, i64 0
  %115 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %110 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 4
  %117 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %110, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %110, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %114, i8* align 4 %10, i64 24, i1 false) #12
  store <16 x i8> %116, <16 x i8>* %13, align 4
  store i32 %118, i32* %11, align 4
  store i32 %120, i32* %12, align 4
  %121 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %110, i64 1
  br label %125

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %110, i64 1
  %124 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %123, %9
  br i1 %124, label %253, label %109

125:                                              ; preds = %113, %103
  %126 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %104, %103 ], [ %121, %113 ]
  %127 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %126, %9
  br i1 %127, label %253, label %128

128:                                              ; preds = %125, %143
  %129 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %135, %143 ], [ %126, %125 ]
  %130 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %139, %143 ], [ %9, %125 ]
  br label %131

131:                                              ; preds = %131, %128
  %132 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %129, %128 ], [ %135, %131 ]
  %133 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %134 = tail call zeroext i1 %133(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %18, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %132) #12
  %135 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %132, i64 1
  br i1 %134, label %136, label %131

136:                                              ; preds = %131, %136
  %137 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %139, %136 ], [ %130, %131 ]
  %138 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %139 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %137, i64 -1
  %140 = tail call zeroext i1 %138(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %18, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %139) #12
  br i1 %140, label %136, label %141

141:                                              ; preds = %136
  %142 = icmp ult %"struct.net::AddressSorterPosix::PolicyEntry"* %132, %139
  br i1 %142, label %143, label %17

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %132, i64 0, i32 0, i64 0
  %145 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %132 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 4
  %147 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %132, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %132, i64 0, i32 2
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %139, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %144, i8* align 4 %151, i64 24, i1 false) #12
  %152 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %139 to <16 x i8>*
  store <16 x i8> %146, <16 x i8>* %152, align 4
  %153 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %137, i64 -1, i32 1
  store i32 %148, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %137, i64 -1, i32 2
  store i32 %150, i32* %154, align 4
  br label %128

155:                                              ; preds = %99
  %156 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %157 = tail call zeroext i1 %156(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %101, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %87) #12
  br i1 %157, label %158, label %99

158:                                              ; preds = %155
  %159 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 0, i32 0, i64 0
  %160 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %18 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 4
  %162 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 0, i32 2
  %165 = load i32, i32* %164, align 4
  %166 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %101, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %166, i64 24, i1 false) #12
  %167 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %101 to <16 x i8>*
  store <16 x i8> %161, <16 x i8>* %167, align 4
  %168 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %100, i64 -1, i32 1
  store i32 %163, i32* %168, align 4
  %169 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %100, i64 -1, i32 2
  store i32 %165, i32* %169, align 4
  %170 = add i32 %96, 1
  br label %171

171:                                              ; preds = %95, %158
  %172 = phi i32 [ %170, %158 ], [ %96, %95 ]
  %173 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %101, %158 ], [ %9, %95 ]
  %174 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %18 to i64
  %175 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %18, i64 1
  %176 = icmp ult %"struct.net::AddressSorterPosix::PolicyEntry"* %175, %173
  br i1 %176, label %177, label %209

177:                                              ; preds = %171, %194
  %178 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %208, %194 ], [ %87, %171 ]
  %179 = phi i32 [ %206, %194 ], [ %172, %171 ]
  %180 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %186, %194 ], [ %175, %171 ]
  %181 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %190, %194 ], [ %173, %171 ]
  br label %182

182:                                              ; preds = %182, %177
  %183 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %180, %177 ], [ %186, %182 ]
  %184 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %185 = tail call zeroext i1 %184(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %183, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %178) #12
  %186 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %183, i64 1
  br i1 %185, label %182, label %187

187:                                              ; preds = %182, %187
  %188 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %190, %187 ], [ %181, %182 ]
  %189 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %190 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %188, i64 -1
  %191 = tail call zeroext i1 %189(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %190, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %178) #12
  br i1 %191, label %192, label %187

192:                                              ; preds = %187
  %193 = icmp ugt %"struct.net::AddressSorterPosix::PolicyEntry"* %183, %190
  br i1 %193, label %209, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %183, i64 0, i32 0, i64 0
  %196 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %183 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 4
  %198 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %183, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %183, i64 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %190, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %195, i8* align 4 %202, i64 24, i1 false) #12
  %203 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %190 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %203, align 4
  %204 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %188, i64 -1, i32 1
  store i32 %199, i32* %204, align 4
  %205 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %188, i64 -1, i32 2
  store i32 %201, i32* %205, align 4
  %206 = add i32 %179, 1
  %207 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %178, %183
  %208 = select i1 %207, %"struct.net::AddressSorterPosix::PolicyEntry"* %190, %"struct.net::AddressSorterPosix::PolicyEntry"* %178
  br label %177

209:                                              ; preds = %192, %171
  %210 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %87, %171 ], [ %178, %192 ]
  %211 = phi i32 [ %172, %171 ], [ %179, %192 ]
  %212 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %175, %171 ], [ %183, %192 ]
  %213 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %212, %210
  br i1 %213, label %230, label %214

214:                                              ; preds = %209
  %215 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %216 = tail call zeroext i1 %215(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %210, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %212) #12
  br i1 %216, label %217, label %230

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i64 0, i32 0, i64 0
  %219 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %212 to <16 x i8>*
  %220 = load <16 x i8>, <16 x i8>* %219, align 4
  %221 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i64 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i64 0, i32 2
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %210, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %218, i8* align 4 %225, i64 24, i1 false) #12
  %226 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %210 to <16 x i8>*
  store <16 x i8> %220, <16 x i8>* %226, align 4
  %227 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %210, i64 0, i32 1
  store i32 %222, i32* %227, align 4
  %228 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %210, i64 0, i32 2
  store i32 %224, i32* %228, align 4
  %229 = add i32 %211, 1
  br label %230

230:                                              ; preds = %209, %217, %214
  %231 = phi i32 [ %229, %217 ], [ %211, %214 ], [ %211, %209 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %240

233:                                              ; preds = %230
  %234 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEbT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  %235 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i64 1
  %236 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEbT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %235, %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br i1 %236, label %237, label %239

237:                                              ; preds = %233
  br i1 %234, label %253, label %238

238:                                              ; preds = %237, %251
  br label %5

239:                                              ; preds = %233
  br i1 %234, label %249, label %240

240:                                              ; preds = %239, %230
  %241 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %212 to i64
  %242 = sub i64 %241, %174
  %243 = sdiv exact i64 %242, 24
  %244 = sub i64 %14, %241
  %245 = sdiv exact i64 %244, 24
  %246 = icmp slt i64 %243, %245
  br i1 %246, label %247, label %251

247:                                              ; preds = %240
  tail call void @_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %18, %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  %248 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i64 1
  br label %249

249:                                              ; preds = %247, %239
  %250 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %235, %239 ], [ %248, %247 ]
  br label %15

251:                                              ; preds = %240
  %252 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %212, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEvT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %252, %"struct.net::AddressSorterPosix::PolicyEntry"* %6, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %238

253:                                              ; preds = %237, %125, %17, %17, %107, %122, %81, %55, %22, %26, %38, %42, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %3, align 8
  %6 = tail call zeroext i1 %5(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %0) #12
  %7 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %3, align 8
  %8 = tail call zeroext i1 %7(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %2, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1) #12
  br i1 %6, label %33, label %9

9:                                                ; preds = %4
  br i1 %8, label %10, label %62

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 0, i64 0
  %12 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  %13 = load <16 x i8>, <16 x i8>* %12, align 4
  %14 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %18, i64 24, i1 false) #12
  %19 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  store <16 x i8> %13, <16 x i8>* %19, align 4
  %20 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 1
  store i32 %15, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 2
  store i32 %17, i32* %21, align 4
  %22 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %3, align 8
  %23 = tail call zeroext i1 %22(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %0) #12
  br i1 %23, label %24, label %62

24:                                               ; preds = %10
  %25 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 0, i64 0
  %26 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %0 to <16 x i8>*
  %27 = load <16 x i8>, <16 x i8>* %26, align 4
  %28 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %11, i64 24, i1 false) #12
  %32 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  store <16 x i8> %27, <16 x i8>* %32, align 4
  store i32 %29, i32* %14, align 4
  store i32 %31, i32* %16, align 4
  br label %62

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 0, i64 0
  %35 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %0 to <16 x i8>*
  %36 = load <16 x i8>, <16 x i8>* %35, align 4
  %37 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  br i1 %8, label %41, label %46

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %42, i64 24, i1 false) #12
  %43 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  store <16 x i8> %36, <16 x i8>* %43, align 4
  %44 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 1
  store i32 %38, i32* %44, align 4
  %45 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 2
  store i32 %40, i32* %45, align 4
  br label %62

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %47, i64 24, i1 false) #12
  %48 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  store <16 x i8> %36, <16 x i8>* %48, align 4
  %49 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 1
  store i32 %38, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 2
  store i32 %40, i32* %50, align 4
  %51 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %3, align 8
  %52 = tail call zeroext i1 %51(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %2, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1) #12
  br i1 %52, label %53, label %62

53:                                               ; preds = %46
  %54 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 4
  %56 = load i32, i32* %49, align 4
  %57 = load i32, i32* %50, align 4
  %58 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %58, i64 24, i1 false) #12
  %59 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  store <16 x i8> %55, <16 x i8>* %59, align 4
  %60 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 1
  store i32 %56, i32* %60, align 4
  %61 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 2
  store i32 %57, i32* %61, align 4
  br label %62

62:                                               ; preds = %46, %53, %10, %24, %9, %41
  %63 = phi i32 [ 1, %41 ], [ 0, %9 ], [ 2, %24 ], [ 1, %10 ], [ 2, %53 ], [ 1, %46 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %0, %"struct.net::AddressSorterPosix::PolicyEntry"* %1, %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %4)
  %7 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %4, align 8
  %8 = tail call zeroext i1 %7(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %3, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %2) #12
  br i1 %8, label %9, label %46

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 0, i64 0
  %11 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  %12 = load <16 x i8>, <16 x i8>* %11, align 4
  %13 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %17, i64 24, i1 false) #12
  %18 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %3 to <16 x i8>*
  store <16 x i8> %12, <16 x i8>* %18, align 4
  %19 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i64 0, i32 1
  store i32 %14, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i64 0, i32 2
  store i32 %16, i32* %20, align 4
  %21 = add i32 %6, 1
  %22 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %4, align 8
  %23 = tail call zeroext i1 %22(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %2, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1) #12
  br i1 %23, label %24, label %46

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 0, i64 0
  %26 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  %27 = load <16 x i8>, <16 x i8>* %26, align 4
  %28 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %10, i64 24, i1 false) #12
  %32 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  store <16 x i8> %27, <16 x i8>* %32, align 4
  store i32 %29, i32* %13, align 4
  store i32 %31, i32* %15, align 4
  %33 = add i32 %6, 2
  %34 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %4, align 8
  %35 = tail call zeroext i1 %34(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %0) #12
  br i1 %35, label %36, label %46

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 0, i64 0
  %38 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %0 to <16 x i8>*
  %39 = load <16 x i8>, <16 x i8>* %38, align 4
  %40 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %25, i64 24, i1 false) #12
  %44 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  store <16 x i8> %39, <16 x i8>* %44, align 4
  store i32 %41, i32* %28, align 4
  store i32 %43, i32* %30, align 4
  %45 = add i32 %6, 3
  br label %46

46:                                               ; preds = %9, %36, %24, %5
  %47 = phi i32 [ %45, %36 ], [ %33, %24 ], [ %21, %9 ], [ %6, %5 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %0, %"struct.net::AddressSorterPosix::PolicyEntry"* %1, %"struct.net::AddressSorterPosix::PolicyEntry"* %2, %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %5)
  %8 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %5, align 8
  %9 = tail call zeroext i1 %8(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %4, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %3) #12
  br i1 %9, label %10, label %59

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i64 0, i32 0, i64 0
  %12 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %3 to <16 x i8>*
  %13 = load <16 x i8>, <16 x i8>* %12, align 4
  %14 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %3, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %4, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %18, i64 24, i1 false) #12
  %19 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %4 to <16 x i8>*
  store <16 x i8> %13, <16 x i8>* %19, align 4
  %20 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %4, i64 0, i32 1
  store i32 %15, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %4, i64 0, i32 2
  store i32 %17, i32* %21, align 4
  %22 = add i32 %7, 1
  %23 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %5, align 8
  %24 = tail call zeroext i1 %23(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %3, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %2) #12
  br i1 %24, label %25, label %59

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 0, i64 0
  %27 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  %28 = load <16 x i8>, <16 x i8>* %27, align 4
  %29 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %2, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %11, i64 24, i1 false) #12
  %33 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %3 to <16 x i8>*
  store <16 x i8> %28, <16 x i8>* %33, align 4
  store i32 %30, i32* %14, align 4
  store i32 %32, i32* %16, align 4
  %34 = add i32 %7, 2
  %35 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %5, align 8
  %36 = tail call zeroext i1 %35(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %2, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1) #12
  br i1 %36, label %37, label %59

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 0, i64 0
  %39 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  %40 = load <16 x i8>, <16 x i8>* %39, align 4
  %41 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %26, i64 24, i1 false) #12
  %45 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %2 to <16 x i8>*
  store <16 x i8> %40, <16 x i8>* %45, align 4
  store i32 %42, i32* %29, align 4
  store i32 %44, i32* %31, align 4
  %46 = add i32 %7, 3
  %47 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %5, align 8
  %48 = tail call zeroext i1 %47(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %1, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %0) #12
  br i1 %48, label %49, label %59

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 0, i64 0
  %51 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %0 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 4
  %53 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 2
  %56 = load i32, i32* %55, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %38, i64 24, i1 false) #12
  %57 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to <16 x i8>*
  store <16 x i8> %52, <16 x i8>* %57, align 4
  store i32 %54, i32* %41, align 4
  store i32 %56, i32* %43, align 4
  %58 = add i32 %7, 4
  br label %59

59:                                               ; preds = %10, %37, %49, %25, %6
  %60 = phi i32 [ %58, %49 ], [ %46, %37 ], [ %34, %25 ], [ %22, %10 ], [ %7, %6 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEbT0_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.net::AddressSorterPosix::PolicyEntry", align 4
  %5 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %1 to i64
  %6 = ptrtoint %"struct.net::AddressSorterPosix::PolicyEntry"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = sdiv exact i64 %7, 24
  switch i64 %8, label %40 [
    i64 0, label %76
    i64 1, label %76
    i64 2, label %9
    i64 3, label %25
    i64 4, label %29
    i64 5, label %34
  ]

9:                                                ; preds = %3
  %10 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %11 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 -1
  %12 = tail call zeroext i1 %10(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %11, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %0) #12
  br i1 %12, label %13, label %76

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 0, i64 0
  %15 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %0 to <16 x i8>*
  %16 = load <16 x i8>, <16 x i8>* %15, align 4
  %17 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %11, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %21, i64 24, i1 false) #12
  %22 = bitcast %"struct.net::AddressSorterPosix::PolicyEntry"* %11 to <16 x i8>*
  store <16 x i8> %16, <16 x i8>* %22, align 4
  %23 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 -1, i32 1
  store i32 %18, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 -1, i32 2
  store i32 %20, i32* %24, align 4
  br label %76

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 1
  %27 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 -1
  %28 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %0, %"struct.net::AddressSorterPosix::PolicyEntry"* %26, %"struct.net::AddressSorterPosix::PolicyEntry"* %27, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %76

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 1
  %31 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 2
  %32 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 -1
  %33 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %0, %"struct.net::AddressSorterPosix::PolicyEntry"* %30, %"struct.net::AddressSorterPosix::PolicyEntry"* %31, %"struct.net::AddressSorterPosix::PolicyEntry"* %32, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %76

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 1
  %36 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 2
  %37 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 3
  %38 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %1, i64 -1
  %39 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %0, %"struct.net::AddressSorterPosix::PolicyEntry"* %35, %"struct.net::AddressSorterPosix::PolicyEntry"* %36, %"struct.net::AddressSorterPosix::PolicyEntry"* %37, %"struct.net::AddressSorterPosix::PolicyEntry"* %38, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  br label %76

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 2
  %42 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 1
  %43 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN3net18AddressSorterPosix11PolicyEntryES5_EPS3_EEjT0_SA_SA_T_(%"struct.net::AddressSorterPosix::PolicyEntry"* %0, %"struct.net::AddressSorterPosix::PolicyEntry"* %42, %"struct.net::AddressSorterPosix::PolicyEntry"* %41, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** dereferenceable(8) %2)
  %44 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %0, i64 3
  %45 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %44, %1
  br i1 %45, label %76, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %4, i64 0, i32 0, i64 0
  br label %48

48:                                               ; preds = %46, %69
  %49 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %44, %46 ], [ %71, %69 ]
  %50 = phi i32 [ 0, %46 ], [ %70, %69 ]
  %51 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %41, %46 ], [ %49, %69 ]
  %52 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %53 = call zeroext i1 %52(%"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %49, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %51) #12
  br i1 %53, label %54, label %69

54:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %55 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %49, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* align 4 %55, i64 24, i1 false)
  br label %56

56:                                               ; preds = %62, %54
  %57 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %49, %54 ], [ %58, %62 ]
  %58 = phi %"struct.net::AddressSorterPosix::PolicyEntry"* [ %51, %54 ], [ %64, %62 ]
  %59 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %57, i64 0, i32 0, i64 0
  %60 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %58, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 24, i1 false)
  %61 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %58, %0
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = load i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)*, i1 (%"struct.net::AddressSorterPosix::PolicyEntry"*, %"struct.net::AddressSorterPosix::PolicyEntry"*)** %2, align 8
  %64 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %58, i64 -1
  %65 = call zeroext i1 %63(%"struct.net::AddressSorterPosix::PolicyEntry"* nonnull dereferenceable(24) %4, %"struct.net::AddressSorterPosix::PolicyEntry"* dereferenceable(24) %64) #12
  br i1 %65, label %56, label %66

66:                                               ; preds = %56, %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %47, i64 24, i1 false)
  %67 = add i32 %50, 1
  %68 = icmp eq i32 %67, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  br i1 %68, label %73, label %69

69:                                               ; preds = %66, %48
  %70 = phi i32 [ %67, %66 ], [ %50, %48 ]
  %71 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %49, i64 1
  %72 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %71, %1
  br i1 %72, label %76, label %48

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.net::AddressSorterPosix::PolicyEntry", %"struct.net::AddressSorterPosix::PolicyEntry"* %49, i64 1
  %75 = icmp eq %"struct.net::AddressSorterPosix::PolicyEntry"* %74, %1
  br label %76

76:                                               ; preds = %69, %73, %40, %9, %13, %3, %3, %34, %29, %25
  %77 = phi i1 [ true, %34 ], [ true, %29 ], [ true, %25 ], [ true, %3 ], [ true, %3 ], [ true, %13 ], [ true, %9 ], [ true, %40 ], [ %75, %73 ], [ true, %69 ]
  ret i1 %77
}

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv6Ev(%"class.net::IPAddress"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddress6IsIPv4Ev(%"class.net::IPAddress"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9IPAddresseqERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare void @_ZN3net9IPAddress13IPv6LocalhostEv(%"class.net::IPAddress"* sret) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #2

declare void @_ZN3net27ConvertIPv4ToIPv4MappedIPv6ERKNS_9IPAddressE(%"class.net::IPAddress"* sret, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17), i64) local_unnamed_addr #1

declare void @_ZN3net9IPAddressC2EPKhm(%"class.net::IPAddress"*, i8*, i64) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.9"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.net::IPEndPoint"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 20
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 922337203685477580
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::IPEndPoint"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 20
  %20 = icmp ult i64 %19, 461168601842738790
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 922337203685477580, %14 ]
  %28 = mul i64 %27, 20
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.net::IPEndPoint"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.net::IPEndPoint"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %9
  %35 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %33, i64 %32
  %36 = ptrtoint %"class.net::IPEndPoint"* %35 to i64
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"* dereferenceable(20) %1) #12
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %34, i64 1
  %38 = ptrtoint %"class.net::IPEndPoint"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %41 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %42 = icmp eq %"class.net::IPEndPoint"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.net::IPEndPoint"* %34 to i64
  store i64 %44, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %60

45:                                               ; preds = %31, %45
  %46 = phi %"class.net::IPEndPoint"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.net::IPEndPoint"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %46, i64 -1
  %49 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %47, i64 -1
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #12
  %50 = icmp eq %"class.net::IPEndPoint"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %39, align 8
  %53 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  %54 = ptrtoint %"class.net::IPEndPoint"* %48 to i64
  store i64 %54, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %55 = icmp eq %"class.net::IPEndPoint"* %53, %52
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %56
  %57 = phi %"class.net::IPEndPoint"* [ %58, %56 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %57, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %58) #12
  %59 = icmp eq %"class.net::IPEndPoint"* %58, %52
  br i1 %59, label %60, label %56

60:                                               ; preds = %56, %43, %51
  %61 = phi %"class.net::IPEndPoint"* [ %40, %43 ], [ %52, %51 ], [ %52, %56 ]
  %62 = icmp eq %"class.net::IPEndPoint"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %63
  ret void
}

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !13
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  ret void

12:                                               ; preds = %2
  ret void
}

declare i32 @_ZN7logging18GetVlogLevelHelperEPKcm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.net::IPAddress"* dereferenceable(17), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.137"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %33, %10
  %13 = phi %"class.std::__1::__tree_node"* [ %36, %33 ], [ %8, %10 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %35, %33 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %1, %"class.net::IPAddress"* dereferenceable(17) %15) #12
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

23:                                               ; preds = %12
  %24 = tail call zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"* %15, %"class.net::IPAddress"* dereferenceable(17) %1) #12
  br i1 %24, label %25, label %31

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %25, %17
  %34 = phi %"class.std::__1::__tree_node_base"* [ %19, %17 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %18, %17 ], [ %26, %25 ]
  %36 = bitcast %"class.std::__1::__tree_node_base"* %34 to %"class.std::__1::__tree_node"*
  br label %12

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %39

39:                                               ; preds = %21, %29, %31, %37
  %40 = phi %"class.std::__1::__tree_end_node"* [ %6, %37 ], [ %22, %21 ], [ %30, %29 ], [ %32, %31 ]
  %41 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %18, %21 ], [ %26, %29 ], [ %14, %31 ]
  %42 = bitcast %"class.std::__1::__tree_node_base"** %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node"* %43, null
  br i1 %44, label %45, label %73

45:                                               ; preds = %39
  %46 = tail call i8* @_Znwm(i64 80) #13, !noalias !14
  %47 = getelementptr inbounds i8, i8* %46, i64 32
  %48 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %48, align 8, !noalias !14
  %50 = bitcast i8* %47 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"* %50, %"class.net::IPAddress"* dereferenceable(17) %49) #12, !noalias !14
  %51 = getelementptr inbounds i8, i8* %46, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #12, !noalias !14
  %52 = bitcast i8* %46 to %"class.std::__1::__tree_node"*
  %53 = bitcast i8* %46 to %"class.std::__1::__tree_node_base"*
  %54 = getelementptr inbounds i8, i8* %46, i64 16
  %55 = bitcast i8* %54 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %55, align 8
  %56 = bitcast %"class.std::__1::__tree_node_base"** %41 to i8**
  store i8* %46, i8** %56, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %45
  %63 = ptrtoint %"class.std::__1::__tree_node_base"* %60 to i64
  %64 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  br label %66

66:                                               ; preds = %62, %45
  %67 = phi %"class.std::__1::__tree_node_base"* [ %53, %45 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"* %67) #12
  %70 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %73

73:                                               ; preds = %66, %39
  %74 = phi i8 [ 1, %66 ], [ 0, %39 ]
  %75 = phi %"class.std::__1::__tree_node"* [ %52, %66 ], [ %43, %39 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 0, i32 0
  %77 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %76, 0
  %78 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %77, i8 %74, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %78
}

declare zeroext i1 @_ZNK3net9IPAddressltERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #1

declare void @_ZN3net9IPAddressC1ERKS0_(%"class.net::IPAddress"*, %"class.net::IPAddress"* dereferenceable(17)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !13
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*, i64) unnamed_addr #0 {
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  switch i64 %3, label %17 [
    i64 0, label %178
    i64 1, label %178
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %11 = tail call zeroext i1 %9(%"class.std::__1::unique_ptr"* dereferenceable(8) %10, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #12
  br i1 %11, label %12, label %178

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  br label %178

17:                                               ; preds = %6
  %18 = icmp slt i64 %3, 1
  br i1 %18, label %19, label %74

19:                                               ; preds = %17
  %20 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %20, label %178, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %23 = icmp eq %"class.std::__1::unique_ptr"* %22, %1
  br i1 %23, label %178, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  br label %28

28:                                               ; preds = %58, %24
  %29 = phi %"class.std::__1::unique_ptr"* [ %22, %24 ], [ %59, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %30, align 8
  store i64 %32, i64* %27, align 8
  %33 = icmp eq %"class.std::__1::unique_ptr"* %29, %0
  br i1 %33, label %42, label %34

34:                                               ; preds = %28, %72
  %35 = phi %"class.std::__1::unique_ptr"* [ %37, %72 ], [ %29, %28 ]
  %36 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 -1
  %38 = call zeroext i1 %36(%"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %7, %"class.std::__1::unique_ptr"* dereferenceable(8) %37) #12
  br i1 %38, label %61, label %39

39:                                               ; preds = %72, %34
  %40 = phi %"class.std::__1::unique_ptr"* [ %35, %34 ], [ %0, %72 ]
  %41 = load i64, i64* %27, align 8
  br label %42

42:                                               ; preds = %39, %28
  %43 = phi i64 [ %32, %28 ], [ %41, %39 ]
  %44 = phi %"class.std::__1::unique_ptr"* [ %0, %28 ], [ %40, %39 ]
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %26, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %46, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %46, i64 0, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %50) #12
  %51 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %49, %42
  %53 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %26, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %26, align 8
  %54 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %53, i64 0, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %56) #12
  %57 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %55, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %60 = icmp eq %"class.std::__1::unique_ptr"* %59, %1
  br i1 %60, label %178, label %28

61:                                               ; preds = %34
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  %64 = load i64, i64* %63, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %62, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %35, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr"* %35 to i64*
  store i64 %64, i64* %67, align 8
  %68 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %66, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %66, i64 0, i32 0
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %70) #12
  %71 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %69, %61
  %73 = icmp eq %"class.std::__1::unique_ptr"* %37, %0
  br i1 %73, label %39, label %34

74:                                               ; preds = %17
  %75 = lshr i64 %3, 1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %75
  %77 = icmp sgt i64 %3, %5
  br i1 %77, label %176, label %78

78:                                               ; preds = %74
  tail call fastcc void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %76, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %75, %"class.std::__1::unique_ptr"* %4)
  %79 = sub nsw i64 %3, %75
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %75
  tail call fastcc void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE(%"class.std::__1::unique_ptr"* %76, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %79, %"class.std::__1::unique_ptr"* %80)
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %3
  br label %84

82:                                               ; preds = %137
  %83 = icmp eq %"class.std::__1::unique_ptr"* %138, %81
  br i1 %83, label %159, label %142

84:                                               ; preds = %78, %137
  %85 = phi %"class.std::__1::unique_ptr"* [ %139, %137 ], [ %4, %78 ]
  %86 = phi %"class.std::__1::unique_ptr"* [ %138, %137 ], [ %80, %78 ]
  %87 = phi %"class.std::__1::unique_ptr"* [ %140, %137 ], [ %0, %78 ]
  %88 = icmp eq %"class.std::__1::unique_ptr"* %86, %81
  br i1 %88, label %89, label %108

89:                                               ; preds = %84
  %90 = icmp eq %"class.std::__1::unique_ptr"* %85, %80
  br i1 %90, label %159, label %91

91:                                               ; preds = %89, %104
  %92 = phi %"class.std::__1::unique_ptr"* [ %105, %104 ], [ %85, %89 ]
  %93 = phi %"class.std::__1::unique_ptr"* [ %106, %104 ], [ %87, %89 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %94, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 0, i32 0, i32 0, i32 0
  %98 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %96, i64* %99, align 8
  %100 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %98, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %98, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %102) #12
  %103 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %101, %91
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 1
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %93, i64 1
  %107 = icmp eq %"class.std::__1::unique_ptr"* %105, %80
  br i1 %107, label %159, label %91

108:                                              ; preds = %84
  %109 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %110 = tail call zeroext i1 %109(%"class.std::__1::unique_ptr"* dereferenceable(8) %86, %"class.std::__1::unique_ptr"* dereferenceable(8) %85) #12
  br i1 %110, label %111, label %124

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %114 = load i64, i64* %113, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %112, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %116 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %115, align 8
  %117 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 %114, i64* %117, align 8
  %118 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %116, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %116, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %120) #12
  %121 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %119, %111
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  br label %137

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %126 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  %127 = load i64, i64* %126, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %125, align 8
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %129 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 %127, i64* %130, align 8
  %131 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %129, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %129, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %133) #12
  %134 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %132, %124
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 1
  br label %137

137:                                              ; preds = %135, %122
  %138 = phi %"class.std::__1::unique_ptr"* [ %123, %122 ], [ %86, %135 ]
  %139 = phi %"class.std::__1::unique_ptr"* [ %85, %122 ], [ %136, %135 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %141 = icmp eq %"class.std::__1::unique_ptr"* %139, %80
  br i1 %141, label %82, label %84

142:                                              ; preds = %82, %155
  %143 = phi %"class.std::__1::unique_ptr"* [ %156, %155 ], [ %138, %82 ]
  %144 = phi %"class.std::__1::unique_ptr"* [ %157, %155 ], [ %140, %82 ]
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 0, i32 0, i32 0, i32 0
  %146 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  %147 = load i64, i64* %146, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %145, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 0, i32 0, i32 0, i32 0
  %149 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %148, align 8
  %150 = bitcast %"class.std::__1::unique_ptr"* %144 to i64*
  store i64 %147, i64* %150, align 8
  %151 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %149, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %142
  %153 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %149, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %153) #12
  %154 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %152, %142
  %156 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 1
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 1
  %158 = icmp eq %"class.std::__1::unique_ptr"* %156, %81
  br i1 %158, label %159, label %142

159:                                              ; preds = %155, %104, %82, %89
  %160 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  %161 = icmp eq i64 %3, 0
  %162 = or i1 %161, %160
  br i1 %162, label %178, label %163

163:                                              ; preds = %159, %172
  %164 = phi i64 [ %173, %172 ], [ 0, %159 ]
  %165 = phi %"class.std::__1::unique_ptr"* [ %174, %172 ], [ %4, %159 ]
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %166, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %166, align 8
  %168 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %167, null
  br i1 %168, label %172, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %167, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %170) #12
  %171 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %171) #13
  br label %172

172:                                              ; preds = %169, %163
  %173 = add nuw i64 %164, 1
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 1
  %175 = icmp eq i64 %173, %3
  br i1 %175, label %178, label %163

176:                                              ; preds = %74
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %76, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %75, %"class.std::__1::unique_ptr"* %4, i64 %5)
  %177 = sub nsw i64 %3, %75
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %76, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %177, %"class.std::__1::unique_ptr"* %4, i64 %5)
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %76, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %75, i64 %177, %"class.std::__1::unique_ptr"* %4, i64 %5)
  br label %178

178:                                              ; preds = %172, %58, %159, %21, %19, %176, %8, %12, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*) unnamed_addr #0 {
  switch i64 %3, label %35 [
    i64 0, label %290
    i64 1, label %6
    i64 2, label %11
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %9, i64* %10, align 8
  br label %290

11:                                               ; preds = %5
  %12 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %14 = tail call zeroext i1 %12(%"class.std::__1::unique_ptr"* dereferenceable(8) %13, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #12
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %16, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %21, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %23, i64* %24, align 8
  br label %290

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %33 = load i64, i64* %32, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %31, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %33, i64* %34, align 8
  br label %290

35:                                               ; preds = %5
  %36 = icmp slt i64 %3, 9
  br i1 %36, label %37, label %98

37:                                               ; preds = %35
  %38 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %38, label %290, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr"* %44, %1
  br i1 %45, label %290, label %46

46:                                               ; preds = %39, %95
  %47 = phi %"class.std::__1::unique_ptr"* [ %96, %95 ], [ %44, %39 ]
  %48 = phi %"class.std::__1::unique_ptr"* [ %49, %95 ], [ %4, %39 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 1
  %50 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %51 = tail call zeroext i1 %50(%"class.std::__1::unique_ptr"* dereferenceable(8) %47, %"class.std::__1::unique_ptr"* dereferenceable(8) %48) #12
  br i1 %51, label %52, label %90

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %55 = load i64, i64* %54, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %53, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %55, i64* %56, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr"* %48, %4
  br i1 %57, label %78, label %58

58:                                               ; preds = %52, %76
  %59 = phi %"class.std::__1::unique_ptr"* [ %61, %76 ], [ %48, %52 ]
  %60 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1
  %62 = tail call zeroext i1 %60(%"class.std::__1::unique_ptr"* dereferenceable(8) %47, %"class.std::__1::unique_ptr"* dereferenceable(8) %61) #12
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  br label %78

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  %68 = load i64, i64* %67, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %66, align 8
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %70 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %69, align 8
  %71 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  store i64 %68, i64* %71, align 8
  %72 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %70, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %70, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %74) #12
  %75 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %73, %65
  %77 = icmp eq %"class.std::__1::unique_ptr"* %61, %4
  br i1 %77, label %78, label %58

78:                                               ; preds = %76, %63, %52
  %79 = phi i64* [ %43, %52 ], [ %64, %63 ], [ %43, %76 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %4, %52 ], [ %59, %63 ], [ %4, %76 ]
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %83 = load i64, i64* %82, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %81, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %85 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %84, align 8
  store i64 %83, i64* %79, align 8
  %86 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %85, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %85, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %88) #12
  %89 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %89) #13
  br label %95

90:                                               ; preds = %46
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %93 = load i64, i64* %92, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %93, i64* %94, align 8
  br label %95

95:                                               ; preds = %90, %87, %78
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 1
  %97 = icmp eq %"class.std::__1::unique_ptr"* %96, %1
  br i1 %97, label %290, label %46

98:                                               ; preds = %35
  %99 = lshr i64 %3, 1
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %99
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %100, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %99, %"class.std::__1::unique_ptr"* %4, i64 %99)
  %101 = sub nsw i64 %3, %99
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %99
  tail call fastcc void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_T_NS_15iterator_traitsISG_E15difference_typeEPNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %100, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %101, %"class.std::__1::unique_ptr"* %102, i64 %101)
  %103 = icmp eq i64 %99, 0
  br i1 %103, label %104, label %185

104:                                              ; preds = %285, %98
  %105 = phi %"class.std::__1::unique_ptr"* [ %100, %98 ], [ %286, %285 ]
  %106 = phi %"class.std::__1::unique_ptr"* [ %4, %98 ], [ %288, %285 ]
  %107 = icmp eq %"class.std::__1::unique_ptr"* %105, %1
  br i1 %107, label %290, label %108

108:                                              ; preds = %104
  %109 = ptrtoint %"class.std::__1::unique_ptr"* %105 to i64
  %110 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %111 = ptrtoint %"struct.net::(anonymous namespace)::DestinationInfo"** %110 to i64
  %112 = sub i64 %111, %109
  %113 = lshr i64 %112, 3
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 7
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %108, %117
  %118 = phi %"class.std::__1::unique_ptr"* [ %126, %117 ], [ %106, %108 ]
  %119 = phi %"class.std::__1::unique_ptr"* [ %125, %117 ], [ %105, %108 ]
  %120 = phi i64 [ %127, %117 ], [ %115, %108 ]
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr"* %118 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %119, i64 1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 1
  %127 = add i64 %120, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %117, !llvm.loop !17

129:                                              ; preds = %117, %108
  %130 = phi %"class.std::__1::unique_ptr"* [ %106, %108 ], [ %126, %117 ]
  %131 = phi %"class.std::__1::unique_ptr"* [ %105, %108 ], [ %125, %117 ]
  %132 = icmp ult i64 %112, 56
  br i1 %132, label %290, label %133

133:                                              ; preds = %129, %133
  %134 = phi %"class.std::__1::unique_ptr"* [ %183, %133 ], [ %130, %129 ]
  %135 = phi %"class.std::__1::unique_ptr"* [ %182, %133 ], [ %131, %129 ]
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 0, i32 0, i32 0, i32 0
  %137 = bitcast %"class.std::__1::unique_ptr"* %135 to i64*
  %138 = load i64, i64* %137, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %136, align 8
  %139 = bitcast %"class.std::__1::unique_ptr"* %134 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr"* %140 to i64*
  %144 = load i64, i64* %143, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr"* %152 to i64*
  %156 = load i64, i64* %155, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr"* %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr"* %158 to i64*
  %162 = load i64, i64* %161, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  %168 = load i64, i64* %167, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr"* %170 to i64*
  %174 = load i64, i64* %173, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %176, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  %180 = load i64, i64* %179, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %135, i64 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %134, i64 8
  %184 = icmp eq %"class.std::__1::unique_ptr"* %182, %1
  br i1 %184, label %290, label %133

185:                                              ; preds = %98, %285
  %186 = phi %"class.std::__1::unique_ptr"* [ %288, %285 ], [ %4, %98 ]
  %187 = phi %"class.std::__1::unique_ptr"* [ %287, %285 ], [ %0, %98 ]
  %188 = phi %"class.std::__1::unique_ptr"* [ %286, %285 ], [ %100, %98 ]
  %189 = icmp eq %"class.std::__1::unique_ptr"* %188, %1
  br i1 %189, label %190, label %270

190:                                              ; preds = %185
  %191 = icmp eq %"class.std::__1::unique_ptr"* %187, %100
  br i1 %191, label %290, label %192

192:                                              ; preds = %190
  %193 = ptrtoint %"class.std::__1::unique_ptr"* %187 to i64
  %194 = add nsw i64 %99, -1
  %195 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %194, i32 0, i32 0, i32 0
  %196 = ptrtoint %"struct.net::(anonymous namespace)::DestinationInfo"** %195 to i64
  %197 = sub i64 %196, %193
  %198 = lshr i64 %197, 3
  %199 = add nuw nsw i64 %198, 1
  %200 = and i64 %199, 7
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %214, label %202

202:                                              ; preds = %192, %202
  %203 = phi %"class.std::__1::unique_ptr"* [ %211, %202 ], [ %186, %192 ]
  %204 = phi %"class.std::__1::unique_ptr"* [ %210, %202 ], [ %187, %192 ]
  %205 = phi i64 [ %212, %202 ], [ %200, %192 ]
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %204, i64 0, i32 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::unique_ptr"* %204 to i64*
  %208 = load i64, i64* %207, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %206, align 8
  %209 = bitcast %"class.std::__1::unique_ptr"* %203 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %204, i64 1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 1
  %212 = add i64 %205, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %202, !llvm.loop !18

214:                                              ; preds = %202, %192
  %215 = phi %"class.std::__1::unique_ptr"* [ %186, %192 ], [ %211, %202 ]
  %216 = phi %"class.std::__1::unique_ptr"* [ %187, %192 ], [ %210, %202 ]
  %217 = icmp ult i64 %197, 56
  br i1 %217, label %290, label %218

218:                                              ; preds = %214, %218
  %219 = phi %"class.std::__1::unique_ptr"* [ %268, %218 ], [ %215, %214 ]
  %220 = phi %"class.std::__1::unique_ptr"* [ %267, %218 ], [ %216, %214 ]
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 0, i32 0, i32 0, i32 0
  %222 = bitcast %"class.std::__1::unique_ptr"* %220 to i64*
  %223 = load i64, i64* %222, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %221, align 8
  %224 = bitcast %"class.std::__1::unique_ptr"* %219 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 1
  %226 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 1
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %225, i64 0, i32 0, i32 0, i32 0
  %228 = bitcast %"class.std::__1::unique_ptr"* %225 to i64*
  %229 = load i64, i64* %228, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %227, align 8
  %230 = bitcast %"class.std::__1::unique_ptr"* %226 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 2
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 2
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %231, i64 0, i32 0, i32 0, i32 0
  %234 = bitcast %"class.std::__1::unique_ptr"* %231 to i64*
  %235 = load i64, i64* %234, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %233, align 8
  %236 = bitcast %"class.std::__1::unique_ptr"* %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 3
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 3
  %239 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %237, i64 0, i32 0, i32 0, i32 0
  %240 = bitcast %"class.std::__1::unique_ptr"* %237 to i64*
  %241 = load i64, i64* %240, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %239, align 8
  %242 = bitcast %"class.std::__1::unique_ptr"* %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 4
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 4
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %243, i64 0, i32 0, i32 0, i32 0
  %246 = bitcast %"class.std::__1::unique_ptr"* %243 to i64*
  %247 = load i64, i64* %246, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %245, align 8
  %248 = bitcast %"class.std::__1::unique_ptr"* %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 5
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 5
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %249, i64 0, i32 0, i32 0, i32 0
  %252 = bitcast %"class.std::__1::unique_ptr"* %249 to i64*
  %253 = load i64, i64* %252, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %251, align 8
  %254 = bitcast %"class.std::__1::unique_ptr"* %250 to i64*
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 6
  %256 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 6
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %255, i64 0, i32 0, i32 0, i32 0
  %258 = bitcast %"class.std::__1::unique_ptr"* %255 to i64*
  %259 = load i64, i64* %258, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %257, align 8
  %260 = bitcast %"class.std::__1::unique_ptr"* %256 to i64*
  store i64 %259, i64* %260, align 8
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 7
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 7
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %261, i64 0, i32 0, i32 0, i32 0
  %264 = bitcast %"class.std::__1::unique_ptr"* %261 to i64*
  %265 = load i64, i64* %264, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %263, align 8
  %266 = bitcast %"class.std::__1::unique_ptr"* %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 8
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %219, i64 8
  %269 = icmp eq %"class.std::__1::unique_ptr"* %267, %100
  br i1 %269, label %290, label %218

270:                                              ; preds = %185
  %271 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %272 = tail call zeroext i1 %271(%"class.std::__1::unique_ptr"* dereferenceable(8) %188, %"class.std::__1::unique_ptr"* dereferenceable(8) %187) #12
  br i1 %272, label %273, label %279

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %188, i64 0, i32 0, i32 0, i32 0
  %275 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  %276 = load i64, i64* %275, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %274, align 8
  %277 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  store i64 %276, i64* %277, align 8
  %278 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %188, i64 1
  br label %285

279:                                              ; preds = %270
  %280 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %187, i64 0, i32 0, i32 0, i32 0
  %281 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  %282 = load i64, i64* %281, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %280, align 8
  %283 = bitcast %"class.std::__1::unique_ptr"* %186 to i64*
  store i64 %282, i64* %283, align 8
  %284 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %187, i64 1
  br label %285

285:                                              ; preds = %279, %273
  %286 = phi %"class.std::__1::unique_ptr"* [ %278, %273 ], [ %188, %279 ]
  %287 = phi %"class.std::__1::unique_ptr"* [ %187, %273 ], [ %284, %279 ]
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %186, i64 1
  %289 = icmp eq %"class.std::__1::unique_ptr"* %287, %100
  br i1 %289, label %104, label %185

290:                                              ; preds = %214, %218, %129, %133, %95, %190, %104, %39, %37, %25, %15, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** readonly dereferenceable(8), i64, i64, %"class.std::__1::unique_ptr"*, i64) unnamed_addr #0 {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %559, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %12 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  br label %13

13:                                               ; preds = %10, %552
  %14 = phi %"class.std::__1::unique_ptr"* [ %557, %552 ], [ %2, %10 ]
  %15 = phi i64 [ %556, %552 ], [ %4, %10 ]
  %16 = phi i64 [ %555, %552 ], [ %5, %10 ]
  %17 = phi i64 [ %554, %552 ], [ %11, %10 ]
  %18 = phi i64 [ %553, %552 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %26

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %559, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  br label %336

26:                                               ; preds = %13
  %27 = inttoptr i64 %18 to %"class.std::__1::unique_ptr"*
  %28 = inttoptr i64 %17 to %"class.std::__1::unique_ptr"*
  %29 = icmp sgt i64 %15, %16
  br i1 %29, label %63, label %30

30:                                               ; preds = %26
  %31 = icmp eq %"class.std::__1::unique_ptr"* %27, %28
  br i1 %31, label %559, label %32

32:                                               ; preds = %30
  %33 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %34 = ptrtoint %"struct.net::(anonymous namespace)::DestinationInfo"** %33 to i64
  %35 = sub i64 %34, %18
  %36 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 -1, i32 0, i32 0, i32 0
  %37 = bitcast %"struct.net::(anonymous namespace)::DestinationInfo"** %36 to i8*
  %38 = sub i64 0, %18
  %39 = getelementptr i8, i8* %37, i64 %38
  %40 = ptrtoint i8* %39 to i64
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, 1
  %43 = and i64 %42, 7
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %32, %45
  %46 = phi %"class.std::__1::unique_ptr"* [ %54, %45 ], [ %6, %32 ]
  %47 = phi %"class.std::__1::unique_ptr"* [ %53, %45 ], [ %27, %32 ]
  %48 = phi i64 [ %55, %45 ], [ %43, %32 ]
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::unique_ptr"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %49, align 8
  %52 = bitcast %"class.std::__1::unique_ptr"* %46 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %47, i64 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 1
  %55 = add i64 %48, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %45, !llvm.loop !19

57:                                               ; preds = %45, %32
  %58 = phi %"class.std::__1::unique_ptr"* [ undef, %32 ], [ %46, %45 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ undef, %32 ], [ %54, %45 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %6, %32 ], [ %54, %45 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %27, %32 ], [ %53, %45 ]
  %62 = icmp ult i8* %39, inttoptr (i64 56 to i8*)
  br i1 %62, label %95, label %157

63:                                               ; preds = %26
  %64 = icmp eq %"class.std::__1::unique_ptr"* %14, %28
  br i1 %64, label %559, label %65

65:                                               ; preds = %63
  %66 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1, i32 0, i32 0, i32 0
  %67 = ptrtoint %"struct.net::(anonymous namespace)::DestinationInfo"** %66 to i64
  %68 = sub i64 %67, %17
  %69 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 -1, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.net::(anonymous namespace)::DestinationInfo"** %69 to i8*
  %71 = sub i64 0, %17
  %72 = getelementptr i8, i8* %70, i64 %71
  %73 = ptrtoint i8* %72 to i64
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %90, label %78

78:                                               ; preds = %65, %78
  %79 = phi %"class.std::__1::unique_ptr"* [ %87, %78 ], [ %6, %65 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %86, %78 ], [ %28, %65 ]
  %81 = phi i64 [ %88, %78 ], [ %76, %65 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 1
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %79, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %78, !llvm.loop !20

90:                                               ; preds = %78, %65
  %91 = phi %"class.std::__1::unique_ptr"* [ undef, %65 ], [ %87, %78 ]
  %92 = phi %"class.std::__1::unique_ptr"* [ %6, %65 ], [ %87, %78 ]
  %93 = phi %"class.std::__1::unique_ptr"* [ %28, %65 ], [ %86, %78 ]
  %94 = icmp ult i8* %72, inttoptr (i64 56 to i8*)
  br i1 %94, label %209, label %268

95:                                               ; preds = %157, %57
  %96 = phi %"class.std::__1::unique_ptr"* [ %58, %57 ], [ %201, %157 ]
  %97 = phi %"class.std::__1::unique_ptr"* [ %59, %57 ], [ %207, %157 ]
  %98 = lshr i64 %35, 3
  %99 = add nuw nsw i64 %98, 1
  %100 = icmp eq %"class.std::__1::unique_ptr"* %97, %6
  br i1 %100, label %320, label %101

101:                                              ; preds = %95, %152
  %102 = phi %"class.std::__1::unique_ptr"* [ %154, %152 ], [ %6, %95 ]
  %103 = phi %"class.std::__1::unique_ptr"* [ %155, %152 ], [ %27, %95 ]
  %104 = phi %"class.std::__1::unique_ptr"* [ %153, %152 ], [ %28, %95 ]
  %105 = icmp eq %"class.std::__1::unique_ptr"* %104, %14
  br i1 %105, label %106, label %123

106:                                              ; preds = %101, %119
  %107 = phi %"class.std::__1::unique_ptr"* [ %121, %119 ], [ %103, %101 ]
  %108 = phi %"class.std::__1::unique_ptr"* [ %120, %119 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %109, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 0, i32 0, i32 0, i32 0
  %113 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %113, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %113, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %117) #12
  %118 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %116, %106
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %108, i64 1
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %107, i64 1
  %122 = icmp eq %"class.std::__1::unique_ptr"* %108, %96
  br i1 %122, label %320, label %106

123:                                              ; preds = %101
  %124 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %125 = tail call zeroext i1 %124(%"class.std::__1::unique_ptr"* dereferenceable(8) %104, %"class.std::__1::unique_ptr"* dereferenceable(8) %102) #12
  br i1 %125, label %126, label %139

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %129 = load i64, i64* %128, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %127, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %131 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %130, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %129, i64* %132, align 8
  %133 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %131, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %131, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %135) #12
  %136 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %134, %126
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  br label %152

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 0, i32 0, i32 0, i32 0
  %141 = bitcast %"class.std::__1::unique_ptr"* %102 to i64*
  %142 = load i64, i64* %141, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %140, align 8
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %144 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %143, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %142, i64* %145, align 8
  %146 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %144, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %144, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %148) #12
  %149 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %144, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %147, %139
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 1
  br label %152

152:                                              ; preds = %150, %137
  %153 = phi %"class.std::__1::unique_ptr"* [ %138, %137 ], [ %104, %150 ]
  %154 = phi %"class.std::__1::unique_ptr"* [ %102, %137 ], [ %151, %150 ]
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 1
  %156 = icmp eq %"class.std::__1::unique_ptr"* %154, %97
  br i1 %156, label %320, label %101

157:                                              ; preds = %57, %157
  %158 = phi %"class.std::__1::unique_ptr"* [ %207, %157 ], [ %60, %57 ]
  %159 = phi %"class.std::__1::unique_ptr"* [ %206, %157 ], [ %61, %57 ]
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 1
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 1
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %164, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  %168 = load i64, i64* %167, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 2
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 2
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %170, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr"* %170 to i64*
  %174 = load i64, i64* %173, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 3
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 3
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %176, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  %180 = load i64, i64* %179, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 4
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 4
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %182, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr"* %182 to i64*
  %186 = load i64, i64* %185, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr"* %183 to i64*
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 5
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 5
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %188, i64 0, i32 0, i32 0, i32 0
  %191 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  %192 = load i64, i64* %191, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %190, align 8
  %193 = bitcast %"class.std::__1::unique_ptr"* %189 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 6
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 6
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %194, i64 0, i32 0, i32 0, i32 0
  %197 = bitcast %"class.std::__1::unique_ptr"* %194 to i64*
  %198 = load i64, i64* %197, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %196, align 8
  %199 = bitcast %"class.std::__1::unique_ptr"* %195 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 7
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 7
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %200, i64 0, i32 0, i32 0, i32 0
  %203 = bitcast %"class.std::__1::unique_ptr"* %200 to i64*
  %204 = load i64, i64* %203, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %202, align 8
  %205 = bitcast %"class.std::__1::unique_ptr"* %201 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %158, i64 8
  %208 = icmp eq %"class.std::__1::unique_ptr"* %206, %28
  br i1 %208, label %95, label %157

209:                                              ; preds = %268, %90
  %210 = phi %"class.std::__1::unique_ptr"* [ %91, %90 ], [ %318, %268 ]
  %211 = lshr i64 %68, 3
  %212 = add nuw nsw i64 %211, 1
  %213 = icmp eq %"class.std::__1::unique_ptr"* %210, %6
  br i1 %213, label %320, label %214

214:                                              ; preds = %209, %264
  %215 = phi %"class.std::__1::unique_ptr"* [ %241, %264 ], [ %14, %209 ]
  %216 = phi %"class.std::__1::unique_ptr"* [ %266, %264 ], [ %210, %209 ]
  %217 = phi %"class.std::__1::unique_ptr"* [ %265, %264 ], [ %28, %209 ]
  %218 = icmp eq %"class.std::__1::unique_ptr"* %217, %27
  br i1 %218, label %219, label %236

219:                                              ; preds = %214, %234
  %220 = phi %"class.std::__1::unique_ptr"* [ %222, %234 ], [ %216, %214 ]
  %221 = phi %"class.std::__1::unique_ptr"* [ %223, %234 ], [ %215, %214 ]
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %220, i64 -1
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %221, i64 -1
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %222, i64 0, i32 0, i32 0, i32 0
  %225 = bitcast %"class.std::__1::unique_ptr"* %222 to i64*
  %226 = load i64, i64* %225, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %224, align 8
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %223, i64 0, i32 0, i32 0, i32 0
  %228 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %227, align 8
  %229 = bitcast %"class.std::__1::unique_ptr"* %223 to i64*
  store i64 %226, i64* %229, align 8
  %230 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %228, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %219
  %232 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %228, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %232) #12
  %233 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %233) #13
  br label %234

234:                                              ; preds = %231, %219
  %235 = icmp eq %"class.std::__1::unique_ptr"* %222, %6
  br i1 %235, label %320, label %219

236:                                              ; preds = %214
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %217, i64 -1
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %216, i64 -1
  %239 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %240 = tail call zeroext i1 %239(%"class.std::__1::unique_ptr"* dereferenceable(8) %238, %"class.std::__1::unique_ptr"* dereferenceable(8) %237) #12
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %215, i64 -1
  br i1 %240, label %242, label %253

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %237, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.std::__1::unique_ptr"* %237 to i64*
  %245 = load i64, i64* %244, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %243, align 8
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %241, i64 0, i32 0, i32 0, i32 0
  %247 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %246, align 8
  %248 = bitcast %"class.std::__1::unique_ptr"* %241 to i64*
  store i64 %245, i64* %248, align 8
  %249 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %247, null
  br i1 %249, label %264, label %250

250:                                              ; preds = %242
  %251 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %247, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %251) #12
  %252 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %247, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %252) #13
  br label %264

253:                                              ; preds = %236
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %238, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr"* %238 to i64*
  %256 = load i64, i64* %255, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %254, align 8
  %257 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %241, i64 0, i32 0, i32 0, i32 0
  %258 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %257, align 8
  %259 = bitcast %"class.std::__1::unique_ptr"* %241 to i64*
  store i64 %256, i64* %259, align 8
  %260 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %258, null
  br i1 %260, label %264, label %261

261:                                              ; preds = %253
  %262 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %258, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %262) #12
  %263 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %263) #13
  br label %264

264:                                              ; preds = %261, %253, %250, %242
  %265 = phi %"class.std::__1::unique_ptr"* [ %237, %242 ], [ %237, %250 ], [ %217, %253 ], [ %217, %261 ]
  %266 = phi %"class.std::__1::unique_ptr"* [ %216, %242 ], [ %216, %250 ], [ %238, %253 ], [ %238, %261 ]
  %267 = icmp eq %"class.std::__1::unique_ptr"* %266, %6
  br i1 %267, label %320, label %214

268:                                              ; preds = %90, %268
  %269 = phi %"class.std::__1::unique_ptr"* [ %318, %268 ], [ %92, %90 ]
  %270 = phi %"class.std::__1::unique_ptr"* [ %317, %268 ], [ %93, %90 ]
  %271 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 0, i32 0, i32 0, i32 0
  %272 = bitcast %"class.std::__1::unique_ptr"* %270 to i64*
  %273 = load i64, i64* %272, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %271, align 8
  %274 = bitcast %"class.std::__1::unique_ptr"* %269 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 1
  %276 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 1
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %275, i64 0, i32 0, i32 0, i32 0
  %278 = bitcast %"class.std::__1::unique_ptr"* %275 to i64*
  %279 = load i64, i64* %278, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %277, align 8
  %280 = bitcast %"class.std::__1::unique_ptr"* %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 2
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 2
  %283 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %281, i64 0, i32 0, i32 0, i32 0
  %284 = bitcast %"class.std::__1::unique_ptr"* %281 to i64*
  %285 = load i64, i64* %284, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %283, align 8
  %286 = bitcast %"class.std::__1::unique_ptr"* %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 3
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 3
  %289 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %287, i64 0, i32 0, i32 0, i32 0
  %290 = bitcast %"class.std::__1::unique_ptr"* %287 to i64*
  %291 = load i64, i64* %290, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %289, align 8
  %292 = bitcast %"class.std::__1::unique_ptr"* %288 to i64*
  store i64 %291, i64* %292, align 8
  %293 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 4
  %294 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 4
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %293, i64 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.std::__1::unique_ptr"* %293 to i64*
  %297 = load i64, i64* %296, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %295, align 8
  %298 = bitcast %"class.std::__1::unique_ptr"* %294 to i64*
  store i64 %297, i64* %298, align 8
  %299 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 5
  %300 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 5
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %299, i64 0, i32 0, i32 0, i32 0
  %302 = bitcast %"class.std::__1::unique_ptr"* %299 to i64*
  %303 = load i64, i64* %302, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %301, align 8
  %304 = bitcast %"class.std::__1::unique_ptr"* %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 6
  %306 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 6
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %305, i64 0, i32 0, i32 0, i32 0
  %308 = bitcast %"class.std::__1::unique_ptr"* %305 to i64*
  %309 = load i64, i64* %308, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %307, align 8
  %310 = bitcast %"class.std::__1::unique_ptr"* %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 7
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 7
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %311, i64 0, i32 0, i32 0, i32 0
  %314 = bitcast %"class.std::__1::unique_ptr"* %311 to i64*
  %315 = load i64, i64* %314, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %313, align 8
  %316 = bitcast %"class.std::__1::unique_ptr"* %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %270, i64 8
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %269, i64 8
  %319 = icmp eq %"class.std::__1::unique_ptr"* %317, %14
  br i1 %319, label %209, label %268

320:                                              ; preds = %152, %119, %264, %234, %209, %95
  %321 = phi i64 [ %99, %95 ], [ %212, %209 ], [ %212, %234 ], [ %212, %264 ], [ %99, %119 ], [ %99, %152 ]
  %322 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  br i1 %322, label %559, label %323

323:                                              ; preds = %320, %332
  %324 = phi i64 [ %333, %332 ], [ 0, %320 ]
  %325 = phi %"class.std::__1::unique_ptr"* [ %334, %332 ], [ %6, %320 ]
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %325, i64 0, i32 0, i32 0, i32 0
  %327 = load %"struct.net::(anonymous namespace)::DestinationInfo"*, %"struct.net::(anonymous namespace)::DestinationInfo"** %326, align 8
  store %"struct.net::(anonymous namespace)::DestinationInfo"* null, %"struct.net::(anonymous namespace)::DestinationInfo"** %326, align 8
  %328 = icmp eq %"struct.net::(anonymous namespace)::DestinationInfo"* %327, null
  br i1 %328, label %332, label %329

329:                                              ; preds = %323
  %330 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %327, i64 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %330) #12
  %331 = getelementptr inbounds %"struct.net::(anonymous namespace)::DestinationInfo", %"struct.net::(anonymous namespace)::DestinationInfo"* %327, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %331) #13
  br label %332

332:                                              ; preds = %329, %323
  %333 = add nuw nsw i64 %324, 1
  %334 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %325, i64 1
  %335 = icmp eq i64 %333, %321
  br i1 %335, label %559, label %323

336:                                              ; preds = %24, %342
  %337 = phi i64 [ %15, %24 ], [ %345, %342 ]
  %338 = phi i64 [ %18, %24 ], [ %344, %342 ]
  %339 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %340 = inttoptr i64 %338 to %"class.std::__1::unique_ptr"*
  %341 = tail call zeroext i1 %339(%"class.std::__1::unique_ptr"* dereferenceable(8) %25, %"class.std::__1::unique_ptr"* dereferenceable(8) %340) #12
  br i1 %341, label %347, label %342

342:                                              ; preds = %336
  %343 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %340, i64 1
  %344 = ptrtoint %"class.std::__1::unique_ptr"* %343 to i64
  %345 = add nsw i64 %337, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %559, label %336

347:                                              ; preds = %336
  %348 = inttoptr i64 %338 to %"class.std::__1::unique_ptr"*
  %349 = icmp slt i64 %337, %16
  br i1 %349, label %350, label %376

350:                                              ; preds = %347
  %351 = sdiv i64 %16, 2
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 %351
  %353 = ptrtoint %"class.std::__1::unique_ptr"* %352 to i64
  %354 = sub i64 %17, %338
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %371, label %356

356:                                              ; preds = %350
  %357 = ashr exact i64 %354, 3
  br label %358

358:                                              ; preds = %358, %356
  %359 = phi %"class.std::__1::unique_ptr"* [ %369, %358 ], [ %348, %356 ]
  %360 = phi i64 [ %368, %358 ], [ %357, %356 ]
  %361 = lshr i64 %360, 1
  %362 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %359, i64 %361
  %363 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %364 = tail call zeroext i1 %363(%"class.std::__1::unique_ptr"* dereferenceable(8) %352, %"class.std::__1::unique_ptr"* dereferenceable(8) %362) #12
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %362, i64 1
  %366 = xor i64 %361, -1
  %367 = add i64 %360, %366
  %368 = select i1 %364, i64 %361, i64 %367
  %369 = select i1 %364, %"class.std::__1::unique_ptr"* %359, %"class.std::__1::unique_ptr"* %365
  %370 = icmp eq i64 %368, 0
  br i1 %370, label %371, label %358

371:                                              ; preds = %358, %350
  %372 = phi %"class.std::__1::unique_ptr"* [ %348, %350 ], [ %369, %358 ]
  %373 = ptrtoint %"class.std::__1::unique_ptr"* %372 to i64
  %374 = sub i64 %373, %338
  %375 = ashr exact i64 %374, 3
  br label %410

376:                                              ; preds = %347
  %377 = icmp eq i64 %337, 1
  br i1 %377, label %378, label %383

378:                                              ; preds = %376
  %379 = inttoptr i64 %338 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = inttoptr i64 %17 to i64*
  %382 = load i64, i64* %381, align 8
  store i64 %382, i64* %379, align 8
  store i64 %380, i64* %381, align 8
  br label %559

383:                                              ; preds = %376
  %384 = sdiv i64 %337, 2
  %385 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %348, i64 %384
  %386 = ptrtoint %"class.std::__1::unique_ptr"* %385 to i64
  %387 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %388 = sub i64 %387, %17
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %405, label %390

390:                                              ; preds = %383
  %391 = ashr exact i64 %388, 3
  br label %392

392:                                              ; preds = %392, %390
  %393 = phi %"class.std::__1::unique_ptr"* [ %403, %392 ], [ %25, %390 ]
  %394 = phi i64 [ %402, %392 ], [ %391, %390 ]
  %395 = lshr i64 %394, 1
  %396 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %393, i64 %395
  %397 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %398 = tail call zeroext i1 %397(%"class.std::__1::unique_ptr"* dereferenceable(8) %396, %"class.std::__1::unique_ptr"* dereferenceable(8) %385) #12
  %399 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %396, i64 1
  %400 = xor i64 %395, -1
  %401 = add i64 %394, %400
  %402 = select i1 %398, i64 %401, i64 %395
  %403 = select i1 %398, %"class.std::__1::unique_ptr"* %399, %"class.std::__1::unique_ptr"* %393
  %404 = icmp eq i64 %402, 0
  br i1 %404, label %405, label %392

405:                                              ; preds = %392, %383
  %406 = phi %"class.std::__1::unique_ptr"* [ %25, %383 ], [ %403, %392 ]
  %407 = ptrtoint %"class.std::__1::unique_ptr"* %406 to i64
  %408 = sub i64 %407, %17
  %409 = ashr exact i64 %408, 3
  br label %410

410:                                              ; preds = %405, %371
  %411 = phi i64 [ %373, %371 ], [ %386, %405 ]
  %412 = phi i64 [ %353, %371 ], [ %407, %405 ]
  %413 = phi i64 [ %351, %371 ], [ %409, %405 ]
  %414 = phi i64 [ %375, %371 ], [ %384, %405 ]
  %415 = sub nsw i64 %337, %414
  %416 = sub nsw i64 %16, %413
  %417 = inttoptr i64 %411 to %"class.std::__1::unique_ptr"*
  %418 = inttoptr i64 %412 to %"class.std::__1::unique_ptr"*
  %419 = icmp eq %"class.std::__1::unique_ptr"* %417, %25
  br i1 %419, label %544, label %420

420:                                              ; preds = %410
  %421 = icmp eq %"class.std::__1::unique_ptr"* %25, %418
  br i1 %421, label %544, label %422

422:                                              ; preds = %420
  %423 = inttoptr i64 %411 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = inttoptr i64 %17 to i64*
  %426 = load i64, i64* %425, align 8
  store i64 %426, i64* %423, align 8
  store i64 %424, i64* %425, align 8
  %427 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %417, i64 1
  %428 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %429 = icmp eq %"class.std::__1::unique_ptr"* %428, %418
  br i1 %429, label %518, label %430

430:                                              ; preds = %422
  %431 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %418, i64 -2
  %432 = bitcast %"class.std::__1::unique_ptr"* %431 to i8*
  %433 = sub i64 0, %17
  %434 = getelementptr i8, i8* %432, i64 %433
  %435 = ptrtoint i8* %434 to i64
  %436 = lshr i64 %435, 3
  %437 = add nuw nsw i64 %436, 1
  %438 = and i64 %437, 3
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %460, label %440

440:                                              ; preds = %430, %440
  %441 = phi %"class.std::__1::unique_ptr"* [ %455, %440 ], [ %25, %430 ]
  %442 = phi %"class.std::__1::unique_ptr"* [ %454, %440 ], [ %428, %430 ]
  %443 = phi %"class.std::__1::unique_ptr"* [ %453, %440 ], [ %427, %430 ]
  %444 = phi i64 [ %448, %440 ], [ %17, %430 ]
  %445 = phi i64 [ %456, %440 ], [ %438, %430 ]
  %446 = ptrtoint %"class.std::__1::unique_ptr"* %442 to i64
  %447 = icmp eq %"class.std::__1::unique_ptr"* %443, %441
  %448 = select i1 %447, i64 %446, i64 %444
  %449 = bitcast %"class.std::__1::unique_ptr"* %443 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.std::__1::unique_ptr"* %442 to i64*
  %452 = load i64, i64* %451, align 8
  store i64 %452, i64* %449, align 8
  store i64 %450, i64* %451, align 8
  %453 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %443, i64 1
  %454 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %442, i64 1
  %455 = inttoptr i64 %448 to %"class.std::__1::unique_ptr"*
  %456 = add i64 %445, -1
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %440, !llvm.loop !21

458:                                              ; preds = %440
  %459 = inttoptr i64 %448 to %"class.std::__1::unique_ptr"*
  br label %460

460:                                              ; preds = %430, %458
  %461 = phi i64 [ undef, %430 ], [ %448, %458 ]
  %462 = phi %"class.std::__1::unique_ptr"* [ undef, %430 ], [ %453, %458 ]
  %463 = phi %"class.std::__1::unique_ptr"* [ %25, %430 ], [ %459, %458 ]
  %464 = phi %"class.std::__1::unique_ptr"* [ %428, %430 ], [ %454, %458 ]
  %465 = phi %"class.std::__1::unique_ptr"* [ %427, %430 ], [ %453, %458 ]
  %466 = phi i64 [ %17, %430 ], [ %448, %458 ]
  %467 = icmp ult i8* %434, inttoptr (i64 24 to i8*)
  br i1 %467, label %514, label %468

468:                                              ; preds = %460, %468
  %469 = phi %"class.std::__1::unique_ptr"* [ %513, %468 ], [ %463, %460 ]
  %470 = phi %"class.std::__1::unique_ptr"* [ %511, %468 ], [ %464, %460 ]
  %471 = phi %"class.std::__1::unique_ptr"* [ %510, %468 ], [ %465, %460 ]
  %472 = phi i64 [ %505, %468 ], [ %466, %460 ]
  %473 = ptrtoint %"class.std::__1::unique_ptr"* %470 to i64
  %474 = icmp eq %"class.std::__1::unique_ptr"* %471, %469
  %475 = select i1 %474, i64 %473, i64 %472
  %476 = bitcast %"class.std::__1::unique_ptr"* %471 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = bitcast %"class.std::__1::unique_ptr"* %470 to i64*
  %479 = load i64, i64* %478, align 8
  store i64 %479, i64* %476, align 8
  store i64 %477, i64* %478, align 8
  %480 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %471, i64 1
  %481 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 1
  %482 = inttoptr i64 %475 to %"class.std::__1::unique_ptr"*
  %483 = ptrtoint %"class.std::__1::unique_ptr"* %481 to i64
  %484 = icmp eq %"class.std::__1::unique_ptr"* %480, %482
  %485 = select i1 %484, i64 %483, i64 %475
  %486 = bitcast %"class.std::__1::unique_ptr"* %480 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = bitcast %"class.std::__1::unique_ptr"* %481 to i64*
  %489 = load i64, i64* %488, align 8
  store i64 %489, i64* %486, align 8
  store i64 %487, i64* %488, align 8
  %490 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %471, i64 2
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 2
  %492 = inttoptr i64 %485 to %"class.std::__1::unique_ptr"*
  %493 = ptrtoint %"class.std::__1::unique_ptr"* %491 to i64
  %494 = icmp eq %"class.std::__1::unique_ptr"* %490, %492
  %495 = select i1 %494, i64 %493, i64 %485
  %496 = bitcast %"class.std::__1::unique_ptr"* %490 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.std::__1::unique_ptr"* %491 to i64*
  %499 = load i64, i64* %498, align 8
  store i64 %499, i64* %496, align 8
  store i64 %497, i64* %498, align 8
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %471, i64 3
  %501 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 3
  %502 = inttoptr i64 %495 to %"class.std::__1::unique_ptr"*
  %503 = ptrtoint %"class.std::__1::unique_ptr"* %501 to i64
  %504 = icmp eq %"class.std::__1::unique_ptr"* %500, %502
  %505 = select i1 %504, i64 %503, i64 %495
  %506 = bitcast %"class.std::__1::unique_ptr"* %500 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.std::__1::unique_ptr"* %501 to i64*
  %509 = load i64, i64* %508, align 8
  store i64 %509, i64* %506, align 8
  store i64 %507, i64* %508, align 8
  %510 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %471, i64 4
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %470, i64 4
  %512 = icmp eq %"class.std::__1::unique_ptr"* %511, %418
  %513 = inttoptr i64 %505 to %"class.std::__1::unique_ptr"*
  br i1 %512, label %514, label %468

514:                                              ; preds = %468, %460
  %515 = phi i64 [ %461, %460 ], [ %505, %468 ]
  %516 = phi %"class.std::__1::unique_ptr"* [ %462, %460 ], [ %510, %468 ]
  %517 = inttoptr i64 %515 to %"class.std::__1::unique_ptr"*
  br label %518

518:                                              ; preds = %514, %422
  %519 = phi i64 [ %17, %422 ], [ %515, %514 ]
  %520 = phi %"class.std::__1::unique_ptr"* [ %427, %422 ], [ %516, %514 ]
  %521 = phi %"class.std::__1::unique_ptr"* [ %25, %422 ], [ %517, %514 ]
  %522 = icmp eq %"class.std::__1::unique_ptr"* %520, %521
  br i1 %522, label %544, label %523

523:                                              ; preds = %518, %541
  %524 = phi i64 [ %543, %541 ], [ %519, %518 ]
  %525 = phi %"class.std::__1::unique_ptr"* [ %536, %541 ], [ %520, %518 ]
  %526 = phi i64 [ %542, %541 ], [ %519, %518 ]
  %527 = inttoptr i64 %524 to %"class.std::__1::unique_ptr"*
  br label %528

528:                                              ; preds = %523, %540
  %529 = phi %"class.std::__1::unique_ptr"* [ %536, %540 ], [ %525, %523 ]
  %530 = phi i64 [ %524, %540 ], [ %526, %523 ]
  %531 = inttoptr i64 %530 to %"class.std::__1::unique_ptr"*
  %532 = bitcast %"class.std::__1::unique_ptr"* %529 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = inttoptr i64 %530 to i64*
  %535 = load i64, i64* %534, align 8
  store i64 %535, i64* %532, align 8
  store i64 %533, i64* %534, align 8
  %536 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %529, i64 1
  %537 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %531, i64 1
  %538 = icmp eq %"class.std::__1::unique_ptr"* %537, %418
  %539 = icmp eq %"class.std::__1::unique_ptr"* %536, %527
  br i1 %538, label %540, label %541

540:                                              ; preds = %528
  br i1 %539, label %544, label %528

541:                                              ; preds = %528
  %542 = ptrtoint %"class.std::__1::unique_ptr"* %537 to i64
  %543 = select i1 %539, i64 %542, i64 %524
  br label %523

544:                                              ; preds = %540, %410, %420, %518
  %545 = phi %"class.std::__1::unique_ptr"* [ %417, %420 ], [ %418, %410 ], [ %520, %518 ], [ %520, %540 ]
  %546 = add nsw i64 %414, %413
  %547 = add nsw i64 %415, %416
  %548 = icmp slt i64 %546, %547
  br i1 %548, label %549, label %551

549:                                              ; preds = %544
  %550 = ptrtoint %"class.std::__1::unique_ptr"* %545 to i64
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %348, %"class.std::__1::unique_ptr"* %417, %"class.std::__1::unique_ptr"* %545, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %414, i64 %413, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %552

551:                                              ; preds = %544
  tail call fastcc void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN3net12_GLOBAL__N_115DestinationInfoENS_14default_deleteIS4_EEEES9_ENS_11__wrap_iterIPS7_EEEEvT0_SG_SG_T_NS_15iterator_traitsISG_E15difference_typeESK_PNSJ_10value_typeEl(%"class.std::__1::unique_ptr"* %545, %"class.std::__1::unique_ptr"* %418, %"class.std::__1::unique_ptr"* %14, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %415, i64 %416, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %552

552:                                              ; preds = %549, %551
  %553 = phi i64 [ %550, %549 ], [ %338, %551 ]
  %554 = phi i64 [ %412, %549 ], [ %411, %551 ]
  %555 = phi i64 [ %416, %549 ], [ %413, %551 ]
  %556 = phi i64 [ %415, %549 ], [ %414, %551 ]
  %557 = phi %"class.std::__1::unique_ptr"* [ %14, %549 ], [ %545, %551 ]
  %558 = icmp eq i64 %555, 0
  br i1 %558, label %559, label %13

559:                                              ; preds = %552, %22, %342, %332, %8, %378, %320, %63, %30
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.68"*, %"class.std::__1::__tree_node.156"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.156"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.156"* %1 to %"class.std::__1::__tree_node.156"**
  %6 = load %"class.std::__1::__tree_node.156"*, %"class.std::__1::__tree_node.156"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.68"* %0, %"class.std::__1::__tree_node.156"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.156", %"class.std::__1::__tree_node.156"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.156"**
  %9 = load %"class.std::__1::__tree_node.156"*, %"class.std::__1::__tree_node.156"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressE9ifaddrmsgEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.68"* %0, %"class.std::__1::__tree_node.156"* %9) #12
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.156", %"class.std::__1::__tree_node.156"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %10) #12
  %11 = bitcast %"class.std::__1::__tree_node.156"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  ret void

12:                                               ; preds = %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3net12_GLOBAL__N_110LoadPolicyEPKNS_18AddressSorterPosix11PolicyEntryEm: argument 0"}
!4 = distinct !{!4, !"_ZN3net12_GLOBAL__N_110LoadPolicyEPKNS_18AddressSorterPosix11PolicyEntryEm"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3net12_GLOBAL__N_110LoadPolicyEPKNS_18AddressSorterPosix11PolicyEntryEm: argument 0"}
!7 = distinct !{!7, !"_ZN3net12_GLOBAL__N_110LoadPolicyEPKNS_18AddressSorterPosix11PolicyEntryEm"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3net12_GLOBAL__N_110LoadPolicyEPKNS_18AddressSorterPosix11PolicyEntryEm: argument 0"}
!10 = distinct !{!10, !"_ZN3net12_GLOBAL__N_110LoadPolicyEPKNS_18AddressSorterPosix11PolicyEntryEm"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{i8 0, i8 2}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIN3net9IPAddressENS2_18AddressSorterPosix17SourceAddressInfoEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSI_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISQ_EEEEEEDpOT_"}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !12}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !12}
