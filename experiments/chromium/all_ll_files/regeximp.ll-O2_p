; ModuleID = '../../third_party/icu/source/i18n/regeximp.cpp'
source_filename = "../../third_party/icu/source/i18n/regeximp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::CaseFoldingUTextIterator" = type { %struct.UText*, i16*, i32, i32 }
%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }
%"class.icu_69::CaseFoldingUCharIterator" = type { i16*, i64, i64, i16*, i32, i32 }

@_ZN6icu_6924CaseFoldingUTextIteratorC1ER5UText = hidden unnamed_addr alias void (%"class.icu_69::CaseFoldingUTextIterator"*, %struct.UText*), void (%"class.icu_69::CaseFoldingUTextIterator"*, %struct.UText*)* @_ZN6icu_6924CaseFoldingUTextIteratorC2ER5UText
@_ZN6icu_6924CaseFoldingUTextIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CaseFoldingUTextIterator"*), void (%"class.icu_69::CaseFoldingUTextIterator"*)* @_ZN6icu_6924CaseFoldingUTextIteratorD2Ev
@_ZN6icu_6924CaseFoldingUCharIteratorC1EPKDsll = hidden unnamed_addr alias void (%"class.icu_69::CaseFoldingUCharIterator"*, i16*, i64, i64), void (%"class.icu_69::CaseFoldingUCharIterator"*, i16*, i64, i64)* @_ZN6icu_6924CaseFoldingUCharIteratorC2EPKDsll
@_ZN6icu_6924CaseFoldingUCharIteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::CaseFoldingUCharIterator"*), void (%"class.icu_69::CaseFoldingUCharIterator"*)* @_ZN6icu_6924CaseFoldingUCharIteratorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6924CaseFoldingUTextIteratorC2ER5UText(%"class.icu_69::CaseFoldingUTextIterator"* nocapture, %struct.UText* dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 0
  store %struct.UText* %1, %struct.UText** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 1
  store i16* null, i16** %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6924CaseFoldingUTextIteratorD2Ev(%"class.icu_69::CaseFoldingUTextIterator"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6924CaseFoldingUTextIterator4nextEv(%"class.icu_69::CaseFoldingUTextIterator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 1
  %3 = load i16*, i16** %2, align 8
  %4 = icmp eq i16* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  br label %44

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 0
  %10 = load %struct.UText*, %struct.UText** %9, align 8
  %11 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 9
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %27

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 10
  %18 = load i16*, i16** %17, align 8
  %19 = sext i32 %12 to i64
  %20 = getelementptr inbounds i16, i16* %18, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = icmp ult i16 %21, -10240
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = add nsw i32 %12, 1
  store i32 %24, i32* %11, align 8
  %25 = load i16, i16* %20, align 2
  %26 = zext i16 %25 to i32
  br label %30

27:                                               ; preds = %8, %16
  %28 = tail call i32 @utext_next32_69(%struct.UText* %10) #5
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %77, label %30

30:                                               ; preds = %23, %27
  %31 = phi i32 [ %26, %23 ], [ %28, %27 ]
  %32 = tail call i32 @ucase_toFullFolding_69(i32 %31, i16** %2, i32 0) #5
  %33 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 2
  store i32 %32, i32* %33, align 8
  %34 = icmp ugt i32 %32, 30
  br i1 %34, label %35, label %41

35:                                               ; preds = %30
  %36 = icmp slt i32 %32, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = xor i32 %32, -1
  store i32 %38, i32* %33, align 8
  br label %39

39:                                               ; preds = %37, %35
  %40 = phi i32 [ %38, %37 ], [ %32, %35 ]
  store i16* null, i16** %2, align 8
  br label %77

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 3
  store i32 0, i32* %42, align 4
  %43 = load i16*, i16** %2, align 8
  br label %44

44:                                               ; preds = %5, %41
  %45 = phi i32 [ %7, %5 ], [ 0, %41 ]
  %46 = phi i16* [ %3, %5 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 3
  %48 = add nsw i32 %45, 1
  store i32 %48, i32* %47, align 4
  %49 = sext i32 %45 to i64
  %50 = getelementptr inbounds i16, i16* %46, i64 %49
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = and i32 %52, 64512
  %54 = icmp eq i32 %53, 55296
  %55 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  br i1 %54, label %57, label %71

57:                                               ; preds = %44
  %58 = icmp eq i32 %48, %56
  br i1 %58, label %75, label %59

59:                                               ; preds = %57
  %60 = sext i32 %48 to i64
  %61 = getelementptr inbounds i16, i16* %46, i64 %60
  %62 = load i16, i16* %61, align 2
  %63 = zext i16 %62 to i32
  %64 = and i32 %63, 64512
  %65 = icmp eq i32 %64, 56320
  br i1 %65, label %66, label %71

66:                                               ; preds = %59
  %67 = add nsw i32 %45, 2
  store i32 %67, i32* %47, align 4
  %68 = shl nuw nsw i32 %52, 10
  %69 = add nsw i32 %68, -56613888
  %70 = add nsw i32 %69, %63
  br label %71

71:                                               ; preds = %44, %59, %66
  %72 = phi i32 [ %67, %66 ], [ %48, %59 ], [ %48, %44 ]
  %73 = phi i32 [ %70, %66 ], [ %52, %59 ], [ %52, %44 ]
  %74 = icmp slt i32 %72, %56
  br i1 %74, label %77, label %75

75:                                               ; preds = %57, %71
  %76 = phi i32 [ %73, %71 ], [ %52, %57 ]
  store i16* null, i16** %2, align 8
  br label %77

77:                                               ; preds = %75, %71, %27, %39
  %78 = phi i32 [ %40, %39 ], [ -1, %27 ], [ %73, %71 ], [ %76, %75 ]
  ret i32 %78
}

declare i32 @utext_next32_69(%struct.UText*) local_unnamed_addr #3

declare i32 @ucase_toFullFolding_69(i32, i16**, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZN6icu_6924CaseFoldingUTextIterator11inExpansionEv(%"class.icu_69::CaseFoldingUTextIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CaseFoldingUTextIterator", %"class.icu_69::CaseFoldingUTextIterator"* %0, i64 0, i32 1
  %3 = load i16*, i16** %2, align 8
  %4 = icmp ne i16* %3, null
  %5 = zext i1 %4 to i8
  ret i8 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6icu_6924CaseFoldingUCharIteratorC2EPKDsll(%"class.icu_69::CaseFoldingUCharIterator"* nocapture, i16*, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 0
  store i16* %1, i16** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 2
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 3
  store i16* null, i16** %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 4
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6icu_6924CaseFoldingUCharIteratorD2Ev(%"class.icu_69::CaseFoldingUCharIterator"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6icu_6924CaseFoldingUCharIterator4nextEv(%"class.icu_69::CaseFoldingUCharIterator"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 3
  %3 = load i16*, i16** %2, align 8
  %4 = icmp eq i16* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  br label %50

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %14, label %83

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = add nsw i64 %10, 1
  store i64 %17, i64* %9, align 8
  %18 = getelementptr inbounds i16, i16* %16, i64 %10
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = and i32 %20, 64512
  %22 = icmp ne i32 %21, 55296
  %23 = icmp eq i64 %17, %12
  %24 = or i1 %23, %22
  br i1 %24, label %36, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds i16, i16* %16, i64 %17
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 64512
  %30 = icmp eq i32 %29, 56320
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = add nsw i64 %10, 2
  store i64 %32, i64* %9, align 8
  %33 = shl nuw nsw i32 %20, 10
  %34 = add nsw i32 %33, -56613888
  %35 = add nsw i32 %34, %28
  br label %36

36:                                               ; preds = %14, %25, %31
  %37 = phi i32 [ %20, %14 ], [ %35, %31 ], [ %20, %25 ]
  %38 = tail call i32 @ucase_toFullFolding_69(i32 %37, i16** %2, i32 0) #5
  %39 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 4
  store i32 %38, i32* %39, align 8
  %40 = icmp ugt i32 %38, 30
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = icmp slt i32 %38, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %41
  %44 = xor i32 %38, -1
  store i32 %44, i32* %39, align 8
  br label %45

45:                                               ; preds = %43, %41
  %46 = phi i32 [ %44, %43 ], [ %38, %41 ]
  store i16* null, i16** %2, align 8
  br label %83

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 5
  store i32 0, i32* %48, align 4
  %49 = load i16*, i16** %2, align 8
  br label %50

50:                                               ; preds = %5, %47
  %51 = phi i32 [ %7, %5 ], [ 0, %47 ]
  %52 = phi i16* [ %3, %5 ], [ %49, %47 ]
  %53 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 5
  %54 = add nsw i32 %51, 1
  store i32 %54, i32* %53, align 4
  %55 = sext i32 %51 to i64
  %56 = getelementptr inbounds i16, i16* %52, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = and i32 %58, 64512
  %60 = icmp eq i32 %59, 55296
  %61 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 4
  %62 = load i32, i32* %61, align 8
  br i1 %60, label %63, label %77

63:                                               ; preds = %50
  %64 = icmp eq i32 %54, %62
  br i1 %64, label %81, label %65

65:                                               ; preds = %63
  %66 = sext i32 %54 to i64
  %67 = getelementptr inbounds i16, i16* %52, i64 %66
  %68 = load i16, i16* %67, align 2
  %69 = zext i16 %68 to i32
  %70 = and i32 %69, 64512
  %71 = icmp eq i32 %70, 56320
  br i1 %71, label %72, label %77

72:                                               ; preds = %65
  %73 = add nsw i32 %51, 2
  store i32 %73, i32* %53, align 4
  %74 = shl nuw nsw i32 %58, 10
  %75 = add nsw i32 %74, -56613888
  %76 = add nsw i32 %75, %69
  br label %77

77:                                               ; preds = %50, %65, %72
  %78 = phi i32 [ %73, %72 ], [ %54, %65 ], [ %54, %50 ]
  %79 = phi i32 [ %76, %72 ], [ %58, %65 ], [ %58, %50 ]
  %80 = icmp slt i32 %78, %62
  br i1 %80, label %83, label %81

81:                                               ; preds = %63, %77
  %82 = phi i32 [ %79, %77 ], [ %58, %63 ]
  store i16* null, i16** %2, align 8
  br label %83

83:                                               ; preds = %81, %77, %8, %45
  %84 = phi i32 [ %46, %45 ], [ -1, %8 ], [ %79, %77 ], [ %82, %81 ]
  ret i32 %84
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZN6icu_6924CaseFoldingUCharIterator11inExpansionEv(%"class.icu_69::CaseFoldingUCharIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 3
  %3 = load i16*, i16** %2, align 8
  %4 = icmp ne i16* %3, null
  %5 = zext i1 %4 to i8
  ret i8 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN6icu_6924CaseFoldingUCharIterator8getIndexEv(%"class.icu_69::CaseFoldingUCharIterator"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::CaseFoldingUCharIterator", %"class.icu_69::CaseFoldingUCharIterator"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
