; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_widget.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_widget.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.34" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::UnownedPtr.35" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.36", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.46" }
%"class.fxcrt::UnownedPtr.36" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { float*, float*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.44", %"class.fxcrt::UnownedPtr.45" }
%"class.fxcrt::UnownedPtr.44" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.45" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.std::__1::unique_ptr.48"*, %"class.std::__1::unique_ptr.48"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::unique_ptr.48" = type opaque
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::unique_ptr.48"* }
%"class.fxcrt::UnownedPtr.54" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.55" }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.57" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.FX_PATHPOINT* }
%"class.CFWL_Widget::ScopedUpdateLock" = type { %"class.fxcrt::UnownedPtr.34" }
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember.5", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.6" }
%"class.cppgc::internal::BasicMember.5" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.6" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_WidgetMgr = type { %"class.cppgc::internal::BasicMember.8", %"class.cppgc::internal::BasicMember.0", %"class.std::__1::map" }
%"class.cppgc::internal::BasicMember.8" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%class.CFWL_NoteDriver = type { %"class.std::__1::map.14", %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3", %"class.cppgc::internal::BasicMember.3" }
%"class.std::__1::map.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30", %"class.cppgc::internal::BasicMember.30" }
%"class.cppgc::internal::BasicMember.30" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFWL_Widget**, %class.CFWL_Widget**, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.CFWL_Widget** }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CFWL_ThemeText = type { %class.CFWL_ThemePart, i8, %struct.FDE_TextStyle, %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.35" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.34" }
%"struct.cppgc::internal::CagedHeapLocalData" = type { i8, %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type opaque
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.54", %"class.fxcrt::UnownedPtr.35" }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.34", %"class.fxcrt::UnownedPtr.34" }
%class.CFWL_EventMouse = type <{ %class.CFWL_Event, i8, [7 x i8] }>
%"class.cppgc::LivenessBroker" = type { i8 }

$_ZN11CFWL_Widget18InvokePreFinalizerERKN5cppgc14LivenessBrokerEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI8CFWL_AppE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTV11CFWL_Widget = hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)* @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_WidgetD2Ev to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_WidgetD0Ev to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Message*)* @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Event*)* @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN11CFWL_Widget12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_Widget11PreFinalizeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.CFWL_Widget*, %class.CFX_PTemplate*)* @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@__const._ZN11CFWL_Widget12CalcTextRectERKN5fxcrt10WideStringERK13FDE_TextStyle17FDE_TextAlignmentP9CFX_RectF.calPart = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.35" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.34" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, i8 -86, %struct.FDE_TextStyle { i8 -86, i8 -86, i8 -86 }, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::WideString" { %"class.fxcrt::RetainPtr" { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.31" { %"struct.std::__1::__compressed_pair_elem.32" { %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*) } } } } }, %"class.fxcrt::UnownedPtr.35" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8
@__const._ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix.param = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.54", %"class.fxcrt::UnownedPtr.35" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.34" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, %"class.fxcrt::UnownedPtr.54" { %class.CFGAS_GEPath* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEPath*) }, %"class.fxcrt::UnownedPtr.35" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8

@_ZN11CFWL_WidgetD1Ev = hidden unnamed_addr alias void (%class.CFWL_Widget*), void (%class.CFWL_Widget*)* @_ZN11CFWL_WidgetD2Ev
@_ZN11CFWL_Widget16ScopedUpdateLockC1EPS_ = hidden unnamed_addr alias void (%"class.CFWL_Widget::ScopedUpdateLock"*, %class.CFWL_Widget*), void (%"class.CFWL_Widget::ScopedUpdateLock"*, %class.CFWL_Widget*)* @_ZN11CFWL_Widget16ScopedUpdateLockC2EPS_
@_ZN11CFWL_Widget16ScopedUpdateLockD1Ev = hidden unnamed_addr alias void (%"class.CFWL_Widget::ScopedUpdateLock"*), void (%"class.CFWL_Widget::ScopedUpdateLock"*)* @_ZN11CFWL_Widget16ScopedUpdateLockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* nocapture readonly dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTV11CFWL_Widget, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %class.CFWL_Widget* %0 to i8*
  tail call void @_ZN5cppgc8internal34PreFinalizerRegistrationDispatcher20RegisterPrefinalizerENS1_12PreFinalizerE(i8* %6, i1 (%"class.cppgc::LivenessBroker"*, i8*)* nonnull @_ZN11CFWL_Widget18InvokePreFinalizerERKN5cppgc14LivenessBrokerEPv) #14
  %7 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1
  %8 = bitcast %"class.CFWL_Widget::Properties"* %7 to i8*
  %9 = bitcast %"class.CFWL_Widget::Properties"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 12, i1 false)
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %12 = bitcast %"class.cppgc::internal::BasicMember.0"* %11 to %class.CFWL_App**
  %13 = bitcast %class.CFX_RectF* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 36, i1 false)
  store %class.CFWL_App* %1, %class.CFWL_App** %12, align 8
  %14 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 7
  %15 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %1, i64 0, i32 1
  %16 = bitcast %"class.cppgc::internal::BasicMember.1"* %15 to %class.CFWL_WidgetMgr**
  %17 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %16, align 8
  %18 = bitcast %"class.cppgc::internal::BasicMember.1"* %14 to %class.CFWL_WidgetMgr**
  store %class.CFWL_WidgetMgr* %17, %class.CFWL_WidgetMgr** %18, align 8
  %19 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 8, i32 0, i32 0
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 9
  %21 = bitcast %"class.cppgc::internal::BasicMember.3"* %20 to %class.CFWL_Widget**
  store %class.CFWL_Widget* %3, %class.CFWL_Widget** %21, align 8
  tail call void @_ZN14CFWL_WidgetMgr12InsertWidgetEP11CFWL_WidgetS1_(%class.CFWL_WidgetMgr* %17, %class.CFWL_Widget* %3, %class.CFWL_Widget* %0) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14CFWL_WidgetMgr12InsertWidgetEP11CFWL_WidgetS1_(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN11CFWL_WidgetD0Ev(%class.CFWL_Widget* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %6, !prof !2

5:                                                ; preds = %1
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !4
  unreachable

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %8 = bitcast %"class.cppgc::internal::BasicMember.0"* %7 to %class.CFWL_App**
  %9 = load %class.CFWL_App*, %class.CFWL_App** %8, align 8
  %10 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %9, i64 0, i32 2
  %11 = bitcast %"class.cppgc::internal::BasicMember.6"* %10 to %class.CFWL_NoteDriver**
  %12 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %11, align 8
  tail call void @_ZN15CFWL_NoteDriver19NotifyTargetDestroyEP11CFWL_Widget(%class.CFWL_NoteDriver* %12, %class.CFWL_Widget* %0) #14
  %13 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 7
  %14 = bitcast %"class.cppgc::internal::BasicMember.1"* %13 to %class.CFWL_WidgetMgr**
  %15 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %14, align 8
  tail call void @_ZN14CFWL_WidgetMgr12RemoveWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr* %15, %class.CFWL_Widget* %0) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget12NotifyDriverEv(%class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CFWL_App**
  %4 = load %class.CFWL_App*, %class.CFWL_App** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %4, i64 0, i32 2
  %6 = bitcast %"class.cppgc::internal::BasicMember.6"* %5 to %class.CFWL_NoteDriver**
  %7 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %6, align 8
  tail call void @_ZN15CFWL_NoteDriver19NotifyTargetDestroyEP11CFWL_Widget(%class.CFWL_NoteDriver* %7, %class.CFWL_Widget* %0) #14
  ret void
}

declare void @_ZN14CFWL_WidgetMgr12RemoveWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget* nocapture readonly, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 5
  %4 = bitcast %"class.cppgc::internal::BasicMember"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = tail call { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8* nonnull %8) #14
  %10 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %9, 0
  %11 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %9, 1
  %12 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %13 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %13, i64 4
  %15 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %14, align 8
  tail call void %15(%"class.cppgc::Visitor"* %1, i8* nonnull %8, i8* %10, void (%"class.cppgc::Visitor"*, i8*)* %11) #14
  br label %16

16:                                               ; preds = %2, %7
  %17 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %18 = bitcast %"class.cppgc::internal::BasicMember.0"* %17 to i64*
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %27, label %21

21:                                               ; preds = %16
  %22 = inttoptr i64 %19 to i8*
  %23 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %24 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %24, i64 4
  %26 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %25, align 8
  tail call void %26(%"class.cppgc::Visitor"* %1, i8* nonnull %22, i8* nonnull %22, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI8CFWL_AppE5TraceEPNS_7VisitorEPKv) #14
  br label %27

27:                                               ; preds = %16, %21
  %28 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 7
  %29 = bitcast %"class.cppgc::internal::BasicMember.1"* %28 to i64*
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = inttoptr i64 %30 to i8*
  %34 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %35 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %35, i64 4
  %37 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.cppgc::Visitor"* %1, i8* nonnull %33, i8* nonnull %33, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %27, %32
  %39 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 8
  %40 = bitcast %"class.cppgc::internal::BasicMember.2"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to i8*
  %45 = tail call { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8* nonnull %44) #14
  %46 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %45, 0
  %47 = extractvalue { i8*, void (%"class.cppgc::Visitor"*, i8*)* } %45, 1
  %48 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %49 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %49, i64 4
  %51 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %50, align 8
  tail call void %51(%"class.cppgc::Visitor"* %1, i8* nonnull %44, i8* %46, void (%"class.cppgc::Visitor"*, i8*)* %47) #14
  br label %52

52:                                               ; preds = %38, %43
  %53 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 9
  %54 = bitcast %"class.cppgc::internal::BasicMember.3"* %53 to i64*
  %55 = load atomic i64, i64* %54 monotonic, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = inttoptr i64 %55 to i8*
  %59 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %60 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %60, i64 4
  %62 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %61, align 8
  tail call void %62(%"class.cppgc::Visitor"* %1, i8* nonnull %58, i8* nonnull %58, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv) #14
  br label %63

63:                                               ; preds = %52, %57
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 false
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv(%class.CFWL_Widget* nocapture readnone) unnamed_addr #6 align 2 {
  ret { <2 x float>, <2 x float> } zeroinitializer
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2
  %3 = bitcast %class.CFX_RectF* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %6 = bitcast float* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget17InflateWidgetRectER9CFX_RectF(%class.CFWL_Widget* nocapture readonly, %class.CFX_RectF* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %9 = bitcast %"class.cppgc::internal::BasicMember.0"* %8 to %"class.CFWL_App::AdapterIface"***
  %10 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %9, align 8
  %11 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %10, align 8
  %12 = bitcast %"class.CFWL_App::AdapterIface"* %11 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %13 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %12, align 8
  %14 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %13, i64 5
  %15 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %14, align 8
  %16 = tail call %class.IFWL_ThemeProvider* %15(%"class.CFWL_App::AdapterIface"* %11) #14
  %17 = bitcast %class.IFWL_ThemeProvider* %16 to float (%class.IFWL_ThemeProvider*)***
  %18 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %17, align 8
  %19 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %18, i64 6
  %20 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %19, align 8
  %21 = tail call float %20(%class.IFWL_ThemeProvider* %16) #14
  %22 = fmul float %21, 2.000000e+00
  %23 = bitcast %class.CFX_RectF* %1 to <4 x float>*
  %24 = load <4 x float>, <4 x float>* %23, align 4
  %25 = insertelement <2 x float> undef, float %21, i32 0
  %26 = insertelement <2 x float> %25, float %22, i32 1
  %27 = shufflevector <2 x float> %26, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %28 = fsub <4 x float> %24, %27
  %29 = fadd <4 x float> %24, %27
  %30 = shufflevector <4 x float> %28, <4 x float> %29, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %31 = bitcast %class.CFX_RectF* %1 to <4 x float>*
  store <4 x float> %30, <4 x float>* %31, align 4
  br label %32

32:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 4
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK11CFWL_Widget15GetCXBorderSizeEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %"class.CFWL_App::AdapterIface"***
  %4 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %3, align 8
  %5 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %4, align 8
  %6 = bitcast %"class.CFWL_App::AdapterIface"* %5 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %7 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %6, align 8
  %8 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %7, i64 5
  %9 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %8, align 8
  %10 = tail call %class.IFWL_ThemeProvider* %9(%"class.CFWL_App::AdapterIface"* %5) #14
  %11 = bitcast %class.IFWL_ThemeProvider* %10 to float (%class.IFWL_ThemeProvider*)***
  %12 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %11, align 8
  %13 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %12, i64 6
  %14 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %13, align 8
  %15 = tail call float %14(%class.IFWL_ThemeProvider* %10) #14
  ret float %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget13SetWidgetRectERK9CFX_RectF(%class.CFWL_Widget* nocapture, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2
  %4 = bitcast %class.CFX_RectF* %3 to i8*
  %5 = bitcast %class.CFX_RectF* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %3 = bitcast float* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %11 = bitcast %"class.cppgc::internal::BasicMember.0"* %10 to %"class.CFWL_App::AdapterIface"***
  %12 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %11, align 8
  %13 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %12, align 8
  %14 = bitcast %"class.CFWL_App::AdapterIface"* %13 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %15 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %14, align 8
  %16 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %15, i64 5
  %17 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %16, align 8
  %18 = tail call %class.IFWL_ThemeProvider* %17(%"class.CFWL_App::AdapterIface"* %13) #14
  %19 = bitcast %class.IFWL_ThemeProvider* %18 to float (%class.IFWL_ThemeProvider*)***
  %20 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %19, align 8
  %21 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %20, i64 6
  %22 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %21, align 8
  %23 = tail call float %22(%class.IFWL_ThemeProvider* %18) #14
  %24 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %11, align 8
  %25 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %24, align 8
  %26 = bitcast %"class.CFWL_App::AdapterIface"* %25 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %27 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %26, align 8
  %28 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %27, i64 5
  %29 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %28, align 8
  %30 = tail call %class.IFWL_ThemeProvider* %29(%"class.CFWL_App::AdapterIface"* %25) #14
  %31 = bitcast %class.IFWL_ThemeProvider* %30 to float (%class.IFWL_ThemeProvider*)***
  %32 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %31, align 8
  %33 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %32, i64 7
  %34 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %33, align 8
  %35 = tail call float %34(%class.IFWL_ThemeProvider* %30) #14
  %36 = insertelement <2 x float> undef, float %23, i32 0
  %37 = insertelement <2 x float> %36, float %35, i32 1
  %38 = fadd <2 x float> %37, zeroinitializer
  %39 = fmul <2 x float> %37, <float 2.000000e+00, float 2.000000e+00>
  %40 = fsub <2 x float> %4, %39
  br label %41

41:                                               ; preds = %1, %9
  %42 = phi <2 x float> [ %40, %9 ], [ %4, %1 ]
  %43 = phi <2 x float> [ %38, %9 ], [ zeroinitializer, %1 ]
  %44 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %45 = insertvalue { <2 x float>, <2 x float> } %44, <2 x float> %42, 1
  ret { <2 x float>, <2 x float> } %45
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK11CFWL_Widget11GetEdgeRectEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %3 = bitcast float* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %41, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %11 = bitcast %"class.cppgc::internal::BasicMember.0"* %10 to %"class.CFWL_App::AdapterIface"***
  %12 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %11, align 8
  %13 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %12, align 8
  %14 = bitcast %"class.CFWL_App::AdapterIface"* %13 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %15 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %14, align 8
  %16 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %15, i64 5
  %17 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %16, align 8
  %18 = tail call %class.IFWL_ThemeProvider* %17(%"class.CFWL_App::AdapterIface"* %13) #14
  %19 = bitcast %class.IFWL_ThemeProvider* %18 to float (%class.IFWL_ThemeProvider*)***
  %20 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %19, align 8
  %21 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %20, i64 6
  %22 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %21, align 8
  %23 = tail call float %22(%class.IFWL_ThemeProvider* %18) #14
  %24 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %11, align 8
  %25 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %24, align 8
  %26 = bitcast %"class.CFWL_App::AdapterIface"* %25 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %27 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %26, align 8
  %28 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %27, i64 5
  %29 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %28, align 8
  %30 = tail call %class.IFWL_ThemeProvider* %29(%"class.CFWL_App::AdapterIface"* %25) #14
  %31 = bitcast %class.IFWL_ThemeProvider* %30 to float (%class.IFWL_ThemeProvider*)***
  %32 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %31, align 8
  %33 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %32, i64 7
  %34 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %33, align 8
  %35 = tail call float %34(%class.IFWL_ThemeProvider* %30) #14
  %36 = insertelement <2 x float> undef, float %23, i32 0
  %37 = insertelement <2 x float> %36, float %35, i32 1
  %38 = fadd <2 x float> %37, zeroinitializer
  %39 = fmul <2 x float> %37, <float 2.000000e+00, float 2.000000e+00>
  %40 = fsub <2 x float> %4, %39
  br label %41

41:                                               ; preds = %1, %9
  %42 = phi <2 x float> [ %40, %9 ], [ %4, %1 ]
  %43 = phi <2 x float> [ %38, %9 ], [ zeroinitializer, %1 ]
  %44 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %45 = insertvalue { <2 x float>, <2 x float> } %44, <2 x float> %42, 1
  ret { <2 x float>, <2 x float> } %45
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget12ModifyStylesEjj(%class.CFWL_Widget* nocapture, i32, i32) local_unnamed_addr #8 align 2 {
  %4 = xor i32 %2, -1
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, %4
  %8 = or i32 %7, %1
  store i32 %8, i32* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget* nocapture, i32, i32) unnamed_addr #8 align 2 {
  %4 = xor i32 %2, -1
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, %4
  %8 = or i32 %7, %1
  store i32 %8, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, %1
  store i32 %5, i32* %3, align 8
  %6 = and i32 %5, 32
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %10 = bitcast %"class.cppgc::internal::BasicMember.0"* %9 to %class.CFWL_App**
  %11 = load %class.CFWL_App*, %class.CFWL_App** %10, align 8
  %12 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %11, i64 0, i32 2
  %13 = bitcast %"class.cppgc::internal::BasicMember.6"* %12 to %class.CFWL_NoteDriver**
  %14 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %13, align 8
  tail call void @_ZN15CFWL_NoteDriver16NotifyTargetHideEP11CFWL_Widget(%class.CFWL_NoteDriver* %14, %class.CFWL_Widget* %0) #14
  %15 = load %class.CFWL_App*, %class.CFWL_App** %10, align 8
  %16 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %15, i64 0, i32 1
  %17 = bitcast %"class.cppgc::internal::BasicMember.1"* %16 to %class.CFWL_WidgetMgr**
  %18 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %17, align 8
  %19 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr19GetFirstChildWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr* %18, %class.CFWL_Widget* %0) #14
  %20 = icmp eq %class.CFWL_Widget* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %8, %21
  %22 = phi %class.CFWL_Widget* [ %23, %21 ], [ %19, %8 ]
  tail call void @_ZN15CFWL_NoteDriver16NotifyTargetHideEP11CFWL_Widget(%class.CFWL_NoteDriver* %14, %class.CFWL_Widget* nonnull %22) #14
  tail call fastcc void @_ZL21NotifyHideChildWidgetP14CFWL_WidgetMgrP11CFWL_WidgetP15CFWL_NoteDriver(%class.CFWL_WidgetMgr* %18, %class.CFWL_Widget* nonnull %22, %class.CFWL_NoteDriver* %14)
  %23 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr20GetNextSiblingWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr* %18, %class.CFWL_Widget* nonnull %22) #14
  %24 = icmp eq %class.CFWL_Widget* %23, null
  br i1 %24, label %25, label %21

25:                                               ; preds = %21, %8, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget9IsVisibleEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 32
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

declare void @_ZN15CFWL_NoteDriver16NotifyTargetHideEP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Widget*) local_unnamed_addr #2

declare %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr19GetFirstChildWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL21NotifyHideChildWidgetP14CFWL_WidgetMgrP11CFWL_WidgetP15CFWL_NoteDriver(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*, %class.CFWL_NoteDriver*) unnamed_addr #0 {
  %4 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr19GetFirstChildWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr* %0, %class.CFWL_Widget* %1) #14
  %5 = icmp eq %class.CFWL_Widget* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %3, %6
  %7 = phi %class.CFWL_Widget* [ %8, %6 ], [ %4, %3 ]
  tail call void @_ZN15CFWL_NoteDriver16NotifyTargetHideEP11CFWL_Widget(%class.CFWL_NoteDriver* %2, %class.CFWL_Widget* nonnull %7) #14
  tail call fastcc void @_ZL21NotifyHideChildWidgetP14CFWL_WidgetMgrP11CFWL_WidgetP15CFWL_NoteDriver(%class.CFWL_WidgetMgr* %0, %class.CFWL_Widget* nonnull %7, %class.CFWL_NoteDriver* %2)
  %8 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr20GetNextSiblingWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr* %0, %class.CFWL_Widget* nonnull %7) #14
  %9 = icmp eq %class.CFWL_Widget* %8, null
  br i1 %9, label %10, label %6

10:                                               ; preds = %6, %3
  ret void
}

declare %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr20GetNextSiblingWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget* nocapture, i32) unnamed_addr #8 align 2 {
  %3 = xor i32 %1, -1
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, %3
  store i32 %6, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE(%class.CFWL_Widget*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CFWL_Widget* %0 to { <2 x float>, <2 x float> } (%class.CFWL_Widget*)***
  %4 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)**, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*** %3, align 8
  %5 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %4, i64 11
  %6 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %5, align 8
  %7 = tail call { <2 x float>, <2 x float> } %6(%class.CFWL_Widget* %0) #14
  %8 = extractvalue { <2 x float>, <2 x float> } %7, 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 1
  %10 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = extractelement <2 x float> %8, i32 0
  %13 = fcmp ult float %11, %12
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = extractelement <2 x float> %9, i32 0
  %16 = fadd float %12, %15
  %17 = fcmp olt float %11, %16
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = extractelement <2 x float> %8, i32 1
  %22 = fcmp ult float %20, %21
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = extractelement <2 x float> %9, i32 1
  %25 = fadd float %21, %24
  %26 = fcmp olt float %20, %25
  br i1 %26, label %49, label %27

27:                                               ; preds = %2, %14, %18, %23
  %28 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %48, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %34 = load float, float* %33, align 4
  %35 = fcmp oge float %11, 0.000000e+00
  %36 = fadd float %34, 0.000000e+00
  %37 = fcmp olt float %11, %36
  %38 = and i1 %35, %37
  br i1 %38, label %39, label %48

39:                                               ; preds = %32
  %40 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 3
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp oge float %43, 0.000000e+00
  %45 = fadd float %41, 0.000000e+00
  %46 = fcmp olt float %43, %45
  %47 = and i1 %44, %46
  br i1 %47, label %49, label %48

48:                                               ; preds = %27, %39, %32
  br label %49

49:                                               ; preds = %39, %23, %48
  %50 = phi i32 [ 0, %48 ], [ 1, %23 ], [ 16, %39 ]
  ret i32 %50
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK11CFWL_Widget15GetRelativeRectEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %3 = bitcast float* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = insertvalue { <2 x float>, <2 x float> } { <2 x float> zeroinitializer, <2 x float> undef }, <2 x float> %4, 1
  ret { <2 x float>, <2 x float> } %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget11TransformToEPS_RK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CFWL_Widget*, %class.CFWL_Widget*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 7
  %6 = bitcast %"class.cppgc::internal::BasicMember.1"* %5 to %class.CFWL_WidgetMgr**
  %7 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %6, align 8
  %8 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %7, %class.CFWL_Widget* %1) #14
  %9 = icmp eq %class.CFWL_Widget* %8, null
  br i1 %9, label %50, label %10

10:                                               ; preds = %4, %13
  %11 = phi %class.CFWL_Widget* [ %17, %13 ], [ %8, %4 ]
  %12 = icmp eq %class.CFWL_Widget* %11, %2
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %11, i64 0, i32 7
  %15 = bitcast %"class.cppgc::internal::BasicMember.1"* %14 to %class.CFWL_WidgetMgr**
  %16 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %15, align 8
  %17 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %16, %class.CFWL_Widget* nonnull %11) #14
  %18 = icmp eq %class.CFWL_Widget* %17, null
  br i1 %18, label %50, label %10

19:                                               ; preds = %10
  %20 = icmp eq %class.CFWL_Widget* %2, %1
  br i1 %20, label %86, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 2, i32 0
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4, !noalias !5
  %25 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 6
  %26 = bitcast %"class.cppgc::internal::BasicMember.0"* %25 to %class.CFWL_App**
  %27 = load %class.CFWL_App*, %class.CFWL_App** %26, align 8, !noalias !5
  %28 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %27, i64 0, i32 1
  %29 = bitcast %"class.cppgc::internal::BasicMember.1"* %28 to %class.CFWL_WidgetMgr**
  %30 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %29, align 8, !noalias !5
  %31 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %6, align 8, !noalias !5
  %32 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %31, %class.CFWL_Widget* %1) #14, !noalias !5
  %33 = icmp eq %class.CFWL_Widget* %32, null
  %34 = icmp eq %class.CFWL_Widget* %32, %2
  %35 = or i1 %33, %34
  br i1 %35, label %86, label %36

36:                                               ; preds = %21, %36
  %37 = phi %class.CFWL_Widget* [ %46, %36 ], [ %32, %21 ]
  %38 = phi <2 x float> [ %45, %36 ], [ %24, %21 ]
  %39 = bitcast %class.CFWL_Widget* %37 to { <2 x float>, <2 x float> } (%class.CFWL_Widget*)***
  %40 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)**, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*** %39, align 8, !noalias !5
  %41 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %40, i64 10
  %42 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %41, align 8, !noalias !5
  %43 = tail call { <2 x float>, <2 x float> } %42(%class.CFWL_Widget* nonnull %37) #14, !noalias !5
  %44 = extractvalue { <2 x float>, <2 x float> } %43, 0
  %45 = fadd <2 x float> %38, %44
  %46 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %30, %class.CFWL_Widget* nonnull %37) #14, !noalias !5
  %47 = icmp eq %class.CFWL_Widget* %46, null
  %48 = icmp eq %class.CFWL_Widget* %46, %2
  %49 = or i1 %47, %48
  br i1 %49, label %86, label %36

50:                                               ; preds = %13, %4
  %51 = icmp eq %class.CFWL_Widget* %1, %2
  br i1 %51, label %83, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 2, i32 0
  %54 = bitcast float* %53 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 4, !noalias !8
  %56 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 6
  %57 = bitcast %"class.cppgc::internal::BasicMember.0"* %56 to %class.CFWL_App**
  %58 = load %class.CFWL_App*, %class.CFWL_App** %57, align 8, !noalias !8
  %59 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %58, i64 0, i32 1
  %60 = bitcast %"class.cppgc::internal::BasicMember.1"* %59 to %class.CFWL_WidgetMgr**
  %61 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %60, align 8, !noalias !8
  %62 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %2, i64 0, i32 7
  %63 = bitcast %"class.cppgc::internal::BasicMember.1"* %62 to %class.CFWL_WidgetMgr**
  %64 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %63, align 8, !noalias !8
  %65 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %64, %class.CFWL_Widget* %2) #14, !noalias !8
  %66 = icmp eq %class.CFWL_Widget* %65, null
  %67 = icmp eq %class.CFWL_Widget* %65, %1
  %68 = or i1 %66, %67
  br i1 %68, label %83, label %69

69:                                               ; preds = %52, %69
  %70 = phi %class.CFWL_Widget* [ %79, %69 ], [ %65, %52 ]
  %71 = phi <2 x float> [ %78, %69 ], [ %55, %52 ]
  %72 = bitcast %class.CFWL_Widget* %70 to { <2 x float>, <2 x float> } (%class.CFWL_Widget*)***
  %73 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)**, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*** %72, align 8, !noalias !8
  %74 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %73, i64 10
  %75 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %74, align 8, !noalias !8
  %76 = tail call { <2 x float>, <2 x float> } %75(%class.CFWL_Widget* nonnull %70) #14, !noalias !8
  %77 = extractvalue { <2 x float>, <2 x float> } %76, 0
  %78 = fadd <2 x float> %71, %77
  %79 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %61, %class.CFWL_Widget* nonnull %70) #14, !noalias !8
  %80 = icmp eq %class.CFWL_Widget* %79, null
  %81 = icmp eq %class.CFWL_Widget* %79, %1
  %82 = or i1 %80, %81
  br i1 %82, label %83, label %69

83:                                               ; preds = %69, %52, %50
  %84 = phi <2 x float> [ zeroinitializer, %50 ], [ %55, %52 ], [ %78, %69 ]
  %85 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %84
  br label %86

86:                                               ; preds = %36, %21, %19, %83
  %87 = phi <2 x float> [ %85, %83 ], [ zeroinitializer, %19 ], [ %24, %21 ], [ %45, %36 ]
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 0
  %89 = load float, float* %88, align 4, !noalias !11
  %90 = extractelement <2 x float> %87, i32 0
  %91 = fadd float %90, %89
  %92 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %3, i64 0, i32 1
  %93 = load float, float* %92, align 4, !noalias !11
  %94 = extractelement <2 x float> %87, i32 1
  %95 = fadd float %94, %93
  %96 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %91, float* %96, align 4, !alias.scope !11
  %97 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %95, float* %97, align 4, !alias.scope !11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11CFWL_Widget8IsParentEPS_(%class.CFWL_Widget*, %class.CFWL_Widget* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 7
  %4 = bitcast %"class.cppgc::internal::BasicMember.1"* %3 to %class.CFWL_WidgetMgr**
  %5 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %4, align 8
  %6 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %5, %class.CFWL_Widget* %0) #14
  %7 = icmp eq %class.CFWL_Widget* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2, %11
  %9 = phi %class.CFWL_Widget* [ %15, %11 ], [ %6, %2 ]
  %10 = icmp eq %class.CFWL_Widget* %9, %1
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %9, i64 0, i32 7
  %13 = bitcast %"class.cppgc::internal::BasicMember.1"* %12 to %class.CFWL_WidgetMgr**
  %14 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %13, align 8
  %15 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %14, %class.CFWL_Widget* nonnull %9) #14
  %16 = icmp eq %class.CFWL_Widget* %15, null
  br i1 %16, label %17, label %8

17:                                               ; preds = %8, %11, %2
  %18 = phi i1 [ false, %2 ], [ false, %11 ], [ true, %8 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget19GetOffsetFromParentEPS_(%class.CFX_STemplate* noalias nocapture sret, %class.CFWL_Widget*, %class.CFWL_Widget* readnone) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %class.CFWL_Widget* %2, %1
  br i1 %4, label %36, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 2, i32 0
  %7 = bitcast float* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 6
  %10 = bitcast %"class.cppgc::internal::BasicMember.0"* %9 to %class.CFWL_App**
  %11 = load %class.CFWL_App*, %class.CFWL_App** %10, align 8
  %12 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %11, i64 0, i32 1
  %13 = bitcast %"class.cppgc::internal::BasicMember.1"* %12 to %class.CFWL_WidgetMgr**
  %14 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %13, align 8
  %15 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 7
  %16 = bitcast %"class.cppgc::internal::BasicMember.1"* %15 to %class.CFWL_WidgetMgr**
  %17 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %16, align 8
  %18 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %17, %class.CFWL_Widget* %1) #14
  %19 = icmp eq %class.CFWL_Widget* %18, null
  %20 = icmp eq %class.CFWL_Widget* %18, %2
  %21 = or i1 %19, %20
  br i1 %21, label %36, label %22

22:                                               ; preds = %5, %22
  %23 = phi %class.CFWL_Widget* [ %32, %22 ], [ %18, %5 ]
  %24 = phi <2 x float> [ %31, %22 ], [ %8, %5 ]
  %25 = bitcast %class.CFWL_Widget* %23 to { <2 x float>, <2 x float> } (%class.CFWL_Widget*)***
  %26 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)**, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*** %25, align 8
  %27 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %26, i64 10
  %28 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %27, align 8
  %29 = tail call { <2 x float>, <2 x float> } %28(%class.CFWL_Widget* nonnull %23) #14
  %30 = extractvalue { <2 x float>, <2 x float> } %29, 0
  %31 = fadd <2 x float> %24, %30
  %32 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %14, %class.CFWL_Widget* nonnull %23) #14
  %33 = icmp eq %class.CFWL_Widget* %32, null
  %34 = icmp eq %class.CFWL_Widget* %32, %2
  %35 = or i1 %33, %34
  br i1 %35, label %36, label %22

36:                                               ; preds = %22, %5, %3
  %37 = phi <2 x float> [ zeroinitializer, %3 ], [ %8, %5 ], [ %31, %22 ]
  %38 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 0
  %39 = extractelement <2 x float> %37, i32 0
  store float %39, float* %38, align 4
  %40 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 1
  %41 = extractelement <2 x float> %37, i32 1
  store float %41, float* %40, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11CFWL_Widget9GetMatrixEv(%class.CFX_Matrix* noalias sret, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 7
  %5 = bitcast %"class.cppgc::internal::BasicMember.1"* %4 to %class.CFWL_WidgetMgr**
  %6 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %5, align 8
  %7 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %6, %class.CFWL_Widget* %1) #14
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #14
  %11 = icmp eq %class.CFWL_Widget* %7, null
  %12 = bitcast %class.CFWL_Widget*** %9 to i64*
  br i1 %11, label %89, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector"* %3 to i64*
  %15 = bitcast %class.CFWL_Widget*** %10 to i64*
  br label %16

16:                                               ; preds = %87, %13
  %17 = phi %class.CFWL_Widget** [ null, %13 ], [ %77, %87 ]
  %18 = phi %class.CFWL_Widget** [ null, %13 ], [ %78, %87 ]
  %19 = phi i64 [ 0, %13 ], [ %79, %87 ]
  %20 = phi i64 [ 0, %13 ], [ %80, %87 ]
  %21 = phi %class.CFWL_Widget** [ null, %13 ], [ %88, %87 ]
  %22 = phi %class.CFWL_Widget** [ null, %13 ], [ %81, %87 ]
  %23 = phi %class.CFWL_Widget* [ %7, %13 ], [ %85, %87 ]
  %24 = ptrtoint %class.CFWL_Widget* %23 to i64
  %25 = icmp eq %class.CFWL_Widget** %22, %21
  br i1 %25, label %30, label %26

26:                                               ; preds = %16
  %27 = bitcast %class.CFWL_Widget** %22 to i64*
  store i64 %24, i64* %27, align 8
  %28 = getelementptr inbounds %class.CFWL_Widget*, %class.CFWL_Widget** %22, i64 1
  %29 = ptrtoint %class.CFWL_Widget** %28 to i64
  store i64 %29, i64* %12, align 8
  br label %76

30:                                               ; preds = %16
  %31 = ptrtoint %class.CFWL_Widget** %21 to i64
  %32 = load i64, i64* %14, align 8
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 2305843009213693951
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %38) #15
  unreachable

39:                                               ; preds = %30
  %40 = icmp ult i64 %34, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %39
  %42 = ashr exact i64 %33, 2
  %43 = icmp ult i64 %42, %35
  %44 = select i1 %43, i64 %35, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %39
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %39 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #16
  %53 = bitcast i8* %52 to %class.CFWL_Widget**
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %class.CFWL_Widget** [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %class.CFWL_Widget*, %class.CFWL_Widget** %56, i64 %34
  %58 = getelementptr inbounds %class.CFWL_Widget*, %class.CFWL_Widget** %56, i64 %55
  %59 = ptrtoint %class.CFWL_Widget** %58 to i64
  %60 = bitcast %class.CFWL_Widget** %57 to i64*
  store i64 %24, i64* %60, align 8
  %61 = getelementptr inbounds %class.CFWL_Widget*, %class.CFWL_Widget** %57, i64 1
  %62 = ptrtoint %class.CFWL_Widget** %61 to i64
  %63 = sub i64 %20, %32
  %64 = ashr exact i64 %63, 3
  %65 = sub nsw i64 0, %64
  %66 = getelementptr inbounds %class.CFWL_Widget*, %class.CFWL_Widget** %57, i64 %65
  %67 = ptrtoint %class.CFWL_Widget** %66 to i64
  %68 = icmp sgt i64 %63, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %54
  %70 = bitcast %class.CFWL_Widget** %66 to i8*
  %71 = inttoptr i64 %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 %63, i1 false) #14
  br label %72

72:                                               ; preds = %69, %54
  store i64 %67, i64* %14, align 8
  store i64 %62, i64* %12, align 8
  store i64 %59, i64* %15, align 8
  %73 = icmp eq i64 %32, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = inttoptr i64 %32 to i8*
  tail call void @_ZdlPv(i8* %75) #16
  br label %76

76:                                               ; preds = %26, %72, %74
  %77 = phi %class.CFWL_Widget** [ %17, %26 ], [ %66, %72 ], [ %66, %74 ]
  %78 = phi %class.CFWL_Widget** [ %18, %26 ], [ %66, %72 ], [ %66, %74 ]
  %79 = phi i64 [ %19, %26 ], [ %67, %72 ], [ %67, %74 ]
  %80 = phi i64 [ %29, %26 ], [ %62, %72 ], [ %62, %74 ]
  %81 = phi %class.CFWL_Widget** [ %28, %26 ], [ %61, %72 ], [ %61, %74 ]
  %82 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %23, i64 0, i32 7
  %83 = bitcast %"class.cppgc::internal::BasicMember.1"* %82 to %class.CFWL_WidgetMgr**
  %84 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %83, align 8
  %85 = tail call %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr* %84, %class.CFWL_Widget* nonnull %23) #14
  %86 = icmp eq %class.CFWL_Widget* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %76
  %88 = load %class.CFWL_Widget**, %class.CFWL_Widget*** %10, align 8
  br label %16

89:                                               ; preds = %76, %2
  %90 = phi %class.CFWL_Widget** [ null, %2 ], [ %77, %76 ]
  %91 = phi %class.CFWL_Widget** [ null, %2 ], [ %78, %76 ]
  %92 = phi i64 [ 0, %2 ], [ %79, %76 ]
  %93 = phi i64 [ 0, %2 ], [ %80, %76 ]
  %94 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 4
  %95 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 5
  %96 = bitcast %class.CFX_Matrix* %0 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %96, align 4
  store float 0.000000e+00, float* %94, align 4
  store float 0.000000e+00, float* %95, align 4
  %97 = sub i64 %93, %92
  %98 = ashr exact i64 %97, 3
  %99 = icmp ugt i64 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %106, %89
  %101 = icmp eq %class.CFWL_Widget** %90, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %100
  %103 = ptrtoint %class.CFWL_Widget** %90 to i64
  store i64 %103, i64* %12, align 8
  %104 = bitcast %class.CFWL_Widget** %90 to i8*
  tail call void @_ZdlPv(i8* %104) #16
  br label %105

105:                                              ; preds = %100, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #14
  ret void

106:                                              ; preds = %89, %106
  %107 = phi i64 [ %119, %106 ], [ %98, %89 ]
  %108 = add i64 %107, -2
  %109 = getelementptr inbounds %class.CFWL_Widget*, %class.CFWL_Widget** %91, i64 %108
  %110 = load %class.CFWL_Widget*, %class.CFWL_Widget** %109, align 8
  %111 = bitcast %class.CFWL_Widget* %110 to { <2 x float>, <2 x float> } (%class.CFWL_Widget*)***
  %112 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)**, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*** %111, align 8
  %113 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %112, i64 10
  %114 = load { <2 x float>, <2 x float> } (%class.CFWL_Widget*)*, { <2 x float>, <2 x float> } (%class.CFWL_Widget*)** %113, align 8
  %115 = tail call { <2 x float>, <2 x float> } %114(%class.CFWL_Widget* %110) #14
  %116 = extractvalue { <2 x float>, <2 x float> } %115, 0
  %117 = extractelement <2 x float> %116, i32 0
  %118 = extractelement <2 x float> %116, i32 1
  tail call void @_ZN10CFX_Matrix16TranslatePrependEff(%class.CFX_Matrix* %0, float %117, float %118) #14
  %119 = add i64 %107, -1
  %120 = icmp ugt i64 %119, 1
  br i1 %120, label %106, label %100
}

declare void @_ZN10CFX_Matrix16TranslatePrependEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %"class.CFWL_App::AdapterIface"***
  %4 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %3, align 8
  %5 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %4, align 8
  %6 = bitcast %"class.CFWL_App::AdapterIface"* %5 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %7 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %6, align 8
  %8 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %7, i64 5
  %9 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %8, align 8
  %10 = tail call %class.IFWL_ThemeProvider* %9(%"class.CFWL_App::AdapterIface"* %5) #14
  ret %class.IFWL_ThemeProvider* %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 4
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget12IsOverLapperEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 3
  %5 = icmp eq i32 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget7IsPopupEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK11CFWL_Widget7IsChildEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 2
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* readonly) local_unnamed_addr #7 align 2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi %class.CFWL_Widget* [ %0, %1 ], [ %6, %2 ]
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %3, i64 0, i32 9
  %5 = bitcast %"class.cppgc::internal::BasicMember.3"* %4 to %class.CFWL_Widget**
  %6 = load %class.CFWL_Widget*, %class.CFWL_Widget** %5, align 8
  %7 = icmp eq %class.CFWL_Widget* %6, null
  br i1 %7, label %8, label %2

8:                                                ; preds = %2
  ret %class.CFWL_Widget* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK11CFWL_Widget15GetCYBorderSizeEv(%class.CFWL_Widget* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %"class.CFWL_App::AdapterIface"***
  %4 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %3, align 8
  %5 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %4, align 8
  %6 = bitcast %"class.CFWL_App::AdapterIface"* %5 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %7 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %6, align 8
  %8 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %7, i64 5
  %9 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %8, align 8
  %10 = tail call %class.IFWL_ThemeProvider* %9(%"class.CFWL_App::AdapterIface"* %5) #14
  %11 = bitcast %class.IFWL_ThemeProvider* %10 to float (%class.IFWL_ThemeProvider*)***
  %12 = load float (%class.IFWL_ThemeProvider*)**, float (%class.IFWL_ThemeProvider*)*** %11, align 8
  %13 = getelementptr inbounds float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %12, i64 7
  %14 = load float (%class.IFWL_ThemeProvider*)*, float (%class.IFWL_ThemeProvider*)** %13, align 8
  %15 = tail call float %14(%class.IFWL_ThemeProvider* %10) #14
  ret float %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget12CalcTextSizeERKN5fxcrt10WideStringEb(%class.CFX_STemplate* noalias nocapture sret, %class.CFWL_Widget*, %"class.fxcrt::WideString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFWL_ThemeText, align 8
  %6 = alloca %class.CFX_RectF, align 4
  %7 = bitcast %class.CFWL_ThemeText* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.35" }* @__const._ZN11CFWL_Widget12CalcTextRectERKN5fxcrt10WideStringERK13FDE_TextStyle17FDE_TextAlignmentP9CFX_RectF.calPart to i8*), i64 88, i1 false)
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %5, %class.CFWL_Widget* %1, %class.CFGAS_GEGraphics* null) #14
  %8 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %5, i64 0, i32 3
  %9 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %8, %"class.fxcrt::WideString"* dereferenceable(8) %2) #14
  %10 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %5, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %5, i64 0, i32 2, i32 1
  %12 = select i1 %3, i8* %11, i8* %10
  store i8 1, i8* %12, align 1
  %13 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %5, i64 0, i32 1
  store i8 0, i8* %13, align 8
  %14 = select i1 %3, float 1.200000e+02, float 2.048000e+03
  %15 = bitcast %class.CFX_RectF* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 0
  %17 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 1
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 2
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %6, i64 0, i32 3
  store float 0.000000e+00, float* %16, align 4
  store float 0.000000e+00, float* %17, align 4
  store float %14, float* %18, align 4
  store float 2.048000e+03, float* %19, align 4
  %20 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 6
  %21 = bitcast %"class.cppgc::internal::BasicMember.0"* %20 to %"class.CFWL_App::AdapterIface"***
  %22 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %21, align 8
  %23 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %22, align 8
  %24 = bitcast %"class.CFWL_App::AdapterIface"* %23 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %25 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %24, align 8
  %26 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %25, i64 5
  %27 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %26, align 8
  %28 = call %class.IFWL_ThemeProvider* %27(%"class.CFWL_App::AdapterIface"* %23) #14
  %29 = bitcast %class.IFWL_ThemeProvider* %28 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)***
  %30 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)** %30, i64 5
  %32 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)** %31, align 8
  call void %32(%class.IFWL_ThemeProvider* %28, %class.CFWL_ThemeText* nonnull dereferenceable(88) %5, %class.CFX_RectF* nonnull %6) #14
  %33 = bitcast float* %18 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = bitcast float* %19 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %class.CFX_STemplate* %0 to i32*
  store i32 %34, i32* %37, align 4
  %38 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 1
  %39 = bitcast float* %38 to i32*
  store i32 %36, i32* %39, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #14
  ret void
}

declare void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #2

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget12CalcTextRectERKN5fxcrt10WideStringERK13FDE_TextStyle17FDE_TextAlignmentP9CFX_RectF(%class.CFWL_Widget*, %"class.fxcrt::WideString"* dereferenceable(8), %struct.FDE_TextStyle* nocapture readonly dereferenceable(3), i8 zeroext, %class.CFX_RectF*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFWL_ThemeText, align 8
  %7 = bitcast %class.CFWL_ThemeText* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, i8, %struct.FDE_TextStyle, [4 x i8], %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.35" }* @__const._ZN11CFWL_Widget12CalcTextRectERKN5fxcrt10WideStringERK13FDE_TextStyle17FDE_TextAlignmentP9CFX_RectF.calPart to i8*), i64 88, i1 false)
  call void @_ZN14CFWL_ThemeTextC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeText* nonnull %6, %class.CFWL_Widget* %0, %class.CFGAS_GEGraphics* null) #14
  %8 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %6, i64 0, i32 3
  %9 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSERKS0_(%"class.fxcrt::WideString"* %8, %"class.fxcrt::WideString"* dereferenceable(8) %1) #14
  %10 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %6, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %struct.FDE_TextStyle, %struct.FDE_TextStyle* %2, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 3, i1 false)
  %12 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %6, i64 0, i32 1
  store i8 %3, i8* %12, align 8
  %13 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %14 = bitcast %"class.cppgc::internal::BasicMember.0"* %13 to %"class.CFWL_App::AdapterIface"***
  %15 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %14, align 8
  %16 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %15, align 8
  %17 = bitcast %"class.CFWL_App::AdapterIface"* %16 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %18 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %17, align 8
  %19 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %18, i64 5
  %20 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %19, align 8
  %21 = call %class.IFWL_ThemeProvider* %20(%"class.CFWL_App::AdapterIface"* %16) #14
  %22 = bitcast %class.IFWL_ThemeProvider* %21 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)***
  %23 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)** %23, i64 5
  %25 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeText*, %class.CFX_RectF*)** %24, align 8
  call void %25(%class.IFWL_ThemeProvider* %21, %class.CFWL_ThemeText* nonnull dereferenceable(88) %6, %class.CFX_RectF* %4) #14
  call void @_ZN14CFWL_ThemeTextD1Ev(%class.CFWL_ThemeText* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget7SetGrabEb(%class.CFWL_Widget*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %4 = bitcast %"class.cppgc::internal::BasicMember.0"* %3 to %class.CFWL_App**
  %5 = load %class.CFWL_App*, %class.CFWL_App** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %5, i64 0, i32 2
  %7 = bitcast %"class.cppgc::internal::BasicMember.6"* %6 to %class.CFWL_NoteDriver**
  %8 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %7, align 8
  %9 = select i1 %1, %class.CFWL_Widget* %0, %class.CFWL_Widget* null
  %10 = getelementptr inbounds %class.CFWL_NoteDriver, %class.CFWL_NoteDriver* %8, i64 0, i32 3
  %11 = ptrtoint %class.CFWL_Widget* %9 to i64
  %12 = bitcast %"class.cppgc::internal::BasicMember.3"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = bitcast %class.CFWL_Widget* %9 to i8*
  %14 = and i64 %11, -4294967296
  %15 = ptrtoint %"class.cppgc::internal::BasicMember.3"* %10 to i64
  %16 = sub i64 %15, %14
  %17 = icmp ult i64 %16, 4294967297
  br i1 %17, label %18, label %24

18:                                               ; preds = %2
  %19 = inttoptr i64 %14 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %20 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %19, i64 0, i32 0
  %21 = load i8, i8* %20, align 536870912, !range !14
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %18
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %13) #14
  br label %24

24:                                               ; preds = %2, %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget19RegisterEventTargetEPS_(%class.CFWL_Widget*, %class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %4 = bitcast %"class.cppgc::internal::BasicMember.0"* %3 to %class.CFWL_App**
  %5 = load %class.CFWL_App*, %class.CFWL_App** %4, align 8
  %6 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %5, i64 0, i32 2
  %7 = bitcast %"class.cppgc::internal::BasicMember.6"* %6 to %class.CFWL_NoteDriver**
  %8 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %7, align 8
  tail call void @_ZN15CFWL_NoteDriver19RegisterEventTargetEP11CFWL_WidgetS1_(%class.CFWL_NoteDriver* %8, %class.CFWL_Widget* %0, %class.CFWL_Widget* %1) #14
  ret void
}

declare void @_ZN15CFWL_NoteDriver19RegisterEventTargetEP11CFWL_WidgetS1_(%class.CFWL_NoteDriver*, %class.CFWL_Widget*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget21UnregisterEventTargetEv(%class.CFWL_Widget*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %3 = bitcast %"class.cppgc::internal::BasicMember.0"* %2 to %class.CFWL_App**
  %4 = load %class.CFWL_App*, %class.CFWL_App** %3, align 8
  %5 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %4, i64 0, i32 2
  %6 = bitcast %"class.cppgc::internal::BasicMember.6"* %5 to %class.CFWL_NoteDriver**
  %7 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %6, align 8
  tail call void @_ZN15CFWL_NoteDriver21UnregisterEventTargetEP11CFWL_Widget(%class.CFWL_NoteDriver* %7, %class.CFWL_Widget* %0) #14
  ret void
}

declare void @_ZN15CFWL_NoteDriver21UnregisterEventTargetEP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* nocapture readonly, %class.CFWL_Event*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 9
  %4 = bitcast %"class.cppgc::internal::BasicMember.3"* %3 to %class.CFWL_Widget**
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = icmp eq %class.CFWL_Widget* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %5, i64 0, i32 8
  %9 = bitcast %"class.cppgc::internal::BasicMember.2"* %8 to %class.IFWL_WidgetDelegate**
  %10 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %9, align 8
  %11 = icmp eq %class.IFWL_WidgetDelegate* %10, null
  %12 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %5, i64 0, i32 0
  %13 = select i1 %11, %class.IFWL_WidgetDelegate* %12, %class.IFWL_WidgetDelegate* %10
  %14 = bitcast %class.IFWL_WidgetDelegate* %13 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)***
  %15 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %15, i64 4
  %17 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %16, align 8
  tail call void %17(%class.IFWL_WidgetDelegate* %13, %class.CFWL_Event* %1) #14
  br label %25

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %20 = bitcast %"class.cppgc::internal::BasicMember.0"* %19 to %class.CFWL_App**
  %21 = load %class.CFWL_App*, %class.CFWL_App** %20, align 8
  %22 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %21, i64 0, i32 2
  %23 = bitcast %"class.cppgc::internal::BasicMember.6"* %22 to %class.CFWL_NoteDriver**
  %24 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %23, align 8
  tail call void @_ZN15CFWL_NoteDriver9SendEventEP10CFWL_Event(%class.CFWL_NoteDriver* %24, %class.CFWL_Event* %1) #14
  br label %25

25:                                               ; preds = %18, %7
  ret void
}

declare void @_ZN15CFWL_NoteDriver9SendEventEP10CFWL_Event(%class.CFWL_NoteDriver*, %class.CFWL_Event*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 7
  %4 = bitcast %"class.cppgc::internal::BasicMember.1"* %3 to %class.CFWL_WidgetMgr**
  %5 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %4, align 8
  tail call void @_ZN14CFWL_WidgetMgr13RepaintWidgetEP11CFWL_WidgetRK9CFX_RectF(%class.CFWL_WidgetMgr* %5, %class.CFWL_Widget* %0, %class.CFX_RectF* dereferenceable(16) %1) #14
  ret void
}

declare void @_ZN14CFWL_WidgetMgr13RepaintWidgetEP11CFWL_WidgetRK9CFX_RectF(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget14DrawBackgroundEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, i8 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFWL_ThemeBackground, align 8
  %6 = bitcast %class.CFWL_ThemeBackground* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.54", %"class.fxcrt::UnownedPtr.35" }* @__const._ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %5, %class.CFWL_Widget* %0, %class.CFGAS_GEGraphics* %1) #14
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 4
  store i8 %2, i8* %7, align 4
  %8 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %10 = bitcast float* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1
  %13 = bitcast %class.CFX_RectF* %12 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %13, align 8
  %14 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1, i32 2
  %15 = bitcast float* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %17 = bitcast %"class.cppgc::internal::BasicMember.0"* %16 to %"class.CFWL_App::AdapterIface"***
  %18 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %17, align 8
  %19 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %18, align 8
  %20 = bitcast %"class.CFWL_App::AdapterIface"* %19 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %21 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %20, align 8
  %22 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %21, i64 5
  %23 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %22, align 8
  %24 = call %class.IFWL_ThemeProvider* %23(%"class.CFWL_App::AdapterIface"* %19) #14
  %25 = bitcast %class.IFWL_ThemeProvider* %24 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %26 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %26, i64 3
  %28 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %27, align 8
  call void %28(%class.IFWL_ThemeProvider* %24, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %5) #14
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #14
  ret void
}

declare void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, i8 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFWL_ThemeBackground, align 8
  %6 = bitcast %class.CFWL_ThemeBackground* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.34" }, %"class.fxcrt::UnownedPtr.54", %"class.fxcrt::UnownedPtr.35" }* @__const._ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %5, %class.CFWL_Widget* %0, %class.CFGAS_GEGraphics* %1) #14
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 4
  store i8 %2, i8* %7, align 4
  %8 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 2, i32 2
  %10 = bitcast float* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1
  %13 = bitcast %class.CFX_RectF* %12 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %13, align 8
  %14 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1, i32 2
  %15 = bitcast float* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %0, i64 0, i32 6
  %17 = bitcast %"class.cppgc::internal::BasicMember.0"* %16 to %"class.CFWL_App::AdapterIface"***
  %18 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %17, align 8
  %19 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %18, align 8
  %20 = bitcast %"class.CFWL_App::AdapterIface"* %19 to %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)***
  %21 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)**, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*** %20, align 8
  %22 = getelementptr inbounds %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %21, i64 5
  %23 = load %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)*, %class.IFWL_ThemeProvider* (%"class.CFWL_App::AdapterIface"*)** %22, align 8
  %24 = call %class.IFWL_ThemeProvider* %23(%"class.CFWL_App::AdapterIface"* %19) #14
  %25 = bitcast %class.IFWL_ThemeProvider* %24 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %26 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %26, i64 3
  %28 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %27, align 8
  call void %28(%class.IFWL_ThemeProvider* %24, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %5) #14
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #14
  ret void
}

declare void @_ZN15CFWL_NoteDriver19NotifyTargetDestroyEP11CFWL_Widget(%class.CFWL_NoteDriver*, %class.CFWL_Widget*) local_unnamed_addr #2

declare %class.CFWL_Widget* @_ZNK14CFWL_WidgetMgr15GetParentWidgetEPK11CFWL_Widget(%class.CFWL_WidgetMgr*, %class.CFWL_Widget*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget16OnProcessMessageEP12CFWL_Message(%class.CFWL_Widget* nocapture readnone, %class.CFWL_Message* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFWL_EventMouse, align 8
  %4 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 3, i32 0
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = icmp eq %class.CFWL_Widget* %5, null
  br i1 %6, label %40, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %40

11:                                               ; preds = %7
  %12 = bitcast %class.CFWL_EventMouse* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 40, i1 false)
  %13 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %14 = bitcast %class.CFWL_Message* %13 to i8*
  %15 = load i8, i8* %14, align 8
  call void @_ZN15CFWL_EventMouseC1EP11CFWL_WidgetS1_16FWL_MouseCommand(%class.CFWL_EventMouse* nonnull %3, %class.CFWL_Widget* nonnull %5, %class.CFWL_Widget* nonnull %5, i8 zeroext %15) #14
  %16 = getelementptr inbounds %class.CFWL_EventMouse, %class.CFWL_EventMouse* %3, i64 0, i32 0
  %17 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %5, i64 0, i32 9
  %18 = bitcast %"class.cppgc::internal::BasicMember.3"* %17 to %class.CFWL_Widget**
  %19 = load %class.CFWL_Widget*, %class.CFWL_Widget** %18, align 8
  %20 = icmp eq %class.CFWL_Widget* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %19, i64 0, i32 8
  %23 = bitcast %"class.cppgc::internal::BasicMember.2"* %22 to %class.IFWL_WidgetDelegate**
  %24 = load %class.IFWL_WidgetDelegate*, %class.IFWL_WidgetDelegate** %23, align 8
  %25 = icmp eq %class.IFWL_WidgetDelegate* %24, null
  %26 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %19, i64 0, i32 0
  %27 = select i1 %25, %class.IFWL_WidgetDelegate* %26, %class.IFWL_WidgetDelegate* %24
  %28 = bitcast %class.IFWL_WidgetDelegate* %27 to void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)***
  %29 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)**, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %29, i64 4
  %31 = load void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)*, void (%class.IFWL_WidgetDelegate*, %class.CFWL_Event*)** %30, align 8
  call void %31(%class.IFWL_WidgetDelegate* %27, %class.CFWL_Event* nonnull %16) #14
  br label %39

32:                                               ; preds = %11
  %33 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %5, i64 0, i32 6
  %34 = bitcast %"class.cppgc::internal::BasicMember.0"* %33 to %class.CFWL_App**
  %35 = load %class.CFWL_App*, %class.CFWL_App** %34, align 8
  %36 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %35, i64 0, i32 2
  %37 = bitcast %"class.cppgc::internal::BasicMember.6"* %36 to %class.CFWL_NoteDriver**
  %38 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %37, align 8
  call void @_ZN15CFWL_NoteDriver9SendEventEP10CFWL_Event(%class.CFWL_NoteDriver* %38, %class.CFWL_Event* nonnull %16) #14
  br label %39

39:                                               ; preds = %21, %32
  call void @_ZN15CFWL_EventMouseD1Ev(%class.CFWL_EventMouse* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #14
  br label %40

40:                                               ; preds = %39, %7, %2
  ret void
}

declare void @_ZN15CFWL_EventMouseC1EP11CFWL_WidgetS1_16FWL_MouseCommand(%class.CFWL_EventMouse*, %class.CFWL_Widget*, %class.CFWL_Widget*, i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15CFWL_EventMouseD1Ev(%class.CFWL_EventMouse*) unnamed_addr #9

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event(%class.CFWL_Widget* nocapture, %class.CFWL_Event* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11CFWL_Widget12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_Widget* nocapture, %class.CFGAS_GEGraphics* nocapture, %class.CFX_Matrix* nocapture dereferenceable(24)) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget16ScopedUpdateLockC2EPS_(%"class.CFWL_Widget::ScopedUpdateLock"* nocapture, %class.CFWL_Widget*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.CFWL_Widget::ScopedUpdateLock", %"class.CFWL_Widget::ScopedUpdateLock"* %0, i64 0, i32 0, i32 0
  store %class.CFWL_Widget* %1, %class.CFWL_Widget** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11CFWL_Widget16ScopedUpdateLockD2Ev(%"class.CFWL_Widget::ScopedUpdateLock"* nocapture readonly) unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.CFWL_Widget::ScopedUpdateLock", %"class.CFWL_Widget::ScopedUpdateLock"* %0, i64 0, i32 0, i32 0
  %3 = load %class.CFWL_Widget*, %class.CFWL_Widget** %2, align 8
  %4 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = add nsw i32 %5, -1
  store i32 %8, i32* %4, align 4
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5cppgc8internal34PreFinalizerRegistrationDispatcher20RegisterPrefinalizerENS1_12PreFinalizerE(i8*, i1 (%"class.cppgc::LivenessBroker"*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11CFWL_Widget18InvokePreFinalizerERKN5cppgc14LivenessBrokerEPv(%"class.cppgc::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Widget*
  %4 = icmp eq i8* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK5cppgc14LivenessBroker21IsHeapObjectAliveImplEPKv(%"class.cppgc::LivenessBroker"* %0, i8* nonnull %1) #14
  br i1 %6, label %23, label %7

7:                                                ; preds = %2, %5
  %8 = getelementptr inbounds i8, i8* %1, i64 36
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %13, !prof !2

12:                                               ; preds = %7
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !3
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #14, !srcloc !4
  unreachable

13:                                               ; preds = %7
  %14 = getelementptr inbounds i8, i8* %1, i64 56
  %15 = bitcast i8* %14 to %class.CFWL_App**
  %16 = load %class.CFWL_App*, %class.CFWL_App** %15, align 8
  %17 = getelementptr inbounds %class.CFWL_App, %class.CFWL_App* %16, i64 0, i32 2
  %18 = bitcast %"class.cppgc::internal::BasicMember.6"* %17 to %class.CFWL_NoteDriver**
  %19 = load %class.CFWL_NoteDriver*, %class.CFWL_NoteDriver** %18, align 8
  tail call void @_ZN15CFWL_NoteDriver19NotifyTargetDestroyEP11CFWL_Widget(%class.CFWL_NoteDriver* %19, %class.CFWL_Widget* %3) #14
  %20 = getelementptr inbounds i8, i8* %1, i64 64
  %21 = bitcast i8* %20 to %class.CFWL_WidgetMgr**
  %22 = load %class.CFWL_WidgetMgr*, %class.CFWL_WidgetMgr** %21, align 8
  tail call void @_ZN14CFWL_WidgetMgr12RemoveWidgetEP11CFWL_Widget(%class.CFWL_WidgetMgr* %22, %class.CFWL_Widget* %3) #14
  br label %23

23:                                               ; preds = %5, %13
  %24 = phi i1 [ true, %13 ], [ false, %5 ]
  ret i1 %24
}

declare zeroext i1 @_ZNK5cppgc14LivenessBroker21IsHeapObjectAliveImplEPKv(%"class.cppgc::LivenessBroker"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI11CFWL_WidgetE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_Widget*
  %4 = bitcast i8* %1 to void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)**, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = load void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)*, void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)** %5, align 8
  tail call void %6(%class.CFWL_Widget* %3, %"class.cppgc::Visitor"* %0) #14
  ret void
}

declare { i8*, void (%"class.cppgc::Visitor"*, i8*)* } @_ZN5cppgc8internal30TraceTraitFromInnerAddressImpl18GetTraceDescriptorEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI8CFWL_AppE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_App*
  tail call void @_ZNK8CFWL_App5TraceEPN5cppgc7VisitorE(%class.CFWL_App* %3, %"class.cppgc::Visitor"* %0) #14
  ret void
}

declare void @_ZNK8CFWL_App5TraceEPN5cppgc7VisitorE(%class.CFWL_App*, %"class.cppgc::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI14CFWL_WidgetMgrE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CFWL_WidgetMgr*
  tail call void @_ZNK14CFWL_WidgetMgr5TraceEPN5cppgc7VisitorE(%class.CFWL_WidgetMgr* %3, %"class.cppgc::Visitor"* %0) #14
  ret void
}

declare void @_ZNK14CFWL_WidgetMgr5TraceEPN5cppgc7VisitorE(%class.CFWL_WidgetMgr*, %"class.cppgc::Visitor"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i32 -2141238568}
!4 = !{i32 -2141238547}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN11CFWL_Widget19GetOffsetFromParentEPS_: argument 0"}
!7 = distinct !{!7, !"_ZN11CFWL_Widget19GetOffsetFromParentEPS_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN11CFWL_Widget19GetOffsetFromParentEPS_: argument 0"}
!10 = distinct !{!10, !"_ZN11CFWL_Widget19GetOffsetFromParentEPS_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK13CFX_PTemplateIfEplERKS0_: argument 0"}
!13 = distinct !{!13, !"_ZNK13CFX_PTemplateIfEplERKS0_"}
!14 = !{i8 0, i8 2}
