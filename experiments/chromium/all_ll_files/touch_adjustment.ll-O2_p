; ModuleID = '../../third_party/blink/renderer/core/page/touch_adjustment.cc'
source_filename = "../../third_party/blink/renderer/core/page/touch_adjustment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.152", i32, [4 x i8], %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.288", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.329", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.268", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.262", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { float }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.271", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.310" }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.569" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.328 }
%class.scoped_refptr.328 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.329" = type { %"struct.std::__1::__atomic_base.330" }
%"struct.std::__1::__atomic_base.330" = type { %"struct.std::__1::__cxx_atomic_impl.331" }
%"struct.std::__1::__cxx_atomic_impl.331" = type { %"struct.std::__1::__cxx_atomic_base_impl.332" }
%"struct.std::__1::__cxx_atomic_base_impl.332" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.345", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.354", double, double, i64, i64, %"class.blink::HeapHashSet.356", %"class.blink::HeapHashSet.363", i16, i8, %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::TextLinkColors", %"class.blink::Member.378", i8, [7 x i8], %"class.blink::HeapHashMap.380", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.387", %"class.blink::Member.392", %"class.blink::Member.396", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.398", %"class.blink::HeapVector.400", %"class.std::__1::unique_ptr.408", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.414", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.427", %"class.WTF::Vector.429", i8, i8, %"class.std::__1::unique_ptr.434", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.440", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.448", i8, i32, %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.456", %"class.WTF::HashMap.458", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.471", i8, i32, %"class.blink::Member.478", %"class.blink::Member.480", i32, %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", i64, %"class.std::__1::unique_ptr.494", i32, i32, %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.511", %"class.WTF::Vector.513", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.518", %"class.blink::Member.525", %"class.std::__1::unique_ptr.527", %"class.blink::Member.533", i8, i8, %"class.WTF::String", %"class.blink::Member.535", i8, [7 x i8], %"class.blink::HeapHashMap.537", %"class.blink::HeapObserverSet", %"class.blink::Member.551", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.553", i32, i8, i8, %"class.blink::WeakMember.555", %"class.blink::Member.556" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.574", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.642", i32, i8, [3 x i8], %"class.blink::HeapVector.644", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.663", %"class.blink::Member.791", %"class.blink::Member.793", i8, [7 x i8] }>
%"class.blink::Supplementable.574" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.575" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.590" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.582" }
%"class.blink::HeapObserverSet.582" = type { i32, [4 x i8], %"class.blink::HeapHashSet.583" }
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.589" = type opaque
%"class.blink::Supplementable.590" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.591" }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type { i8*, %"class.blink::Member.2417" }
%"class.blink::Member.2417" = type { %"class.blink::MemberBase.2418" }
%"class.blink::MemberBase.2418" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2419" }
%"class.blink::Member.2419" = type { %"class.blink::MemberBase.2420" }
%"class.blink::MemberBase.2420" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.598, %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.632", %"class.blink::Member.113", i32, [4 x i8], %"class.WTF::HashSet.638", i32, i32 }
%class.scoped_refptr.598 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.599", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.601 }
%"class.WTF::RefCounted.599" = type { %"class.base::RefCounted.600" }
%"class.base::RefCounted.600" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.601 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.619", %"class.std::__1::map.628"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.607 }
%union.anon.607 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.619" = type { %"class.std::__1::__tree.620" }
%"class.std::__1::__tree.620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.628" = type opaque
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.644" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::Member.650"*, i32, i32 }
%"class.blink::Member.650" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.656", i32, i32 }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.666" }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.mojo::StructPtr.672"*, i32, i32 }
%"class.mojo::StructPtr.672" = type { %"class.std::__1::unique_ptr.673" }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.676", %"class.WTF::HashMap.683", %"class.WTF::HashMap.688", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.693", i32, %"class.mojo::StructPtr.698", %"class.WTF::Vector.693" }
%"class.mojo::StructPtr.676" = type { %"class.std::__1::unique_ptr.677" }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ %"struct.WTF::KeyValuePair.687"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.687" = type opaque
%"class.WTF::HashMap.688" = type { %"class.WTF::HashTable.689" }
%"class.WTF::HashTable.689" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.698" = type { %"class.std::__1::unique_ptr.699" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.693", i8, i8, [6 x i8] }>
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.782" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.713", i32 }>
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.716", %"class.absl::optional.717", %"class.absl::optional.722", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.735", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.757", %"class.std::__1::map.768", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.777", i8, %class.scoped_refptr.727, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.778" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.716" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.717" = type { %"class.absl::optional_internal::optional_data.718" }
%"class.absl::optional_internal::optional_data.718" = type { %"class.absl::optional_internal::optional_data_base.719" }
%"class.absl::optional_internal::optional_data_base.719" = type { %"class.absl::optional_internal::optional_data_dtor_base.720" }
%"class.absl::optional_internal::optional_data_dtor_base.720" = type { i8, %union.anon.721 }
%union.anon.721 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.722" = type { %"class.absl::optional_internal::optional_data.723" }
%"class.absl::optional_internal::optional_data.723" = type { %"class.absl::optional_internal::optional_data_base.724" }
%"class.absl::optional_internal::optional_data_base.724" = type { %"class.absl::optional_internal::optional_data_dtor_base.725" }
%"class.absl::optional_internal::optional_data_dtor_base.725" = type { i8, %union.anon.726 }
%union.anon.726 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.727, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.728" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.728" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.338", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.339" }
%"struct.std::__1::atomic.339" = type { %"struct.std::__1::__atomic_base.340" }
%"struct.std::__1::__atomic_base.340" = type { %"struct.std::__1::__atomic_base.341" }
%"struct.std::__1::__atomic_base.341" = type { %"struct.std::__1::__cxx_atomic_impl.342" }
%"struct.std::__1::__cxx_atomic_impl.342" = type { %"struct.std::__1::__cxx_atomic_base_impl.343" }
%"struct.std::__1::__cxx_atomic_base_impl.343" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.733 }
%class.scoped_refptr.733 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.795", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.727, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.795" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.738", %class.scoped_refptr.739 }
%"class.base::RepeatingCallback.738" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.739 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.740", [4 x i8] }>
%"class.base::RefCountedThreadSafe.740" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.750", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.756" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.756" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.757" = type { %"class.std::__1::__tree.758" }
%"class.std::__1::__tree.758" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.759", %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.768" = type { %"class.std::__1::__tree.769" }
%"class.std::__1::__tree.769" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.770", %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::OnceCallback.777" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.727 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.336" }>
%"class.base::RefCountedThreadSafe.336" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.778" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.139", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.139" = type { %"class.base::RefCounted.140" }
%"class.base::RefCounted.140" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.143" }
%"class.blink::HeapHashMap.143" = type { %"class.WTF::HashMap.146" }
%"class.WTF::HashMap.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.WTF::KeyValuePair.149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.149" = type { %"class.blink::WeakMember.150", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.347" }
%"class.blink::HeapHashMap.347" = type { %"class.WTF::HashMap.350" }
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.353"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.353" = type opaque
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.356" = type { %"class.WTF::HashSet.359" }
%"class.WTF::HashSet.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"class.blink::WeakMember.362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.362" = type opaque
%"class.blink::HeapHashSet.363" = type { %"class.WTF::HashSet.366" }
%"class.WTF::HashSet.366" = type { %"class.WTF::HashTable.367" }
%"class.WTF::HashTable.367" = type <{ %"class.blink::WeakMember.369"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.369" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.380" = type { %"class.WTF::HashMap.383" }
%"class.WTF::HashMap.383" = type { %"class.WTF::HashTable.384" }
%"class.WTF::HashTable.384" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.414" = type { %"class.WTF::HashSet.417" }
%"class.WTF::HashSet.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"class.blink::WeakMember.420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.420" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.421", i32, [4 x i8] }>
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"struct.std::__1::pair.424"*, i32, i32 }
%"struct.std::__1::pair.424" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.440" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::Member.446"*, i32, i32 }
%"class.blink::Member.446" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.344", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.335, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.335 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.344" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.471" = type { %"class.WTF::HashSet.474" }
%"class.WTF::HashSet.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"class.blink::Member.477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.477" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", %"class.WTF::HashSet.77", i32, [4 x i8], %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.537" = type { %"class.WTF::HashMap.540" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.543"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.543" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.544" }
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.560", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.567", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.560" = type { %"class.WTF::HashSet.563" }
%"class.WTF::HashSet.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"class.blink::Member.566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.566" = type opaque
%"class.blink::HeapTaskRunnerTimer.567" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.568", { i64, i64 } }
%"class.blink::WeakMember.568" = type { %"class.blink::MemberBase.554" }
%"class.blink::WeakMember.555" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2508", %"class.blink::Member.2510", %"class.blink::Member.2512", %"class.blink::Member.2531", %"class.blink::Member.2533" }
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.1242 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1242, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1244" }
%"class.std::__1::unique_ptr.1244" = type { %"class.std::__1::__compressed_pair.1245" }
%"class.std::__1::__compressed_pair.1245" = type { %"struct.std::__1::__compressed_pair_elem.1246" }
%"struct.std::__1::__compressed_pair_elem.1246" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1247", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1253", %"class.std::__1::unique_ptr.1376", i8, %"class.absl::optional.1382", %class.scoped_refptr.1358, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1387" }
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1256, %class.scoped_refptr.1256, %class.scoped_refptr.1256, %class.scoped_refptr.1256, %class.scoped_refptr.1256, %class.scoped_refptr.1256, %class.scoped_refptr.1291, %class.scoped_refptr.1307, %class.scoped_refptr.1308, %class.scoped_refptr.1308, %class.scoped_refptr.1308, %class.scoped_refptr.1308, %class.scoped_refptr.1308, %class.scoped_refptr.1308, %class.scoped_refptr.1348, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1349, %class.scoped_refptr.1372 }
%class.scoped_refptr.1256 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1273" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1257", i8, i8, %class.scoped_refptr.1259, i32, i32 }
%"class.WTF::RefCounted.1257" = type { %"class.base::RefCounted.1258" }
%"class.base::RefCounted.1258" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1259 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1266, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1267", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1260" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1266 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1292", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1292" = type { %"class.WTF::RefCounted.1293", i8, i8, %class.scoped_refptr.1266, i32, i32 }
%"class.WTF::RefCounted.1293" = type { %"class.base::RefCounted.1294" }
%"class.base::RefCounted.1294" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1295" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1295" = type { %"class.absl::optional_internal::optional_data.1296" }
%"class.absl::optional_internal::optional_data.1296" = type { %"class.absl::optional_internal::optional_data_base.1297" }
%"class.absl::optional_internal::optional_data_base.1297" = type { %"class.absl::optional_internal::optional_data_dtor_base.1298" }
%"class.absl::optional_internal::optional_data_dtor_base.1298" = type { i8, %union.anon.1299 }
%union.anon.1299 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1300", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1300" = type { %"class.std::__1::__vector_base.1301" }
%"class.std::__1::__vector_base.1301" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1302" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.1303" }
%"struct.std::__1::__compressed_pair_elem.1303" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1276", %"class.std::__1::unique_ptr.1282", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1291 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1307 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1308 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1309" }
%"class.blink::PaintPropertyNode.1309" = type { %"class.WTF::RefCounted.1310", i8, i8, %class.scoped_refptr.1312, i32, i32 }
%"class.WTF::RefCounted.1310" = type { %"class.base::RefCounted.1311" }
%"class.base::RefCounted.1311" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1312 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1259, %class.scoped_refptr.1313, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1335", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1313 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1350" }
%"class.blink::PaintPropertyNode.1350" = type { %"class.WTF::RefCounted.1351", i8, i8, %class.scoped_refptr.1313, i32, i32 }
%"class.WTF::RefCounted.1351" = type { %"class.base::RefCounted.1352" }
%"class.base::RefCounted.1352" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1314" }
%"class.std::__1::vector.1314" = type { %"class.std::__1::__vector_base.1315" }
%"class.std::__1::__vector_base.1315" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1330" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1316, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1323", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1316 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1317, i32, %"class.absl::optional.1318", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.104" }>
%class.sk_sp.1317 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1318" = type { %"class.absl::optional_internal::optional_data.1319" }
%"class.absl::optional_internal::optional_data.1319" = type { %"class.absl::optional_internal::optional_data_base.1320" }
%"class.absl::optional_internal::optional_data_base.1320" = type { %"class.absl::optional_internal::optional_data_dtor_base.1321" }
%"class.absl::optional_internal::optional_data_dtor_base.1321" = type { i8, %union.anon.1322 }
%union.anon.1322 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1323" = type { %"class.std::__1::__vector_base.1324" }
%"class.std::__1::__vector_base.1324" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1325" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1330" = type { %"struct.std::__1::__compressed_pair_elem.1331" }
%"struct.std::__1::__compressed_pair_elem.1331" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1341" }
%"class.std::__1::vector.1341" = type { %"class.std::__1::__vector_base.1342" }
%"class.std::__1::__vector_base.1342" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { i32* }
%class.scoped_refptr.1348 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1349 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1361" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1259, %"class.absl::optional.1353", %class.scoped_refptr.1358, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1353" = type { %"class.absl::optional_internal::optional_data.1354" }
%"class.absl::optional_internal::optional_data.1354" = type { %"class.absl::optional_internal::optional_data_base.1355" }
%"class.absl::optional_internal::optional_data_base.1355" = type { %"class.absl::optional_internal::optional_data_dtor_base.1356" }
%"class.absl::optional_internal::optional_data_dtor_base.1356" = type { i8, [3 x i8], %union.anon.1357 }
%union.anon.1357 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1361" = type { %"class.std::__1::__compressed_pair.1362" }
%"class.std::__1::__compressed_pair.1362" = type { %"struct.std::__1::__compressed_pair_elem.1363" }
%"struct.std::__1::__compressed_pair_elem.1363" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1364", i32, [4 x i8] }>
%"class.WTF::Vector.1364" = type { %"class.WTF::VectorBuffer.1365" }
%"class.WTF::VectorBuffer.1365" = type { %"class.WTF::VectorBufferBase.1366" }
%"class.WTF::VectorBufferBase.1366" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1372 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1259, %class.scoped_refptr.1313, %class.scoped_refptr.1312 }
%"class.absl::optional.1382" = type { %"class.absl::optional_internal::optional_data.1383" }
%"class.absl::optional_internal::optional_data.1383" = type { %"class.absl::optional_internal::optional_data_base.1384" }
%"class.absl::optional_internal::optional_data_base.1384" = type { %"class.absl::optional_internal::optional_data_dtor_base.1385" }
%"class.absl::optional_internal::optional_data_dtor_base.1385" = type { i8, %union.anon.1386 }
%union.anon.1386 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1358 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1359", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1161, i32, %"struct.std::__1::atomic.339", %"struct.std::__1::atomic.339", i8, i8 }>
%class.sk_sp.1161 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1162, %class.SkTDArray.1163, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.104" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1162 = type { i8*, i32, i32 }
%class.SkTDArray.1163 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1164 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.104", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.339" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1164 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.329", [3 x i8] }
%"class.WTF::RefCounted.1359" = type { %"class.base::RefCounted.1360" }
%"class.base::RefCounted.1360" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1387" = type { %"class.std::__1::__compressed_pair.1388" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.1242 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1223", %"class.std::__1::unique_ptr.1225" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.860", %"class.blink::DataRef.940", %"class.blink::DataRef.944", %"class.blink::DataRef.1139", %"class.blink::DataRef.1206", %"class.blink::DataRef.1210", %"class.blink::DataRef.1214", %"class.blink::DataRef.1218", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.796 }
%class.scoped_refptr.796 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.797", %"class.blink::DataRef.799", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.797" = type { %"class.base::RefCounted.798" }
%"class.base::RefCounted.798" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.799" = type { %class.scoped_refptr.800 }
%class.scoped_refptr.800 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.801", %"class.blink::Font" }
%"class.WTF::RefCounted.801" = type { %"class.base::RefCounted.802" }
%"class.base::RefCounted.802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.829 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.804, %class.scoped_refptr.812, %class.scoped_refptr.822, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.828 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.803 }
%class.scoped_refptr.803 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1240", [4 x i8] }>
%"class.WTF::RefCounted.1240" = type { %"class.base::RefCounted.1241" }
%"class.base::RefCounted.1241" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.804 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.810", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.805" }
%"class.WTF::Vector.805" = type { %"class.WTF::VectorBuffer.806" }
%"class.WTF::VectorBuffer.806" = type { %"class.WTF::VectorBufferBase.807" }
%"class.WTF::VectorBufferBase.807" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.810" = type { %"class.base::RefCounted.811" }
%"class.base::RefCounted.811" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.812 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.813", %"class.WTF::RefCounted.820", [4 x i8] }>
%"class.blink::FontSettings.813" = type { %"class.WTF::Vector.814" }
%"class.WTF::Vector.814" = type { %"class.WTF::VectorBuffer.815" }
%"class.WTF::VectorBuffer.815" = type { %"class.WTF::VectorBufferBase.816" }
%"class.WTF::VectorBufferBase.816" = type { %"class.blink::FontTagValuePair.817"*, i32, i32 }
%"class.blink::FontTagValuePair.817" = type { i32, float }
%"class.WTF::RefCounted.820" = type { %"class.base::RefCounted.821" }
%"class.base::RefCounted.821" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.822 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.823", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.825, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.823" = type { %"class.base::RefCounted.824" }
%"class.base::RefCounted.824" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.825 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.826", [4 x i8] }>
%"class.WTF::RefCounted.826" = type { %"class.base::RefCounted.827" }
%"class.base::RefCounted.827" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.828 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.829 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.830", %"class.WTF::Vector.832", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.830" = type { %"class.base::RefCounted.831" }
%"class.base::RefCounted.831" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.832" = type { %"class.WTF::VectorBuffer.833" }
%"class.WTF::VectorBuffer.833" = type { %"class.WTF::VectorBufferBase.834", [8 x i8] }
%"class.WTF::VectorBufferBase.834" = type { %class.scoped_refptr.835*, i32, i32 }
%class.scoped_refptr.835 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.836", [4 x i8] }>
%"class.WTF::RefCounted.836" = type { %"class.base::RefCounted.837" }
%"class.base::RefCounted.837" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.846", %class.scoped_refptr.853, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.836" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.840", %"class.absl::optional.840", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.840" = type { %"class.absl::optional_internal::optional_data.841" }
%"class.absl::optional_internal::optional_data.841" = type { %"class.absl::optional_internal::optional_data_base.842" }
%"class.absl::optional_internal::optional_data_base.842" = type { %"class.absl::optional_internal::optional_data_dtor_base.843" }
%"class.absl::optional_internal::optional_data_dtor_base.843" = type { i8, %union.anon.844 }
%union.anon.844 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.845, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.104" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.845 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.849, %class.scoped_refptr.849 }
%class.scoped_refptr.849 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.853 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.854", [4 x i8] }>
%"class.WTF::RefCounted.854" = type { %"class.base::RefCounted.855" }
%"class.base::RefCounted.855" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.856" }
%"class.blink::PersistentBase.856" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.857" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.857" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.858 }
%class.scoped_refptr.858 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.859, i8, i8, i8, i8 }>
%union.anon.859 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.860" = type { %class.scoped_refptr.861 }
%class.scoped_refptr.861 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.862", [4 x i8], %"class.blink::DataRef.864", %"class.blink::DataRef.905", %"class.WTF::Vector.909", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.913, %class.scoped_refptr.922, %"class.blink::Persistent.930", %"class.blink::Persistent.932", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.862" = type { %"class.base::RefCounted.863" }
%"class.base::RefCounted.863" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.864" = type { %class.scoped_refptr.865 }
%class.scoped_refptr.865 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.866", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.868, %class.scoped_refptr.875, %"class.blink::Persistent.892", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.866" = type { %"class.base::RefCounted.867" }
%"class.base::RefCounted.867" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.868 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.869", %"class.WTF::Vector.870" }
%"class.base::RefCountedThreadSafe.869" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.870" = type { %"class.WTF::VectorBuffer.871" }
%"class.WTF::VectorBuffer.871" = type { %"class.WTF::VectorBufferBase.872" }
%"class.WTF::VectorBufferBase.872" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.875 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.876", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.876" = type { %"class.base::RefCounted.877" }
%"class.base::RefCounted.877" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.878", %"class.blink::Persistent.883" }
%"class.WTF::HashMap.878" = type { %"class.WTF::HashTable.879" }
%"class.WTF::HashTable.879" = type <{ %"struct.WTF::KeyValuePair.882"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.882" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2431 }
%class.scoped_refptr.2431 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2432", %"class.WTF::Vector.693", %"class.WTF::Vector.2434", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2432" = type { %"class.base::RefCounted.2433" }
%"class.base::RefCounted.2433" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2434" = type { %"class.WTF::VectorBuffer.2435" }
%"class.WTF::VectorBuffer.2435" = type { %"class.WTF::VectorBufferBase.2436" }
%"class.WTF::VectorBufferBase.2436" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2437 }
%union.anon.2437 = type { double }
%"class.blink::Persistent.883" = type { %"class.blink::PersistentBase.884" }
%"class.blink::PersistentBase.884" = type { %"class.blink::HeapHashMap.885"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.885" = type { %"class.WTF::HashMap.888" }
%"class.WTF::HashMap.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"struct.WTF::KeyValuePair.891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.891" = type opaque
%"class.blink::Persistent.892" = type { %"class.blink::PersistentBase.893" }
%"class.blink::PersistentBase.893" = type { %"class.blink::HeapVector.894"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.894" = type { %"class.WTF::Vector.897" }
%"class.WTF::Vector.897" = type { %"class.WTF::VectorBuffer.898" }
%"class.WTF::VectorBuffer.898" = type { %"class.WTF::VectorBufferBase.899" }
%"class.WTF::VectorBufferBase.899" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.900", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.905" = type { %class.scoped_refptr.906 }
%class.scoped_refptr.906 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.907", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.907" = type { %"class.base::RefCounted.908" }
%"class.base::RefCounted.908" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.913 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.914", %"class.WTF::Vector.916" }
%"class.WTF::RefCounted.914" = type { %"class.base::RefCounted.915" }
%"class.base::RefCounted.915" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918" }
%"class.WTF::VectorBufferBase.918" = type { %"struct.std::__1::pair.919"*, i32, i32 }
%"struct.std::__1::pair.919" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.922 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.923", [4 x i8], %"class.WTF::Vector.925" }
%"class.WTF::RefCounted.923" = type { %"class.base::RefCounted.924" }
%"class.base::RefCounted.924" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.927", [28 x i8] }>
%"class.WTF::VectorBufferBase.927" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.930" = type { %"class.blink::PersistentBase.931" }
%"class.blink::PersistentBase.931" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.932" = type { %"class.blink::PersistentBase.933" }
%"class.blink::PersistentBase.933" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.936", %"class.blink::Member.938" }
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.940" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.942", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.942" = type { %"class.base::RefCounted.943" }
%"class.base::RefCounted.943" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.944" = type { %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.946", [4 x i8], %"class.blink::DataRef.948", %"class.blink::DataRef.1014", %"class.blink::TransformOperations", %class.scoped_refptr.922, %"class.blink::Persistent.1133", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.948" = type { %class.scoped_refptr.949 }
%class.scoped_refptr.949 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.950", [4 x i8], %"class.blink::DataRef.952", %"class.blink::Persistent.990", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.950" = type { %"class.base::RefCounted.951" }
%"class.base::RefCounted.951" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.952" = type { %class.scoped_refptr.953 }
%class.scoped_refptr.953 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.954", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.972, %class.scoped_refptr.975, %class.scoped_refptr.978, %class.scoped_refptr.981, %class.scoped_refptr.982, %class.scoped_refptr.983, %"class.blink::Persistent.990", %"class.blink::Persistent.1005", %"class.absl::optional.1009", %"class.absl::optional.1009", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.956", %"class.std::__1::unique_ptr.961" }
%"class.WTF::Vector.956" = type { %"class.WTF::VectorBuffer.957" }
%"class.WTF::VectorBuffer.957" = type { %"class.WTF::VectorBufferBase.958" }
%"class.WTF::VectorBufferBase.958" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.964", %"class.WTF::Vector.956", i32, i32 }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966" }
%"class.WTF::VectorBufferBase.966" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.972 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.973", [4 x i8] }>
%"class.WTF::RefCounted.973" = type { %"class.base::RefCounted.974" }
%"class.base::RefCounted.974" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.975 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.976", [4 x i8] }>
%"class.WTF::RefCounted.976" = type { %"class.base::RefCounted.977" }
%"class.base::RefCounted.977" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.978 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.979" }>
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.981 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.982 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.983 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.984", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.984" = type { %"class.base::RefCounted.985" }
%"class.base::RefCounted.985" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.986" }
%"class.blink::DataRef.986" = type { %class.scoped_refptr.987 }
%class.scoped_refptr.987 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.930", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.988" }
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1005" = type { %"class.blink::PersistentBase.1006" }
%"class.blink::PersistentBase.1006" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.975, %"class.blink::Member.900", i32, [4 x i8] }>
%"class.absl::optional.1009" = type { %"class.absl::optional_internal::optional_data.1010" }
%"class.absl::optional_internal::optional_data.1010" = type { %"class.absl::optional_internal::optional_data_base.1011" }
%"class.absl::optional_internal::optional_data_base.1011" = type { %"class.absl::optional_internal::optional_data_dtor_base.1012" }
%"class.absl::optional_internal::optional_data_dtor_base.1012" = type { i8, [3 x i8], %union.anon.1013 }
%union.anon.1013 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.990" = type { %"class.blink::PersistentBase.991" }
%"class.blink::PersistentBase.991" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.994" }
%"class.blink::HeapVector.994" = type { %"class.WTF::Vector.997" }
%"class.WTF::Vector.997" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999" }
%"class.WTF::VectorBufferBase.999" = type { %"class.blink::Member.1000"*, i32, i32 }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1014" = type { %class.scoped_refptr.1015 }
%class.scoped_refptr.1015 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1016", %"class.blink::DataRef.1018", %"class.blink::DataRef.1022", %"class.blink::DataRef.1031", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1050", %"class.std::__1::unique_ptr.1061", %"class.std::__1::unique_ptr.1099", %"class.std::__1::unique_ptr.1110", %"class.std::__1::unique_ptr.1121", %"class.WTF::Vector.693", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1016" = type { %"class.base::RefCounted.1017" }
%"class.base::RefCounted.1017" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1018" = type { %class.scoped_refptr.1019 }
%class.scoped_refptr.1019 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1020", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1020" = type { %"class.base::RefCounted.1021" }
%"class.base::RefCounted.1021" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1022" = type { %class.scoped_refptr.1023 }
%class.scoped_refptr.1023 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1024", [4 x i8], %"class.WTF::Vector.1026", i8, [7 x i8] }>
%"class.WTF::RefCounted.1024" = type { %"class.base::RefCounted.1025" }
%"class.base::RefCounted.1025" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { i32*, i32, i32 }
%"class.blink::DataRef.1031" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1033", [4 x i8], %"class.WTF::HashMap.1035", %"class.WTF::HashMap.1035", %"class.WTF::HashMap.1035", %"class.WTF::HashMap.1035", %"class.WTF::HashMap.1035", %"class.WTF::HashMap.1035", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1040", %"class.WTF::HashMap.1045", %"class.WTF::Vector.956", %"class.WTF::Vector.956", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1033" = type { %"class.base::RefCounted.1034" }
%"class.base::RefCounted.1034" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1035" = type { %"class.WTF::HashTable.1036" }
%"class.WTF::HashTable.1036" = type <{ %"struct.WTF::KeyValuePair.1039"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1039" = type { %"class.WTF::String", %"class.WTF::Vector.2421" }
%"class.WTF::Vector.2421" = type { %"class.WTF::VectorBuffer.2422" }
%"class.WTF::VectorBuffer.2422" = type { %"class.WTF::VectorBufferBase.2423" }
%"class.WTF::VectorBufferBase.2423" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1040" = type { %"class.WTF::HashTable.1041" }
%"class.WTF::HashTable.1041" = type <{ %"struct.WTF::KeyValuePair.1044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1044" = type { i64, %"class.WTF::Vector.693" }
%"class.WTF::HashMap.1045" = type { %"class.WTF::HashTable.1046" }
%"class.WTF::HashTable.1046" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1053" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2426", %"class.absl::optional.2426", %"class.absl::optional.2426" }
%"class.absl::optional.2426" = type { %"class.absl::optional_internal::optional_data.2427" }
%"class.absl::optional_internal::optional_data.2427" = type { %"class.absl::optional_internal::optional_data_base.2428" }
%"class.absl::optional_internal::optional_data_base.2428" = type { %"class.absl::optional_internal::optional_data_dtor_base.2429" }
%"class.absl::optional_internal::optional_data_dtor_base.2429" = type { i8, %union.anon.2430 }
%union.anon.2430 = type { i32 }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.909", %"class.WTF::Vector.1076", %"class.WTF::Vector.1064", %"class.WTF::Vector.1081", %"class.WTF::Vector.1086", %"class.WTF::Vector.1091" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1064", %"class.WTF::Vector.1064", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { %class.scoped_refptr.1072*, i32, i32 }
%class.scoped_refptr.1072 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1073" }
%"class.base::RefCountedThreadSafe.1073" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1064" = type { %"class.WTF::VectorBuffer.1065" }
%"class.WTF::VectorBuffer.1065" = type { %"class.WTF::VectorBufferBase.1066" }
%"class.WTF::VectorBufferBase.1066" = type { double*, i32, i32 }
%"class.WTF::Vector.1081" = type { %"class.WTF::VectorBuffer.1082" }
%"class.WTF::VectorBuffer.1082" = type { %"class.WTF::VectorBufferBase.1083" }
%"class.WTF::VectorBufferBase.1083" = type { i32*, i32, i32 }
%"class.WTF::Vector.1086" = type { %"class.WTF::VectorBuffer.1087" }
%"class.WTF::VectorBuffer.1087" = type { %"class.WTF::VectorBufferBase.1088" }
%"class.WTF::VectorBufferBase.1088" = type { i32*, i32, i32 }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1113" }
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { %"class.blink::Persistent.930"*, i32, i32 }
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.930", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1127" }
%"class.WTF::Vector.1127" = type { %"class.WTF::VectorBuffer.1128" }
%"class.WTF::VectorBuffer.1128" = type { %"class.WTF::VectorBufferBase.1129" }
%"class.WTF::VectorBufferBase.1129" = type { %class.scoped_refptr.1130*, i32, i32 }
%class.scoped_refptr.1130 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.979", [4 x i8] }>
%"class.blink::Persistent.1133" = type { %"class.blink::PersistentBase.1134" }
%"class.blink::PersistentBase.1134" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1137" }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1139" = type { %class.scoped_refptr.1140 }
%class.scoped_refptr.1140 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1141", [4 x i8], %"class.blink::DataRef.1143", %"class.blink::DataRef.1147", %"class.blink::DataRef.1168", %"class.blink::DataRef.1186", %"class.blink::DataRef.1198", %"class.blink::DataRef.1202", %class.scoped_refptr.1172, i32, [4 x i8] }>
%"class.WTF::RefCounted.1141" = type { %"class.base::RefCounted.1142" }
%"class.base::RefCounted.1142" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1143" = type { %class.scoped_refptr.1144 }
%class.scoped_refptr.1144 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1145", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1145" = type { %"class.base::RefCounted.1146" }
%"class.base::RefCounted.1146" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1147" = type { %class.scoped_refptr.1148 }
%class.scoped_refptr.1148 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1149", %class.scoped_refptr.1151, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1149" = type { %"class.base::RefCounted.1150" }
%"class.base::RefCounted.1150" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1151 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1152", %"class.std::__1::unique_ptr.1158", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.976" }>
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1168" = type { %class.scoped_refptr.1169 }
%class.scoped_refptr.1169 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1170", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1170" = type { %"class.base::RefCounted.1171" }
%"class.base::RefCounted.1171" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1172, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1186" = type { %class.scoped_refptr.1187 }
%class.scoped_refptr.1187 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1188", [4 x i8], %class.scoped_refptr.1190, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1188" = type { %"class.base::RefCounted.1189" }
%"class.base::RefCounted.1189" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1190 = type { %"class.base::RefCountedData.1191"* }
%"class.base::RefCountedData.1191" = type { %"class.base::RefCountedThreadSafe.1192", %"class.WTF::Vector.1193" }
%"class.base::RefCountedThreadSafe.1192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1193" = type { %"class.WTF::VectorBuffer.1194" }
%"class.WTF::VectorBuffer.1194" = type { %"class.WTF::VectorBufferBase.1195" }
%"class.WTF::VectorBufferBase.1195" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1198" = type { %class.scoped_refptr.1199 }
%class.scoped_refptr.1199 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1200", %class.scoped_refptr.1172, %class.scoped_refptr.1172, %class.scoped_refptr.1172 }
%"class.WTF::RefCounted.1200" = type { %"class.base::RefCounted.1201" }
%"class.base::RefCounted.1201" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1202" = type { %class.scoped_refptr.1203 }
%class.scoped_refptr.1203 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1204", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1204" = type { %"class.base::RefCounted.1205" }
%"class.base::RefCounted.1205" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1172 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1173", %"class.blink::Persistent.1175", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1173" = type { %"class.base::RefCounted.1174" }
%"class.base::RefCounted.1174" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1175" = type { %"class.blink::PersistentBase.1176" }
%"class.blink::PersistentBase.1176" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1179" }
%"class.blink::HeapHashMap.1179" = type { %"class.WTF::HashMap.1182" }
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1185" = type opaque
%"class.blink::DataRef.1206" = type { %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1208", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1210" = type { %class.scoped_refptr.1211 }
%class.scoped_refptr.1211 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1212", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1214" = type { %class.scoped_refptr.1215 }
%class.scoped_refptr.1215 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1216", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1216" = type { %"class.base::RefCounted.1217" }
%"class.base::RefCounted.1217" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1218" = type { %class.scoped_refptr.1219 }
%class.scoped_refptr.1219 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1220", %class.scoped_refptr.1222 }
%"class.WTF::RefCounted.1220" = type { %"class.base::RefCounted.1221" }
%"class.base::RefCounted.1221" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1222 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1238", %"class.blink::StyleVariables", %class.scoped_refptr.1222 }
%"class.WTF::RefCounted.1238" = type { %"class.base::RefCounted.1239" }
%"class.base::RefCounted.1239" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1223" = type { %"class.base::RefCounted.1224" }
%"class.base::RefCounted.1224" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1228" }
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.WTF::Vector.1231"* }
%"class.WTF::Vector.1231" = type { %"class.WTF::VectorBuffer.2441" }
%"class.WTF::VectorBuffer.2441" = type { %"class.WTF::VectorBufferBase.2442", [32 x i8] }
%"class.WTF::VectorBufferBase.2442" = type { %class.scoped_refptr.1242*, i32, i32 }
%"class.blink::Member.2510" = type { %"class.blink::MemberBase.2511" }
%"class.blink::MemberBase.2511" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2516", %"class.blink::HeapHashSet.2525" }
%"class.blink::HeapVector.2516" = type { %"class.WTF::Vector.2519" }
%"class.WTF::Vector.2519" = type { %"class.WTF::VectorBuffer.2520" }
%"class.WTF::VectorBuffer.2520" = type { %"class.WTF::VectorBufferBase.2521" }
%"class.WTF::VectorBufferBase.2521" = type { %"class.blink::Member.2522"*, i32, i32 }
%"class.blink::Member.2522" = type { %"class.blink::MemberBase.2523" }
%"class.blink::MemberBase.2523" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2525" = type { %"class.WTF::HashSet.2528" }
%"class.WTF::HashSet.2528" = type { %"class.WTF::HashTable.2529" }
%"class.WTF::HashTable.2529" = type <{ %"class.blink::Member.2522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2533" = type { %"class.blink::MemberBase.2534" }
%"class.blink::MemberBase.2534" = type { %"class.blink::HeapHashSet.2535"* }
%"class.blink::HeapHashSet.2535" = type opaque
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1569", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1577", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1591", %"class.blink::FrameLoader", %"class.blink::Member.1612", %"class.blink::Member.21", %"class.blink::Member.1614", %"class.blink::Member.1634", %"class.blink::Member.1650", %"class.blink::Member.1652", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1654", %class.scoped_refptr.1874, %"class.blink::Member.1875", %"class.blink::Member.1877", %"class.blink::Member.1879", %"class.blink::Member.1881", %"class.blink::Member.1883", %"class.blink::Member.1887", %"class.blink::Member.1889", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1893", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1914", %"class.std::__1::unique_ptr.1915", %"class.absl::optional.1557", i32, [4 x i8], %"class.std::__1::unique_ptr.1921", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1929", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1934", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1939", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1942", %"class.blink::Member.1944", %"class.blink::Member.1946", %"class.blink::Member.1948", %"class.mojo::StructPtr.1951", %"class.blink::Member.1960", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1962", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1400", %"class.blink::Member.1402", %"class.blink::Member.1404", i8, i32, i8, i32, %"class.blink::Member.1537", %"class.blink::Member.1427", %"class.blink::FrameLifecycle", %"class.blink::Member.1398", %"class.blink::Member.1398", %"class.blink::Member.1398", %"class.blink::Member.1398", %"class.blink::Member.1398", %"class.blink::Member.1398", %"class.blink::Member.1539", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1550", i8, %"class.base::UnguessableToken", %"class.absl::optional.1552", %"class.absl::optional.1557", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1398", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2270", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1398", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2284", %"class.blink::Member.2288", %"class.blink::Member.2290", %"class.blink::Member.2294", %"class.blink::Member.2296", %"class.blink::Member.2298", %"class.blink::Member.2300", %"class.blink::Member.2302", %"class.blink::HeapObserverSet.2304", %"class.blink::Member.2312", %"class.blink::Member.2314", %"class.blink::Member.2316", %"class.blink::Member.2318", %"class.blink::Member.2320", %"class.blink::Member.2322", %"class.blink::Member.2324", %"class.blink::Member.2326", %"class.blink::Member.2328", %"class.blink::Member.2330", %"class.blink::Member.2332", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2357", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2364", %"class.blink::Member.1400", %"class.blink::Member.1400", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2372", %"class.std::__1::unique_ptr.2378", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2270" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2271" }
%"class.blink::HeapHashMap.2271" = type { %"class.WTF::HashMap.2274" }
%"class.WTF::HashMap.2274" = type { %"class.WTF::HashTable.2275" }
%"class.WTF::HashTable.2275" = type <{ %"struct.WTF::KeyValuePair.2277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2277" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2278" }
%"class.std::__1::unique_ptr.2278" = type { %"class.std::__1::__compressed_pair.2279" }
%"class.std::__1::__compressed_pair.2279" = type { %"struct.std::__1::__compressed_pair_elem.2280" }
%"struct.std::__1::__compressed_pair_elem.2280" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2284" = type { %"class.blink::MemberBase.2285" }
%"class.blink::MemberBase.2285" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1400", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2288" = type { %"class.blink::MemberBase.2289" }
%"class.blink::MemberBase.2289" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2290" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.555", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2296" = type { %"class.blink::MemberBase.2297" }
%"class.blink::MemberBase.2297" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2298" = type { %"class.blink::MemberBase.2299" }
%"class.blink::MemberBase.2299" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2300" = type { %"class.blink::MemberBase.2301" }
%"class.blink::MemberBase.2301" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2302" = type { %"class.blink::MemberBase.2303" }
%"class.blink::MemberBase.2303" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2304" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2305" }
%"class.blink::HeapHashSet.2305" = type { %"class.WTF::HashSet.2308" }
%"class.WTF::HashSet.2308" = type { %"class.WTF::HashTable.2309" }
%"class.WTF::HashTable.2309" = type <{ %"class.blink::WeakMember.2311"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2311" = type opaque
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2314" = type { %"class.blink::MemberBase.2315" }
%"class.blink::MemberBase.2315" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2318" = type { %"class.blink::MemberBase.2319" }
%"class.blink::MemberBase.2319" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2326" = type { %"class.blink::MemberBase.2327" }
%"class.blink::MemberBase.2327" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2330" = type { %"class.blink::MemberBase.2331" }
%"class.blink::MemberBase.2331" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2332" = type { %"class.blink::MemberBase.2333" }
%"class.blink::MemberBase.2333" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2334" }
%"class.WTF::Deque.2334" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2337" }
%"class.WTF::VectorBuffer.2337" = type { %"class.WTF::VectorBufferBase.2338" }
%"class.WTF::VectorBufferBase.2338" = type { %"class.std::__1::unique_ptr.2339"*, i32, i32 }
%"class.std::__1::unique_ptr.2339" = type { %"class.std::__1::__compressed_pair.2340" }
%"class.std::__1::__compressed_pair.2340" = type { %"struct.std::__1::__compressed_pair_elem.2341" }
%"struct.std::__1::__compressed_pair_elem.2341" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2345", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2345" = type { %"class.std::__1::__bitset.2346" }
%"class.std::__1::__bitset.2346" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2347" }
%"class.absl::optional.2347" = type { %"class.absl::optional_internal::optional_data.2348" }
%"class.absl::optional_internal::optional_data.2348" = type { %"class.absl::optional_internal::optional_data_base.2349" }
%"class.absl::optional_internal::optional_data_base.2349" = type { %"class.absl::optional_internal::optional_data_dtor_base.2350" }
%"class.absl::optional_internal::optional_data_dtor_base.2350" = type { i8, %union.anon.2351 }
%union.anon.2351 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2352", i64, %"class.absl::optional.717", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2352" = type { %"class.absl::optional_internal::optional_data.2353" }
%"class.absl::optional_internal::optional_data.2353" = type { %"class.absl::optional_internal::optional_data_base.2354" }
%"class.absl::optional_internal::optional_data_base.2354" = type { %"class.absl::optional_internal::optional_data_dtor_base.2355" }
%"class.absl::optional_internal::optional_data_dtor_base.2355" = type { i8, %union.anon.2356 }
%union.anon.2356 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2357" = type { %"class.std::__1::unique_ptr.2358" }
%"class.std::__1::unique_ptr.2358" = type { %"class.std::__1::__compressed_pair.2359" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.2360" }
%"struct.std::__1::__compressed_pair_elem.2360" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2364" = type { %"class.WTF::HashSet.2367" }
%"class.WTF::HashSet.2367" = type { %"class.WTF::HashTable.2368" }
%"class.WTF::HashTable.2368" = type <{ %"class.blink::WeakMember.2370"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2370" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2371" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2371" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2372" = type { %"class.std::__1::__compressed_pair.2373" }
%"class.std::__1::__compressed_pair.2373" = type { %"struct.std::__1::__compressed_pair_elem.2374" }
%"struct.std::__1::__compressed_pair_elem.2374" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2378" = type { %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.2380" }
%"struct.std::__1::__compressed_pair_elem.2380" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1398", %"class.blink::Member.1427", %"class.blink::Member.1429", %"class.blink::Member.1431", i8, %"class.WTF::Vector.1433" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1420" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1408" }
%"class.blink::HeapVector.1408" = type { %"class.WTF::Vector.1411" }
%"class.WTF::Vector.1411" = type { %"class.WTF::VectorBuffer.1412" }
%"class.WTF::VectorBuffer.1412" = type { %"class.WTF::VectorBufferBase.1413", [32 x i8] }
%"class.WTF::VectorBufferBase.1413" = type { %"struct.std::__1::pair.1414"*, i32, i32 }
%"struct.std::__1::pair.1414" = type { %"class.WTF::AtomicString", %"class.blink::Member.1415" }
%"class.blink::Member.1415" = type { %"class.blink::MemberBase.1416" }
%"class.blink::MemberBase.1416" = type { %"class.blink::HeapVector.1417"* }
%"class.blink::HeapVector.1417" = type opaque
%"class.std::__1::unique_ptr.1420" = type { %"class.std::__1::__compressed_pair.1421" }
%"class.std::__1::__compressed_pair.1421" = type { %"struct.std::__1::__compressed_pair_elem.1422" }
%"struct.std::__1::__compressed_pair_elem.1422" = type { %"class.WTF::Vector.1423"* }
%"class.WTF::Vector.1423" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1433" = type { %"class.WTF::VectorBuffer.1434" }
%"class.WTF::VectorBuffer.1434" = type { %"class.WTF::VectorBufferBase.1435" }
%"class.WTF::VectorBufferBase.1435" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1529" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1436, %"class.std::__1::unique_ptr.713", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.727, i32 }>
%class.scoped_refptr.1436 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.727, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1495", %"class.absl::optional.1500", %"class.absl::optional.1453", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1520", i8, [7 x i8], %class.scoped_refptr.727, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.740" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.727, %"class.std::__1::unique_ptr.1437", %"class.absl::optional.1447", %"struct.std::__1::atomic.329", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1453", %"class.std::__1::unique_ptr.1458", i8, i64, %class.scoped_refptr.1492, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1493", %"class.base::WeakPtrFactory.1494" }
%"class.std::__1::unique_ptr.1437" = type { %"class.std::__1::__compressed_pair.1438" }
%"class.std::__1::__compressed_pair.1438" = type { %"struct.std::__1::__compressed_pair_elem.1439" }
%"struct.std::__1::__compressed_pair_elem.1439" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.727, i8, %"class.mojo::ScopedHandleBase.1440", %class.scoped_refptr.1441, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1442", i8*, %"class.base::WeakPtrFactory.1443" }
%"class.mojo::ScopedHandleBase.1440" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1441 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1442" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1443" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1447" = type { %"class.absl::optional_internal::optional_data.1448" }
%"class.absl::optional_internal::optional_data.1448" = type { %"class.absl::optional_internal::optional_data_base.1449" }
%"class.absl::optional_internal::optional_data_base.1449" = type { %"class.absl::optional_internal::optional_data_dtor_base.1450" }
%"class.absl::optional_internal::optional_data_dtor_base.1450" = type { i8, %union.anon.1451 }
%union.anon.1451 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1452", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1452" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1458" = type { %"class.std::__1::__compressed_pair.1459" }
%"class.std::__1::__compressed_pair.1459" = type { %"struct.std::__1::__compressed_pair_elem.1460" }
%"struct.std::__1::__compressed_pair_elem.1460" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1461", i8, i64, %class.scoped_refptr.1462, %class.scoped_refptr.1487 }
%"class.base::RepeatingCallback.1461" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1462 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1463", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1465", %"class.std::__1::map.1476", i8, [7 x i8] }>
%"class.base::RefCounted.1463" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1464 }
%class.scoped_refptr.1464 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1465" = type { %"class.std::__1::__tree.1466" }
%"class.std::__1::__tree.1466" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1467", %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.1476" = type { %"class.std::__1::__tree.1477" }
%"class.std::__1::__tree.1477" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1478", %"class.std::__1::__compressed_pair.1482" }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1482" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%class.scoped_refptr.1487 = type { %"class.base::RefCountedData.1488"* }
%"class.base::RefCountedData.1488" = type opaque
%class.scoped_refptr.1492 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1493" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1494" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1495" = type { %"class.absl::optional_internal::optional_data.1496" }
%"class.absl::optional_internal::optional_data.1496" = type { %"class.absl::optional_internal::optional_data_base.1497" }
%"class.absl::optional_internal::optional_data_base.1497" = type { %"class.absl::optional_internal::optional_data_dtor_base.1498" }
%"class.absl::optional_internal::optional_data_dtor_base.1498" = type { i8, %union.anon.1499 }
%union.anon.1499 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1500" = type { %"class.absl::optional_internal::optional_data.1501" }
%"class.absl::optional_internal::optional_data.1501" = type { %"class.absl::optional_internal::optional_data_base.1502" }
%"class.absl::optional_internal::optional_data_base.1502" = type { %"class.absl::optional_internal::optional_data_dtor_base.1503" }
%"class.absl::optional_internal::optional_data_dtor_base.1503" = type { i8, [7 x i8], %union.anon.1504 }
%union.anon.1504 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1453" = type { %"class.absl::optional_internal::optional_data.1454" }
%"class.absl::optional_internal::optional_data.1454" = type { %"class.absl::optional_internal::optional_data_base.1455" }
%"class.absl::optional_internal::optional_data_base.1455" = type { %"class.absl::optional_internal::optional_data_dtor_base.1456" }
%"class.absl::optional_internal::optional_data_dtor_base.1456" = type { i8, %union.anon.1457 }
%union.anon.1457 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1505 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1505 = type { %"class.std::__1::map.1508" }
%"class.std::__1::map.1508" = type { %"class.std::__1::__tree.1509" }
%"class.std::__1::__tree.1509" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1510", %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1519"*, i64 }
%"class.std::__1::unique_ptr.1519" = type opaque
%"class.std::__1::map.1520" = type { %"class.std::__1::__tree.1521" }
%"class.std::__1::__tree.1521" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1522", %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::Frame"* }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1398", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1541" }
%"class.base::internal::flat_tree.1541" = type { %"class.std::__1::vector.1542" }
%"class.std::__1::vector.1542" = type { %"class.std::__1::__vector_base.1543" }
%"class.std::__1::__vector_base.1543" = type { %"struct.std::__1::pair.1544"*, %"struct.std::__1::pair.1544"*, %"class.std::__1::__compressed_pair.1545" }
%"struct.std::__1::pair.1544" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1545" = type { %"struct.std::__1::__compressed_pair_elem.1546" }
%"struct.std::__1::__compressed_pair_elem.1546" = type { %"struct.std::__1::pair.1544"* }
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1552" = type { %"class.absl::optional_internal::optional_data.1553" }
%"class.absl::optional_internal::optional_data.1553" = type { %"class.absl::optional_internal::optional_data_base.1554" }
%"class.absl::optional_internal::optional_data_base.1554" = type { %"class.absl::optional_internal::optional_data_dtor_base.1555" }
%"class.absl::optional_internal::optional_data_dtor_base.1555" = type { i8, %union.anon.1556 }
%union.anon.1556 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1562" }
%"class.blink::HeapHashSet.1562" = type { %"class.WTF::HashSet.1565" }
%"class.WTF::HashSet.1565" = type { %"class.WTF::HashTable.1566" }
%"class.WTF::HashTable.1566" = type <{ %"class.blink::WeakMember.1568"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1568" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1569" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1570" }
%"class.blink::HeapHashMap.1570" = type { %"class.WTF::HashMap.1573" }
%"class.WTF::HashMap.1573" = type { %"class.WTF::HashTable.1574" }
%"class.WTF::HashTable.1574" = type <{ %"struct.WTF::KeyValuePair.1576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1576" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1577" = type { %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.1579" }
%"struct.std::__1::__compressed_pair_elem.1579" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1580", %"class.base::WeakPtrFactory.1585" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1584"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1584" = type opaque
%"class.base::WeakPtrFactory.1585" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1589" }
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2447" }
%"class.blink::WeakMember.2447" = type { %"class.blink::MemberBase.2448" }
%"class.blink::MemberBase.2448" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2449", i64, %"class.std::__1::map.2450", i8*, i64, %"class.base::WeakPtrFactory.2459" }
%"class.base::RepeatingCallback.2449" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2450" = type { %"class.std::__1::__tree.2451" }
%"class.std::__1::__tree.2451" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2452", %"class.std::__1::__compressed_pair.2456" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.2456" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.base::WeakPtrFactory.2459" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1591" = type { %"class.WTF::HashSet.1594" }
%"class.WTF::HashSet.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ %"class.blink::WeakMember.1597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1597" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1539", %"class.blink::Member.1598", %"class.blink::Member.1600", %"class.std::__1::unique_ptr.1602", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1608" }
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1602" = type { %"class.std::__1::__compressed_pair.1603" }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1608" = type { %"class.WTF::HashTable.1609" }
%"class.WTF::HashTable.1609" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2041", %"class.blink::Member.1539", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2046", i8, i32, %"class.blink::Color", %"class.absl::optional.2048", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2053", %"class.blink::Member.2055", %"class.blink::Member.2055", %"class.std::__1::unique_ptr.2058", i32, [4 x i8], %"class.WTF::HashSet.2061", %"class.blink::Member.2068", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2070", %"class.blink::HeapHashSet.2077", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2085", i8, %"class.blink::Member.2091", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2103", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2117", i8, %"class.std::__1::unique_ptr.2123", %"class.std::__1::unique_ptr.2204", %"class.WTF::Vector.2210", i32, %class.scoped_refptr.2215, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2216", %"class.blink::Member.2218", %"class.blink::Member.2220", %"class.blink::HeapHashSet.2222", %"class.blink::HeapHashSet.2229", %"class.std::__1::unique_ptr.2236", %"class.std::__1::unique_ptr.2243", %"class.WTF::Vector.100" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2041" = type { %"class.WTF::HashTable.2042" }
%"class.WTF::HashTable.2042" = type <{ %class.scoped_refptr.2045*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2045 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2046" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2047", { i64, i64 } }
%"class.blink::WeakMember.2047" = type { %"class.blink::MemberBase.1613" }
%"class.absl::optional.2048" = type { %"class.absl::optional_internal::optional_data.2049" }
%"class.absl::optional_internal::optional_data.2049" = type { %"class.absl::optional_internal::optional_data_base.2050" }
%"class.absl::optional_internal::optional_data_base.2050" = type { %"class.absl::optional_internal::optional_data_dtor_base.2051" }
%"class.absl::optional_internal::optional_data_dtor_base.2051" = type { i8, %union.anon.2052 }
%union.anon.2052 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2053" = type { %"class.blink::MemberBase.2054" }
%"class.blink::MemberBase.2054" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::HeapHashSet.2057"* }
%"class.blink::HeapHashSet.2057" = type opaque
%"class.std::__1::unique_ptr.2058" = type { %"class.std::__1::__compressed_pair.2059" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.2060" }
%"struct.std::__1::__compressed_pair_elem.2060" = type { %"class.WTF::HashSet.2061"* }
%"class.WTF::HashSet.2061" = type { %"class.WTF::HashTable.2062" }
%"class.WTF::HashTable.2062" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2070" = type { %"class.WTF::HashSet.2073" }
%"class.WTF::HashSet.2073" = type { %"class.WTF::HashTable.2074" }
%"class.WTF::HashTable.2074" = type <{ %"class.blink::Member.2076"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2076" = type opaque
%"class.blink::HeapHashSet.2077" = type { %"class.WTF::HashSet.2080" }
%"class.WTF::HashSet.2080" = type { %"class.WTF::HashTable.2081" }
%"class.WTF::HashTable.2081" = type <{ %"class.blink::Member.2083"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2256", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2266", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2258", %"class.blink::Member.2260", %"class.blink::Member.2262", %"class.blink::Member.2264", %"class.WTF::Vector.100", i16, %class.scoped_refptr.335 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2258" = type { %"class.blink::MemberBase.2259" }
%"class.blink::MemberBase.2259" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2260" = type { %"class.blink::MemberBase.2261" }
%"class.blink::MemberBase.2261" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2262" = type { %"class.blink::MemberBase.2263" }
%"class.blink::MemberBase.2263" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2264" = type { %"class.blink::MemberBase.2265" }
%"class.blink::MemberBase.2265" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2266" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2267", { i64, i64 } }
%"class.blink::WeakMember.2267" = type { %"class.blink::MemberBase.2084" }
%"class.std::__1::unique_ptr.2085" = type { %"class.std::__1::__compressed_pair.2086" }
%"class.std::__1::__compressed_pair.2086" = type { %"struct.std::__1::__compressed_pair_elem.2087" }
%"struct.std::__1::__compressed_pair_elem.2087" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2095", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2095" = type { %"class.WTF::HashTable.2096" }
%"class.WTF::HashTable.2096" = type <{ %"struct.WTF::KeyValuePair.2098"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2098" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2099", i32, i32 }
%"class.WTF::Vector.2099" = type { %"class.WTF::VectorBuffer.2100" }
%"class.WTF::VectorBuffer.2100" = type { %"class.WTF::VectorBufferBase.2101" }
%"class.WTF::VectorBufferBase.2101" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2103" = type { %"class.WTF::LinkedHashSet.2106" }
%"class.WTF::LinkedHashSet.2106" = type { %"class.WTF::HashMap.2107", %"class.WTF::VectorBackedLinkedList.2111" }
%"class.WTF::HashMap.2107" = type { %"class.WTF::HashTable.2108" }
%"class.WTF::HashTable.2108" = type <{ %"struct.WTF::KeyValuePair.2110"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2110" = type opaque
%"class.WTF::VectorBackedLinkedList.2111" = type { %"class.WTF::Vector.2112", i32, i32 }
%"class.WTF::Vector.2112" = type { %"class.WTF::VectorBuffer.2113" }
%"class.WTF::VectorBuffer.2113" = type { %"class.WTF::VectorBufferBase.2114" }
%"class.WTF::VectorBufferBase.2114" = type { %"class.WTF::VectorBackedLinkedListNode.2115"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2115" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2117" = type { %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.2119" }
%"struct.std::__1::__compressed_pair_elem.2119" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2123" = type { %"class.std::__1::__compressed_pair.2124" }
%"class.std::__1::__compressed_pair.2124" = type { %"struct.std::__1::__compressed_pair_elem.2125" }
%"struct.std::__1::__compressed_pair_elem.2125" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2126, %class.scoped_refptr.2126, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2181", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2186", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2126 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2127", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2134" }
%"class.WTF::RefCounted.2127" = type { %"class.base::RefCounted.2128" }
%"class.base::RefCounted.2128" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2129", i32, [4 x i8] }>
%"class.WTF::Vector.2129" = type { %"class.WTF::VectorBuffer.2130" }
%"class.WTF::VectorBuffer.2130" = type { %"class.WTF::VectorBufferBase.2131" }
%"class.WTF::VectorBufferBase.2131" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2134" = type { %"class.WTF::VectorBuffer.2135" }
%"class.WTF::VectorBuffer.2135" = type { %"class.WTF::VectorBufferBase.2136" }
%"class.WTF::VectorBufferBase.2136" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2137", %"class.std::__1::unique_ptr.2153", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2137" = type { %"class.std::__1::__compressed_pair.2138" }
%"class.std::__1::__compressed_pair.2138" = type { %"struct.std::__1::__compressed_pair_elem.2139" }
%"struct.std::__1::__compressed_pair_elem.2139" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2140", %"class.WTF::Vector.2145", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2140" = type { %"class.WTF::VectorBuffer.2141" }
%"class.WTF::VectorBuffer.2141" = type { %"class.WTF::VectorBufferBase.2142" }
%"class.WTF::VectorBufferBase.2142" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2145" = type { %"class.WTF::VectorBuffer.2146" }
%"class.WTF::VectorBuffer.2146" = type { %"class.WTF::VectorBufferBase.2147" }
%"class.WTF::VectorBufferBase.2147" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2153" = type { %"class.std::__1::__compressed_pair.2154" }
%"class.std::__1::__compressed_pair.2154" = type { %"struct.std::__1::__compressed_pair_elem.2155" }
%"struct.std::__1::__compressed_pair_elem.2155" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2156", %"class.absl::optional.2156" }
%"class.absl::optional.2156" = type { %"class.absl::optional_internal::optional_data.2157" }
%"class.absl::optional_internal::optional_data.2157" = type { %"class.absl::optional_internal::optional_data_base.2158" }
%"class.absl::optional_internal::optional_data_base.2158" = type { %"class.absl::optional_internal::optional_data_dtor_base.2159" }
%"class.absl::optional_internal::optional_data_dtor_base.2159" = type { i8, [3 x i8], %union.anon.2160 }
%union.anon.2160 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2134"*, %"class.absl::optional.2166", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2166" = type { %"class.absl::optional_internal::optional_data.2167" }
%"class.absl::optional_internal::optional_data.2167" = type { %"class.absl::optional_internal::optional_data_base.2168" }
%"class.absl::optional_internal::optional_data_base.2168" = type { %"class.absl::optional_internal::optional_data_dtor_base.2169" }
%"class.absl::optional_internal::optional_data_dtor_base.2169" = type { i8, %union.anon.2170 }
%union.anon.2170 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2171", %"class.WTF::Vector.2176" }
%"class.WTF::Vector.2171" = type { %"class.WTF::VectorBuffer.2172" }
%"class.WTF::VectorBuffer.2172" = type { %"class.WTF::VectorBufferBase.2173", [128 x i8] }
%"class.WTF::VectorBufferBase.2173" = type { i32*, i32, i32 }
%"class.WTF::Vector.2176" = type { %"class.WTF::VectorBuffer.2177" }
%"class.WTF::VectorBuffer.2177" = type { %"class.WTF::VectorBufferBase.2178", [128 x i8] }
%"class.WTF::VectorBufferBase.2178" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2181" = type { %"class.WTF::VectorBuffer.2182" }
%"class.WTF::VectorBuffer.2182" = type { %"class.WTF::VectorBufferBase.2183" }
%"class.WTF::VectorBufferBase.2183" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2186" = type { %"class.WTF::HashTable.2187" }
%"class.WTF::HashTable.2187" = type <{ %"struct.WTF::KeyValuePair.2190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2190" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2191", %"class.WTF::Vector.2196" }
%"class.WTF::HashMap.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %"struct.WTF::KeyValuePair.2195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2195" = type opaque
%"class.WTF::Vector.2196" = type { %"class.WTF::VectorBuffer.2197" }
%"class.WTF::VectorBuffer.2197" = type { %"class.WTF::VectorBufferBase.2198" }
%"class.WTF::VectorBufferBase.2198" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2204" = type { %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.2206" }
%"struct.std::__1::__compressed_pair_elem.2206" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2210" = type { %"class.WTF::VectorBuffer.2211" }
%"class.WTF::VectorBuffer.2211" = type { %"class.WTF::VectorBufferBase.2212" }
%"class.WTF::VectorBufferBase.2212" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2215 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2216" = type { %"class.blink::MemberBase.2217" }
%"class.blink::MemberBase.2217" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2218" = type { %"class.blink::MemberBase.2219" }
%"class.blink::MemberBase.2219" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2220" = type { %"class.blink::MemberBase.2221" }
%"class.blink::MemberBase.2221" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2222" = type { %"class.WTF::HashSet.2225" }
%"class.WTF::HashSet.2225" = type { %"class.WTF::HashTable.2226" }
%"class.WTF::HashTable.2226" = type <{ %"class.blink::WeakMember.2228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2228" = type opaque
%"class.blink::HeapHashSet.2229" = type { %"class.WTF::HashSet.2232" }
%"class.WTF::HashSet.2232" = type { %"class.WTF::HashTable.2233" }
%"class.WTF::HashTable.2233" = type <{ %"class.blink::WeakMember.2235"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2235" = type opaque
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2239" }
%"class.base::time_internal::TimeBase.2239" = type { i64 }
%"class.std::__1::unique_ptr.2243" = type { %"class.std::__1::__compressed_pair.2244" }
%"class.std::__1::__compressed_pair.2244" = type { %"struct.std::__1::__compressed_pair_elem.2245" }
%"struct.std::__1::__compressed_pair_elem.2245" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2246", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2246" = type { %"class.absl::optional_internal::optional_data.2247" }
%"class.absl::optional_internal::optional_data.2247" = type { %"class.absl::optional_internal::optional_data_base.2248" }
%"class.absl::optional_internal::optional_data_base.2248" = type { %"class.absl::optional_internal::optional_data_dtor_base.2249" }
%"class.absl::optional_internal::optional_data_dtor_base.2249" = type { i8, %union.anon.2250 }
%union.anon.2250 = type { %"class.base::Time" }
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.1539", %"class.blink::Member.1618", %"class.blink::Member.1620", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.1622", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.1628", i8, [7 x i8] }>
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.1632", %"class.blink::Member", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1539", %"class.blink::Member.1638", %"class.blink::Member.1640", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1642", %"class.blink::Member.1648" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.344" }
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1642" = type { %"class.std::__1::__compressed_pair.1643" }
%"class.std::__1::__compressed_pair.1643" = type { %"struct.std::__1::__compressed_pair_elem.1644" }
%"struct.std::__1::__compressed_pair_elem.1644" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1648" = type { %"class.blink::MemberBase.1649" }
%"class.blink::MemberBase.1649" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1665", %"class.blink::HeapListHashSet.1676", %"class.blink::HeapListHashSet.1687", %"class.blink::HeapListHashSet.1698", %"class.blink::HeapListHashSet.1709", %"class.blink::HeapListHashSet.1720", %"class.blink::HeapListHashSet.1731", %"class.blink::HeapListHashSet.1742", %"class.blink::HeapListHashSet.1753", %"class.blink::HeapListHashSet.1764", %"class.blink::HeapListHashSet.1775", %"class.blink::HeapListHashSet.1786", %"class.blink::HeapListHashSet.1797", %"class.blink::HeapListHashSet.1808", %"class.blink::HeapListHashSet.1819", %"class.blink::HeapListHashSet.1830", %"class.blink::HeapListHashSet.1841", %"class.blink::HeapListHashSet.1852", %"class.blink::HeapListHashSet.1863" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1661", %"class.blink::Member.1663", %"class.blink::Member.1663", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1661" = type <{ %"class.blink::Member.1663"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1877", %"class.blink::Member.1663", %"class.blink::Member.1663" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1665" = type { %"class.WTF::ListHashSet.base.1675", [7 x i8] }
%"class.WTF::ListHashSet.base.1675" = type <{ %"class.WTF::HashTable.1670", %"class.blink::Member.1672", %"class.blink::Member.1672", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1670" = type <{ %"class.blink::Member.1672"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::HeapListHashSetNode.1674"* }
%"class.blink::HeapListHashSetNode.1674" = type { %"class.blink::Member.2035", %"class.blink::Member.1672", %"class.blink::Member.1672" }
%"class.blink::Member.2035" = type { %"class.blink::MemberBase.2036" }
%"class.blink::MemberBase.2036" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1676" = type { %"class.WTF::ListHashSet.base.1686", [7 x i8] }
%"class.WTF::ListHashSet.base.1686" = type <{ %"class.WTF::HashTable.1681", %"class.blink::Member.1683", %"class.blink::Member.1683", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1681" = type <{ %"class.blink::Member.1683"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::HeapListHashSetNode.1685"* }
%"class.blink::HeapListHashSetNode.1685" = type { %"class.blink::Member.2031", %"class.blink::Member.1683", %"class.blink::Member.1683" }
%"class.blink::Member.2031" = type { %"class.blink::MemberBase.2032" }
%"class.blink::MemberBase.2032" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1687" = type { %"class.WTF::ListHashSet.base.1697", [7 x i8] }
%"class.WTF::ListHashSet.base.1697" = type <{ %"class.WTF::HashTable.1692", %"class.blink::Member.1694", %"class.blink::Member.1694", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1692" = type <{ %"class.blink::Member.1694"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1694" = type { %"class.blink::MemberBase.1695" }
%"class.blink::MemberBase.1695" = type { %"class.blink::HeapListHashSetNode.1696"* }
%"class.blink::HeapListHashSetNode.1696" = type { %"class.blink::Member.2027", %"class.blink::Member.1694", %"class.blink::Member.1694" }
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1698" = type { %"class.WTF::ListHashSet.base.1708", [7 x i8] }
%"class.WTF::ListHashSet.base.1708" = type <{ %"class.WTF::HashTable.1703", %"class.blink::Member.1705", %"class.blink::Member.1705", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1703" = type <{ %"class.blink::Member.1705"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::HeapListHashSetNode.1707"* }
%"class.blink::HeapListHashSetNode.1707" = type { %"class.blink::Member.2023", %"class.blink::Member.1705", %"class.blink::Member.1705" }
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1709" = type { %"class.WTF::ListHashSet.base.1719", [7 x i8] }
%"class.WTF::ListHashSet.base.1719" = type <{ %"class.WTF::HashTable.1714", %"class.blink::Member.1716", %"class.blink::Member.1716", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1714" = type <{ %"class.blink::Member.1716"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1716" = type { %"class.blink::MemberBase.1717" }
%"class.blink::MemberBase.1717" = type { %"class.blink::HeapListHashSetNode.1718"* }
%"class.blink::HeapListHashSetNode.1718" = type { %"class.blink::Member.2019", %"class.blink::Member.1716", %"class.blink::Member.1716" }
%"class.blink::Member.2019" = type { %"class.blink::MemberBase.2020" }
%"class.blink::MemberBase.2020" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1720" = type { %"class.WTF::ListHashSet.base.1730", [7 x i8] }
%"class.WTF::ListHashSet.base.1730" = type <{ %"class.WTF::HashTable.1725", %"class.blink::Member.1727", %"class.blink::Member.1727", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1725" = type <{ %"class.blink::Member.1727"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::HeapListHashSetNode.1729"* }
%"class.blink::HeapListHashSetNode.1729" = type { %"class.blink::Member.2015", %"class.blink::Member.1727", %"class.blink::Member.1727" }
%"class.blink::Member.2015" = type { %"class.blink::MemberBase.2016" }
%"class.blink::MemberBase.2016" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1731" = type { %"class.WTF::ListHashSet.base.1741", [7 x i8] }
%"class.WTF::ListHashSet.base.1741" = type <{ %"class.WTF::HashTable.1736", %"class.blink::Member.1738", %"class.blink::Member.1738", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1736" = type <{ %"class.blink::Member.1738"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1738" = type { %"class.blink::MemberBase.1739" }
%"class.blink::MemberBase.1739" = type { %"class.blink::HeapListHashSetNode.1740"* }
%"class.blink::HeapListHashSetNode.1740" = type { %"class.blink::Member.2011", %"class.blink::Member.1738", %"class.blink::Member.1738" }
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1742" = type { %"class.WTF::ListHashSet.base.1752", [7 x i8] }
%"class.WTF::ListHashSet.base.1752" = type <{ %"class.WTF::HashTable.1747", %"class.blink::Member.1749", %"class.blink::Member.1749", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1747" = type <{ %"class.blink::Member.1749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1749" = type { %"class.blink::MemberBase.1750" }
%"class.blink::MemberBase.1750" = type { %"class.blink::HeapListHashSetNode.1751"* }
%"class.blink::HeapListHashSetNode.1751" = type { %"class.blink::Member.2007", %"class.blink::Member.1749", %"class.blink::Member.1749" }
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1753" = type { %"class.WTF::ListHashSet.base.1763", [7 x i8] }
%"class.WTF::ListHashSet.base.1763" = type <{ %"class.WTF::HashTable.1758", %"class.blink::Member.1760", %"class.blink::Member.1760", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1758" = type <{ %"class.blink::Member.1760"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::HeapListHashSetNode.1762"* }
%"class.blink::HeapListHashSetNode.1762" = type { %"class.blink::Member.2003", %"class.blink::Member.1760", %"class.blink::Member.1760" }
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1764" = type { %"class.WTF::ListHashSet.base.1774", [7 x i8] }
%"class.WTF::ListHashSet.base.1774" = type <{ %"class.WTF::HashTable.1769", %"class.blink::Member.1771", %"class.blink::Member.1771", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1769" = type <{ %"class.blink::Member.1771"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::HeapListHashSetNode.1773"* }
%"class.blink::HeapListHashSetNode.1773" = type { %"class.blink::Member.1881", %"class.blink::Member.1771", %"class.blink::Member.1771" }
%"class.blink::HeapListHashSet.1775" = type { %"class.WTF::ListHashSet.base.1785", [7 x i8] }
%"class.WTF::ListHashSet.base.1785" = type <{ %"class.WTF::HashTable.1780", %"class.blink::Member.1782", %"class.blink::Member.1782", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1780" = type <{ %"class.blink::Member.1782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::HeapListHashSetNode.1784"* }
%"class.blink::HeapListHashSetNode.1784" = type { %"class.blink::Member.1997", %"class.blink::Member.1782", %"class.blink::Member.1782" }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1786" = type { %"class.WTF::ListHashSet.base.1796", [7 x i8] }
%"class.WTF::ListHashSet.base.1796" = type <{ %"class.WTF::HashTable.1791", %"class.blink::Member.1793", %"class.blink::Member.1793", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1791" = type <{ %"class.blink::Member.1793"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::HeapListHashSetNode.1795"* }
%"class.blink::HeapListHashSetNode.1795" = type { %"class.blink::Member.1993", %"class.blink::Member.1793", %"class.blink::Member.1793" }
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1797" = type { %"class.WTF::ListHashSet.base.1807", [7 x i8] }
%"class.WTF::ListHashSet.base.1807" = type <{ %"class.WTF::HashTable.1802", %"class.blink::Member.1804", %"class.blink::Member.1804", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1802" = type <{ %"class.blink::Member.1804"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::HeapListHashSetNode.1806"* }
%"class.blink::HeapListHashSetNode.1806" = type { %"class.blink::Member.1989", %"class.blink::Member.1804", %"class.blink::Member.1804" }
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1808" = type { %"class.WTF::ListHashSet.base.1818", [7 x i8] }
%"class.WTF::ListHashSet.base.1818" = type <{ %"class.WTF::HashTable.1813", %"class.blink::Member.1815", %"class.blink::Member.1815", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1813" = type <{ %"class.blink::Member.1815"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1815" = type { %"class.blink::MemberBase.1816" }
%"class.blink::MemberBase.1816" = type { %"class.blink::HeapListHashSetNode.1817"* }
%"class.blink::HeapListHashSetNode.1817" = type { %"class.blink::Member.1985", %"class.blink::Member.1815", %"class.blink::Member.1815" }
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1819" = type { %"class.WTF::ListHashSet.base.1829", [7 x i8] }
%"class.WTF::ListHashSet.base.1829" = type <{ %"class.WTF::HashTable.1824", %"class.blink::Member.1826", %"class.blink::Member.1826", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1824" = type <{ %"class.blink::Member.1826"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::HeapListHashSetNode.1828"* }
%"class.blink::HeapListHashSetNode.1828" = type { %"class.blink::Member.1981", %"class.blink::Member.1826", %"class.blink::Member.1826" }
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1830" = type { %"class.WTF::ListHashSet.base.1840", [7 x i8] }
%"class.WTF::ListHashSet.base.1840" = type <{ %"class.WTF::HashTable.1835", %"class.blink::Member.1837", %"class.blink::Member.1837", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1835" = type <{ %"class.blink::Member.1837"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::HeapListHashSetNode.1839"* }
%"class.blink::HeapListHashSetNode.1839" = type { %"class.blink::Member.1977", %"class.blink::Member.1837", %"class.blink::Member.1837" }
%"class.blink::Member.1977" = type { %"class.blink::MemberBase.1978" }
%"class.blink::MemberBase.1978" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1841" = type { %"class.WTF::ListHashSet.base.1851", [7 x i8] }
%"class.WTF::ListHashSet.base.1851" = type <{ %"class.WTF::HashTable.1846", %"class.blink::Member.1848", %"class.blink::Member.1848", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1846" = type <{ %"class.blink::Member.1848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::HeapListHashSetNode.1850"* }
%"class.blink::HeapListHashSetNode.1850" = type { %"class.blink::Member.1973", %"class.blink::Member.1848", %"class.blink::Member.1848" }
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1852" = type { %"class.WTF::ListHashSet.base.1862", [7 x i8] }
%"class.WTF::ListHashSet.base.1862" = type <{ %"class.WTF::HashTable.1857", %"class.blink::Member.1859", %"class.blink::Member.1859", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1857" = type <{ %"class.blink::Member.1859"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::HeapListHashSetNode.1861"* }
%"class.blink::HeapListHashSetNode.1861" = type { %"class.blink::Member.1883", %"class.blink::Member.1859", %"class.blink::Member.1859" }
%"class.blink::HeapListHashSet.1863" = type { %"class.WTF::ListHashSet.base.1873", [7 x i8] }
%"class.WTF::ListHashSet.base.1873" = type <{ %"class.WTF::HashTable.1868", %"class.blink::Member.1870", %"class.blink::Member.1870", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1868" = type <{ %"class.blink::Member.1870"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1870" = type { %"class.blink::MemberBase.1871" }
%"class.blink::MemberBase.1871" = type { %"class.blink::HeapListHashSetNode.1872"* }
%"class.blink::HeapListHashSetNode.1872" = type { %"class.blink::Member.1875", %"class.blink::Member.1870", %"class.blink::Member.1870" }
%class.scoped_refptr.1874 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1877" = type { %"class.blink::MemberBase.1878" }
%"class.blink::MemberBase.1878" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1887" = type { %"class.blink::MemberBase.1888" }
%"class.blink::MemberBase.1888" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1891" }
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2462" }
%"class.mojo::Remote.2462" = type { %"class.mojo::internal::InterfacePtrState.2463" }
%"class.mojo::internal::InterfacePtrState.2463" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2464" }
%"class.std::__1::unique_ptr.2464" = type { %"class.std::__1::__compressed_pair.2465" }
%"class.std::__1::__compressed_pair.2465" = type { %"struct.std::__1::__compressed_pair_elem.2466" }
%"struct.std::__1::__compressed_pair_elem.2466" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1893" = type { %"class.std::__1::__compressed_pair.1894" }
%"class.std::__1::__compressed_pair.1894" = type { %"struct.std::__1::__compressed_pair_elem.1895" }
%"struct.std::__1::__compressed_pair_elem.1895" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1896, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1896 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.1897", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.1897" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1898" }
%"class.std::__1::vector.1898" = type { %"class.std::__1::__vector_base.1899" }
%"class.std::__1::__vector_base.1899" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1900" }
%"class.std::__1::__compressed_pair.1900" = type { %"struct.std::__1::__compressed_pair_elem.1901" }
%"struct.std::__1::__compressed_pair_elem.1901" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1905, i8, [7 x i8] }>
%class.scoped_refptr.1905 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1906", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1906" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1907" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1907" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1914" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1915" = type { %"class.std::__1::__compressed_pair.1916" }
%"class.std::__1::__compressed_pair.1916" = type { %"struct.std::__1::__compressed_pair_elem.1917" }
%"struct.std::__1::__compressed_pair_elem.1917" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1557" = type { %"class.absl::optional_internal::optional_data.1558" }
%"class.absl::optional_internal::optional_data.1558" = type { %"class.absl::optional_internal::optional_data_base.1559" }
%"class.absl::optional_internal::optional_data_base.1559" = type { %"class.absl::optional_internal::optional_data_dtor_base.1560" }
%"class.absl::optional_internal::optional_data_dtor_base.1560" = type { i8, %union.anon.1561 }
%union.anon.1561 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1921" = type { %"class.std::__1::__compressed_pair.1922" }
%"class.std::__1::__compressed_pair.1922" = type { %"struct.std::__1::__compressed_pair_elem.1923" }
%"struct.std::__1::__compressed_pair_elem.1923" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1927" }
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2472" }
%"class.mojo::AssociatedRemote.2472" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2473" }
%"class.mojo::internal::AssociatedInterfacePtrState.2473" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2474" }
%"class.std::__1::unique_ptr.2474" = type { %"class.std::__1::__compressed_pair.2475" }
%"class.std::__1::__compressed_pair.2475" = type { %"struct.std::__1::__compressed_pair_elem.2476" }
%"struct.std::__1::__compressed_pair_elem.2476" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1929" = type { %"class.blink::Member.1930" }
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2482" }
%"class.mojo::AssociatedRemote.2482" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2483" }
%"class.mojo::internal::AssociatedInterfacePtrState.2483" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2484" }
%"class.std::__1::unique_ptr.2484" = type { %"class.std::__1::__compressed_pair.2485" }
%"class.std::__1::__compressed_pair.2485" = type { %"struct.std::__1::__compressed_pair_elem.2486" }
%"struct.std::__1::__compressed_pair_elem.2486" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1932" }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2492", %"class.blink::Member.1539", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2492" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2493" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.713" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2493" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1934" = type { %"class.blink::Member.1935" }
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2496", %"class.blink::Member.1539", %"class.mojo::AssociatedReceiver.2497" }
%"class.blink::ThreadState::PrefinalizerRegistration.2496" = type { i8 }
%"class.mojo::AssociatedReceiver.2497" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2498" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2498" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1937" }
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2501", %"class.blink::Member.1539", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2501" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1436, %"class.std::__1::unique_ptr.713", %"class.base::WeakPtrFactory.2502" }
%"class.base::WeakPtrFactory.2502" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1939" = type { %"class.blink::Member.1940" }
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2505", %"class.blink::Member.1539", %"class.mojo::AssociatedReceiver.2506" }
%"class.blink::ThreadState::PrefinalizerRegistration.2505" = type { i8 }
%"class.mojo::AssociatedReceiver.2506" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2507" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2507" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1948" = type { %"class.blink::MemberBase.1949" }
%"class.blink::MemberBase.1949" = type { %"class.blink::HeapHashMap.1950"* }
%"class.blink::HeapHashMap.1950" = type opaque
%"class.mojo::StructPtr.1951" = type { %"class.std::__1::unique_ptr.1952" }
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1955", %"class.mojo::InlinedStructPtr.1956" }
%"class.mojo::InlinedStructPtr.1955" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1956" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1960" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.1962" = type { %"class.absl::optional_internal::optional_data.1963" }
%"class.absl::optional_internal::optional_data.1963" = type { %"class.absl::optional_internal::optional_data_base.1964" }
%"class.absl::optional_internal::optional_data_base.1964" = type { %"class.absl::optional_internal::optional_data_dtor_base.1965" }
%"class.absl::optional_internal::optional_data_dtor_base.1965" = type { i8, %union.anon.1966 }
%union.anon.1966 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::HeapVector.2384" = type { %"class.WTF::Vector.2387" }
%"class.WTF::Vector.2387" = type { %"class.WTF::VectorBuffer.2388" }
%"class.WTF::VectorBuffer.2388" = type { %"class.WTF::VectorBufferBase.2389" }
%"class.WTF::VectorBufferBase.2389" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapVector.2391" = type { %"class.WTF::Vector.2394" }
%"class.WTF::Vector.2394" = type { %"class.WTF::VectorBuffer.2395" }
%"class.WTF::VectorBuffer.2395" = type { %"class.WTF::VectorBufferBase.2396" }
%"class.WTF::VectorBufferBase.2396" = type { %"class.blink::touch_adjustment::SubtargetGeometry"*, i32, i32 }
%"class.blink::touch_adjustment::SubtargetGeometry" = type { %"class.blink::Member", %"class.blink::FloatQuad" }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HeapHashMap.2398" = type { %"class.WTF::HashMap.2401" }
%"class.WTF::HashMap.2401" = type { %"class.WTF::HashTable.2402" }
%"class.WTF::HashTable.2402" = type <{ %"struct.WTF::KeyValuePair.2404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2404" = type { %"class.blink::Member", %"class.blink::Member" }
%"class.blink::HeapHashSet.2405" = type { %"class.WTF::HashSet.2408" }
%"class.WTF::HashSet.2408" = type { %"class.WTF::HashTable.2409" }
%"class.WTF::HashTable.2409" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.1398", %"class.blink::Member.2536", %"struct.blink::FramePolicy", %"class.blink::Member.2552", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.2536" = type { %"class.blink::MemberBase.2537" }
%"class.blink::MemberBase.2537" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2538", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2538" = type { %"class.std::__1::__vector_base.2539" }
%"class.std::__1::__vector_base.2539" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2547" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2540", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2540" = type { %"class.std::__1::__vector_base.2541" }
%"class.std::__1::__vector_base.2541" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2542" }
%"class.std::__1::__compressed_pair.2542" = type { %"struct.std::__1::__compressed_pair_elem.2543" }
%"struct.std::__1::__compressed_pair_elem.2543" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2547" = type { %"struct.std::__1::__compressed_pair_elem.2548" }
%"struct.std::__1::__compressed_pair_elem.2548" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.WTF::Vector.2555" = type { %"class.WTF::VectorBuffer.2556" }
%"class.WTF::VectorBuffer.2556" = type { %"class.WTF::VectorBufferBase.2557" }
%"class.WTF::VectorBufferBase.2557" = type { %"class.blink::FloatQuad"*, i32, i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2619 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2619 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::ParkableString" = type { %class.scoped_refptr.2589 }
%class.scoped_refptr.2589 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2590", %"class.WTF::String", %"class.std::__1::unique_ptr.2592" }
%"class.WTF::RefCounted.2590" = type { %"class.base::RefCounted.2591" }
%"class.base::RefCounted.2591" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2592" = type { %"class.std::__1::__compressed_pair.2593" }
%"class.std::__1::__compressed_pair.2593" = type { %"struct.std::__1::__compressed_pair_elem.2594" }
%"struct.std::__1::__compressed_pair_elem.2594" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2595", %"class.std::__1::unique_ptr.2606", %"class.WTF::Vector.2612", i8, i32 }
%"class.std::__1::unique_ptr.2595" = type { %"class.std::__1::__compressed_pair.2596" }
%"class.std::__1::__compressed_pair.2596" = type { %"struct.std::__1::__compressed_pair_elem.2597" }
%"struct.std::__1::__compressed_pair_elem.2597" = type { %"class.WTF::Vector.2598"* }
%"class.WTF::Vector.2598" = type { %"class.WTF::VectorBuffer.2599" }
%"class.WTF::VectorBuffer.2599" = type { %"class.WTF::VectorBufferBase.2600" }
%"class.WTF::VectorBufferBase.2600" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.2606" = type { %"class.std::__1::__compressed_pair.2607" }
%"class.std::__1::__compressed_pair.2607" = type { %"struct.std::__1::__compressed_pair_elem.2608" }
%"struct.std::__1::__compressed_pair_elem.2608" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.2612" = type { %"class.WTF::VectorBuffer.2613" }
%"class.WTF::VectorBuffer.2613" = type { %"class.WTF::VectorBufferBase.2600", [32 x i8] }
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.2412" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.2412" = type { %"class.absl::optional_internal::optional_data.2413" }
%"class.absl::optional_internal::optional_data.2413" = type { %"class.absl::optional_internal::optional_data_base.2414" }
%"class.absl::optional_internal::optional_data_base.2414" = type { %"class.absl::optional_internal::optional_data_dtor_base.2415" }
%"class.absl::optional_internal::optional_data_dtor_base.2415" = type { i8, %union.anon.2416 }
%union.anon.2416 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.2624" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.2635" = type { i8 }

$_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEES4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EES8_NS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv = comdat any

$_ZN3WTF15ConstructTraitsIN5blink16touch_adjustment17SubtargetGeometryENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_ = comdat any

$_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_16touch_adjustment17SubtargetGeometryEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S9_SE_EERS4_RPS3_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_4NodeEEENS_12KeyValuePairIS6_S6_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EESE_EESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_4NodeEEES6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESA_EEEEvPT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.5 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16touch_adjustment17SubtargetGeometryENS_12VectorTraitsIS4_EEEEEEPKcv = private unnamed_addr constant [180 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::touch_adjustment::SubtargetGeometry, WTF::VectorTraits<blink::touch_adjustment::SubtargetGeometry> >]\00", align 1
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.12 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [316 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, blink::Member<blink::Node>, WTF::IdentityExtractor, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_S6_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EESE_EESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [443 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, blink::Member<blink::Node> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<blink::Member<blink::Node> > >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16touch_adjustment24NodeRespondsToTapGestureEPNS_4NodeE(%"class.blink::Node"*) #0 {
  %2 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Node"*)***
  %3 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %3, i64 61
  %5 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Node"* %0) #11
  br i1 %6, label %98, label %7

7:                                                ; preds = %1
  %8 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %2, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %8, i64 60
  %10 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Node"* %0) #11
  br i1 %11, label %98, label %12

12:                                               ; preds = %7
  %13 = icmp eq %"class.blink::Node"* %0, null
  br i1 %13, label %54, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %54

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %21 = bitcast %"class.blink::Node"* %0 to i1 (%"class.blink::Element"*)***
  %22 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %22, i64 104
  %24 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::Element"* nonnull %20) #11
  %26 = load i32, i32* %15, align 8
  br i1 %25, label %27, label %42

27:                                               ; preds = %19
  %28 = and i32 %26, 48
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %98

30:                                               ; preds = %27
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %35 = bitcast %"class.blink::Member"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br i1 %41, label %42, label %98

42:                                               ; preds = %19, %30
  %43 = bitcast %"class.blink::Node"* %0 to %"class.blink::ContainerNode"*
  %44 = and i32 %26, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = tail call zeroext i1 @_ZNK5blink13ContainerNode22HasRestyleFlagInternalENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %43, i32 4) #11
  br i1 %47, label %98, label %48

48:                                               ; preds = %46
  %49 = load i32, i32* %15, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %48
  %53 = tail call zeroext i1 @_ZNK5blink13ContainerNode22HasRestyleFlagInternalENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"* nonnull %43, i32 2) #11
  br i1 %53, label %98, label %54

54:                                               ; preds = %42, %14, %48, %12, %52
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 0
  %59 = and i32 %56, 1
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %58, label %62, label %73

62:                                               ; preds = %54
  br i1 %60, label %69, label %63

63:                                               ; preds = %62
  %64 = bitcast %"class.blink::NodeData"** %61 to %"class.blink::NodeRareData"**
  %65 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %65, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %67, i64 0, i32 2, i32 0
  br label %88

69:                                               ; preds = %62
  %70 = bitcast %"class.blink::NodeData"** %61 to %"class.blink::NodeRenderingData"**
  %71 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %71, i64 0, i32 2, i32 0
  br label %88

73:                                               ; preds = %54
  br i1 %60, label %78, label %74

74:                                               ; preds = %73
  %75 = bitcast %"class.blink::NodeData"** %61 to %"class.blink::NodeRareData"**
  %76 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %76, i64 0, i32 1, i32 0, i32 0
  br label %80

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::NodeData"** %61 to %"class.blink::NodeRenderingData"**
  br label %80

80:                                               ; preds = %78, %74
  %81 = phi %"class.blink::NodeRenderingData"** [ %77, %74 ], [ %79, %78 ]
  %82 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %82, i64 0, i32 1
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %83, align 8
  %85 = icmp eq %"class.blink::LayoutObject"* %84, null
  br i1 %85, label %98, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %84, i64 0, i32 5, i32 0
  br label %88

88:                                               ; preds = %63, %69, %86
  %89 = phi %"class.blink::ComputedStyle"** [ %87, %86 ], [ %68, %63 ], [ %72, %69 ]
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %89, align 8
  %91 = icmp eq %"class.blink::ComputedStyle"* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8
  %96 = and i160 %95, 40564819207303340847896650055680
  %97 = icmp ne i160 %96, 0
  ret i1 %97

98:                                               ; preds = %7, %1, %46, %52, %30, %27, %80, %88
  %99 = phi i1 [ false, %88 ], [ false, %80 ], [ true, %27 ], [ true, %30 ], [ true, %52 ], [ true, %46 ], [ true, %1 ], [ true, %7 ]
  ret i1 %99
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink16touch_adjustment16NodeIsZoomTargetEPNS_4NodeE(%"class.blink::Node"* readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 12
  switch i32 %4, label %12 [
    i32 4, label %32
    i32 8, label %5
  ]

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  %11 = icmp eq %"class.blink::Node"* %10, %0
  br i1 %11, label %32, label %12

12:                                               ; preds = %1, %5
  %13 = and i32 %3, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = and i96 %29, 67108864
  %31 = icmp ne i96 %30, 0
  br label %32

32:                                               ; preds = %1, %5, %22
  %33 = phi i1 [ %31, %22 ], [ false, %5 ], [ false, %1 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16touch_adjustment24ProvidesContextMenuItemsEPNS_4NodeE(%"class.blink::Node"*) #0 {
  %2 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %138, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  tail call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %23) #11
  %24 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #11
  br i1 %24, label %138, label %25

25:                                               ; preds = %19
  %26 = load i32, i32* %2, align 8
  %27 = and i32 %26, 64
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %138

29:                                               ; preds = %25
  %30 = and i32 %26, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %34 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %34, i64 0, i32 1, i32 0, i32 0
  br label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %38

38:                                               ; preds = %32, %36
  %39 = phi %"class.blink::NodeRenderingData"** [ %35, %32 ], [ %37, %36 ]
  %40 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %40, i64 0, i32 1
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = bitcast %"class.blink::LayoutObject"* %42 to i1 (%"class.blink::LayoutObject"*)***
  %44 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %44, i64 21
  %46 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* %42) #11
  br i1 %47, label %138, label %48

48:                                               ; preds = %38
  %49 = load i32, i32* %2, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %54 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %54, i64 0, i32 1, i32 0, i32 0
  br label %58

56:                                               ; preds = %48
  %57 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %58

58:                                               ; preds = %52, %56
  %59 = phi %"class.blink::NodeRenderingData"** [ %55, %52 ], [ %57, %56 ]
  %60 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %60, i64 0, i32 1
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = bitcast %"class.blink::LayoutObject"* %62 to i1 (%"class.blink::LayoutObject"*, i32)***
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, i64 92
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* %62, i32 19) #11
  br i1 %67, label %138, label %68

68:                                               ; preds = %58
  %69 = load i32, i32* %2, align 8
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %74 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %74, i64 0, i32 1, i32 0, i32 0
  br label %78

76:                                               ; preds = %68
  %77 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %78

78:                                               ; preds = %72, %76
  %79 = phi %"class.blink::NodeRenderingData"** [ %75, %72 ], [ %77, %76 ]
  %80 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %80, i64 0, i32 1
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %81, align 8
  %83 = tail call zeroext i1 @_ZNK5blink12LayoutObject18CanBeSelectionLeafEv(%"class.blink::LayoutObject"* %82) #11
  br i1 %83, label %84, label %137

84:                                               ; preds = %78
  %85 = load i32, i32* %2, align 8
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %90 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %90, i64 0, i32 1, i32 0, i32 0
  br label %94

92:                                               ; preds = %84
  %93 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi %"class.blink::NodeRenderingData"** [ %91, %88 ], [ %93, %92 ]
  %96 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %96, i64 0, i32 1
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 6, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %102, label %109

102:                                              ; preds = %94, %102
  %103 = phi %"class.blink::LayoutObject"* [ %105, %102 ], [ %98, %94 ]
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %103, i64 0, i32 7
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %105, i64 0, i32 6, i32 0, i32 0
  %107 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %108 = icmp eq %"class.blink::Node"* %107, null
  br i1 %108, label %102, label %109

109:                                              ; preds = %102, %94
  %110 = phi %"class.blink::Node"* [ %100, %94 ], [ %107, %102 ]
  %111 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %110, i64 0, i32 3, i32 0, i32 0
  %112 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %112, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %113, align 8
  %115 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %114) #11
  %116 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %115, i64 0, i32 13, i32 0, i32 0
  %117 = load %"class.blink::Editor"*, %"class.blink::Editor"** %116, align 8
  %118 = tail call i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"* %117) #11
  %119 = and i32 %118, -5
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %138, label %121

121:                                              ; preds = %109
  %122 = load i32, i32* %2, align 8
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %127 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %127, i64 0, i32 1, i32 0, i32 0
  br label %131

129:                                              ; preds = %121
  %130 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %131

131:                                              ; preds = %125, %129
  %132 = phi %"class.blink::NodeRenderingData"** [ %128, %125 ], [ %130, %129 ]
  %133 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %133, i64 0, i32 1
  %135 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %134, align 8
  %136 = tail call zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"* %135) #11
  br i1 %136, label %138, label %137

137:                                              ; preds = %131, %78
  br label %138

138:                                              ; preds = %25, %131, %109, %58, %38, %19, %13, %137
  %139 = phi i1 [ false, %137 ], [ false, %13 ], [ true, %19 ], [ true, %25 ], [ true, %38 ], [ true, %58 ], [ true, %109 ], [ true, %131 ]
  ret i1 %139
}

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject18CanBeSelectionLeafEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16touch_adjustment20CompileSubtargetListERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEERNS1_INS0_17SubtargetGeometryELj0EEEPFbPS3_EPFvSB_SA_E(%"class.blink::HeapVector.2384"* dereferenceable(16), %"class.blink::HeapVector.2391"* dereferenceable(16), i1 (%"class.blink::Node"*)* nocapture, void (%"class.blink::Node"*, %"class.blink::HeapVector.2391"*)* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.blink::HeapHashMap.2398", align 8
  %6 = alloca %"class.blink::HeapHashSet.2405", align 8
  %7 = alloca %"class.blink::HeapVector.2384", align 8
  %8 = alloca %"class.blink::HeapHashSet.2405", align 8
  %9 = alloca %"class.blink::Node"*, align 8
  %10 = alloca %"class.blink::HeapVector.2384", align 8
  %11 = alloca %"class.blink::Node"*, align 8
  %12 = alloca %"class.blink::Node"*, align 8
  %13 = alloca %"class.blink::Node"*, align 8
  %14 = alloca %"class.blink::Node"*, align 8
  %15 = bitcast %"class.blink::HeapHashMap.2398"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = bitcast %"class.blink::HeapHashMap.2398"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 20, i1 false) #11
  %17 = bitcast %"class.blink::HeapHashSet.2405"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.blink::HeapHashSet.2405", %"class.blink::HeapHashSet.2405"* %6, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::HeapHashSet.2405", %"class.blink::HeapHashSet.2405"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.blink::HeapHashSet.2405"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 20, i1 false) #11
  %21 = bitcast %"class.blink::HeapVector.2384"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #11
  %25 = bitcast %"class.blink::HeapHashSet.2405"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::HeapHashSet.2405", %"class.blink::HeapHashSet.2405"* %8, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::HeapHashSet.2405", %"class.blink::HeapHashSet.2405"* %8, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.blink::HeapHashSet.2405"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 20, i1 false) #11
  %29 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %185, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %0, i64 0, i32 0
  %34 = bitcast %"class.blink::Node"** %9 to i8*
  %35 = bitcast %"class.blink::Node"** %9 to i64*
  %36 = bitcast %"class.blink::HeapVector.2384"* %10 to i8*
  %37 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  %40 = bitcast %"class.blink::Node"** %11 to i8*
  %41 = bitcast %"class.blink::Node"** %12 to i8*
  %42 = bitcast %"class.blink::Node"** %12 to i64*
  %43 = getelementptr inbounds %"class.blink::HeapHashMap.2398", %"class.blink::HeapHashMap.2398"* %5, i64 0, i32 0
  %44 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %10, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::HeapHashSet.2405", %"class.blink::HeapHashSet.2405"* %6, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::HeapHashMap.2398", %"class.blink::HeapHashMap.2398"* %5, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %7, i64 0, i32 0
  br label %59

48:                                               ; preds = %181
  %49 = load i32, i32* %24, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %185, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::HeapVector.2384", %"class.blink::HeapVector.2384"* %7, i64 0, i32 0
  %53 = bitcast %"class.blink::Node"** %13 to i8*
  %54 = bitcast %"class.blink::Node"** %13 to i64*
  %55 = getelementptr inbounds %"class.blink::HeapHashMap.2398", %"class.blink::HeapHashMap.2398"* %5, i64 0, i32 0
  %56 = bitcast %"class.blink::Node"** %14 to i8*
  %57 = bitcast %"class.blink::Node"** %14 to i64*
  %58 = getelementptr inbounds %"class.blink::HeapHashSet.2405", %"class.blink::HeapHashSet.2405"* %8, i64 0, i32 0, i32 0
  br label %186

59:                                               ; preds = %32, %181
  %60 = phi i32 [ 0, %32 ], [ %182, %181 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %9, align 8
  %61 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2387"* %33, i32 %60) #11
  %62 = bitcast %"class.blink::Member"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  store %"class.blink::Node"* null, %"class.blink::Node"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  store i64 %63, i64* %42, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %149, label %65

65:                                               ; preds = %59, %143
  %66 = call %"class.blink::Node"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEES4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EES8_NS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.2401"* nonnull %43, %"class.blink::Node"** nonnull dereferenceable(8) %12)
  store %"class.blink::Node"* %66, %"class.blink::Node"** %11, align 8
  %67 = icmp eq %"class.blink::Node"* %66, null
  br i1 %67, label %68, label %149

68:                                               ; preds = %65
  %69 = load i32, i32* %39, align 4
  %70 = load i32, i32* %38, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %86, label %72, !prof !2

72:                                               ; preds = %68
  %73 = load %"class.blink::Member"*, %"class.blink::Member"** %37, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %73, i64 %74
  %76 = load i64, i64* %42, align 8
  %77 = bitcast %"class.blink::Member"* %75 to i64*
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %72
  %81 = inttoptr i64 %76 to i8*
  %82 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #11
  br label %83

83:                                               ; preds = %80, %72
  %84 = load i32, i32* %39, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %39, align 4
  br label %87

86:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2387"* nonnull %44, %"class.blink::Node"** nonnull dereferenceable(8) %12) #11
  br label %87

87:                                               ; preds = %83, %86
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %89 = call zeroext i1 %2(%"class.blink::Node"* %88) #11
  %90 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  br i1 %89, label %91, label %143

91:                                               ; preds = %87
  store %"class.blink::Node"* %90, %"class.blink::Node"** %11, align 8
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.blink::Node"** %92 to %"class.blink::ContainerNode"**
  %94 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %94, i64 0, i32 0
  %96 = icmp eq %"class.blink::ContainerNode"* %94, null
  br i1 %96, label %97, label %111

97:                                               ; preds = %91
  %98 = icmp eq %"class.blink::Node"* %90, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 3, i32 0, i32 0
  %101 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %101, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::Document"*, %"class.blink::Document"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %103, i64 0, i32 0, i32 0
  %105 = icmp eq %"class.blink::Node"* %104, %90
  br i1 %105, label %106, label %110

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::Node"* %90 to %"class.blink::Document"*
  %108 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %107) #11
  %109 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %108, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %111

110:                                              ; preds = %99, %97
  store %"class.blink::Node"* null, %"class.blink::Node"** %12, align 8
  br label %149

111:                                              ; preds = %91, %106
  %112 = phi %"class.blink::Node"* [ %109, %106 ], [ %95, %91 ]
  store %"class.blink::Node"* %112, %"class.blink::Node"** %12, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %149, label %114

114:                                              ; preds = %111, %140
  %115 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2409"* nonnull %45, %"class.blink::Node"** nonnull dereferenceable(8) %12, %"class.blink::Node"** nonnull dereferenceable(8) %12) #11
  %116 = extractvalue { %"class.blink::Member"*, i8 } %115, 1
  %117 = and i8 %116, 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %149, label %119

119:                                              ; preds = %114
  %120 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %121 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 0, i32 2, i32 0, i32 0
  %122 = bitcast %"class.blink::Node"** %121 to %"class.blink::ContainerNode"**
  %123 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %123, i64 0, i32 0
  %125 = icmp eq %"class.blink::ContainerNode"* %123, null
  br i1 %125, label %126, label %140

126:                                              ; preds = %119
  %127 = icmp eq %"class.blink::Node"* %120, null
  br i1 %127, label %139, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %130, i64 0, i32 2, i32 0, i32 0
  %132 = load %"class.blink::Document"*, %"class.blink::Document"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %132, i64 0, i32 0, i32 0
  %134 = icmp eq %"class.blink::Node"* %133, %120
  br i1 %134, label %135, label %139

135:                                              ; preds = %128
  %136 = bitcast %"class.blink::Node"* %120 to %"class.blink::Document"*
  %137 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* nonnull %136) #11
  %138 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %140

139:                                              ; preds = %128, %126
  store %"class.blink::Node"* null, %"class.blink::Node"** %12, align 8
  br label %149

140:                                              ; preds = %119, %135
  %141 = phi %"class.blink::Node"* [ %138, %135 ], [ %124, %119 ]
  store %"class.blink::Node"* %141, %"class.blink::Node"** %12, align 8
  %142 = icmp eq %"class.blink::Node"* %141, null
  br i1 %142, label %149, label %114

143:                                              ; preds = %87
  %144 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 2, i32 0, i32 0
  %145 = bitcast %"class.blink::Node"** %144 to %"class.blink::ContainerNode"**
  %146 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %146, i64 0, i32 0
  store %"class.blink::Node"* %147, %"class.blink::Node"** %12, align 8
  %148 = icmp eq %"class.blink::ContainerNode"* %146, null
  br i1 %148, label %149, label %65

149:                                              ; preds = %143, %65, %140, %114, %139, %110, %59, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  %150 = load i32, i32* %39, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %155, %149
  %153 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %154 = icmp eq %"class.blink::Node"* %153, null
  br i1 %154, label %181, label %162

155:                                              ; preds = %149, %155
  %156 = phi i32 [ %159, %155 ], [ 0, %149 ]
  %157 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2387"* nonnull %44, i32 %156) #11
  %158 = call { %"struct.WTF::KeyValuePair.2404"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S9_SE_EERS4_RPS3_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.2402"* nonnull %46, %"class.blink::Member"* dereferenceable(8) %157, %"class.blink::Node"** nonnull dereferenceable(8) %11) #11
  %159 = add nuw i32 %156, 1
  %160 = load i32, i32* %39, align 4
  %161 = icmp ult i32 %159, %160
  br i1 %161, label %155, label %152

162:                                              ; preds = %152
  %163 = load i32, i32* %24, align 4
  %164 = load i32, i32* %23, align 8
  %165 = icmp eq i32 %163, %164
  br i1 %165, label %180, label %166, !prof !2

166:                                              ; preds = %162
  %167 = load %"class.blink::Member"*, %"class.blink::Member"** %22, align 8
  %168 = zext i32 %163 to i64
  %169 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %167, i64 %168
  %170 = load i64, i64* %35, align 8
  %171 = bitcast %"class.blink::Member"* %169 to i64*
  store atomic i64 %170, i64* %171 monotonic, align 8
  %172 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %166
  %175 = inttoptr i64 %170 to i8*
  %176 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %175) #11
  br label %177

177:                                              ; preds = %174, %166
  %178 = load i32, i32* %24, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %24, align 4
  br label %181

180:                                              ; preds = %162
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2387"* nonnull %47, %"class.blink::Node"** nonnull dereferenceable(8) %9) #11
  br label %181

181:                                              ; preds = %180, %177, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  %182 = add nuw i32 %60, 1
  %183 = load i32, i32* %29, align 4
  %184 = icmp ult i32 %182, %183
  br i1 %184, label %59, label %48

185:                                              ; preds = %420, %4, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  ret void

186:                                              ; preds = %51, %420
  %187 = phi i32 [ 0, %51 ], [ %421, %420 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %13, align 8
  %188 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2387"* nonnull %52, i32 %187) #11
  %189 = bitcast %"class.blink::Member"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %54, align 8
  %191 = call %"class.blink::Node"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEES4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EES8_NS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.2401"* nonnull %55, %"class.blink::Node"** nonnull dereferenceable(8) %13)
  %192 = ptrtoint %"class.blink::Node"* %191 to i64
  %193 = load %"class.blink::Member"*, %"class.blink::Member"** %18, align 8
  %194 = icmp eq %"class.blink::Member"* %193, null
  br i1 %194, label %255, label %195

195:                                              ; preds = %186
  %196 = load i32, i32* %19, align 8
  %197 = add i32 %196, -1
  %198 = zext i32 %197 to i64
  %199 = shl i64 %192, 32
  %200 = xor i64 %199, -1
  %201 = add i64 %200, %192
  %202 = lshr i64 %201, 22
  %203 = xor i64 %202, %201
  %204 = shl i64 %203, 13
  %205 = xor i64 %204, -1
  %206 = add i64 %203, %205
  %207 = lshr i64 %206, 8
  %208 = xor i64 %207, %206
  %209 = mul i64 %208, 9
  %210 = lshr i64 %209, 15
  %211 = xor i64 %210, %209
  %212 = shl i64 %211, 27
  %213 = xor i64 %212, -1
  %214 = add i64 %211, %213
  %215 = lshr i64 %214, 31
  %216 = xor i64 %215, %214
  %217 = trunc i64 %216 to i32
  %218 = and i32 %197, %217
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %193, i64 %219
  %221 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %220, i64 0, i32 0, i32 0
  %222 = load %"class.blink::Node"*, %"class.blink::Node"** %221, align 8
  %223 = icmp eq %"class.blink::Node"* %222, %191
  br i1 %223, label %252, label %224

224:                                              ; preds = %195
  %225 = xor i32 %217, -1
  %226 = lshr i32 %217, 23
  %227 = add i32 %226, %225
  %228 = shl i32 %227, 12
  %229 = xor i32 %228, %227
  %230 = lshr i32 %229, 7
  %231 = xor i32 %230, %229
  %232 = shl i32 %231, 2
  %233 = xor i32 %232, %231
  %234 = lshr i32 %233, 20
  %235 = xor i32 %234, %233
  %236 = or i32 %235, 1
  %237 = zext i32 %236 to i64
  br label %238

238:                                              ; preds = %243, %224
  %239 = phi %"class.blink::Node"* [ %222, %224 ], [ %250, %243 ]
  %240 = phi i64 [ %219, %224 ], [ %247, %243 ]
  %241 = phi i64 [ 0, %224 ], [ %245, %243 ]
  %242 = icmp eq %"class.blink::Node"* %239, null
  br i1 %242, label %255, label %243

243:                                              ; preds = %238
  %244 = icmp eq i64 %241, 0
  %245 = select i1 %244, i64 %237, i64 %241
  %246 = add i64 %245, %240
  %247 = and i64 %246, %198
  %248 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %193, i64 %247
  %249 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %248, i64 0, i32 0, i32 0
  %250 = load %"class.blink::Node"*, %"class.blink::Node"** %249, align 8
  %251 = icmp eq %"class.blink::Node"* %250, %191
  br i1 %251, label %252, label %238

252:                                              ; preds = %243, %195
  %253 = phi %"class.blink::Member"* [ %220, %195 ], [ %248, %243 ]
  %254 = icmp eq %"class.blink::Member"* %253, null
  br i1 %254, label %255, label %420

255:                                              ; preds = %238, %252, %186
  %256 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %257 = ptrtoint %"class.blink::Node"* %256 to i64
  %258 = load %"class.blink::Member"*, %"class.blink::Member"** %26, align 8
  %259 = icmp eq %"class.blink::Member"* %258, null
  br i1 %259, label %320, label %260

260:                                              ; preds = %255
  %261 = load i32, i32* %27, align 8
  %262 = add i32 %261, -1
  %263 = zext i32 %262 to i64
  %264 = shl i64 %257, 32
  %265 = xor i64 %264, -1
  %266 = add i64 %265, %257
  %267 = lshr i64 %266, 22
  %268 = xor i64 %267, %266
  %269 = shl i64 %268, 13
  %270 = xor i64 %269, -1
  %271 = add i64 %268, %270
  %272 = lshr i64 %271, 8
  %273 = xor i64 %272, %271
  %274 = mul i64 %273, 9
  %275 = lshr i64 %274, 15
  %276 = xor i64 %275, %274
  %277 = shl i64 %276, 27
  %278 = xor i64 %277, -1
  %279 = add i64 %276, %278
  %280 = lshr i64 %279, 31
  %281 = xor i64 %280, %279
  %282 = trunc i64 %281 to i32
  %283 = and i32 %262, %282
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %258, i64 %284
  %286 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %285, i64 0, i32 0, i32 0
  %287 = load %"class.blink::Node"*, %"class.blink::Node"** %286, align 8
  %288 = icmp eq %"class.blink::Node"* %287, %256
  br i1 %288, label %317, label %289

289:                                              ; preds = %260
  %290 = xor i32 %282, -1
  %291 = lshr i32 %282, 23
  %292 = add i32 %291, %290
  %293 = shl i32 %292, 12
  %294 = xor i32 %293, %292
  %295 = lshr i32 %294, 7
  %296 = xor i32 %295, %294
  %297 = shl i32 %296, 2
  %298 = xor i32 %297, %296
  %299 = lshr i32 %298, 20
  %300 = xor i32 %299, %298
  %301 = or i32 %300, 1
  %302 = zext i32 %301 to i64
  br label %303

303:                                              ; preds = %308, %289
  %304 = phi %"class.blink::Node"* [ %287, %289 ], [ %315, %308 ]
  %305 = phi i64 [ %284, %289 ], [ %312, %308 ]
  %306 = phi i64 [ 0, %289 ], [ %310, %308 ]
  %307 = icmp eq %"class.blink::Node"* %304, null
  br i1 %307, label %320, label %308

308:                                              ; preds = %303
  %309 = icmp eq i64 %306, 0
  %310 = select i1 %309, i64 %302, i64 %306
  %311 = add i64 %310, %305
  %312 = and i64 %311, %263
  %313 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %258, i64 %312
  %314 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %313, i64 0, i32 0, i32 0
  %315 = load %"class.blink::Node"*, %"class.blink::Node"** %314, align 8
  %316 = icmp eq %"class.blink::Node"* %315, %256
  br i1 %316, label %317, label %303

317:                                              ; preds = %308, %260
  %318 = phi %"class.blink::Member"* [ %285, %260 ], [ %313, %308 ]
  %319 = icmp eq %"class.blink::Member"* %318, null
  br i1 %319, label %320, label %420

320:                                              ; preds = %303, %317, %255
  %321 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %256, i64 0, i32 3, i32 0, i32 0
  %322 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %322, i64 0, i32 2, i32 0, i32 0
  %324 = load %"class.blink::Document"*, %"class.blink::Document"** %323, align 8
  call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %324) #11
  %325 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %326 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %325) #11
  br i1 %326, label %327, label %414

327:                                              ; preds = %320
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %328 = load i64, i64* %54, align 8
  store i64 %328, i64* %57, align 8
  %329 = inttoptr i64 %328 to %"class.blink::Node"*
  %330 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %329, i64 0, i32 2, i32 0, i32 0
  %331 = bitcast %"class.blink::Node"** %330 to %"class.blink::ContainerNode"**
  %332 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %331, align 8
  %333 = icmp eq %"class.blink::ContainerNode"* %332, null
  br i1 %333, label %411, label %334

334:                                              ; preds = %327, %403
  %335 = phi %"class.blink::ContainerNode"* [ %407, %403 ], [ %332, %327 ]
  %336 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %335, i64 0, i32 0
  %337 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %336) #11
  br i1 %337, label %338, label %409

338:                                              ; preds = %334
  store %"class.blink::Node"* %336, %"class.blink::Node"** %14, align 8
  %339 = ptrtoint %"class.blink::ContainerNode"* %335 to i64
  %340 = load %"class.blink::Member"*, %"class.blink::Member"** %26, align 8
  %341 = icmp eq %"class.blink::Member"* %340, null
  br i1 %341, label %403, label %342

342:                                              ; preds = %338
  %343 = load i32, i32* %27, align 8
  %344 = add i32 %343, -1
  %345 = zext i32 %344 to i64
  %346 = shl i64 %339, 32
  %347 = xor i64 %346, -1
  %348 = add i64 %347, %339
  %349 = lshr i64 %348, 22
  %350 = xor i64 %349, %348
  %351 = shl i64 %350, 13
  %352 = xor i64 %351, -1
  %353 = add i64 %350, %352
  %354 = lshr i64 %353, 8
  %355 = xor i64 %354, %353
  %356 = mul i64 %355, 9
  %357 = lshr i64 %356, 15
  %358 = xor i64 %357, %356
  %359 = shl i64 %358, 27
  %360 = xor i64 %359, -1
  %361 = add i64 %358, %360
  %362 = lshr i64 %361, 31
  %363 = xor i64 %362, %361
  %364 = trunc i64 %363 to i32
  %365 = and i32 %344, %364
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %340, i64 %366
  %368 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %367, i64 0, i32 0, i32 0
  %369 = load %"class.blink::Node"*, %"class.blink::Node"** %368, align 8
  %370 = icmp eq %"class.blink::Node"* %369, %336
  br i1 %370, label %399, label %371

371:                                              ; preds = %342
  %372 = xor i32 %364, -1
  %373 = lshr i32 %364, 23
  %374 = add i32 %373, %372
  %375 = shl i32 %374, 12
  %376 = xor i32 %375, %374
  %377 = lshr i32 %376, 7
  %378 = xor i32 %377, %376
  %379 = shl i32 %378, 2
  %380 = xor i32 %379, %378
  %381 = lshr i32 %380, 20
  %382 = xor i32 %381, %380
  %383 = or i32 %382, 1
  %384 = zext i32 %383 to i64
  br label %385

385:                                              ; preds = %390, %371
  %386 = phi %"class.blink::Node"* [ %369, %371 ], [ %397, %390 ]
  %387 = phi i64 [ %366, %371 ], [ %394, %390 ]
  %388 = phi i64 [ 0, %371 ], [ %392, %390 ]
  %389 = icmp eq %"class.blink::Node"* %386, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %385
  %391 = icmp eq i64 %388, 0
  %392 = select i1 %391, i64 %384, i64 %388
  %393 = add i64 %392, %387
  %394 = and i64 %393, %345
  %395 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %340, i64 %394
  %396 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %395, i64 0, i32 0, i32 0
  %397 = load %"class.blink::Node"*, %"class.blink::Node"** %396, align 8
  %398 = icmp eq %"class.blink::Node"* %397, %336
  br i1 %398, label %399, label %385

399:                                              ; preds = %390, %342
  %400 = phi %"class.blink::Member"* [ %367, %342 ], [ %395, %390 ]
  %401 = icmp eq %"class.blink::Member"* %400, null
  br i1 %401, label %403, label %402

402:                                              ; preds = %399
  store %"class.blink::Node"* null, %"class.blink::Node"** %14, align 8
  br label %411

403:                                              ; preds = %385, %399, %338
  %404 = call { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2409"* nonnull %58, %"class.blink::Node"** nonnull dereferenceable(8) %14, %"class.blink::Node"** nonnull dereferenceable(8) %14) #11
  %405 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %335, i64 0, i32 0, i32 2, i32 0, i32 0
  %406 = bitcast %"class.blink::Node"** %405 to %"class.blink::ContainerNode"**
  %407 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %406, align 8
  %408 = icmp eq %"class.blink::ContainerNode"* %407, null
  br i1 %408, label %409, label %334

409:                                              ; preds = %403, %334
  %410 = load i64, i64* %57, align 8
  br label %411

411:                                              ; preds = %409, %327, %402
  %412 = phi i64 [ %410, %409 ], [ %328, %327 ], [ 0, %402 ]
  store i64 %412, i64* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  %413 = inttoptr i64 %412 to %"class.blink::Node"*
  br label %416

414:                                              ; preds = %320
  %415 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  br label %416

416:                                              ; preds = %414, %411
  %417 = phi %"class.blink::Node"* [ %415, %414 ], [ %413, %411 ]
  %418 = icmp eq %"class.blink::Node"* %417, null
  br i1 %418, label %420, label %419

419:                                              ; preds = %416
  call void %3(%"class.blink::Node"* nonnull %417, %"class.blink::HeapVector.2391"* dereferenceable(16) %1) #11
  br label %420

420:                                              ; preds = %317, %252, %419, %416
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %421 = add nuw i32 %187, 1
  %422 = load i32, i32* %24, align 4
  %423 = icmp ult i32 %421, %422
  br i1 %423, label %186, label %185
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_4NodeEEES4_NS_10MemberHashIS3_EENS_10HashTraitsIS4_EES8_NS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.2401"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  %4 = ptrtoint %"class.blink::Node"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.2401", %"class.WTF::HashMap.2401"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.2404"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.2401", %"class.WTF::HashMap.2401"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %55, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.2404"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.2404"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::Node"*, %"class.blink::Node"** %71, align 8
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi %"class.blink::Node"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %52 ]
  ret %"class.blink::Node"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink16touch_adjustment28ZoomableIntersectionQuotientERKNS_8IntPointERKNS_7IntRectERKNS0_17SubtargetGeometryE(%"class.blink::IntPoint"* nocapture readonly dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40)) local_unnamed_addr #0 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::IntRect"*
  %6 = alloca %"class.blink::IntRect", align 8
  %7 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %12) #11
  %14 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %2, i64 0, i32 1
  %16 = tail call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* %15) #11
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %20 = extractvalue { i64, i64 } %16, 1
  store i64 %20, i64* %19, align 8
  %21 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"* %13, %"class.blink::IntRect"* nonnull dereferenceable(16) %5) #11
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = extractvalue { i64, i64 } %21, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  %27 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %28, %23
  br i1 %31, label %60, label %32

32:                                               ; preds = %3
  %33 = trunc i64 %26 to i32
  %34 = add nsw i32 %33, %23
  %35 = icmp sle i32 %34, %28
  %36 = icmp slt i32 %30, %25
  %37 = or i1 %35, %36
  br i1 %37, label %60, label %38

38:                                               ; preds = %32
  %39 = lshr i64 %26, 32
  %40 = trunc i64 %39 to i32
  %41 = add nsw i32 %40, %25
  %42 = icmp sgt i32 %41, %30
  br i1 %42, label %43, label %60

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::IntRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %45 = bitcast %"class.blink::IntRect"* %6 to i64*
  store i64 %22, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %6, i64 0, i32 1
  %47 = bitcast %"class.blink::IntSize"* %46 to i64*
  store i64 %26, i64* %47, align 8
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %6, %"class.blink::IntRect"* dereferenceable(16) %1) #11
  %48 = shl i64 %26, 32
  %49 = ashr exact i64 %48, 32
  %50 = ashr i64 %26, 32
  %51 = mul nsw i64 %49, %50
  %52 = uitofp i64 %51 to float
  %53 = load i64, i64* %47, align 8
  %54 = shl i64 %53, 32
  %55 = ashr exact i64 %54, 32
  %56 = ashr i64 %53, 32
  %57 = mul nsw i64 %55, %56
  %58 = uitofp i64 %57 to float
  %59 = fdiv float %52, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  br label %60

60:                                               ; preds = %32, %3, %38, %43
  %61 = phi float [ %59, %43 ], [ 0x7FF0000000000000, %38 ], [ 0x7FF0000000000000, %32 ], [ 0x7FF0000000000000, %3 ]
  ret float %61
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink16touch_adjustment22HybridDistanceFunctionERKNS_8IntPointERKNS_7IntRectERKNS0_17SubtargetGeometryE(%"class.blink::IntPoint"* dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40)) #0 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::IntRect"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::IntRect"*
  %8 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %10 = bitcast i64* %9 to i32*
  %11 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %5, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %17) #11
  %19 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %2, i64 0, i32 1
  %21 = tail call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* %20) #11
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %23 = extractvalue { i64, i64 } %21, 0
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %25 = extractvalue { i64, i64 } %21, 1
  store i64 %25, i64* %24, align 8
  %26 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"* %18, %"class.blink::IntRect"* nonnull dereferenceable(16) %7) #11
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %28 = extractvalue { i64, i64 } %26, 0
  store i64 %28, i64* %27, align 8
  %29 = extractvalue { i64, i64 } %26, 1
  store i64 %29, i64* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  %30 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1
  %31 = bitcast %"class.blink::IntSize"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = mul nsw i32 %33, %33
  %37 = mul nsw i32 %35, %35
  %38 = add nuw nsw i32 %37, %36
  %39 = sitofp i32 %38 to float
  %40 = fmul float %39, 2.500000e-01
  %41 = call i64 @_ZNK5blink7IntRect17DifferenceToPointERKNS_8IntPointE(%"class.blink::IntRect"* nonnull %5, %"class.blink::IntPoint"* dereferenceable(8) %0) #11
  %42 = trunc i64 %41 to i32
  %43 = lshr i64 %41, 32
  %44 = trunc i64 %43 to i32
  %45 = mul nsw i32 %42, %42
  %46 = mul nsw i32 %44, %44
  %47 = add nuw nsw i32 %46, %45
  %48 = sitofp i32 %47 to float
  %49 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %10, align 8
  %52 = icmp slt i32 %51, %50
  %53 = select i1 %52, i32 %51, i32 %50
  %54 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* %11, align 4
  %57 = icmp slt i32 %56, %55
  %58 = select i1 %57, i32 %56, i32 %55
  %59 = mul nsw i32 %58, %53
  %60 = icmp sgt i32 %59, 1
  %61 = select i1 %60, i32 %59, i32 1
  %62 = sitofp i32 %61 to float
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %5, %"class.blink::IntRect"* dereferenceable(16) %1) #11
  %63 = load i64, i64* %9, align 8
  %64 = shl i64 %63, 32
  %65 = ashr exact i64 %64, 32
  %66 = ashr i64 %63, 32
  %67 = mul nsw i64 %65, %66
  %68 = uitofp i64 %67 to float
  %69 = insertelement <2 x float> undef, float %48, i32 0
  %70 = insertelement <2 x float> %69, float %68, i32 1
  %71 = insertelement <2 x float> undef, float %40, i32 0
  %72 = insertelement <2 x float> %71, float %62, i32 1
  %73 = fdiv <2 x float> %70, %72
  %74 = extractelement <2 x float> %73, i32 1
  %75 = fsub float 1.000000e+00, %74
  %76 = extractelement <2 x float> %73, i32 0
  %77 = fadd float %76, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret float %77
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN5blink16touch_adjustment18ConvertToRootFrameEPNS_14LocalFrameViewENS_10FloatPointE(%"class.blink::LocalFrameView"*, <2 x float>) local_unnamed_addr #4 {
  %3 = alloca %"class.blink::IntPoint", align 4
  %4 = extractelement <2 x float> %1, i32 0
  %5 = fadd float %4, 5.000000e-01
  %6 = fptosi float %5 to i32
  %7 = extractelement <2 x float> %1, i32 1
  %8 = fadd float %7, 5.000000e-01
  %9 = fptosi float %8 to i32
  %10 = bitcast %"class.blink::IntPoint"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %3, i64 0, i32 0
  store i32 %6, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %3, i64 0, i32 1
  store i32 %9, i32* %12, align 4
  %13 = call i64 @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_8IntPointE(%"class.blink::LocalFrameView"* %0, %"class.blink::IntPoint"* nonnull dereferenceable(8) %3) #11
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = trunc i64 %15 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %17 = sitofp i32 %14 to float
  %18 = sitofp i32 %16 to float
  %19 = insertelement <2 x float> undef, float %17, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  ret <2 x float> %20
}

declare i64 @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_8IntPointE(%"class.blink::LocalFrameView"*, %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink16touch_adjustment17AdjustPointToRectERNS_10FloatPointERKNS_7IntRectE(%"class.blink::FloatPoint"* nocapture dereferenceable(8), %"class.blink::IntRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sitofp i32 %6 to float
  %8 = fcmp olt float %4, %7
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, %6
  %13 = sitofp i32 %12 to float
  %14 = fcmp ogt float %4, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %9, %2
  %16 = phi float [ %7, %2 ], [ %13, %9 ]
  store float %16, float* %3, align 4
  br label %17

17:                                               ; preds = %15, %9
  %18 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %0, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = fcmp olt float %19, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %1, i64 0, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, %21
  %28 = sitofp i32 %27 to float
  %29 = fcmp ogt float %19, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24, %17
  %31 = phi float [ %22, %17 ], [ %28, %24 ]
  store float %31, float* %18, align 4
  br label %32

32:                                               ; preds = %30, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16touch_adjustment6SnapToERKNS0_17SubtargetGeometryERKNS_8IntPointERKNS_7IntRectERS4_(%"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40), %"class.blink::IntPoint"* nocapture readonly dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::IntPoint"* nocapture dereferenceable(8)) local_unnamed_addr #4 {
  %5 = alloca %"class.blink::IntPoint", align 4
  %6 = alloca %"class.blink::IntPoint", align 4
  %7 = alloca %"class.blink::IntPoint", align 4
  %8 = alloca %"class.blink::IntPoint", align 4
  %9 = alloca %"class.blink::FloatQuad", align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.blink::IntRect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %"class.blink::FloatPoint", align 4
  %14 = alloca %"class.blink::FloatPoint", align 4
  %15 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %20) #11
  %22 = bitcast %"class.blink::FloatQuad"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 2, i32 0
  %25 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 3, i32 0
  %26 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %0, i64 0, i32 1
  %27 = bitcast %"class.blink::FloatQuad"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %27, i64 32, i1 false) #11
  %28 = call zeroext i1 @_ZNK5blink9FloatQuad13IsRectilinearEv(%"class.blink::FloatQuad"* nonnull %9) #11
  br i1 %28, label %29, label %88

29:                                               ; preds = %4
  %30 = bitcast { i64, i64 }* %12 to %"class.blink::IntRect"*
  %31 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = bitcast { i64, i64 }* %10 to i32*
  %33 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %11, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %35 = bitcast i64* %34 to i32*
  %36 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %11, i64 0, i32 1, i32 1
  %37 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %38 = call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* %26) #11
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %40 = extractvalue { i64, i64 } %38, 0
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %42 = extractvalue { i64, i64 } %38, 1
  store i64 %42, i64* %41, align 8
  %43 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"* %21, %"class.blink::IntRect"* nonnull dereferenceable(16) %30) #11
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %45 = extractvalue { i64, i64 } %43, 0
  store i64 %45, i64* %44, align 8
  %46 = extractvalue { i64, i64 } %43, 1
  store i64 %46, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  %47 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = trunc i64 %45 to i32
  %52 = icmp slt i32 %48, %51
  %53 = lshr i64 %45, 32
  %54 = trunc i64 %53 to i32
  br i1 %52, label %70, label %55

55:                                               ; preds = %29
  %56 = lshr i64 %46, 32
  %57 = trunc i64 %56 to i32
  %58 = trunc i64 %46 to i32
  %59 = add nsw i32 %58, %51
  %60 = icmp sgt i32 %59, %48
  %61 = icmp sge i32 %50, %54
  %62 = and i1 %61, %60
  %63 = add nsw i32 %57, %54
  %64 = icmp sgt i32 %63, %50
  %65 = and i1 %62, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %68 = bitcast %"class.blink::IntPoint"* %3 to i64*
  %69 = load i64, i64* %67, align 4
  store i64 %69, i64* %68, align 4
  br label %86

70:                                               ; preds = %55, %29
  %71 = call zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"* nonnull %11, %"class.blink::IntRect"* dereferenceable(16) %2) #11
  br i1 %71, label %72, label %86

72:                                               ; preds = %70
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %11, %"class.blink::IntRect"* dereferenceable(16) %2) #11
  %73 = load i32, i32* %32, align 8
  %74 = load i32, i32* %35, align 8
  %75 = sdiv i32 %74, 2
  %76 = add nsw i32 %75, %73
  %77 = load i32, i32* %33, align 4
  %78 = load i32, i32* %36, align 4
  %79 = sdiv i32 %78, 2
  %80 = add nsw i32 %79, %77
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  %83 = zext i32 %76 to i64
  %84 = or i64 %82, %83
  %85 = bitcast %"class.blink::IntPoint"* %3 to i64*
  store i64 %84, i64* %85, align 4
  br label %86

86:                                               ; preds = %70, %72, %66
  %87 = phi i1 [ true, %66 ], [ true, %72 ], [ false, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %263

88:                                               ; preds = %4
  %89 = bitcast %"class.blink::FloatQuad"* %9 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 8
  %91 = extractelement <2 x float> %90, i32 0
  %92 = fadd float %91, 5.000000e-01
  %93 = fptosi float %92 to i32
  %94 = extractelement <2 x float> %90, i32 1
  %95 = fadd float %94, 5.000000e-01
  %96 = fptosi float %95 to i32
  %97 = bitcast %"class.blink::IntPoint"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #11
  %98 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %5, i64 0, i32 0
  store i32 %93, i32* %98, align 4
  %99 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %5, i64 0, i32 1
  store i32 %96, i32* %99, align 4
  %100 = call i64 @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_8IntPointE(%"class.blink::LocalFrameView"* %21, %"class.blink::IntPoint"* nonnull dereferenceable(8) %5) #11
  %101 = trunc i64 %100 to i32
  %102 = lshr i64 %100, 32
  %103 = trunc i64 %102 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #11
  %104 = sitofp i32 %101 to float
  %105 = sitofp i32 %103 to float
  %106 = insertelement <2 x float> undef, float %104, i32 0
  %107 = insertelement <2 x float> %106, float %105, i32 1
  %108 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 1
  %109 = bitcast %"class.blink::FloatPoint"* %108 to <2 x float>*
  %110 = load <2 x float>, <2 x float>* %109, align 8
  %111 = extractelement <2 x float> %110, i32 0
  %112 = fadd float %111, 5.000000e-01
  %113 = fptosi float %112 to i32
  %114 = extractelement <2 x float> %110, i32 1
  %115 = fadd float %114, 5.000000e-01
  %116 = fptosi float %115 to i32
  %117 = bitcast %"class.blink::IntPoint"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  %118 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %6, i64 0, i32 0
  store i32 %113, i32* %118, align 4
  %119 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %6, i64 0, i32 1
  store i32 %116, i32* %119, align 4
  %120 = call i64 @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_8IntPointE(%"class.blink::LocalFrameView"* %21, %"class.blink::IntPoint"* nonnull dereferenceable(8) %6) #11
  %121 = trunc i64 %120 to i32
  %122 = lshr i64 %120, 32
  %123 = trunc i64 %122 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  %124 = sitofp i32 %121 to float
  %125 = sitofp i32 %123 to float
  %126 = insertelement <2 x float> undef, float %124, i32 0
  %127 = insertelement <2 x float> %126, float %125, i32 1
  %128 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 2
  %129 = bitcast %"class.blink::FloatPoint"* %128 to <2 x float>*
  %130 = load <2 x float>, <2 x float>* %129, align 8
  %131 = extractelement <2 x float> %130, i32 0
  %132 = fadd float %131, 5.000000e-01
  %133 = fptosi float %132 to i32
  %134 = extractelement <2 x float> %130, i32 1
  %135 = fadd float %134, 5.000000e-01
  %136 = fptosi float %135 to i32
  %137 = bitcast %"class.blink::IntPoint"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %7, i64 0, i32 0
  store i32 %133, i32* %138, align 4
  %139 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %7, i64 0, i32 1
  store i32 %136, i32* %139, align 4
  %140 = call i64 @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_8IntPointE(%"class.blink::LocalFrameView"* %21, %"class.blink::IntPoint"* nonnull dereferenceable(8) %7) #11
  %141 = trunc i64 %140 to i32
  %142 = lshr i64 %140, 32
  %143 = trunc i64 %142 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #11
  %144 = sitofp i32 %141 to float
  %145 = sitofp i32 %143 to float
  %146 = insertelement <2 x float> undef, float %144, i32 0
  %147 = insertelement <2 x float> %146, float %145, i32 1
  %148 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %9, i64 0, i32 3
  %149 = bitcast %"class.blink::FloatPoint"* %148 to <2 x float>*
  %150 = load <2 x float>, <2 x float>* %149, align 8
  %151 = extractelement <2 x float> %150, i32 0
  %152 = fadd float %151, 5.000000e-01
  %153 = fptosi float %152 to i32
  %154 = extractelement <2 x float> %150, i32 1
  %155 = fadd float %154, 5.000000e-01
  %156 = fptosi float %155 to i32
  %157 = bitcast %"class.blink::IntPoint"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %8, i64 0, i32 0
  store i32 %153, i32* %158, align 4
  %159 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %8, i64 0, i32 1
  store i32 %156, i32* %159, align 4
  %160 = call i64 @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_8IntPointE(%"class.blink::LocalFrameView"* %21, %"class.blink::IntPoint"* nonnull dereferenceable(8) %8) #11
  %161 = trunc i64 %160 to i32
  %162 = lshr i64 %160, 32
  %163 = trunc i64 %162 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #11
  %164 = sitofp i32 %161 to float
  %165 = sitofp i32 %163 to float
  %166 = insertelement <2 x float> undef, float %164, i32 0
  %167 = insertelement <2 x float> %166, float %165, i32 1
  store <2 x float> %107, <2 x float>* %89, align 8
  store <2 x float> %127, <2 x float>* %109, align 8
  store <2 x float> %147, <2 x float>* %129, align 8
  store <2 x float> %167, <2 x float>* %149, align 8
  %168 = bitcast %"class.blink::FloatPoint"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #11
  %169 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 0
  %170 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = sitofp i32 %171 to float
  store float %172, float* %169, align 4
  %173 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 1
  %174 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %175 = load i32, i32* %174, align 4
  %176 = sitofp i32 %175 to float
  store float %176, float* %173, align 4
  %177 = call zeroext i1 @_ZNK5blink9FloatQuad13ContainsPointERKNS_10FloatPointE(%"class.blink::FloatQuad"* nonnull %9, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #11
  br i1 %177, label %178, label %182

178:                                              ; preds = %88
  %179 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %180 = bitcast %"class.blink::IntPoint"* %3 to i64*
  %181 = load i64, i64* %179, align 4
  store i64 %181, i64* %180, align 4
  br label %263

182:                                              ; preds = %88
  %183 = bitcast %"class.blink::FloatQuad"* %9 to <2 x float>*
  %184 = load <2 x float>, <2 x float>* %183, align 8
  %185 = bitcast float* %23 to <2 x float>*
  %186 = load <2 x float>, <2 x float>* %185, align 8
  %187 = fadd <2 x float> %184, %186
  %188 = bitcast float* %24 to <2 x float>*
  %189 = load <2 x float>, <2 x float>* %188, align 8
  %190 = fadd <2 x float> %187, %189
  %191 = bitcast float* %25 to <2 x float>*
  %192 = load <2 x float>, <2 x float>* %191, align 8
  %193 = fadd <2 x float> %190, %192
  %194 = fmul <2 x float> %193, <float 2.500000e-01, float 2.500000e-01>
  %195 = extractelement <2 x float> %194, i32 0
  %196 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = sitofp i32 %197 to float
  %199 = fcmp olt float %195, %198
  br i1 %199, label %200, label %202

200:                                              ; preds = %182
  %201 = insertelement <2 x float> %194, float %198, i32 0
  br label %210

202:                                              ; preds = %182
  %203 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = add nsw i32 %204, %197
  %206 = sitofp i32 %205 to float
  %207 = fcmp ogt float %195, %206
  br i1 %207, label %208, label %210

208:                                              ; preds = %202
  %209 = insertelement <2 x float> %194, float %206, i32 0
  br label %210

210:                                              ; preds = %208, %202, %200
  %211 = phi <2 x float> [ %201, %200 ], [ %209, %208 ], [ %194, %202 ]
  %212 = extractelement <2 x float> %211, i32 1
  %213 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = sitofp i32 %214 to float
  %216 = fcmp olt float %212, %215
  br i1 %216, label %217, label %219

217:                                              ; preds = %210
  %218 = insertelement <2 x float> %211, float %215, i32 1
  br label %227

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = add nsw i32 %221, %214
  %223 = sitofp i32 %222 to float
  %224 = fcmp ogt float %212, %223
  br i1 %224, label %225, label %227

225:                                              ; preds = %219
  %226 = insertelement <2 x float> %211, float %223, i32 1
  br label %227

227:                                              ; preds = %217, %219, %225
  %228 = phi <2 x float> [ %218, %217 ], [ %226, %225 ], [ %211, %219 ]
  %229 = extractelement <2 x float> %228, i32 0
  %230 = call float @llvm.round.f32(float %229) #11
  %231 = fpext float %230 to double
  %232 = fcmp ult double %231, 0x41DFFFFFFFC00000
  br i1 %232, label %233, label %238

233:                                              ; preds = %227
  %234 = fcmp ugt float %230, 0xC1E0000000000000
  br i1 %234, label %235, label %238

235:                                              ; preds = %233
  %236 = fptosi float %230 to i32
  %237 = zext i32 %236 to i64
  br label %238

238:                                              ; preds = %235, %233, %227
  %239 = phi i64 [ %237, %235 ], [ 2147483647, %227 ], [ 2147483648, %233 ]
  %240 = extractelement <2 x float> %228, i32 1
  %241 = call float @llvm.round.f32(float %240) #11
  %242 = fpext float %241 to double
  %243 = fcmp ult double %242, 0x41DFFFFFFFC00000
  br i1 %243, label %244, label %250

244:                                              ; preds = %238
  %245 = fcmp ugt float %241, 0xC1E0000000000000
  br i1 %245, label %246, label %250

246:                                              ; preds = %244
  %247 = fptosi float %241 to i32
  %248 = zext i32 %247 to i64
  %249 = shl nuw i64 %248, 32
  br label %250

250:                                              ; preds = %238, %244, %246
  %251 = phi i64 [ %249, %246 ], [ 9223372032559808512, %238 ], [ -9223372036854775808, %244 ]
  %252 = or i64 %251, %239
  %253 = bitcast %"class.blink::IntPoint"* %3 to i64*
  store i64 %252, i64* %253, align 4
  %254 = bitcast %"class.blink::FloatPoint"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #11
  %255 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %14, i64 0, i32 0
  %256 = trunc i64 %239 to i32
  %257 = sitofp i32 %256 to float
  store float %257, float* %255, align 4
  %258 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %14, i64 0, i32 1
  %259 = lshr exact i64 %251, 32
  %260 = trunc i64 %259 to i32
  %261 = sitofp i32 %260 to float
  store float %261, float* %258, align 4
  %262 = call zeroext i1 @_ZNK5blink9FloatQuad13ContainsPointERKNS_10FloatPointE(%"class.blink::FloatQuad"* nonnull %9, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #11
  br label %263

263:                                              ; preds = %178, %250, %86
  %264 = phi i1 [ %87, %86 ], [ true, %178 ], [ %262, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #11
  ret i1 %264
}

declare zeroext i1 @_ZNK5blink9FloatQuad13IsRectilinearEv(%"class.blink::FloatQuad"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink7IntRect10IntersectsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9FloatQuad13ContainsPointERKNS_10FloatPointE(%"class.blink::FloatQuad"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16touch_adjustment32FindNodeWithLowestDistanceMetricERPNS_4NodeERNS_8IntPointERNS_7IntRectERKS4_RKS6_RNS_10HeapVectorINS0_17SubtargetGeometryELj0EEEPFfS9_SB_RKSD_E(%"class.blink::Node"** nocapture dereferenceable(8), %"class.blink::IntPoint"* nocapture dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::IntPoint"* dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::HeapVector.2391"* nocapture readonly dereferenceable(16), float (%"class.blink::IntPoint"*, %"class.blink::IntRect"*, %"class.blink::touch_adjustment::SubtargetGeometry"*)* nocapture) local_unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::IntPoint"*
  store %"class.blink::Node"* null, %"class.blink::Node"** %0, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %11, i64 %14
  %16 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = bitcast i64* %8 to i32*
  %18 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %9, i64 0, i32 1
  store i32 0, i32* %17, align 8
  store i32 0, i32* %18, align 4
  %19 = icmp eq i32 %13, 0
  br i1 %19, label %91, label %20

20:                                               ; preds = %7
  %21 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %22 = bitcast %"class.blink::IntRect"* %2 to i64*
  %23 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1
  %24 = bitcast %"class.blink::IntSize"* %23 to i64*
  br label %25

25:                                               ; preds = %20, %54
  %26 = phi float [ 0x7FF0000000000000, %20 ], [ %55, %54 ]
  %27 = phi %"class.blink::touch_adjustment::SubtargetGeometry"* [ %11, %20 ], [ %56, %54 ]
  %28 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = tail call float %6(%"class.blink::IntPoint"* dereferenceable(8) %3, %"class.blink::IntRect"* dereferenceable(16) %4, %"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40) %27) #11
  %31 = fcmp olt float %30, %26
  br i1 %31, label %32, label %40

32:                                               ; preds = %25
  %33 = call zeroext i1 @_ZN5blink16touch_adjustment6SnapToERKNS0_17SubtargetGeometryERKNS_8IntPointERKNS_7IntRectERS4_(%"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40) %27, %"class.blink::IntPoint"* dereferenceable(8) %3, %"class.blink::IntRect"* dereferenceable(16) %4, %"class.blink::IntPoint"* nonnull dereferenceable(8) %9)
  br i1 %33, label %34, label %54

34:                                               ; preds = %32
  %35 = load i64, i64* %8, align 8
  store i64 %35, i64* %21, align 4
  %36 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %27, i64 0, i32 1
  %37 = tail call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* %36) #11
  %38 = extractvalue { i64, i64 } %37, 0
  %39 = extractvalue { i64, i64 } %37, 1
  store i64 %38, i64* %22, align 4
  store i64 %39, i64* %24, align 4
  store %"class.blink::Node"* %29, %"class.blink::Node"** %0, align 8
  br label %54

40:                                               ; preds = %25
  %41 = fsub float %30, %26
  %42 = fcmp olt float %41, 0x3EB0C6F7A0000000
  br i1 %42, label %43, label %54

43:                                               ; preds = %40
  %44 = call zeroext i1 @_ZN5blink16touch_adjustment6SnapToERKNS0_17SubtargetGeometryERKNS_8IntPointERKNS_7IntRectERS4_(%"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40) %27, %"class.blink::IntPoint"* dereferenceable(8) %3, %"class.blink::IntRect"* dereferenceable(16) %4, %"class.blink::IntPoint"* nonnull dereferenceable(8) %9)
  br i1 %44, label %45, label %54

45:                                               ; preds = %43
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %0, align 8
  %47 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %29, %"class.blink::Node"* %46) #11
  br i1 %47, label %48, label %54

48:                                               ; preds = %45
  %49 = load i64, i64* %8, align 8
  store i64 %49, i64* %21, align 4
  store %"class.blink::Node"* %29, %"class.blink::Node"** %0, align 8
  %50 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %27, i64 0, i32 1
  %51 = tail call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* %50) #11
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = extractvalue { i64, i64 } %51, 1
  store i64 %52, i64* %22, align 4
  store i64 %53, i64* %24, align 4
  br label %54

54:                                               ; preds = %40, %45, %48, %43, %32, %34
  %55 = phi float [ %30, %34 ], [ %26, %32 ], [ %26, %48 ], [ %26, %45 ], [ %26, %43 ], [ %26, %40 ]
  %56 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %27, i64 1
  %57 = icmp eq %"class.blink::touch_adjustment::SubtargetGeometry"* %56, %15
  br i1 %57, label %58, label %25

58:                                               ; preds = %54
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %0, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %91, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.blink::Node"* %59 to i8 (%"class.blink::Node"*)***
  %63 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %62, align 8
  %64 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %63, i64 34
  %65 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %64, align 8
  %66 = tail call zeroext i8 %65(%"class.blink::Node"* nonnull %59) #11
  %67 = icmp eq i8 %66, 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %0, align 8
  br i1 %67, label %74, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 2, i32 0, i32 0
  %71 = bitcast %"class.blink::Node"** %70 to %"class.blink::ContainerNode"**
  %72 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %72, i64 0, i32 0
  store %"class.blink::Node"* %73, %"class.blink::Node"** %0, align 8
  br label %74

74:                                               ; preds = %61, %69
  %75 = phi %"class.blink::Node"* [ %73, %69 ], [ %68, %61 ]
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %91, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  %82 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %81) #11
  %83 = tail call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"* %82, %"class.blink::IntRect"* dereferenceable(16) %2) #11
  %84 = extractvalue { i64, i64 } %83, 0
  %85 = extractvalue { i64, i64 } %83, 1
  %86 = bitcast %"class.blink::IntRect"* %2 to i64*
  store i64 %84, i64* %86, align 4
  %87 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %2, i64 0, i32 1
  %88 = bitcast %"class.blink::IntSize"* %87 to i64*
  store i64 %85, i64* %88, align 4
  %89 = load %"class.blink::Node"*, %"class.blink::Node"** %0, align 8
  %90 = icmp ne %"class.blink::Node"* %89, null
  br label %91

91:                                               ; preds = %7, %58, %74, %77
  %92 = phi i1 [ false, %58 ], [ false, %74 ], [ %90, %77 ], [ false, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  ret i1 %92
}

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26FindBestClickableCandidateERPNS_4NodeERNS_8IntPointERKS3_RKNS_7IntRectERKNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::Node"** nocapture dereferenceable(8), %"class.blink::IntPoint"* nocapture dereferenceable(8), %"class.blink::IntPoint"* dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::HeapVector.2384"* dereferenceable(16)) local_unnamed_addr #0 {
  %6 = alloca %"class.blink::IntRect", align 4
  %7 = alloca %"class.blink::HeapVector.2391", align 8
  %8 = bitcast %"class.blink::IntRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 0, i64 16, i1 false) #11
  %9 = bitcast %"class.blink::HeapVector.2391"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11
  call void @_ZN5blink16touch_adjustment20CompileSubtargetListERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEERNS1_INS0_17SubtargetGeometryELj0EEEPFbPS3_EPFvSB_SA_E(%"class.blink::HeapVector.2384"* dereferenceable(16) %4, %"class.blink::HeapVector.2391"* nonnull dereferenceable(16) %7, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16touch_adjustment24NodeRespondsToTapGestureEPNS_4NodeE, void (%"class.blink::Node"*, %"class.blink::HeapVector.2391"*)* nonnull @_ZN5blink16touch_adjustmentL28AppendBasicSubtargetsForNodeEPNS_4NodeERNS_10HeapVectorINS0_17SubtargetGeometryELj0EEE)
  %10 = call zeroext i1 @_ZN5blink16touch_adjustment32FindNodeWithLowestDistanceMetricERPNS_4NodeERNS_8IntPointERNS_7IntRectERKS4_RKS6_RNS_10HeapVectorINS0_17SubtargetGeometryELj0EEEPFfS9_SB_RKSD_E(%"class.blink::Node"** dereferenceable(8) %0, %"class.blink::IntPoint"* dereferenceable(8) %1, %"class.blink::IntRect"* nonnull dereferenceable(16) %6, %"class.blink::IntPoint"* dereferenceable(8) %2, %"class.blink::IntRect"* dereferenceable(16) %3, %"class.blink::HeapVector.2391"* nonnull dereferenceable(16) %7, float (%"class.blink::IntPoint"*, %"class.blink::IntRect"*, %"class.blink::touch_adjustment::SubtargetGeometry"*)* nonnull @_ZN5blink16touch_adjustment22HybridDistanceFunctionERKNS_8IntPointERKNS_7IntRectERKNS0_17SubtargetGeometryE)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret i1 %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink16touch_adjustmentL28AppendBasicSubtargetsForNodeEPNS_4NodeERNS_10HeapVectorINS0_17SubtargetGeometryELj0EEE(%"class.blink::Node"*, %"class.blink::HeapVector.2391"* dereferenceable(16)) #6 {
  %3 = alloca %"class.blink::touch_adjustment::SubtargetGeometry", align 8
  %4 = alloca %"class.WTF::Vector.2555", align 8
  %5 = bitcast %"class.WTF::Vector.2555"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.2555", %"class.WTF::Vector.2555"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.2555", %"class.WTF::Vector.2555"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %11, label %17, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRareData"**
  %15 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %15, i64 0, i32 1, i32 0, i32 0
  br label %19

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::NodeData"** %12 to %"class.blink::NodeRenderingData"**
  br label %19

19:                                               ; preds = %13, %17
  %20 = phi %"class.blink::NodeRenderingData"** [ %16, %13 ], [ %18, %17 ]
  %21 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %21, i64 0, i32 1
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = bitcast %"class.blink::LayoutObject"* %23 to void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)***
  %25 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)** %25, i64 67
  %27 = load void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.2555"*, i32)** %26, align 8
  call void %27(%"class.blink::LayoutObject"* %23, %"class.WTF::Vector.2555"* nonnull dereferenceable(16) %4, i32 0) #11
  %28 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %29 = load i32, i32* %7, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %28, i64 %30
  %32 = icmp eq i32 %29, 0
  br i1 %32, label %100, label %33

33:                                               ; preds = %19
  %34 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %3 to i8*
  %35 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %3, i64 0, i32 1
  %37 = bitcast %"class.blink::FloatQuad"* %36 to i8*
  %38 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0
  %42 = ptrtoint %"class.blink::Node"* %0 to i64
  br label %43

43:                                               ; preds = %95, %33
  %44 = phi %"class.blink::FloatQuad"* [ %28, %33 ], [ %96, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %34) #11
  store %"class.blink::Node"* %0, %"class.blink::Node"** %35, align 8
  %45 = bitcast %"class.blink::FloatQuad"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %45, i64 32, i1 false) #11
  %46 = load i32, i32* %38, align 4
  %47 = load i32, i32* %39, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %94, label %49, !prof !2

49:                                               ; preds = %43
  %50 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %40, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %50, i64 %51
  %53 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %52 to i64*
  store i64 %42, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %50, i64 %51, i32 1
  %55 = bitcast %"class.blink::FloatQuad"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %37, i64 32, i1 false) #11
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %91, label %58

58:                                               ; preds = %49
  %59 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %60 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %59, i64 0, i32 1
  %61 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %60) #11
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %65, !prof !2

63:                                               ; preds = %58
  %64 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %60, i8* %64) #11
  br label %65

65:                                               ; preds = %63, %58
  %66 = phi i8* [ %64, %63 ], [ %61, %58 ]
  %67 = bitcast i8* %66 to %"class.blink::ThreadState"**
  %68 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 9
  %70 = load i8, i8* %69, align 1, !range !3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 13
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %73, align 8
  %76 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %68, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %76, align 8
  %78 = load atomic i64, i64* %53 monotonic, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %77, i64 0, i32 0, i32 0
  %82 = inttoptr i64 %78 to i8*
  %83 = bitcast %"class.blink::MarkingVisitor"* %77 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %84 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %84, i64 5
  %86 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %85, align 8
  call void %86(%"class.blink::Visitor"* %81, i8* nonnull %82, i8* %82, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %87 = load i64, i64* %73, align 8
  br label %88

88:                                               ; preds = %80, %72
  %89 = phi i64 [ %75, %72 ], [ %87, %80 ]
  %90 = add i64 %89, -1
  store i64 %90, i64* %73, align 8
  br label %91

91:                                               ; preds = %49, %65, %88
  %92 = load i32, i32* %38, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %38, align 4
  br label %95

94:                                               ; preds = %43
  call void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2394"* %41, %"class.blink::touch_adjustment::SubtargetGeometry"* nonnull dereferenceable(40) %3) #11
  br label %95

95:                                               ; preds = %94, %91
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %34) #11
  %96 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %44, i64 1
  %97 = icmp eq %"class.blink::FloatQuad"* %96, %31
  br i1 %97, label %98, label %43

98:                                               ; preds = %95
  %99 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  br label %100

100:                                              ; preds = %98, %19
  %101 = phi %"class.blink::FloatQuad"* [ %99, %98 ], [ %28, %19 ]
  %102 = icmp eq %"class.blink::FloatQuad"* %101, null
  %103 = bitcast %"class.blink::FloatQuad"* %101 to i8*
  br i1 %102, label %109, label %104, !prof !4

104:                                              ; preds = %100
  %105 = load i32, i32* %7, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %108, label %107, !prof !2

107:                                              ; preds = %104
  store i32 0, i32* %7, align 4
  br label %108

108:                                              ; preds = %107, %104
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %103) #11
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %6, align 8
  br label %109

109:                                              ; preds = %100, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink28FindBestContextMenuCandidateERPNS_4NodeERNS_8IntPointERKS3_RKNS_7IntRectERKNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::Node"** nocapture dereferenceable(8), %"class.blink::IntPoint"* nocapture dereferenceable(8), %"class.blink::IntPoint"* dereferenceable(8), %"class.blink::IntRect"* dereferenceable(16), %"class.blink::HeapVector.2384"* dereferenceable(16)) local_unnamed_addr #0 {
  %6 = alloca %"class.blink::IntRect", align 4
  %7 = alloca %"class.blink::HeapVector.2391", align 8
  %8 = bitcast %"class.blink::IntRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 0, i64 16, i1 false) #11
  %9 = bitcast %"class.blink::HeapVector.2391"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #11
  call void @_ZN5blink16touch_adjustment20CompileSubtargetListERKNS_10HeapVectorINS_6MemberINS_4NodeEEELj0EEERNS1_INS0_17SubtargetGeometryELj0EEEPFbPS3_EPFvSB_SA_E(%"class.blink::HeapVector.2384"* dereferenceable(16) %4, %"class.blink::HeapVector.2391"* nonnull dereferenceable(16) %7, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink16touch_adjustment24ProvidesContextMenuItemsEPNS_4NodeE, void (%"class.blink::Node"*, %"class.blink::HeapVector.2391"*)* nonnull @_ZN5blink16touch_adjustmentL30AppendContextSubtargetsForNodeEPNS_4NodeERNS_10HeapVectorINS0_17SubtargetGeometryELj0EEE)
  %10 = call zeroext i1 @_ZN5blink16touch_adjustment32FindNodeWithLowestDistanceMetricERPNS_4NodeERNS_8IntPointERNS_7IntRectERKS4_RKS6_RNS_10HeapVectorINS0_17SubtargetGeometryELj0EEEPFfS9_SB_RKSD_E(%"class.blink::Node"** dereferenceable(8) %0, %"class.blink::IntPoint"* dereferenceable(8) %1, %"class.blink::IntRect"* nonnull dereferenceable(16) %6, %"class.blink::IntPoint"* dereferenceable(8) %2, %"class.blink::IntRect"* dereferenceable(16) %3, %"class.blink::HeapVector.2391"* nonnull dereferenceable(16) %7, float (%"class.blink::IntPoint"*, %"class.blink::IntRect"*, %"class.blink::touch_adjustment::SubtargetGeometry"*)* nonnull @_ZN5blink16touch_adjustment22HybridDistanceFunctionERKNS_8IntPointERKNS_7IntRectERKNS0_17SubtargetGeometryE)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret i1 %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink16touch_adjustmentL30AppendContextSubtargetsForNodeEPNS_4NodeERNS_10HeapVectorINS0_17SubtargetGeometryELj0EEE(%"class.blink::Node"*, %"class.blink::HeapVector.2391"* dereferenceable(16)) #6 {
  %3 = alloca %"class.blink::touch_adjustment::SubtargetGeometry", align 8
  %4 = alloca %"class.blink::touch_adjustment::SubtargetGeometry", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::Vector.2555", align 8
  %7 = alloca %"class.WTF::Vector.2555", align 8
  %8 = icmp eq %"class.blink::Node"* %0, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %15, label %14

14:                                               ; preds = %9, %2
  tail call void @_ZN5blink16touch_adjustmentL28AppendBasicSubtargetsForNodeEPNS_4NodeERNS_10HeapVectorINS0_17SubtargetGeometryELj0EEE(%"class.blink::Node"* %0, %"class.blink::HeapVector.2391"* dereferenceable(16) %1)
  br label %353

15:                                               ; preds = %9
  %16 = and i32 %11, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %15
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = bitcast %"class.blink::LayoutObject"** %28 to %"class.blink::LayoutText"**
  %30 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %30, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %30, i64 0, i32 0, i32 6, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %25, %35
  %36 = phi %"class.blink::LayoutObject"* [ %38, %35 ], [ %31, %25 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 6, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %35, label %42

42:                                               ; preds = %35, %25
  %43 = phi %"class.blink::Node"* [ %33, %25 ], [ %40, %35 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %47) #11
  %49 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 13, i32 0, i32 0
  %50 = load %"class.blink::Editor"*, %"class.blink::Editor"** %49, align 8
  %51 = tail call i32 @_ZNK5blink6Editor8BehaviorEv(%"class.blink::Editor"* %50) #11
  %52 = and i32 %51, -5
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %224

54:                                               ; preds = %42
  %55 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %58 = bitcast %"class.blink::Node"* %57 to i8*
  %59 = load i8, i8* %58, align 8, !range !3
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %63 = bitcast %"class.blink::TraceWrapperV8Reference"* %62 to %"class.blink::ParkableString"*
  %64 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %63) #11
  br label %68

65:                                               ; preds = %54
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 1
  %67 = bitcast i32* %66 to %"class.WTF::String"*
  br label %68

68:                                               ; preds = %61, %65
  %69 = phi %"class.WTF::String"* [ %64, %61 ], [ %67, %65 ]
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %56, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %96, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #11
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %73, %88
  %93 = phi %"class.WTF::StringImpl"* [ %90, %88 ], [ %71, %73 ]
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %95 = load i32, i32* %94, align 4
  br label %96

96:                                               ; preds = %68, %88, %92
  %97 = phi i32 [ %95, %92 ], [ 0, %88 ], [ 0, %68 ]
  %98 = call %"class.icu_69::BreakIterator"* @_ZN5blink17WordBreakIteratorERKN3WTF6StringEii(%"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0, i32 %97) #11
  %99 = bitcast %"class.icu_69::BreakIterator"* %98 to i32 (%"class.icu_69::BreakIterator"*)***
  %100 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %99, align 8
  %101 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %100, i64 10
  %102 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %101, align 8
  %103 = call i32 %102(%"class.icu_69::BreakIterator"* %98) #11
  %104 = icmp eq i32 %103, -1
  br i1 %104, label %336, label %105

105:                                              ; preds = %96
  %106 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %99, align 8
  %107 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %106, i64 13
  %108 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %107, align 8
  %109 = call i32 %108(%"class.icu_69::BreakIterator"* %98) #11
  %110 = icmp eq i32 %109, -1
  br i1 %110, label %207, label %111

111:                                              ; preds = %105
  %112 = bitcast %"class.WTF::Vector.2555"* %6 to i8*
  %113 = getelementptr inbounds %"class.WTF::Vector.2555", %"class.WTF::Vector.2555"* %6, i64 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.WTF::Vector.2555", %"class.WTF::Vector.2555"* %6, i64 0, i32 0, i32 0, i32 2
  %115 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %3 to i8*
  %116 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %3, i64 0, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %3, i64 0, i32 1
  %118 = bitcast %"class.blink::FloatQuad"* %117 to i8*
  %119 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %120 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0
  %123 = ptrtoint %"class.blink::Node"* %0 to i64
  br label %124

124:                                              ; preds = %111, %201
  %125 = phi i32 [ %109, %111 ], [ %205, %201 ]
  %126 = phi i32 [ %103, %111 ], [ %125, %201 ]
  %127 = call zeroext i1 @_ZN5blink15IsWordTextBreakEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* %98) #11
  br i1 %127, label %128, label %201

128:                                              ; preds = %124
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 0, i64 16, i1 false) #11
  call void @_ZNK5blink10LayoutText21AbsoluteQuadsForRangeERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjj(%"class.blink::LayoutText"* %30, %"class.WTF::Vector.2555"* nonnull dereferenceable(16) %6, i32 %126, i32 %125) #11
  %129 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %113, align 8
  %130 = load i32, i32* %114, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %129, i64 %131
  %133 = icmp eq i32 %130, 0
  br i1 %133, label %191, label %134

134:                                              ; preds = %128, %186
  %135 = phi %"class.blink::FloatQuad"* [ %187, %186 ], [ %129, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %115) #11
  store %"class.blink::Node"* %0, %"class.blink::Node"** %116, align 8
  %136 = bitcast %"class.blink::FloatQuad"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 4 %136, i64 32, i1 false) #11
  %137 = load i32, i32* %119, align 4
  %138 = load i32, i32* %120, align 8
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %185, label %140, !prof !2

140:                                              ; preds = %134
  %141 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %121, align 8
  %142 = zext i32 %137 to i64
  %143 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %141, i64 %142
  %144 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %143 to i64*
  store i64 %123, i64* %144, align 8
  %145 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %141, i64 %142, i32 1
  %146 = bitcast %"class.blink::FloatQuad"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %118, i64 32, i1 false) #11
  %147 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %182, label %149

149:                                              ; preds = %140
  %150 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %151 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %150, i64 0, i32 1
  %152 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %151) #11
  %153 = icmp eq i8* %152, null
  br i1 %153, label %154, label %156, !prof !2

154:                                              ; preds = %149
  %155 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %151, i8* %155) #11
  br label %156

156:                                              ; preds = %154, %149
  %157 = phi i8* [ %155, %154 ], [ %152, %149 ]
  %158 = bitcast i8* %157 to %"class.blink::ThreadState"**
  %159 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %159, i64 0, i32 9
  %161 = load i8, i8* %160, align 1, !range !3
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %182, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %159, i64 0, i32 13
  %165 = load i64, i64* %164, align 8
  %166 = add i64 %165, 1
  store i64 %166, i64* %164, align 8
  %167 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %159, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %168 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %167, align 8
  %169 = load atomic i64, i64* %144 monotonic, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %179, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %168, i64 0, i32 0, i32 0
  %173 = inttoptr i64 %169 to i8*
  %174 = bitcast %"class.blink::MarkingVisitor"* %168 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %175 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %175, i64 5
  %177 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %176, align 8
  call void %177(%"class.blink::Visitor"* %172, i8* nonnull %173, i8* %173, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %178 = load i64, i64* %164, align 8
  br label %179

179:                                              ; preds = %171, %163
  %180 = phi i64 [ %166, %163 ], [ %178, %171 ]
  %181 = add i64 %180, -1
  store i64 %181, i64* %164, align 8
  br label %182

182:                                              ; preds = %140, %156, %179
  %183 = load i32, i32* %119, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %119, align 4
  br label %186

185:                                              ; preds = %134
  call void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2394"* %122, %"class.blink::touch_adjustment::SubtargetGeometry"* nonnull dereferenceable(40) %3) #11
  br label %186

186:                                              ; preds = %185, %182
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %115) #11
  %187 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %135, i64 1
  %188 = icmp eq %"class.blink::FloatQuad"* %187, %132
  br i1 %188, label %189, label %134

189:                                              ; preds = %186
  %190 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %113, align 8
  br label %191

191:                                              ; preds = %189, %128
  %192 = phi %"class.blink::FloatQuad"* [ %190, %189 ], [ %129, %128 ]
  %193 = icmp eq %"class.blink::FloatQuad"* %192, null
  %194 = bitcast %"class.blink::FloatQuad"* %192 to i8*
  br i1 %193, label %200, label %195, !prof !4

195:                                              ; preds = %191
  %196 = load i32, i32* %114, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %199, label %198, !prof !2

198:                                              ; preds = %195
  store i32 0, i32* %114, align 4
  br label %199

199:                                              ; preds = %198, %195
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %194) #11
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %113, align 8
  br label %200

200:                                              ; preds = %191, %199
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #11
  br label %201

201:                                              ; preds = %200, %124
  %202 = load i32 (%"class.icu_69::BreakIterator"*)**, i32 (%"class.icu_69::BreakIterator"*)*** %99, align 8
  %203 = getelementptr inbounds i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %202, i64 13
  %204 = load i32 (%"class.icu_69::BreakIterator"*)*, i32 (%"class.icu_69::BreakIterator"*)** %203, align 8
  %205 = call i32 %204(%"class.icu_69::BreakIterator"* %98) #11
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %124

207:                                              ; preds = %201, %105
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #11
  br label %223

223:                                              ; preds = %207, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %353

224:                                              ; preds = %42
  %225 = tail call zeroext i1 @_ZNK5blink12LayoutObject10IsSelectedEv(%"class.blink::LayoutObject"* %31) #11
  br i1 %225, label %227, label %226

226:                                              ; preds = %224
  tail call void @_ZN5blink16touch_adjustmentL28AppendBasicSubtargetsForNodeEPNS_4NodeERNS_10HeapVectorINS0_17SubtargetGeometryELj0EEE(%"class.blink::Node"* nonnull %0, %"class.blink::HeapVector.2391"* dereferenceable(16) %1)
  br label %353

227:                                              ; preds = %224
  %228 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %229 = icmp eq %"class.blink::Node"* %228, null
  br i1 %229, label %230, label %237

230:                                              ; preds = %227, %230
  %231 = phi %"class.blink::LayoutObject"* [ %233, %230 ], [ %31, %227 ]
  %232 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %231, i64 0, i32 7
  %233 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %233, i64 0, i32 6, i32 0, i32 0
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %234, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %230, label %237

237:                                              ; preds = %230, %227
  %238 = phi %"class.blink::Node"* [ %228, %227 ], [ %235, %230 ]
  %239 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %238, i64 0, i32 3, i32 0, i32 0
  %240 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %240, i64 0, i32 2, i32 0, i32 0
  %242 = load %"class.blink::Document"*, %"class.blink::Document"** %241, align 8
  %243 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %242) #11
  %244 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %243, i64 0, i32 14, i32 0, i32 0
  %245 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %244, align 8
  %246 = tail call { i64, i32 } @_ZNK5blink14FrameSelection28ComputeLayoutSelectionStatusERKNS_10LayoutTextE(%"class.blink::FrameSelection"* %245, %"class.blink::LayoutText"* dereferenceable(144) %30) #11
  %247 = extractvalue { i64, i32 } %246, 0
  %248 = trunc i64 %247 to i32
  %249 = lshr i64 %247, 32
  %250 = trunc i64 %249 to i32
  %251 = bitcast %"class.WTF::Vector.2555"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %251) #11
  %252 = getelementptr inbounds %"class.WTF::Vector.2555", %"class.WTF::Vector.2555"* %7, i64 0, i32 0, i32 0, i32 0
  %253 = getelementptr inbounds %"class.WTF::Vector.2555", %"class.WTF::Vector.2555"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %251, i8 0, i64 16, i1 false) #11
  call void @_ZNK5blink10LayoutText21AbsoluteQuadsForRangeERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjj(%"class.blink::LayoutText"* %30, %"class.WTF::Vector.2555"* nonnull dereferenceable(16) %7, i32 %248, i32 %250) #11
  %254 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %252, align 8
  %255 = load i32, i32* %253, align 4
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %254, i64 %256
  %258 = icmp eq i32 %255, 0
  br i1 %258, label %326, label %259

259:                                              ; preds = %237
  %260 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %4 to i8*
  %261 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %4, i64 0, i32 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %4, i64 0, i32 1
  %263 = bitcast %"class.blink::FloatQuad"* %262 to i8*
  %264 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %265 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %266 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"class.blink::HeapVector.2391", %"class.blink::HeapVector.2391"* %1, i64 0, i32 0
  %268 = ptrtoint %"class.blink::Node"* %0 to i64
  br label %269

269:                                              ; preds = %321, %259
  %270 = phi %"class.blink::FloatQuad"* [ %254, %259 ], [ %322, %321 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %260) #11
  store %"class.blink::Node"* %0, %"class.blink::Node"** %261, align 8
  %271 = bitcast %"class.blink::FloatQuad"* %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 4 %271, i64 32, i1 false) #11
  %272 = load i32, i32* %264, align 4
  %273 = load i32, i32* %265, align 8
  %274 = icmp eq i32 %272, %273
  br i1 %274, label %320, label %275, !prof !2

275:                                              ; preds = %269
  %276 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %266, align 8
  %277 = zext i32 %272 to i64
  %278 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %276, i64 %277
  %279 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %278 to i64*
  store i64 %268, i64* %279, align 8
  %280 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %276, i64 %277, i32 1
  %281 = bitcast %"class.blink::FloatQuad"* %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %263, i64 32, i1 false) #11
  %282 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %317, label %284

284:                                              ; preds = %275
  %285 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %286 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %285, i64 0, i32 1
  %287 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %286) #11
  %288 = icmp eq i8* %287, null
  br i1 %288, label %289, label %291, !prof !2

289:                                              ; preds = %284
  %290 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %286, i8* %290) #11
  br label %291

291:                                              ; preds = %289, %284
  %292 = phi i8* [ %290, %289 ], [ %287, %284 ]
  %293 = bitcast i8* %292 to %"class.blink::ThreadState"**
  %294 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %294, i64 0, i32 9
  %296 = load i8, i8* %295, align 1, !range !3
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %317, label %298

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %294, i64 0, i32 13
  %300 = load i64, i64* %299, align 8
  %301 = add i64 %300, 1
  store i64 %301, i64* %299, align 8
  %302 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %294, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %303 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %302, align 8
  %304 = load atomic i64, i64* %279 monotonic, align 8
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %298
  %307 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %303, i64 0, i32 0, i32 0
  %308 = inttoptr i64 %304 to i8*
  %309 = bitcast %"class.blink::MarkingVisitor"* %303 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %310 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %310, i64 5
  %312 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %311, align 8
  call void %312(%"class.blink::Visitor"* %307, i8* nonnull %308, i8* %308, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %313 = load i64, i64* %299, align 8
  br label %314

314:                                              ; preds = %306, %298
  %315 = phi i64 [ %301, %298 ], [ %313, %306 ]
  %316 = add i64 %315, -1
  store i64 %316, i64* %299, align 8
  br label %317

317:                                              ; preds = %275, %291, %314
  %318 = load i32, i32* %264, align 4
  %319 = add i32 %318, 1
  store i32 %319, i32* %264, align 4
  br label %321

320:                                              ; preds = %269
  call void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2394"* %267, %"class.blink::touch_adjustment::SubtargetGeometry"* nonnull dereferenceable(40) %4) #11
  br label %321

321:                                              ; preds = %320, %317
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %260) #11
  %322 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %270, i64 1
  %323 = icmp eq %"class.blink::FloatQuad"* %322, %257
  br i1 %323, label %324, label %269

324:                                              ; preds = %321
  %325 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %252, align 8
  br label %326

326:                                              ; preds = %324, %237
  %327 = phi %"class.blink::FloatQuad"* [ %325, %324 ], [ %254, %237 ]
  %328 = icmp eq %"class.blink::FloatQuad"* %327, null
  %329 = bitcast %"class.blink::FloatQuad"* %327 to i8*
  br i1 %328, label %335, label %330, !prof !4

330:                                              ; preds = %326
  %331 = load i32, i32* %253, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %334, label %333, !prof !2

333:                                              ; preds = %330
  store i32 0, i32* %253, align 4
  br label %334

334:                                              ; preds = %333, %330
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %329) #11
  store %"class.blink::FloatQuad"* null, %"class.blink::FloatQuad"** %252, align 8
  br label %335

335:                                              ; preds = %326, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %251) #11
  br label %353

336:                                              ; preds = %96
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %336
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #11
  br label %352

352:                                              ; preds = %336, %348, %351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #11
  br label %353

353:                                              ; preds = %226, %352, %223, %335, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink27GetHitTestRectForAdjustmentERNS_10LocalFrameERKNS_10LayoutSizeE(%"class.blink::LocalFrame"* dereferenceable(1176), %"class.blink::LayoutSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca i32, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(40) %"class.blink::ChromeClient"* @_ZNK5blink5Frame15GetChromeClientEv(%"class.blink::Frame"* %5) #11
  %7 = bitcast %"class.blink::ChromeClient"* %6 to %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)***
  %8 = load %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)**, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %8, i64 29
  %10 = load %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %9, align 8
  %11 = tail call dereferenceable(552) %"struct.blink::ScreenInfo"* %10(%"class.blink::ChromeClient"* %6, %"class.blink::LocalFrame"* dereferenceable(1176) %0) #11
  %12 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %11, i64 0, i32 0
  %13 = load float, float* %12, align 8
  %14 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %5) #11
  %15 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %14, i64 0, i32 31
  %16 = load float, float* %15, align 4
  %17 = fcmp une float %16, 1.000000e+00
  %18 = select i1 %17, float 1.000000e+00, float %13
  %19 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %5) #11
  %20 = tail call float @_ZNK5blink4Page15PageScaleFactorEv(%"class.blink::Page"* %19) #11
  %21 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  %22 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  %23 = fdiv float %18, %20
  %24 = fmul float %23, 3.200000e+01
  %25 = fmul float %24, 6.400000e+01
  %26 = fcmp ult float %25, 0xC1E0000000000000
  %27 = fcmp ugt float %25, 0x41DFFFFFE0000000
  %28 = fcmp ogt float %25, 0xC1E0000000000000
  %29 = select i1 %28, float %25, float 0xC1E0000000000000
  %30 = fptosi float %29 to i32
  %31 = select i1 %26, i32 0, i32 2147483647
  %32 = select i1 %27, i32 %31, i32 %30
  store i32 %32, i32* %3, align 8
  store i32 %32, i32* %4, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %32
  %37 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %38 = select i1 %36, %"class.blink::LayoutUnit"* %33, %"class.blink::LayoutUnit"* %37
  %39 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, %32
  %45 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %46 = select i1 %44, %"class.blink::LayoutUnit"* %41, %"class.blink::LayoutUnit"* %45
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = fmul float %23, 2.000000e+01
  %50 = fmul float %49, 6.400000e+01
  %51 = fcmp ult float %50, 0xC1E0000000000000
  %52 = fcmp ugt float %50, 0x41DFFFFFE0000000
  %53 = fcmp ogt float %50, 0xC1E0000000000000
  %54 = select i1 %53, float %50, float 0xC1E0000000000000
  %55 = fptosi float %54 to i32
  %56 = select i1 %51, i32 0, i32 2147483647
  %57 = select i1 %52, i32 %56, i32 %55
  %58 = icmp sgt i32 %40, %57
  %59 = select i1 %58, i32 %40, i32 %57
  %60 = icmp sgt i32 %48, %57
  %61 = select i1 %60, i32 %48, i32 %57
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %59 to i64
  %65 = or i64 %63, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  ret i64 %65
}

declare dereferenceable(40) %"class.blink::ChromeClient"* @_ZNK5blink5Frame15GetChromeClientEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare float @_ZNK5blink4Page15PageScaleFactorEv(%"class.blink::Page"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13ContainerNode22HasRestyleFlagInternalENS_19DynamicRestyleFlagsE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #4 comdat align 2 {
  %2 = tail call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %0) #11
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = tail call float @llvm.floor.f32(float %5) #11
  %7 = fpext float %6 to double
  %8 = fcmp ult double %7, 0x41DFFFFFFFC00000
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = fcmp ugt float %6, 0xC1E0000000000000
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = fptosi float %6 to i32
  %13 = zext i32 %12 to i64
  br label %14

14:                                               ; preds = %11, %9, %1
  %15 = phi i64 [ %13, %11 ], [ 2147483647, %1 ], [ 2147483648, %9 ]
  %16 = extractelement <2 x float> %3, i32 1
  %17 = tail call float @llvm.floor.f32(float %16) #11
  %18 = fpext float %17 to double
  %19 = fcmp ult double %18, 0x41DFFFFFFFC00000
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = fcmp ugt float %17, 0xC1E0000000000000
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = fptosi float %17 to i32
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  br label %26

26:                                               ; preds = %22, %20, %14
  %27 = phi i64 [ %25, %22 ], [ 9223372032559808512, %14 ], [ -9223372036854775808, %20 ]
  %28 = trunc i64 %15 to i32
  %29 = lshr exact i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = extractelement <2 x float> %4, i32 0
  %32 = fadd float %5, %31
  %33 = extractelement <2 x float> %4, i32 1
  %34 = fadd float %16, %33
  %35 = tail call float @llvm.ceil.f32(float %32) #11
  %36 = fpext float %35 to double
  %37 = fcmp ult double %36, 0x41DFFFFFFFC00000
  br i1 %37, label %38, label %42

38:                                               ; preds = %26
  %39 = fcmp ugt float %35, 0xC1E0000000000000
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = fptosi float %35 to i32
  br label %42

42:                                               ; preds = %40, %38, %26
  %43 = phi i32 [ %41, %40 ], [ 2147483647, %26 ], [ -2147483648, %38 ]
  %44 = tail call float @llvm.ceil.f32(float %34) #11
  %45 = fpext float %44 to double
  %46 = fcmp ult double %45, 0x41DFFFFFFFC00000
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = fcmp ugt float %44, 0xC1E0000000000000
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = fptosi float %44 to i32
  br label %51

51:                                               ; preds = %42, %47, %49
  %52 = phi i32 [ %50, %49 ], [ 2147483647, %42 ], [ -2147483648, %47 ]
  %53 = icmp sgt i32 %28, -1
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %28) #11
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = icmp sgt i32 %30, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %52, i32 %30) #11
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !2
  %65 = or i64 %27, %15
  %66 = zext i32 %64 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %58 to i64
  %69 = or i64 %67, %68
  %70 = insertvalue { i64, i64 } undef, i64 %65, 0
  %71 = insertvalue { i64, i64 } %70, i64 %69, 1
  ret { i64, i64 } %71
}

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

declare i64 @_ZNK5blink7IntRect17DifferenceToPointERKNS_8IntPointE(%"class.blink::IntRect"*, %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::touch_adjustment::SubtargetGeometry"* @_ZN3WTF15ConstructTraitsIN5blink16touch_adjustment17SubtargetGeometryENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_(i8*, %"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to %"class.blink::touch_adjustment::SubtargetGeometry"*
  %4 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast i8* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %1, i64 0, i32 1
  %9 = bitcast %"class.blink::FloatQuad"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %9, i64 32, i1 false) #11
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %45, label %12

12:                                               ; preds = %2
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #11
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #11
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 9
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %45, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 13
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %31 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %30, align 8
  %32 = load atomic i64, i64* %6 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %31, i64 0, i32 0, i32 0
  %36 = inttoptr i64 %32 to i8*
  %37 = bitcast %"class.blink::MarkingVisitor"* %31 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %35, i8* nonnull %36, i8* %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %41 = load i64, i64* %27, align 8
  br label %42

42:                                               ; preds = %34, %26
  %43 = phi i64 [ %29, %26 ], [ %41, %34 ]
  %44 = add i64 %43, -1
  store i64 %44, i64* %27, align 8
  br label %45

45:                                               ; preds = %2, %19, %42
  ret %"class.blink::touch_adjustment::SubtargetGeometry"* %3
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2394"*, %"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %6, align 8
  %8 = icmp ugt %"class.blink::touch_adjustment::SubtargetGeometry"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %7, i64 %10
  %12 = icmp ugt %"class.blink::touch_adjustment::SubtargetGeometry"* %11, %1
  br i1 %12, label %24, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2394"* %0, i32 %22) #11
  %23 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %6, align 8
  br label %40

24:                                               ; preds = %9
  %25 = ptrtoint %"class.blink::touch_adjustment::SubtargetGeometry"* %1 to i64
  %26 = ptrtoint %"class.blink::touch_adjustment::SubtargetGeometry"* %7 to i64
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 40
  %29 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = lshr i32 %30, 2
  %32 = add i32 %30, 1
  %33 = add i32 %32, %31
  %34 = icmp ugt i32 %33, 4
  %35 = select i1 %34, i32 %33, i32 4
  %36 = icmp ugt i32 %35, %5
  %37 = select i1 %36, i32 %35, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2394"* %0, i32 %37) #11
  %38 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %6, align 8
  %39 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %38, i64 %28
  br label %40

40:                                               ; preds = %13, %24
  %41 = phi %"class.blink::touch_adjustment::SubtargetGeometry"* [ %23, %13 ], [ %38, %24 ]
  %42 = phi %"class.blink::touch_adjustment::SubtargetGeometry"* [ %1, %13 ], [ %39, %24 ]
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %41, i64 %44
  %46 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %45 to i8*
  %47 = tail call %"class.blink::touch_adjustment::SubtargetGeometry"* @_ZN3WTF15ConstructTraitsIN5blink16touch_adjustment17SubtargetGeometryENS_12VectorTraitsIS3_EENS1_13HeapAllocatorEE25ConstructAndNotifyElementIJS3_EEEPS3_PvDpOT_(i8* %46, %"class.blink::touch_adjustment::SubtargetGeometry"* dereferenceable(40) %42)
  %48 = load i32, i32* %3, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %3, align 4
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %8, align 8
  %10 = icmp eq %"class.blink::touch_adjustment::SubtargetGeometry"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16touch_adjustment17SubtargetGeometryEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 40
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2394"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %8, align 8
  %26 = icmp eq %"class.blink::touch_adjustment::SubtargetGeometry"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 40
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2394"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16touch_adjustment17SubtargetGeometryELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2394"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2394"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2394"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = mul nuw nsw i64 %9, 40
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16touch_adjustment17SubtargetGeometryEEEmm(i64 %14) #11
  %16 = udiv i64 %15, 40
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::touch_adjustment::SubtargetGeometry"*, %"class.blink::touch_adjustment::SubtargetGeometry"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::touch_adjustment::SubtargetGeometry"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2394"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 40
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.2394"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 40
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.2394"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2394", %"class.WTF::Vector.2394"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_16touch_adjustment17SubtargetGeometryEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 3355443
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 3355443) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 40
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 40
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS2_EEE14AllocateObjectIS6_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_16touch_adjustment17SubtargetGeometryENS_12VectorTraitsIS4_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %68, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"class.blink::touch_adjustment::SubtargetGeometry"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 40
  %51 = icmp ugt i64 %49, 39
  br i1 %51, label %52, label %68

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %65, %52
  %55 = phi i64 [ 0, %52 ], [ %66, %65 ]
  %56 = getelementptr inbounds %"class.blink::touch_adjustment::SubtargetGeometry", %"class.blink::touch_adjustment::SubtargetGeometry"* %30, i64 %55
  %57 = bitcast %"class.blink::touch_adjustment::SubtargetGeometry"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to i8*
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %63 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, i64 5
  %64 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, align 8
  tail call void %64(%"class.blink::Visitor"* %0, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %65

65:                                               ; preds = %60, %54
  %66 = add nuw nsw i64 %55, 1
  %67 = icmp ult i64 %66, %50
  br i1 %67, label %54, label %68

68:                                               ; preds = %65, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_16touch_adjustment17SubtargetGeometryEN3WTF12VectorTraitsIS3_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare %"class.icu_69::BreakIterator"* @_ZN5blink17WordBreakIteratorERKN3WTF6StringEii(%"class.WTF::String"* dereferenceable(8), i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink15IsWordTextBreakEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"*) local_unnamed_addr #3

declare void @_ZNK5blink10LayoutText21AbsoluteQuadsForRangeERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEjj(%"class.blink::LayoutText"*, %"class.WTF::Vector.2555"* dereferenceable(16), i32, i32) local_unnamed_addr #3

declare { i64, i32 } @_ZNK5blink14FrameSelection28ComputeLayoutSelectionStatusERKNS_10LayoutTextE(%"class.blink::FrameSelection"*, %"class.blink::LayoutText"* dereferenceable(144)) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.2387"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2387"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2624"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2624"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2387"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2624", %"class.blink::HeapVectorBacking.2624"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2387"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2387"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2387"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2624"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2624"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2624"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2387"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2624", %"class.blink::HeapVectorBacking.2624"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.2387"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.2387"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2624", %"class.blink::HeapVectorBacking.2624"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2624"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.5, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.2624"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.2624"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2409"*, %"class.blink::Node"** dereferenceable(8), %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = icmp eq %"class.blink::Member"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2409"* %0, %"class.blink::Member"* null)
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"class.blink::Member"* %60, %"class.blink::Member"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %89 = ptrtoint %"class.blink::Node"* %88 to i64
  %90 = bitcast %"class.blink::Member"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Node"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #11
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2409"* %0, %"class.blink::Member"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member"*, i8 } undef, %"class.blink::Member"* %117, 0
  %119 = insertvalue { %"class.blink::Member"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2409"*, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2409"* %0, i32 %35, %"class.blink::Member"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member"*
  %44 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2409"* %0, %"class.blink::Member"* %43, i32 %40, %"class.blink::Member"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.2409"*, i32, %"class.blink::Member"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %33 = icmp eq %"class.blink::Member"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member"* %61, %"class.blink::Member"* %55
  %63 = bitcast %"class.blink::Member"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.2409"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #11
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2409"* %0, %"class.blink::Member"* %42, i32 %1, %"class.blink::Member"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member"* %87, %"class.blink::Member"* %82
  %89 = bitcast %"class.blink::Member"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member"*, %"class.blink::Member"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member"* %99, %"class.blink::Member"* %88
  %101 = bitcast %"class.blink::Member"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2409"*, %"class.blink::Member"*, i32, %"class.blink::Member"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member"*, %"class.blink::Member"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.2409"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.2409", %"class.WTF::HashTable.2409"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 %42
  %44 = bitcast %"class.blink::Member"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::Node"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member"* %93, null
  %95 = ptrtoint %"class.blink::Member"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::Node"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::Node"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::Node"* %99, inttoptr (i64 -1 to %"class.blink::Node"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member"* %121, %3
  %123 = select i1 %122, %"class.blink::Member"* %118, %"class.blink::Member"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.12, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([316 x i8], [316 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %33
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2387"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.2387", %"class.WTF::Vector.2387"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2404"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISD_S9_SE_EERS4_RPS3_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.2402"*, %"class.blink::Member"* dereferenceable(8), %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2404"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2402"* %0, %"struct.WTF::KeyValuePair.2404"* null)
  %9 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.2404"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.2404"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.2404"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %118, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.2404"* %60, %"struct.WTF::KeyValuePair.2404"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.2404"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.2404"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.2404"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.2404"* %89 to i64*
  store atomic i64 %88, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %87
  %94 = inttoptr i64 %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %93, %87
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %89, i64 0, i32 1
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %99 = ptrtoint %"class.blink::Node"* %98 to i64
  %100 = bitcast %"class.blink::Member"* %97 to i64*
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %96
  %104 = bitcast %"class.blink::Node"* %98 to i8*
  %105 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %104) #11
  br label %106

106:                                              ; preds = %96, %103
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_4NodeEEES6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESA_EEEEvPT_(%"struct.WTF::KeyValuePair.2404"* %89) #11
  %107 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2402"* %0, %"struct.WTF::KeyValuePair.2404"* %89)
  br label %118

118:                                              ; preds = %58, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %58 ]
  %120 = phi %"struct.WTF::KeyValuePair.2404"* [ %89, %106 ], [ %117, %116 ], [ %60, %58 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair.2404"*, i8 } undef, %"struct.WTF::KeyValuePair.2404"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair.2404"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair.2404"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.2402"*, %"struct.WTF::KeyValuePair.2404"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.2402"* %0, i32 %35, %"struct.WTF::KeyValuePair.2404"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.2635"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.2635"* %42 to %"struct.WTF::KeyValuePair.2404"*
  %44 = call %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.2402"* %0, %"struct.WTF::KeyValuePair.2404"* %43, i32 %40, %"struct.WTF::KeyValuePair.2404"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.2404"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.2404"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE12ExpandBufferEjPS6_Rb(%"class.WTF::HashTable.2402"*, i32, %"struct.WTF::KeyValuePair.2404"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.2404"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.2404"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.2635"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.2635"* %44 to %"struct.WTF::KeyValuePair.2404"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.2404"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.2402"* %0 to %"class.blink::HeapHashTableBacking.2635"**
  store %"class.blink::HeapHashTableBacking.2635"* %44, %"class.blink::HeapHashTableBacking.2635"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.2635", %"class.blink::HeapHashTableBacking.2635"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.2404"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.2402"* %0, %"struct.WTF::KeyValuePair.2404"* %42, i32 %1, %"struct.WTF::KeyValuePair.2404"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.2404"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.2404"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.2404"* %64, %"struct.WTF::KeyValuePair.2404"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.2404"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.2404"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.2404"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.2404"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.2404"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2404"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.2402"*, %"struct.WTF::KeyValuePair.2404"*, i32, %"struct.WTF::KeyValuePair.2404"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2402", align 8
  %6 = bitcast %"class.WTF::HashTable.2402"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2402"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2404"* %1, %"struct.WTF::KeyValuePair.2404"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.2404"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.2404"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.2402"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.2404"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.2402"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.2402"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.2402"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.2404"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.2404"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.2404"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.2404"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.2404"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2402"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %67) #11
  %69 = extractvalue { %"struct.WTF::KeyValuePair.2404"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.2404"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.2404"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.2404"* %69, %"struct.WTF::KeyValuePair.2404"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.2404"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.2404"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.2635"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.12, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([443 x i8], [443 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_S6_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EESE_EESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking.2635"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking.2635"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_4NodeEEENS_12KeyValuePairIS6_S6_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EESE_EESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_S6_EENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESE_EESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_4NodeEEENS_12KeyValuePairIS6_S6_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EESE_EESE_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.2404"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %73, %20
  ret void

33:                                               ; preds = %73, %30
  %34 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.2404"* %35 to i64*
  br i1 %28, label %37, label %53

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %73
    i64 0, label %73
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  %46 = load atomic i64, i64* %41 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %73

53:                                               ; preds = %33
  %54 = load i64, i64* %36, align 8
  switch i64 %54, label %55 [
    i64 -1, label %73
    i64 0, label %73
  ]

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %3, i64 %34, i32 1
  %57 = load atomic i64, i64* %36 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::Member"* %56 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %73

73:                                               ; preds = %53, %53, %37, %37, %68, %64, %39, %48
  %74 = add nuw nsw i64 %34, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2404"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_S4_EENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EESC_EESC_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.2402"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2404"*, %"struct.WTF::KeyValuePair.2404"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2402", %"class.WTF::HashTable.2402"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2404"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2404"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.2404"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2404"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2404"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2404"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.2404"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.2404"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.2404"*, i8 } undef, %"struct.WTF::KeyValuePair.2404"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.2404"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.2404"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_4NodeEEES6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EESA_EEEEvPT_(%"struct.WTF::KeyValuePair.2404"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.2404", %"struct.WTF::KeyValuePair.2404"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair.2404"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %18, %29
  %36 = bitcast %"class.blink::Member"* %25 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %45

45:                                               ; preds = %35, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
