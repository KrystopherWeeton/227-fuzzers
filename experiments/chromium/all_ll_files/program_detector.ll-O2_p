; ModuleID = '../../courgette/program_detector.cc'
source_filename = "../../courgette/program_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.courgette::Disassembler" = type { %"class.courgette::AddressTranslator", i8*, i64, i8*, i8* }
%"class.courgette::AddressTranslator" = type { i32 (...)** }
%"class.courgette::DisassemblerWin32X86" = type { %"class.courgette::DisassemblerWin32" }
%"class.courgette::DisassemblerWin32" = type { %"class.courgette::Disassembler", i8, %"class.std::__1::vector", %"class.std::__1::vector", i8*, i16, i16, i16, %"struct.courgette::Section"*, i8, i32, i32, i32, i32, i32, i64, i32, i32, %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory", %"class.courgette::ImageDataDirectory" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"struct.courgette::Section" = type { [8 x i8], i32, i32, i32, i32, i32, i32, i16, i16, i32 }
%"class.courgette::ImageDataDirectory" = type { i32, i32 }
%"class.courgette::DisassemblerWin32X64" = type { %"class.courgette::DisassemblerWin32" }
%"class.courgette::DisassemblerElf32X86" = type { %"class.courgette::DisassemblerElf32" }
%"class.courgette::DisassemblerElf32" = type { %"class.courgette::Disassembler", %struct.Elf32_Ehdr*, i16, %"class.std::__1::vector.19", %"class.std::__1::vector.26", %struct.Elf32_Phdr*, i16, i8*, i64, %"class.std::__1::vector", %"class.std::__1::vector.33" }
%struct.Elf32_Ehdr = type { [16 x i8], i16, i16, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16 }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %struct.Elf32_Shdr*, %struct.Elf32_Shdr*, %"class.std::__1::__compressed_pair.21" }
%struct.Elf32_Shdr = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %struct.Elf32_Shdr* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i16*, i16*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i16* }
%struct.Elf32_Phdr = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.courgette::DisassemblerElf32::TypedRVA"* }
%"class.courgette::DisassemblerElf32::TypedRVA" = type { i32 (...)**, i32, i32, i64 }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::unique_ptr.35"* }

; Function Attrs: nounwind ssp uwtable
define hidden %"class.courgette::Disassembler"* @_ZN9courgette18DetectDisassemblerEPKhm(i8*, i64) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN9courgette17DisassemblerWin3211QuickDetectEPKhmt(i8* %0, i64 %1, i16 zeroext 267) #3
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 232) #4
  %6 = bitcast i8* %5 to %"class.courgette::DisassemblerWin32X86"*
  tail call void @_ZN9courgette20DisassemblerWin32X86C1EPKhm(%"class.courgette::DisassemblerWin32X86"* nonnull %6, i8* %0, i64 %1) #3
  %7 = bitcast i8* %5 to %"class.courgette::Disassembler"*
  %8 = ptrtoint i8* %5 to i64
  %9 = bitcast i8* %5 to i1 (%"class.courgette::Disassembler"*)***
  %10 = load i1 (%"class.courgette::Disassembler"*)**, i1 (%"class.courgette::Disassembler"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %10, i64 14
  %12 = load i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.courgette::Disassembler"* nonnull %7) #3
  br i1 %13, label %65, label %14

14:                                               ; preds = %4, %2
  %15 = phi i64 [ %8, %4 ], [ 0, %2 ]
  %16 = tail call zeroext i1 @_ZN9courgette17DisassemblerWin3211QuickDetectEPKhmt(i8* %0, i64 %1, i16 zeroext 523) #3
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = tail call i8* @_Znwm(i64 232) #4
  %19 = bitcast i8* %18 to %"class.courgette::DisassemblerWin32X64"*
  tail call void @_ZN9courgette20DisassemblerWin32X64C1EPKhm(%"class.courgette::DisassemblerWin32X64"* nonnull %19, i8* %0, i64 %1) #3
  %20 = bitcast i8* %18 to %"class.courgette::Disassembler"*
  %21 = ptrtoint i8* %18 to i64
  %22 = icmp eq i64 %15, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = inttoptr i64 %15 to %"class.courgette::Disassembler"*
  %25 = inttoptr i64 %15 to void (%"class.courgette::Disassembler"*)***
  %26 = load void (%"class.courgette::Disassembler"*)**, void (%"class.courgette::Disassembler"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %26, i64 6
  %28 = load void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %27, align 8
  tail call void %28(%"class.courgette::Disassembler"* nonnull %24) #3
  br label %29

29:                                               ; preds = %23, %17
  %30 = bitcast i8* %18 to i1 (%"class.courgette::Disassembler"*)***
  %31 = load i1 (%"class.courgette::Disassembler"*)**, i1 (%"class.courgette::Disassembler"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %31, i64 14
  %33 = load i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.courgette::Disassembler"* nonnull %20) #3
  br i1 %34, label %65, label %35

35:                                               ; preds = %29, %14
  %36 = phi i64 [ %21, %29 ], [ %15, %14 ]
  %37 = tail call zeroext i1 @_ZN9courgette17DisassemblerElf3211QuickDetectEPKhm16e_machine_values(i8* %0, i64 %1, i32 3) #3
  br i1 %37, label %38, label %56

38:                                               ; preds = %35
  %39 = tail call i8* @_Znwm(i64 184) #4
  %40 = bitcast i8* %39 to %"class.courgette::DisassemblerElf32X86"*
  tail call void @_ZN9courgette20DisassemblerElf32X86C1EPKhm(%"class.courgette::DisassemblerElf32X86"* nonnull %40, i8* %0, i64 %1) #3
  %41 = bitcast i8* %39 to %"class.courgette::Disassembler"*
  %42 = ptrtoint i8* %39 to i64
  %43 = icmp eq i64 %36, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = inttoptr i64 %36 to %"class.courgette::Disassembler"*
  %46 = inttoptr i64 %36 to void (%"class.courgette::Disassembler"*)***
  %47 = load void (%"class.courgette::Disassembler"*)**, void (%"class.courgette::Disassembler"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %47, i64 6
  %49 = load void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %48, align 8
  tail call void %49(%"class.courgette::Disassembler"* nonnull %45) #3
  br label %50

50:                                               ; preds = %44, %38
  %51 = bitcast i8* %39 to i1 (%"class.courgette::Disassembler"*)***
  %52 = load i1 (%"class.courgette::Disassembler"*)**, i1 (%"class.courgette::Disassembler"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %52, i64 14
  %54 = load i1 (%"class.courgette::Disassembler"*)*, i1 (%"class.courgette::Disassembler"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.courgette::Disassembler"* nonnull %41) #3
  br i1 %55, label %65, label %58

56:                                               ; preds = %35
  %57 = icmp eq i64 %36, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %50, %56
  %59 = phi i64 [ %36, %56 ], [ %42, %50 ]
  %60 = inttoptr i64 %59 to %"class.courgette::Disassembler"*
  %61 = inttoptr i64 %59 to void (%"class.courgette::Disassembler"*)***
  %62 = load void (%"class.courgette::Disassembler"*)**, void (%"class.courgette::Disassembler"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %62, i64 6
  %64 = load void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %63, align 8
  tail call void %64(%"class.courgette::Disassembler"* nonnull %60) #3
  br label %65

65:                                               ; preds = %50, %29, %4, %56, %58
  %66 = phi i64 [ 0, %56 ], [ 0, %58 ], [ %42, %50 ], [ %21, %29 ], [ %8, %4 ]
  %67 = inttoptr i64 %66 to %"class.courgette::Disassembler"*
  ret %"class.courgette::Disassembler"* %67
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9courgette20DetectExecutableTypeEPKhmPNS_14ExecutableTypeEPm(i8*, i64, i32* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %5 = tail call %"class.courgette::Disassembler"* @_ZN9courgette18DetectDisassemblerEPKhm(i8* %0, i64 %1)
  %6 = icmp eq %"class.courgette::Disassembler"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  store i32 0, i32* %2, align 4
  store i64 0, i64* %3, align 8
  br label %20

8:                                                ; preds = %4
  %9 = bitcast %"class.courgette::Disassembler"* %5 to i32 (%"class.courgette::Disassembler"*)***
  %10 = load i32 (%"class.courgette::Disassembler"*)**, i32 (%"class.courgette::Disassembler"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.courgette::Disassembler"*)*, i32 (%"class.courgette::Disassembler"*)** %10, i64 7
  %12 = load i32 (%"class.courgette::Disassembler"*)*, i32 (%"class.courgette::Disassembler"*)** %11, align 8
  %13 = tail call i32 %12(%"class.courgette::Disassembler"* nonnull %5) #3
  store i32 %13, i32* %2, align 4
  %14 = getelementptr inbounds %"class.courgette::Disassembler", %"class.courgette::Disassembler"* %5, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %3, align 8
  %16 = bitcast %"class.courgette::Disassembler"* %5 to void (%"class.courgette::Disassembler"*)***
  %17 = load void (%"class.courgette::Disassembler"*)**, void (%"class.courgette::Disassembler"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %17, i64 6
  %19 = load void (%"class.courgette::Disassembler"*)*, void (%"class.courgette::Disassembler"*)** %18, align 8
  tail call void %19(%"class.courgette::Disassembler"* nonnull %5) #3
  br label %20

20:                                               ; preds = %7, %8
  %21 = phi i32 [ 24, %7 ], [ 1, %8 ]
  ret i32 %21
}

declare zeroext i1 @_ZN9courgette17DisassemblerWin3211QuickDetectEPKhmt(i8*, i64, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN9courgette17DisassemblerElf3211QuickDetectEPKhm16e_machine_values(i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN9courgette20DisassemblerWin32X86C1EPKhm(%"class.courgette::DisassemblerWin32X86"*, i8*, i64) unnamed_addr #1

declare void @_ZN9courgette20DisassemblerWin32X64C1EPKhm(%"class.courgette::DisassemblerWin32X64"*, i8*, i64) unnamed_addr #1

declare void @_ZN9courgette20DisassemblerElf32X86C1EPKhm(%"class.courgette::DisassemblerElf32X86"*, i8*, i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
