; ModuleID = '../../chrome/utility/importer/external_process_importer_bridge.cc'
source_filename = "../../chrome/utility/importer/external_process_importer_bridge.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExternalProcessImporterBridge = type { %class.ImporterBridge.base, %"class.base::flat_map", %"class.mojo::SharedRemote" }
%class.ImporterBridge.base = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type { %"class.base::RefCountedThreadSafe.73", %class.scoped_refptr.74, %"class.std::__1::unique_ptr.75" }
%"class.base::RefCountedThreadSafe.73" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.74 = type { %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* }
%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper" = type { %"class.base::RefCountedThreadSafe.81", %class.scoped_refptr.82, %"class.mojo::Remote", %"class.mojo::AssociatedGroup" }
%"class.base::RefCountedThreadSafe.81" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.82 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.83" }>
%"class.base::RefCountedThreadSafe.83" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.250" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.84, %"class.std::__1::unique_ptr.199", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.82, i32 }>
%class.scoped_refptr.84 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.82, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.161", %"class.absl::optional.166", %"class.absl::optional.122", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.190", i8, [7 x i8], %class.scoped_refptr.82, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.85" }>
%"class.base::RefCountedThreadSafe.85" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.98 }
%class.scoped_refptr.98 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.99", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.99" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.100" }
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.82, %"class.std::__1::unique_ptr.107", %"class.absl::optional", %"struct.std::__1::atomic.118", i8, i8, i8, i8, i32, i32, %"class.absl::optional.122", %"class.std::__1::unique_ptr.127", i8, i64, %class.scoped_refptr.157, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.160" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.106", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.106" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.82, i8, %"class.mojo::ScopedHandleBase.110", %class.scoped_refptr.111, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.112" }
%"class.mojo::ScopedHandleBase.110" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.111 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.112" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.116 }
%union.anon.116 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.117", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.117" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i8 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.130", i8, i64, %class.scoped_refptr.131, %class.scoped_refptr.153 }
%"class.base::RepeatingCallback.130" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.131 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.142", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.132 }
%class.scoped_refptr.132 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::map.142" = type { %"class.std::__1::__tree.143" }
%"class.std::__1::__tree.143" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%class.scoped_refptr.153 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.157 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.256", [4 x i8], %"class.base::RepeatingCallback.202", %class.scoped_refptr.82, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.257", [4 x i8] }>
%"class.base::RefCountedThreadSafe.256" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.202" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.159 }
%class.scoped_refptr.159 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.160" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.161" = type { %"class.absl::optional_internal::optional_data.162" }
%"class.absl::optional_internal::optional_data.162" = type { %"class.absl::optional_internal::optional_data_base.163" }
%"class.absl::optional_internal::optional_data_base.163" = type { %"class.absl::optional_internal::optional_data_dtor_base.164" }
%"class.absl::optional_internal::optional_data_dtor_base.164" = type { i8, %union.anon.165 }
%union.anon.165 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.166" = type { %"class.absl::optional_internal::optional_data.167" }
%"class.absl::optional_internal::optional_data.167" = type { %"class.absl::optional_internal::optional_data_base.168" }
%"class.absl::optional_internal::optional_data_base.168" = type { %"class.absl::optional_internal::optional_data_dtor_base.169" }
%"class.absl::optional_internal::optional_data_dtor_base.169" = type { i8, [7 x i8], %union.anon.170 }
%union.anon.170 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.122" = type { %"class.absl::optional_internal::optional_data.123" }
%"class.absl::optional_internal::optional_data.123" = type { %"class.absl::optional_internal::optional_data_base.124" }
%"class.absl::optional_internal::optional_data_base.124" = type { %"class.absl::optional_internal::optional_data_dtor_base.125" }
%"class.absl::optional_internal::optional_data_dtor_base.125" = type { i8, %union.anon.126 }
%union.anon.126 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.175 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.175 = type { %"class.std::__1::map.178" }
%"class.std::__1::map.178" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.189"*, i64 }
%"class.std::__1::unique_ptr.189" = type opaque
%"class.std::__1::map.190" = type { %"class.std::__1::__tree.191" }
%"class.std::__1::__tree.191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.202", %"class.base::OnceCallback.203", %"class.absl::optional.204", %"class.absl::optional.209", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.217", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.225", %"class.std::__1::map.236", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.245", i8, %class.scoped_refptr.82, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.246" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.203" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.204" = type { %"class.absl::optional_internal::optional_data.205" }
%"class.absl::optional_internal::optional_data.205" = type { %"class.absl::optional_internal::optional_data_base.206" }
%"class.absl::optional_internal::optional_data_base.206" = type { %"class.absl::optional_internal::optional_data_dtor_base.207" }
%"class.absl::optional_internal::optional_data_dtor_base.207" = type { i8, %union.anon.208 }
%union.anon.208 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.209" = type { %"class.absl::optional_internal::optional_data.210" }
%"class.absl::optional_internal::optional_data.210" = type { %"class.absl::optional_internal::optional_data_base.211" }
%"class.absl::optional_internal::optional_data_base.211" = type { %"class.absl::optional_internal::optional_data_dtor_base.212" }
%"class.absl::optional_internal::optional_data_dtor_base.212" = type { i8, %union.anon.213 }
%union.anon.213 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.82, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.215" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.214" }
%"class.base::time_internal::TimeBase.214" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.215" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.225" = type { %"class.std::__1::__tree.226" }
%"class.std::__1::__tree.226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::OnceCallback.245" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.chrome::mojom::ProfileImportObserverProxy"* }
%"class.chrome::mojom::ProfileImportObserverProxy" = type { %"class.chrome::mojom::ProfileImportObserver", %"class.mojo::MessageReceiverWithResponder"* }
%"class.chrome::mojom::ProfileImportObserver" = type { i32 (...)** }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.220", %class.scoped_refptr.221 }
%"class.base::RepeatingCallback.220" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.221 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.85", [4 x i8] }>
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.mojo::ThreadSafeForwarder"* }
%"class.mojo::ThreadSafeForwarder" = type { %"class.mojo::internal::ThreadSafeForwarderBase", %"class.chrome::mojom::ProfileImportObserverProxy" }
%"class.mojo::internal::ThreadSafeForwarderBase" = type { %"class.mojo::MessageReceiverWithResponder", %class.scoped_refptr.262 }
%class.scoped_refptr.262 = type { %"class.mojo::ThreadSafeProxy"* }
%"class.mojo::ThreadSafeProxy" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.263", [4 x i8] }>
%"class.base::RefCountedThreadSafe.263" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.ImporterBridge = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*, %"class.std::__1::__compressed_pair.28" }
%struct.ImportedBookmarkEntry = type { i8, i8, %class.GURL, %"class.std::__1::vector.12", %"class.std::__1::basic_string.14", %"class.base::Time" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::basic_string.14"* }
%"class.std::__1::basic_string.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.17 }
%union.anon.17 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %struct.ImportedBookmarkEntry* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"*, %"class.std::__1::__compressed_pair.50" }
%"struct.favicon_base::FaviconUsageData" = type { %class.GURL, %"class.std::__1::vector.35", %"class.std::__1::set" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { i8*, i8*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i8* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.favicon_base::FaviconUsageData"* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %struct.ImporterURLRow*, %struct.ImporterURLRow*, %"class.std::__1::__compressed_pair.58" }
%struct.ImporterURLRow = type <{ %class.GURL, %"class.std::__1::basic_string.14", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %struct.ImporterURLRow* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.18 }
%struct.anon.18 = type { %"struct.std::__1::__padding.19", i8 }
%"struct.std::__1::__padding.19" = type { [1 x i8] }
%"class.std::__1::vector.64" = type opaque
%"struct.importer::ImportedPasswordForm" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14", i8, [7 x i8] }>
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry*, %"class.std::__1::__compressed_pair.67" }
%struct.ImporterAutofillFormDataEntry = type { %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14", i32, %"class.base::Time", %"class.base::Time" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %struct.ImporterAutofillFormDataEntry* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.83", [4 x i8] }>
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.84, %"class.std::__1::unique_ptr.199", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.82, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %class.GURL }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorIN12favicon_base16FaviconUsageDataENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorI14ImporterURLRowNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNSt3__16vectorI29ImporterAutofillFormDataEntryNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_ = comdat any

$_ZNK4mojo16SharedRemoteBaseINS_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapper21DeleteOnCorrectThreadEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo16SharedRemoteBaseINS3_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSB_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN4mojo16SharedRemoteBaseINS2_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSA_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE14__assign_multiINS_21__tree_const_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEEEvT_SE_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE = comdat any

$_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE15__emplace_multiIJRKS1_EEENS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEDpOT_ = comdat any

$_ZN29ImporterAutofillFormDataEntryC2ERKS_ = comdat any

$_ZNSt3__16vectorINS_4pairIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE7emplaceIJjS7_EEENS_11__wrap_iterIPS8_EENSC_IPKS8_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERNS5_IS8_EEE12emplace_backIJjS7_EEEvDpOT_ = comdat any

@_ZTV29ExternalProcessImporterBridge = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExternalProcessImporterBridge*, %"class.std::__1::vector.2"*, %"class.std::__1::basic_string.14"*)* @_ZN29ExternalProcessImporterBridge12AddBookmarksERKNSt3__16vectorI21ImportedBookmarkEntryNS0_9allocatorIS2_EEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS3_IDsEEEE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, %class.GURL*)* @_ZN29ExternalProcessImporterBridge11AddHomePageERK4GURL to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, %"class.std::__1::vector.33"*)* @_ZN29ExternalProcessImporterBridge11SetFaviconsERKNSt3__16vectorIN12favicon_base16FaviconUsageDataENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, %"class.std::__1::vector.56"*, i32)* @_ZN29ExternalProcessImporterBridge15SetHistoryItemsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEEN8importer11VisitSourceE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, %"class.std::__1::vector.64"*, i1)* @_ZN29ExternalProcessImporterBridge11SetKeywordsERKNSt3__16vectorIN8importer16SearchEngineInfoENS0_9allocatorIS3_EEEEb to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, %"struct.importer::ImportedPasswordForm"*)* @_ZN29ExternalProcessImporterBridge15SetPasswordFormERKN8importer20ImportedPasswordFormE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, %"class.std::__1::vector.65"*)* @_ZN29ExternalProcessImporterBridge19SetAutofillFormDataERKNSt3__16vectorI29ImporterAutofillFormDataEntryNS0_9allocatorIS2_EEEE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*)* @_ZN29ExternalProcessImporterBridge13NotifyStartedEv to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, i32)* @_ZN29ExternalProcessImporterBridge17NotifyItemStartedEN8importer10ImportItemE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*, i32)* @_ZN29ExternalProcessImporterBridge15NotifyItemEndedEN8importer10ImportItemE to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*)* @_ZN29ExternalProcessImporterBridge11NotifyEndedEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.14"*, %class.ExternalProcessImporterBridge*, i32)* @_ZN29ExternalProcessImporterBridge18GetLocalizedStringEi to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*)* @_ZN29ExternalProcessImporterBridgeD2Ev to i8*), i8* bitcast (void (%class.ExternalProcessImporterBridge*)* @_ZN29ExternalProcessImporterBridgeD0Ev to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [22 x i8] c"DeleteOnCorrectThread\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"../../mojo/public/cpp/bindings/shared_remote.h\00", align 1

@_ZN29ExternalProcessImporterBridgeC1ERKN4base8flat_mapIjNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_4lessIvEENS2_6vectorINS2_4pairIjS8_EENS6_ISD_EEEEEEN4mojo12SharedRemoteIN6chrome5mojom21ProfileImportObserverEEE = hidden unnamed_addr alias void (%class.ExternalProcessImporterBridge*, %"class.base::flat_map"*, %"class.mojo::SharedRemoteBase"*), void (%class.ExternalProcessImporterBridge*, %"class.base::flat_map"*, %"class.mojo::SharedRemoteBase"*)* @_ZN29ExternalProcessImporterBridgeC2ERKN4base8flat_mapIjNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_4lessIvEENS2_6vectorINS2_4pairIjS8_EENS6_ISD_EEEEEEN4mojo12SharedRemoteIN6chrome5mojom21ProfileImportObserverEEE
@_ZN29ExternalProcessImporterBridgeD1Ev = hidden unnamed_addr alias void (%class.ExternalProcessImporterBridge*), void (%class.ExternalProcessImporterBridge*)* @_ZN29ExternalProcessImporterBridgeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridgeC2ERKN4base8flat_mapIjNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_4lessIvEENS2_6vectorINS2_4pairIjS8_EENS6_ISD_EEEEEEN4mojo12SharedRemoteIN6chrome5mojom21ProfileImportObserverEEE(%class.ExternalProcessImporterBridge*, %"class.base::flat_map"* nocapture readonly dereferenceable(24), %"class.mojo::SharedRemoteBase"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.mojo::SharedRemoteBase"* %2 to i64
  %5 = bitcast %class.ExternalProcessImporterBridge* %0 to %class.ImporterBridge*
  tail call void @_ZN14ImporterBridgeC2Ev(%class.ImporterBridge* %5) #9
  %6 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV29ExternalProcessImporterBridge, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 1
  %8 = bitcast %"class.base::flat_map"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::flat_map"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 5
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %63, label %17

17:                                               ; preds = %3
  %18 = icmp ugt i64 %15, 576460752303423487
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.base::flat_map"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #10
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #11
  %23 = bitcast i8* %22 to %"struct.std::__1::pair"*
  %24 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.base::flat_map"* %7 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %15
  %28 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %27, %"struct.std::__1::pair"** %28, align 8
  %29 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %29, align 8
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %32 = bitcast %"struct.std::__1::pair"** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = icmp eq %"struct.std::__1::pair"* %30, %31
  br i1 %34, label %61, label %35

35:                                               ; preds = %21, %55
  %36 = phi %"struct.std::__1::pair"* [ %57, %55 ], [ %23, %21 ]
  %37 = phi %"struct.std::__1::pair"* [ %56, %55 ], [ %30, %21 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  store i32 %40, i32* %38, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #9
  br label %55

50:                                               ; preds = %35
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %41, i8* %52, i64 %54) #9
  br label %55

55:                                               ; preds = %50, %47
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %58 = icmp eq %"struct.std::__1::pair"* %56, %31
  br i1 %58, label %59, label %35

59:                                               ; preds = %55
  %60 = ptrtoint %"struct.std::__1::pair"* %57 to i64
  br label %61

61:                                               ; preds = %59, %21
  %62 = phi i64 [ %33, %21 ], [ %60, %59 ]
  store i64 %62, i64* %32, align 8
  br label %63

63:                                               ; preds = %61, %3
  %64 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2
  %65 = bitcast %"class.mojo::SharedRemote"* %64 to i64*
  store i64 %4, i64* %65, align 8
  ret void
}

declare void @_ZN14ImporterBridgeC2Ev(%class.ImporterBridge*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge12AddBookmarksERKNSt3__16vectorI21ImportedBookmarkEntryNS0_9allocatorIS2_EEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS3_IDsEEEE(%class.ExternalProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.2"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.14"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.2", align 8
  %5 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %7, align 8
  %9 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %struct.ImportedBookmarkEntry** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.2"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 184
  %17 = trunc i64 %16 to i32
  %18 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %9 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)***
  %19 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)** %19, i64 9
  %21 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::basic_string.14"*, i32)** %20, align 8
  tail call void %21(%"class.chrome::mojom::ProfileImportObserver"* %9, %"class.std::__1::basic_string.14"* dereferenceable(24) %2, i32 %17) #9
  %22 = load i64, i64* %13, align 8
  %23 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %10, align 8
  %24 = inttoptr i64 %22 to %struct.ImportedBookmarkEntry*
  %25 = icmp ugt %struct.ImportedBookmarkEntry* %23, %24
  br i1 %25, label %26, label %34

26:                                               ; preds = %3
  %27 = ptrtoint %struct.ImportedBookmarkEntry* %23 to i64
  %28 = sub i64 %27, %22
  %29 = sdiv exact i64 %28, 184
  %30 = trunc i64 %29 to i32
  %31 = bitcast %"class.std::__1::vector.2"* %4 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %4, i64 0, i32 0, i32 1
  br label %35

34:                                               ; preds = %70, %3
  ret void

35:                                               ; preds = %26, %70
  %36 = phi %struct.ImportedBookmarkEntry* [ %24, %26 ], [ %42, %70 ]
  %37 = phi i32 [ %30, %26 ], [ %55, %70 ]
  %38 = phi i64 [ %22, %26 ], [ %43, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #9
  %39 = icmp slt i32 %37, 100
  %40 = select i1 %39, i32 %37, i32 100
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %36, i64 %41
  %43 = ptrtoint %struct.ImportedBookmarkEntry* %42 to i64
  call void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.2"* nonnull %4, %struct.ImportedBookmarkEntry* %36, %struct.ImportedBookmarkEntry* %42)
  %44 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %5, align 8
  %45 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %44, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %45, align 8
  %47 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %47 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)***
  %49 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)** %49, i64 10
  %51 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.2"*)** %50, align 8
  call void %51(%"class.chrome::mojom::ProfileImportObserver"* %47, %"class.std::__1::vector.2"* nonnull dereferenceable(24) %4) #9
  %52 = sub i64 %43, %38
  %53 = sdiv exact i64 %52, 184
  %54 = trunc i64 %53 to i32
  %55 = sub i32 %37, %54
  %56 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %32, align 8
  %57 = icmp eq %struct.ImportedBookmarkEntry* %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %35
  %59 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %33, align 8
  %60 = icmp eq %struct.ImportedBookmarkEntry* %59, %56
  br i1 %60, label %67, label %61

61:                                               ; preds = %58, %61
  %62 = phi %struct.ImportedBookmarkEntry* [ %63, %61 ], [ %59, %58 ]
  %63 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %62, i64 -1
  call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %63) #9
  %64 = icmp eq %struct.ImportedBookmarkEntry* %63, %56
  br i1 %64, label %65, label %61

65:                                               ; preds = %61
  %66 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %32, align 8
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi %struct.ImportedBookmarkEntry* [ %66, %65 ], [ %56, %58 ]
  store %struct.ImportedBookmarkEntry* %56, %struct.ImportedBookmarkEntry** %33, align 8
  %69 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %68, i64 0, i32 0
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %35, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %71 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %10, align 8
  %72 = icmp ugt %struct.ImportedBookmarkEntry* %71, %42
  br i1 %72, label %35, label %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI21ImportedBookmarkEntryNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.2"*, %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.ImportedBookmarkEntry* %1 to i64
  %5 = ptrtoint %struct.ImportedBookmarkEntry* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 184
  %8 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.ImportedBookmarkEntry** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 184
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.ImportedBookmarkEntry*
  br i1 %15, label %78, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.ImportedBookmarkEntry** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 184
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %1, i64 %22
  %25 = select i1 %23, %struct.ImportedBookmarkEntry* %24, %struct.ImportedBookmarkEntry* %2
  %26 = icmp eq %struct.ImportedBookmarkEntry* %25, %1
  br i1 %26, label %53, label %27

27:                                               ; preds = %17, %43
  %28 = phi %struct.ImportedBookmarkEntry* [ %51, %43 ], [ %16, %17 ]
  %29 = phi %struct.ImportedBookmarkEntry* [ %50, %43 ], [ %1, %17 ]
  %30 = bitcast %struct.ImportedBookmarkEntry* %29 to i16*
  %31 = bitcast %struct.ImportedBookmarkEntry* %28 to i16*
  %32 = load i16, i16* %30, align 8
  store i16 %32, i16* %31, align 8
  %33 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %28, i64 0, i32 2
  %34 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %29, i64 0, i32 2
  %35 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %33, %class.GURL* dereferenceable(120) %34) #9
  %36 = icmp eq %struct.ImportedBookmarkEntry* %28, %29
  br i1 %36, label %43, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %28, i64 0, i32 3
  %39 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %29, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"** %39, align 8
  %41 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %29, i64 0, i32 3, i32 0, i32 1
  %42 = load %"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"** %41, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.12"* %38, %"class.std::__1::basic_string.14"* %40, %"class.std::__1::basic_string.14"* %42) #9
  br label %43

43:                                               ; preds = %37, %27
  %44 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %28, i64 0, i32 4
  %45 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %29, i64 0, i32 4
  %46 = tail call dereferenceable(24) %"class.std::__1::basic_string.14"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.14"* %44, %"class.std::__1::basic_string.14"* dereferenceable(24) %45) #9
  %47 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %29, i64 0, i32 5, i32 0, i32 0
  %48 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %28, i64 0, i32 5, i32 0, i32 0
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %29, i64 1
  %51 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %28, i64 1
  %52 = icmp eq %struct.ImportedBookmarkEntry* %50, %25
  br i1 %52, label %53, label %27

53:                                               ; preds = %43, %17
  %54 = phi %struct.ImportedBookmarkEntry* [ %16, %17 ], [ %51, %43 ]
  br i1 %23, label %55, label %70

55:                                               ; preds = %53
  %56 = load i64, i64* %19, align 8
  %57 = icmp eq %struct.ImportedBookmarkEntry* %25, %2
  br i1 %57, label %68, label %58

58:                                               ; preds = %55
  %59 = inttoptr i64 %56 to %struct.ImportedBookmarkEntry*
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi %struct.ImportedBookmarkEntry* [ %64, %60 ], [ %59, %58 ]
  %62 = phi %struct.ImportedBookmarkEntry* [ %63, %60 ], [ %24, %58 ]
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %61, %struct.ImportedBookmarkEntry* dereferenceable(184) %62) #9
  %63 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %62, i64 1
  %64 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %61, i64 1
  %65 = icmp eq %struct.ImportedBookmarkEntry* %63, %2
  br i1 %65, label %66, label %60

66:                                               ; preds = %60
  %67 = ptrtoint %struct.ImportedBookmarkEntry* %64 to i64
  br label %68

68:                                               ; preds = %55, %66
  %69 = phi i64 [ %56, %55 ], [ %67, %66 ]
  store i64 %69, i64* %19, align 8
  br label %129

70:                                               ; preds = %53
  %71 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %18, align 8
  %72 = icmp eq %struct.ImportedBookmarkEntry* %71, %54
  br i1 %72, label %77, label %73

73:                                               ; preds = %70, %73
  %74 = phi %struct.ImportedBookmarkEntry* [ %75, %73 ], [ %71, %70 ]
  %75 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %74, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %75) #9
  %76 = icmp eq %struct.ImportedBookmarkEntry* %75, %54
  br i1 %76, label %77, label %73

77:                                               ; preds = %73, %70
  store %struct.ImportedBookmarkEntry* %54, %struct.ImportedBookmarkEntry** %18, align 8
  br label %129

78:                                               ; preds = %3
  %79 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %80 = icmp eq i64 %12, 0
  br i1 %80, label %95, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %83 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %82, align 8
  %84 = icmp eq %struct.ImportedBookmarkEntry* %83, %16
  br i1 %84, label %91, label %85

85:                                               ; preds = %81, %85
  %86 = phi %struct.ImportedBookmarkEntry* [ %87, %85 ], [ %83, %81 ]
  %87 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %86, i64 -1
  tail call void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry* %87) #9
  %88 = icmp eq %struct.ImportedBookmarkEntry* %87, %16
  br i1 %88, label %89, label %85

89:                                               ; preds = %85
  %90 = load %struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry** %79, align 8
  br label %91

91:                                               ; preds = %89, %81
  %92 = phi %struct.ImportedBookmarkEntry* [ %90, %89 ], [ %16, %81 ]
  store %struct.ImportedBookmarkEntry* %16, %struct.ImportedBookmarkEntry** %82, align 8
  %93 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %92, i64 0, i32 0
  tail call void @_ZdlPv(i8* %93) #11
  %94 = bitcast %"class.std::__1::vector.2"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #9
  br label %95

95:                                               ; preds = %78, %91
  %96 = phi i64 [ %10, %78 ], [ 0, %91 ]
  %97 = icmp ugt i64 %7, 100254043878856258
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %99) #10
  unreachable

100:                                              ; preds = %95
  %101 = sdiv exact i64 %96, 184
  %102 = icmp ult i64 %101, 50127021939428129
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = shl nsw i64 %101, 1
  %105 = icmp ult i64 %104, %7
  %106 = select i1 %105, i64 %7, i64 %104
  br label %107

107:                                              ; preds = %103, %100
  %108 = phi i64 [ %106, %103 ], [ 100254043878856258, %100 ]
  %109 = mul i64 %108, 184
  %110 = tail call i8* @_Znwm(i64 %109) #11
  %111 = bitcast i8* %110 to %struct.ImportedBookmarkEntry*
  %112 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %113 = bitcast %struct.ImportedBookmarkEntry** %112 to i8**
  store i8* %110, i8** %113, align 8
  %114 = bitcast %"class.std::__1::vector.2"* %0 to i8**
  store i8* %110, i8** %114, align 8
  %115 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %111, i64 %108
  store %struct.ImportedBookmarkEntry* %115, %struct.ImportedBookmarkEntry** %8, align 8
  %116 = bitcast %struct.ImportedBookmarkEntry** %112 to i64*
  %117 = ptrtoint i8* %110 to i64
  %118 = icmp eq %struct.ImportedBookmarkEntry* %1, %2
  br i1 %118, label %127, label %119

119:                                              ; preds = %107, %119
  %120 = phi %struct.ImportedBookmarkEntry* [ %123, %119 ], [ %111, %107 ]
  %121 = phi %struct.ImportedBookmarkEntry* [ %122, %119 ], [ %1, %107 ]
  tail call void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry* %120, %struct.ImportedBookmarkEntry* dereferenceable(184) %121) #9
  %122 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %121, i64 1
  %123 = getelementptr inbounds %struct.ImportedBookmarkEntry, %struct.ImportedBookmarkEntry* %120, i64 1
  %124 = icmp eq %struct.ImportedBookmarkEntry* %122, %2
  br i1 %124, label %125, label %119

125:                                              ; preds = %119
  %126 = ptrtoint %struct.ImportedBookmarkEntry* %123 to i64
  br label %127

127:                                              ; preds = %107, %125
  %128 = phi i64 [ %117, %107 ], [ %126, %125 ]
  store i64 %128, i64* %116, align 8
  br label %129

129:                                              ; preds = %68, %77, %127
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge11AddHomePageERK4GURL(%class.ExternalProcessImporterBridge* nocapture readonly, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %7 to void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)***
  %9 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)** %9, i64 8
  %11 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %class.GURL*)** %10, align 8
  tail call void %11(%"class.chrome::mojom::ProfileImportObserver"* %7, %class.GURL* dereferenceable(120) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge11SetFaviconsERKNSt3__16vectorIN12favicon_base16FaviconUsageDataENS0_9allocatorIS3_EEEE(%class.ExternalProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.33"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.33", align 8
  %4 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %6, align 8
  %8 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %7, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.favicon_base::FaviconUsageData"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.33"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 168
  %16 = trunc i64 %15 to i32
  %17 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %8 to void (%"class.chrome::mojom::ProfileImportObserver"*, i32)***
  %18 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %18, i64 11
  %20 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %19, align 8
  tail call void %20(%"class.chrome::mojom::ProfileImportObserver"* %8, i32 %16) #9
  %21 = load i64, i64* %12, align 8
  %22 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %9, align 8
  %23 = inttoptr i64 %21 to %"struct.favicon_base::FaviconUsageData"*
  %24 = icmp ugt %"struct.favicon_base::FaviconUsageData"* %22, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %2
  %26 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %22 to i64
  %27 = sub i64 %26, %21
  %28 = sdiv exact i64 %27, 168
  %29 = trunc i64 %28 to i32
  %30 = bitcast %"class.std::__1::vector.33"* %3 to i8*
  %31 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::vector.33"* %3 to i8**
  br label %35

34:                                               ; preds = %70, %2
  ret void

35:                                               ; preds = %25, %70
  %36 = phi %"struct.favicon_base::FaviconUsageData"* [ %23, %25 ], [ %42, %70 ]
  %37 = phi i32 [ %29, %25 ], [ %55, %70 ]
  %38 = phi i64 [ %21, %25 ], [ %43, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #9
  %39 = icmp slt i32 %37, 100
  %40 = select i1 %39, i32 %37, i32 100
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %36, i64 %41
  %43 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %42 to i64
  call void @_ZNSt3__16vectorIN12favicon_base16FaviconUsageDataENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.33"* nonnull %3, %"struct.favicon_base::FaviconUsageData"* %36, %"struct.favicon_base::FaviconUsageData"* %42)
  %44 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %4, align 8
  %45 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %44, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %45, align 8
  %47 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %47 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)***
  %49 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)** %49, i64 12
  %51 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.33"*)** %50, align 8
  call void %51(%"class.chrome::mojom::ProfileImportObserver"* %47, %"class.std::__1::vector.33"* nonnull dereferenceable(24) %3) #9
  %52 = sub i64 %43, %38
  %53 = sdiv exact i64 %52, 168
  %54 = trunc i64 %53 to i32
  %55 = sub i32 %37, %54
  %56 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %31, align 8
  %57 = icmp eq %"struct.favicon_base::FaviconUsageData"* %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %35
  %59 = bitcast %"struct.favicon_base::FaviconUsageData"* %56 to i8*
  %60 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %32, align 8
  %61 = icmp eq %"struct.favicon_base::FaviconUsageData"* %60, %56
  br i1 %61, label %68, label %62

62:                                               ; preds = %58, %62
  %63 = phi %"struct.favicon_base::FaviconUsageData"* [ %64, %62 ], [ %60, %58 ]
  %64 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %63, i64 -1
  call void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"* %64) #9
  %65 = icmp eq %"struct.favicon_base::FaviconUsageData"* %64, %56
  br i1 %65, label %66, label %62

66:                                               ; preds = %62
  %67 = load i8*, i8** %33, align 8
  br label %68

68:                                               ; preds = %66, %58
  %69 = phi i8* [ %67, %66 ], [ %59, %58 ]
  store %"struct.favicon_base::FaviconUsageData"* %56, %"struct.favicon_base::FaviconUsageData"** %32, align 8
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %35, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  %71 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %9, align 8
  %72 = icmp ugt %"struct.favicon_base::FaviconUsageData"* %71, %42
  br i1 %72, label %35, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN12favicon_base16FaviconUsageDataENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.33"*, %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %1 to i64
  %5 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 168
  %8 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.favicon_base::FaviconUsageData"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 168
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.favicon_base::FaviconUsageData"*
  br i1 %15, label %73, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.favicon_base::FaviconUsageData"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 168
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %1, i64 %22
  %25 = select i1 %23, %"struct.favicon_base::FaviconUsageData"* %24, %"struct.favicon_base::FaviconUsageData"* %2
  %26 = icmp eq %"struct.favicon_base::FaviconUsageData"* %25, %1
  br i1 %26, label %48, label %27

27:                                               ; preds = %17, %44
  %28 = phi %"struct.favicon_base::FaviconUsageData"* [ %46, %44 ], [ %16, %17 ]
  %29 = phi %"struct.favicon_base::FaviconUsageData"* [ %45, %44 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %29, i64 0, i32 0
  %32 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %30, %class.GURL* dereferenceable(120) %31) #9
  %33 = icmp eq %"struct.favicon_base::FaviconUsageData"* %28, %29
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %28, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %29, i64 0, i32 1, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %29, i64 0, i32 1, i32 0, i32 1
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.35"* %35, i8* %37, i8* %39) #9
  %40 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %28, i64 0, i32 2, i32 0
  %41 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %29, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %29, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE14__assign_multiINS_21__tree_const_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEEEvT_SE_(%"class.std::__1::__tree"* %40, %"class.std::__1::__tree_end_node"* %42, %"class.std::__1::__tree_end_node"* %43) #9
  br label %44

44:                                               ; preds = %34, %27
  %45 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %29, i64 1
  %46 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %28, i64 1
  %47 = icmp eq %"struct.favicon_base::FaviconUsageData"* %45, %25
  br i1 %47, label %48, label %27

48:                                               ; preds = %44, %17
  %49 = phi %"struct.favicon_base::FaviconUsageData"* [ %16, %17 ], [ %46, %44 ]
  br i1 %23, label %50, label %65

50:                                               ; preds = %48
  %51 = load i64, i64* %19, align 8
  %52 = icmp eq %"struct.favicon_base::FaviconUsageData"* %25, %2
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = inttoptr i64 %51 to %"struct.favicon_base::FaviconUsageData"*
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi %"struct.favicon_base::FaviconUsageData"* [ %59, %55 ], [ %54, %53 ]
  %57 = phi %"struct.favicon_base::FaviconUsageData"* [ %58, %55 ], [ %24, %53 ]
  tail call void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"* %56, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168) %57) #9
  %58 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %57, i64 1
  %59 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %56, i64 1
  %60 = icmp eq %"struct.favicon_base::FaviconUsageData"* %58, %2
  br i1 %60, label %61, label %55

61:                                               ; preds = %55
  %62 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %59 to i64
  br label %63

63:                                               ; preds = %50, %61
  %64 = phi i64 [ %51, %50 ], [ %62, %61 ]
  store i64 %64, i64* %19, align 8
  br label %124

65:                                               ; preds = %48
  %66 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %18, align 8
  %67 = icmp eq %"struct.favicon_base::FaviconUsageData"* %66, %49
  br i1 %67, label %72, label %68

68:                                               ; preds = %65, %68
  %69 = phi %"struct.favicon_base::FaviconUsageData"* [ %70, %68 ], [ %66, %65 ]
  %70 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %69, i64 -1
  tail call void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"* %70) #9
  %71 = icmp eq %"struct.favicon_base::FaviconUsageData"* %70, %49
  br i1 %71, label %72, label %68

72:                                               ; preds = %68, %65
  store %"struct.favicon_base::FaviconUsageData"* %49, %"struct.favicon_base::FaviconUsageData"** %18, align 8
  br label %124

73:                                               ; preds = %3
  %74 = icmp eq i64 %12, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %73
  %76 = inttoptr i64 %12 to i8*
  %77 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %78 = load %"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"** %77, align 8
  %79 = icmp eq %"struct.favicon_base::FaviconUsageData"* %78, %16
  br i1 %79, label %87, label %80

80:                                               ; preds = %75, %80
  %81 = phi %"struct.favicon_base::FaviconUsageData"* [ %82, %80 ], [ %78, %75 ]
  %82 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %81, i64 -1
  tail call void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"* %82) #9
  %83 = icmp eq %"struct.favicon_base::FaviconUsageData"* %82, %16
  br i1 %83, label %84, label %80

84:                                               ; preds = %80
  %85 = bitcast %"class.std::__1::vector.33"* %0 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %75
  %88 = phi i8* [ %86, %84 ], [ %76, %75 ]
  store %"struct.favicon_base::FaviconUsageData"* %16, %"struct.favicon_base::FaviconUsageData"** %77, align 8
  tail call void @_ZdlPv(i8* %88) #11
  %89 = bitcast %"class.std::__1::vector.33"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #9
  br label %90

90:                                               ; preds = %73, %87
  %91 = phi i64 [ %10, %73 ], [ 0, %87 ]
  %92 = icmp ugt i64 %7, 109802048057794950
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %94) #10
  unreachable

95:                                               ; preds = %90
  %96 = sdiv exact i64 %91, 168
  %97 = icmp ult i64 %96, 54901024028897475
  br i1 %97, label %98, label %102

98:                                               ; preds = %95
  %99 = shl nsw i64 %96, 1
  %100 = icmp ult i64 %99, %7
  %101 = select i1 %100, i64 %7, i64 %99
  br label %102

102:                                              ; preds = %98, %95
  %103 = phi i64 [ %101, %98 ], [ 109802048057794950, %95 ]
  %104 = mul i64 %103, 168
  %105 = tail call i8* @_Znwm(i64 %104) #11
  %106 = bitcast i8* %105 to %"struct.favicon_base::FaviconUsageData"*
  %107 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %108 = bitcast %"struct.favicon_base::FaviconUsageData"** %107 to i8**
  store i8* %105, i8** %108, align 8
  %109 = bitcast %"class.std::__1::vector.33"* %0 to i8**
  store i8* %105, i8** %109, align 8
  %110 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %106, i64 %103
  store %"struct.favicon_base::FaviconUsageData"* %110, %"struct.favicon_base::FaviconUsageData"** %8, align 8
  %111 = bitcast %"struct.favicon_base::FaviconUsageData"** %107 to i64*
  %112 = ptrtoint i8* %105 to i64
  %113 = icmp eq %"struct.favicon_base::FaviconUsageData"* %1, %2
  br i1 %113, label %122, label %114

114:                                              ; preds = %102, %114
  %115 = phi %"struct.favicon_base::FaviconUsageData"* [ %118, %114 ], [ %106, %102 ]
  %116 = phi %"struct.favicon_base::FaviconUsageData"* [ %117, %114 ], [ %1, %102 ]
  tail call void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"* %115, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168) %116) #9
  %117 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %116, i64 1
  %118 = getelementptr inbounds %"struct.favicon_base::FaviconUsageData", %"struct.favicon_base::FaviconUsageData"* %115, i64 1
  %119 = icmp eq %"struct.favicon_base::FaviconUsageData"* %117, %2
  br i1 %119, label %120, label %114

120:                                              ; preds = %114
  %121 = ptrtoint %"struct.favicon_base::FaviconUsageData"* %118 to i64
  br label %122

122:                                              ; preds = %102, %120
  %123 = phi i64 [ %112, %102 ], [ %121, %120 ]
  store i64 %123, i64* %111, align 8
  br label %124

124:                                              ; preds = %63, %72, %122
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge15SetHistoryItemsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEEN8importer11VisitSourceE(%class.ExternalProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.56"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.56", align 8
  %5 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %7, align 8
  %9 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %struct.ImporterURLRow** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.56"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 168
  %17 = trunc i64 %16 to i32
  %18 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %9 to void (%"class.chrome::mojom::ProfileImportObserver"*, i32)***
  %19 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %19, i64 6
  %21 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %20, align 8
  tail call void %21(%"class.chrome::mojom::ProfileImportObserver"* %9, i32 %17) #9
  %22 = load i64, i64* %13, align 8
  %23 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %10, align 8
  %24 = inttoptr i64 %22 to %struct.ImporterURLRow*
  %25 = icmp ugt %struct.ImporterURLRow* %23, %24
  br i1 %25, label %26, label %35

26:                                               ; preds = %3
  %27 = ptrtoint %struct.ImporterURLRow* %23 to i64
  %28 = sub i64 %27, %22
  %29 = sdiv exact i64 %28, 168
  %30 = trunc i64 %29 to i32
  %31 = bitcast %"class.std::__1::vector.56"* %4 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %4, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %4, i64 0, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector.56"* %4 to i8**
  br label %36

35:                                               ; preds = %81, %3
  ret void

36:                                               ; preds = %26, %81
  %37 = phi %struct.ImporterURLRow* [ %24, %26 ], [ %43, %81 ]
  %38 = phi i32 [ %30, %26 ], [ %56, %81 ]
  %39 = phi i64 [ %22, %26 ], [ %44, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #9
  %40 = icmp slt i32 %38, 100
  %41 = select i1 %40, i32 %38, i32 100
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %37, i64 %42
  %44 = ptrtoint %struct.ImporterURLRow* %43 to i64
  call void @_ZNSt3__16vectorI14ImporterURLRowNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.56"* nonnull %4, %struct.ImporterURLRow* %37, %struct.ImporterURLRow* %43)
  %45 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %5, align 8
  %46 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %45, i64 0, i32 2, i32 0, i32 0, i32 0
  %47 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %46, align 8
  %48 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %47, i64 0, i32 1, i32 0
  %49 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %48 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)***
  %50 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)** %50, i64 7
  %52 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.56"*, i32)** %51, align 8
  call void %52(%"class.chrome::mojom::ProfileImportObserver"* %48, %"class.std::__1::vector.56"* nonnull dereferenceable(24) %4, i32 %2) #9
  %53 = sub i64 %44, %39
  %54 = sdiv exact i64 %53, 168
  %55 = trunc i64 %54 to i32
  %56 = sub i32 %38, %55
  %57 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %32, align 8
  %58 = icmp eq %struct.ImporterURLRow* %57, null
  br i1 %58, label %81, label %59

59:                                               ; preds = %36
  %60 = bitcast %struct.ImporterURLRow* %57 to i8*
  %61 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %33, align 8
  %62 = icmp eq %struct.ImporterURLRow* %61, %57
  br i1 %62, label %79, label %63

63:                                               ; preds = %59, %74
  %64 = phi %struct.ImporterURLRow* [ %65, %74 ], [ %61, %59 ]
  %65 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %64, i64 -1
  %66 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %64, i64 -1, i32 1
  %67 = bitcast %"class.std::__1::basic_string.14"* %66 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %63
  %72 = bitcast %"class.std::__1::basic_string.14"* %66 to i8**
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %71, %63
  %75 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %65, i64 0, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %75) #9
  %76 = icmp eq %struct.ImporterURLRow* %65, %57
  br i1 %76, label %77, label %63

77:                                               ; preds = %74
  %78 = load i8*, i8** %34, align 8
  br label %79

79:                                               ; preds = %77, %59
  %80 = phi i8* [ %78, %77 ], [ %60, %59 ]
  store %struct.ImporterURLRow* %57, %struct.ImporterURLRow** %33, align 8
  call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %36, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %82 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %10, align 8
  %83 = icmp ugt %struct.ImporterURLRow* %82, %43
  br i1 %83, label %36, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI14ImporterURLRowNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.56"*, %struct.ImporterURLRow*, %struct.ImporterURLRow*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.ImporterURLRow* %1 to i64
  %5 = ptrtoint %struct.ImporterURLRow* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 168
  %8 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.ImporterURLRow** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.56"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 168
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.ImporterURLRow*
  br i1 %15, label %78, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.ImporterURLRow** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 168
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %1, i64 %22
  %25 = select i1 %23, %struct.ImporterURLRow* %24, %struct.ImporterURLRow* %2
  %26 = icmp eq %struct.ImporterURLRow* %25, %1
  br i1 %26, label %43, label %27

27:                                               ; preds = %17, %27
  %28 = phi %struct.ImporterURLRow* [ %41, %27 ], [ %16, %17 ]
  %29 = phi %struct.ImporterURLRow* [ %40, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %28, i64 0, i32 0
  %31 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %29, i64 0, i32 0
  %32 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %30, %class.GURL* dereferenceable(120) %31) #9
  %33 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %28, i64 0, i32 1
  %34 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %29, i64 0, i32 1
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.14"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.14"* %33, %"class.std::__1::basic_string.14"* dereferenceable(24) %34) #9
  %36 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %28, i64 0, i32 2
  %37 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %29, i64 0, i32 2
  %38 = bitcast i32* %36 to i8*
  %39 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 17, i1 false) #9
  %40 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %29, i64 1
  %41 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %28, i64 1
  %42 = icmp eq %struct.ImporterURLRow* %40, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %27, %17
  %44 = phi %struct.ImporterURLRow* [ %16, %17 ], [ %41, %27 ]
  br i1 %23, label %45, label %60

45:                                               ; preds = %43
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq %struct.ImporterURLRow* %25, %2
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %struct.ImporterURLRow*
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi %struct.ImporterURLRow* [ %54, %50 ], [ %49, %48 ]
  %52 = phi %struct.ImporterURLRow* [ %53, %50 ], [ %24, %48 ]
  tail call void @_ZN14ImporterURLRowC1ERKS_(%struct.ImporterURLRow* %51, %struct.ImporterURLRow* dereferenceable(168) %52) #9
  %53 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %52, i64 1
  %54 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %51, i64 1
  %55 = icmp eq %struct.ImporterURLRow* %53, %2
  br i1 %55, label %56, label %50

56:                                               ; preds = %50
  %57 = ptrtoint %struct.ImporterURLRow* %54 to i64
  br label %58

58:                                               ; preds = %45, %56
  %59 = phi i64 [ %46, %45 ], [ %57, %56 ]
  store i64 %59, i64* %19, align 8
  br label %139

60:                                               ; preds = %43
  %61 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %18, align 8
  %62 = icmp eq %struct.ImporterURLRow* %61, %44
  br i1 %62, label %77, label %63

63:                                               ; preds = %60, %74
  %64 = phi %struct.ImporterURLRow* [ %65, %74 ], [ %61, %60 ]
  %65 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %64, i64 -1
  %66 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %64, i64 -1, i32 1
  %67 = bitcast %"class.std::__1::basic_string.14"* %66 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %63
  %72 = bitcast %"class.std::__1::basic_string.14"* %66 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %71, %63
  %75 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %65, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %75) #9
  %76 = icmp eq %struct.ImporterURLRow* %65, %44
  br i1 %76, label %77, label %63

77:                                               ; preds = %74, %60
  store %struct.ImporterURLRow* %44, %struct.ImporterURLRow** %18, align 8
  br label %139

78:                                               ; preds = %3
  %79 = icmp eq i64 %12, 0
  br i1 %79, label %105, label %80

80:                                               ; preds = %78
  %81 = inttoptr i64 %12 to i8*
  %82 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %83 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %82, align 8
  %84 = icmp eq %struct.ImporterURLRow* %83, %16
  br i1 %84, label %102, label %85

85:                                               ; preds = %80, %96
  %86 = phi %struct.ImporterURLRow* [ %87, %96 ], [ %83, %80 ]
  %87 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %86, i64 -1
  %88 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %86, i64 -1, i32 1
  %89 = bitcast %"class.std::__1::basic_string.14"* %88 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %85
  %94 = bitcast %"class.std::__1::basic_string.14"* %88 to i8**
  %95 = load i8*, i8** %94, align 8
  tail call void @_ZdlPv(i8* %95) #11
  br label %96

96:                                               ; preds = %93, %85
  %97 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %87, i64 0, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %97) #9
  %98 = icmp eq %struct.ImporterURLRow* %87, %16
  br i1 %98, label %99, label %85

99:                                               ; preds = %96
  %100 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %80
  %103 = phi i8* [ %101, %99 ], [ %81, %80 ]
  store %struct.ImporterURLRow* %16, %struct.ImporterURLRow** %82, align 8
  tail call void @_ZdlPv(i8* %103) #11
  %104 = bitcast %"class.std::__1::vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #9
  br label %105

105:                                              ; preds = %78, %102
  %106 = phi i64 [ %10, %78 ], [ 0, %102 ]
  %107 = icmp ugt i64 %7, 109802048057794950
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = bitcast %"class.std::__1::vector.56"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %109) #10
  unreachable

110:                                              ; preds = %105
  %111 = sdiv exact i64 %106, 168
  %112 = icmp ult i64 %111, 54901024028897475
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  %114 = shl nsw i64 %111, 1
  %115 = icmp ult i64 %114, %7
  %116 = select i1 %115, i64 %7, i64 %114
  br label %117

117:                                              ; preds = %113, %110
  %118 = phi i64 [ %116, %113 ], [ 109802048057794950, %110 ]
  %119 = mul i64 %118, 168
  %120 = tail call i8* @_Znwm(i64 %119) #11
  %121 = bitcast i8* %120 to %struct.ImporterURLRow*
  %122 = getelementptr inbounds %"class.std::__1::vector.56", %"class.std::__1::vector.56"* %0, i64 0, i32 0, i32 1
  %123 = bitcast %struct.ImporterURLRow** %122 to i8**
  store i8* %120, i8** %123, align 8
  %124 = bitcast %"class.std::__1::vector.56"* %0 to i8**
  store i8* %120, i8** %124, align 8
  %125 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %121, i64 %118
  store %struct.ImporterURLRow* %125, %struct.ImporterURLRow** %8, align 8
  %126 = bitcast %struct.ImporterURLRow** %122 to i64*
  %127 = ptrtoint i8* %120 to i64
  %128 = icmp eq %struct.ImporterURLRow* %1, %2
  br i1 %128, label %137, label %129

129:                                              ; preds = %117, %129
  %130 = phi %struct.ImporterURLRow* [ %133, %129 ], [ %121, %117 ]
  %131 = phi %struct.ImporterURLRow* [ %132, %129 ], [ %1, %117 ]
  tail call void @_ZN14ImporterURLRowC1ERKS_(%struct.ImporterURLRow* %130, %struct.ImporterURLRow* dereferenceable(168) %131) #9
  %132 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %131, i64 1
  %133 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %130, i64 1
  %134 = icmp eq %struct.ImporterURLRow* %132, %2
  br i1 %134, label %135, label %129

135:                                              ; preds = %129
  %136 = ptrtoint %struct.ImporterURLRow* %133 to i64
  br label %137

137:                                              ; preds = %117, %135
  %138 = phi i64 [ %127, %117 ], [ %136, %135 ]
  store i64 %138, i64* %126, align 8
  br label %139

139:                                              ; preds = %58, %77, %137
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge11SetKeywordsERKNSt3__16vectorIN8importer16SearchEngineInfoENS0_9allocatorIS3_EEEEb(%class.ExternalProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.64"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %6, align 8
  %8 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %7, i64 0, i32 1, i32 0
  %9 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %8 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)***
  %10 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)** %10, i64 14
  %12 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.64"*, i1)** %11, align 8
  tail call void %12(%"class.chrome::mojom::ProfileImportObserver"* %8, %"class.std::__1::vector.64"* %1, i1 zeroext %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge15SetPasswordFormERKN8importer20ImportedPasswordFormE(%class.ExternalProcessImporterBridge* nocapture readonly, %"struct.importer::ImportedPasswordForm"* dereferenceable(376)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %7 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)***
  %9 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)** %9, i64 13
  %11 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"struct.importer::ImportedPasswordForm"*)** %10, align 8
  tail call void %11(%"class.chrome::mojom::ProfileImportObserver"* %7, %"struct.importer::ImportedPasswordForm"* dereferenceable(376) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge19SetAutofillFormDataERKNSt3__16vectorI29ImporterAutofillFormDataEntryNS0_9allocatorIS2_EEEE(%class.ExternalProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.65"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.65", align 8
  %4 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %6, align 8
  %8 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %7, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %struct.ImporterAutofillFormDataEntry** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.65"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 72
  %16 = trunc i64 %15 to i32
  %17 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %8 to void (%"class.chrome::mojom::ProfileImportObserver"*, i32)***
  %18 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %18, i64 15
  %20 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %19, align 8
  tail call void %20(%"class.chrome::mojom::ProfileImportObserver"* %8, i32 %16) #9
  %21 = load i64, i64* %12, align 8
  %22 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %9, align 8
  %23 = inttoptr i64 %21 to %struct.ImporterAutofillFormDataEntry*
  %24 = icmp ugt %struct.ImporterAutofillFormDataEntry* %22, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %2
  %26 = ptrtoint %struct.ImporterAutofillFormDataEntry* %22 to i64
  %27 = sub i64 %26, %21
  %28 = sdiv exact i64 %27, 72
  %29 = trunc i64 %28 to i32
  %30 = bitcast %"class.std::__1::vector.65"* %3 to i8*
  %31 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %3, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::vector.65"* %3 to i8**
  br label %35

34:                                               ; preds = %70, %2
  ret void

35:                                               ; preds = %25, %70
  %36 = phi %struct.ImporterAutofillFormDataEntry* [ %23, %25 ], [ %42, %70 ]
  %37 = phi i32 [ %29, %25 ], [ %55, %70 ]
  %38 = phi i64 [ %21, %25 ], [ %43, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #9
  %39 = icmp slt i32 %37, 100
  %40 = select i1 %39, i32 %37, i32 100
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %36, i64 %41
  %43 = ptrtoint %struct.ImporterAutofillFormDataEntry* %42 to i64
  call void @_ZNSt3__16vectorI29ImporterAutofillFormDataEntryNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.65"* nonnull %3, %struct.ImporterAutofillFormDataEntry* %36, %struct.ImporterAutofillFormDataEntry* %42)
  %44 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %4, align 8
  %45 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %44, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %45, align 8
  %47 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %46, i64 0, i32 1, i32 0
  %48 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %47 to void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)***
  %49 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)**, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)** %49, i64 16
  %51 = load void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, %"class.std::__1::vector.65"*)** %50, align 8
  call void %51(%"class.chrome::mojom::ProfileImportObserver"* %47, %"class.std::__1::vector.65"* nonnull dereferenceable(24) %3) #9
  %52 = sub i64 %43, %38
  %53 = sdiv exact i64 %52, 72
  %54 = trunc i64 %53 to i32
  %55 = sub i32 %37, %54
  %56 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %31, align 8
  %57 = icmp eq %struct.ImporterAutofillFormDataEntry* %56, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %35
  %59 = bitcast %struct.ImporterAutofillFormDataEntry* %56 to i8*
  %60 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %32, align 8
  %61 = icmp eq %struct.ImporterAutofillFormDataEntry* %60, %56
  br i1 %61, label %68, label %62

62:                                               ; preds = %58, %62
  %63 = phi %struct.ImporterAutofillFormDataEntry* [ %64, %62 ], [ %60, %58 ]
  %64 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %63, i64 -1
  call void @_ZN29ImporterAutofillFormDataEntryD1Ev(%struct.ImporterAutofillFormDataEntry* %64) #9
  %65 = icmp eq %struct.ImporterAutofillFormDataEntry* %64, %56
  br i1 %65, label %66, label %62

66:                                               ; preds = %62
  %67 = load i8*, i8** %33, align 8
  br label %68

68:                                               ; preds = %66, %58
  %69 = phi i8* [ %67, %66 ], [ %59, %58 ]
  store %struct.ImporterAutofillFormDataEntry* %56, %struct.ImporterAutofillFormDataEntry** %32, align 8
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %35, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  %71 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %9, align 8
  %72 = icmp ugt %struct.ImporterAutofillFormDataEntry* %71, %42
  br i1 %72, label %35, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI29ImporterAutofillFormDataEntryNS_9allocatorIS1_EEE6assignINS_11__wrap_iterIPKS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISB_E9referenceEEE5valueEvE4typeESB_SB_(%"class.std::__1::vector.65"*, %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %struct.ImporterAutofillFormDataEntry* %1 to i64
  %5 = ptrtoint %struct.ImporterAutofillFormDataEntry* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 72
  %8 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %struct.ImporterAutofillFormDataEntry** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.65"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 72
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %struct.ImporterAutofillFormDataEntry*
  br i1 %15, label %68, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %struct.ImporterAutofillFormDataEntry** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 72
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %1, i64 %22
  %25 = select i1 %23, %struct.ImporterAutofillFormDataEntry* %24, %struct.ImporterAutofillFormDataEntry* %2
  %26 = icmp eq %struct.ImporterAutofillFormDataEntry* %25, %1
  br i1 %26, label %43, label %27

27:                                               ; preds = %17, %27
  %28 = phi %struct.ImporterAutofillFormDataEntry* [ %41, %27 ], [ %16, %17 ]
  %29 = phi %struct.ImporterAutofillFormDataEntry* [ %40, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %28, i64 0, i32 0
  %31 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %29, i64 0, i32 0
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string.14"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.14"* %30, %"class.std::__1::basic_string.14"* dereferenceable(24) %31) #9
  %33 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %28, i64 0, i32 1
  %34 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %29, i64 0, i32 1
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.14"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.14"* %33, %"class.std::__1::basic_string.14"* dereferenceable(24) %34) #9
  %36 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %28, i64 0, i32 2
  %37 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %29, i64 0, i32 2
  %38 = bitcast i32* %36 to i8*
  %39 = bitcast i32* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #9
  %40 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %29, i64 1
  %41 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %28, i64 1
  %42 = icmp eq %struct.ImporterAutofillFormDataEntry* %40, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %27, %17
  %44 = phi %struct.ImporterAutofillFormDataEntry* [ %16, %17 ], [ %41, %27 ]
  br i1 %23, label %45, label %60

45:                                               ; preds = %43
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq %struct.ImporterAutofillFormDataEntry* %25, %2
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %struct.ImporterAutofillFormDataEntry*
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi %struct.ImporterAutofillFormDataEntry* [ %54, %50 ], [ %49, %48 ]
  %52 = phi %struct.ImporterAutofillFormDataEntry* [ %53, %50 ], [ %24, %48 ]
  tail call void @_ZN29ImporterAutofillFormDataEntryC2ERKS_(%struct.ImporterAutofillFormDataEntry* %51, %struct.ImporterAutofillFormDataEntry* dereferenceable(72) %52) #9
  %53 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %52, i64 1
  %54 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %51, i64 1
  %55 = icmp eq %struct.ImporterAutofillFormDataEntry* %53, %2
  br i1 %55, label %56, label %50

56:                                               ; preds = %50
  %57 = ptrtoint %struct.ImporterAutofillFormDataEntry* %54 to i64
  br label %58

58:                                               ; preds = %45, %56
  %59 = phi i64 [ %46, %45 ], [ %57, %56 ]
  store i64 %59, i64* %19, align 8
  br label %119

60:                                               ; preds = %43
  %61 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %18, align 8
  %62 = icmp eq %struct.ImporterAutofillFormDataEntry* %61, %44
  br i1 %62, label %67, label %63

63:                                               ; preds = %60, %63
  %64 = phi %struct.ImporterAutofillFormDataEntry* [ %65, %63 ], [ %61, %60 ]
  %65 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %64, i64 -1
  tail call void @_ZN29ImporterAutofillFormDataEntryD1Ev(%struct.ImporterAutofillFormDataEntry* %65) #9
  %66 = icmp eq %struct.ImporterAutofillFormDataEntry* %65, %44
  br i1 %66, label %67, label %63

67:                                               ; preds = %63, %60
  store %struct.ImporterAutofillFormDataEntry* %44, %struct.ImporterAutofillFormDataEntry** %18, align 8
  br label %119

68:                                               ; preds = %3
  %69 = icmp eq i64 %12, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %12 to i8*
  %72 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 1
  %73 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %72, align 8
  %74 = icmp eq %struct.ImporterAutofillFormDataEntry* %73, %16
  br i1 %74, label %82, label %75

75:                                               ; preds = %70, %75
  %76 = phi %struct.ImporterAutofillFormDataEntry* [ %77, %75 ], [ %73, %70 ]
  %77 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %76, i64 -1
  tail call void @_ZN29ImporterAutofillFormDataEntryD1Ev(%struct.ImporterAutofillFormDataEntry* %77) #9
  %78 = icmp eq %struct.ImporterAutofillFormDataEntry* %77, %16
  br i1 %78, label %79, label %75

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::vector.65"* %0 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %70
  %83 = phi i8* [ %81, %79 ], [ %71, %70 ]
  store %struct.ImporterAutofillFormDataEntry* %16, %struct.ImporterAutofillFormDataEntry** %72, align 8
  tail call void @_ZdlPv(i8* %83) #11
  %84 = bitcast %"class.std::__1::vector.65"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #9
  br label %85

85:                                               ; preds = %68, %82
  %86 = phi i64 [ %10, %68 ], [ 0, %82 ]
  %87 = icmp ugt i64 %7, 256204778801521550
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = bitcast %"class.std::__1::vector.65"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #10
  unreachable

90:                                               ; preds = %85
  %91 = sdiv exact i64 %86, 72
  %92 = icmp ult i64 %91, 128102389400760775
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = shl nsw i64 %91, 1
  %95 = icmp ult i64 %94, %7
  %96 = select i1 %95, i64 %7, i64 %94
  br label %97

97:                                               ; preds = %93, %90
  %98 = phi i64 [ %96, %93 ], [ 256204778801521550, %90 ]
  %99 = mul i64 %98, 72
  %100 = tail call i8* @_Znwm(i64 %99) #11
  %101 = bitcast i8* %100 to %struct.ImporterAutofillFormDataEntry*
  %102 = getelementptr inbounds %"class.std::__1::vector.65", %"class.std::__1::vector.65"* %0, i64 0, i32 0, i32 1
  %103 = bitcast %struct.ImporterAutofillFormDataEntry** %102 to i8**
  store i8* %100, i8** %103, align 8
  %104 = bitcast %"class.std::__1::vector.65"* %0 to i8**
  store i8* %100, i8** %104, align 8
  %105 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %101, i64 %98
  store %struct.ImporterAutofillFormDataEntry* %105, %struct.ImporterAutofillFormDataEntry** %8, align 8
  %106 = bitcast %struct.ImporterAutofillFormDataEntry** %102 to i64*
  %107 = ptrtoint i8* %100 to i64
  %108 = icmp eq %struct.ImporterAutofillFormDataEntry* %1, %2
  br i1 %108, label %117, label %109

109:                                              ; preds = %97, %109
  %110 = phi %struct.ImporterAutofillFormDataEntry* [ %113, %109 ], [ %101, %97 ]
  %111 = phi %struct.ImporterAutofillFormDataEntry* [ %112, %109 ], [ %1, %97 ]
  tail call void @_ZN29ImporterAutofillFormDataEntryC2ERKS_(%struct.ImporterAutofillFormDataEntry* %110, %struct.ImporterAutofillFormDataEntry* dereferenceable(72) %111) #9
  %112 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %111, i64 1
  %113 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %110, i64 1
  %114 = icmp eq %struct.ImporterAutofillFormDataEntry* %112, %2
  br i1 %114, label %115, label %109

115:                                              ; preds = %109
  %116 = ptrtoint %struct.ImporterAutofillFormDataEntry* %113 to i64
  br label %117

117:                                              ; preds = %97, %115
  %118 = phi i64 [ %107, %97 ], [ %116, %115 ]
  store i64 %118, i64* %106, align 8
  br label %119

119:                                              ; preds = %58, %67, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge13NotifyStartedEv(%class.ExternalProcessImporterBridge* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %2, align 8
  %4 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %4, align 8
  %6 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %5, i64 0, i32 1, i32 0
  %7 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %6 to void (%"class.chrome::mojom::ProfileImportObserver"*)***
  %8 = load void (%"class.chrome::mojom::ProfileImportObserver"*)**, void (%"class.chrome::mojom::ProfileImportObserver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*)** %8, i64 2
  %10 = load void (%"class.chrome::mojom::ProfileImportObserver"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*)** %9, align 8
  tail call void %10(%"class.chrome::mojom::ProfileImportObserver"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge17NotifyItemStartedEN8importer10ImportItemE(%class.ExternalProcessImporterBridge* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %7 to void (%"class.chrome::mojom::ProfileImportObserver"*, i32)***
  %9 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %9, i64 4
  %11 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %10, align 8
  tail call void %11(%"class.chrome::mojom::ProfileImportObserver"* %7, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge15NotifyItemEndedEN8importer10ImportItemE(%class.ExternalProcessImporterBridge* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %7 to void (%"class.chrome::mojom::ProfileImportObserver"*, i32)***
  %9 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)**, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %9, i64 5
  %11 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i32)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i32)** %10, align 8
  tail call void %11(%"class.chrome::mojom::ProfileImportObserver"* %7, i32 %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge11NotifyEndedEv(%class.ExternalProcessImporterBridge* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %3, align 8
  %5 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %5, align 8
  %7 = getelementptr inbounds %"class.mojo::ThreadSafeForwarder", %"class.mojo::ThreadSafeForwarder"* %6, i64 0, i32 1, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  %9 = bitcast %"class.chrome::mojom::ProfileImportObserver"* %7 to void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)***
  %10 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)**, void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)** %10, i64 3
  %12 = load void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)*, void (%"class.chrome::mojom::ProfileImportObserver"*, i1, %"class.std::__1::basic_string"*)** %11, align 8
  call void %12(%"class.chrome::mojom::ProfileImportObserver"* %7, i1 zeroext true, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #9
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridge18GetLocalizedStringEi(%"class.std::__1::basic_string.14"* noalias sret, %class.ExternalProcessImporterBridge*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %1, i64 0, i32 1
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  store i32 %2, i32* %5, align 4
  %8 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %14 = sub i64 %12, %13
  %15 = icmp eq i64 %14, 0
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %33, label %17

17:                                               ; preds = %3
  %18 = ashr exact i64 %14, 5
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %"struct.std::__1::pair"* [ %9, %17 ], [ %31, %19 ]
  %21 = phi i64 [ %18, %17 ], [ %30, %19 ]
  %22 = lshr i64 %21, 1
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp ult i32 %25, %2
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 1
  %28 = xor i64 %22, -1
  %29 = add i64 %21, %28
  %30 = select i1 %26, i64 %29, i64 %22
  %31 = select i1 %26, %"struct.std::__1::pair"* %27, %"struct.std::__1::pair"* %20
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %19

33:                                               ; preds = %19, %3
  %34 = phi %"struct.std::__1::pair"* [ %9, %3 ], [ %31, %19 ]
  %35 = icmp eq %"struct.std::__1::pair"* %34, %16
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, %2
  br i1 %39, label %40, label %52

40:                                               ; preds = %36, %33
  %41 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #9
  %42 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %6, i64 0, i32 0, i32 0
  %43 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE7emplaceIJjS7_EEENS_11__wrap_iterIPS8_EENSC_IPKS8_EEDpOT_(%"class.std::__1::vector"* %42, %"struct.std::__1::pair"* %34, i32* nonnull dereferenceable(4) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %44 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #11
  br label %51

51:                                               ; preds = %48, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  br label %52

52:                                               ; preds = %36, %51
  %53 = phi %"struct.std::__1::pair"* [ %43, %51 ], [ %34, %36 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %62 = select i1 %58, i8* %60, i8* %61
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %57 to i64
  %66 = select i1 %58, i64 %64, i64 %65
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.14"* sret %0, i8* %62, i64 %66) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  ret void
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.14"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridgeD2Ev(%class.ExternalProcessImporterBridge*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV29ExternalProcessImporterBridge, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.mojo::SharedRemoteBase"*, %"class.mojo::SharedRemoteBase"** %3, align 8
  %5 = icmp eq %"class.mojo::SharedRemoteBase"* %4, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.mojo::SharedRemoteBase", %"class.mojo::SharedRemoteBase"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %33

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.73", %"class.base::RefCountedThreadSafe.73"* %7, i64 4
  %13 = bitcast %"class.base::RefCountedThreadSafe.73"* %12 to %"class.mojo::ThreadSafeForwarder"**
  %14 = load %"class.mojo::ThreadSafeForwarder"*, %"class.mojo::ThreadSafeForwarder"** %13, align 8
  store %"class.mojo::ThreadSafeForwarder"* null, %"class.mojo::ThreadSafeForwarder"** %13, align 8
  %15 = icmp eq %"class.mojo::ThreadSafeForwarder"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.mojo::ThreadSafeForwarder"* %14 to void (%"class.mojo::ThreadSafeForwarder"*)***
  %18 = load void (%"class.mojo::ThreadSafeForwarder"*)**, void (%"class.mojo::ThreadSafeForwarder"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.mojo::ThreadSafeForwarder"*)*, void (%"class.mojo::ThreadSafeForwarder"*)** %18, i64 1
  %20 = load void (%"class.mojo::ThreadSafeForwarder"*)*, void (%"class.mojo::ThreadSafeForwarder"*)** %19, align 8
  tail call void %20(%"class.mojo::ThreadSafeForwarder"* nonnull %14) #9
  br label %21

21:                                               ; preds = %16, %11
  %22 = getelementptr inbounds %"class.base::RefCountedThreadSafe.73", %"class.base::RefCountedThreadSafe.73"* %7, i64 2
  %23 = bitcast %"class.base::RefCountedThreadSafe.73"* %22 to %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"**
  %24 = load %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*, %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"** %23, align 8
  %25 = icmp eq %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper", %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @_ZNK4mojo16SharedRemoteBaseINS_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapper21DeleteOnCorrectThreadEv(%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* nonnull %24) #9
  br label %31

31:                                               ; preds = %30, %26, %21
  %32 = bitcast %"class.mojo::SharedRemoteBase"* %4 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %1, %6, %31
  %34 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %35, align 8
  %37 = icmp eq %"struct.std::__1::pair"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"struct.std::__1::pair"* %36 to i8*
  %40 = getelementptr inbounds %class.ExternalProcessImporterBridge, %class.ExternalProcessImporterBridge* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %41 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %40, align 8
  %42 = icmp eq %"struct.std::__1::pair"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"struct.std::__1::pair"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 -1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 -1, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  tail call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %51, %43
  %55 = icmp eq %"struct.std::__1::pair"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.base::internal::flat_tree"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"struct.std::__1::pair"* %36, %"struct.std::__1::pair"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #11
  br label %61

61:                                               ; preds = %33, %59
  %62 = bitcast %class.ExternalProcessImporterBridge* %0 to %class.ImporterBridge*
  tail call void @_ZN14ImporterBridgeD2Ev(%class.ImporterBridge* %62) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN14ImporterBridgeD2Ev(%class.ImporterBridge*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExternalProcessImporterBridgeD0Ev(%class.ExternalProcessImporterBridge*) unnamed_addr #0 align 2 {
  tail call void @_ZN29ExternalProcessImporterBridgeD2Ev(%class.ExternalProcessImporterBridge* %0) #9
  %2 = bitcast %class.ExternalProcessImporterBridge* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4mojo16SharedRemoteBaseINS_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapper21DeleteOnCorrectThreadEv(%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*) #0 comdat align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper", %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %6 = bitcast %"class.base::SequencedTaskRunner"* %5 to i1 (%"class.base::SequencedTaskRunner"*)***
  %7 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %7, i64 5
  %9 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.base::SequencedTaskRunner"* %5) #9
  br i1 %10, label %25, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.base::SequencedTaskRunner"** %4 to %"class.base::TaskRunner"**
  %13 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %12, align 8
  %14 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 153) #9
  %15 = ptrtoint %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0 to i64
  %16 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo16SharedRemoteBaseINS3_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSB_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN4mojo16SharedRemoteBaseINS2_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSA_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*)* @_ZNK4mojo16SharedRemoteBaseINS_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapper21DeleteOnCorrectThreadEv to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !2
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8, !noalias !2
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %16, i8** %22, align 8, !alias.scope !2
  %23 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %13, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #9
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #9
  br label %52

25:                                               ; preds = %1
  %26 = icmp eq %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0, null
  br i1 %26, label %52, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper", %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0, i64 0, i32 3
  tail call void @_ZN4mojo15AssociatedGroupD1Ev(%"class.mojo::AssociatedGroup"* %28) #9
  %29 = getelementptr inbounds %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper", %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper", %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.chrome::mojom::ProfileImportObserverProxy"*, %"class.chrome::mojom::ProfileImportObserverProxy"** %30, align 8
  store %"class.chrome::mojom::ProfileImportObserverProxy"* null, %"class.chrome::mojom::ProfileImportObserverProxy"** %30, align 8
  %32 = icmp eq %"class.chrome::mojom::ProfileImportObserverProxy"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.chrome::mojom::ProfileImportObserverProxy"* %31 to void (%"class.chrome::mojom::ProfileImportObserverProxy"*)***
  %35 = load void (%"class.chrome::mojom::ProfileImportObserverProxy"*)**, void (%"class.chrome::mojom::ProfileImportObserverProxy"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.chrome::mojom::ProfileImportObserverProxy"*)*, void (%"class.chrome::mojom::ProfileImportObserverProxy"*)** %35, i64 1
  %37 = load void (%"class.chrome::mojom::ProfileImportObserverProxy"*)*, void (%"class.chrome::mojom::ProfileImportObserverProxy"*)** %36, align 8
  tail call void %37(%"class.chrome::mojom::ProfileImportObserverProxy"* nonnull %31) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = bitcast %"class.mojo::Remote"* %29 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %39) #9
  %40 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %4, align 8
  %41 = icmp eq %"class.base::SequencedTaskRunner"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %40, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.83", %"class.base::RefCountedThreadSafe.83"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.83", %"class.base::RefCountedThreadSafe.83"* %43, i64 -2
  %49 = bitcast %"class.base::RefCountedThreadSafe.83"* %48 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %49) #9
  br label %50

50:                                               ; preds = %38, %42, %47
  %51 = bitcast %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %0 to i8*
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %25, %50, %11
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN4mojo16SharedRemoteBaseINS3_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSB_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*)**
  %21 = load void (%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*)*, void (%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.mojo::SharedRemoteBase<mojo::Remote<chrome::mojom::ProfileImportObserver> >::RemoteWrapper"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN4mojo16SharedRemoteBaseINS2_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSA_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo15AssociatedGroupD1Ev(%"class.mojo::AssociatedGroup"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN21ImportedBookmarkEntryD1Ev(%struct.ImportedBookmarkEntry*) unnamed_addr #3

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.14"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.14"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.14"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.14"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.14"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.14"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.14"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.14"*
  %35 = icmp ugt %"class.std::__1::basic_string.14"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !7
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !7
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !10, !noalias !7
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !10, !noalias !7
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !7
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !7
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !10, !noalias !7
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !10, !noalias !7
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !7
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !7
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !10, !noalias !7
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !10, !noalias !7
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !7
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !7
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !10, !noalias !7
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !10, !noalias !7
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !12

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !7
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !7
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !10, !noalias !7
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !10, !noalias !7
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !14

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !16

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !17

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.14"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #10
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #10
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !18
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !18
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !21, !noalias !18
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !21, !noalias !18
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !18
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !18
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !21, !noalias !18
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !21, !noalias !18
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !18
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !18
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !21, !noalias !18
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !21, !noalias !18
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !18
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !18
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !21, !noalias !18
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !21, !noalias !18
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !23

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !18
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !18
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !21, !noalias !18
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !21, !noalias !18
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !24

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !25

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !26

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.14"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.14"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !27
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !27
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !30, !noalias !27
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !30, !noalias !27
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !27
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !27
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !30, !noalias !27
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !30, !noalias !27
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !27
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !27
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !30, !noalias !27
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !30, !noalias !27
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !27
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !27
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !30, !noalias !27
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !30, !noalias !27
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !32

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !27
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !27
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !30, !noalias !27
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !30, !noalias !27
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !33

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !34

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !35

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.14"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.14"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.12"*, %"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string.14"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string.14"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string.14"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string.14"*
  br i1 %15, label %251, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string.14"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string.14"* %24, %"class.std::__1::basic_string.14"* %2
  %26 = icmp eq %"class.std::__1::basic_string.14"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.std::__1::basic_string.14"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string.14"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string.14"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.14"* %28, %"class.std::__1::basic_string.14"* dereferenceable(24) %29) #9
  %31 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %29, i64 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %28, i64 1
  %33 = icmp eq %"class.std::__1::basic_string.14"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.std::__1::basic_string.14"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %235

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.std::__1::basic_string.14"* %25, %2
  br i1 %38, label %233, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.std::__1::basic_string.14"*
  br label %41

41:                                               ; preds = %227, %39
  %42 = phi %"class.std::__1::basic_string.14"* [ %229, %227 ], [ %40, %39 ]
  %43 = phi %"class.std::__1::basic_string.14"* [ %228, %227 ], [ %24, %39 ]
  %44 = bitcast %"class.std::__1::basic_string.14"* %43 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %44, i64 0, i32 1, i32 1
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string.14"* %42 to i8*
  %50 = bitcast %"class.std::__1::basic_string.14"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #9
  br label %227

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 11
  br i1 %56, label %57, label %62

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string.14"* %42 to i16*
  %59 = trunc i64 %55 to i8
  %60 = bitcast %"class.std::__1::basic_string.14"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  store i8 %59, i8* %61, align 1
  br label %79

62:                                               ; preds = %51
  %63 = icmp ugt i64 %55, 9223372036854775791
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::basic_string.14"* %42 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %65) #10
  unreachable

66:                                               ; preds = %62
  %67 = add nuw nsw i64 %55, 8
  %68 = and i64 %67, -8
  %69 = icmp slt i64 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call void @abort() #10
  unreachable

71:                                               ; preds = %66
  %72 = shl i64 %68, 1
  %73 = tail call i8* @_Znwm(i64 %72) #11
  %74 = bitcast i8* %73 to i16*
  %75 = bitcast %"class.std::__1::basic_string.14"* %42 to i8**
  store i8* %73, i8** %75, align 8
  %76 = or i64 %68, -9223372036854775808
  %77 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %55, i64* %78, align 8
  br label %79

79:                                               ; preds = %71, %57
  %80 = phi i16* [ %58, %57 ], [ %74, %71 ]
  %81 = add nuw nsw i64 %55, 1
  %82 = add i64 %55, 1
  %83 = icmp ult i64 %82, 16
  br i1 %83, label %174, label %84

84:                                               ; preds = %79
  %85 = getelementptr i16, i16* %80, i64 1
  %86 = getelementptr i16, i16* %85, i64 %55
  %87 = getelementptr i16, i16* %53, i64 1
  %88 = getelementptr i16, i16* %87, i64 %55
  %89 = icmp ult i16* %80, %88
  %90 = icmp ult i16* %53, %86
  %91 = and i1 %89, %90
  br i1 %91, label %174, label %92

92:                                               ; preds = %84
  %93 = and i64 %82, -16
  %94 = sub i64 %81, %93
  %95 = getelementptr i16, i16* %53, i64 %93
  %96 = getelementptr i16, i16* %80, i64 %93
  %97 = add i64 %93, -16
  %98 = lshr exact i64 %97, 4
  %99 = add nuw nsw i64 %98, 1
  %100 = and i64 %99, 3
  %101 = icmp ult i64 %97, 48
  br i1 %101, label %153, label %102

102:                                              ; preds = %92
  %103 = sub nsw i64 %99, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %150, %104 ]
  %106 = phi i64 [ %103, %102 ], [ %151, %104 ]
  %107 = getelementptr i16, i16* %53, i64 %105
  %108 = getelementptr i16, i16* %80, i64 %105
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !36
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !36
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !39, !noalias !36
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !39, !noalias !36
  %117 = or i64 %105, 16
  %118 = getelementptr i16, i16* %53, i64 %117
  %119 = getelementptr i16, i16* %80, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !36
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !36
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !39, !noalias !36
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !39, !noalias !36
  %128 = or i64 %105, 32
  %129 = getelementptr i16, i16* %53, i64 %128
  %130 = getelementptr i16, i16* %80, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !36
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !36
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !39, !noalias !36
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !39, !noalias !36
  %139 = or i64 %105, 48
  %140 = getelementptr i16, i16* %53, i64 %139
  %141 = getelementptr i16, i16* %80, i64 %139
  %142 = bitcast i16* %140 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !36
  %144 = getelementptr i16, i16* %140, i64 8
  %145 = bitcast i16* %144 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !36
  %147 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %147, align 2, !alias.scope !39, !noalias !36
  %148 = getelementptr i16, i16* %141, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %149, align 2, !alias.scope !39, !noalias !36
  %150 = add i64 %105, 64
  %151 = add i64 %106, -4
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %104, !llvm.loop !41

153:                                              ; preds = %104, %92
  %154 = phi i64 [ 0, %92 ], [ %150, %104 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %172, label %156

156:                                              ; preds = %153, %156
  %157 = phi i64 [ %169, %156 ], [ %154, %153 ]
  %158 = phi i64 [ %170, %156 ], [ %100, %153 ]
  %159 = getelementptr i16, i16* %53, i64 %157
  %160 = getelementptr i16, i16* %80, i64 %157
  %161 = bitcast i16* %159 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !36
  %163 = getelementptr i16, i16* %159, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !36
  %166 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %166, align 2, !alias.scope !39, !noalias !36
  %167 = getelementptr i16, i16* %160, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %168, align 2, !alias.scope !39, !noalias !36
  %169 = add i64 %157, 16
  %170 = add i64 %158, -1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %156, !llvm.loop !42

172:                                              ; preds = %156, %153
  %173 = icmp eq i64 %82, %93
  br i1 %173, label %227, label %174

174:                                              ; preds = %172, %84, %79
  %175 = phi i64 [ %81, %84 ], [ %81, %79 ], [ %94, %172 ]
  %176 = phi i16* [ %53, %84 ], [ %53, %79 ], [ %95, %172 ]
  %177 = phi i16* [ %80, %84 ], [ %80, %79 ], [ %96, %172 ]
  %178 = add i64 %175, -1
  %179 = and i64 %175, 7
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %192, label %181

181:                                              ; preds = %174, %181
  %182 = phi i64 [ %187, %181 ], [ %175, %174 ]
  %183 = phi i16* [ %189, %181 ], [ %176, %174 ]
  %184 = phi i16* [ %188, %181 ], [ %177, %174 ]
  %185 = phi i64 [ %190, %181 ], [ %179, %174 ]
  %186 = load i16, i16* %183, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %182, -1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = getelementptr inbounds i16, i16* %183, i64 1
  %190 = add i64 %185, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %181, !llvm.loop !43

192:                                              ; preds = %181, %174
  %193 = phi i64 [ %175, %174 ], [ %187, %181 ]
  %194 = phi i16* [ %176, %174 ], [ %189, %181 ]
  %195 = phi i16* [ %177, %174 ], [ %188, %181 ]
  %196 = icmp ult i64 %178, 7
  br i1 %196, label %227, label %197

197:                                              ; preds = %192, %197
  %198 = phi i64 [ %223, %197 ], [ %193, %192 ]
  %199 = phi i16* [ %225, %197 ], [ %194, %192 ]
  %200 = phi i16* [ %224, %197 ], [ %195, %192 ]
  %201 = load i16, i16* %199, align 2
  store i16 %201, i16* %200, align 2
  %202 = getelementptr inbounds i16, i16* %200, i64 1
  %203 = getelementptr inbounds i16, i16* %199, i64 1
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %200, i64 2
  %206 = getelementptr inbounds i16, i16* %199, i64 2
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %200, i64 3
  %209 = getelementptr inbounds i16, i16* %199, i64 3
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %200, i64 4
  %212 = getelementptr inbounds i16, i16* %199, i64 4
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %200, i64 5
  %215 = getelementptr inbounds i16, i16* %199, i64 5
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %200, i64 6
  %218 = getelementptr inbounds i16, i16* %199, i64 6
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %200, i64 7
  %221 = getelementptr inbounds i16, i16* %199, i64 7
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = add i64 %198, -8
  %224 = getelementptr inbounds i16, i16* %200, i64 8
  %225 = getelementptr inbounds i16, i16* %199, i64 8
  %226 = icmp eq i64 %223, 0
  br i1 %226, label %227, label %197, !llvm.loop !44

227:                                              ; preds = %192, %197, %172, %48
  %228 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %43, i64 1
  %229 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %42, i64 1
  %230 = icmp eq %"class.std::__1::basic_string.14"* %228, %2
  br i1 %230, label %231, label %41

231:                                              ; preds = %227
  %232 = ptrtoint %"class.std::__1::basic_string.14"* %229 to i64
  br label %233

233:                                              ; preds = %36, %231
  %234 = phi i64 [ %37, %36 ], [ %232, %231 ]
  store i64 %234, i64* %19, align 8
  br label %494

235:                                              ; preds = %34
  %236 = load %"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"** %18, align 8
  %237 = icmp eq %"class.std::__1::basic_string.14"* %236, %35
  br i1 %237, label %250, label %238

238:                                              ; preds = %235, %248
  %239 = phi %"class.std::__1::basic_string.14"* [ %240, %248 ], [ %236, %235 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string.14"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string.14"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #11
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string.14"* %240, %35
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %235
  store %"class.std::__1::basic_string.14"* %35, %"class.std::__1::basic_string.14"** %18, align 8
  br label %494

251:                                              ; preds = %3
  %252 = icmp eq i64 %12, 0
  br i1 %252, label %276, label %253

253:                                              ; preds = %251
  %254 = inttoptr i64 %12 to i8*
  %255 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %256 = load %"class.std::__1::basic_string.14"*, %"class.std::__1::basic_string.14"** %255, align 8
  %257 = icmp eq %"class.std::__1::basic_string.14"* %256, %16
  br i1 %257, label %273, label %258

258:                                              ; preds = %253, %268
  %259 = phi %"class.std::__1::basic_string.14"* [ %260, %268 ], [ %256, %253 ]
  %260 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %259, i64 -1
  %261 = bitcast %"class.std::__1::basic_string.14"* %260 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %261, i64 0, i32 1, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %258
  %266 = bitcast %"class.std::__1::basic_string.14"* %260 to i8**
  %267 = load i8*, i8** %266, align 8
  tail call void @_ZdlPv(i8* %267) #11
  br label %268

268:                                              ; preds = %265, %258
  %269 = icmp eq %"class.std::__1::basic_string.14"* %260, %16
  br i1 %269, label %270, label %258

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.12"* %0 to i8**
  %272 = load i8*, i8** %271, align 8
  br label %273

273:                                              ; preds = %270, %253
  %274 = phi i8* [ %272, %270 ], [ %254, %253 ]
  store %"class.std::__1::basic_string.14"* %16, %"class.std::__1::basic_string.14"** %255, align 8
  tail call void @_ZdlPv(i8* %274) #11
  %275 = bitcast %"class.std::__1::vector.12"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %275, i8 0, i64 24, i1 false) #9
  br label %276

276:                                              ; preds = %251, %273
  %277 = phi i64 [ %10, %251 ], [ 0, %273 ]
  %278 = icmp ugt i64 %7, 768614336404564650
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %280) #10
  unreachable

281:                                              ; preds = %276
  %282 = sdiv exact i64 %277, 24
  %283 = icmp ult i64 %282, 384307168202282325
  br i1 %283, label %284, label %288

284:                                              ; preds = %281
  %285 = shl nsw i64 %282, 1
  %286 = icmp ult i64 %285, %7
  %287 = select i1 %286, i64 %7, i64 %285
  br label %288

288:                                              ; preds = %284, %281
  %289 = phi i64 [ %287, %284 ], [ 768614336404564650, %281 ]
  %290 = mul i64 %289, 24
  %291 = tail call i8* @_Znwm(i64 %290) #11
  %292 = bitcast i8* %291 to %"class.std::__1::basic_string.14"*
  %293 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string.14"** %293 to i8**
  store i8* %291, i8** %294, align 8
  %295 = bitcast %"class.std::__1::vector.12"* %0 to i8**
  store i8* %291, i8** %295, align 8
  %296 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %292, i64 %289
  store %"class.std::__1::basic_string.14"* %296, %"class.std::__1::basic_string.14"** %8, align 8
  %297 = bitcast %"class.std::__1::basic_string.14"** %293 to i64*
  %298 = ptrtoint i8* %291 to i64
  %299 = icmp eq %"class.std::__1::basic_string.14"* %1, %2
  br i1 %299, label %492, label %300

300:                                              ; preds = %288, %486
  %301 = phi %"class.std::__1::basic_string.14"* [ %488, %486 ], [ %292, %288 ]
  %302 = phi %"class.std::__1::basic_string.14"* [ %487, %486 ], [ %1, %288 ]
  %303 = bitcast %"class.std::__1::basic_string.14"* %302 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %303, i64 0, i32 1, i32 1
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %300
  %308 = bitcast %"class.std::__1::basic_string.14"* %301 to i8*
  %309 = bitcast %"class.std::__1::basic_string.14"* %302 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %308, i8* align 8 %309, i64 24, i1 false) #9
  br label %486

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ult i64 %314, 11
  br i1 %315, label %316, label %321

316:                                              ; preds = %310
  %317 = bitcast %"class.std::__1::basic_string.14"* %301 to i16*
  %318 = trunc i64 %314 to i8
  %319 = bitcast %"class.std::__1::basic_string.14"* %301 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %319, i64 0, i32 1, i32 1
  store i8 %318, i8* %320, align 1
  br label %338

321:                                              ; preds = %310
  %322 = icmp ugt i64 %314, 9223372036854775791
  br i1 %322, label %323, label %325

323:                                              ; preds = %321
  %324 = bitcast %"class.std::__1::basic_string.14"* %301 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %324) #10
  unreachable

325:                                              ; preds = %321
  %326 = add nuw nsw i64 %314, 8
  %327 = and i64 %326, -8
  %328 = icmp slt i64 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %325
  tail call void @abort() #10
  unreachable

330:                                              ; preds = %325
  %331 = shl i64 %327, 1
  %332 = tail call i8* @_Znwm(i64 %331) #11
  %333 = bitcast i8* %332 to i16*
  %334 = bitcast %"class.std::__1::basic_string.14"* %301 to i8**
  store i8* %332, i8** %334, align 8
  %335 = or i64 %327, -9223372036854775808
  %336 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %335, i64* %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %314, i64* %337, align 8
  br label %338

338:                                              ; preds = %330, %316
  %339 = phi i16* [ %317, %316 ], [ %333, %330 ]
  %340 = add nuw nsw i64 %314, 1
  %341 = add i64 %314, 1
  %342 = icmp ult i64 %341, 16
  br i1 %342, label %433, label %343

343:                                              ; preds = %338
  %344 = getelementptr i16, i16* %339, i64 1
  %345 = getelementptr i16, i16* %344, i64 %314
  %346 = getelementptr i16, i16* %312, i64 1
  %347 = getelementptr i16, i16* %346, i64 %314
  %348 = icmp ult i16* %339, %347
  %349 = icmp ult i16* %312, %345
  %350 = and i1 %348, %349
  br i1 %350, label %433, label %351

351:                                              ; preds = %343
  %352 = and i64 %341, -16
  %353 = sub i64 %340, %352
  %354 = getelementptr i16, i16* %312, i64 %352
  %355 = getelementptr i16, i16* %339, i64 %352
  %356 = add i64 %352, -16
  %357 = lshr exact i64 %356, 4
  %358 = add nuw nsw i64 %357, 1
  %359 = and i64 %358, 3
  %360 = icmp ult i64 %356, 48
  br i1 %360, label %412, label %361

361:                                              ; preds = %351
  %362 = sub nsw i64 %358, %359
  br label %363

363:                                              ; preds = %363, %361
  %364 = phi i64 [ 0, %361 ], [ %409, %363 ]
  %365 = phi i64 [ %362, %361 ], [ %410, %363 ]
  %366 = getelementptr i16, i16* %312, i64 %364
  %367 = getelementptr i16, i16* %339, i64 %364
  %368 = bitcast i16* %366 to <8 x i16>*
  %369 = load <8 x i16>, <8 x i16>* %368, align 2, !alias.scope !45
  %370 = getelementptr i16, i16* %366, i64 8
  %371 = bitcast i16* %370 to <8 x i16>*
  %372 = load <8 x i16>, <8 x i16>* %371, align 2, !alias.scope !45
  %373 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %369, <8 x i16>* %373, align 2, !alias.scope !48, !noalias !45
  %374 = getelementptr i16, i16* %367, i64 8
  %375 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %372, <8 x i16>* %375, align 2, !alias.scope !48, !noalias !45
  %376 = or i64 %364, 16
  %377 = getelementptr i16, i16* %312, i64 %376
  %378 = getelementptr i16, i16* %339, i64 %376
  %379 = bitcast i16* %377 to <8 x i16>*
  %380 = load <8 x i16>, <8 x i16>* %379, align 2, !alias.scope !45
  %381 = getelementptr i16, i16* %377, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !45
  %384 = bitcast i16* %378 to <8 x i16>*
  store <8 x i16> %380, <8 x i16>* %384, align 2, !alias.scope !48, !noalias !45
  %385 = getelementptr i16, i16* %378, i64 8
  %386 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %386, align 2, !alias.scope !48, !noalias !45
  %387 = or i64 %364, 32
  %388 = getelementptr i16, i16* %312, i64 %387
  %389 = getelementptr i16, i16* %339, i64 %387
  %390 = bitcast i16* %388 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !45
  %392 = getelementptr i16, i16* %388, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  %394 = load <8 x i16>, <8 x i16>* %393, align 2, !alias.scope !45
  %395 = bitcast i16* %389 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %395, align 2, !alias.scope !48, !noalias !45
  %396 = getelementptr i16, i16* %389, i64 8
  %397 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %394, <8 x i16>* %397, align 2, !alias.scope !48, !noalias !45
  %398 = or i64 %364, 48
  %399 = getelementptr i16, i16* %312, i64 %398
  %400 = getelementptr i16, i16* %339, i64 %398
  %401 = bitcast i16* %399 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !45
  %403 = getelementptr i16, i16* %399, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  %405 = load <8 x i16>, <8 x i16>* %404, align 2, !alias.scope !45
  %406 = bitcast i16* %400 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %406, align 2, !alias.scope !48, !noalias !45
  %407 = getelementptr i16, i16* %400, i64 8
  %408 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %405, <8 x i16>* %408, align 2, !alias.scope !48, !noalias !45
  %409 = add i64 %364, 64
  %410 = add i64 %365, -4
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %363, !llvm.loop !50

412:                                              ; preds = %363, %351
  %413 = phi i64 [ 0, %351 ], [ %409, %363 ]
  %414 = icmp eq i64 %359, 0
  br i1 %414, label %431, label %415

415:                                              ; preds = %412, %415
  %416 = phi i64 [ %428, %415 ], [ %413, %412 ]
  %417 = phi i64 [ %429, %415 ], [ %359, %412 ]
  %418 = getelementptr i16, i16* %312, i64 %416
  %419 = getelementptr i16, i16* %339, i64 %416
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !45
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !45
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !48, !noalias !45
  %426 = getelementptr i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !48, !noalias !45
  %428 = add i64 %416, 16
  %429 = add i64 %417, -1
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %415, !llvm.loop !51

431:                                              ; preds = %415, %412
  %432 = icmp eq i64 %341, %352
  br i1 %432, label %486, label %433

433:                                              ; preds = %431, %343, %338
  %434 = phi i64 [ %340, %343 ], [ %340, %338 ], [ %353, %431 ]
  %435 = phi i16* [ %312, %343 ], [ %312, %338 ], [ %354, %431 ]
  %436 = phi i16* [ %339, %343 ], [ %339, %338 ], [ %355, %431 ]
  %437 = add i64 %434, -1
  %438 = and i64 %434, 7
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %451, label %440

440:                                              ; preds = %433, %440
  %441 = phi i64 [ %446, %440 ], [ %434, %433 ]
  %442 = phi i16* [ %448, %440 ], [ %435, %433 ]
  %443 = phi i16* [ %447, %440 ], [ %436, %433 ]
  %444 = phi i64 [ %449, %440 ], [ %438, %433 ]
  %445 = load i16, i16* %442, align 2
  store i16 %445, i16* %443, align 2
  %446 = add i64 %441, -1
  %447 = getelementptr inbounds i16, i16* %443, i64 1
  %448 = getelementptr inbounds i16, i16* %442, i64 1
  %449 = add i64 %444, -1
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %451, label %440, !llvm.loop !52

451:                                              ; preds = %440, %433
  %452 = phi i64 [ %434, %433 ], [ %446, %440 ]
  %453 = phi i16* [ %435, %433 ], [ %448, %440 ]
  %454 = phi i16* [ %436, %433 ], [ %447, %440 ]
  %455 = icmp ult i64 %437, 7
  br i1 %455, label %486, label %456

456:                                              ; preds = %451, %456
  %457 = phi i64 [ %482, %456 ], [ %452, %451 ]
  %458 = phi i16* [ %484, %456 ], [ %453, %451 ]
  %459 = phi i16* [ %483, %456 ], [ %454, %451 ]
  %460 = load i16, i16* %458, align 2
  store i16 %460, i16* %459, align 2
  %461 = getelementptr inbounds i16, i16* %459, i64 1
  %462 = getelementptr inbounds i16, i16* %458, i64 1
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %461, align 2
  %464 = getelementptr inbounds i16, i16* %459, i64 2
  %465 = getelementptr inbounds i16, i16* %458, i64 2
  %466 = load i16, i16* %465, align 2
  store i16 %466, i16* %464, align 2
  %467 = getelementptr inbounds i16, i16* %459, i64 3
  %468 = getelementptr inbounds i16, i16* %458, i64 3
  %469 = load i16, i16* %468, align 2
  store i16 %469, i16* %467, align 2
  %470 = getelementptr inbounds i16, i16* %459, i64 4
  %471 = getelementptr inbounds i16, i16* %458, i64 4
  %472 = load i16, i16* %471, align 2
  store i16 %472, i16* %470, align 2
  %473 = getelementptr inbounds i16, i16* %459, i64 5
  %474 = getelementptr inbounds i16, i16* %458, i64 5
  %475 = load i16, i16* %474, align 2
  store i16 %475, i16* %473, align 2
  %476 = getelementptr inbounds i16, i16* %459, i64 6
  %477 = getelementptr inbounds i16, i16* %458, i64 6
  %478 = load i16, i16* %477, align 2
  store i16 %478, i16* %476, align 2
  %479 = getelementptr inbounds i16, i16* %459, i64 7
  %480 = getelementptr inbounds i16, i16* %458, i64 7
  %481 = load i16, i16* %480, align 2
  store i16 %481, i16* %479, align 2
  %482 = add i64 %457, -8
  %483 = getelementptr inbounds i16, i16* %459, i64 8
  %484 = getelementptr inbounds i16, i16* %458, i64 8
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %486, label %456, !llvm.loop !53

486:                                              ; preds = %451, %456, %431, %307
  %487 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %302, i64 1
  %488 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %301, i64 1
  %489 = icmp eq %"class.std::__1::basic_string.14"* %487, %2
  br i1 %489, label %490, label %300

490:                                              ; preds = %486
  %491 = ptrtoint %"class.std::__1::basic_string.14"* %488 to i64
  br label %492

492:                                              ; preds = %288, %490
  %493 = phi i64 [ %298, %288 ], [ %491, %490 ]
  store i64 %493, i64* %297, align 8
  br label %494

494:                                              ; preds = %233, %250, %492
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.14"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.14"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.14"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.14"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !54
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !54
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !57, !noalias !54
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !57, !noalias !54
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !54
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !54
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !57, !noalias !54
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !57, !noalias !54
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !54
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !54
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !57, !noalias !54
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !57, !noalias !54
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !54
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !54
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !57, !noalias !54
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !57, !noalias !54
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !59

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !54
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !54
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !57, !noalias !54
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !57, !noalias !54
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !60

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !61

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !62

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !63

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !64

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !65

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !67
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !67
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !70, !noalias !67
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !70, !noalias !67
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !67
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !67
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !70, !noalias !67
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !70, !noalias !67
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !67
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !67
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !70, !noalias !67
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !70, !noalias !67
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !67
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !67
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !70, !noalias !67
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !70, !noalias !67
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !72

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !67
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !67
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !70, !noalias !67
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !70, !noalias !67
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !73

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !74

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !75

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.14"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare void @_ZN21ImportedBookmarkEntryC1ERKS_(%struct.ImportedBookmarkEntry*, %struct.ImportedBookmarkEntry* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12favicon_base16FaviconUsageDataD1Ev(%"struct.favicon_base::FaviconUsageData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.35"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #9
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #9
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #11
  %46 = bitcast %"class.std::__1::vector.35"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #10
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #11
  %61 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #9
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE14__assign_multiINS_21__tree_const_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEEEvT_SE_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %242, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %9 = bitcast %"class.std::__1::__tree"* %0 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %13, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #9
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  %19 = bitcast %"class.std::__1::__tree_node_base"* %17 to %"class.std::__1::__tree_node"*
  %20 = select i1 %18, %"class.std::__1::__tree_node"* %10, %"class.std::__1::__tree_node"* %19
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %7
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %20) #9
  br label %242

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 2
  %25 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::__tree_node"* %20 to %"class.std::__1::__tree_node_base"*
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %28
  br i1 %31, label %32, label %51

32:                                               ; preds = %27
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %33 = bitcast %"class.std::__1::__tree_end_node"** %24 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %47
  %39 = phi %"class.std::__1::__tree_node_base"* [ %48, %47 ], [ %36, %32 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 1
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %38
  %48 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %45, %43 ]
  br label %38

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::__tree_node_base"* %39 to %"class.std::__1::__tree_node"*
  br label %72

51:                                               ; preds = %27
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %52, align 8
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %24, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::__tree_end_node"* %53 to %"class.std::__1::__tree_node"*
  br label %72

59:                                               ; preds = %51, %68
  %60 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %51 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %60, i64 0, i32 1
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %59
  %69 = phi %"class.std::__1::__tree_node_base"* [ %62, %59 ], [ %66, %64 ]
  br label %59

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::__tree_node_base"* %60 to %"class.std::__1::__tree_node"*
  br label %72

72:                                               ; preds = %23, %32, %49, %57, %70
  %73 = phi %"class.std::__1::__tree_node"* [ %50, %49 ], [ %58, %57 ], [ %71, %70 ], [ null, %23 ], [ %34, %32 ]
  %74 = ptrtoint %"class.std::__1::__tree_node"* %73 to i64
  %75 = icmp eq %"class.std::__1::__tree_end_node"* %1, %2
  br i1 %75, label %222, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %78 = bitcast %"class.std::__1::__tree"* %0 to i64*
  %79 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %80

80:                                               ; preds = %76, %214
  %81 = phi %"class.std::__1::__tree_node"* [ %73, %76 ], [ %216, %214 ]
  %82 = phi i64 [ %74, %76 ], [ %186, %214 ]
  %83 = phi %"class.std::__1::__tree_node"* [ %20, %76 ], [ %81, %214 ]
  %84 = phi %"class.std::__1::__tree_end_node"* [ %1, %76 ], [ %215, %214 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to %class.GURL*
  %87 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1
  %88 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %87, %class.GURL* dereferenceable(120) %86) #9
  %89 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %77, align 8
  %90 = icmp eq %"class.std::__1::__tree_node"* %89, null
  br i1 %90, label %112, label %91

91:                                               ; preds = %80, %109
  %92 = phi %"class.std::__1::__tree_node"* [ %111, %109 ], [ %89, %80 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1
  %94 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %87, %class.GURL* dereferenceable(120) %93) #9
  br i1 %94, label %95, label %102

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %109

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %112

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 1
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 0, i32 0
  br label %112

109:                                              ; preds = %102, %95
  %110 = phi %"class.std::__1::__tree_node_base"* [ %97, %95 ], [ %104, %102 ]
  %111 = bitcast %"class.std::__1::__tree_node_base"* %110 to %"class.std::__1::__tree_node"*
  br label %91

112:                                              ; preds = %80, %106, %99
  %113 = phi %"class.std::__1::__tree_end_node"* [ %101, %99 ], [ %108, %106 ], [ %11, %80 ]
  %114 = phi %"class.std::__1::__tree_node_base"** [ %100, %99 ], [ %107, %106 ], [ %12, %80 ]
  %115 = bitcast %"class.std::__1::__tree_node"* %83 to %"class.std::__1::__tree_node_base"*
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 2
  %117 = bitcast %"class.std::__1::__tree_node"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %113, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = bitcast %"class.std::__1::__tree_node_base"** %114 to %"class.std::__1::__tree_node"**
  store %"class.std::__1::__tree_node"* %83, %"class.std::__1::__tree_node"** %118, align 8
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %112
  %124 = ptrtoint %"class.std::__1::__tree_node_base"* %121 to i64
  store i64 %124, i64* %78, align 8
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  br label %126

126:                                              ; preds = %112, %123
  %127 = phi %"class.std::__1::__tree_node_base"* [ %115, %112 ], [ %125, %123 ]
  %128 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %128, %"class.std::__1::__tree_node_base"* %127) #9
  %129 = load i64, i64* %4, align 8
  %130 = add i64 %129, 1
  store i64 %130, i64* %4, align 8
  %131 = icmp eq i64 %82, 0
  br i1 %131, label %185, label %132

132:                                              ; preds = %126
  %133 = inttoptr i64 %82 to %"class.std::__1::__tree_node"*
  %134 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %133, i64 0, i32 0, i32 2
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_end_node"* %135, null
  br i1 %136, label %182, label %137

137:                                              ; preds = %132
  %138 = inttoptr i64 %82 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, %138
  br i1 %141, label %142, label %161

142:                                              ; preds = %137
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %139, align 8
  %143 = bitcast %"class.std::__1::__tree_end_node"** %134 to %"class.std::__1::__tree_node"**
  %144 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %144, i64 0, i32 0, i32 1
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %182, label %148

148:                                              ; preds = %142, %157
  %149 = phi %"class.std::__1::__tree_node_base"* [ %158, %157 ], [ %146, %142 ]
  %150 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 0, i32 0
  %151 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node_base"* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %149, i64 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %153, %148
  %158 = phi %"class.std::__1::__tree_node_base"* [ %151, %148 ], [ %155, %153 ]
  br label %148

159:                                              ; preds = %153
  %160 = bitcast %"class.std::__1::__tree_node_base"* %149 to %"class.std::__1::__tree_node"*
  br label %182

161:                                              ; preds = %137
  %162 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %162, align 8
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %167, label %169

167:                                              ; preds = %161
  %168 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_node"*
  br label %182

169:                                              ; preds = %161, %178
  %170 = phi %"class.std::__1::__tree_node_base"* [ %179, %178 ], [ %165, %161 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 1
  %176 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  %177 = icmp eq %"class.std::__1::__tree_node_base"* %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %174, %169
  %179 = phi %"class.std::__1::__tree_node_base"* [ %172, %169 ], [ %176, %174 ]
  br label %169

180:                                              ; preds = %174
  %181 = bitcast %"class.std::__1::__tree_node_base"* %170 to %"class.std::__1::__tree_node"*
  br label %182

182:                                              ; preds = %180, %167, %159, %142, %132
  %183 = phi %"class.std::__1::__tree_node"* [ %160, %159 ], [ %168, %167 ], [ %181, %180 ], [ null, %132 ], [ %144, %142 ]
  %184 = ptrtoint %"class.std::__1::__tree_node"* %183 to i64
  br label %185

185:                                              ; preds = %126, %182
  %186 = phi i64 [ 0, %126 ], [ %184, %182 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 1, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %190, label %198

190:                                              ; preds = %185
  %191 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.std::__1::__tree_node_base"*
  %192 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 2
  %193 = bitcast %"class.std::__1::__tree_end_node"* %192 to %"class.std::__1::__tree_end_node"**
  %194 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %194, i64 0, i32 0
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = icmp eq %"class.std::__1::__tree_node_base"* %196, %191
  br i1 %197, label %214, label %205

198:                                              ; preds = %185, %198
  %199 = phi %"class.std::__1::__tree_node_base"* [ %201, %198 ], [ %188, %185 ]
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, null
  br i1 %202, label %203, label %198

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %199, i64 0, i32 0
  br label %214

205:                                              ; preds = %190, %205
  %206 = phi %"class.std::__1::__tree_end_node"** [ %209, %205 ], [ %193, %190 ]
  %207 = bitcast %"class.std::__1::__tree_end_node"** %206 to %"class.std::__1::__tree_node_base"**
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %208, i64 0, i32 2
  %210 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %209, align 8
  %211 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %210, i64 0, i32 0
  %212 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  %213 = icmp eq %"class.std::__1::__tree_node_base"* %212, %208
  br i1 %213, label %214, label %205

214:                                              ; preds = %205, %190, %203
  %215 = phi %"class.std::__1::__tree_end_node"* [ %204, %203 ], [ %194, %190 ], [ %210, %205 ]
  %216 = inttoptr i64 %186 to %"class.std::__1::__tree_node"*
  %217 = icmp ne %"class.std::__1::__tree_node"* %81, null
  %218 = icmp ne %"class.std::__1::__tree_end_node"* %215, %2
  %219 = and i1 %218, %217
  br i1 %219, label %80, label %220

220:                                              ; preds = %214
  %221 = inttoptr i64 %186 to %"class.std::__1::__tree_node"*
  br label %222

222:                                              ; preds = %72, %220
  %223 = phi %"class.std::__1::__tree_node"* [ %73, %72 ], [ %221, %220 ]
  %224 = phi %"class.std::__1::__tree_end_node"* [ %1, %72 ], [ %215, %220 ]
  %225 = phi %"class.std::__1::__tree_node"* [ %20, %72 ], [ %81, %220 ]
  %226 = phi i64 [ %74, %72 ], [ %186, %220 ]
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %225) #9
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %242, label %228

228:                                              ; preds = %222
  %229 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %223, i64 0, i32 0, i32 2
  %230 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %229, align 8
  %231 = icmp eq %"class.std::__1::__tree_end_node"* %230, null
  br i1 %231, label %240, label %232

232:                                              ; preds = %228, %232
  %233 = phi %"class.std::__1::__tree_end_node"* [ %236, %232 ], [ %230, %228 ]
  %234 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %233, i64 2
  %235 = bitcast %"class.std::__1::__tree_end_node"* %234 to %"class.std::__1::__tree_end_node"**
  %236 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %235, align 8
  %237 = icmp eq %"class.std::__1::__tree_end_node"* %236, null
  br i1 %237, label %238, label %232

238:                                              ; preds = %232
  %239 = bitcast %"class.std::__1::__tree_end_node"* %233 to %"class.std::__1::__tree_node"*
  br label %240

240:                                              ; preds = %238, %228
  %241 = phi %"class.std::__1::__tree_node"* [ %223, %228 ], [ %239, %238 ]
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %241) #9
  br label %242

242:                                              ; preds = %22, %240, %222, %3
  %243 = phi %"class.std::__1::__tree_end_node"* [ %1, %3 ], [ %224, %222 ], [ %224, %240 ], [ %1, %22 ]
  %244 = icmp eq %"class.std::__1::__tree_end_node"* %243, %2
  br i1 %244, label %280, label %245

245:                                              ; preds = %242, %277
  %246 = phi %"class.std::__1::__tree_end_node"* [ %278, %277 ], [ %243, %242 ]
  %247 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %246, i64 4
  %248 = bitcast %"class.std::__1::__tree_end_node"* %247 to %class.GURL*
  %249 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE15__emplace_multiIJRKS1_EEENS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEDpOT_(%"class.std::__1::__tree"* %0, %class.GURL* dereferenceable(120) %248) #9
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %246, i64 1, i32 0
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %253, label %261

253:                                              ; preds = %245
  %254 = bitcast %"class.std::__1::__tree_end_node"* %246 to %"class.std::__1::__tree_node_base"*
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %246, i64 2
  %256 = bitcast %"class.std::__1::__tree_end_node"* %255 to %"class.std::__1::__tree_end_node"**
  %257 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %257, i64 0, i32 0
  %259 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %258, align 8
  %260 = icmp eq %"class.std::__1::__tree_node_base"* %259, %254
  br i1 %260, label %277, label %268

261:                                              ; preds = %245, %261
  %262 = phi %"class.std::__1::__tree_node_base"* [ %264, %261 ], [ %251, %245 ]
  %263 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %262, i64 0, i32 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, null
  br i1 %265, label %266, label %261

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %262, i64 0, i32 0
  br label %277

268:                                              ; preds = %253, %268
  %269 = phi %"class.std::__1::__tree_end_node"** [ %272, %268 ], [ %256, %253 ]
  %270 = bitcast %"class.std::__1::__tree_end_node"** %269 to %"class.std::__1::__tree_node_base"**
  %271 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %270, align 8
  %272 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %271, i64 0, i32 2
  %273 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %273, i64 0, i32 0
  %275 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %274, align 8
  %276 = icmp eq %"class.std::__1::__tree_node_base"* %275, %271
  br i1 %276, label %277, label %268

277:                                              ; preds = %268, %253, %266
  %278 = phi %"class.std::__1::__tree_end_node"* [ %267, %266 ], [ %257, %253 ], [ %273, %268 ]
  %279 = icmp eq %"class.std::__1::__tree_end_node"* %278, %2
  br i1 %279, label %280, label %245

280:                                              ; preds = %277, %242
  ret void
}

declare zeroext i1 @_ZNK4GURLltERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !76
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !76
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !76
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE7destroyEPNS_11__tree_nodeIS1_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %10) #9
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void

12:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE15__emplace_multiIJRKS1_EEENS_15__tree_iteratorIS1_PNS_11__tree_nodeIS1_PvEElEEDpOT_(%"class.std::__1::__tree"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 152) #11, !noalias !77
  %4 = getelementptr inbounds i8, i8* %3, i64 32
  %5 = bitcast i8* %4 to %class.GURL*
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %1) #9, !noalias !77
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %2, %28
  %11 = phi %"class.std::__1::__tree_node"* [ %30, %28 ], [ %8, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %13 = tail call zeroext i1 @_ZNK4GURLltERKS_(%class.GURL* %5, %class.GURL* dereferenceable(120) %12) #9
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node_base"* %16, null
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %33

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %33

28:                                               ; preds = %21, %14
  %29 = phi %"class.std::__1::__tree_node_base"* [ %16, %14 ], [ %23, %21 ]
  %30 = bitcast %"class.std::__1::__tree_node_base"* %29 to %"class.std::__1::__tree_node"*
  br label %10

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  br label %33

33:                                               ; preds = %18, %25, %31
  %34 = phi %"class.std::__1::__tree_end_node"* [ %6, %31 ], [ %20, %18 ], [ %27, %25 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %32, %31 ], [ %19, %18 ], [ %26, %25 ]
  %36 = bitcast i8* %3 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds i8, i8* %3, i64 16
  %38 = bitcast i8* %37 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %34, %"class.std::__1::__tree_end_node"** %38, align 8
  %39 = bitcast %"class.std::__1::__tree_node_base"** %35 to i8**
  store i8* %3, i8** %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %33
  %46 = ptrtoint %"class.std::__1::__tree_node_base"* %43 to i64
  %47 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %46, i64* %47, align 8
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  br label %49

49:                                               ; preds = %45, %33
  %50 = phi %"class.std::__1::__tree_node_base"* [ %36, %33 ], [ %48, %45 ]
  %51 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %52, %"class.std::__1::__tree_node_base"* %50) #9
  %53 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = bitcast i8* %3 to %"class.std::__1::__tree_end_node"*
  ret %"class.std::__1::__tree_end_node"* %56
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN12favicon_base16FaviconUsageDataC1ERKS0_(%"struct.favicon_base::FaviconUsageData"*, %"struct.favicon_base::FaviconUsageData"* dereferenceable(168)) unnamed_addr #1

declare void @_ZN14ImporterURLRowC1ERKS_(%struct.ImporterURLRow*, %struct.ImporterURLRow* dereferenceable(168)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN29ImporterAutofillFormDataEntryD1Ev(%struct.ImporterAutofillFormDataEntry*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29ImporterAutofillFormDataEntryC2ERKS_(%struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry* dereferenceable(72)) unnamed_addr #8 comdat align 2 {
  %3 = bitcast %struct.ImporterAutofillFormDataEntry* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.ImporterAutofillFormDataEntry* %0 to i8*
  %9 = bitcast %struct.ImporterAutofillFormDataEntry* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %struct.ImporterAutofillFormDataEntry* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %struct.ImporterAutofillFormDataEntry* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %struct.ImporterAutofillFormDataEntry* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #10
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #10
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %struct.ImporterAutofillFormDataEntry* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !80
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !80
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !83, !noalias !80
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !83, !noalias !80
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !80
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !80
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !83, !noalias !80
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !83, !noalias !80
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !80
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !80
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !83, !noalias !80
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !83, !noalias !80
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !80
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !80
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !83, !noalias !80
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !83, !noalias !80
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !85

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !80
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !80
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !83, !noalias !80
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !83, !noalias !80
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !86

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !87

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !88

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %0, i64 0, i32 1
  %187 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.14"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.14"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.14"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #9
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.14", %"class.std::__1::basic_string.14"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.14"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.14"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.14"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #10
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #10
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #11
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.14"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !89
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !89
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !92, !noalias !89
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !92, !noalias !89
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !89
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !89
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !92, !noalias !89
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !92, !noalias !89
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !89
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !89
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !92, !noalias !89
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !92, !noalias !89
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !89
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !89
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !92, !noalias !89
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !92, !noalias !89
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !94

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !89
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !89
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !92, !noalias !89
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !92, !noalias !89
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !95

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !96

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !97

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %0, i64 0, i32 2
  %372 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %1, i64 0, i32 2
  %373 = bitcast i32* %371 to i8*
  %374 = bitcast i32* %372 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %373, i8* align 8 %374, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE7emplaceIJjS7_EEENS_11__wrap_iterIPS8_EENSC_IPKS8_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"struct.std::__1::__split_buffer", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair"* %10, %12
  %14 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  br i1 %13, label %15, label %135

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair"* %10, %1
  br i1 %16, label %17, label %26

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %19 = load i32, i32* %2, align 4
  store i32 %19, i32* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #9
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair"* %23 to i64
  %25 = bitcast %"struct.std::__1::pair"** %9 to i64*
  store i64 %24, i64* %25, align 8
  br label %335

26:                                               ; preds = %15
  %27 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %27)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 15, i1 false)
  %28 = load i32, i32* %2, align 4
  %29 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %30 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 %33, i64 15, i1 false)
  %34 = getelementptr inbounds i8, i8* %29, i64 23
  %35 = load i8, i8* %34, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #9
  %36 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %38 = ptrtoint %"struct.std::__1::pair"* %36 to i64
  %39 = ptrtoint %"struct.std::__1::pair"* %37 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %41
  %43 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %44 = icmp ult %"struct.std::__1::pair"* %42, %36
  br i1 %44, label %45, label %72

45:                                               ; preds = %26
  %46 = sub nsw i64 0, %41
  %47 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %46, i32 0
  %48 = bitcast i32* %47 to i8*
  %49 = xor i64 %5, -1
  %50 = getelementptr i8, i8* %48, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = and i64 %51, 32
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %55, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %41, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #9
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 1
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  br label %64

64:                                               ; preds = %54, %45
  %65 = phi %"struct.std::__1::pair"* [ %36, %45 ], [ %63, %54 ]
  %66 = phi %"struct.std::__1::pair"* [ %42, %45 ], [ %62, %54 ]
  %67 = phi %"struct.std::__1::pair"* [ undef, %45 ], [ %63, %54 ]
  %68 = icmp ult i8* %50, inttoptr (i64 32 to i8*)
  br i1 %68, label %69, label %98

69:                                               ; preds = %98, %64
  %70 = phi %"struct.std::__1::pair"* [ %67, %64 ], [ %116, %98 ]
  %71 = ptrtoint %"struct.std::__1::pair"* %70 to i64
  br label %72

72:                                               ; preds = %69, %26
  %73 = phi i64 [ %71, %69 ], [ %38, %26 ]
  store i64 %73, i64* %43, align 8
  %74 = icmp eq i64 %40, 0
  br i1 %74, label %118, label %75

75:                                               ; preds = %72, %92
  %76 = phi %"struct.std::__1::pair"* [ %79, %92 ], [ %36, %72 ]
  %77 = phi %"struct.std::__1::pair"* [ %78, %92 ], [ %42, %72 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 -1
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 0, i32 0
  store i32 %81, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %77, i64 -1, i32 1
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %76, i64 -1, i32 1
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #11
  br label %92

92:                                               ; preds = %89, %75
  %93 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #9
  %95 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 0, i8* %96, align 1
  store i8 0, i8* %94, align 1
  %97 = icmp eq %"struct.std::__1::pair"* %78, %1
  br i1 %97, label %118, label %75

98:                                               ; preds = %64, %98
  %99 = phi %"struct.std::__1::pair"* [ %116, %98 ], [ %65, %64 ]
  %100 = phi %"struct.std::__1::pair"* [ %115, %98 ], [ %66, %64 ]
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  store i32 %103, i32* %101, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 0, i32 1
  %106 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %107 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #9
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 1, i32 0
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 1, i32 0
  %110 = load i32, i32* %109, align 8
  store i32 %110, i32* %108, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 1, i32 1
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 1, i32 1
  %113 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  %114 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 24, i1 false) #9
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 2
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 2
  %117 = icmp ult %"struct.std::__1::pair"* %115, %36
  br i1 %117, label %98, label %69

118:                                              ; preds = %92, %72
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i32 %28, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %121 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #11
  br label %128

128:                                              ; preds = %125, %118
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = bitcast i8** %129 to i64*
  store i64 %31, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast i64* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* nonnull align 8 %27, i64 15, i1 false)
  %133 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %134 = getelementptr inbounds i8, i8* %133, i64 31
  store i8 %35, i8* %134, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %27)
  br label %335

135:                                              ; preds = %4
  %136 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  %137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %138 = bitcast %"struct.std::__1::__split_buffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %138) #9
  %139 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %7, i64 0, i32 0
  %140 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %7, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %7, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %7, i64 0, i32 3, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %7, i64 0, i32 3, i32 1, i32 0
  %144 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %145 = bitcast %"class.std::__1::vector"* %0 to i64*
  %146 = bitcast %"struct.std::__1::__split_buffer"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 40, i1 false)
  %147 = load i64, i64* %145, align 8
  %148 = sub i64 %136, %147
  %149 = ashr exact i64 %148, 5
  %150 = add nsw i64 %149, 1
  %151 = icmp ugt i64 %150, 576460752303423487
  br i1 %151, label %152, label %154

152:                                              ; preds = %135
  %153 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %153) #10
  unreachable

154:                                              ; preds = %135
  %155 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %156 = sub i64 %14, %147
  %157 = ashr exact i64 %156, 5
  %158 = icmp ult i64 %157, 288230376151711743
  br i1 %158, label %163, label %159

159:                                              ; preds = %154
  %160 = sub i64 %5, %147
  %161 = ashr exact i64 %160, 5
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %142, align 8
  %162 = bitcast %"class.std::__1::allocator"** %143 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %137, %"class.std::__1::__compressed_pair"** %162, align 8
  br label %174

163:                                              ; preds = %154
  %164 = ashr exact i64 %156, 4
  %165 = icmp ult i64 %164, %150
  %166 = select i1 %165, i64 %150, i64 %164
  %167 = sub i64 %5, %147
  %168 = ashr exact i64 %167, 5
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %142, align 8
  %169 = bitcast %"class.std::__1::allocator"** %143 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %137, %"class.std::__1::__compressed_pair"** %169, align 8
  %170 = icmp eq i64 %166, 0
  br i1 %170, label %180, label %171

171:                                              ; preds = %163
  %172 = icmp ugt i64 %166, 576460752303423487
  br i1 %172, label %173, label %174

173:                                              ; preds = %171
  tail call void @abort() #10
  unreachable

174:                                              ; preds = %159, %171
  %175 = phi i64 [ 576460752303423487, %159 ], [ %166, %171 ]
  %176 = phi i64 [ %161, %159 ], [ %168, %171 ]
  %177 = shl i64 %175, 5
  %178 = tail call i8* @_Znwm(i64 %177) #11
  %179 = bitcast i8* %178 to %"struct.std::__1::pair"*
  br label %180

180:                                              ; preds = %163, %174
  %181 = phi i64 [ %176, %174 ], [ %168, %163 ]
  %182 = phi i64 [ %175, %174 ], [ 0, %163 ]
  %183 = phi %"struct.std::__1::pair"* [ %179, %174 ], [ null, %163 ]
  store %"struct.std::__1::pair"* %183, %"struct.std::__1::pair"** %139, align 8
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 %181
  store %"struct.std::__1::pair"* %184, %"struct.std::__1::pair"** %141, align 8
  store %"struct.std::__1::pair"* %184, %"struct.std::__1::pair"** %140, align 8
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %183, i64 %182
  store %"struct.std::__1::pair"* %185, %"struct.std::__1::pair"** %142, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERNS5_IS8_EEE12emplace_backIJjS7_EEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %7, i32* dereferenceable(4) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3)
  %186 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %140, align 8
  %187 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %188 = icmp eq %"struct.std::__1::pair"* %187, %1
  br i1 %188, label %235, label %189

189:                                              ; preds = %180
  %190 = ptrtoint %"struct.std::__1::pair"* %187 to i64
  %191 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 0
  %192 = ptrtoint i32* %191 to i64
  %193 = sub i64 %192, %190
  %194 = and i64 %193, 32
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %207

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %186, i64 -1, i32 0
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %197, i64 0, i32 0
  %200 = load i32, i32* %199, align 8
  store i32 %200, i32* %198, align 8
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %186, i64 -1, i32 1
  %202 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 -1, i32 1
  %203 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 24, i1 false) #9
  %205 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %140, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 -1
  store %"struct.std::__1::pair"* %206, %"struct.std::__1::pair"** %140, align 8
  br label %207

207:                                              ; preds = %196, %189
  %208 = phi %"struct.std::__1::pair"* [ undef, %189 ], [ %206, %196 ]
  %209 = phi %"struct.std::__1::pair"* [ %186, %189 ], [ %206, %196 ]
  %210 = phi %"struct.std::__1::pair"* [ %1, %189 ], [ %197, %196 ]
  %211 = icmp ult i64 %193, 32
  br i1 %211, label %235, label %212

212:                                              ; preds = %207, %212
  %213 = phi %"struct.std::__1::pair"* [ %233, %212 ], [ %209, %207 ]
  %214 = phi %"struct.std::__1::pair"* [ %224, %212 ], [ %210, %207 ]
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %213, i64 -1, i32 0
  %216 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %214, i64 -1, i32 0
  %217 = load i32, i32* %216, align 8
  store i32 %217, i32* %215, align 8
  %218 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %213, i64 -1, i32 1
  %219 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %214, i64 -1, i32 1
  %220 = bitcast %"class.std::__1::basic_string"* %218 to i8*
  %221 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %221, i8 0, i64 24, i1 false) #9
  %222 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %140, align 8
  %223 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 -1
  store %"struct.std::__1::pair"* %223, %"struct.std::__1::pair"** %140, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %214, i64 -2
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 -2, i32 0
  %226 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %224, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  store i32 %227, i32* %225, align 8
  %228 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %222, i64 -2, i32 1
  %229 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %214, i64 -2, i32 1
  %230 = bitcast %"class.std::__1::basic_string"* %228 to i8*
  %231 = bitcast %"class.std::__1::basic_string"* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %230, i8* align 8 %231, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 24, i1 false) #9
  %232 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %140, align 8
  %233 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %232, i64 -1
  store %"struct.std::__1::pair"* %233, %"struct.std::__1::pair"** %140, align 8
  %234 = icmp eq %"struct.std::__1::pair"* %224, %187
  br i1 %234, label %235, label %212

235:                                              ; preds = %207, %212, %180
  %236 = phi %"struct.std::__1::pair"* [ %186, %180 ], [ %208, %207 ], [ %233, %212 ]
  %237 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %238 = icmp eq %"struct.std::__1::pair"* %237, %1
  br i1 %238, label %239, label %245

239:                                              ; preds = %235
  %240 = ptrtoint %"struct.std::__1::pair"* %237 to i64
  %241 = ptrtoint %"struct.std::__1::pair"* %236 to i64
  %242 = bitcast %"struct.std::__1::pair"** %140 to i64*
  %243 = bitcast %"struct.std::__1::pair"** %141 to i64*
  %244 = load i64, i64* %243, align 8
  br label %298

245:                                              ; preds = %235
  %246 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %141, align 8
  %247 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %237, i64 -1, i32 0
  %248 = ptrtoint i32* %247 to i64
  %249 = sub i64 %248, %5
  %250 = and i64 %249, 32
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %263

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 0, i32 0
  %254 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  store i32 %255, i32* %253, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 0, i32 1
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %258 = bitcast %"class.std::__1::basic_string"* %256 to i8*
  %259 = bitcast %"class.std::__1::basic_string"* %257 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 24, i1 false) #9
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %261 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %141, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 1
  store %"struct.std::__1::pair"* %262, %"struct.std::__1::pair"** %141, align 8
  br label %263

263:                                              ; preds = %252, %245
  %264 = phi %"struct.std::__1::pair"* [ undef, %245 ], [ %262, %252 ]
  %265 = phi %"struct.std::__1::pair"* [ %246, %245 ], [ %262, %252 ]
  %266 = phi %"struct.std::__1::pair"* [ %1, %245 ], [ %260, %252 ]
  %267 = icmp ult i64 %249, 32
  br i1 %267, label %291, label %268

268:                                              ; preds = %263, %268
  %269 = phi %"struct.std::__1::pair"* [ %289, %268 ], [ %265, %263 ]
  %270 = phi %"struct.std::__1::pair"* [ %287, %268 ], [ %266, %263 ]
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %269, i64 0, i32 0
  %272 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 0, i32 0
  %273 = load i32, i32* %272, align 8
  store i32 %273, i32* %271, align 8
  %274 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %269, i64 0, i32 1
  %275 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 0, i32 1
  %276 = bitcast %"class.std::__1::basic_string"* %274 to i8*
  %277 = bitcast %"class.std::__1::basic_string"* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 24, i1 false) #9
  %278 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %141, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %278, i64 1
  store %"struct.std::__1::pair"* %279, %"struct.std::__1::pair"** %141, align 8
  %280 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %279, i64 0, i32 0
  %281 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 1, i32 0
  %282 = load i32, i32* %281, align 8
  store i32 %282, i32* %280, align 8
  %283 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %278, i64 1, i32 1
  %284 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 1, i32 1
  %285 = bitcast %"class.std::__1::basic_string"* %283 to i8*
  %286 = bitcast %"class.std::__1::basic_string"* %284 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %285, i8* align 8 %286, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %286, i8 0, i64 24, i1 false) #9
  %287 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %270, i64 2
  %288 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %141, align 8
  %289 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 1
  store %"struct.std::__1::pair"* %289, %"struct.std::__1::pair"** %141, align 8
  %290 = icmp eq %"struct.std::__1::pair"* %287, %237
  br i1 %290, label %291, label %268

291:                                              ; preds = %268, %263
  %292 = phi %"struct.std::__1::pair"* [ %264, %263 ], [ %289, %268 ]
  %293 = ptrtoint %"struct.std::__1::pair"* %292 to i64
  %294 = bitcast %"struct.std::__1::pair"** %140 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = load i64, i64* %144, align 8
  %297 = bitcast %"struct.std::__1::pair"** %141 to i64*
  br label %298

298:                                              ; preds = %239, %291
  %299 = phi i64* [ %243, %239 ], [ %297, %291 ]
  %300 = phi i64 [ %244, %239 ], [ %293, %291 ]
  %301 = phi i64 [ %240, %239 ], [ %296, %291 ]
  %302 = phi i64* [ %242, %239 ], [ %294, %291 ]
  %303 = phi i64 [ %241, %239 ], [ %295, %291 ]
  %304 = load i64, i64* %145, align 8
  store i64 %303, i64* %145, align 8
  store i64 %304, i64* %302, align 8
  store i64 %300, i64* %144, align 8
  store i64 %301, i64* %299, align 8
  %305 = load i64, i64* %155, align 8
  %306 = bitcast %"struct.std::__1::pair"** %142 to i64*
  %307 = load i64, i64* %306, align 8
  store i64 %307, i64* %155, align 8
  store i64 %305, i64* %306, align 8
  %308 = bitcast %"struct.std::__1::__split_buffer"* %7 to i64*
  store i64 %304, i64* %308, align 8
  %309 = inttoptr i64 %304 to %"struct.std::__1::pair"*
  %310 = inttoptr i64 %301 to %"struct.std::__1::pair"*
  %311 = icmp eq %"struct.std::__1::pair"* %310, %309
  br i1 %311, label %329, label %312

312:                                              ; preds = %298, %324
  %313 = phi %"struct.std::__1::pair"* [ %325, %324 ], [ %310, %298 ]
  %314 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %313, i64 -1
  store %"struct.std::__1::pair"* %314, %"struct.std::__1::pair"** %141, align 8
  %315 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %313, i64 -1, i32 1
  %316 = bitcast %"class.std::__1::basic_string"* %315 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %317 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %316, i64 0, i32 1, i32 0
  %318 = load i8, i8* %317, align 1
  %319 = icmp slt i8 %318, 0
  br i1 %319, label %320, label %324

320:                                              ; preds = %312
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %315, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load i8*, i8** %321, align 8
  call void @_ZdlPv(i8* %322) #11
  %323 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %141, align 8
  br label %324

324:                                              ; preds = %320, %312
  %325 = phi %"struct.std::__1::pair"* [ %314, %312 ], [ %323, %320 ]
  %326 = icmp eq %"struct.std::__1::pair"* %325, %309
  br i1 %326, label %327, label %312

327:                                              ; preds = %324
  %328 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %139, align 8
  br label %329

329:                                              ; preds = %327, %298
  %330 = phi %"struct.std::__1::pair"* [ %328, %327 ], [ %309, %298 ]
  %331 = icmp eq %"struct.std::__1::pair"* %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %329
  %333 = bitcast %"struct.std::__1::pair"* %330 to i8*
  call void @_ZdlPv(i8* %333) #11
  br label %334

334:                                              ; preds = %329, %332
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %138) #9
  br label %335

335:                                              ; preds = %17, %128, %334
  %336 = phi %"struct.std::__1::pair"* [ %1, %17 ], [ %1, %128 ], [ %186, %334 ]
  ret %"struct.std::__1::pair"* %336
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIjNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEERNS5_IS8_EEE12emplace_backIJjS7_EEEvDpOT_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %147

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair"* %12, %14
  %16 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  br i1 %15, label %17, label %54

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 5
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %22
  %24 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %24, label %50, label %25

25:                                               ; preds = %17, %40
  %26 = phi %"struct.std::__1::pair"* [ %46, %40 ], [ %23, %17 ]
  %27 = phi %"struct.std::__1::pair"* [ %45, %40 ], [ %12, %17 ]
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %37, %25
  %41 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #9
  %43 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 0, i8* %44, align 1
  store i8 0, i8* %42, align 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %27, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %47 = icmp eq %"struct.std::__1::pair"* %45, %5
  br i1 %47, label %48, label %25

48:                                               ; preds = %40
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %50

50:                                               ; preds = %48, %17
  %51 = phi %"struct.std::__1::pair"* [ %5, %17 ], [ %49, %48 ]
  %52 = phi %"struct.std::__1::pair"* [ %23, %17 ], [ %46, %48 ]
  store %"struct.std::__1::pair"* %52, %"struct.std::__1::pair"** %4, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %51, i64 %22
  store %"struct.std::__1::pair"* %53, %"struct.std::__1::pair"** %11, align 8
  br label %147

54:                                               ; preds = %10
  %55 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %56 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %57 = sub i64 %9, %16
  %58 = ashr exact i64 %57, 4
  %59 = icmp eq i64 %57, 0
  %60 = select i1 %59, i64 1, i64 %58
  %61 = icmp ugt i64 %60, 576460752303423487
  br i1 %61, label %62, label %63

62:                                               ; preds = %54
  tail call void @abort() #10
  unreachable

63:                                               ; preds = %54
  %64 = lshr i64 %60, 2
  %65 = shl i64 %60, 5
  %66 = tail call i8* @_Znwm(i64 %65) #11
  %67 = bitcast i8* %66 to %"struct.std::__1::pair"*
  %68 = ptrtoint i8* %66 to i64
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 %64
  %70 = ptrtoint %"struct.std::__1::pair"* %69 to i64
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 %60
  %72 = ptrtoint %"struct.std::__1::pair"* %71 to i64
  %73 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %74 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %75 = sub i64 %74, %73
  %76 = ashr exact i64 %75, 5
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 %76
  %78 = icmp eq i64 %75, 0
  br i1 %78, label %122, label %79

79:                                               ; preds = %63
  %80 = add i64 %75, -32
  %81 = and i64 %80, 32
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %93

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 0, i32 0
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %84, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %67, i64 %64, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 0, i32 1
  %89 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #9
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %69, i64 1
  %92 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 1
  br label %93

93:                                               ; preds = %83, %79
  %94 = phi %"struct.std::__1::pair"* [ %69, %79 ], [ %91, %83 ]
  %95 = phi %"struct.std::__1::pair"* [ %12, %79 ], [ %92, %83 ]
  %96 = icmp ult i64 %80, 32
  br i1 %96, label %117, label %97

97:                                               ; preds = %93, %97
  %98 = phi %"struct.std::__1::pair"* [ %114, %97 ], [ %94, %93 ]
  %99 = phi %"struct.std::__1::pair"* [ %115, %97 ], [ %95, %93 ]
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 0
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  store i32 %102, i32* %100, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 0, i32 1
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 0, i32 1
  %105 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #9
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 1, i32 0
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 1, i32 0
  %109 = load i32, i32* %108, align 8
  store i32 %109, i32* %107, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 1, i32 1
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 1, i32 1
  %112 = bitcast %"class.std::__1::basic_string"* %110 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #9
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %98, i64 2
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %99, i64 2
  %116 = icmp eq %"struct.std::__1::pair"* %77, %114
  br i1 %116, label %117, label %97

117:                                              ; preds = %97, %93
  %118 = ptrtoint %"struct.std::__1::pair"* %77 to i64
  %119 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %120 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %121 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %122

122:                                              ; preds = %63, %117
  %123 = phi %"struct.std::__1::pair"* [ %121, %117 ], [ %5, %63 ]
  %124 = phi %"struct.std::__1::pair"* [ %120, %117 ], [ %12, %63 ]
  %125 = phi %"struct.std::__1::pair"* [ %119, %117 ], [ %14, %63 ]
  %126 = phi i64 [ %118, %117 ], [ %70, %63 ]
  store i64 %68, i64* %56, align 8
  %127 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %70, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %126, i64* %128, align 8
  store i64 %72, i64* %55, align 8
  %129 = icmp eq %"struct.std::__1::pair"* %123, %124
  br i1 %129, label %143, label %130

130:                                              ; preds = %122, %141
  %131 = phi %"struct.std::__1::pair"* [ %132, %141 ], [ %123, %122 ]
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 -1
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 -1, i32 1
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  tail call void @_ZdlPv(i8* %140) #11
  br label %141

141:                                              ; preds = %138, %130
  %142 = icmp eq %"struct.std::__1::pair"* %132, %124
  br i1 %142, label %143, label %130

143:                                              ; preds = %141, %122
  %144 = icmp eq %"struct.std::__1::pair"* %125, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = bitcast %"struct.std::__1::pair"* %125 to i8*
  tail call void @_ZdlPv(i8* %146) #11
  br label %147

147:                                              ; preds = %145, %143, %50, %3
  %148 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %148, i64 0, i32 0
  %150 = load i32, i32* %1, align 4
  store i32 %150, i32* %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %148, i64 0, i32 1
  %152 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  %153 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #9
  %154 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %154, i64 1
  store %"struct.std::__1::pair"* %155, %"struct.std::__1::pair"** %4, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo16SharedRemoteBaseINS3_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSB_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN4mojo16SharedRemoteBaseINS3_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS0_17UnretainedWrapperIKSB_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIMN4mojo16SharedRemoteBaseINS1_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS_8internal17UnretainedWrapperIKS9_EEEEENS_12OnceCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIMN4mojo16SharedRemoteBaseINS1_6RemoteIN6chrome5mojom21ProfileImportObserverEEEE13RemoteWrapperEKFvvEJNS_8internal17UnretainedWrapperIKS9_EEEEENS_12OnceCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = distinct !{!16, !15}
!17 = distinct !{!17, !13}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !13}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !15}
!26 = distinct !{!26, !13}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !13}
!33 = distinct !{!33, !15}
!34 = distinct !{!34, !15}
!35 = distinct !{!35, !13}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !13}
!42 = distinct !{!42, !15}
!43 = distinct !{!43, !15}
!44 = distinct !{!44, !13}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !13}
!51 = distinct !{!51, !15}
!52 = distinct !{!52, !15}
!53 = distinct !{!53, !13}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !13}
!60 = distinct !{!60, !15}
!61 = distinct !{!61, !15}
!62 = distinct !{!62, !13}
!63 = distinct !{!63, !13}
!64 = distinct !{!64, !15}
!65 = distinct !{!65, !66, !13}
!66 = !{!"llvm.loop.unroll.runtime.disable"}
!67 = !{!68}
!68 = distinct !{!68, !69}
!69 = distinct !{!69, !"LVerDomain"}
!70 = !{!71}
!71 = distinct !{!71, !69}
!72 = distinct !{!72, !13}
!73 = distinct !{!73, !15}
!74 = distinct !{!74, !15}
!75 = distinct !{!75, !13}
!76 = !{i8 0, i8 2}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_: argument 0"}
!79 = distinct !{!79, !"_ZNSt3__16__treeI4GURLNS_4lessIS1_EENS_9allocatorIS1_EEE16__construct_nodeIJRKS1_EEENS_10unique_ptrINS_11__tree_nodeIS1_PvEENS_22__tree_node_destructorINS4_ISD_EEEEEEDpOT_"}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !13}
!86 = distinct !{!86, !15}
!87 = distinct !{!87, !15}
!88 = distinct !{!88, !13}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !13}
!95 = distinct !{!95, !15}
!96 = distinct !{!96, !15}
!97 = distinct !{!97, !13}
