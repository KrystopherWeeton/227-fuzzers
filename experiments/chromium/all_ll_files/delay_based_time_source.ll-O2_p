; ModuleID = '../../components/viz/common/frame_sinks/delay_based_time_source.cc'
source_filename = "../../components/viz/common/frame_sinks/delay_based_time_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.viz::DelayBasedTimeSource" = type { i32 (...)**, %"class.viz::DelayBasedTimeSourceClient"*, i8, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::SingleThreadTaskRunner"*, %"class.base::RepeatingCallback", %"class.base::OneShotTimer" }
%"class.viz::DelayBasedTimeSourceClient" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.2, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.2 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.16", i64, i64 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3viz20DelayBasedTimeSourceE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::DelayBasedTimeSource"*)* @_ZN3viz20DelayBasedTimeSourceD2Ev to i8*), i8* bitcast (void (%"class.viz::DelayBasedTimeSource"*)* @_ZN3viz20DelayBasedTimeSourceD0Ev to i8*), i8* bitcast (void (%"class.viz::DelayBasedTimeSource"*, %"class.base::trace_event::TracedValue"*)* @_ZNK3viz20DelayBasedTimeSource11AsValueIntoEPN4base11trace_event11TracedValueE to i8*), i8* bitcast (i64 (%"class.viz::DelayBasedTimeSource"*)* @_ZNK3viz20DelayBasedTimeSource3NowEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)* @_ZNK3viz20DelayBasedTimeSource10TypeStringEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [32 x i8] c"DelayBasedTimeSource::SetActive\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"PostNextTickTask\00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"../../components/viz/common/frame_sinks/delay_based_time_source.cc\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"DelayBasedTimeSource\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"last_tick_time_us\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"next_tick_time_us\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"interval_us\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"timebase_us\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN3viz20DelayBasedTimeSourceC1EPN4base22SingleThreadTaskRunnerE = hidden unnamed_addr alias void (%"class.viz::DelayBasedTimeSource"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.viz::DelayBasedTimeSource"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN3viz20DelayBasedTimeSourceC2EPN4base22SingleThreadTaskRunnerE
@_ZN3viz20DelayBasedTimeSourceD1Ev = hidden unnamed_addr alias void (%"class.viz::DelayBasedTimeSource"*), void (%"class.viz::DelayBasedTimeSource"*)* @_ZN3viz20DelayBasedTimeSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DelayBasedTimeSourceC2EPN4base22SingleThreadTaskRunnerE(%"class.viz::DelayBasedTimeSource"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3viz20DelayBasedTimeSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 1
  store %"class.viz::DelayBasedTimeSourceClient"* null, %"class.viz::DelayBasedTimeSourceClient"** %5, align 8
  %6 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast i64* %7 to <2 x i64>*
  store <2 x i64> <i64 0, i64 16666>, <2 x i64>* %8, align 8
  %9 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 16666) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %12 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 7
  store %"class.base::SingleThreadTaskRunner"* %1, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %15 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 8
  %16 = ptrtoint %"class.viz::DelayBasedTimeSource"* %0 to i64
  %17 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !2
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.viz::DelayBasedTimeSource"*)* @_ZN3viz20DelayBasedTimeSource11OnTimerTickEv to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %16, i64* %22, align 8, !noalias !2
  %23 = bitcast %"class.base::RepeatingCallback"* %15 to i8**
  store i8* %17, i8** %23, align 8, !alias.scope !2
  %24 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 9
  call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %24) #10
  %25 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %24, i64 0, i32 0
  %26 = bitcast %"class.base::SingleThreadTaskRunner"** %14 to %"class.base::SequencedTaskRunner"**
  %27 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %26, align 8
  %28 = icmp eq %"class.base::SequencedTaskRunner"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %27, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  br label %32

32:                                               ; preds = %2, %29
  call void @_ZN4base8internal9TimerBase13SetTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::internal::TimerBase"* %25, %"class.base::SequencedTaskRunner"* %27) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DelayBasedTimeSource11OnTimerTickEv(%"class.viz::DelayBasedTimeSource"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %2, align 8
  store i64 %4, i64* %3, align 8
  %5 = bitcast %"class.viz::DelayBasedTimeSource"* %0 to i64 (%"class.viz::DelayBasedTimeSource"*)***
  %6 = load i64 (%"class.viz::DelayBasedTimeSource"*)**, i64 (%"class.viz::DelayBasedTimeSource"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.viz::DelayBasedTimeSource"*)*, i64 (%"class.viz::DelayBasedTimeSource"*)** %6, i64 3
  %8 = load i64 (%"class.viz::DelayBasedTimeSource"*)*, i64 (%"class.viz::DelayBasedTimeSource"*)** %7, align 8
  %9 = tail call i64 %8(%"class.viz::DelayBasedTimeSource"* %0) #10
  tail call void @_ZN3viz20DelayBasedTimeSource16PostNextTickTaskEN4base9TimeTicksE(%"class.viz::DelayBasedTimeSource"* %0, i64 %9)
  %10 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 1
  %11 = load %"class.viz::DelayBasedTimeSourceClient"*, %"class.viz::DelayBasedTimeSourceClient"** %10, align 8
  %12 = icmp eq %"class.viz::DelayBasedTimeSourceClient"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.viz::DelayBasedTimeSourceClient"* %11 to void (%"class.viz::DelayBasedTimeSourceClient"*)***
  %15 = load void (%"class.viz::DelayBasedTimeSourceClient"*)**, void (%"class.viz::DelayBasedTimeSourceClient"*)*** %14, align 8
  %16 = load void (%"class.viz::DelayBasedTimeSourceClient"*)*, void (%"class.viz::DelayBasedTimeSourceClient"*)** %15, align 8
  tail call void %16(%"class.viz::DelayBasedTimeSourceClient"* nonnull %11) #10
  br label %17

17:                                               ; preds = %1, %13
  ret void
}

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

declare void @_ZN4base8internal9TimerBase13SetTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::internal::TimerBase"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DelayBasedTimeSourceD2Ev(%"class.viz::DelayBasedTimeSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3viz20DelayBasedTimeSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 9
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %3) #10
  %4 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DelayBasedTimeSourceD0Ev(%"class.viz::DelayBasedTimeSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3viz20DelayBasedTimeSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 9
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %3) #10
  %4 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #10
  %5 = bitcast %"class.viz::DelayBasedTimeSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DelayBasedTimeSource9SetActiveEb(%"class.viz::DelayBasedTimeSource"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8, !prof !7

8:                                                ; preds = %2
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* nonnull dereferenceable(1) %3)
  %10 = load i8, i8* %3, align 1
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i8 [ %4, %2 ], [ %10, %8 ]
  %13 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 136, i32 0), %8 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), %8 ]
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %9, %8 ]
  %16 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 2
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = icmp eq i8 %12, %17
  br i1 %18, label %35, label %19

19:                                               ; preds = %11
  %20 = icmp eq i8 %12, 0
  store i8 %12, i8* %16, align 8
  br i1 %20, label %27, label %21

21:                                               ; preds = %19
  %22 = bitcast %"class.viz::DelayBasedTimeSource"* %0 to i64 (%"class.viz::DelayBasedTimeSource"*)***
  %23 = load i64 (%"class.viz::DelayBasedTimeSource"*)**, i64 (%"class.viz::DelayBasedTimeSource"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.viz::DelayBasedTimeSource"*)*, i64 (%"class.viz::DelayBasedTimeSource"*)** %23, i64 3
  %25 = load i64 (%"class.viz::DelayBasedTimeSource"*)*, i64 (%"class.viz::DelayBasedTimeSource"*)** %24, align 8
  %26 = call i64 %25(%"class.viz::DelayBasedTimeSource"* %0) #10
  call void @_ZN3viz20DelayBasedTimeSource16PostNextTickTaskEN4base9TimeTicksE(%"class.viz::DelayBasedTimeSource"* %0, i64 %26)
  br label %35

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 9, i32 0
  call void @_ZN4base8internal9TimerBase20AbandonScheduledTaskEv(%"class.base::internal::TimerBase"* %28) #10
  %29 = bitcast %"class.base::internal::TimerBase"* %28 to void (%"class.base::internal::TimerBase"*)***
  %30 = load void (%"class.base::internal::TimerBase"*)**, void (%"class.base::internal::TimerBase"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %30, i64 3
  %32 = load void (%"class.base::internal::TimerBase"*)*, void (%"class.base::internal::TimerBase"*)** %31, align 8
  call void %32(%"class.base::internal::TimerBase"* %28) #10
  %33 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 5, i32 0, i32 0
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  br label %35

35:                                               ; preds = %21, %27, %11
  %36 = icmp eq i8* %13, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %35
  %38 = load i8, i8* %13, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %14, i64 %15) #10
  br label %41

41:                                               ; preds = %35, %37, %40
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1)) local_unnamed_addr #5 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #10
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = load i8, i8* %8, align 1, !range !8
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8*
  store i8 %20, i8* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #10
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #10
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #10
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #10
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #10
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz20DelayBasedTimeSource16PostNextTickTaskEN4base9TimeTicksE(%"class.viz::DelayBasedTimeSource"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 4, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %1, i64* %13, align 8
  br label %42

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 3, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = call i64 @_ZNK4base9TimeTicks17SnappedToNextTickES0_NS_9TimeDeltaE(%"class.base::TimeTicks"* nonnull %4, i64 %16, i64 %10) #10
  %18 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = load i64, i64* %8, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %42

21:                                               ; preds = %14
  %22 = load i64, i64* %9, align 8
  %23 = add i64 %22, -9223372036854775807
  %24 = icmp ult i64 %23, 2
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = icmp slt i64 %22, 0
  %27 = select i1 %26, i64 -9223372036854775808, i64 9223372036854775807
  %28 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %17, i64 %22) #10
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 %27, i64 %30, !prof !9
  br label %40

32:                                               ; preds = %21
  %33 = add i64 %17, -9223372036854775807
  %34 = icmp ugt i64 %33, 1
  %35 = icmp eq i64 %17, %22
  %36 = or i1 %34, %35
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0)) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  br label %40

40:                                               ; preds = %25, %32, %37
  %41 = phi i64 [ %31, %25 ], [ %22, %32 ], [ %22, %37 ]
  store i64 %41, i64* %18, align 8
  br label %42

42:                                               ; preds = %14, %40, %12
  %43 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 9
  %44 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32 160) #10
  %45 = load i64, i64* %8, align 8
  %46 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = sub nsw i64 %47, %45
  %49 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %50 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 8, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %49, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %50) #10
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %51, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %49) #10
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %43, %"class.base::Location"* nonnull dereferenceable(32) %5, i64 %48, %"class.base::OnceCallback"* nonnull %6) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #10
  %52 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3viz20DelayBasedTimeSource8IntervalEv(%"class.viz::DelayBasedTimeSource"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 4, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3viz20DelayBasedTimeSource6ActiveEv(%"class.viz::DelayBasedTimeSource"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3viz20DelayBasedTimeSource12LastTickTimeEv(%"class.viz::DelayBasedTimeSource"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3viz20DelayBasedTimeSource12NextTickTimeEv(%"class.viz::DelayBasedTimeSource"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz20DelayBasedTimeSource9SetClientEPNS_26DelayBasedTimeSourceClientE(%"class.viz::DelayBasedTimeSource"* nocapture, %"class.viz::DelayBasedTimeSourceClient"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 1
  store %"class.viz::DelayBasedTimeSourceClient"* %1, %"class.viz::DelayBasedTimeSourceClient"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz20DelayBasedTimeSource22SetTimebaseAndIntervalEN4base9TimeTicksENS1_9TimeDeltaE(%"class.viz::DelayBasedTimeSource"* nocapture, i64, i64) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 4, i32 0
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %1, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3viz20DelayBasedTimeSource3NowEv(%"class.viz::DelayBasedTimeSource"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #10
  ret i64 %2
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare i64 @_ZNK4base9TimeTicks17SnappedToNextTickES0_NS_9TimeDeltaE(%"class.base::TimeTicks"*, i64, i64) local_unnamed_addr #2

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback"*) unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz20DelayBasedTimeSource10TypeStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.viz::DelayBasedTimeSource"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 20, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 20, i1 false) #10
  %6 = getelementptr inbounds i8, i8* %5, i64 20
  store i8 0, i8* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz20DelayBasedTimeSource11AsValueIntoEPN4base11trace_event11TracedValueE(%"class.viz::DelayBasedTimeSource"*, %"class.base::trace_event::TracedValue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = bitcast %"class.viz::DelayBasedTimeSource"* %0 to void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)***
  %9 = load void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)**, void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)*, void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)** %9, i64 4
  %11 = load void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)*, void (%"class.std::__1::basic_string"*, %"class.viz::DelayBasedTimeSource"*)** %10, align 8
  call void %11(%"class.std::__1::basic_string"* nonnull sret %3, %"class.viz::DelayBasedTimeSource"* %0) #10
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = select i1 %15, i8* %17, i8* %7
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %14 to i64
  %22 = select i1 %15, i64 %20, i64 %21
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* %18, i64 %22) #10
  %23 = load i8, i8* %13, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %2
  %26 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %2, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  %28 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 5, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %4) #10
  call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), double %32) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %33 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 6, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %5) #10
  call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), double %37) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %38 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 4
  %39 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* %38) #10
  call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), double %39) #10
  %40 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 3, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 %42, i64* %43, align 8
  %44 = call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* nonnull %6) #10
  call void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), double %44) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %45 = getelementptr inbounds %"class.viz::DelayBasedTimeSource", %"class.viz::DelayBasedTimeSource"* %0, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !8
  %47 = icmp ne i8 %46, 0
  call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i1 zeroext %47) #10
  ret void
}

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue9SetDoubleEPKcd(%"class.base::trace_event::TracedValue"*, i8*, double) local_unnamed_addr #2

declare double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !9
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #8

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN4base8internal9TimerBase20AbandonScheduledTaskEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.viz::DelayBasedTimeSource"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.viz::DelayBasedTimeSource"*)**
  %21 = load void (%"class.viz::DelayBasedTimeSource"*)*, void (%"class.viz::DelayBasedTimeSource"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.viz::DelayBasedTimeSource"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.viz::DelayBasedTimeSource"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.viz::DelayBasedTimeSource"* %12) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3viz20DelayBasedTimeSourceEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN3viz20DelayBasedTimeSourceEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN3viz20DelayBasedTimeSourceEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 1, i32 2000}
