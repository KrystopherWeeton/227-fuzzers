; ModuleID = '../../third_party/skia/src/core/SkDraw.cpp'
source_filename = "../../third_party/skia/src/core/SkDraw.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.PtProcRec = type { i32, %class.SkPaint*, %class.SkRegion*, %class.SkRasterClip*, %struct.SkRect, float, %class.SkAAClipBlitterWrapper }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.6, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.6 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.8 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%class.SkRasterClip = type { %class.SkRegion, %class.SkAAClip, i8, i8, i8, %struct.SkIRect*, %class.sk_sp.6 }
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%"struct.SkAAClip::RunHead" = type opaque
%struct.SkRect = type { float, float, float, float }
%class.SkAAClipBlitterWrapper = type { %class.SkRegion, %class.SkAAClipBlitter, %class.SkRegion*, %class.SkBlitter* }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp.12, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.12 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.13, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.14, %class.SkTDArray.15, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.14 = type { i8*, i32, i32 }
%class.SkTDArray.15 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.16 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.16 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.17", [3 x i8] }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.32 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.33 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc.41, i32, %class.SkAutoTMalloc.41, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.59" }
%class.SkAutoTMalloc.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %struct.SkPoint* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.49" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.46, %class.SkSpan.47, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.45" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.45" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.46 = type { i32*, i64 }
%class.SkSpan.47 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.48, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.48 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.52, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.52 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.53, %struct.SkRect, i32, %"struct.std::__1::atomic.54" }
%class.SkNVRefCnt.53 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i32 }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { i16*, i16*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { i16* }
%class.SkPreConcatMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider*, %class.SkMatrix }
%class.SkOverrideDeviceMatrixProvider = type { %class.SkMatrixProvider, %class.SkMatrixProvider* }
%class.SkSimpleMatrixProvider = type { %class.SkMatrixProvider }
%class.SkDraw = type { %"class.SkGlyphRunListPainter::BitmapDevicePainter", %class.SkPixmap, %class.SkMatrixProvider*, %class.SkRasterClip*, %class.SkPixmap* }
%"class.SkGlyphRunListPainter::BitmapDevicePainter" = type { i32 (...)** }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.SkAutoBlitterChoose = type { %class.SkBlitter*, %class.SkSTArenaAlloc }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", [4 x i8], %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [3332 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkStrokeRec = type { float, float, float, i32 }
%"class.SkPathEffectBase::PointData" = type { i32, %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath }
%class.SkPathEffectBase = type { %class.SkPathEffect.base, [4 x i8] }
%class.SkPathEffect.base = type { %class.SkFlattenable.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkTLazy = type { [160 x i8], %class.SkPreConcatMatrixProvider* }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%struct.SkIPoint = type { i32, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkTCopyOnFirstWrite = type { %class.SkPaint*, %class.SkTLazy.25 }
%class.SkTLazy.25 = type { [72 x i8], %class.SkPaint* }
%class.SkBitmap = type { %class.sk_sp.26, %class.SkPixmap, %class.sk_sp.27 }
%class.sk_sp.26 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.27 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.32, [384 x i64], %class.sk_sp.33, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.34", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.38" }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray, %class.SkAutoTMalloc.41 }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon.72 }
%union.anon.72 = type { %class.SkGlyph* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%struct.SkPackedGlyphID = type { i32 }
%class.SkPairBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkBlitter* }

$_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb = comdat any

$_ZN6SkDrawD2Ev = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN6SkDrawD0Ev = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkPairBlitterJRP9SkBlitterS5_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_ = comdat any

$_ZN13SkPairBlitterD0Ev = comdat any

$_ZN13SkPairBlitter5blitHEiii = comdat any

$_ZN13SkPairBlitter9blitAntiHEiiPKhPKs = comdat any

$_ZN13SkPairBlitter5blitVEiiih = comdat any

$_ZN13SkPairBlitter8blitRectEiiii = comdat any

$_ZN13SkPairBlitter12blitAntiRectEiiiihh = comdat any

$_ZN13SkPairBlitter8blitMaskERK6SkMaskRK7SkIRect = comdat any

$_ZN13SkPairBlitter17justAnOpaqueColorEPj = comdat any

$_ZN13SkPairBlitter10blitAntiH2Eiijj = comdat any

$_ZN13SkPairBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN25SkPreConcatMatrixProviderD0Ev = comdat any

$_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN16SkMatrixProviderD0Ev = comdat any

$_ZN30SkOverrideDeviceMatrixProviderD0Ev = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN22SkSimpleMatrixProviderD0Ev = comdat any

$_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZTV13SkPairBlitter = comdat any

$_ZTV25SkPreConcatMatrixProvider = comdat any

$_ZTV16SkMatrixProvider = comdat any

$_ZTV30SkOverrideDeviceMatrixProvider = comdat any

$_ZTV22SkSimpleMatrixProvider = comdat any

@_ZTV6SkDraw = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkDraw*)* @_ZN6SkDrawD2Ev to i8*), i8* bitcast (void (%class.SkDraw*)* @_ZN6SkDrawD0Ev to i8*), i8* bitcast (void (%class.SkDraw*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint*)* @_ZNK6SkDraw10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkDraw*, %class.SkDrawableGlyphBuffer*, %class.SkPaint*)* @_ZNK6SkDraw10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint to i8*), i8* bitcast (void (%class.SkDraw*, %class.SkBitmap*, %class.SkMatrix*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint to i8*)] }, align 8
@_ZZN9PtProcRec10chooseProcEPP9SkBlitterE8gAAProcs = internal unnamed_addr constant [3 x void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*] [void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL14aa_square_procRK9PtProcRecPK7SkPointiP9SkBlitter, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL17aa_line_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL17aa_poly_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter], align 16
@_ZZN9PtProcRec10chooseProcEPP9SkBlitterE8gBWProcs = internal unnamed_addr constant [3 x void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*] [void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL15bw_pt_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL17bw_line_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL17bw_poly_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter], align 16
@__const._ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice.rec = private unnamed_addr constant { i32, [4 x i8], %class.SkPaint*, %class.SkRegion*, %class.SkRasterClip*, %struct.SkRect, float, [4 x i8], %class.SkAAClipBlitterWrapper } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkPaint* inttoptr (i64 -6148914691236517206 to %class.SkPaint*), %class.SkRegion* inttoptr (i64 -6148914691236517206 to %class.SkRegion*), %class.SkRasterClip* inttoptr (i64 -6148914691236517206 to %class.SkRasterClip*), %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %class.SkAAClipBlitterWrapper { %class.SkRegion { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %"struct.SkRegion::RunHead"* inttoptr (i64 -6148914691236517206 to %"struct.SkRegion::RunHead"*) }, %class.SkAAClipBlitter { %class.SkBlitter { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkAutoMalloc { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } }, i64 -6148914691236517206 } }, %class.SkBlitter* inttoptr (i64 -6148914691236517206 to %class.SkBlitter*), %class.SkAAClip* inttoptr (i64 -6148914691236517206 to %class.SkAAClip*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, i16* inttoptr (i64 -6148914691236517206 to i16*), i8* inttoptr (i64 -6148914691236517206 to i8*), %class.SkAutoSMalloc { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, [256 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766] }, i8* inttoptr (i64 -6148914691236517206 to i8*) }, %class.SkRegion* inttoptr (i64 -6148914691236517206 to %class.SkRegion*), %class.SkBlitter* inttoptr (i64 -6148914691236517206 to %class.SkBlitter*) } }, align 8
@__const._ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice.pointData = private unnamed_addr constant { i32, [4 x i8], %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkPath <{ %class.sk_sp.12 { %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*) }, i32 -1431655766, %"struct.std::__1::atomic.1" { %"struct.std::__1::__atomic_base.2" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl.4" { %"struct.std::__1::__cxx_atomic_base_impl.5" { i8 -86 } } } } }, %"struct.std::__1::atomic.1" { %"struct.std::__1::__atomic_base.2" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl.4" { %"struct.std::__1::__cxx_atomic_base_impl.5" { i8 -86 } } } } }, i8 -86, i8 -86 }>, %class.SkPath <{ %class.sk_sp.12 { %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*) }, i32 -1431655766, %"struct.std::__1::atomic.1" { %"struct.std::__1::__atomic_base.2" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl.4" { %"struct.std::__1::__cxx_atomic_base_impl.5" { i8 -86 } } } } }, %"struct.std::__1::atomic.1" { %"struct.std::__1::__atomic_base.2" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl.4" { %"struct.std::__1::__cxx_atomic_base_impl.5" { i8 -86 } } } } }, i8 -86, i8 -86 }>, %class.SkPath <{ %class.sk_sp.12 { %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*) }, i32 -1431655766, %"struct.std::__1::atomic.1" { %"struct.std::__1::__atomic_base.2" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl.4" { %"struct.std::__1::__cxx_atomic_base_impl.5" { i8 -86 } } } } }, %"struct.std::__1::atomic.1" { %"struct.std::__1::__atomic_base.2" { %"struct.std::__1::__atomic_base.3" { %"struct.std::__1::__cxx_atomic_impl.4" { %"struct.std::__1::__cxx_atomic_base_impl.5" { i8 -86 } } } } }, i8 -86, i8 -86 }> }, align 8
@__const._ZNK6SkDraw16drawBitmapAsMaskERK8SkBitmapRK17SkSamplingOptionsRK7SkPaint.c = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.32, [384 x i64], %class.sk_sp.33, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.34", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.38" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.32 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.33 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.34" { %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.36" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.38" { %"class.std::__1::__compressed_pair.39" { %"struct.std::__1::__compressed_pair_elem.40" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@__const._ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint.matrixProvider = private unnamed_addr constant %class.SkPreConcatMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*), %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@__const._ZNK6SkDraw10drawSpriteERK8SkBitmapiiRK7SkPaint.matrixProvider = private unnamed_addr constant %class.SkOverrideDeviceMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %class.SkMatrixProvider* inttoptr (i64 -6148914691236517206 to %class.SkMatrixProvider*) }, align 8
@_ZTV13SkPairBlitter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.SkPairBlitter*)* @_ZN13SkPairBlitterD0Ev to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32)* @_ZN13SkPairBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i8*, i16*)* @_ZN13SkPairBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i8)* @_ZN13SkPairBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32)* @_ZN13SkPairBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN13SkPairBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkPairBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN13SkPairBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkPairBlitter*, i32*)* @_ZN13SkPairBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32)* @_ZN13SkPairBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkPairBlitter*, i32, i32, i32, i32)* @_ZN13SkPairBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, comdat, align 8
@_ZTV25SkPreConcatMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkPreConcatMatrixProvider*)* @_ZN25SkPreConcatMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*)* @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkPreConcatMatrixProvider*)* @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV16SkMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV30SkOverrideDeviceMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkOverrideDeviceMatrixProvider*)* @_ZN30SkOverrideDeviceMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*)* @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkOverrideDeviceMatrixProvider*)* @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.7 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.6 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.8 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.9 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.10 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.matrixProvider = private unnamed_addr constant %class.SkSimpleMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } } }, align 8
@_ZTV22SkSimpleMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkSimpleMatrixProvider*)* @_ZN22SkSimpleMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*, i32, %class.SkM44*)* @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*)* @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@switch.table._ZNK6SkDraw11drawDevPathERK6SkPathRK7SkPaintbP9SkBlitterb = private unnamed_addr constant [3 x void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*] [void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan12AntiHairPathERK6SkPathRK12SkRasterClipP9SkBlitter, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan17AntiHairRoundPathERK6SkPathRK12SkRasterClipP9SkBlitter, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan18AntiHairSquarePathERK6SkPathRK12SkRasterClipP9SkBlitter], align 8
@switch.table._ZNK6SkDraw11drawDevPathERK6SkPathRK7SkPaintbP9SkBlitterb.1 = private unnamed_addr constant [3 x void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*] [void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan8HairPathERK6SkPathRK12SkRasterClipP9SkBlitter, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan13HairRoundPathERK6SkPathRK12SkRasterClipP9SkBlitter, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan14HairSquarePathERK6SkPathRK12SkRasterClipP9SkBlitter], align 8

@_ZN6SkDrawC1Ev = hidden unnamed_addr alias void (%class.SkDraw*), void (%class.SkDraw*)* @_ZN6SkDrawC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkDrawC2Ev(%class.SkDraw* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %4 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 64, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkDraw34computeConservativeLocalClipBoundsEP6SkRect(%class.SkDraw* nocapture readonly, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %7 = load %class.SkRasterClip*, %class.SkRasterClip** %6, align 8
  %8 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %7, i64 0, i32 3
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %81

11:                                               ; preds = %2
  %12 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #9
  %13 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %14 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %14, align 16
  %15 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %16, align 16
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %17, align 16
  store i32 16, i32* %13, align 4
  %18 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %19 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %18, align 8
  %20 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %19, i64 0, i32 2
  %21 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %19, i64 0, i32 2, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %20) #9
  %27 = zext i8 %26 to i32
  store i32 %27, i32* %21, align 4
  br label %28

28:                                               ; preds = %25, %11
  %29 = phi i32 [ %27, %25 ], [ %22, %11 ]
  %30 = and i32 %29, 15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #9
  br label %36

34:                                               ; preds = %28
  %35 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %20, %class.SkMatrix* nonnull %3) #9
  br i1 %35, label %36, label %79

36:                                               ; preds = %32, %34
  %37 = load %class.SkRasterClip*, %class.SkRasterClip** %6, align 8
  %38 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %37) #9
  %39 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %38, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %38, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %40, -2147483646
  %48 = select i1 %47, i32 %40, i32 -2147483646
  %49 = add nsw i32 %48, -1
  %50 = icmp sgt i32 %42, -2147483646
  %51 = select i1 %50, i32 %42, i32 -2147483646
  %52 = add nsw i32 %51, -1
  %53 = sext i32 %44 to i64
  %54 = icmp slt i64 %53, 2147483646
  %55 = select i1 %54, i64 %53, i64 2147483646
  %56 = icmp sgt i64 %55, -2147483648
  %57 = select i1 %56, i64 %55, i64 -2147483648
  %58 = trunc i64 %57 to i32
  %59 = add nsw i32 %58, 1
  %60 = sext i32 %46 to i64
  %61 = icmp slt i64 %60, 2147483646
  %62 = select i1 %61, i64 %60, i64 2147483646
  %63 = icmp sgt i64 %62, -2147483648
  %64 = select i1 %63, i64 %62, i64 -2147483648
  %65 = trunc i64 %64 to i32
  %66 = add nsw i32 %65, 1
  %67 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #9
  %68 = sitofp i32 %49 to float
  %69 = insertelement <2 x float> undef, float %68, i32 0
  %70 = sitofp i32 %52 to float
  %71 = insertelement <2 x float> %69, float %70, i32 1
  %72 = sitofp i32 %59 to float
  %73 = insertelement <2 x float> undef, float %72, i32 0
  %74 = sitofp i32 %66 to float
  %75 = insertelement <2 x float> %73, float %74, i32 1
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %71, <2 x float>* %76, align 8
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %75, <2 x float>* %77, align 8
  %78 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %3, %struct.SkRect* %1, %struct.SkRect* nonnull dereferenceable(16) %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #9
  br label %79

79:                                               ; preds = %34, %36
  %80 = phi i1 [ true, %36 ], [ false, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #9
  br label %81

81:                                               ; preds = %2, %79
  %82 = phi i1 [ %80, %79 ], [ false, %2 ]
  ret i1 %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw9drawPaintERK7SkPaint(%class.SkDraw*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkIRect, align 4
  %4 = alloca %class.SkAutoBlitterChoose, align 8
  %5 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %6 = load %class.SkRasterClip*, %class.SkRasterClip** %5, align 8
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %6, i64 0, i32 3
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %2
  %11 = bitcast %struct.SkIRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %16 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 %17, i32* %14, align 4
  store i32 %19, i32* %15, align 4
  %20 = bitcast %class.SkAutoBlitterChoose* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3376, i8* nonnull %20) #9
  %21 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 3368, i1 false)
  %22 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %4, i64 0, i32 0
  store %class.SkBlitter* null, %class.SkBlitter** %22, align 8
  %23 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %4, i64 0, i32 1, i32 0, i32 0, i64 3336
  %24 = bitcast i8* %23 to %class.SkArenaAlloc*
  %25 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %4, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %24, i8* %25, i64 3332, i64 3332) #9
  %26 = call %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose* nonnull %4, %class.SkDraw* dereferenceable(72) %0, %class.SkMatrixProvider* null, %class.SkPaint* dereferenceable(72) %1, i1 zeroext false) #9
  %27 = load %class.SkRasterClip*, %class.SkRasterClip** %5, align 8
  %28 = load %class.SkBlitter*, %class.SkBlitter** %22, align 8
  call void @_ZN6SkScan9FillIRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* nonnull dereferenceable(16) %3, %class.SkRasterClip* dereferenceable(72) %27, %class.SkBlitter* %28) #9
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %24) #9
  call void @llvm.lifetime.end.p0i8(i64 3376, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %29

29:                                               ; preds = %2, %10
  ret void
}

declare void @_ZN6SkScan9FillIRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9PtProcRec4initEN8SkCanvas9PointModeERK7SkPaintPK8SkMatrixPK12SkRasterClip(%struct.PtProcRec* nocapture, i32, %class.SkPaint* dereferenceable(72), %class.SkMatrix*, %class.SkRasterClip*) local_unnamed_addr #0 align 2 {
  %6 = icmp ugt i32 %1, 2
  br i1 %6, label %94, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %9 = load %class.SkPathEffect*, %class.SkPathEffect** %8, align 8
  %10 = icmp eq %class.SkPathEffect* %9, null
  br i1 %10, label %11, label %94

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %13 = load float, float* %12, align 8
  %14 = fcmp oeq float %13, 0.000000e+00
  br i1 %14, label %46, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %94, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i8
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %3) #9
  %27 = zext i8 %26 to i32
  store i32 %27, i32* %21, align 4
  br label %28

28:                                               ; preds = %20, %25
  %29 = phi i32 [ %27, %25 ], [ %22, %20 ]
  %30 = and i32 %29, 12
  %31 = or i32 %30, %1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %94

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 0
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %37 = load float, float* %36, align 4
  %38 = fsub float %35, %37
  %39 = tail call float @llvm.fabs.f32(float %38) #9
  %40 = fcmp ugt float %39, 0x3F30000000000000
  br i1 %40, label %94, label %41

41:                                               ; preds = %33
  %42 = tail call float @llvm.fabs.f32(float %35)
  %43 = fmul float %13, %42
  %44 = fmul float %43, 5.000000e-01
  %45 = fcmp ogt float %44, 0.000000e+00
  br i1 %45, label %46, label %94

46:                                               ; preds = %11, %41
  %47 = phi float [ %44, %41 ], [ 5.000000e-01, %11 ]
  %48 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %4) #9
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  %52 = insertelement <2 x float> undef, float %51, i32 0
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %48, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  %56 = insertelement <2 x float> %52, float %55, i32 1
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %48, i64 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> undef, float %59, i32 0
  %61 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %48, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sitofp i32 %62 to float
  %64 = insertelement <2 x float> %60, float %63, i32 1
  %65 = icmp slt i32 %50, 0
  %66 = fsub float -0.000000e+00, %51
  %67 = select i1 %65, float %66, float %51
  %68 = fcmp ugt float %67, 3.276700e+04
  br i1 %68, label %94, label %69

69:                                               ; preds = %46
  %70 = icmp slt i32 %54, 0
  %71 = fsub float -0.000000e+00, %55
  %72 = select i1 %70, float %71, float %55
  %73 = fcmp ugt float %72, 3.276700e+04
  br i1 %73, label %94, label %74

74:                                               ; preds = %69
  %75 = icmp slt i32 %58, 0
  %76 = fsub float -0.000000e+00, %59
  %77 = select i1 %75, float %76, float %59
  %78 = fcmp ugt float %77, 3.276700e+04
  br i1 %78, label %94, label %79

79:                                               ; preds = %74
  %80 = icmp slt i32 %62, 0
  %81 = fsub float -0.000000e+00, %63
  %82 = select i1 %80, float %81, float %63
  %83 = fcmp ugt float %82, 3.276700e+04
  br i1 %83, label %94, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 0
  store i32 %1, i32* %85, align 8
  %86 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 1
  store %class.SkPaint* %2, %class.SkPaint** %86, align 8
  %87 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 2
  store %class.SkRegion* null, %class.SkRegion** %87, align 8
  %88 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  store %class.SkRasterClip* %4, %class.SkRasterClip** %88, align 8
  %89 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 4
  %90 = bitcast %struct.SkRect* %89 to <2 x float>*
  store <2 x float> %56, <2 x float>* %90, align 8
  %91 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 4, i32 2
  %92 = bitcast float* %91 to <2 x float>*
  store <2 x float> %64, <2 x float>* %92, align 8
  %93 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 5
  store float %47, float* %93, align 8
  br label %94

94:                                               ; preds = %79, %33, %46, %69, %74, %15, %28, %84, %41, %7, %5
  %95 = phi i1 [ false, %5 ], [ false, %7 ], [ false, %41 ], [ true, %84 ], [ false, %79 ], [ false, %28 ], [ false, %15 ], [ false, %33 ], [ false, %74 ], [ false, %69 ], [ false, %46 ]
  ret i1 %95
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: nounwind ssp uwtable
define hidden void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZN9PtProcRec10chooseProcEPP9SkBlitter(%struct.PtProcRec*, %class.SkBlitter** nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = load %class.SkBlitter*, %class.SkBlitter** %1, align 8
  %5 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %6 = load %class.SkRasterClip*, %class.SkRasterClip** %5, align 8
  %7 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %6, i64 0, i32 0
  %12 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 2
  store %class.SkRegion* %11, %class.SkRegion** %12, align 8
  br label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 6
  tail call void @_ZN22SkAAClipBlitterWrapper4initERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* %14, %class.SkRasterClip* dereferenceable(72) %6, %class.SkBlitter* %4) #9
  %15 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 6, i32 2
  %16 = bitcast %class.SkRegion** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 2
  %19 = bitcast %class.SkRegion** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 6, i32 3
  %21 = load %class.SkBlitter*, %class.SkBlitter** %20, align 8
  store %class.SkBlitter* %21, %class.SkBlitter** %1, align 8
  br label %22

22:                                               ; preds = %13, %10
  %23 = phi %class.SkBlitter* [ %4, %10 ], [ %21, %13 ]
  %24 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 1
  %25 = load %class.SkPaint*, %class.SkPaint** %24, align 8
  %26 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %25, i64 0, i32 8, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %25, i64 0, i32 6
  %32 = load float, float* %31, align 8
  %33 = fcmp oeq float %32, 0.000000e+00
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [3 x void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*], [3 x void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*]* @_ZZN9PtProcRec10chooseProcEPP9SkBlitterE8gAAProcs, i64 0, i64 %37
  %39 = load void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)** %38, align 8
  br label %79

40:                                               ; preds = %30
  %41 = and i32 %27, 12
  %42 = icmp eq i32 %41, 4
  %43 = select i1 %42, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* null, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL14aa_square_procRK9PtProcRecPK7SkPointiP9SkBlitter
  ret void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* %43

44:                                               ; preds = %22
  %45 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 5
  %46 = load float, float* %45, align 8
  %47 = fcmp ugt float %46, 5.000000e-01
  br i1 %47, label %79, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 2
  %54 = load %class.SkRegion*, %class.SkRegion** %53, align 8
  %55 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %54, i64 0, i32 1
  %56 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %55, align 8
  %57 = icmp eq %"struct.SkRegion::RunHead"* %56, null
  br i1 %57, label %58, label %75

58:                                               ; preds = %52
  %59 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #9
  store i32 -1431655766, i32* %3, align 4
  %60 = bitcast %class.SkBlitter* %23 to %class.SkPixmap* (%class.SkBlitter*, i32*)***
  %61 = load %class.SkPixmap* (%class.SkBlitter*, i32*)**, %class.SkPixmap* (%class.SkBlitter*, i32*)*** %60, align 8
  %62 = getelementptr inbounds %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %61, i64 8
  %63 = load %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %62, align 8
  %64 = call %class.SkPixmap* %63(%class.SkBlitter* %23, i32* nonnull %3) #9
  %65 = icmp eq %class.SkPixmap* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %64, i64 0, i32 2, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 6
  %70 = select i1 %69, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL23bw_pt_rect_32_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL20bw_pt_rect_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter
  %71 = icmp eq i32 %68, 2
  %72 = select i1 %71, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZL23bw_pt_rect_16_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* %70
  br label %73

73:                                               ; preds = %58, %66
  %74 = phi void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* [ %72, %66 ], [ @_ZL20bw_pt_rect_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #9
  br label %79

75:                                               ; preds = %52, %48
  %76 = zext i32 %50 to i64
  %77 = getelementptr inbounds [3 x void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*], [3 x void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*]* @_ZZN9PtProcRec10chooseProcEPP9SkBlitterE8gBWProcs, i64 0, i64 %76
  %78 = load void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)*, void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)** %77, align 8
  br label %79

79:                                               ; preds = %44, %75, %73, %34
  %80 = phi void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* [ %39, %34 ], [ %74, %73 ], [ %78, %75 ], [ @_ZL14bw_square_procRK9PtProcRecPK7SkPointiP9SkBlitter, %44 ]
  ret void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* %80
}

declare void @_ZN22SkAAClipBlitterWrapper4initERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper*, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL14aa_square_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* dereferenceable(1216), %struct.SkPoint* nocapture readonly, i32, %class.SkBlitter*) #4 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1, i64 0
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %16 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 5
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %19 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 4
  %20 = bitcast { i64, i64 }* %7 to i8*
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %23 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %24 = zext i32 %2 to i64
  br label %26

25:                                               ; preds = %81, %4
  ret void

26:                                               ; preds = %81, %10
  %27 = phi i64 [ 0, %10 ], [ %82, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %27
  %29 = bitcast %struct.SkPoint* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = load float, float* %16, align 8
  %32 = extractelement <2 x float> %30, i32 0
  %33 = fsub float %32, %31
  %34 = insertelement <2 x float> undef, float %33, i32 0
  %35 = extractelement <2 x float> %30, i32 1
  %36 = fsub float %35, %31
  %37 = insertelement <2 x float> %34, float %36, i32 1
  %38 = fadd float %32, %31
  %39 = insertelement <2 x float> undef, float %38, i32 0
  %40 = fadd float %35, %31
  %41 = insertelement <2 x float> %39, float %40, i32 1
  store <2 x float> %37, <2 x float>* %17, align 8
  store <2 x float> %41, <2 x float>* %18, align 8
  %42 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %6, %struct.SkRect* dereferenceable(16) %19) #9
  br i1 %42, label %43, label %81

43:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %44 = load float, float* %12, align 8
  %45 = fmul float %44, 6.553600e+04
  %46 = fcmp olt float %45, 0x41DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0x41DFFFFFE0000000
  %48 = fcmp ogt float %47, 0xC1DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0xC1DFFFFFE0000000
  %50 = fptosi float %49 to i32
  %51 = load float, float* %13, align 4
  %52 = fmul float %51, 6.553600e+04
  %53 = fcmp olt float %52, 0x41DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0x41DFFFFFE0000000
  %55 = fcmp ogt float %54, 0xC1DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0xC1DFFFFFE0000000
  %57 = fptosi float %56 to i32
  %58 = load float, float* %14, align 8
  %59 = fmul float %58, 6.553600e+04
  %60 = fcmp olt float %59, 0x41DFFFFFE0000000
  %61 = select i1 %60, float %59, float 0x41DFFFFFE0000000
  %62 = fcmp ogt float %61, 0xC1DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0xC1DFFFFFE0000000
  %64 = fptosi float %63 to i32
  %65 = load float, float* %15, align 4
  %66 = fmul float %65, 6.553600e+04
  %67 = fcmp olt float %66, 0x41DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0x41DFFFFFE0000000
  %69 = fcmp ogt float %68, 0xC1DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0xC1DFFFFFE0000000
  %71 = fptosi float %70 to i32
  %72 = zext i32 %57 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %50 to i64
  %75 = or i64 %73, %74
  %76 = zext i32 %71 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %64 to i64
  %79 = or i64 %77, %78
  store i64 %75, i64* %21, align 8
  store i64 %79, i64* %22, align 8
  %80 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  call void @_ZN6SkScan13AntiFillXRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkRasterClip* dereferenceable(72) %80, %class.SkBlitter* %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  br label %81

81:                                               ; preds = %43, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %82 = add nuw nsw i64 %27, 1
  %83 = icmp eq i64 %82, %24
  br i1 %83, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17aa_line_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint*, i32, %class.SkBlitter*) #0 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  br label %9

8:                                                ; preds = %9, %4
  ret void

9:                                                ; preds = %6, %9
  %10 = phi i64 [ 0, %6 ], [ %13, %9 ]
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %10
  %12 = load %class.SkRasterClip*, %class.SkRasterClip** %7, align 8
  tail call void @_ZN6SkScan12AntiHairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint* %11, i32 2, %class.SkRasterClip* dereferenceable(72) %12, %class.SkBlitter* %3) #9
  %13 = add nuw i64 %10, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, %2
  br i1 %15, label %9, label %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17aa_poly_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint*, i32, %class.SkBlitter*) #0 {
  %5 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %6 = load %class.SkRasterClip*, %class.SkRasterClip** %5, align 8
  tail call void @_ZN6SkScan12AntiHairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint* %1, i32 %2, %class.SkRasterClip* dereferenceable(72) %6, %class.SkBlitter* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23bw_pt_rect_16_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint* nocapture readonly, i32, %class.SkBlitter*) #0 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %7 = load %class.SkRasterClip*, %class.SkRasterClip** %6, align 8
  %8 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %7) #9
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 -1431655766, i32* %5, align 4
  %10 = bitcast %class.SkBlitter* %3 to %class.SkPixmap* (%class.SkBlitter*, i32*)***
  %11 = load %class.SkPixmap* (%class.SkBlitter*, i32*)**, %class.SkPixmap* (%class.SkBlitter*, i32*)*** %10, align 8
  %12 = getelementptr inbounds %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %11, i64 8
  %13 = load %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %12, align 8
  %14 = call %class.SkPixmap* %13(%class.SkBlitter* %3, i32* nonnull %5) #9
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i32 %2, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %25 = zext i32 %2 to i64
  br label %27

26:                                               ; preds = %66, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  ret void

27:                                               ; preds = %66, %20
  %28 = phi i64 [ 0, %20 ], [ %67, %66 ]
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %28, i32 0
  %30 = load float, float* %29, align 4
  %31 = call float @llvm.floor.f32(float %30)
  %32 = fcmp olt float %31, 0x41DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0x41DFFFFFE0000000
  %34 = fcmp ogt float %33, 0xC1DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0xC1DFFFFFE0000000
  %36 = fptosi float %35 to i32
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %28, i32 1
  %38 = load float, float* %37, align 4
  %39 = call float @llvm.floor.f32(float %38)
  %40 = fcmp olt float %39, 0x41DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0x41DFFFFFE0000000
  %42 = fcmp ogt float %41, 0xC1DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0xC1DFFFFFE0000000
  %44 = fptosi float %43 to i32
  %45 = load i32, i32* %21, align 4
  %46 = icmp sgt i32 %45, %36
  %47 = load i32, i32* %22, align 4
  %48 = icmp sle i32 %47, %36
  %49 = or i1 %48, %46
  %50 = load i32, i32* %23, align 4
  %51 = icmp sgt i32 %50, %44
  %52 = or i1 %49, %51
  %53 = xor i1 %52, true
  %54 = load i32, i32* %24, align 4
  %55 = icmp sgt i32 %54, %44
  %56 = and i1 %55, %53
  br i1 %56, label %57, label %66

57:                                               ; preds = %27
  %58 = load i32, i32* %5, align 4
  %59 = trunc i32 %58 to i16
  %60 = sext i32 %44 to i64
  %61 = mul i64 %18, %60
  %62 = getelementptr inbounds i8, i8* %16, i64 %61
  %63 = bitcast i8* %62 to i16*
  %64 = sext i32 %36 to i64
  %65 = getelementptr inbounds i16, i16* %63, i64 %64
  store i16 %59, i16* %65, align 2
  br label %66

66:                                               ; preds = %27, %57
  %67 = add nuw nsw i64 %28, 1
  %68 = icmp eq i64 %67, %25
  br i1 %68, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL23bw_pt_rect_32_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint* nocapture readonly, i32, %class.SkBlitter*) #0 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %7 = load %class.SkRasterClip*, %class.SkRasterClip** %6, align 8
  %8 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %7) #9
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 -1431655766, i32* %5, align 4
  %10 = bitcast %class.SkBlitter* %3 to %class.SkPixmap* (%class.SkBlitter*, i32*)***
  %11 = load %class.SkPixmap* (%class.SkBlitter*, i32*)**, %class.SkPixmap* (%class.SkBlitter*, i32*)*** %10, align 8
  %12 = getelementptr inbounds %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %11, i64 8
  %13 = load %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %12, align 8
  %14 = call %class.SkPixmap* %13(%class.SkBlitter* %3, i32* nonnull %5) #9
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i32 %2, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %4
  %21 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %25 = zext i32 %2 to i64
  br label %27

26:                                               ; preds = %65, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  ret void

27:                                               ; preds = %65, %20
  %28 = phi i64 [ 0, %20 ], [ %66, %65 ]
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %28, i32 0
  %30 = load float, float* %29, align 4
  %31 = call float @llvm.floor.f32(float %30)
  %32 = fcmp olt float %31, 0x41DFFFFFE0000000
  %33 = select i1 %32, float %31, float 0x41DFFFFFE0000000
  %34 = fcmp ogt float %33, 0xC1DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0xC1DFFFFFE0000000
  %36 = fptosi float %35 to i32
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %28, i32 1
  %38 = load float, float* %37, align 4
  %39 = call float @llvm.floor.f32(float %38)
  %40 = fcmp olt float %39, 0x41DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0x41DFFFFFE0000000
  %42 = fcmp ogt float %41, 0xC1DFFFFFE0000000
  %43 = select i1 %42, float %41, float 0xC1DFFFFFE0000000
  %44 = fptosi float %43 to i32
  %45 = load i32, i32* %21, align 4
  %46 = icmp sgt i32 %45, %36
  %47 = load i32, i32* %22, align 4
  %48 = icmp sle i32 %47, %36
  %49 = or i1 %48, %46
  %50 = load i32, i32* %23, align 4
  %51 = icmp sgt i32 %50, %44
  %52 = or i1 %49, %51
  %53 = xor i1 %52, true
  %54 = load i32, i32* %24, align 4
  %55 = icmp sgt i32 %54, %44
  %56 = and i1 %55, %53
  br i1 %56, label %57, label %65

57:                                               ; preds = %27
  %58 = load i32, i32* %5, align 4
  %59 = sext i32 %44 to i64
  %60 = mul i64 %18, %59
  %61 = getelementptr inbounds i8, i8* %16, i64 %60
  %62 = bitcast i8* %61 to i32*
  %63 = sext i32 %36 to i64
  %64 = getelementptr inbounds i32, i32* %62, i64 %63
  store i32 %58, i32* %64, align 4
  br label %65

65:                                               ; preds = %27, %57
  %66 = add nuw nsw i64 %28, 1
  %67 = icmp eq i64 %66, %25
  br i1 %67, label %26, label %27
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL20bw_pt_rect_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint* nocapture readonly, i32, %class.SkBlitter*) #0 {
  %5 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 2
  %6 = load %class.SkRegion*, %class.SkRegion** %5, align 8
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %6, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %6, i64 0, i32 0, i32 3
  %13 = bitcast %class.SkBlitter* %3 to void (%class.SkBlitter*, i32, i32, i32)***
  %14 = zext i32 %2 to i64
  br label %16

15:                                               ; preds = %49, %4
  ret void

16:                                               ; preds = %49, %8
  %17 = phi i64 [ 0, %8 ], [ %50, %49 ]
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %17, i32 0
  %19 = load float, float* %18, align 4
  %20 = tail call float @llvm.floor.f32(float %19)
  %21 = fcmp olt float %20, 0x41DFFFFFE0000000
  %22 = select i1 %21, float %20, float 0x41DFFFFFE0000000
  %23 = fcmp ogt float %22, 0xC1DFFFFFE0000000
  %24 = select i1 %23, float %22, float 0xC1DFFFFFE0000000
  %25 = fptosi float %24 to i32
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %17, i32 1
  %27 = load float, float* %26, align 4
  %28 = tail call float @llvm.floor.f32(float %27)
  %29 = fcmp olt float %28, 0x41DFFFFFE0000000
  %30 = select i1 %29, float %28, float 0x41DFFFFFE0000000
  %31 = fcmp ogt float %30, 0xC1DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0xC1DFFFFFE0000000
  %33 = fptosi float %32 to i32
  %34 = load i32, i32* %9, align 4
  %35 = icmp sgt i32 %34, %25
  br i1 %35, label %49, label %36

36:                                               ; preds = %16
  %37 = load i32, i32* %10, align 4
  %38 = icmp sgt i32 %37, %25
  br i1 %38, label %39, label %49

39:                                               ; preds = %36
  %40 = load i32, i32* %11, align 4
  %41 = icmp sgt i32 %40, %33
  br i1 %41, label %49, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %12, align 4
  %44 = icmp sgt i32 %43, %33
  br i1 %44, label %45, label %49

45:                                               ; preds = %42
  %46 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %13, align 8
  %47 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %46, i64 2
  %48 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %47, align 8
  tail call void %48(%class.SkBlitter* %3, i32 %25, i32 %33, i32 1) #9
  br label %49

49:                                               ; preds = %16, %36, %39, %45, %42
  %50 = add nuw nsw i64 %17, 1
  %51 = icmp eq i64 %50, %14
  br i1 %51, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL15bw_pt_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint* nocapture readonly, i32, %class.SkBlitter*) #0 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 2
  %8 = bitcast %class.SkBlitter* %3 to void (%class.SkBlitter*, i32, i32, i32)***
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %35, %4
  ret void

11:                                               ; preds = %35, %6
  %12 = phi i64 [ 0, %6 ], [ %36, %35 ]
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %12, i32 0
  %14 = load float, float* %13, align 4
  %15 = tail call float @llvm.floor.f32(float %14)
  %16 = fcmp olt float %15, 0x41DFFFFFE0000000
  %17 = select i1 %16, float %15, float 0x41DFFFFFE0000000
  %18 = fcmp ogt float %17, 0xC1DFFFFFE0000000
  %19 = select i1 %18, float %17, float 0xC1DFFFFFE0000000
  %20 = fptosi float %19 to i32
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %12, i32 1
  %22 = load float, float* %21, align 4
  %23 = tail call float @llvm.floor.f32(float %22)
  %24 = fcmp olt float %23, 0x41DFFFFFE0000000
  %25 = select i1 %24, float %23, float 0x41DFFFFFE0000000
  %26 = fcmp ogt float %25, 0xC1DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0xC1DFFFFFE0000000
  %28 = fptosi float %27 to i32
  %29 = load %class.SkRegion*, %class.SkRegion** %7, align 8
  %30 = tail call zeroext i1 @_ZNK8SkRegion8containsEii(%class.SkRegion* %29, i32 %20, i32 %28) #9
  br i1 %30, label %31, label %35

31:                                               ; preds = %11
  %32 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %8, align 8
  %33 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %32, i64 2
  %34 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %33, align 8
  tail call void %34(%class.SkBlitter* %3, i32 %20, i32 %28, i32 1) #9
  br label %35

35:                                               ; preds = %31, %11
  %36 = add nuw nsw i64 %12, 1
  %37 = icmp eq i64 %36, %9
  br i1 %37, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17bw_line_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint*, i32, %class.SkBlitter*) #0 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  br label %9

8:                                                ; preds = %9, %4
  ret void

9:                                                ; preds = %6, %9
  %10 = phi i64 [ 0, %6 ], [ %13, %9 ]
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %10
  %12 = load %class.SkRasterClip*, %class.SkRasterClip** %7, align 8
  tail call void @_ZN6SkScan8HairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint* %11, i32 2, %class.SkRasterClip* dereferenceable(72) %12, %class.SkBlitter* %3) #9
  %13 = add nuw i64 %10, 2
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, %2
  br i1 %15, label %9, label %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL17bw_poly_hair_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* nocapture readonly dereferenceable(1216), %struct.SkPoint*, i32, %class.SkBlitter*) #0 {
  %5 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %6 = load %class.SkRasterClip*, %class.SkRasterClip** %5, align 8
  tail call void @_ZN6SkScan8HairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint* %1, i32 %2, %class.SkRasterClip* dereferenceable(72) %6, %class.SkBlitter* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL14bw_square_procRK9PtProcRecPK7SkPointiP9SkBlitter(%struct.PtProcRec* dereferenceable(1216), %struct.SkPoint* nocapture readonly, i32, %class.SkBlitter*) #4 {
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %9 = icmp sgt i32 %2, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1, i64 0
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %16 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 5
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %19 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 4
  %20 = bitcast { i64, i64 }* %7 to i8*
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %23 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %0, i64 0, i32 3
  %24 = zext i32 %2 to i64
  br label %26

25:                                               ; preds = %81, %4
  ret void

26:                                               ; preds = %81, %10
  %27 = phi i64 [ 0, %10 ], [ %82, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 %27
  %29 = bitcast %struct.SkPoint* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = load float, float* %16, align 8
  %32 = extractelement <2 x float> %30, i32 0
  %33 = fsub float %32, %31
  %34 = insertelement <2 x float> undef, float %33, i32 0
  %35 = extractelement <2 x float> %30, i32 1
  %36 = fsub float %35, %31
  %37 = insertelement <2 x float> %34, float %36, i32 1
  %38 = fadd float %32, %31
  %39 = insertelement <2 x float> undef, float %38, i32 0
  %40 = fadd float %35, %31
  %41 = insertelement <2 x float> %39, float %40, i32 1
  store <2 x float> %37, <2 x float>* %17, align 8
  store <2 x float> %41, <2 x float>* %18, align 8
  %42 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %6, %struct.SkRect* dereferenceable(16) %19) #9
  br i1 %42, label %43, label %81

43:                                               ; preds = %26
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #9
  %44 = load float, float* %12, align 8
  %45 = fmul float %44, 6.553600e+04
  %46 = fcmp olt float %45, 0x41DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0x41DFFFFFE0000000
  %48 = fcmp ogt float %47, 0xC1DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0xC1DFFFFFE0000000
  %50 = fptosi float %49 to i32
  %51 = load float, float* %13, align 4
  %52 = fmul float %51, 6.553600e+04
  %53 = fcmp olt float %52, 0x41DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0x41DFFFFFE0000000
  %55 = fcmp ogt float %54, 0xC1DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0xC1DFFFFFE0000000
  %57 = fptosi float %56 to i32
  %58 = load float, float* %14, align 8
  %59 = fmul float %58, 6.553600e+04
  %60 = fcmp olt float %59, 0x41DFFFFFE0000000
  %61 = select i1 %60, float %59, float 0x41DFFFFFE0000000
  %62 = fcmp ogt float %61, 0xC1DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0xC1DFFFFFE0000000
  %64 = fptosi float %63 to i32
  %65 = load float, float* %15, align 4
  %66 = fmul float %65, 6.553600e+04
  %67 = fcmp olt float %66, 0x41DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0x41DFFFFFE0000000
  %69 = fcmp ogt float %68, 0xC1DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0xC1DFFFFFE0000000
  %71 = fptosi float %70 to i32
  %72 = zext i32 %57 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %50 to i64
  %75 = or i64 %73, %74
  %76 = zext i32 %71 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %64 to i64
  %79 = or i64 %77, %78
  store i64 %75, i64* %21, align 8
  store i64 %79, i64* %22, align 8
  %80 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  call void @_ZN6SkScan9FillXRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* nonnull dereferenceable(16) %8, %class.SkRasterClip* dereferenceable(72) %80, %class.SkBlitter* %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #9
  br label %81

81:                                               ; preds = %43, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  %82 = add nuw nsw i64 %27, 1
  %83 = icmp eq i64 %82, %24
  br i1 %83, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice(%class.SkDraw*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72), %class.SkBaseDevice*) local_unnamed_addr #4 align 2 {
  %7 = alloca <2 x i64>, align 16
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca %struct.PtProcRec, align 8
  %10 = alloca %class.SkAutoBlitterChoose, align 8
  %11 = alloca [32 x %struct.SkPoint], align 16
  %12 = alloca %class.SkBlitter*, align 8
  %13 = alloca %class.SkPaint, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %16 = alloca %class.SkPath, align 8
  %17 = alloca %class.SkMatrix, align 16
  %18 = alloca %struct.SkRect, align 4
  %19 = alloca %class.SkStrokeRec, align 4
  %20 = alloca %"class.SkPathEffectBase::PointData", align 8
  %21 = alloca %class.SkPath, align 8
  %22 = alloca { <2 x float>, <2 x float> }, align 8
  %23 = bitcast { <2 x float>, <2 x float> }* %22 to %struct.SkRect*
  %24 = alloca %class.SkPaint, align 8
  %25 = alloca %class.sk_sp.7, align 8
  %26 = alloca <4 x float>, align 16
  %27 = bitcast <4 x float>* %26 to %struct.SkRect*
  %28 = alloca %class.SkPath, align 8
  %29 = alloca %class.SkPaint, align 8
  %30 = icmp eq i32 %1, 1
  %31 = and i64 %2, -2
  %32 = select i1 %30, i64 %31, i64 %2
  %33 = icmp slt i64 %32, 1
  br i1 %33, label %436, label %34

34:                                               ; preds = %6
  %35 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %36 = load %class.SkRasterClip*, %class.SkRasterClip** %35, align 8
  %37 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %36, i64 0, i32 3
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %436

40:                                               ; preds = %34
  %41 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 -1, i64 36, i1 false)
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  store i32 -1431655766, i32* %42, align 4
  %43 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %44 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %43, align 8
  %45 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %44, i64 0, i32 2
  %46 = bitcast %class.SkMatrix* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %46, i64 40, i1 false)
  %47 = bitcast %struct.PtProcRec* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1216, i8* nonnull %47) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 bitcast ({ i32, [4 x i8], %class.SkPaint*, %class.SkRegion*, %class.SkRasterClip*, %struct.SkRect, float, [4 x i8], %class.SkAAClipBlitterWrapper }* @__const._ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice.rec to i8*), i64 1216, i1 false)
  %48 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %9, i64 0, i32 6
  call void @_ZN22SkAAClipBlitterWrapperC1Ev(%class.SkAAClipBlitterWrapper* %48) #9
  %49 = icmp ne %class.SkBaseDevice* %5, null
  br i1 %49, label %153, label %50

50:                                               ; preds = %40
  %51 = load %class.SkRasterClip*, %class.SkRasterClip** %35, align 8
  %52 = call zeroext i1 @_ZN9PtProcRec4initEN8SkCanvas9PointModeERK7SkPaintPK8SkMatrixPK12SkRasterClip(%struct.PtProcRec* nonnull %9, i32 %1, %class.SkPaint* dereferenceable(72) %4, %class.SkMatrix* nonnull %8, %class.SkRasterClip* %51)
  br i1 %52, label %53, label %153

53:                                               ; preds = %50
  %54 = bitcast %class.SkAutoBlitterChoose* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3376, i8* nonnull %54) #9
  %55 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %10, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 3368, i1 false)
  %56 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %10, i64 0, i32 0
  store %class.SkBlitter* null, %class.SkBlitter** %56, align 8
  %57 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %10, i64 0, i32 1, i32 0, i32 0, i64 3336
  %58 = bitcast i8* %57 to %class.SkArenaAlloc*
  %59 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %10, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %58, i8* %59, i64 3332, i64 3332) #9
  %60 = call %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose* nonnull %10, %class.SkDraw* dereferenceable(72) %0, %class.SkMatrixProvider* null, %class.SkPaint* dereferenceable(72) %4, i1 zeroext false) #9
  %61 = bitcast [32 x %struct.SkPoint]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %61) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 -1, i64 256, i1 false)
  %62 = bitcast %class.SkBlitter** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #9
  %63 = bitcast %class.SkAutoBlitterChoose* %10 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %class.SkBlitter** %12 to i64*
  store i64 %64, i64* %65, align 8
  %66 = call void (%struct.PtProcRec*, %struct.SkPoint*, i32, %class.SkBlitter*)* @_ZN9PtProcRec10chooseProcEPP9SkBlitter(%struct.PtProcRec* nonnull %9, %class.SkBlitter** nonnull %12)
  %67 = icmp eq i32 %1, 2
  %68 = zext i1 %67 to i64
  %69 = getelementptr inbounds [32 x %struct.SkPoint], [32 x %struct.SkPoint]* %11, i64 0, i64 0
  %70 = getelementptr inbounds [32 x %struct.SkPoint], [32 x %struct.SkPoint]* %11, i64 0, i64 0, i32 0
  %71 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  br label %72

72:                                               ; preds = %143, %53
  %73 = phi %struct.SkPoint* [ %3, %53 ], [ %146, %143 ]
  %74 = phi i64 [ %32, %53 ], [ %150, %143 ]
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %75, 32
  %77 = select i1 %76, i32 %75, i32 32
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %8, %struct.SkPoint* nonnull %69, %struct.SkPoint* %73, i32 %77) #9
  %78 = icmp sgt i32 %75, 0
  br i1 %78, label %79, label %143

79:                                               ; preds = %72
  %80 = shl nsw i32 %77, 1
  %81 = zext i32 %80 to i64
  %82 = add nsw i64 %81, -1
  %83 = and i64 %81, 6
  %84 = icmp ult i64 %82, 7
  br i1 %84, label %125, label %85

85:                                               ; preds = %79
  %86 = sub nsw i64 %81, %83
  br label %87

87:                                               ; preds = %87, %85
  %88 = phi i64 [ 0, %85 ], [ %122, %87 ]
  %89 = phi float [ 0.000000e+00, %85 ], [ %121, %87 ]
  %90 = phi i64 [ %86, %85 ], [ %123, %87 ]
  %91 = getelementptr inbounds float, float* %70, i64 %88
  %92 = load float, float* %91, align 16
  %93 = fmul float %89, %92
  %94 = or i64 %88, 1
  %95 = getelementptr inbounds float, float* %70, i64 %94
  %96 = load float, float* %95, align 4
  %97 = fmul float %93, %96
  %98 = or i64 %88, 2
  %99 = getelementptr inbounds float, float* %70, i64 %98
  %100 = load float, float* %99, align 8
  %101 = fmul float %97, %100
  %102 = or i64 %88, 3
  %103 = getelementptr inbounds float, float* %70, i64 %102
  %104 = load float, float* %103, align 4
  %105 = fmul float %101, %104
  %106 = or i64 %88, 4
  %107 = getelementptr inbounds float, float* %70, i64 %106
  %108 = load float, float* %107, align 16
  %109 = fmul float %105, %108
  %110 = or i64 %88, 5
  %111 = getelementptr inbounds float, float* %70, i64 %110
  %112 = load float, float* %111, align 4
  %113 = fmul float %109, %112
  %114 = or i64 %88, 6
  %115 = getelementptr inbounds float, float* %70, i64 %114
  %116 = load float, float* %115, align 8
  %117 = fmul float %113, %116
  %118 = or i64 %88, 7
  %119 = getelementptr inbounds float, float* %70, i64 %118
  %120 = load float, float* %119, align 4
  %121 = fmul float %117, %120
  %122 = add nuw nsw i64 %88, 8
  %123 = add i64 %90, -8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %87

125:                                              ; preds = %87, %79
  %126 = phi float [ undef, %79 ], [ %121, %87 ]
  %127 = phi i64 [ 0, %79 ], [ %122, %87 ]
  %128 = phi float [ 0.000000e+00, %79 ], [ %121, %87 ]
  %129 = icmp eq i64 %83, 0
  br i1 %129, label %140, label %130

130:                                              ; preds = %125, %130
  %131 = phi i64 [ %137, %130 ], [ %127, %125 ]
  %132 = phi float [ %136, %130 ], [ %128, %125 ]
  %133 = phi i64 [ %138, %130 ], [ %83, %125 ]
  %134 = getelementptr inbounds float, float* %70, i64 %131
  %135 = load float, float* %134, align 4
  %136 = fmul float %132, %135
  %137 = add nuw nsw i64 %131, 1
  %138 = add i64 %133, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %130, !llvm.loop !3

140:                                              ; preds = %130, %125
  %141 = phi float [ %126, %125 ], [ %136, %130 ]
  %142 = fcmp oeq float %141, 0.000000e+00
  br i1 %142, label %143, label %152

143:                                              ; preds = %72, %140
  call void %66(%struct.PtProcRec* nonnull dereferenceable(1216) %9, %struct.SkPoint* nonnull %69, i32 %77, %class.SkBlitter* %71) #9
  %144 = sext i32 %77 to i64
  %145 = sub nsw i64 %144, %68
  %146 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %73, i64 %145
  %147 = sub i64 %74, %144
  %148 = icmp eq i64 %147, 0
  %149 = add i64 %147, %68
  %150 = select i1 %148, i64 0, i64 %149
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %72

152:                                              ; preds = %140, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #9
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %61) #9
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %58) #9
  call void @llvm.lifetime.end.p0i8(i64 3376, i8* nonnull %54) #9
  br label %433

153:                                              ; preds = %50, %40
  switch i32 %1, label %433 [
    i32 0, label %154
    i32 1, label %242
    i32 2, label %398
  ]

154:                                              ; preds = %153
  %155 = bitcast %class.SkPaint* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %155) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %13, %class.SkPaint* dereferenceable(72) %4) #9
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %13, i8 zeroext 0) #9
  %156 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %13, i64 0, i32 6
  %157 = load float, float* %156, align 8
  %158 = fmul float %157, 5.000000e-01
  %159 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %13, i64 0, i32 8, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = and i32 %160, 12
  %162 = icmp eq i32 %161, 4
  br i1 %162, label %163, label %213

163:                                              ; preds = %154
  br i1 %49, label %164, label %185

164:                                              ; preds = %163
  %165 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  %166 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %167 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %168 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  %169 = insertelement <2 x float> undef, float %158, i32 0
  %170 = shufflevector <2 x float> %169, <2 x float> undef, <2 x i32> zeroinitializer
  %171 = insertelement <2 x float> undef, float %158, i32 0
  %172 = shufflevector <2 x float> %171, <2 x float> undef, <2 x i32> zeroinitializer
  br label %173

173:                                              ; preds = %173, %164
  %174 = phi i64 [ 0, %164 ], [ %183, %173 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #9
  %175 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %174, i32 0
  %176 = bitcast float* %175 to <2 x float>*
  %177 = load <2 x float>, <2 x float>* %176, align 4
  %178 = fsub <2 x float> %177, %172
  %179 = fadd <2 x float> %170, %177
  store <2 x float> %178, <2 x float>* %166, align 8
  store <2 x float> %179, <2 x float>* %167, align 8
  %180 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %168, align 8
  %181 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %180, i64 28
  %182 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %181, align 8
  call void %182(%class.SkBaseDevice* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %15, %class.SkPaint* nonnull dereferenceable(72) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #9
  %183 = add nuw i64 %174, 1
  %184 = icmp eq i64 %183, %32
  br i1 %184, label %241, label %173

185:                                              ; preds = %163
  %186 = bitcast %class.SkPath* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186) #9
  %187 = getelementptr inbounds %class.SkPath, %class.SkPath* %16, i64 0, i32 4
  %188 = bitcast %class.SkPath* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %16) #9
  %189 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %189) #9
  %190 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 1
  %191 = bitcast %class.SkMatrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %191, align 16
  %192 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 4
  %193 = bitcast float* %192 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %193, align 16
  %194 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %194, align 16
  store i32 16, i32* %190, align 4
  %195 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath* nonnull %16, float 0.000000e+00, float 0.000000e+00, float %158, i32 0) #9
  %196 = add nsw i64 %32, -1
  br label %198

197:                                              ; preds = %198
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %189) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %16) #9
  br label %239

198:                                              ; preds = %198, %185
  %199 = phi i64 [ 0, %185 ], [ %211, %198 ]
  %200 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %199, i32 0
  %201 = load float, float* %200, align 4
  %202 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %199, i32 1
  %203 = load float, float* %202, align 4
  %204 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %17, float %201, float %203) #9
  %205 = icmp eq i64 %196, %199
  %206 = zext i1 %205 to i8
  %207 = load i8, i8* %187, align 2
  %208 = shl nuw nsw i8 %206, 2
  %209 = and i8 %207, -5
  %210 = or i8 %209, %208
  store i8 %210, i8* %187, align 2
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %0, %class.SkPath* nonnull dereferenceable(16) %16, %class.SkPaint* nonnull dereferenceable(72) %13, %class.SkMatrix* nonnull %17, i1 zeroext %205, i1 zeroext false, %class.SkBlitter* null) #9
  %211 = add nuw i64 %199, 1
  %212 = icmp eq i64 %211, %32
  br i1 %212, label %197, label %198

213:                                              ; preds = %154
  %214 = bitcast %struct.SkRect* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #9
  %215 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %18, i64 0, i32 0
  %216 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %18, i64 0, i32 1
  %217 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %18, i64 0, i32 2
  %218 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %18, i64 0, i32 3
  %219 = bitcast %struct.SkRect* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %219, i8 -1, i64 16, i1 false)
  %220 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  br label %221

221:                                              ; preds = %236, %213
  %222 = phi i64 [ 0, %213 ], [ %237, %236 ]
  %223 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %222, i32 0
  %224 = load float, float* %223, align 4
  %225 = fsub float %224, %158
  store float %225, float* %215, align 4
  %226 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %222, i32 1
  %227 = load float, float* %226, align 4
  %228 = fsub float %227, %158
  store float %228, float* %216, align 4
  %229 = fadd float %157, %225
  store float %229, float* %217, align 4
  %230 = fadd float %157, %228
  store float %230, float* %218, align 4
  br i1 %49, label %231, label %235

231:                                              ; preds = %221
  %232 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %220, align 8
  %233 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %232, i64 26
  %234 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %233, align 8
  call void %234(%class.SkBaseDevice* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %18, %class.SkPaint* nonnull dereferenceable(72) %13) #9
  br label %236

235:                                              ; preds = %221
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* %0, %struct.SkRect* nonnull dereferenceable(16) %18, %class.SkPaint* nonnull dereferenceable(72) %13, %class.SkMatrix* null, %struct.SkRect* null) #9
  br label %236

236:                                              ; preds = %231, %235
  %237 = add nuw i64 %222, 1
  %238 = icmp eq i64 %237, %32
  br i1 %238, label %239, label %221

239:                                              ; preds = %236, %197
  %240 = phi i8* [ %186, %197 ], [ %214, %236 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %240) #9
  br label %241

241:                                              ; preds = %173, %239
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %155) #9
  br label %433

242:                                              ; preds = %153
  %243 = icmp eq i64 %32, 2
  br i1 %243, label %244, label %398

244:                                              ; preds = %242
  %245 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %4, i64 0, i32 0, i32 0
  %246 = load %class.SkPathEffect*, %class.SkPathEffect** %245, align 8
  %247 = icmp eq %class.SkPathEffect* %246, null
  br i1 %247, label %398, label %248

248:                                              ; preds = %244
  %249 = bitcast %class.SkStrokeRec* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #9
  %250 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %19, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %250, align 4
  %251 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %19, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %251, align 4
  %252 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %19, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %252, align 4
  %253 = getelementptr inbounds %class.SkStrokeRec, %class.SkStrokeRec* %19, i64 0, i32 3
  store i32 -1431655766, i32* %253, align 4
  call void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec* nonnull %19, %class.SkPaint* dereferenceable(72) %4, float 1.000000e+00) #9
  %254 = bitcast %"class.SkPathEffectBase::PointData"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %254) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %254, i8* align 8 bitcast ({ i32, [4 x i8], %struct.SkPoint*, i32, %struct.SkPoint, %struct.SkRect, [4 x i8], %class.SkPath, %class.SkPath, %class.SkPath }* @__const._ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice.pointData to i8*), i64 96, i1 false)
  %255 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 0
  store i32 0, i32* %255, align 8
  %256 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 1
  store %struct.SkPoint* null, %struct.SkPoint** %256, align 8
  %257 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 2
  store i32 0, i32* %257, align 8
  %258 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 6
  call void @_ZN6SkPathC1Ev(%class.SkPath* %258) #9
  %259 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 7
  call void @_ZN6SkPathC1Ev(%class.SkPath* %259) #9
  %260 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 8
  call void @_ZN6SkPathC1Ev(%class.SkPath* %260) #9
  %261 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 3, i32 0
  store float 1.000000e+00, float* %261, align 4
  %262 = getelementptr inbounds %"class.SkPathEffectBase::PointData", %"class.SkPathEffectBase::PointData"* %20, i64 0, i32 3, i32 1
  store float 1.000000e+00, float* %262, align 4
  %263 = bitcast %class.SkPath* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %263) #9
  %264 = bitcast %class.SkPath* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 16, i1 false)
  %265 = bitcast %struct.SkPoint* %3 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 4
  %267 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %267) #9, !noalias !5
  store <2 x i64> %266, <2 x i64>* %7, align 16, !noalias !5
  %268 = bitcast <2 x i64>* %7 to %struct.SkPoint*
  call void @_ZN6SkPath7PolygonEPK7SkPointib14SkPathFillTypeb(%class.SkPath* nonnull sret %21, %struct.SkPoint* nonnull %268, i32 2, i1 zeroext false, i32 0, i1 zeroext false) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %267) #9, !noalias !5
  %269 = bitcast { <2 x float>, <2 x float> }* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #9
  %270 = bitcast { <2 x float>, <2 x float> }* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %270, i8 -1, i64 16, i1 false)
  %271 = load %class.SkRasterClip*, %class.SkRasterClip** %35, align 8
  %272 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %271) #9
  %273 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %272, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = sitofp i32 %274 to float
  %276 = insertelement <2 x float> undef, float %275, i32 0
  %277 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %272, i64 0, i32 1
  %278 = load i32, i32* %277, align 4
  %279 = sitofp i32 %278 to float
  %280 = insertelement <2 x float> %276, float %279, i32 1
  %281 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %272, i64 0, i32 2
  %282 = load i32, i32* %281, align 4
  %283 = sitofp i32 %282 to float
  %284 = insertelement <2 x float> undef, float %283, i32 0
  %285 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %272, i64 0, i32 3
  %286 = load i32, i32* %285, align 4
  %287 = sitofp i32 %286 to float
  %288 = insertelement <2 x float> %284, float %287, i32 1
  %289 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 0
  store <2 x float> %280, <2 x float>* %289, align 8
  %290 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %22, i64 0, i32 1
  store <2 x float> %288, <2 x float>* %290, align 8
  %291 = bitcast %class.SkPaint* %4 to %class.SkPathEffectBase**
  %292 = load %class.SkPathEffectBase*, %class.SkPathEffectBase** %291, align 8
  %293 = call zeroext i1 @_ZNK16SkPathEffectBase8asPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase* %292, %"class.SkPathEffectBase::PointData"* nonnull %20, %class.SkPath* nonnull dereferenceable(16) %21, %class.SkStrokeRec* nonnull dereferenceable(16) %19, %class.SkMatrix* nonnull dereferenceable(40) %8, %struct.SkRect* nonnull %23) #9
  br i1 %293, label %294, label %392

294:                                              ; preds = %248
  %295 = bitcast %class.SkPaint* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %295) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %295, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %24, %class.SkPaint* dereferenceable(72) %4) #9
  %296 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %25, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %296, align 8
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %24, %class.sk_sp.7* nonnull %25) #9
  %297 = load %class.SkPathEffect*, %class.SkPathEffect** %296, align 8
  %298 = icmp eq %class.SkPathEffect* %297, null
  br i1 %298, label %309, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %297, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = atomicrmw add i32* %300, i32 -1 acq_rel
  %302 = icmp eq i32 %301, 1
  br i1 %302, label %303, label %309

303:                                              ; preds = %299
  %304 = bitcast %class.SkPathEffect* %297 to %class.SkRefCntBase*
  %305 = bitcast %class.SkPathEffect* %297 to void (%class.SkRefCntBase*)***
  %306 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %305, align 8
  %307 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %306, i64 2
  %308 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %307, align 8
  call void %308(%class.SkRefCntBase* nonnull %304) #9
  br label %309

309:                                              ; preds = %294, %299, %303
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %24, i8 zeroext 0) #9
  %310 = getelementptr inbounds %class.SkPath, %class.SkPath* %259, i64 0, i32 0, i32 0
  %311 = load %class.SkPathRef*, %class.SkPathRef** %310, align 8
  %312 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %311, i64 0, i32 4, i32 2
  %313 = load i32, i32* %312, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %322, label %315

315:                                              ; preds = %309
  br i1 %49, label %316, label %321

316:                                              ; preds = %315
  %317 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %318 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %317, align 8
  %319 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %318, i64 32
  %320 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %319, align 8
  call void %320(%class.SkBaseDevice* nonnull %5, %class.SkPath* dereferenceable(16) %259, %class.SkPaint* nonnull dereferenceable(72) %24, i1 zeroext false) #9
  br label %322

321:                                              ; preds = %315
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %0, %class.SkPath* dereferenceable(16) %259, %class.SkPaint* nonnull dereferenceable(72) %24, %class.SkMatrix* null, i1 zeroext false, i1 zeroext false, %class.SkBlitter* null) #9
  br label %322

322:                                              ; preds = %316, %321, %309
  %323 = getelementptr inbounds %class.SkPath, %class.SkPath* %260, i64 0, i32 0, i32 0
  %324 = load %class.SkPathRef*, %class.SkPathRef** %323, align 8
  %325 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %324, i64 0, i32 4, i32 2
  %326 = load i32, i32* %325, align 4
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %335, label %328

328:                                              ; preds = %322
  br i1 %49, label %329, label %334

329:                                              ; preds = %328
  %330 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %331 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %330, align 8
  %332 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %331, i64 32
  %333 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %332, align 8
  call void %333(%class.SkBaseDevice* nonnull %5, %class.SkPath* dereferenceable(16) %260, %class.SkPaint* nonnull dereferenceable(72) %24, i1 zeroext false) #9
  br label %335

334:                                              ; preds = %328
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %0, %class.SkPath* dereferenceable(16) %260, %class.SkPaint* nonnull dereferenceable(72) %24, %class.SkMatrix* null, i1 zeroext false, i1 zeroext false, %class.SkBlitter* null) #9
  br label %335

335:                                              ; preds = %329, %334, %322
  %336 = bitcast float* %261 to <2 x float>*
  %337 = load <2 x float>, <2 x float>* %336, align 4
  %338 = extractelement <2 x float> %337, i32 0
  %339 = extractelement <2 x float> %337, i32 1
  %340 = fcmp oeq float %338, %339
  br i1 %340, label %341, label %353

341:                                              ; preds = %335
  %342 = load i32, i32* %255, align 8
  %343 = and i32 %342, 1
  call void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint* nonnull %24, i32 %343) #9
  %344 = load i32, i32* %257, align 8
  %345 = sext i32 %344 to i64
  %346 = load %struct.SkPoint*, %struct.SkPoint** %256, align 8
  br i1 %49, label %347, label %352

347:                                              ; preds = %341
  %348 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)***
  %349 = load void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)**, void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*** %348, align 8
  %350 = getelementptr inbounds void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %349, i64 25
  %351 = load void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)*, void (%class.SkBaseDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)** %350, align 8
  call void %351(%class.SkBaseDevice* nonnull %5, i32 0, i64 %345, %struct.SkPoint* %346, %class.SkPaint* nonnull dereferenceable(72) %24) #9
  br label %386

352:                                              ; preds = %341
  call void @_ZNK6SkDraw10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaintP12SkBaseDevice(%class.SkDraw* %0, i32 0, i64 %345, %struct.SkPoint* %346, %class.SkPaint* nonnull dereferenceable(72) %24, %class.SkBaseDevice* null)
  br label %386

353:                                              ; preds = %335
  %354 = bitcast <4 x float>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %354) #9
  %355 = bitcast <4 x float>* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %355, i8 -1, i64 16, i1 false)
  %356 = load i32, i32* %257, align 8
  %357 = icmp sgt i32 %356, 0
  br i1 %357, label %358, label %361

358:                                              ; preds = %353
  %359 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  %360 = bitcast float* %261 to <2 x float>*
  br label %362

361:                                              ; preds = %379, %353
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %354) #9
  br label %386

362:                                              ; preds = %384, %358
  %363 = phi i64 [ 0, %358 ], [ %380, %384 ]
  %364 = phi <2 x float> [ %337, %358 ], [ %385, %384 ]
  %365 = shufflevector <2 x float> %364, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %366 = load %struct.SkPoint*, %struct.SkPoint** %256, align 8
  %367 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %366, i64 %363, i32 0
  %368 = bitcast float* %367 to <2 x float>*
  %369 = load <2 x float>, <2 x float>* %368, align 4
  %370 = shufflevector <2 x float> %369, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %371 = fsub <4 x float> %370, %365
  %372 = fadd <4 x float> %370, %365
  %373 = shufflevector <4 x float> %371, <4 x float> %372, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %373, <4 x float>* %26, align 16
  br i1 %49, label %374, label %378

374:                                              ; preds = %362
  %375 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %359, align 8
  %376 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %375, i64 26
  %377 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %376, align 8
  call void %377(%class.SkBaseDevice* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %27, %class.SkPaint* nonnull dereferenceable(72) %24) #9
  br label %379

378:                                              ; preds = %362
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* %0, %struct.SkRect* nonnull dereferenceable(16) %27, %class.SkPaint* nonnull dereferenceable(72) %24, %class.SkMatrix* null, %struct.SkRect* null) #9
  br label %379

379:                                              ; preds = %374, %378
  %380 = add nuw nsw i64 %363, 1
  %381 = load i32, i32* %257, align 8
  %382 = sext i32 %381 to i64
  %383 = icmp slt i64 %380, %382
  br i1 %383, label %384, label %361

384:                                              ; preds = %379
  %385 = load <2 x float>, <2 x float>* %360, align 4
  br label %362

386:                                              ; preds = %347, %352, %361
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %295) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %263) #9
  %387 = load %struct.SkPoint*, %struct.SkPoint** %256, align 8
  %388 = icmp eq %struct.SkPoint* %387, null
  br i1 %388, label %391, label %389

389:                                              ; preds = %386
  %390 = bitcast %struct.SkPoint* %387 to i8*
  call void @_ZdaPv(i8* %390) #10
  br label %391

391:                                              ; preds = %386, %389
  call void @_ZN6SkPathD1Ev(%class.SkPath* %260) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* %259) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* %258) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %254) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #9
  br label %433

392:                                              ; preds = %248
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %263) #9
  %393 = load %struct.SkPoint*, %struct.SkPoint** %256, align 8
  %394 = icmp eq %struct.SkPoint* %393, null
  br i1 %394, label %397, label %395

395:                                              ; preds = %392
  %396 = bitcast %struct.SkPoint* %393 to i8*
  call void @_ZdaPv(i8* %396) #10
  br label %397

397:                                              ; preds = %392, %395
  call void @_ZN6SkPathD1Ev(%class.SkPath* %260) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* %259) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* %258) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %254) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #9
  br label %398

398:                                              ; preds = %397, %244, %242, %153
  %399 = add nsw i64 %32, -1
  %400 = bitcast %class.SkPath* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %400) #9
  %401 = getelementptr inbounds %class.SkPath, %class.SkPath* %28, i64 0, i32 4
  %402 = bitcast %class.SkPath* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %28) #9
  %403 = bitcast %class.SkPaint* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %403) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %403, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %29, %class.SkPaint* dereferenceable(72) %4) #9
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %29, i8 zeroext 1) #9
  %404 = select i1 %30, i64 2, i64 1
  %405 = load i8, i8* %401, align 2
  %406 = or i8 %405, 4
  store i8 %406, i8* %401, align 2
  %407 = icmp eq i64 %399, 0
  br i1 %407, label %410, label %408

408:                                              ; preds = %398
  %409 = bitcast %class.SkBaseDevice* %5 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  br label %411

410:                                              ; preds = %429, %398
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %403) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %400) #9
  br label %433

411:                                              ; preds = %408, %429
  %412 = phi i64 [ 0, %408 ], [ %431, %429 ]
  %413 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %412, i32 0
  %414 = load float, float* %413, align 4
  %415 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %412, i32 1
  %416 = load float, float* %415, align 4
  %417 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* nonnull %28, float %414, float %416) #9
  %418 = add nuw i64 %412, 1
  %419 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %418, i32 0
  %420 = load float, float* %419, align 4
  %421 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %418, i32 1
  %422 = load float, float* %421, align 4
  %423 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* nonnull %28, float %420, float %422) #9
  br i1 %49, label %424, label %428

424:                                              ; preds = %411
  %425 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %409, align 8
  %426 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %425, i64 32
  %427 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %426, align 8
  call void %427(%class.SkBaseDevice* nonnull %5, %class.SkPath* nonnull dereferenceable(16) %28, %class.SkPaint* nonnull dereferenceable(72) %29, i1 zeroext true) #9
  br label %429

428:                                              ; preds = %411
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %0, %class.SkPath* nonnull dereferenceable(16) %28, %class.SkPaint* nonnull dereferenceable(72) %29, %class.SkMatrix* null, i1 zeroext true, i1 zeroext false, %class.SkBlitter* null) #9
  br label %429

429:                                              ; preds = %428, %424
  %430 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* nonnull %28) #9
  %431 = add i64 %412, %404
  %432 = icmp ult i64 %431, %399
  br i1 %432, label %411, label %410

433:                                              ; preds = %152, %153, %410, %241, %391
  %434 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %9, i64 0, i32 6, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %434) #9
  %435 = getelementptr inbounds %struct.PtProcRec, %struct.PtProcRec* %9, i64 0, i32 6, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* %435) #9
  call void @llvm.lifetime.end.p0i8(i64 1216, i8* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #9
  br label %436

436:                                              ; preds = %34, %6, %433
  ret void
}

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #2

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath*, float, float, float, i32) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #5

declare void @_ZN11SkStrokeRecC1ERK7SkPaintf(%class.SkStrokeRec*, %class.SkPaint* dereferenceable(72), float) unnamed_addr #2

declare zeroext i1 @_ZNK16SkPathEffectBase8asPointsEPNS_9PointDataERK6SkPathRK11SkStrokeRecRK8SkMatrixPK6SkRect(%class.SkPathEffectBase*, %"class.SkPathEffectBase::PointData"*, %class.SkPath* dereferenceable(16), %class.SkStrokeRec* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #2

declare void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint*, %class.sk_sp.7*) local_unnamed_addr #2

declare void @_ZN7SkPaint12setStrokeCapENS_3CapE(%class.SkPaint*, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6SkDraw15ComputeRectTypeERK7SkPaintRK8SkMatrixP7SkPoint(%class.SkPaint* nocapture readonly dereferenceable(72), %class.SkMatrix* dereferenceable(40), %struct.SkPoint* nocapture) local_unnamed_addr #4 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %struct.SkPoint*
  %6 = alloca %struct.SkPoint, align 4
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 6
  %8 = load float, float* %7, align 8
  %9 = fcmp oeq float %8, 0.000000e+00
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 6
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 3
  %15 = icmp ne i8 %14, 2
  %16 = xor i1 %9, true
  %17 = or i1 %15, %16
  %18 = select i1 %17, i8 %14, i8 0
  %19 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 0, i32 0
  %20 = load %class.SkPathEffect*, %class.SkPathEffect** %19, align 8
  %21 = icmp eq %class.SkPathEffect* %20, null
  br i1 %21, label %22, label %65

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 2, i32 0
  %24 = load %class.SkMaskFilter*, %class.SkMaskFilter** %23, align 8
  %25 = icmp eq %class.SkMaskFilter* %24, null
  br i1 %25, label %26, label %65

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = trunc i32 %28 to i8
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  %32 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #9
  %33 = zext i8 %32 to i32
  store i32 %33, i32* %27, align 4
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i32 [ %33, %31 ], [ %28, %26 ]
  %36 = and i32 %35, 16
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq i8 %18, 2
  %39 = or i1 %38, %37
  br i1 %39, label %65, label %40

40:                                               ; preds = %34
  %41 = icmp eq i8 %18, 0
  %42 = or i1 %9, %41
  %43 = zext i1 %41 to i32
  br i1 %42, label %65, label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %10, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %65

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 7
  %50 = load float, float* %49, align 4
  %51 = fcmp olt float %50, 0x3FF6A09E60000000
  br i1 %51, label %65, label %52

52:                                               ; preds = %48
  %53 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  %54 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %54, align 8
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %55, align 4
  %56 = bitcast %struct.SkPoint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 1
  %58 = bitcast float* %7 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = bitcast %struct.SkPoint* %6 to i32*
  store i32 %59, i32* %60, align 4
  %61 = bitcast float* %57 to i32*
  store i32 %59, i32* %61, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %5, %struct.SkPoint* nonnull %6, i32 1) #9
  %62 = load <2 x float>, <2 x float>* %4, align 8
  %63 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  %64 = bitcast %struct.SkPoint* %2 to <2 x float>*
  store <2 x float> %63, <2 x float>* %64, align 4
  br label %65

65:                                               ; preds = %48, %44, %52, %40, %3, %22, %34
  %66 = phi i32 [ 3, %34 ], [ 3, %22 ], [ 3, %3 ], [ %43, %40 ], [ 2, %52 ], [ 3, %44 ], [ 3, %48 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix* readonly, %struct.SkRect*) local_unnamed_addr #4 align 2 {
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %8 = alloca %struct.SkPoint, align 4
  %9 = alloca %struct.SkIRect, align 4
  %10 = alloca %class.SkM44, align 4
  %11 = alloca %class.SkM44, align 4
  %12 = alloca %class.SkTLazy, align 8
  %13 = alloca %class.SkMatrix, align 4
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %struct.SkPoint*
  %16 = alloca %struct.SkRect, align 4
  %17 = alloca { i64, i64 }, align 8
  %18 = bitcast { i64, i64 }* %17 to %struct.SkIRect*
  %19 = alloca %class.SkAutoBlitterChoose, align 8
  %20 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %21 = load %class.SkRasterClip*, %class.SkRasterClip** %20, align 8
  %22 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %21, i64 0, i32 3
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %328

25:                                               ; preds = %5
  %26 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %27 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %26, align 8
  %28 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %28) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 160, i1 false)
  %29 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 1
  store %class.SkPreConcatMatrixProvider* null, %class.SkPreConcatMatrixProvider** %29, align 8
  %30 = icmp ne %class.SkMatrix* %3, null
  br i1 %30, label %31, label %139

31:                                               ; preds = %25
  %32 = bitcast %class.SkM44* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %32) #9
  %33 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %27, i64 0, i32 1
  %34 = bitcast %class.SkM44* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #9
  %35 = bitcast %class.SkMatrix* %3 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 1
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 2
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 3
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 5
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 6
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 7
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = bitcast %class.SkM44* %11 to i32*
  store i32 %36, i32* %61, align 4
  %62 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 1
  %63 = bitcast float* %62 to i32*
  store i32 %45, i32* %63, align 4
  %64 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %64, align 4
  %65 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 3
  %66 = bitcast float* %65 to i32*
  store i32 %54, i32* %66, align 4
  %67 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 4
  %68 = bitcast float* %67 to i32*
  store i32 %39, i32* %68, align 4
  %69 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 5
  %70 = bitcast float* %69 to i32*
  store i32 %48, i32* %70, align 4
  %71 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %71, align 4
  %72 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 7
  %73 = bitcast float* %72 to i32*
  store i32 %57, i32* %73, align 4
  %74 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 8
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %75, align 4
  %76 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 12
  %77 = bitcast float* %76 to i32*
  store i32 %42, i32* %77, align 4
  %78 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 13
  %79 = bitcast float* %78 to i32*
  store i32 %51, i32* %79, align 4
  %80 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %80, align 4
  %81 = getelementptr inbounds %class.SkM44, %class.SkM44* %11, i64 0, i32 0, i64 15
  %82 = bitcast float* %81 to i32*
  store i32 %60, i32* %82, align 4
  %83 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %10, %class.SkM44* dereferenceable(64) %33, %class.SkM44* nonnull dereferenceable(64) %11) #9
  %84 = bitcast %class.SkTLazy* %12 to i32 (...)***
  %85 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* nonnull align 4 %32, i64 64, i1 false) #9
  %86 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 72
  %87 = bitcast %class.SkM44* %10 to i32*
  %88 = load i32, i32* %87, align 4, !noalias !8
  %89 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 4
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4, !noalias !8
  %92 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 12
  %93 = bitcast float* %92 to i32*
  %94 = load i32, i32* %93, align 4, !noalias !8
  %95 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 1
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4, !noalias !8
  %98 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 5
  %99 = bitcast float* %98 to i32*
  %100 = load i32, i32* %99, align 4, !noalias !8
  %101 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 13
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4, !noalias !8
  %104 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 3
  %105 = bitcast float* %104 to i32*
  %106 = load i32, i32* %105, align 4, !noalias !8
  %107 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 7
  %108 = bitcast float* %107 to i32*
  %109 = load i32, i32* %108, align 4, !noalias !8
  %110 = getelementptr inbounds %class.SkM44, %class.SkM44* %10, i64 0, i32 0, i64 15
  %111 = bitcast float* %110 to i32*
  %112 = load i32, i32* %111, align 4, !noalias !8
  %113 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 108
  %114 = bitcast i8* %113 to i32*
  %115 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 76
  %116 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 80
  %117 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 84
  %118 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 88
  %119 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 92
  %120 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 96
  %121 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 100
  %122 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 104
  %123 = bitcast i8* %86 to i32*
  store i32 %88, i32* %123, align 8, !alias.scope !11
  %124 = bitcast i8* %115 to i32*
  store i32 %91, i32* %124, align 4, !alias.scope !11
  %125 = bitcast i8* %116 to i32*
  store i32 %94, i32* %125, align 8, !alias.scope !11
  %126 = bitcast i8* %117 to i32*
  store i32 %97, i32* %126, align 4, !alias.scope !11
  %127 = bitcast i8* %118 to i32*
  store i32 %100, i32* %127, align 8, !alias.scope !11
  %128 = bitcast i8* %119 to i32*
  store i32 %103, i32* %128, align 4, !alias.scope !11
  %129 = bitcast i8* %120 to i32*
  store i32 %106, i32* %129, align 8, !alias.scope !11
  %130 = bitcast i8* %121 to i32*
  store i32 %109, i32* %130, align 4, !alias.scope !11
  %131 = bitcast i8* %122 to i32*
  store i32 %112, i32* %131, align 8, !alias.scope !11
  store i32 128, i32* %114, align 4, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %32) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8
  %132 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 112
  %133 = bitcast i8* %132 to %class.SkMatrixProvider**
  store %class.SkMatrixProvider* %27, %class.SkMatrixProvider** %133, align 8
  %134 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %12, i64 0, i32 0, i64 120
  %135 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 4 %135, i64 40, i1 false) #9
  %136 = bitcast %class.SkPreConcatMatrixProvider** %29 to %class.SkTLazy**
  store %class.SkTLazy* %12, %class.SkTLazy** %136, align 8
  %137 = bitcast %class.SkTLazy* %12 to %class.SkMatrixProvider*
  %138 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %26, align 8
  br label %139

139:                                              ; preds = %25, %31
  %140 = phi %class.SkMatrixProvider* [ %138, %31 ], [ %27, %25 ]
  %141 = phi %class.SkMatrixProvider* [ %137, %31 ], [ %27, %25 ]
  %142 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #9
  %143 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %140, i64 0, i32 2
  %144 = bitcast %class.SkMatrix* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %142, i8* align 4 %144, i64 40, i1 false)
  %145 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #9
  %146 = bitcast i64* %14 to float*
  store float 0xFFFFFFFFE0000000, float* %146, align 8
  %147 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %15, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %147, align 4
  %148 = call i32 @_ZN6SkDraw15ComputeRectTypeERK7SkPaintRK8SkMatrixP7SkPoint(%class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* nonnull dereferenceable(40) %13, %struct.SkPoint* nonnull %15)
  %149 = icmp eq i32 %148, 3
  br i1 %149, label %150, label %151

150:                                              ; preds = %139
  call fastcc void @_ZL17draw_rect_as_pathRK6SkDrawRK6SkRectRK7SkPaintPK16SkMatrixProvider(%class.SkDraw* dereferenceable(72) %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %141)
  br label %320

151:                                              ; preds = %139
  %152 = bitcast %struct.SkRect* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152) #9
  %153 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 0
  %154 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 1
  %155 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 2
  %156 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %16, i64 0, i32 3
  %157 = select i1 %30, %struct.SkRect* %4, %struct.SkRect* %1
  %158 = bitcast %struct.SkRect* %16 to %struct.SkPoint*
  %159 = bitcast %struct.SkRect* %157 to %struct.SkPoint*
  %160 = bitcast %struct.SkRect* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %160, i8 -1, i64 16, i1 false)
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %13, %struct.SkPoint* nonnull %158, %struct.SkPoint* %159, i32 2) #9
  %161 = load float, float* %153, align 4
  %162 = load float, float* %155, align 4
  %163 = fcmp ogt float %161, %162
  br i1 %163, label %164, label %165

164:                                              ; preds = %151
  store float %162, float* %153, align 4
  store float %161, float* %155, align 4
  br label %165

165:                                              ; preds = %164, %151
  %166 = phi float [ %161, %164 ], [ %162, %151 ]
  %167 = phi float [ %162, %164 ], [ %161, %151 ]
  %168 = load float, float* %154, align 4
  %169 = load float, float* %156, align 4
  %170 = fcmp ogt float %168, %169
  br i1 %170, label %171, label %172

171:                                              ; preds = %165
  store float %169, float* %154, align 4
  store float %168, float* %156, align 4
  br label %172

172:                                              ; preds = %165, %171
  %173 = phi float [ %169, %165 ], [ %168, %171 ]
  %174 = phi float [ %168, %165 ], [ %169, %171 ]
  %175 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %176 = load i32, i32* %175, align 8
  %177 = and i32 %176, 192
  %178 = icmp eq i32 %177, 0
  %179 = insertelement <4 x float> undef, float %173, i32 0
  %180 = insertelement <4 x float> %179, float %166, i32 1
  %181 = insertelement <4 x float> %180, float %174, i32 2
  %182 = insertelement <4 x float> %181, float %167, i32 3
  br i1 %178, label %211, label %183

183:                                              ; preds = %172
  %184 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %185 = load float, float* %184, align 8
  %186 = fcmp oeq float %185, 0.000000e+00
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = fadd <4 x float> %182, <float 1.000000e+00, float 1.000000e+00, float -1.000000e+00, float -1.000000e+00>
  br label %211

189:                                              ; preds = %183
  %190 = icmp eq i32 %148, 2
  br i1 %190, label %191, label %194

191:                                              ; preds = %189
  %192 = bitcast i64* %14 to <2 x float>*
  %193 = load <2 x float>, <2 x float>* %192, align 8
  br label %203

194:                                              ; preds = %189
  %195 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #9
  %196 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %196, align 8
  %197 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %197, align 4
  %198 = bitcast %struct.SkPoint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #9
  %199 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 1
  %200 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %8, i64 0, i32 0
  store float %185, float* %200, align 4
  store float %185, float* %199, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %13, %struct.SkPoint* nonnull %7, %struct.SkPoint* nonnull %8, i32 1) #9
  %201 = load <2 x float>, <2 x float>* %6, align 8
  %202 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %201)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #9
  br label %203

203:                                              ; preds = %194, %191
  %204 = phi <2 x float> [ %193, %191 ], [ %202, %194 ]
  %205 = fmul <2 x float> %204, <float 5.000000e-01, float 5.000000e-01>
  %206 = shufflevector <2 x float> %205, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %207 = shufflevector <2 x float> %206, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %208 = fadd <4 x float> %182, %207
  %209 = fsub <4 x float> %182, %207
  %210 = shufflevector <4 x float> %208, <4 x float> %209, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  br label %211

211:                                              ; preds = %172, %187, %203
  %212 = phi <4 x float> [ %182, %172 ], [ %188, %187 ], [ %210, %203 ]
  %213 = extractelement <4 x float> %212, i32 3
  %214 = fcmp ult float %213, 0xC7CFFFFFE0000000
  %215 = extractelement <4 x float> %212, i32 2
  %216 = fcmp ult float %215, 0xC7CFFFFFE0000000
  %217 = or i1 %216, %214
  %218 = extractelement <4 x float> %212, i32 1
  %219 = fcmp ugt float %218, 0x47CFFFFFE0000000
  %220 = or i1 %219, %217
  %221 = extractelement <4 x float> %212, i32 0
  %222 = fcmp ugt float %221, 0x47CFFFFFE0000000
  %223 = or i1 %222, %220
  br i1 %223, label %319, label %224

224:                                              ; preds = %211
  %225 = fcmp olt float %213, 0.000000e+00
  %226 = fsub float -0.000000e+00, %213
  %227 = select i1 %225, float %226, float %213
  %228 = fcmp ugt float %227, 3.276700e+04
  br i1 %228, label %244, label %229

229:                                              ; preds = %224
  %230 = fcmp olt float %215, 0.000000e+00
  %231 = fsub float -0.000000e+00, %215
  %232 = select i1 %230, float %231, float %215
  %233 = fcmp ugt float %232, 3.276700e+04
  br i1 %233, label %244, label %234

234:                                              ; preds = %229
  %235 = fcmp olt float %218, 0.000000e+00
  %236 = fsub float -0.000000e+00, %218
  %237 = select i1 %235, float %236, float %218
  %238 = fcmp ugt float %237, 3.276700e+04
  br i1 %238, label %244, label %239

239:                                              ; preds = %234
  %240 = fcmp olt float %221, 0.000000e+00
  %241 = fsub float -0.000000e+00, %221
  %242 = select i1 %240, float %241, float %221
  %243 = fcmp ugt float %242, 3.276700e+04
  br label %244

244:                                              ; preds = %224, %229, %234, %239
  %245 = phi i1 [ true, %234 ], [ true, %229 ], [ true, %224 ], [ %243, %239 ]
  %246 = icmp ne i32 %148, 0
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %249

248:                                              ; preds = %244
  call fastcc void @_ZL17draw_rect_as_pathRK6SkDrawRK6SkRectRK7SkPaintPK16SkMatrixProvider(%class.SkDraw* dereferenceable(72) %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrixProvider* %141)
  br label %319

249:                                              ; preds = %244
  %250 = bitcast { i64, i64 }* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %250) #9
  %251 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 1
  %252 = call float @llvm.floor.f32(float %213) #9
  %253 = fcmp olt float %252, 0x41DFFFFFE0000000
  %254 = select i1 %253, float %252, float 0x41DFFFFFE0000000
  %255 = fcmp ogt float %254, 0xC1DFFFFFE0000000
  %256 = select i1 %255, float %254, float 0xC1DFFFFFE0000000
  %257 = fptosi float %256 to i32
  %258 = call float @llvm.floor.f32(float %215) #9
  %259 = fcmp olt float %258, 0x41DFFFFFE0000000
  %260 = select i1 %259, float %258, float 0x41DFFFFFE0000000
  %261 = fcmp ogt float %260, 0xC1DFFFFFE0000000
  %262 = select i1 %261, float %260, float 0xC1DFFFFFE0000000
  %263 = fptosi float %262 to i32
  %264 = call float @llvm.ceil.f32(float %218) #9
  %265 = fcmp olt float %264, 0x41DFFFFFE0000000
  %266 = select i1 %265, float %264, float 0x41DFFFFFE0000000
  %267 = fcmp ogt float %266, 0xC1DFFFFFE0000000
  %268 = select i1 %267, float %266, float 0xC1DFFFFFE0000000
  %269 = fptosi float %268 to i32
  %270 = call float @llvm.ceil.f32(float %221) #9
  %271 = fcmp olt float %270, 0x41DFFFFFE0000000
  %272 = select i1 %271, float %270, float 0x41DFFFFFE0000000
  %273 = fcmp ogt float %272, 0xC1DFFFFFE0000000
  %274 = select i1 %273, float %272, float 0xC1DFFFFFE0000000
  %275 = fptosi float %274 to i32
  %276 = zext i32 %263 to i64
  %277 = shl nuw i64 %276, 32
  %278 = zext i32 %257 to i64
  %279 = or i64 %277, %278
  %280 = zext i32 %275 to i64
  %281 = shl nuw i64 %280, 32
  %282 = zext i32 %269 to i64
  %283 = or i64 %281, %282
  %284 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %17, i64 0, i32 0
  store i64 %279, i64* %284, align 8
  store i64 %283, i64* %251, align 8
  %285 = load %class.SkRasterClip*, %class.SkRasterClip** %20, align 8
  %286 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %285) #9
  %287 = bitcast %struct.SkIRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %287) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %287, i8 -86, i64 16, i1 false) #9
  %288 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %9, %struct.SkIRect* dereferenceable(16) %286, %struct.SkIRect* nonnull dereferenceable(16) %18) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %287) #9
  br i1 %288, label %289, label %318

289:                                              ; preds = %249
  %290 = bitcast %class.SkAutoBlitterChoose* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3376, i8* nonnull %290) #9
  %291 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %19, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %291, i8 -86, i64 3368, i1 false)
  %292 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %19, i64 0, i32 0
  store %class.SkBlitter* null, %class.SkBlitter** %292, align 8
  %293 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %19, i64 0, i32 1, i32 0, i32 0, i64 3336
  %294 = bitcast i8* %293 to %class.SkArenaAlloc*
  %295 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %19, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %294, i8* %295, i64 3332, i64 3332) #9
  %296 = call %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose* nonnull %19, %class.SkDraw* dereferenceable(72) %0, %class.SkMatrixProvider* %141, %class.SkPaint* dereferenceable(72) %2, i1 zeroext false) #9
  %297 = load %class.SkRasterClip*, %class.SkRasterClip** %20, align 8
  %298 = load %class.SkBlitter*, %class.SkBlitter** %292, align 8
  switch i32 %148, label %317 [
    i32 1, label %299
    i32 2, label %305
    i32 0, label %311
  ]

299:                                              ; preds = %289
  %300 = load i32, i32* %175, align 8
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %304, label %303

303:                                              ; preds = %299
  call void @_ZN6SkScan12AntiFillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %16, %class.SkRasterClip* dereferenceable(72) %297, %class.SkBlitter* %298) #9
  br label %317

304:                                              ; preds = %299
  call void @_ZN6SkScan8FillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %16, %class.SkRasterClip* dereferenceable(72) %297, %class.SkBlitter* %298) #9
  br label %317

305:                                              ; preds = %289
  %306 = load i32, i32* %175, align 8
  %307 = and i32 %306, 1
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %310, label %309

309:                                              ; preds = %305
  call void @_ZN6SkScan13AntiFrameRectERK6SkRectRK7SkPointRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %16, %struct.SkPoint* nonnull dereferenceable(8) %15, %class.SkRasterClip* dereferenceable(72) %297, %class.SkBlitter* %298) #9
  br label %317

310:                                              ; preds = %305
  call void @_ZN6SkScan9FrameRectERK6SkRectRK7SkPointRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %16, %struct.SkPoint* nonnull dereferenceable(8) %15, %class.SkRasterClip* dereferenceable(72) %297, %class.SkBlitter* %298) #9
  br label %317

311:                                              ; preds = %289
  %312 = load i32, i32* %175, align 8
  %313 = and i32 %312, 1
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %316, label %315

315:                                              ; preds = %311
  call void @_ZN6SkScan12AntiHairRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %16, %class.SkRasterClip* dereferenceable(72) %297, %class.SkBlitter* %298) #9
  br label %317

316:                                              ; preds = %311
  call void @_ZN6SkScan8HairRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* nonnull dereferenceable(16) %16, %class.SkRasterClip* dereferenceable(72) %297, %class.SkBlitter* %298) #9
  br label %317

317:                                              ; preds = %289, %315, %316, %309, %310, %303, %304
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %294) #9
  call void @llvm.lifetime.end.p0i8(i64 3376, i8* nonnull %290) #9
  br label %318

318:                                              ; preds = %249, %317
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %250) #9
  br label %319

319:                                              ; preds = %211, %318, %248
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152) #9
  br label %320

320:                                              ; preds = %319, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #9
  %321 = load %class.SkPreConcatMatrixProvider*, %class.SkPreConcatMatrixProvider** %29, align 8
  %322 = icmp eq %class.SkPreConcatMatrixProvider* %321, null
  br i1 %322, label %327, label %323

323:                                              ; preds = %320
  %324 = bitcast %class.SkPreConcatMatrixProvider* %321 to void (%class.SkPreConcatMatrixProvider*)***
  %325 = load void (%class.SkPreConcatMatrixProvider*)**, void (%class.SkPreConcatMatrixProvider*)*** %324, align 8
  %326 = load void (%class.SkPreConcatMatrixProvider*)*, void (%class.SkPreConcatMatrixProvider*)** %325, align 8
  call void %326(%class.SkPreConcatMatrixProvider* nonnull %321) #9
  store %class.SkPreConcatMatrixProvider* null, %class.SkPreConcatMatrixProvider** %29, align 8
  br label %327

327:                                              ; preds = %320, %323
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %28) #9
  br label %328

328:                                              ; preds = %5, %327
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL17draw_rect_as_pathRK6SkDrawRK6SkRectRK7SkPaintPK16SkMatrixProvider(%class.SkDraw* nocapture readonly dereferenceable(72), %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider*) unnamed_addr #0 {
  %5 = alloca %class.SkDraw, align 8
  %6 = alloca %class.SkPath, align 8
  %7 = bitcast %class.SkDraw* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #9
  %8 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1, i32 2
  %9 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  %10 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %13 = bitcast %class.SkPixmap* %11 to i8*
  %14 = bitcast %class.SkPixmap* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false) #9
  %15 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %17 = load %class.SkColorSpace*, %class.SkColorSpace** %16, align 8
  %18 = icmp eq %class.SkColorSpace* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  br label %22

22:                                               ; preds = %4, %19
  store %class.SkColorSpace* %17, %class.SkColorSpace** %15, align 8
  %23 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 1, i32 2, i32 0, i32 1
  %24 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %25 = bitcast i32* %24 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = bitcast i32* %23 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %5, i64 0, i32 2
  %29 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %30 = bitcast %class.SkMatrixProvider** %28 to i8*
  %31 = bitcast %class.SkMatrixProvider** %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #9
  store %class.SkMatrixProvider* %3, %class.SkMatrixProvider** %28, align 8
  %32 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 4
  %34 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #9
  %35 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull %6, %struct.SkRect* dereferenceable(16) %1, i32 0, i32 0) #9
  %36 = load i8, i8* %33, align 2
  %37 = and i8 %36, -4
  store i8 %37, i8* %33, align 2
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* nonnull %5, %class.SkPath* nonnull dereferenceable(16) %6, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null, i1 zeroext true, i1 zeroext false, %class.SkBlitter* null) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %22
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %class.SkColorSpace* %38 to i8*
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %22, %40, %44
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #9
  ret void
}

declare void @_ZN6SkScan12AntiFillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan8FillRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan13AntiFrameRectERK6SkRectRK7SkPointRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %struct.SkPoint* dereferenceable(8), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan9FrameRectERK6SkRectRK7SkPointRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %struct.SkPoint* dereferenceable(8), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan12AntiHairRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan8HairRectERK6SkRectRK12SkRasterClipP9SkBlitter(%struct.SkRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw11drawDevMaskERK6SkMaskRK7SkPaint(%class.SkDraw*, %struct.SkMask* dereferenceable(32), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkMask, align 8
  %5 = alloca %class.SkAutoBlitterChoose, align 8
  %6 = alloca %class.SkAAClipBlitterWrapper, align 8
  %7 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = sub nsw i64 %9, %12
  %14 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 %16, %19
  %21 = icmp slt i64 %13, 1
  %22 = icmp slt i64 %20, 1
  %23 = or i1 %21, %22
  br i1 %23, label %80, label %24

24:                                               ; preds = %3
  %25 = or i64 %20, %13
  %26 = add nsw i64 %25, 2147483648
  %27 = icmp ugt i64 %26, 4294967295
  br i1 %27, label %80, label %28

28:                                               ; preds = %24
  %29 = bitcast %struct.SkMask* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #9
  %30 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 0
  %31 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1
  %32 = bitcast %struct.SkIRect* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  store i8* null, i8** %30, align 8
  %33 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %34 = load %class.SkMaskFilter*, %class.SkMaskFilter** %33, align 8
  %35 = icmp eq %class.SkMaskFilter* %34, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %28
  %37 = bitcast %class.SkMaskFilter* %34 to %class.SkMaskFilterBase*
  %38 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %39 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %38, align 8
  %40 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %39, i64 0, i32 2
  %41 = bitcast %class.SkMaskFilter* %34 to i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %42 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %42, i64 8
  %44 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %43, align 8
  %45 = call zeroext i1 %44(%class.SkMaskFilterBase* nonnull %37, %struct.SkMask* nonnull %4, %struct.SkMask* dereferenceable(32) %1, %class.SkMatrix* dereferenceable(40) %40, %struct.SkIPoint* null) #9
  %46 = select i1 %45, %struct.SkMask* %4, %struct.SkMask* %1
  %47 = load i8*, i8** %30, align 8
  br label %48

48:                                               ; preds = %36, %28
  %49 = phi i8* [ %47, %36 ], [ null, %28 ]
  %50 = phi %struct.SkMask* [ %46, %36 ], [ %1, %28 ]
  %51 = bitcast %class.SkAutoBlitterChoose* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3376, i8* nonnull %51) #9
  %52 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 3368, i1 false)
  %53 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %5, i64 0, i32 0
  store %class.SkBlitter* null, %class.SkBlitter** %53, align 8
  %54 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %5, i64 0, i32 1, i32 0, i32 0, i64 3336
  %55 = bitcast i8* %54 to %class.SkArenaAlloc*
  %56 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %55, i8* %56, i64 3332, i64 3332) #9
  %57 = call %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose* nonnull %5, %class.SkDraw* dereferenceable(72) %0, %class.SkMatrixProvider* null, %class.SkPaint* dereferenceable(72) %2, i1 zeroext false) #9
  %58 = load %class.SkBlitter*, %class.SkBlitter** %53, align 8
  %59 = bitcast %class.SkAAClipBlitterWrapper* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1160, i8* nonnull %59) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 1160, i1 false)
  call void @_ZN22SkAAClipBlitterWrapperC1Ev(%class.SkAAClipBlitterWrapper* nonnull %6) #9
  %60 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %61 = load %class.SkRasterClip*, %class.SkRasterClip** %60, align 8
  %62 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %61, i64 0, i32 2
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %48
  %66 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %61, i64 0, i32 0
  br label %72

67:                                               ; preds = %48
  call void @_ZN22SkAAClipBlitterWrapper4initERK12SkRasterClipP9SkBlitter(%class.SkAAClipBlitterWrapper* nonnull %6, %class.SkRasterClip* dereferenceable(72) %61, %class.SkBlitter* %58) #9
  %68 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %6, i64 0, i32 2
  %69 = load %class.SkRegion*, %class.SkRegion** %68, align 8
  %70 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %6, i64 0, i32 3
  %71 = load %class.SkBlitter*, %class.SkBlitter** %70, align 8
  br label %72

72:                                               ; preds = %67, %65
  %73 = phi %class.SkBlitter* [ %58, %65 ], [ %71, %67 ]
  %74 = phi %class.SkRegion* [ %66, %65 ], [ %69, %67 ]
  call void @_ZN9SkBlitter14blitMaskRegionERK6SkMaskRK8SkRegion(%class.SkBlitter* %73, %struct.SkMask* dereferenceable(32) %50, %class.SkRegion* dereferenceable(24) %74) #9
  %75 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %6, i64 0, i32 1
  call void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter* %75) #9
  %76 = getelementptr inbounds %class.SkAAClipBlitterWrapper, %class.SkAAClipBlitterWrapper* %6, i64 0, i32 0
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 1160, i8* nonnull %59) #9
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %55) #9
  call void @llvm.lifetime.end.p0i8(i64 3376, i8* nonnull %51) #9
  %77 = icmp eq i8* %49, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %72
  call void @_ZN6SkMask9FreeImageEPv(i8* nonnull %49) #9
  br label %79

79:                                               ; preds = %72, %78
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #9
  br label %80

80:                                               ; preds = %3, %24, %79
  ret void
}

declare void @_ZN22SkAAClipBlitterWrapperC1Ev(%class.SkAAClipBlitterWrapper*) unnamed_addr #2

declare void @_ZN9SkBlitter14blitMaskRegionERK6SkMaskRK8SkRegion(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z29SkDrawTreatAAStrokeAsHairlinefRK8SkMatrixPf(float, %class.SkMatrix* dereferenceable(40), float*) local_unnamed_addr #0 {
  %4 = alloca [2 x %struct.SkPoint], align 16
  %5 = alloca [2 x %struct.SkPoint], align 16
  %6 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 192
  %9 = icmp eq i32 %8, 128
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #9
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i32 [ %12, %10 ], [ %7, %3 ]
  %15 = and i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %59

17:                                               ; preds = %13
  %18 = bitcast [2 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #9
  %19 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %4, i64 0, i64 0
  %20 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %4, i64 0, i64 0, i32 0
  %21 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %4, i64 0, i64 0, i32 1
  %22 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %4, i64 0, i64 1, i32 0
  %23 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %4, i64 0, i64 1, i32 1
  %24 = bitcast [2 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #9
  %25 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0
  %26 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0, i32 0
  %27 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %28 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1, i32 0
  %29 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  %30 = bitcast [2 x %struct.SkPoint]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -1, i64 16, i1 false)
  store float %0, float* %20, align 16
  store float 0.000000e+00, float* %21, align 4
  store float 0.000000e+00, float* %22, align 8
  store float %0, float* %23, align 4
  call void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* nonnull %25, %struct.SkPoint* nonnull %19, i32 2) #9
  %31 = load float, float* %26, align 16
  %32 = load float, float* %27, align 4
  %33 = load float, float* %28, align 8
  %34 = insertelement <2 x float> undef, float %31, i32 0
  %35 = insertelement <2 x float> %34, float %33, i32 1
  %36 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %35)
  %37 = load float, float* %29, align 4
  %38 = insertelement <2 x float> undef, float %32, i32 0
  %39 = insertelement <2 x float> %38, float %37, i32 1
  %40 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %39)
  %41 = fcmp olt <2 x float> %36, %40
  %42 = select <2 x i1> %41, <2 x float> %40, <2 x float> %36
  %43 = select <2 x i1> %41, <2 x float> %36, <2 x float> %40
  %44 = fmul <2 x float> %43, <float 5.000000e-01, float 5.000000e-01>
  %45 = fadd <2 x float> %44, %42
  %46 = fcmp ole <2 x float> %45, <float 1.000000e+00, float 1.000000e+00>
  %47 = extractelement <2 x i1> %46, i32 0
  %48 = extractelement <2 x i1> %46, i32 1
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %57

50:                                               ; preds = %17
  %51 = icmp eq float* %2, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %50
  %53 = extractelement <2 x float> %45, i32 0
  %54 = extractelement <2 x float> %45, i32 1
  %55 = fadd float %53, %54
  %56 = fmul float %55, 5.000000e-01
  store float %56, float* %2, align 4
  br label %57

57:                                               ; preds = %17, %52, %50
  %58 = phi i1 [ true, %50 ], [ true, %52 ], [ false, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #9
  br label %59

59:                                               ; preds = %13, %57
  %60 = phi i1 [ %58, %57 ], [ false, %13 ]
  ret i1 %60
}

declare void @_ZNK8SkMatrix10mapVectorsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw9drawRRectERK7SkRRectRK7SkPaint(%class.SkDraw*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 4
  %5 = alloca float, align 4
  %6 = alloca %class.SkRRect, align 4
  %7 = alloca %class.SkAutoBlitterChoose, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %10 = load %class.SkRasterClip*, %class.SkRasterClip** %9, align 8
  %11 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %72

14:                                               ; preds = %3
  %15 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -1, i64 36, i1 false)
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  store i32 -1431655766, i32* %16, align 4
  %17 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %18 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %17, align 8
  %19 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %18, i64 0, i32 2
  %20 = bitcast %class.SkMatrix* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %20, i64 40, i1 false)
  %21 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #9
  store float 0xFFFFFFFFE0000000, float* %5, align 4
  %22 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 192
  %25 = icmp eq i32 %24, 64
  br i1 %25, label %26, label %36

26:                                               ; preds = %14
  %27 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %28 = load float, float* %27, align 8
  %29 = fcmp oeq float %28, 0.000000e+00
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store float 1.000000e+00, float* %5, align 4
  br label %44

31:                                               ; preds = %26
  %32 = and i32 %23, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = call zeroext i1 @_Z29SkDrawTreatAAStrokeAsHairlinefRK8SkMatrixPf(float %28, %class.SkMatrix* nonnull dereferenceable(40) %4, float* nonnull %5) #9
  br i1 %35, label %44, label %36

36:                                               ; preds = %31, %14, %34
  %37 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %38 = load %class.SkPathEffect*, %class.SkPathEffect** %37, align 8
  %39 = icmp eq %class.SkPathEffect* %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = load i32, i32* %22, align 8
  %42 = and i32 %41, 192
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %34, %36, %40, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #9
  br label %67

45:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #9
  %46 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %47 = load %class.SkMaskFilter*, %class.SkMaskFilter** %46, align 8
  %48 = icmp eq %class.SkMaskFilter* %47, null
  br i1 %48, label %67, label %49

49:                                               ; preds = %45
  %50 = bitcast %class.SkRRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %50) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %50, i8 0, i64 52, i1 false) #9
  %51 = call zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect* %1, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkRRect* nonnull %6) #9
  br i1 %51, label %52, label %65

52:                                               ; preds = %49
  %53 = bitcast %class.SkAutoBlitterChoose* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3376, i8* nonnull %53) #9
  %54 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 3368, i1 false)
  %55 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 0
  store %class.SkBlitter* null, %class.SkBlitter** %55, align 8
  %56 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 1, i32 0, i32 0, i64 3336
  %57 = bitcast i8* %56 to %class.SkArenaAlloc*
  %58 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %57, i8* %58, i64 3332, i64 3332) #9
  %59 = call %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose* nonnull %7, %class.SkDraw* dereferenceable(72) %0, %class.SkMatrixProvider* null, %class.SkPaint* dereferenceable(72) %2, i1 zeroext false) #9
  %60 = bitcast %class.SkMaskFilter** %46 to %class.SkMaskFilterBase**
  %61 = load %class.SkMaskFilterBase*, %class.SkMaskFilterBase** %60, align 8
  %62 = load %class.SkRasterClip*, %class.SkRasterClip** %9, align 8
  %63 = load %class.SkBlitter*, %class.SkBlitter** %55, align 8
  %64 = call zeroext i1 @_ZNK16SkMaskFilterBase11filterRRectERK7SkRRectRK8SkMatrixRK12SkRasterClipP9SkBlitter(%class.SkMaskFilterBase* %61, %class.SkRRect* nonnull dereferenceable(52) %6, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkRasterClip* dereferenceable(72) %62, %class.SkBlitter* %63) #9
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %57) #9
  call void @llvm.lifetime.end.p0i8(i64 3376, i8* nonnull %53) #9
  br i1 %64, label %66, label %65

65:                                               ; preds = %52, %49
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %50) #9
  br label %67

66:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %50) #9
  br label %71

67:                                               ; preds = %65, %44, %45
  %68 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  %69 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #9
  %70 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull %8, %class.SkRRect* dereferenceable(52) %1, i32 0) #9
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* %0, %class.SkPath* nonnull dereferenceable(16) %8, %class.SkPaint* dereferenceable(72) %2, %class.SkMatrix* null, i1 zeroext true, i1 zeroext false, %class.SkBlitter* null) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  br label %71

71:                                               ; preds = %66, %67
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #9
  br label %72

72:                                               ; preds = %3, %71
  ret void
}

declare zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect*, %class.SkMatrix* dereferenceable(40), %class.SkRRect*) local_unnamed_addr #2

declare zeroext i1 @_ZNK16SkMaskFilterBase11filterRRectERK7SkRRectRK8SkMatrixRK12SkRasterClipP9SkBlitter(%class.SkMaskFilterBase*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN6SkDraw26ComputeResScaleForStrokingERK8SkMatrix(%class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 3
  %5 = load float, float* %4, align 4
  %6 = tail call float @_ZN7SkPoint6LengthEff(float %3, float %5) #9
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 1
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 4
  %10 = load float, float* %9, align 4
  %11 = tail call float @_ZN7SkPoint6LengthEff(float %8, float %10) #9
  %12 = bitcast float %6 to i32
  %13 = and i32 %12, 2139095040
  %14 = icmp eq i32 %13, 2139095040
  br i1 %14, label %23, label %15

15:                                               ; preds = %1
  %16 = bitcast float %11 to i32
  %17 = and i32 %16, 2139095040
  %18 = icmp eq i32 %17, 2139095040
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = fcmp olt float %6, %11
  %21 = select i1 %20, float %11, float %6
  %22 = fcmp ule float %21, 0.000000e+00
  br i1 %22, label %23, label %24

23:                                               ; preds = %15, %1, %19
  br label %24

24:                                               ; preds = %19, %23
  %25 = phi float [ 1.000000e+00, %23 ], [ %21, %19 ]
  ret float %25
}

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw11drawDevPathERK6SkPathRK7SkPaintbP9SkBlitterb(%class.SkDraw*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext, %class.SkBlitter*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkAutoBlitterChoose, align 8
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %9 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 9
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 1
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 3, i32 0
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 3, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %14, %struct.SkPoint* %16, i32 %18) #9
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 10
  %21 = zext i1 %19 to i8
  store i8 %21, i8* %20, align 1
  store i8 0, i8* %10, align 8
  br label %22

22:                                               ; preds = %13, %6
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 1, i32 0
  %24 = load float, float* %23, align 4
  %25 = fcmp ult float %24, 0xC7CFFFFFE0000000
  br i1 %25, label %88, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 1, i32 1
  %28 = load float, float* %27, align 4
  %29 = fcmp ult float %28, 0xC7CFFFFFE0000000
  br i1 %29, label %88, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 1, i32 2
  %32 = load float, float* %31, align 4
  %33 = fcmp ugt float %32, 0x47CFFFFFE0000000
  br i1 %33, label %88, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 1, i32 3
  %36 = load float, float* %35, align 4
  %37 = fcmp ugt float %36, 0x47CFFFFFE0000000
  br i1 %37, label %88, label %38

38:                                               ; preds = %34
  %39 = bitcast %class.SkAutoBlitterChoose* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3376, i8* nonnull %39) #9
  %40 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 3368, i1 false)
  %41 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 0
  store %class.SkBlitter* null, %class.SkBlitter** %41, align 8
  %42 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 1, i32 0, i32 0, i64 3336
  %43 = bitcast i8* %42 to %class.SkArenaAlloc*
  %44 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %43, i8* %44, i64 3332, i64 3332) #9
  %45 = icmp eq %class.SkBlitter* %4, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %38
  %47 = call %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose* nonnull %7, %class.SkDraw* dereferenceable(72) %0, %class.SkMatrixProvider* null, %class.SkPaint* dereferenceable(72) %2, i1 zeroext %3)
  br label %48

48:                                               ; preds = %38, %46
  %49 = phi %class.SkBlitter* [ %47, %46 ], [ %4, %38 ]
  %50 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %51 = load %class.SkMaskFilter*, %class.SkMaskFilter** %50, align 8
  %52 = icmp eq %class.SkMaskFilter* %51, null
  br i1 %52, label %62, label %53

53:                                               ; preds = %48
  %54 = zext i1 %5 to i32
  %55 = bitcast %class.SkMaskFilter* %51 to %class.SkMaskFilterBase*
  %56 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %57 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %56, align 8
  %58 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %57, i64 0, i32 2
  %59 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %60 = load %class.SkRasterClip*, %class.SkRasterClip** %59, align 8
  %61 = call zeroext i1 @_ZNK16SkMaskFilterBase10filterPathERK6SkPathRK8SkMatrixRK12SkRasterClipP9SkBlitterN11SkStrokeRec9InitStyleE(%class.SkMaskFilterBase* nonnull %55, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %58, %class.SkRasterClip* dereferenceable(72) %60, %class.SkBlitter* %49, i32 %54) #9
  br i1 %61, label %87, label %62

62:                                               ; preds = %53, %48
  %63 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 1
  %66 = icmp ne i32 %65, 0
  br i1 %5, label %67, label %69

67:                                               ; preds = %62
  %68 = select i1 %66, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan12AntiFillPathERK6SkPathRK12SkRasterClipP9SkBlitter, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* @_ZN6SkScan8FillPathERK6SkPathRK12SkRasterClipP9SkBlitter
  br label %83

69:                                               ; preds = %62
  %70 = lshr i32 %64, 2
  %71 = and i32 %70, 3
  %72 = icmp ne i32 %71, 3
  br i1 %66, label %73, label %74

73:                                               ; preds = %69
  br i1 %72, label %75, label %83

74:                                               ; preds = %69
  br i1 %72, label %79, label %83

75:                                               ; preds = %73
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds [3 x void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*], [3 x void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*]* @switch.table._ZNK6SkDraw11drawDevPathERK6SkPathRK7SkPaintbP9SkBlitterb, i64 0, i64 %76
  %78 = load void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)** %77, align 8
  br label %83

79:                                               ; preds = %74
  %80 = zext i32 %71 to i64
  %81 = getelementptr inbounds [3 x void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*], [3 x void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*]* @switch.table._ZNK6SkDraw11drawDevPathERK6SkPathRK7SkPaintbP9SkBlitterb.1, i64 0, i64 %80
  %82 = load void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)*, void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)** %81, align 8
  br label %83

83:                                               ; preds = %74, %79, %73, %75, %67
  %84 = phi void (%class.SkPath*, %class.SkRasterClip*, %class.SkBlitter*)* [ %68, %67 ], [ %78, %75 ], [ null, %73 ], [ %82, %79 ], [ null, %74 ]
  %85 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %86 = load %class.SkRasterClip*, %class.SkRasterClip** %85, align 8
  call void %84(%class.SkPath* dereferenceable(16) %1, %class.SkRasterClip* dereferenceable(72) %86, %class.SkBlitter* %49) #9
  br label %87

87:                                               ; preds = %53, %83
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %43) #9
  call void @llvm.lifetime.end.p0i8(i64 3376, i8* nonnull %39) #9
  br label %88

88:                                               ; preds = %22, %26, %30, %34, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBlitter* @_ZN19SkAutoBlitterChoose6chooseERK6SkDrawPK16SkMatrixProviderRK7SkPaintb(%class.SkAutoBlitterChoose*, %class.SkDraw* dereferenceable(72), %class.SkMatrixProvider*, %class.SkPaint* dereferenceable(72), i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.sk_sp.6, align 8
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.sk_sp.6, align 8
  %9 = icmp eq %class.SkMatrixProvider* %2, null
  %10 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %1, i64 0, i32 2
  %11 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %10, align 8
  %12 = select i1 %9, %class.SkMatrixProvider* %11, %class.SkMatrixProvider* %2
  %13 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %1, i64 0, i32 1
  %14 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %0, i64 0, i32 1
  %15 = icmp eq %class.SkSTArenaAlloc* %14, null
  %16 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %0, i64 0, i32 1, i32 0, i32 0, i64 3336
  %17 = bitcast i8* %16 to %class.SkArenaAlloc*
  %18 = select i1 %15, %class.SkArenaAlloc* null, %class.SkArenaAlloc* %17
  %19 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %1, i64 0, i32 3
  %20 = load %class.SkRasterClip*, %class.SkRasterClip** %19, align 8
  %21 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %22 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %20, i64 0, i32 6, i32 0
  %23 = load %class.SkShader*, %class.SkShader** %22, align 8, !noalias !14
  %24 = icmp eq %class.SkShader* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %5
  %26 = getelementptr inbounds %class.SkShader, %class.SkShader* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic, !noalias !14
  br label %28

28:                                               ; preds = %5, %25
  store %class.SkShader* %23, %class.SkShader** %21, align 8, !alias.scope !14
  %29 = call %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %13, %class.SkMatrixProvider* dereferenceable(112) %12, %class.SkPaint* dereferenceable(72) %3, %class.SkArenaAlloc* %18, i1 zeroext %4, %class.sk_sp.6* nonnull %6) #9
  %30 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %0, i64 0, i32 0
  store %class.SkBlitter* %29, %class.SkBlitter** %30, align 8
  %31 = load %class.SkShader*, %class.SkShader** %21, align 8
  %32 = icmp eq %class.SkShader* %31, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.SkShader, %class.SkShader* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %43

37:                                               ; preds = %33
  %38 = bitcast %class.SkShader* %31 to %class.SkRefCntBase*
  %39 = bitcast %class.SkShader* %31 to void (%class.SkRefCntBase*)***
  %40 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, i64 2
  %42 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, align 8
  call void %42(%class.SkRefCntBase* nonnull %38) #9
  br label %43

43:                                               ; preds = %28, %33, %37
  %44 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %1, i64 0, i32 4
  %45 = load %class.SkPixmap*, %class.SkPixmap** %44, align 8
  %46 = icmp eq %class.SkPixmap* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %class.SkBlitter*, %class.SkBlitter** %30, align 8
  br label %94

49:                                               ; preds = %43
  %50 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %50) #9
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #9
  %51 = load %class.SkRasterClip*, %class.SkRasterClip** %19, align 8
  %52 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %8, i64 0, i32 0
  %53 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %51, i64 0, i32 6, i32 0
  %54 = load %class.SkShader*, %class.SkShader** %53, align 8, !noalias !17
  %55 = icmp eq %class.SkShader* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %class.SkShader, %class.SkShader* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic, !noalias !17
  br label %59

59:                                               ; preds = %49, %56
  store %class.SkShader* %54, %class.SkShader** %52, align 8, !alias.scope !17
  %60 = call %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* nonnull dereferenceable(40) %45, %class.SkMatrixProvider* dereferenceable(112) %12, %class.SkPaint* nonnull dereferenceable(72) %7, %class.SkArenaAlloc* %18, i1 zeroext true, %class.sk_sp.6* nonnull %8) #9
  %61 = load %class.SkShader*, %class.SkShader** %52, align 8
  %62 = icmp eq %class.SkShader* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkShader, %class.SkShader* %61, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %class.SkShader* %61 to %class.SkRefCntBase*
  %69 = bitcast %class.SkShader* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #9
  br label %73

73:                                               ; preds = %59, %63, %67
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %50) #9
  %74 = ptrtoint %class.SkBlitter* %60 to i64
  %75 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %17, i32 49, i32 8) #9
  %76 = getelementptr inbounds %class.SkAutoBlitterChoose, %class.SkAutoBlitterChoose* %0, i64 0, i32 1, i32 0, i32 0, i64 3344
  %77 = bitcast i8* %76 to i8**
  %78 = bitcast i8* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = ptrtoint i8* %75 to i64
  %81 = sub i64 %80, %79
  %82 = trunc i64 %81 to i32
  %83 = getelementptr inbounds i8, i8* %75, i64 40
  store i8* %83, i8** %77, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %17, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkPairBlitterJRP9SkBlitterS5_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_, i32 %82) #9
  %84 = bitcast %class.SkAutoBlitterChoose* %0 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast i8* %75 to i32 (...)***
  %87 = getelementptr inbounds i8, i8* %75, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkPairBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %88 = getelementptr inbounds i8, i8* %75, i64 24
  %89 = bitcast i8* %88 to i64*
  store i64 %85, i64* %89, align 8
  %90 = getelementptr inbounds i8, i8* %75, i64 32
  %91 = bitcast i8* %90 to i64*
  store i64 %74, i64* %91, align 8
  %92 = bitcast %class.SkAutoBlitterChoose* %0 to i8**
  store i8* %75, i8** %92, align 8
  %93 = bitcast i8* %75 to %class.SkBlitter*
  br label %94

94:                                               ; preds = %47, %73
  %95 = phi %class.SkBlitter* [ %48, %47 ], [ %93, %73 ]
  ret %class.SkBlitter* %95
}

declare zeroext i1 @_ZNK16SkMaskFilterBase10filterPathERK6SkPathRK8SkMatrixRK12SkRasterClipP9SkBlitterN11SkStrokeRec9InitStyleE(%class.SkMaskFilterBase*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*, i32) local_unnamed_addr #2

declare void @_ZN6SkScan12AntiFillPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan8FillPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan12AntiHairPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan18AntiHairSquarePathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan17AntiHairRoundPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan8HairPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan14HairSquarePathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan13HairRoundPathERK6SkPathRK12SkRasterClipP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), %class.SkMatrix*, i1 zeroext, i1 zeroext, %class.SkBlitter*) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkM44, align 4
  %9 = alloca %class.SkM44, align 4
  %10 = alloca %class.SkPath, align 8
  %11 = alloca %class.SkTLazy, align 8
  %12 = alloca %class.SkTCopyOnFirstWrite, align 8
  %13 = alloca float, align 4
  %14 = alloca %struct.SkRect, align 4
  %15 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %16 = load %class.SkRasterClip*, %class.SkRasterClip** %15, align 8
  %17 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %16, i64 0, i32 3
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %284

20:                                               ; preds = %7
  %21 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  %22 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 4
  %23 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %10) #9
  %24 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %25 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %24, align 8
  %26 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 160, i1 false)
  %27 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 1
  store %class.SkPreConcatMatrixProvider* null, %class.SkPreConcatMatrixProvider** %27, align 8
  %28 = load i8, i8* %22, align 2
  %29 = or i8 %28, 4
  store i8 %29, i8* %22, align 2
  %30 = icmp eq %class.SkMatrix* %3, null
  br i1 %30, label %149, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %33 = load %class.SkPathEffect*, %class.SkPathEffect** %32, align 8
  %34 = icmp eq %class.SkPathEffect* %33, null
  br i1 %34, label %35, label %40

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 192
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35, %31
  %41 = select i1 %4, %class.SkPath* %1, %class.SkPath* %10
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %1, %class.SkMatrix* nonnull dereferenceable(40) %3, %class.SkPath* %41, i32 1) #9
  br label %149

42:                                               ; preds = %35
  %43 = bitcast %class.SkM44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %43) #9
  %44 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %25, i64 0, i32 1
  %45 = bitcast %class.SkM44* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %45) #9
  %46 = bitcast %class.SkMatrix* %3 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 1
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 2
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 3
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 5
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 6
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 7
  %67 = bitcast float* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = bitcast %class.SkM44* %9 to i32*
  store i32 %47, i32* %72, align 4
  %73 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 1
  %74 = bitcast float* %73 to i32*
  store i32 %56, i32* %74, align 4
  %75 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %75, align 4
  %76 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 3
  %77 = bitcast float* %76 to i32*
  store i32 %65, i32* %77, align 4
  %78 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 4
  %79 = bitcast float* %78 to i32*
  store i32 %50, i32* %79, align 4
  %80 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 5
  %81 = bitcast float* %80 to i32*
  store i32 %59, i32* %81, align 4
  %82 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %82, align 4
  %83 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 7
  %84 = bitcast float* %83 to i32*
  store i32 %68, i32* %84, align 4
  %85 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 8
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %86, align 4
  %87 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 12
  %88 = bitcast float* %87 to i32*
  store i32 %53, i32* %88, align 4
  %89 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 13
  %90 = bitcast float* %89 to i32*
  store i32 %62, i32* %90, align 4
  %91 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %91, align 4
  %92 = getelementptr inbounds %class.SkM44, %class.SkM44* %9, i64 0, i32 0, i64 15
  %93 = bitcast float* %92 to i32*
  store i32 %71, i32* %93, align 4
  %94 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %8, %class.SkM44* dereferenceable(64) %44, %class.SkM44* nonnull dereferenceable(64) %9) #9
  %95 = bitcast %class.SkTLazy* %11 to i32 (...)***
  %96 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* nonnull align 4 %43, i64 64, i1 false) #9
  %97 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 72
  %98 = bitcast %class.SkM44* %8 to i32*
  %99 = load i32, i32* %98, align 4, !noalias !20
  %100 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 4
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4, !noalias !20
  %103 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 12
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4, !noalias !20
  %106 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 1
  %107 = bitcast float* %106 to i32*
  %108 = load i32, i32* %107, align 4, !noalias !20
  %109 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 5
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 4, !noalias !20
  %112 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 13
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4, !noalias !20
  %115 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 3
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4, !noalias !20
  %118 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 7
  %119 = bitcast float* %118 to i32*
  %120 = load i32, i32* %119, align 4, !noalias !20
  %121 = getelementptr inbounds %class.SkM44, %class.SkM44* %8, i64 0, i32 0, i64 15
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4, !noalias !20
  %124 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 108
  %125 = bitcast i8* %124 to i32*
  %126 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 76
  %127 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 80
  %128 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 84
  %129 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 88
  %130 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 92
  %131 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 96
  %132 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 100
  %133 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 104
  %134 = bitcast i8* %97 to i32*
  store i32 %99, i32* %134, align 8, !alias.scope !23
  %135 = bitcast i8* %126 to i32*
  store i32 %102, i32* %135, align 4, !alias.scope !23
  %136 = bitcast i8* %127 to i32*
  store i32 %105, i32* %136, align 8, !alias.scope !23
  %137 = bitcast i8* %128 to i32*
  store i32 %108, i32* %137, align 4, !alias.scope !23
  %138 = bitcast i8* %129 to i32*
  store i32 %111, i32* %138, align 8, !alias.scope !23
  %139 = bitcast i8* %130 to i32*
  store i32 %114, i32* %139, align 4, !alias.scope !23
  %140 = bitcast i8* %131 to i32*
  store i32 %117, i32* %140, align 8, !alias.scope !23
  %141 = bitcast i8* %132 to i32*
  store i32 %120, i32* %141, align 4, !alias.scope !23
  %142 = bitcast i8* %133 to i32*
  store i32 %123, i32* %142, align 8, !alias.scope !23
  store i32 128, i32* %125, align 4, !alias.scope !23
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %43) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %143 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 112
  %144 = bitcast i8* %143 to %class.SkMatrixProvider**
  store %class.SkMatrixProvider* %25, %class.SkMatrixProvider** %144, align 8
  %145 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %11, i64 0, i32 0, i64 120
  %146 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* nonnull align 4 %146, i64 40, i1 false) #9
  %147 = bitcast %class.SkPreConcatMatrixProvider** %27 to %class.SkTLazy**
  store %class.SkTLazy* %11, %class.SkTLazy** %147, align 8
  %148 = bitcast %class.SkTLazy* %11 to %class.SkMatrixProvider*
  br label %149

149:                                              ; preds = %20, %40, %42
  %150 = phi %class.SkMatrixProvider* [ %25, %40 ], [ %148, %42 ], [ %25, %20 ]
  %151 = phi %class.SkPath* [ %41, %40 ], [ %1, %42 ], [ %1, %20 ]
  %152 = phi i1 [ true, %40 ], [ %4, %42 ], [ %4, %20 ]
  %153 = bitcast %class.SkTCopyOnFirstWrite* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %153) #9
  %154 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 72, i1 false)
  %155 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 0
  store %class.SkPaint* %2, %class.SkPaint** %155, align 8
  %156 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %156, align 8
  %157 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %157) #9
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %158 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %150, i64 0, i32 2
  %159 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = and i32 %160, 192
  %162 = icmp eq i32 %161, 64
  br i1 %162, label %163, label %226

163:                                              ; preds = %149
  %164 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %165 = load float, float* %164, align 8
  %166 = fcmp oeq float %165, 0.000000e+00
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  store float 1.000000e+00, float* %13, align 4
  %168 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1
  br label %182

169:                                              ; preds = %163
  %170 = and i32 %160, 1
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %226, label %172

172:                                              ; preds = %169
  %173 = call zeroext i1 @_Z29SkDrawTreatAAStrokeAsHairlinefRK8SkMatrixPf(float %165, %class.SkMatrix* dereferenceable(40) %158, float* nonnull %13) #9
  br i1 %173, label %174, label %226

174:                                              ; preds = %172
  %175 = load float, float* %13, align 4
  %176 = fcmp oeq float %175, 1.000000e+00
  br i1 %176, label %177, label %191

177:                                              ; preds = %174
  %178 = load %class.SkPaint*, %class.SkPaint** %156, align 8
  %179 = load %class.SkPaint*, %class.SkPaint** %155, align 8
  %180 = icmp eq %class.SkPaint* %178, null
  %181 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1
  br i1 %180, label %182, label %189

182:                                              ; preds = %167, %177
  %183 = phi %class.SkTLazy.25* [ %168, %167 ], [ %181, %177 ]
  %184 = phi %class.SkPaint* [ %2, %167 ], [ %179, %177 ]
  %185 = bitcast %class.SkTLazy.25* %183 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %185, %class.SkPaint* dereferenceable(72) %184) #9
  %186 = bitcast %class.SkPaint** %156 to %class.SkTLazy.25**
  store %class.SkTLazy.25* %183, %class.SkTLazy.25** %186, align 8
  %187 = ptrtoint %class.SkTLazy.25* %183 to i64
  %188 = bitcast %class.SkTCopyOnFirstWrite* %12 to i64*
  store i64 %187, i64* %188, align 8
  br label %189

189:                                              ; preds = %177, %182
  %190 = phi %class.SkPaint* [ %185, %182 ], [ %179, %177 ]
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* %190, float 0.000000e+00) #9
  br label %226

191:                                              ; preds = %174
  %192 = load i32, i32* %159, align 8
  %193 = lshr i32 %192, 10
  %194 = and i32 %193, 255
  %195 = call zeroext i1 @_Z35SkBlendMode_SupportsCoverageAsAlpha11SkBlendMode(i32 %194) #9
  br i1 %195, label %196, label %226

196:                                              ; preds = %191
  %197 = load float, float* %13, align 4
  %198 = fmul float %197, 2.560000e+02
  %199 = fptosi float %198 to i32
  %200 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 5, i32 3
  %201 = load float, float* %200, align 4
  %202 = fmul float %201, 2.550000e+02
  %203 = fadd float %202, 5.000000e-01
  %204 = call float @llvm.floor.f32(float %203) #9
  %205 = fcmp olt float %204, 0x41DFFFFFE0000000
  %206 = select i1 %205, float %204, float 0x41DFFFFFE0000000
  %207 = fcmp ogt float %206, 0xC1DFFFFFE0000000
  %208 = select i1 %207, float %206, float 0xC1DFFFFFE0000000
  %209 = fptosi float %208 to i32
  %210 = and i32 %209, 255
  %211 = mul nsw i32 %210, %199
  %212 = ashr i32 %211, 8
  %213 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %12, i64 0, i32 1
  %214 = load %class.SkPaint*, %class.SkPaint** %156, align 8
  %215 = icmp eq %class.SkPaint* %214, null
  %216 = load %class.SkPaint*, %class.SkPaint** %155, align 8
  br i1 %215, label %217, label %222

217:                                              ; preds = %196
  %218 = bitcast %class.SkTLazy.25* %213 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %218, %class.SkPaint* dereferenceable(72) %216) #9
  %219 = bitcast %class.SkPaint** %156 to %class.SkTLazy.25**
  store %class.SkTLazy.25* %213, %class.SkTLazy.25** %219, align 8
  %220 = ptrtoint %class.SkTLazy.25* %213 to i64
  %221 = bitcast %class.SkTCopyOnFirstWrite* %12 to i64*
  store i64 %220, i64* %221, align 8
  br label %222

222:                                              ; preds = %196, %217
  %223 = phi %class.SkPaint* [ %218, %217 ], [ %216, %196 ]
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* %223, float 0.000000e+00) #9
  %224 = uitofp i32 %212 to float
  %225 = fmul float %224, 0x3F70101020000000
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* %223, float %225) #9
  br label %226

226:                                              ; preds = %169, %149, %189, %222, %191, %172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %157) #9
  %227 = load %class.SkPaint*, %class.SkPaint** %155, align 8
  %228 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %227, i64 0, i32 0, i32 0
  %229 = load %class.SkPathEffect*, %class.SkPathEffect** %228, align 8
  %230 = icmp eq %class.SkPathEffect* %229, null
  br i1 %230, label %231, label %236

231:                                              ; preds = %226
  %232 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %227, i64 0, i32 8, i32 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = and i32 %233, 192
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %268, label %236

236:                                              ; preds = %231, %226
  %237 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #9
  %238 = bitcast %struct.SkRect* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %238, i8 -1, i64 16, i1 false)
  %239 = call zeroext i1 @_ZNK6SkDraw34computeConservativeLocalClipBoundsEP6SkRect(%class.SkDraw* %0, %struct.SkRect* nonnull %14)
  %240 = select i1 %239, %struct.SkRect* %14, %struct.SkRect* null
  %241 = load %class.SkPaint*, %class.SkPaint** %155, align 8
  %242 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %24, align 8
  %243 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %242, i64 0, i32 2, i32 0, i64 0
  %244 = load float, float* %243, align 4
  %245 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %242, i64 0, i32 2, i32 0, i64 3
  %246 = load float, float* %245, align 4
  %247 = call float @_ZN7SkPoint6LengthEff(float %244, float %246) #9
  %248 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %242, i64 0, i32 2, i32 0, i64 1
  %249 = load float, float* %248, align 4
  %250 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %242, i64 0, i32 2, i32 0, i64 4
  %251 = load float, float* %250, align 4
  %252 = call float @_ZN7SkPoint6LengthEff(float %249, float %251) #9
  %253 = bitcast float %247 to i32
  %254 = and i32 %253, 2139095040
  %255 = icmp eq i32 %254, 2139095040
  br i1 %255, label %264, label %256

256:                                              ; preds = %236
  %257 = bitcast float %252 to i32
  %258 = and i32 %257, 2139095040
  %259 = icmp eq i32 %258, 2139095040
  br i1 %259, label %264, label %260

260:                                              ; preds = %256
  %261 = fcmp olt float %247, %252
  %262 = select i1 %261, float %252, float %247
  %263 = fcmp ule float %262, 0.000000e+00
  br i1 %263, label %264, label %265

264:                                              ; preds = %260, %256, %236
  br label %265

265:                                              ; preds = %260, %264
  %266 = phi float [ 1.000000e+00, %264 ], [ %262, %260 ]
  %267 = call zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint* %241, %class.SkPath* dereferenceable(16) %151, %class.SkPath* nonnull %10, %struct.SkRect* %240, float %266) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #9
  br label %268

268:                                              ; preds = %231, %265
  %269 = phi i1 [ %267, %265 ], [ true, %231 ]
  %270 = phi %class.SkPath* [ %10, %265 ], [ %151, %231 ]
  %271 = select i1 %152, %class.SkPath* %270, %class.SkPath* %10
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %270, %class.SkMatrix* dereferenceable(40) %158, %class.SkPath* %271, i32 1) #9
  %272 = load %class.SkPaint*, %class.SkPaint** %155, align 8
  call void @_ZNK6SkDraw11drawDevPathERK6SkPathRK7SkPaintbP9SkBlitterb(%class.SkDraw* %0, %class.SkPath* dereferenceable(16) %271, %class.SkPaint* dereferenceable(72) %272, i1 zeroext %5, %class.SkBlitter* %6, i1 zeroext %269)
  %273 = load %class.SkPaint*, %class.SkPaint** %156, align 8
  %274 = icmp eq %class.SkPaint* %273, null
  br i1 %274, label %276, label %275

275:                                              ; preds = %268
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %273) #9
  store %class.SkPaint* null, %class.SkPaint** %156, align 8
  br label %276

276:                                              ; preds = %268, %275
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %153) #9
  %277 = load %class.SkPreConcatMatrixProvider*, %class.SkPreConcatMatrixProvider** %27, align 8
  %278 = icmp eq %class.SkPreConcatMatrixProvider* %277, null
  br i1 %278, label %283, label %279

279:                                              ; preds = %276
  %280 = bitcast %class.SkPreConcatMatrixProvider* %277 to void (%class.SkPreConcatMatrixProvider*)***
  %281 = load void (%class.SkPreConcatMatrixProvider*)**, void (%class.SkPreConcatMatrixProvider*)*** %280, align 8
  %282 = load void (%class.SkPreConcatMatrixProvider*)*, void (%class.SkPreConcatMatrixProvider*)** %281, align 8
  call void %282(%class.SkPreConcatMatrixProvider* nonnull %277) #9
  store %class.SkPreConcatMatrixProvider* null, %class.SkPreConcatMatrixProvider** %27, align 8
  br label %283

283:                                              ; preds = %276, %279
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %26) #9
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  br label %284

284:                                              ; preds = %7, %283
  ret void
}

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #2

declare zeroext i1 @_Z35SkBlendMode_SupportsCoverageAsAlpha11SkBlendMode(i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK7SkPaint11getFillPathERK6SkPathPS0_PK6SkRectf(%class.SkPaint*, %class.SkPath* dereferenceable(16), %class.SkPath*, %struct.SkRect*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw16drawBitmapAsMaskERK8SkBitmapRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw*, %class.SkBitmap* dereferenceable(56), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.6, align 8
  %6 = alloca %class.SkMatrix, align 4
  %7 = alloca i64, align 8
  %8 = alloca %class.SkPixmap, align 8
  %9 = alloca %struct.SkMask, align 8
  %10 = alloca <4 x float>, align 16
  %11 = bitcast <4 x float>* %10 to %struct.SkRect*
  %12 = alloca %struct.SkMask, align 8
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %struct.SkIRect*
  %15 = alloca { i64, i64 }, align 8
  %16 = bitcast { i64, i64 }* %15 to %struct.SkIRect*
  %17 = alloca %class.SkBitmap, align 8
  %18 = alloca %struct.SkImageInfo, align 16
  %19 = alloca %class.SkCanvas, align 8
  %20 = alloca %class.SkPaint, align 8
  %21 = alloca %class.SkPaint, align 8
  %22 = alloca %struct.SkRect, align 4
  %23 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %24 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  %25 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %24, i64 0, i32 3
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %286

28:                                               ; preds = %4
  %29 = bitcast i64* %7 to %struct.SkISize*
  %30 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 -1, i64 36, i1 false)
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  store i32 -1431655766, i32* %31, align 4
  %32 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %33 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %32, align 8
  %34 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %33, i64 0, i32 2
  %35 = bitcast %class.SkMatrix* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 4 %35, i64 40, i1 false)
  %36 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %38 = bitcast %struct.SkISize* %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %7, align 8
  %40 = call zeroext i1 @_Z15SkTreatAsSpriteRK8SkMatrixRK7SkISizeRK17SkSamplingOptionsRK7SkPaint(%class.SkMatrix* nonnull dereferenceable(40) %6, %struct.SkISize* nonnull dereferenceable(8) %29, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* dereferenceable(72) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br i1 %40, label %41, label %118

41:                                               ; preds = %28
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %43 = load float, float* %42, align 4
  %44 = fadd float %43, 5.000000e-01
  %45 = call float @llvm.floor.f32(float %44)
  %46 = fcmp olt float %45, 0x41DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0x41DFFFFFE0000000
  %48 = fcmp ogt float %47, 0xC1DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0xC1DFFFFFE0000000
  %50 = fptosi float %49 to i32
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %52 = load float, float* %51, align 4
  %53 = fadd float %52, 5.000000e-01
  %54 = call float @llvm.floor.f32(float %53)
  %55 = fcmp olt float %54, 0x41DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0x41DFFFFFE0000000
  %57 = fcmp ogt float %56, 0xC1DFFFFFE0000000
  %58 = select i1 %57, float %56, float 0xC1DFFFFFE0000000
  %59 = fptosi float %58 to i32
  %60 = bitcast %class.SkPixmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 40, i1 false) #9
  %61 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %8) #9
  br i1 %61, label %62, label %107

62:                                               ; preds = %41
  %63 = bitcast %struct.SkMask* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #9
  %64 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 1
  %66 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 2
  %67 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1, i32 3
  %68 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 2
  %69 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 3
  %70 = bitcast %struct.SkMask* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 32, i1 false)
  %71 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 1, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 1, i32 1
  %74 = load i32, i32* %73, align 4
  store i32 %50, i32* %64, align 8
  store i32 %59, i32* %65, align 4
  %75 = sext i32 %50 to i64
  %76 = sext i32 %72 to i64
  %77 = add nsw i64 %76, %75
  %78 = icmp slt i64 %77, 2147483647
  %79 = select i1 %78, i64 %77, i64 2147483647
  %80 = icmp sgt i64 %79, -2147483647
  %81 = select i1 %80, i64 %79, i64 -2147483647
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* %66, align 8
  %83 = sext i32 %59 to i64
  %84 = sext i32 %74 to i64
  %85 = add nsw i64 %84, %83
  %86 = icmp slt i64 %85, 2147483647
  %87 = select i1 %86, i64 %85, i64 2147483647
  %88 = icmp sgt i64 %87, -2147483647
  %89 = select i1 %88, i64 %87, i64 -2147483647
  %90 = trunc i64 %89 to i32
  store i32 %90, i32* %67, align 4
  store i8 1, i8* %69, align 4
  %91 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %68, align 8
  %94 = bitcast %class.SkPixmap* %8 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %struct.SkMask* %9 to i64*
  store i64 %95, i64* %96, align 8
  call void @_ZNK6SkDraw11drawDevMaskERK6SkMaskRK7SkPaint(%class.SkDraw* %0, %struct.SkMask* nonnull dereferenceable(32) %9, %class.SkPaint* dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #9
  %97 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %98 = load %class.SkColorSpace*, %class.SkColorSpace** %97, align 8
  %99 = icmp eq %class.SkColorSpace* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %62
  %101 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = bitcast %class.SkColorSpace* %98 to i8*
  call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %62, %100, %104
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #9
  br label %285

107:                                              ; preds = %41
  %108 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %109 = load %class.SkColorSpace*, %class.SkColorSpace** %108, align 8
  %110 = icmp eq %class.SkColorSpace* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = bitcast %class.SkColorSpace* %109 to i8*
  call void @_ZdlPv(i8* %116) #10
  br label %117

117:                                              ; preds = %107, %111, %115
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #9
  br label %285

118:                                              ; preds = %28
  %119 = bitcast <4 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #9
  %120 = getelementptr inbounds <4 x float>, <4 x float>* %10, i64 0, i64 0
  %121 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 1
  %122 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 2
  %123 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 3
  %124 = bitcast %struct.SkMask* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %124) #9
  %125 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 0
  %126 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1
  %127 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %126, i64 0, i32 0
  %128 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1, i32 1
  %129 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1, i32 2
  %130 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 1, i32 3
  %131 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 2
  %132 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 2
  %133 = bitcast i32* %132 to i64*
  store i64 -6148914691236517206, i64* %133, align 8
  store i8* null, i8** %125, align 8
  %134 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = sitofp i32 %135 to float
  %139 = sitofp i32 %137 to float
  store float 0.000000e+00, float* %120, align 16
  store float 0.000000e+00, float* %121, align 4
  store float %138, float* %122, align 8
  store float %139, float* %123, align 4
  %140 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %6, %struct.SkRect* nonnull %11, %struct.SkRect* nonnull dereferenceable(16) %11, i32 1) #9
  %141 = load <4 x float>, <4 x float>* %10, align 16
  %142 = fadd <4 x float> %141, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %143 = call <4 x float> @llvm.floor.v4f32(<4 x float> %142)
  %144 = fcmp olt <4 x float> %143, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %145 = select <4 x i1> %144, <4 x float> %143, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %146 = fcmp ogt <4 x float> %145, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %147 = select <4 x i1> %146, <4 x float> %145, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %148 = fptosi <4 x float> %147 to <4 x i32>
  %149 = bitcast %struct.SkIRect* %126 to <4 x i32>*
  store <4 x i32> %148, <4 x i32>* %149, align 8
  %150 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #9
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %152 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = zext i32 %155 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %153 to i64
  %159 = or i64 %157, %158
  %160 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 0, i64* %160, align 8
  store i64 %159, i64* %151, align 8
  %161 = bitcast { i64, i64 }* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #9
  %162 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  %163 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %162) #9
  %164 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = icmp sgt i64 %166, -2147483646
  %168 = select i1 %167, i64 %166, i64 -2147483646
  %169 = add nsw i64 %168, 4294967295
  %170 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %163, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = icmp sgt i64 %172, -2147483646
  %174 = select i1 %173, i64 %172, i64 -2147483646
  %175 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %163, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = icmp slt i64 %177, 2147483646
  %179 = select i1 %178, i64 %177, i64 2147483646
  %180 = icmp sgt i64 %179, -2147483648
  %181 = select i1 %180, i64 %179, i64 -2147483648
  %182 = add nsw i64 %181, 1
  %183 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %163, i64 0, i32 3
  %184 = load i32, i32* %183, align 4
  %185 = sext i32 %184 to i64
  %186 = icmp slt i64 %185, 2147483646
  %187 = select i1 %186, i64 %185, i64 2147483646
  %188 = icmp sgt i64 %187, -2147483648
  %189 = select i1 %188, i64 %187, i64 -2147483648
  %190 = shl nsw i64 %174, 32
  %191 = add i64 %190, -4294967296
  %192 = and i64 %169, 4294967295
  %193 = or i64 %191, %192
  %194 = shl nsw i64 %189, 32
  %195 = add i64 %194, 4294967296
  %196 = and i64 %182, 4294967295
  %197 = or i64 %195, %196
  %198 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 0
  store i64 %193, i64* %198, align 8
  %199 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i64 0, i32 1
  store i64 %197, i64* %199, align 8
  %200 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %14, %struct.SkIRect* nonnull dereferenceable(16) %14, %struct.SkIRect* nonnull dereferenceable(16) %16) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #9
  %201 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %126, %struct.SkIRect* dereferenceable(16) %126, %struct.SkIRect* nonnull dereferenceable(16) %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #9
  br i1 %201, label %202, label %284

202:                                              ; preds = %118
  %203 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %12, i64 0, i32 3
  store i8 1, i8* %203, align 4
  %204 = load i32, i32* %129, align 8
  %205 = load i32, i32* %127, align 8
  %206 = add i32 %204, 3
  %207 = sub i32 %206, %205
  %208 = and i32 %207, -4
  store i32 %208, i32* %131, align 8
  %209 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* nonnull %12) #9
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %284, label %211

211:                                              ; preds = %202
  %212 = call i8* @_Z15sk_malloc_throwmm(i64 %209, i64 1) #9
  store i8* %212, i8** %125, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %212, i8 0, i64 %209, i1 false)
  %213 = bitcast %class.SkBitmap* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %213) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %17) #9
  %214 = bitcast %struct.SkImageInfo* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #9
  %215 = load i32, i32* %129, align 8
  %216 = load i32, i32* %127, align 8
  %217 = sub i32 %215, %216
  %218 = load i32, i32* %130, align 4
  %219 = load i32, i32* %128, align 4
  %220 = sub i32 %218, %219
  %221 = zext i32 %220 to i64
  %222 = shl nuw i64 %221, 32
  %223 = zext i32 %217 to i64
  %224 = or i64 %222, %223
  %225 = bitcast %struct.SkImageInfo* %18 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %225, align 16, !alias.scope !26
  %226 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 1
  %227 = bitcast %struct.SkISize* %226 to i64*
  store i64 %224, i64* %227, align 16, !alias.scope !26
  %228 = load i8*, i8** %125, align 8
  %229 = load i32, i32* %131, align 8
  %230 = zext i32 %229 to i64
  %231 = call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* nonnull %17, %struct.SkImageInfo* nonnull dereferenceable(24) %18, i8* %228, i64 %230, void (i8*, i8*)* null, i8* null) #9
  %232 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 0, i32 0
  %233 = load %class.SkColorSpace*, %class.SkColorSpace** %232, align 16
  %234 = icmp eq %class.SkColorSpace* %233, null
  br i1 %234, label %241, label %235

235:                                              ; preds = %211
  %236 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %233, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 -1 acq_rel
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  %240 = bitcast %class.SkColorSpace* %233 to i8*
  call void @_ZdlPv(i8* %240) #10
  br label %241

241:                                              ; preds = %211, %235, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #9
  %242 = bitcast %class.SkCanvas* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %242) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %242, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.32, [384 x i64], %class.sk_sp.33, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr.34", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.38" }* @__const._ZNK6SkDraw16drawBitmapAsMaskERK8SkBitmapRK17SkSamplingOptionsRK7SkPaint.c to i8*), i64 3232, i1 false)
  call void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas* nonnull %19, %class.SkBitmap* nonnull dereferenceable(56) %17) #9
  %243 = load i32, i32* %127, align 8
  %244 = sitofp i32 %243 to float
  %245 = fsub float -0.000000e+00, %244
  %246 = load i32, i32* %128, align 4
  %247 = sitofp i32 %246 to float
  %248 = fsub float -0.000000e+00, %247
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %19, float %245, float %248) #9
  call void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas* nonnull %19, %class.SkMatrix* nonnull dereferenceable(40) %6) #9
  %249 = bitcast %class.SkPaint* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %249) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %249, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %20) #9
  %250 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %3, i64 0, i32 8, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %20, i64 0, i32 8, i32 0, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = and i32 %253, -4
  %255 = and i32 %251, 3
  %256 = or i32 %255, %254
  store i32 %256, i32* %252, align 8
  %257 = bitcast %class.SkPaint* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %257) #9
  %258 = bitcast %class.sk_sp.6* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %257, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false) #9
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %21, %class.SkPaint* nonnull dereferenceable(72) %20) #9
  call void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.6* nonnull sret %5, %class.SkPaint* nonnull dereferenceable(72) %20, %class.SkBitmap* dereferenceable(56) %1, i32 0, i32 0, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkMatrix* null, i32 2) #9
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %21, %class.sk_sp.6* nonnull %5) #9
  %259 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  %260 = load %class.SkShader*, %class.SkShader** %259, align 8, !noalias !31
  %261 = icmp eq %class.SkShader* %260, null
  br i1 %261, label %272, label %262

262:                                              ; preds = %241
  %263 = getelementptr inbounds %class.SkShader, %class.SkShader* %260, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw add i32* %263, i32 -1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %272

266:                                              ; preds = %262
  %267 = bitcast %class.SkShader* %260 to %class.SkRefCntBase*
  %268 = bitcast %class.SkShader* %260 to void (%class.SkRefCntBase*)***
  %269 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %268, align 8
  %270 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %269, i64 2
  %271 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %270, align 8
  call void %271(%class.SkRefCntBase* nonnull %267) #9
  br label %272

272:                                              ; preds = %241, %262, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258)
  %273 = bitcast %struct.SkRect* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %273) #9
  %274 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %22, i64 0, i32 0
  %275 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %22, i64 0, i32 1
  %276 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %22, i64 0, i32 2
  %277 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %22, i64 0, i32 3
  %278 = load i32, i32* %134, align 4
  %279 = load i32, i32* %136, align 4
  %280 = sitofp i32 %278 to float
  %281 = sitofp i32 %279 to float
  store float 0.000000e+00, float* %274, align 4
  store float 0.000000e+00, float* %275, align 4
  store float %280, float* %276, align 4
  store float %281, float* %277, align 4
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* nonnull %19, %struct.SkRect* nonnull dereferenceable(16) %22, %class.SkPaint* nonnull dereferenceable(72) %21) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %273) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %257) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %249) #9
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %242) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %213) #9
  call void @_ZNK6SkDraw11drawDevMaskERK6SkMaskRK7SkPaint(%class.SkDraw* %0, %struct.SkMask* nonnull dereferenceable(32) %12, %class.SkPaint* dereferenceable(72) %3)
  %282 = icmp eq i8* %212, null
  br i1 %282, label %284, label %283

283:                                              ; preds = %272
  call void @_Z7sk_freePv(i8* nonnull %212) #9
  br label %284

284:                                              ; preds = %283, %272, %202, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %124) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #9
  br label %285

285:                                              ; preds = %284, %106, %117
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #9
  br label %286

286:                                              ; preds = %4, %285
  ret void
}

declare zeroext i1 @_Z15SkTreatAsSpriteRK8SkMatrixRK7SkISizeRK17SkSamplingOptionsRK7SkPaint(%class.SkMatrix* dereferenceable(40), %struct.SkISize* dereferenceable(8), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #2

declare i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask*) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare void @_ZN8SkCanvasC1ERK8SkBitmap(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas6concatERK8SkMatrix(%class.SkCanvas*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw*, %class.SkBitmap* dereferenceable(56), %class.SkMatrix* readonly dereferenceable(40), %struct.SkRect*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca { i64, i64 }, align 8
  %11 = alloca %struct.SkRect, align 4
  %12 = alloca %class.SkM44, align 4
  %13 = alloca %class.SkM44, align 4
  %14 = alloca %class.sk_sp.6, align 8
  %15 = alloca %class.SkTCopyOnFirstWrite, align 8
  %16 = alloca %class.SkPreConcatMatrixProvider, align 8
  %17 = alloca %class.SkMatrix, align 4
  %18 = alloca i64, align 8
  %19 = bitcast i64* %18 to %struct.SkISize*
  %20 = alloca %class.SkPixmap, align 8
  %21 = alloca %class.SkSTArenaAlloc, align 8
  %22 = alloca %class.sk_sp.6, align 8
  %23 = alloca { i64, i64 }, align 8
  %24 = bitcast { i64, i64 }* %23 to %struct.SkIRect*
  %25 = alloca %class.SkDraw, align 8
  %26 = alloca %class.SkPaint, align 8
  %27 = alloca { <2 x float>, <2 x float> }, align 8
  %28 = bitcast { <2 x float>, <2 x float> }* %27 to %struct.SkRect*
  %29 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %30 = load %class.SkRasterClip*, %class.SkRasterClip** %29, align 8
  %31 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %30, i64 0, i32 3
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %440

34:                                               ; preds = %6
  %35 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %440, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %440, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %440, label %46

46:                                               ; preds = %42
  %47 = bitcast %class.SkTCopyOnFirstWrite* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %47) #9
  %48 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %15, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 72, i1 false)
  %49 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %15, i64 0, i32 0
  store %class.SkPaint* %5, %class.SkPaint** %49, align 8
  %50 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %15, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %50, align 8
  %51 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 192
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %15, i64 0, i32 1
  %57 = bitcast %class.SkTLazy.25* %56 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %57, %class.SkPaint* dereferenceable(72) %5) #9
  %58 = bitcast %class.SkPaint** %50 to %class.SkTLazy.25**
  store %class.SkTLazy.25* %56, %class.SkTLazy.25** %58, align 8
  %59 = ptrtoint %class.SkTLazy.25* %56 to i64
  %60 = bitcast %class.SkTCopyOnFirstWrite* %15 to i64*
  store i64 %59, i64* %60, align 8
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* %57, i8 zeroext 0) #9
  br label %61

61:                                               ; preds = %46, %55
  %62 = bitcast %class.SkPreConcatMatrixProvider* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %62) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 bitcast (%class.SkPreConcatMatrixProvider* @__const._ZNK6SkDraw10drawBitmapERK8SkBitmapRK8SkMatrixPK6SkRectRK17SkSamplingOptionsRK7SkPaint.matrixProvider to i8*), i64 160, i1 false)
  %63 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %64 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %63, align 8
  %65 = bitcast %class.SkM44* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %65) #9
  %66 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %64, i64 0, i32 1
  %67 = bitcast %class.SkM44* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %67) #9
  %68 = bitcast %class.SkMatrix* %2 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 2
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 5
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 6
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 7
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 8
  %92 = bitcast float* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = bitcast %class.SkM44* %13 to i32*
  store i32 %69, i32* %94, align 4
  %95 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 1
  %96 = bitcast float* %95 to i32*
  store i32 %78, i32* %96, align 4
  %97 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 2
  store float 0.000000e+00, float* %97, align 4
  %98 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 3
  %99 = bitcast float* %98 to i32*
  store i32 %87, i32* %99, align 4
  %100 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 4
  %101 = bitcast float* %100 to i32*
  store i32 %72, i32* %101, align 4
  %102 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 5
  %103 = bitcast float* %102 to i32*
  store i32 %81, i32* %103, align 4
  %104 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 6
  store float 0.000000e+00, float* %104, align 4
  %105 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 7
  %106 = bitcast float* %105 to i32*
  store i32 %90, i32* %106, align 4
  %107 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 8
  %108 = bitcast float* %107 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %108, align 4
  %109 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 12
  %110 = bitcast float* %109 to i32*
  store i32 %75, i32* %110, align 4
  %111 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 13
  %112 = bitcast float* %111 to i32*
  store i32 %84, i32* %112, align 4
  %113 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 14
  store float 0.000000e+00, float* %113, align 4
  %114 = getelementptr inbounds %class.SkM44, %class.SkM44* %13, i64 0, i32 0, i64 15
  %115 = bitcast float* %114 to i32*
  store i32 %93, i32* %115, align 4
  %116 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %12, %class.SkM44* dereferenceable(64) %66, %class.SkM44* nonnull dereferenceable(64) %13) #9
  %117 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 0
  %118 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 1
  %119 = bitcast %class.SkM44* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 4 %65, i64 64, i1 false) #9
  %120 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2
  %121 = bitcast %class.SkM44* %12 to i32*
  %122 = load i32, i32* %121, align 4, !noalias !34
  %123 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 4
  %124 = bitcast float* %123 to i32*
  %125 = load i32, i32* %124, align 4, !noalias !34
  %126 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 12
  %127 = bitcast float* %126 to i32*
  %128 = load i32, i32* %127, align 4, !noalias !34
  %129 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 1
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 4, !noalias !34
  %132 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 5
  %133 = bitcast float* %132 to i32*
  %134 = load i32, i32* %133, align 4, !noalias !34
  %135 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 13
  %136 = bitcast float* %135 to i32*
  %137 = load i32, i32* %136, align 4, !noalias !34
  %138 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 3
  %139 = bitcast float* %138 to i32*
  %140 = load i32, i32* %139, align 4, !noalias !34
  %141 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 7
  %142 = bitcast float* %141 to i32*
  %143 = load i32, i32* %142, align 4, !noalias !34
  %144 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 15
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4, !noalias !34
  %147 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 1
  %148 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 1
  %149 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 2
  %150 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 3
  %151 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 4
  %152 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 5
  %153 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 6
  %154 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 7
  %155 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0, i32 2, i32 0, i64 8
  %156 = bitcast %class.SkMatrix* %120 to i32*
  store i32 %122, i32* %156, align 8, !alias.scope !37
  %157 = bitcast float* %148 to i32*
  store i32 %125, i32* %157, align 4, !alias.scope !37
  %158 = bitcast float* %149 to i32*
  store i32 %128, i32* %158, align 8, !alias.scope !37
  %159 = bitcast float* %150 to i32*
  store i32 %131, i32* %159, align 4, !alias.scope !37
  %160 = bitcast float* %151 to i32*
  store i32 %134, i32* %160, align 8, !alias.scope !37
  %161 = bitcast float* %152 to i32*
  store i32 %137, i32* %161, align 4, !alias.scope !37
  %162 = bitcast float* %153 to i32*
  store i32 %140, i32* %162, align 8, !alias.scope !37
  %163 = bitcast float* %154 to i32*
  store i32 %143, i32* %163, align 4, !alias.scope !37
  %164 = bitcast float* %155 to i32*
  store i32 %146, i32* %164, align 8, !alias.scope !37
  store i32 128, i32* %147, align 4, !alias.scope !37
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %67) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %65) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV25SkPreConcatMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %165 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 1
  store %class.SkMatrixProvider* %64, %class.SkMatrixProvider** %165, align 8
  %166 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 2
  %167 = bitcast %class.SkMatrix* %166 to i8*
  %168 = bitcast %class.SkMatrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 4 %168, i64 40, i1 false) #9
  %169 = bitcast %class.SkMatrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169) #9
  %170 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %16, i64 0, i32 0
  %171 = bitcast %class.SkMatrix* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %169, i8* align 8 %171, i64 40, i1 false)
  %172 = load %class.SkRasterClip*, %class.SkRasterClip** %29, align 8
  %173 = load i32, i32* %35, align 4
  %174 = load i32, i32* %39, align 4
  %175 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #9
  %176 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 0
  %177 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 1
  %178 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 2
  %179 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %11, i64 0, i32 3
  %180 = sitofp i32 %173 to float
  %181 = sitofp i32 %174 to float
  store float 0.000000e+00, float* %176, align 4
  store float 0.000000e+00, float* %177, align 4
  store float %180, float* %178, align 4
  store float %181, float* %179, align 4
  %182 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %183 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #9
  %184 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 0
  %185 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 1
  %186 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 2
  %187 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %183, i8 -1, i64 16, i1 false) #9
  %188 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %17, %struct.SkRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %11, i32 1) #9
  %189 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %189) #9
  %190 = load float, float* %184, align 4
  %191 = call float @llvm.floor.f32(float %190) #9
  %192 = fcmp olt float %191, 0x41DFFFFFE0000000
  %193 = select i1 %192, float %191, float 0x41DFFFFFE0000000
  %194 = fcmp ogt float %193, 0xC1DFFFFFE0000000
  %195 = select i1 %194, float %193, float 0xC1DFFFFFE0000000
  %196 = fptosi float %195 to i32
  %197 = load float, float* %185, align 4
  %198 = call float @llvm.floor.f32(float %197) #9
  %199 = fcmp olt float %198, 0x41DFFFFFE0000000
  %200 = select i1 %199, float %198, float 0x41DFFFFFE0000000
  %201 = fcmp ogt float %200, 0xC1DFFFFFE0000000
  %202 = select i1 %201, float %200, float 0xC1DFFFFFE0000000
  %203 = fptosi float %202 to i32
  %204 = load float, float* %186, align 4
  %205 = call float @llvm.ceil.f32(float %204) #9
  %206 = fcmp olt float %205, 0x41DFFFFFE0000000
  %207 = select i1 %206, float %205, float 0x41DFFFFFE0000000
  %208 = fcmp ogt float %207, 0xC1DFFFFFE0000000
  %209 = select i1 %208, float %207, float 0xC1DFFFFFE0000000
  %210 = fptosi float %209 to i32
  %211 = load float, float* %187, align 4
  %212 = call float @llvm.ceil.f32(float %211) #9
  %213 = fcmp olt float %212, 0x41DFFFFFE0000000
  %214 = select i1 %213, float %212, float 0x41DFFFFFE0000000
  %215 = fcmp ogt float %214, 0xC1DFFFFFE0000000
  %216 = select i1 %215, float %214, float 0xC1DFFFFFE0000000
  %217 = fptosi float %216 to i32
  %218 = zext i32 %203 to i64
  %219 = shl nuw i64 %218, 32
  %220 = zext i32 %196 to i64
  %221 = or i64 %219, %220
  %222 = zext i32 %217 to i64
  %223 = shl nuw i64 %222, 32
  %224 = zext i32 %210 to i64
  %225 = or i64 %223, %224
  %226 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %221, i64* %226, align 8
  %227 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 %225, i64* %227, align 8
  %228 = call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %172) #9
  %229 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %229) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %229, i8 -86, i64 16, i1 false) #9
  %230 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* dereferenceable(16) %228, %struct.SkIRect* nonnull dereferenceable(16) %182) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %229) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %189) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #9
  br i1 %230, label %231, label %435

231:                                              ; preds = %61
  %232 = load i32, i32* %43, align 8
  %233 = icmp eq i32 %232, 1
  %234 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #9
  br i1 %233, label %361, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %237 = bitcast %struct.SkISize* %236 to i64*
  %238 = load i64, i64* %237, align 8
  store i64 %238, i64* %18, align 8
  %239 = load %class.SkPaint*, %class.SkPaint** %49, align 8
  %240 = call zeroext i1 @_Z15SkTreatAsSpriteRK8SkMatrixRK7SkISizeRK17SkSamplingOptionsRK7SkPaint(%class.SkMatrix* nonnull dereferenceable(40) %17, %struct.SkISize* nonnull dereferenceable(8) %19, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* dereferenceable(72) %239) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #9
  br i1 %240, label %241, label %362

241:                                              ; preds = %235
  %242 = bitcast %class.SkPixmap* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %242) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 0, i64 40, i1 false) #9
  %243 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %20) #9
  br i1 %243, label %244, label %348

244:                                              ; preds = %241
  %245 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 2
  %246 = load float, float* %245, align 4
  %247 = fadd float %246, 5.000000e-01
  %248 = call float @llvm.floor.f32(float %247)
  %249 = fcmp olt float %248, 0x41DFFFFFE0000000
  %250 = select i1 %249, float %248, float 0x41DFFFFFE0000000
  %251 = fcmp ogt float %250, 0xC1DFFFFFE0000000
  %252 = select i1 %251, float %250, float 0xC1DFFFFFE0000000
  %253 = fptosi float %252 to i32
  %254 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %17, i64 0, i32 0, i64 5
  %255 = load float, float* %254, align 4
  %256 = fadd float %255, 5.000000e-01
  %257 = call float @llvm.floor.f32(float %256)
  %258 = fcmp olt float %257, 0x41DFFFFFE0000000
  %259 = select i1 %258, float %257, float 0x41DFFFFFE0000000
  %260 = fcmp ogt float %259, 0xC1DFFFFFE0000000
  %261 = select i1 %260, float %259, float 0xC1DFFFFFE0000000
  %262 = fptosi float %261 to i32
  %263 = load %class.SkRasterClip*, %class.SkRasterClip** %29, align 8
  %264 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %263, i64 0, i32 2
  %265 = load i8, i8* %264, align 8, !range !2
  %266 = icmp eq i8 %265, 0
  br i1 %266, label %267, label %287

267:                                              ; preds = %244
  %268 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 1, i32 0
  %269 = load i32, i32* %268, align 8
  %270 = add nsw i32 %269, %253
  %271 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 1, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = add nsw i32 %272, %262
  %274 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %275 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #9
  %276 = zext i32 %262 to i64
  %277 = shl nuw i64 %276, 32
  %278 = zext i32 %253 to i64
  %279 = or i64 %277, %278
  %280 = zext i32 %273 to i64
  %281 = shl nuw i64 %280, 32
  %282 = zext i32 %270 to i64
  %283 = or i64 %281, %282
  %284 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %279, i64* %284, align 8
  %285 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %283, i64* %285, align 8
  %286 = call zeroext i1 @_ZNK12SkRasterClip13quickContainsERK7SkIRect(%class.SkRasterClip* %263, %struct.SkIRect* nonnull dereferenceable(16) %274) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #9
  br i1 %286, label %287, label %348

287:                                              ; preds = %244, %267
  %288 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %21, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3368, i8* nonnull %288) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 -86, i64 3368, i1 false)
  %289 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %21, i64 0, i32 0, i32 0, i64 3336
  %290 = bitcast i8* %289 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %290, i8* nonnull %288, i64 3332, i64 3332) #9
  %291 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %292 = load %class.SkPaint*, %class.SkPaint** %49, align 8
  %293 = load %class.SkRasterClip*, %class.SkRasterClip** %29, align 8
  %294 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %22, i64 0, i32 0
  %295 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %293, i64 0, i32 6, i32 0
  %296 = load %class.SkShader*, %class.SkShader** %295, align 8, !noalias !40
  %297 = icmp eq %class.SkShader* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %287
  %299 = getelementptr inbounds %class.SkShader, %class.SkShader* %296, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = atomicrmw add i32* %299, i32 1 monotonic, !noalias !40
  br label %301

301:                                              ; preds = %287, %298
  store %class.SkShader* %296, %class.SkShader** %294, align 8, !alias.scope !40
  %302 = call %class.SkBlitter* @_ZN9SkBlitter12ChooseSpriteERK8SkPixmapRK7SkPaintS2_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %291, %class.SkPaint* dereferenceable(72) %292, %class.SkPixmap* nonnull dereferenceable(40) %20, i32 %253, i32 %262, %class.SkArenaAlloc* %290, %class.sk_sp.6* nonnull %22) #9
  %303 = load %class.SkShader*, %class.SkShader** %294, align 8
  %304 = icmp eq %class.SkShader* %303, null
  br i1 %304, label %315, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %class.SkShader, %class.SkShader* %303, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = atomicrmw add i32* %306, i32 -1 acq_rel
  %308 = icmp eq i32 %307, 1
  br i1 %308, label %309, label %315

309:                                              ; preds = %305
  %310 = bitcast %class.SkShader* %303 to %class.SkRefCntBase*
  %311 = bitcast %class.SkShader* %303 to void (%class.SkRefCntBase*)***
  %312 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %311, align 8
  %313 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %312, i64 2
  %314 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %313, align 8
  call void %314(%class.SkRefCntBase* nonnull %310) #9
  br label %315

315:                                              ; preds = %301, %305, %309
  %316 = icmp eq %class.SkBlitter* %302, null
  br i1 %316, label %347, label %317

317:                                              ; preds = %315
  %318 = bitcast { i64, i64 }* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %318) #9
  %319 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 1, i32 0
  %320 = load i32, i32* %319, align 8
  %321 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 1, i32 1
  %322 = load i32, i32* %321, align 4
  %323 = sext i32 %253 to i64
  %324 = sext i32 %320 to i64
  %325 = add nsw i64 %324, %323
  %326 = icmp slt i64 %325, 2147483647
  %327 = select i1 %326, i64 %325, i64 2147483647
  %328 = icmp sgt i64 %327, -2147483647
  %329 = select i1 %328, i64 %327, i64 -2147483647
  %330 = sext i32 %262 to i64
  %331 = sext i32 %322 to i64
  %332 = add nsw i64 %331, %330
  %333 = icmp slt i64 %332, 2147483647
  %334 = select i1 %333, i64 %332, i64 2147483647
  %335 = icmp sgt i64 %334, -2147483647
  %336 = select i1 %335, i64 %334, i64 -2147483647
  %337 = zext i32 %262 to i64
  %338 = shl nuw i64 %337, 32
  %339 = zext i32 %253 to i64
  %340 = or i64 %338, %339
  %341 = shl nsw i64 %336, 32
  %342 = and i64 %329, 4294967295
  %343 = or i64 %341, %342
  %344 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 0
  store i64 %340, i64* %344, align 8
  %345 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i64 0, i32 1
  store i64 %343, i64* %345, align 8
  %346 = load %class.SkRasterClip*, %class.SkRasterClip** %29, align 8
  call void @_ZN6SkScan9FillIRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* nonnull dereferenceable(16) %24, %class.SkRasterClip* dereferenceable(72) %346, %class.SkBlitter* nonnull %302) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %318) #9
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %290) #9
  call void @llvm.lifetime.end.p0i8(i64 3368, i8* nonnull %288) #9
  br label %348

347:                                              ; preds = %315
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %290) #9
  call void @llvm.lifetime.end.p0i8(i64 3368, i8* nonnull %288) #9
  br label %348

348:                                              ; preds = %267, %347, %317, %241
  %349 = phi i32 [ 1, %241 ], [ 1, %317 ], [ 0, %347 ], [ 0, %267 ]
  %350 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %351 = load %class.SkColorSpace*, %class.SkColorSpace** %350, align 8
  %352 = icmp eq %class.SkColorSpace* %351, null
  br i1 %352, label %359, label %353

353:                                              ; preds = %348
  %354 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %351, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = atomicrmw add i32* %354, i32 -1 acq_rel
  %356 = icmp eq i32 %355, 1
  br i1 %356, label %357, label %359

357:                                              ; preds = %353
  %358 = bitcast %class.SkColorSpace* %351 to i8*
  call void @_ZdlPv(i8* %358) #10
  br label %359

359:                                              ; preds = %348, %353, %357
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %242) #9
  %360 = icmp eq i32 %349, 0
  br i1 %360, label %362, label %435

361:                                              ; preds = %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #9
  br label %362

362:                                              ; preds = %359, %361, %235
  %363 = bitcast %class.SkDraw* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %363) #9
  %364 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %25, i64 0, i32 1, i32 2
  %365 = bitcast %struct.SkImageInfo* %364 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %365, i8 -86, i64 48, i1 false)
  %366 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %25, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %366, align 8
  %367 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %25, i64 0, i32 1
  %368 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %369 = bitcast %class.SkPixmap* %367 to i8*
  %370 = bitcast %class.SkPixmap* %368 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %369, i8* align 8 %370, i64 16, i1 false) #9
  %371 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %25, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %372 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %373 = load %class.SkColorSpace*, %class.SkColorSpace** %372, align 8
  %374 = icmp eq %class.SkColorSpace* %373, null
  br i1 %374, label %378, label %375

375:                                              ; preds = %362
  %376 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %373, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = atomicrmw add i32* %376, i32 1 monotonic
  br label %378

378:                                              ; preds = %362, %375
  store %class.SkColorSpace* %373, %class.SkColorSpace** %371, align 8
  %379 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %25, i64 0, i32 1, i32 2, i32 0, i32 1
  %380 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %381 = bitcast i32* %380 to <2 x i64>*
  %382 = load <2 x i64>, <2 x i64>* %381, align 8
  %383 = bitcast i32* %379 to <2 x i64>*
  store <2 x i64> %382, <2 x i64>* %383, align 8
  %384 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %25, i64 0, i32 2
  %385 = bitcast %class.SkMatrixProvider** %384 to i8*
  %386 = bitcast %class.SkMatrixProvider** %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %385, i8* align 8 %386, i64 24, i1 false) #9
  store %class.SkMatrixProvider* %170, %class.SkMatrixProvider** %384, align 8
  %387 = load i32, i32* %43, align 8
  %388 = icmp eq i32 %387, 1
  %389 = load %class.SkPaint*, %class.SkPaint** %49, align 8
  br i1 %388, label %390, label %395

390:                                              ; preds = %378
  %391 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %389, i64 0, i32 3, i32 0
  %392 = load %class.SkColorFilter*, %class.SkColorFilter** %391, align 8
  %393 = icmp eq %class.SkColorFilter* %392, null
  br i1 %393, label %394, label %395

394:                                              ; preds = %390
  call void @_ZNK6SkDraw16drawBitmapAsMaskERK8SkBitmapRK17SkSamplingOptionsRK7SkPaint(%class.SkDraw* nonnull %25, %class.SkBitmap* dereferenceable(56) %1, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* dereferenceable(72) %389)
  br label %425

395:                                              ; preds = %378, %390
  %396 = bitcast %class.SkPaint* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %396) #9
  %397 = bitcast %class.sk_sp.6* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %397)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %396, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false) #9
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %26, %class.SkPaint* dereferenceable(72) %389) #9
  call void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.6* nonnull sret %14, %class.SkPaint* dereferenceable(72) %389, %class.SkBitmap* dereferenceable(56) %1, i32 0, i32 0, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkMatrix* null, i32 2) #9
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %26, %class.sk_sp.6* nonnull %14) #9
  %398 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %14, i64 0, i32 0
  %399 = load %class.SkShader*, %class.SkShader** %398, align 8, !noalias !43
  %400 = icmp eq %class.SkShader* %399, null
  br i1 %400, label %411, label %401

401:                                              ; preds = %395
  %402 = getelementptr inbounds %class.SkShader, %class.SkShader* %399, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = atomicrmw add i32* %402, i32 -1 acq_rel
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %411

405:                                              ; preds = %401
  %406 = bitcast %class.SkShader* %399 to %class.SkRefCntBase*
  %407 = bitcast %class.SkShader* %399 to void (%class.SkRefCntBase*)***
  %408 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %407, align 8
  %409 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %408, i64 2
  %410 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %409, align 8
  call void %410(%class.SkRefCntBase* nonnull %406) #9
  br label %411

411:                                              ; preds = %395, %401, %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %397)
  %412 = bitcast { <2 x float>, <2 x float> }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %412) #9
  %413 = load i32, i32* %35, align 4
  %414 = load i32, i32* %39, align 4
  %415 = sitofp i32 %413 to float
  %416 = insertelement <2 x float> undef, float %415, i32 0
  %417 = sitofp i32 %414 to float
  %418 = insertelement <2 x float> %416, float %417, i32 1
  %419 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %27, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %419, align 8
  %420 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %27, i64 0, i32 1
  store <2 x float> %418, <2 x float>* %420, align 8
  %421 = icmp eq %struct.SkRect* %3, null
  br i1 %421, label %423, label %422

422:                                              ; preds = %411
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* %0, %struct.SkRect* nonnull dereferenceable(16) %28, %class.SkPaint* nonnull dereferenceable(72) %26, %class.SkMatrix* %2, %struct.SkRect* nonnull %3)
  br label %424

423:                                              ; preds = %411
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* nonnull %25, %struct.SkRect* nonnull dereferenceable(16) %28, %class.SkPaint* nonnull dereferenceable(72) %26, %class.SkMatrix* null, %struct.SkRect* null) #9
  br label %424

424:                                              ; preds = %423, %422
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %412) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %396) #9
  br label %425

425:                                              ; preds = %424, %394
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %366, align 8
  %426 = load %class.SkColorSpace*, %class.SkColorSpace** %371, align 8
  %427 = icmp eq %class.SkColorSpace* %426, null
  br i1 %427, label %434, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %426, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = atomicrmw add i32* %429, i32 -1 acq_rel
  %431 = icmp eq i32 %430, 1
  br i1 %431, label %432, label %434

432:                                              ; preds = %428
  %433 = bitcast %class.SkColorSpace* %426 to i8*
  call void @_ZdlPv(i8* %433) #10
  br label %434

434:                                              ; preds = %425, %428, %432
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %363) #9
  br label %435

435:                                              ; preds = %61, %359, %434
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169) #9
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %62) #9
  %436 = load %class.SkPaint*, %class.SkPaint** %50, align 8
  %437 = icmp eq %class.SkPaint* %436, null
  br i1 %437, label %439, label %438

438:                                              ; preds = %435
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %436) #9
  store %class.SkPaint* null, %class.SkPaint** %50, align 8
  br label %439

439:                                              ; preds = %435, %438
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %47) #9
  br label %440

440:                                              ; preds = %6, %34, %38, %42, %439
  ret void
}

declare %class.SkBlitter* @_ZN9SkBlitter12ChooseSpriteERK8SkPixmapRK7SkPaintS2_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkPixmap* dereferenceable(40), i32, i32, %class.SkArenaAlloc*, %class.sk_sp.6*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6SkDrawD2Ev(%class.SkDraw*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkDraw10drawSpriteERK8SkBitmapiiRK7SkPaint(%class.SkDraw*, %class.SkBitmap* dereferenceable(56), i32, i32, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %class.sk_sp.6, align 8
  %9 = alloca <4 x i32>, align 16
  %10 = bitcast <4 x i32>* %9 to { i64, i64 }*
  %11 = bitcast <4 x i32>* %9 to %struct.SkIRect*
  %12 = alloca %class.SkPaint, align 8
  %13 = alloca %class.SkPixmap, align 8
  %14 = alloca %class.SkSTArenaAlloc, align 8
  %15 = alloca %class.sk_sp.6, align 8
  %16 = alloca %class.SkMatrix, align 16
  %17 = alloca <4 x float>, align 16
  %18 = bitcast <4 x float>* %17 to %struct.SkRect*
  %19 = alloca %class.SkPaint, align 8
  %20 = alloca %struct.SkSamplingOptions, align 4
  %21 = alloca %class.SkDraw, align 8
  %22 = alloca %class.SkOverrideDeviceMatrixProvider, align 8
  %23 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 3
  %24 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  %25 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %24, i64 0, i32 3
  %26 = load i8, i8* %25, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %265

28:                                               ; preds = %5
  %29 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %265, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %265, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %265, label %40

40:                                               ; preds = %36
  %41 = bitcast <4 x i32>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #9
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %43 = sext i32 %2 to i64
  %44 = sext i32 %30 to i64
  %45 = add nsw i64 %44, %43
  %46 = icmp slt i64 %45, 2147483647
  %47 = select i1 %46, i64 %45, i64 2147483647
  %48 = icmp sgt i64 %47, -2147483647
  %49 = select i1 %48, i64 %47, i64 -2147483647
  %50 = sext i32 %3 to i64
  %51 = sext i32 %34 to i64
  %52 = add nsw i64 %51, %50
  %53 = icmp slt i64 %52, 2147483647
  %54 = select i1 %53, i64 %52, i64 2147483647
  %55 = icmp sgt i64 %54, -2147483647
  %56 = select i1 %55, i64 %54, i64 -2147483647
  %57 = zext i32 %3 to i64
  %58 = shl nuw i64 %57, 32
  %59 = zext i32 %2 to i64
  %60 = or i64 %58, %59
  %61 = shl nsw i64 %56, 32
  %62 = and i64 %49, 4294967295
  %63 = or i64 %61, %62
  %64 = bitcast <4 x i32>* %9 to i64*
  store i64 %60, i64* %64, align 16
  store i64 %63, i64* %42, align 8
  %65 = tail call dereferenceable(16) %struct.SkIRect* @_ZNK12SkRasterClip9getBoundsEv(%class.SkRasterClip* %24) #9
  %66 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 -86, i64 16, i1 false) #9
  %67 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %7, %struct.SkIRect* dereferenceable(16) %65, %struct.SkIRect* nonnull dereferenceable(16) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #9
  br i1 %67, label %68, label %264

68:                                               ; preds = %40
  %69 = bitcast %class.SkPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %69) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %12, %class.SkPaint* dereferenceable(72) %4) #9
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %12, i8 zeroext 0) #9
  %70 = bitcast %class.SkPixmap* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 40, i1 false) #9
  %71 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %1, %class.SkPixmap* nonnull %13) #9
  br i1 %71, label %72, label %253

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %12, i64 0, i32 3, i32 0
  %74 = load %class.SkColorFilter*, %class.SkColorFilter** %73, align 8
  %75 = icmp eq %class.SkColorFilter* %74, null
  br i1 %75, label %76, label %129

76:                                               ; preds = %72
  %77 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  %78 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %77, i64 0, i32 2
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %13, i64 0, i32 2, i32 1, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, %2
  %85 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %13, i64 0, i32 2, i32 1, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, %3
  %88 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %89 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #9
  %90 = zext i32 %87 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %84 to i64
  %93 = or i64 %91, %92
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %60, i64* %94, align 8
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %93, i64* %95, align 8
  %96 = call zeroext i1 @_ZNK12SkRasterClip13quickContainsERK7SkIRect(%class.SkRasterClip* %77, %struct.SkIRect* nonnull dereferenceable(16) %88) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #9
  br i1 %96, label %97, label %129

97:                                               ; preds = %76, %81
  %98 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %14, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3368, i8* nonnull %98) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 3368, i1 false)
  %99 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %14, i64 0, i32 0, i32 0, i64 3336
  %100 = bitcast i8* %99 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %100, i8* nonnull %98, i64 3332, i64 3332) #9
  %101 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %102 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %15, i64 0, i32 0
  %104 = getelementptr inbounds %class.SkRasterClip, %class.SkRasterClip* %102, i64 0, i32 6, i32 0
  %105 = load %class.SkShader*, %class.SkShader** %104, align 8, !noalias !46
  %106 = icmp eq %class.SkShader* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %97
  %108 = getelementptr inbounds %class.SkShader, %class.SkShader* %105, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 1 monotonic, !noalias !46
  br label %110

110:                                              ; preds = %97, %107
  store %class.SkShader* %105, %class.SkShader** %103, align 8, !alias.scope !46
  %111 = call %class.SkBlitter* @_ZN9SkBlitter12ChooseSpriteERK8SkPixmapRK7SkPaintS2_iiP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %101, %class.SkPaint* nonnull dereferenceable(72) %12, %class.SkPixmap* nonnull dereferenceable(40) %13, i32 %2, i32 %3, %class.SkArenaAlloc* %100, %class.sk_sp.6* nonnull %15) #9
  %112 = load %class.SkShader*, %class.SkShader** %103, align 8
  %113 = icmp eq %class.SkShader* %112, null
  br i1 %113, label %124, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %class.SkShader, %class.SkShader* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %124

118:                                              ; preds = %114
  %119 = bitcast %class.SkShader* %112 to %class.SkRefCntBase*
  %120 = bitcast %class.SkShader* %112 to void (%class.SkRefCntBase*)***
  %121 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, i64 2
  %123 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, align 8
  call void %123(%class.SkRefCntBase* nonnull %119) #9
  br label %124

124:                                              ; preds = %110, %114, %118
  %125 = icmp eq %class.SkBlitter* %111, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %124
  %127 = load %class.SkRasterClip*, %class.SkRasterClip** %23, align 8
  call void @_ZN6SkScan9FillIRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* nonnull dereferenceable(16) %11, %class.SkRasterClip* dereferenceable(72) %127, %class.SkBlitter* nonnull %111) #9
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %100) #9
  call void @llvm.lifetime.end.p0i8(i64 3368, i8* nonnull %98) #9
  br label %253

128:                                              ; preds = %124
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %100) #9
  call void @llvm.lifetime.end.p0i8(i64 3368, i8* nonnull %98) #9
  br label %129

129:                                              ; preds = %128, %81, %72
  %130 = bitcast %class.SkMatrix* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %130) #9
  %131 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 1
  %132 = bitcast %class.SkMatrix* %16 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %132, align 16
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 4
  %134 = bitcast float* %133 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %134, align 16
  %135 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %16, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %135, align 16
  store i32 16, i32* %131, align 4
  %136 = bitcast <4 x float>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #9
  %137 = load <4 x i32>, <4 x i32>* %9, align 16
  %138 = sitofp <4 x i32> %137 to <4 x float>
  store <4 x float> %138, <4 x float>* %17, align 16
  %139 = extractelement <4 x float> %138, i32 0
  %140 = extractelement <4 x float> %138, i32 1
  %141 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %16, float %139, float %140) #9
  %142 = bitcast %class.SkPaint* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %142) #9
  %143 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %143) #9
  %144 = bitcast %class.sk_sp.6* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %143, i8 0, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %142, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false) #9
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %19, %class.SkPaint* nonnull dereferenceable(72) %12) #9
  call void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.6* nonnull sret %8, %class.SkPaint* nonnull dereferenceable(72) %12, %class.SkBitmap* dereferenceable(56) %1, i32 0, i32 0, %struct.SkSamplingOptions* nonnull dereferenceable(20) %20, %class.SkMatrix* nonnull %16, i32 2) #9
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %19, %class.sk_sp.6* nonnull %8) #9
  %145 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %8, i64 0, i32 0
  %146 = load %class.SkShader*, %class.SkShader** %145, align 8, !noalias !49
  %147 = icmp eq %class.SkShader* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %129
  %149 = getelementptr inbounds %class.SkShader, %class.SkShader* %146, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %158

152:                                              ; preds = %148
  %153 = bitcast %class.SkShader* %146 to %class.SkRefCntBase*
  %154 = bitcast %class.SkShader* %146 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  call void %157(%class.SkRefCntBase* nonnull %153) #9
  br label %158

158:                                              ; preds = %129, %148, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %143) #9
  %159 = bitcast %class.SkDraw* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %159) #9
  %160 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1, i32 2
  %161 = bitcast %struct.SkImageInfo* %160 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %161, i8 -86, i64 48, i1 false)
  %162 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %163 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1
  %164 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1
  %165 = bitcast %class.SkPixmap* %163 to i8*
  %166 = bitcast %class.SkPixmap* %164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 16, i1 false) #9
  %167 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %168 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %169 = load %class.SkColorSpace*, %class.SkColorSpace** %168, align 8
  %170 = icmp eq %class.SkColorSpace* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %158
  %172 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 1 monotonic
  br label %174

174:                                              ; preds = %158, %171
  store %class.SkColorSpace* %169, %class.SkColorSpace** %167, align 8
  %175 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 1, i32 2, i32 0, i32 1
  %176 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %177 = bitcast i32* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8
  %179 = bitcast i32* %175 to <2 x i64>*
  store <2 x i64> %178, <2 x i64>* %179, align 8
  %180 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %21, i64 0, i32 2
  %181 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 2
  %182 = bitcast %class.SkMatrixProvider** %180 to i8*
  %183 = bitcast %class.SkMatrixProvider** %181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 24, i1 false) #9
  %184 = bitcast %class.SkOverrideDeviceMatrixProvider* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %184) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %184, i8* align 8 bitcast (%class.SkOverrideDeviceMatrixProvider* @__const._ZNK6SkDraw10drawSpriteERK8SkBitmapiiRK7SkPaint.matrixProvider to i8*), i64 120, i1 false)
  %185 = bitcast %class.SkMatrixProvider** %181 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %188 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16SkMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %189 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1
  %190 = bitcast %class.SkMatrix* %187 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 1
  %193 = bitcast float* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 2
  %196 = bitcast float* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 3
  %199 = bitcast float* %198 to i32*
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 4
  %202 = bitcast float* %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 5
  %205 = bitcast float* %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 6
  %208 = bitcast float* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 7
  %211 = bitcast float* %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %187, i64 0, i32 0, i64 8
  %214 = bitcast float* %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = bitcast %class.SkM44* %189 to i32*
  store i32 %191, i32* %216, align 8
  %217 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 1
  %218 = bitcast float* %217 to i32*
  store i32 %200, i32* %218, align 4
  %219 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %219, align 8
  %220 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 3
  %221 = bitcast float* %220 to i32*
  store i32 %209, i32* %221, align 4
  %222 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 4
  %223 = bitcast float* %222 to i32*
  store i32 %194, i32* %223, align 8
  %224 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 5
  %225 = bitcast float* %224 to i32*
  store i32 %203, i32* %225, align 4
  %226 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %226, align 8
  %227 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 7
  %228 = bitcast float* %227 to i32*
  store i32 %212, i32* %228, align 4
  %229 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 8
  %230 = bitcast float* %229 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %230, align 8
  %231 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 12
  %232 = bitcast float* %231 to i32*
  store i32 %197, i32* %232, align 8
  %233 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 13
  %234 = bitcast float* %233 to i32*
  store i32 %206, i32* %234, align 4
  %235 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %235, align 8
  %236 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 1, i32 0, i64 15
  %237 = bitcast float* %236 to i32*
  store i32 %215, i32* %237, align 4
  %238 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0, i32 2
  %239 = bitcast %class.SkMatrix* %238 to i8*
  %240 = bitcast %class.SkMatrix* %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %239, i8* align 4 %240, i64 40, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV30SkOverrideDeviceMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %241 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 1
  %242 = bitcast %class.SkMatrixProvider** %241 to i64*
  store i64 %186, i64* %242, align 8
  %243 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %22, i64 0, i32 0
  store %class.SkMatrixProvider* %243, %class.SkMatrixProvider** %180, align 8
  call void @_ZNK6SkDraw8drawRectERK6SkRectRK7SkPaintPK8SkMatrixPS1_(%class.SkDraw* nonnull %21, %struct.SkRect* nonnull dereferenceable(16) %18, %class.SkPaint* nonnull dereferenceable(72) %19, %class.SkMatrix* null, %struct.SkRect* null) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %184) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %162, align 8
  %244 = load %class.SkColorSpace*, %class.SkColorSpace** %167, align 8
  %245 = icmp eq %class.SkColorSpace* %244, null
  br i1 %245, label %252, label %246

246:                                              ; preds = %174
  %247 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %252

250:                                              ; preds = %246
  %251 = bitcast %class.SkColorSpace* %244 to i8*
  call void @_ZdlPv(i8* %251) #10
  br label %252

252:                                              ; preds = %174, %246, %250
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %159) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %142) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %130) #9
  br label %253

253:                                              ; preds = %126, %68, %252
  %254 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %255 = load %class.SkColorSpace*, %class.SkColorSpace** %254, align 8
  %256 = icmp eq %class.SkColorSpace* %255, null
  br i1 %256, label %263, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = atomicrmw add i32* %258, i32 -1 acq_rel
  %260 = icmp eq i32 %259, 1
  br i1 %260, label %261, label %263

261:                                              ; preds = %257
  %262 = bitcast %class.SkColorSpace* %255 to i8*
  call void @_ZdlPv(i8* %262) #10
  br label %263

263:                                              ; preds = %253, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %69) #9
  br label %264

264:                                              ; preds = %40, %263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #9
  br label %265

265:                                              ; preds = %5, %28, %32, %36, %264
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6SkDraw17ComputeMaskBoundsERK6SkRectPK7SkIRectPK12SkMaskFilterPK8SkMatrixPS3_(%struct.SkRect* nocapture readonly dereferenceable(16), %struct.SkIRect* readonly, %class.SkMaskFilter*, %class.SkMatrix*, %struct.SkIRect*) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.SkIPoint*
  %8 = alloca %struct.SkMask, align 8
  %9 = alloca %struct.SkMask, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.SkIRect*
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = fadd float %13, -5.000000e-01
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fadd float %16, -5.000000e-01
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fadd float %19, 5.000000e-01
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %22 = load float, float* %21, align 4
  %23 = fadd float %22, 5.000000e-01
  %24 = tail call float @llvm.floor.f32(float %14) #9
  %25 = fcmp olt float %24, 0x41DFFFFFE0000000
  %26 = select i1 %25, float %24, float 0x41DFFFFFE0000000
  %27 = fcmp ogt float %26, 0xC1DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0xC1DFFFFFE0000000
  %29 = fptosi float %28 to i32
  %30 = tail call float @llvm.floor.f32(float %17) #9
  %31 = fcmp olt float %30, 0x41DFFFFFE0000000
  %32 = select i1 %31, float %30, float 0x41DFFFFFE0000000
  %33 = fcmp ogt float %32, 0xC1DFFFFFE0000000
  %34 = select i1 %33, float %32, float 0xC1DFFFFFE0000000
  %35 = fptosi float %34 to i32
  %36 = tail call float @llvm.ceil.f32(float %20) #9
  %37 = fcmp olt float %36, 0x41DFFFFFE0000000
  %38 = select i1 %37, float %36, float 0x41DFFFFFE0000000
  %39 = fcmp ogt float %38, 0xC1DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0xC1DFFFFFE0000000
  %41 = fptosi float %40 to i32
  %42 = tail call float @llvm.ceil.f32(float %23) #9
  %43 = fcmp olt float %42, 0x41DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0x41DFFFFFE0000000
  %45 = fcmp ogt float %44, 0xC1DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0xC1DFFFFFE0000000
  %47 = fptosi float %46 to i32
  %48 = zext i32 %35 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %29 to i64
  %51 = or i64 %49, %50
  %52 = zext i32 %47 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %41 to i64
  %55 = or i64 %53, %54
  %56 = bitcast %struct.SkIRect* %4 to i64*
  store i64 %51, i64* %56, align 4
  %57 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %58 = bitcast i32* %57 to i64*
  store i64 %55, i64* %58, align 4
  %59 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  store i64 0, i64* %6, align 8
  %60 = icmp eq %class.SkMaskFilter* %2, null
  br i1 %60, label %80, label %61

61:                                               ; preds = %5
  %62 = bitcast %struct.SkMask* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #9
  %63 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %8, i64 0, i32 0
  %64 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %8, i64 0, i32 1
  %65 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %8, i64 0, i32 3
  %66 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %8, i64 0, i32 2
  %67 = bitcast i32* %66 to i64*
  store i64 -6148914691236517206, i64* %67, align 8
  store i8* null, i8** %63, align 8
  %68 = bitcast %struct.SkMask* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %68) #9
  %69 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 0
  %70 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %9, i64 0, i32 1
  %71 = bitcast %struct.SkIRect* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  store i8* null, i8** %69, align 8
  %72 = bitcast %struct.SkIRect* %64 to i8*
  %73 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 4 %73, i64 16, i1 false)
  store i8 1, i8* %65, align 4
  %74 = bitcast %class.SkMaskFilter* %2 to %class.SkMaskFilterBase*
  %75 = bitcast %class.SkMaskFilter* %2 to i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)***
  %76 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)**, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %76, i64 8
  %78 = load i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)*, i1 (%class.SkMaskFilterBase*, %struct.SkMask*, %struct.SkMask*, %class.SkMatrix*, %struct.SkIPoint*)** %77, align 8
  %79 = call zeroext i1 %78(%class.SkMaskFilterBase* nonnull %74, %struct.SkMask* nonnull %9, %struct.SkMask* nonnull dereferenceable(32) %8, %class.SkMatrix* dereferenceable(40) %3, %struct.SkIPoint* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #9
  br i1 %79, label %80, label %136

80:                                               ; preds = %5, %61
  %81 = icmp eq %struct.SkIRect* %1, null
  br i1 %81, label %135, label %82

82:                                               ; preds = %80
  %83 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  %84 = bitcast i64* %6 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %85, 128
  %87 = select i1 %86, i32 %85, i32 128
  %88 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %7, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %89, 128
  %91 = select i1 %90, i32 %89, i32 128
  %92 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = sext i32 %87 to i64
  %96 = sub nsw i64 %94, %95
  %97 = icmp slt i64 %96, 2147483647
  %98 = select i1 %97, i64 %96, i64 2147483647
  %99 = icmp sgt i64 %98, -2147483647
  %100 = select i1 %99, i64 %98, i64 -2147483647
  %101 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = sext i32 %91 to i64
  %105 = sub nsw i64 %103, %104
  %106 = icmp slt i64 %105, 2147483647
  %107 = select i1 %106, i64 %105, i64 2147483647
  %108 = icmp sgt i64 %107, -2147483647
  %109 = select i1 %108, i64 %107, i64 -2147483647
  %110 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = add nsw i64 %112, %95
  %114 = icmp slt i64 %113, 2147483647
  %115 = select i1 %114, i64 %113, i64 2147483647
  %116 = icmp sgt i64 %115, -2147483647
  %117 = select i1 %116, i64 %115, i64 -2147483647
  %118 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = add nsw i64 %120, %104
  %122 = icmp slt i64 %121, 2147483647
  %123 = select i1 %122, i64 %121, i64 2147483647
  %124 = icmp sgt i64 %123, -2147483647
  %125 = select i1 %124, i64 %123, i64 -2147483647
  %126 = shl nsw i64 %109, 32
  %127 = and i64 %100, 4294967295
  %128 = or i64 %126, %127
  %129 = shl nsw i64 %125, 32
  %130 = and i64 %117, 4294967295
  %131 = or i64 %129, %130
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  store i64 %128, i64* %132, align 8
  %133 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  store i64 %131, i64* %133, align 8
  %134 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* %4, %struct.SkIRect* dereferenceable(16) %4, %struct.SkIRect* nonnull dereferenceable(16) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  br i1 %134, label %135, label %136

135:                                              ; preds = %82, %80
  br label %136

136:                                              ; preds = %82, %61, %135
  %137 = phi i1 [ true, %135 ], [ false, %61 ], [ false, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6SkDraw10DrawToMaskERK6SkPathPK7SkIRectPK12SkMaskFilterPK8SkMatrixP6SkMaskNSC_10CreateModeEN11SkStrokeRec9InitStyleE(%class.SkPath* dereferenceable(16), %struct.SkIRect*, %class.SkMaskFilter*, %class.SkMatrix*, %struct.SkMask*, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkDraw, align 8
  %9 = alloca %class.SkRasterClip, align 8
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = alloca %class.SkSimpleMatrixProvider, align 8
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %15 = load %class.SkPathRef*, %class.SkPathRef** %14, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 4, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %164, label %19

19:                                               ; preds = %7
  %20 = icmp eq i32 %5, 1
  br i1 %20, label %52, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 9
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 1
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 0
  %28 = load %struct.SkPoint*, %struct.SkPoint** %27, align 8
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %26, %struct.SkPoint* %28, i32 %30) #9
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 10
  %33 = zext i1 %31 to i8
  store i8 %33, i8* %32, align 1
  store i8 0, i8* %22, align 8
  br label %34

34:                                               ; preds = %21, %25
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 1
  %36 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1
  %37 = tail call zeroext i1 @_ZN6SkDraw17ComputeMaskBoundsERK6SkRectPK7SkIRectPK12SkMaskFilterPK8SkMatrixPS3_(%struct.SkRect* dereferenceable(16) %35, %struct.SkIRect* %1, %class.SkMaskFilter* %2, %class.SkMatrix* %3, %struct.SkIRect* %36)
  br i1 %37, label %38, label %164

38:                                               ; preds = %34
  switch i32 %5, label %52 [
    i32 2, label %39
    i32 0, label %164
  ]

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 3
  store i8 1, i8* %40, align 4
  %41 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %42, %44
  %46 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = tail call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* %4) #9
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %164, label %49

49:                                               ; preds = %39
  %50 = tail call i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64 %47, i32 1) #9
  %51 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 0
  store i8* %50, i8** %51, align 8
  br label %52

52:                                               ; preds = %49, %19, %38
  %53 = bitcast %class.SkDraw* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %53) #9
  %54 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %8, i64 0, i32 1
  %56 = bitcast %class.SkPixmap* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 64, i1 false) #9
  %57 = call zeroext i1 @_ZN8SkPixmap5resetERK6SkMask(%class.SkPixmap* %55, %struct.SkMask* dereferenceable(32) %4) #9
  br i1 %57, label %58, label %153

58:                                               ; preds = %52
  %59 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %60 = bitcast %class.SkRasterClip* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %60) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 72, i1 false) #9
  call void @_ZN12SkRasterClipC1Ev(%class.SkRasterClip* nonnull %9) #9
  %61 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #9
  %62 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 1
  %64 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 2
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 3
  %66 = bitcast %class.SkMatrix* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %66, align 16
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %68 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 5
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 6
  %70 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 7
  %71 = bitcast float* %67 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %71, align 16
  %72 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %72, align 16
  store i32 16, i32* %62, align 4
  %73 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %73) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 bitcast (%class.SkPaint* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.paint to i8*), i64 72, i1 false) #9
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %11) #9
  %74 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #9
  %75 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %76, %78
  %80 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 %81, %83
  %85 = zext i32 %84 to i64
  %86 = shl nuw i64 %85, 32
  %87 = zext i32 %79 to i64
  %88 = or i64 %86, %87
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %88, i64* %90, align 8
  %91 = call zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip* nonnull %9, %struct.SkIRect* nonnull dereferenceable(16) %59) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #9
  %92 = load i32, i32* %77, align 8
  %93 = sitofp i32 %92 to float
  %94 = fsub float -0.000000e+00, %93
  %95 = load i32, i32* %82, align 4
  %96 = sitofp i32 %95 to float
  %97 = fsub float -0.000000e+00, %96
  %98 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %10, float %94, float %97) #9
  %99 = bitcast %class.SkSimpleMatrixProvider* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %99) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZL14draw_into_maskRK6SkMaskRK6SkPathN11SkStrokeRec9InitStyleE.matrixProvider to i8*), i64 112, i1 false) #9
  %100 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 0
  %101 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1
  %102 = bitcast %class.SkMatrix* %10 to i32*
  %103 = load i32, i32* %102, align 16
  %104 = bitcast float* %63 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = bitcast float* %64 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = bitcast float* %65 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = bitcast float* %67 to i32*
  %111 = load i32, i32* %110, align 16
  %112 = bitcast float* %68 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = bitcast float* %69 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = bitcast float* %70 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = bitcast float* %72 to i32*
  %119 = load i32, i32* %118, align 16
  %120 = bitcast %class.SkM44* %101 to i32*
  store i32 %103, i32* %120, align 8
  %121 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 1
  %122 = bitcast float* %121 to i32*
  store i32 %109, i32* %122, align 4
  %123 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %123, align 8
  %124 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 3
  %125 = bitcast float* %124 to i32*
  store i32 %115, i32* %125, align 4
  %126 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 4
  %127 = bitcast float* %126 to i32*
  store i32 %105, i32* %127, align 8
  %128 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 5
  %129 = bitcast float* %128 to i32*
  store i32 %111, i32* %129, align 4
  %130 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %130, align 8
  %131 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 7
  %132 = bitcast float* %131 to i32*
  store i32 %117, i32* %132, align 4
  %133 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 8
  %134 = bitcast float* %133 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %134, align 8
  %135 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 12
  %136 = bitcast float* %135 to i32*
  store i32 %107, i32* %136, align 8
  %137 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 13
  %138 = bitcast float* %137 to i32*
  store i32 %113, i32* %138, align 4
  %139 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %139, align 8
  %140 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 1, i32 0, i64 15
  %141 = bitcast float* %140 to i32*
  store i32 %119, i32* %141, align 4
  %142 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0, i32 2
  %143 = bitcast %class.SkMatrix* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* nonnull align 16 %61, i64 40, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %144 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %8, i64 0, i32 3
  store %class.SkRasterClip* %9, %class.SkRasterClip** %144, align 8
  %145 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %13, i64 0, i32 0
  %146 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %8, i64 0, i32 2
  store %class.SkMatrixProvider* %145, %class.SkMatrixProvider** %146, align 8
  %147 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %11, i64 0, i32 8, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = or i32 %148, 1
  store i32 %149, i32* %147, align 8
  %150 = icmp eq i32 %6, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %58
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %11, i8 zeroext 1) #9
  br label %152

152:                                              ; preds = %151, %58
  call void @_ZNK6SkDraw8drawPathERK6SkPathRK7SkPaintPK8SkMatrixbbP9SkBlitter(%class.SkDraw* nonnull %8, %class.SkPath* dereferenceable(16) %0, %class.SkPaint* nonnull dereferenceable(72) %11, %class.SkMatrix* null, i1 zeroext false, i1 zeroext false, %class.SkBlitter* null) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %99) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %73) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #9
  call void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %60) #9
  br label %153

153:                                              ; preds = %152, %52
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %154 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %8, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %155 = load %class.SkColorSpace*, %class.SkColorSpace** %154, align 8
  %156 = icmp eq %class.SkColorSpace* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw add i32* %158, i32 -1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %163

161:                                              ; preds = %157
  %162 = bitcast %class.SkColorSpace* %155 to i8*
  call void @_ZdlPv(i8* %162) #10
  br label %163

163:                                              ; preds = %153, %157, %161
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %53) #9
  br label %164

164:                                              ; preds = %163, %38, %39, %34, %7
  %165 = phi i1 [ false, %7 ], [ false, %34 ], [ false, %39 ], [ true, %38 ], [ true, %163 ]
  ret i1 %165
}

declare i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6SkDrawD0Ev(%class.SkDraw*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV6SkDraw, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkDraw, %class.SkDraw* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %class.SkDraw* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

declare void @_ZNK6SkDraw10paintPathsEP21SkDrawableGlyphBufferf7SkPointRK7SkPaint(%class.SkDraw*, %class.SkDrawableGlyphBuffer*, float, <2 x float>, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @_ZNK6SkDraw10paintMasksEP21SkDrawableGlyphBufferRK7SkPaint(%class.SkDraw*, %class.SkDrawableGlyphBuffer*, %class.SkPaint* dereferenceable(72)) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #2

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN6SkScan13AntiFillXRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan12AntiHairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint*, i32, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkRegion8containsEii(%class.SkRegion*, i32, i32) local_unnamed_addr #2

declare void @_ZN6SkScan8HairLineEPK7SkPointiRK12SkRasterClipP9SkBlitter(%struct.SkPoint*, i32, %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkScan9FillXRectERK7SkIRectRK12SkRasterClipP9SkBlitter(%struct.SkIRect* dereferenceable(16), %class.SkRasterClip* dereferenceable(72), %class.SkBlitter*) local_unnamed_addr #2

declare void @_ZN6SkPath7PolygonEPK7SkPointib14SkPathFillTypeb(%class.SkPath* sret, %struct.SkPoint*, i32, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #8

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15SkAAClipBlitterD1Ev(%class.SkAAClipBlitter*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #5

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #2

declare %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkMatrixProvider* dereferenceable(112), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*, i1 zeroext, %class.sk_sp.6*) local_unnamed_addr #2

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #2

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkPairBlitterJRP9SkBlitterS5_EEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS6_ENUlPcE_8__invokeESF_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -49
  %3 = bitcast i8* %2 to %class.SkPairBlitter*
  %4 = bitcast i8* %2 to void (%class.SkPairBlitter*)***
  %5 = load void (%class.SkPairBlitter*)**, void (%class.SkPairBlitter*)*** %4, align 8
  %6 = load void (%class.SkPairBlitter*)*, void (%class.SkPairBlitter*)** %5, align 8
  tail call void %6(%class.SkPairBlitter* %3) #9
  ret i8* %2
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitterD0Ev(%class.SkPairBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %2) #9
  %3 = bitcast %class.SkPairBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter5blitHEiii(%class.SkPairBlitter*, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %6 = load %class.SkBlitter*, %class.SkBlitter** %5, align 8
  %7 = bitcast %class.SkBlitter* %6 to void (%class.SkBlitter*, i32, i32, i32)***
  %8 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %8, i64 2
  %10 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %9, align 8
  tail call void %10(%class.SkBlitter* %6, i32 %1, i32 %2, i32 %3) #9
  %11 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %12 = load %class.SkBlitter*, %class.SkBlitter** %11, align 8
  %13 = bitcast %class.SkBlitter* %12 to void (%class.SkBlitter*, i32, i32, i32)***
  %14 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %14, i64 2
  %16 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %15, align 8
  tail call void %16(%class.SkBlitter* %12, i32 %1, i32 %2, i32 %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter9blitAntiHEiiPKhPKs(%class.SkPairBlitter*, i32, i32, i8*, i16*) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %9 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %9, i64 3
  %11 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i8* %3, i16* %4) #9
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %15 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, i64 3
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i8* %3, i16* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter5blitVEiiih(%class.SkPairBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %9, i64 4
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i8 zeroext %4) #9
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %15, i64 4
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i8 zeroext %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter8blitRectEiiii(%class.SkPairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %9, i64 5
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i32 %4) #9
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %15, i64 5
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter12blitAntiRectEiiiihh(%class.SkPairBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 comdat align 2 {
  %8 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %9 = load %class.SkBlitter*, %class.SkBlitter** %8, align 8
  %10 = bitcast %class.SkBlitter* %9 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %11, i64 6
  %13 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %12, align 8
  tail call void %13(%class.SkBlitter* %9, i32 %1, i32 %2, i32 %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #9
  %14 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %15 = load %class.SkBlitter*, %class.SkBlitter** %14, align 8
  %16 = bitcast %class.SkBlitter* %15 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %17, i64 6
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %18, align 8
  tail call void %19(%class.SkBlitter* %15, i32 %1, i32 %2, i32 %3, i32 %4, i8 zeroext %5, i8 zeroext %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkPairBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %5 = load %class.SkBlitter*, %class.SkBlitter** %4, align 8
  %6 = bitcast %class.SkBlitter* %5 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %7 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %7, i64 7
  %9 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %8, align 8
  tail call void %9(%class.SkBlitter* %5, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #9
  %10 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %11 = load %class.SkBlitter*, %class.SkBlitter** %10, align 8
  %12 = bitcast %class.SkBlitter* %11 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %13 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %13, i64 7
  %15 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %14, align 8
  tail call void %15(%class.SkBlitter* %11, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPixmap* @_ZN13SkPairBlitter17justAnOpaqueColorEPj(%class.SkPairBlitter*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter10blitAntiH2Eiijj(%class.SkPairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %9, i64 9
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i32 %4) #9
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %15, i64 9
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i32 %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkPairBlitter10blitAntiV2Eiijj(%class.SkPairBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 1
  %7 = load %class.SkBlitter*, %class.SkBlitter** %6, align 8
  %8 = bitcast %class.SkBlitter* %7 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %9 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %9, i64 10
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %10, align 8
  tail call void %11(%class.SkBlitter* %7, i32 %1, i32 %2, i32 %3, i32 %4) #9
  %12 = getelementptr inbounds %class.SkPairBlitter, %class.SkPairBlitter* %0, i64 0, i32 2
  %13 = load %class.SkBlitter*, %class.SkBlitter** %12, align 8
  %14 = bitcast %class.SkBlitter* %13 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %15 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %15, i64 10
  %17 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, align 8
  tail call void %17(%class.SkBlitter* %13, i32 %1, i32 %2, i32 %3, i32 %4) #9
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #9
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #9
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.6*) local_unnamed_addr #2

declare void @_Z26SkMakeBitmapShaderForPaintRK7SkPaintRK8SkBitmap10SkTileModeS5_RK17SkSamplingOptionsPK8SkMatrix16SkCopyPixelsMode(%class.sk_sp.6* sret, %class.SkPaint* dereferenceable(72), %class.SkBitmap* dereferenceable(56), i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkPreConcatMatrixProviderD0Ev(%class.SkPreConcatMatrixProvider*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SkPreConcatMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkPreConcatMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #9
  br i1 %10, label %11, label %16

11:                                               ; preds = %3
  %12 = icmp eq %class.SkM44* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %class.SkPreConcatMatrixProvider, %class.SkPreConcatMatrixProvider* %0, i64 0, i32 2
  %15 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44* nonnull %2, %class.SkMatrix* dereferenceable(40) %14) #9
  br label %16

16:                                               ; preds = %3, %13, %11
  %17 = phi i1 [ true, %11 ], [ true, %13 ], [ false, %3 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK25SkPreConcatMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkPreConcatMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD0Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449preConcatERK8SkMatrix(%class.SkM44*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare zeroext i1 @_ZNK12SkRasterClip13quickContainsERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN30SkOverrideDeviceMatrixProviderD0Ev(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SkOverrideDeviceMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkOverrideDeviceMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkOverrideDeviceMatrixProvider, %class.SkOverrideDeviceMatrixProvider* %0, i64 0, i32 1
  %5 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %4, align 8
  %6 = bitcast %class.SkMatrixProvider* %5 to i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)***
  %7 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)**, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %7, i64 2
  %9 = load i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)*, i1 (%class.SkMatrixProvider*, i32, %class.SkM44*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkMatrixProvider* %5, i32 %1, %class.SkM44* %2) #9
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK30SkOverrideDeviceMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkOverrideDeviceMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8SkPixmap5resetERK6SkMask(%class.SkPixmap*, %struct.SkMask* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN12SkRasterClipC1Ev(%class.SkRasterClip*) unnamed_addr #2

declare zeroext i1 @_ZN12SkRasterClip7setRectERK7SkIRect(%class.SkRasterClip*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkRasterClipD1Ev(%class.SkRasterClip*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSimpleMatrixProviderD0Ev(%class.SkSimpleMatrixProvider*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SkSimpleMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkSimpleMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkSimpleMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

declare void @_ZN6SkMask9FreeImageEPv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #3

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6SkPath4LineE7SkPointS0_: argument 0"}
!7 = distinct !{!7, !"_ZN6SkPath4LineE7SkPointS0_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5SkM445asM33Ev: argument 0"}
!10 = distinct !{!10, !"_ZNK5SkM445asM33Ev"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!13 = distinct !{!13, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!16 = distinct !{!16, !"_ZNK12SkRasterClip10clipShaderEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!19 = distinct !{!19, !"_ZNK12SkRasterClip10clipShaderEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5SkM445asM33Ev: argument 0"}
!22 = distinct !{!22, !"_ZNK5SkM445asM33Ev"}
!23 = !{!24, !21}
!24 = distinct !{!24, !25, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!25 = distinct !{!25, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!28 = distinct !{!28, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!29 = distinct !{!29, !30, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!30 = distinct !{!30, !"_ZN11SkImageInfo6MakeA8Eii"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZL21make_paint_with_imageRK7SkPaintRK8SkBitmapRK17SkSamplingOptionsP8SkMatrix: argument 0"}
!33 = distinct !{!33, !"_ZL21make_paint_with_imageRK7SkPaintRK8SkBitmapRK17SkSamplingOptionsP8SkMatrix"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5SkM445asM33Ev: argument 0"}
!36 = distinct !{!36, !"_ZNK5SkM445asM33Ev"}
!37 = !{!38, !35}
!38 = distinct !{!38, !39, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!39 = distinct !{!39, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!42 = distinct !{!42, !"_ZNK12SkRasterClip10clipShaderEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZL21make_paint_with_imageRK7SkPaintRK8SkBitmapRK17SkSamplingOptionsP8SkMatrix: argument 0"}
!45 = distinct !{!45, !"_ZL21make_paint_with_imageRK7SkPaintRK8SkBitmapRK17SkSamplingOptionsP8SkMatrix"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK12SkRasterClip10clipShaderEv: argument 0"}
!48 = distinct !{!48, !"_ZNK12SkRasterClip10clipShaderEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZL21make_paint_with_imageRK7SkPaintRK8SkBitmapRK17SkSamplingOptionsP8SkMatrix: argument 0"}
!51 = distinct !{!51, !"_ZL21make_paint_with_imageRK7SkPaintRK8SkBitmapRK17SkSamplingOptionsP8SkMatrix"}
