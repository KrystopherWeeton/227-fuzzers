; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/expand_dims.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/expand_dims.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/expand_dims.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@_ZZN6tflite3ops7builtin20Register_EXPAND_DIMSEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11expand_dims7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin11expand_dims4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.9 = private unnamed_addr constant [19 x i8] c"NumElements(&axis)\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"axis <= input_dims.size\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11expand_dims7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 2) #4
  br label %277

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 75, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %15, i32 1) #4
  br label %277

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 0
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %270

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %59 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %58, align 8
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %207

63:                                               ; preds = %57
  %64 = sext i32 %61 to i64
  %65 = add nsw i64 %64, -1
  %66 = and i64 %64, 7
  %67 = icmp ult i64 %65, 7
  br i1 %67, label %116, label %68

68:                                               ; preds = %63
  %69 = sub nsw i64 %64, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %113, %70 ]
  %72 = phi i64 [ 1, %68 ], [ %112, %70 ]
  %73 = phi i64 [ %69, %68 ], [ %114, %70 ]
  %74 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %71
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %72, %76
  %78 = or i64 %71, 1
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %78
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %77, %81
  %83 = or i64 %71, 2
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %83
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = mul nsw i64 %82, %86
  %88 = or i64 %71, 3
  %89 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %87, %91
  %93 = or i64 %71, 4
  %94 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = mul nsw i64 %92, %96
  %98 = or i64 %71, 5
  %99 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = mul nsw i64 %97, %101
  %103 = or i64 %71, 6
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul nsw i64 %102, %106
  %108 = or i64 %71, 7
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = mul nsw i64 %107, %111
  %113 = add nuw nsw i64 %71, 8
  %114 = add i64 %73, -8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %70

116:                                              ; preds = %70, %63
  %117 = phi i64 [ undef, %63 ], [ %112, %70 ]
  %118 = phi i64 [ 0, %63 ], [ %113, %70 ]
  %119 = phi i64 [ 1, %63 ], [ %112, %70 ]
  %120 = icmp eq i64 %66, 0
  br i1 %120, label %132, label %121

121:                                              ; preds = %116, %121
  %122 = phi i64 [ %129, %121 ], [ %118, %116 ]
  %123 = phi i64 [ %128, %121 ], [ %119, %116 ]
  %124 = phi i64 [ %130, %121 ], [ %66, %116 ]
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %122
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = mul nsw i64 %123, %127
  %129 = add nuw nsw i64 %122, 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %121, !llvm.loop !2

132:                                              ; preds = %121, %116
  %133 = phi i64 [ %117, %116 ], [ %128, %121 ]
  %134 = icmp eq i64 %133, 1
  br i1 %134, label %207, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %137 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %136, align 8
  %138 = add nsw i64 %64, -1
  %139 = and i64 %64, 7
  %140 = icmp ult i64 %138, 7
  br i1 %140, label %189, label %141

141:                                              ; preds = %135
  %142 = sub nsw i64 %64, %139
  br label %143

143:                                              ; preds = %143, %141
  %144 = phi i64 [ 0, %141 ], [ %186, %143 ]
  %145 = phi i64 [ 1, %141 ], [ %185, %143 ]
  %146 = phi i64 [ %142, %141 ], [ %187, %143 ]
  %147 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %144
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = mul nsw i64 %145, %149
  %151 = or i64 %144, 1
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = sext i32 %153 to i64
  %155 = mul nsw i64 %150, %154
  %156 = or i64 %144, 2
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = mul nsw i64 %155, %159
  %161 = or i64 %144, 3
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = mul nsw i64 %160, %164
  %166 = or i64 %144, 4
  %167 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = sext i32 %168 to i64
  %170 = mul nsw i64 %165, %169
  %171 = or i64 %144, 5
  %172 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = sext i32 %173 to i64
  %175 = mul nsw i64 %170, %174
  %176 = or i64 %144, 6
  %177 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = mul nsw i64 %175, %179
  %181 = or i64 %144, 7
  %182 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = sext i32 %183 to i64
  %185 = mul nsw i64 %180, %184
  %186 = add nuw nsw i64 %144, 8
  %187 = add i64 %146, -8
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %143

189:                                              ; preds = %143, %135
  %190 = phi i64 [ undef, %135 ], [ %185, %143 ]
  %191 = phi i64 [ 0, %135 ], [ %186, %143 ]
  %192 = phi i64 [ 1, %135 ], [ %185, %143 ]
  %193 = icmp eq i64 %139, 0
  br i1 %193, label %205, label %194

194:                                              ; preds = %189, %194
  %195 = phi i64 [ %202, %194 ], [ %191, %189 ]
  %196 = phi i64 [ %201, %194 ], [ %192, %189 ]
  %197 = phi i64 [ %203, %194 ], [ %139, %189 ]
  %198 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %59, i64 0, i32 1, i64 %195
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = mul nsw i64 %196, %200
  %202 = add nuw nsw i64 %195, 1
  %203 = add i64 %197, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %194, !llvm.loop !4

205:                                              ; preds = %194, %189
  %206 = phi i64 [ %190, %189 ], [ %201, %194 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %137(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %206, i32 1) #4
  br label %277

207:                                              ; preds = %132, %57
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %209 = load i32, i32* %208, align 8
  switch i32 %209, label %277 [
    i32 2, label %210
    i32 4, label %216
  ]

210:                                              ; preds = %207
  %211 = icmp eq %struct.TfLiteTensor* %40, null
  %212 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = select i1 %211, i32* null, i32* %213
  %215 = load i32, i32* %214, align 4
  br label %224

216:                                              ; preds = %207
  %217 = icmp eq %struct.TfLiteTensor* %40, null
  %218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1
  %219 = bitcast %union.TfLitePtrUnion* %218 to i64**
  %220 = load i64*, i64** %219, align 8
  %221 = select i1 %217, i64* null, i64* %220
  %222 = load i64, i64* %221, align 8
  %223 = trunc i64 %222 to i32
  br label %224

224:                                              ; preds = %216, %210
  %225 = phi i32 [ %223, %216 ], [ %215, %210 ]
  %226 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %227 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %226, align 8
  %228 = icmp slt i32 %225, 0
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %227, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = add i32 %230, 1
  %232 = select i1 %228, i32 %231, i32 0
  %233 = add i32 %225, %232
  %234 = icmp sgt i32 %233, %230
  br i1 %234, label %235, label %238

235:                                              ; preds = %224
  %236 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %237 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %236, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %237(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #4
  br label %277

238:                                              ; preds = %224
  %239 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %231) #4
  %240 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %239, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %243, label %248

243:                                              ; preds = %238
  %244 = zext i32 %233 to i64
  %245 = sext i32 %233 to i64
  %246 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %239, i64 0, i32 1, i64 %244
  %247 = sext i32 %241 to i64
  br label %252

248:                                              ; preds = %267, %238
  %249 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %250 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %249, align 8
  %251 = tail call i32 %250(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %50, %struct.TfLiteIntArray* %239) #4
  br label %277

252:                                              ; preds = %267, %243
  %253 = phi i64 [ 0, %243 ], [ %268, %267 ]
  %254 = icmp slt i64 %253, %245
  br i1 %254, label %255, label %259

255:                                              ; preds = %252
  %256 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %227, i64 0, i32 1, i64 %253
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %239, i64 0, i32 1, i64 %253
  store i32 %257, i32* %258, align 4
  br label %267

259:                                              ; preds = %252
  %260 = icmp eq i64 %253, %244
  br i1 %260, label %261, label %262

261:                                              ; preds = %259
  store i32 1, i32* %246, align 4
  br label %267

262:                                              ; preds = %259
  %263 = add nsw i64 %253, -1
  %264 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %227, i64 0, i32 1, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %239, i64 0, i32 1, i64 %253
  store i32 %265, i32* %266, align 4
  br label %267

267:                                              ; preds = %262, %261, %255
  %268 = add nuw nsw i64 %253, 1
  %269 = icmp eq i64 %268, %247
  br i1 %269, label %248, label %252

270:                                              ; preds = %49
  %271 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 4
  %272 = load i32, i32* %271, align 8
  %273 = icmp eq i32 %272, 4
  br i1 %273, label %277, label %274

274:                                              ; preds = %270
  store i32 4, i32* %271, align 8
  %275 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 1
  %276 = bitcast %union.TfLitePtrUnion* %275 to i8**
  store i8* null, i8** %276, align 8
  br label %277

277:                                              ; preds = %274, %270, %207, %205, %235, %248, %17, %8
  %278 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %205 ], [ 1, %207 ], [ %251, %248 ], [ 1, %235 ], [ 0, %270 ], [ 0, %274 ]
  ret i32 %278
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin11expand_dims4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %13, %20
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %13 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 4
  br i1 %39, label %40, label %254

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %42 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %190

46:                                               ; preds = %40
  %47 = sext i32 %44 to i64
  %48 = add nsw i64 %47, -1
  %49 = and i64 %47, 7
  %50 = icmp ult i64 %48, 7
  br i1 %50, label %99, label %51

51:                                               ; preds = %46
  %52 = sub nsw i64 %47, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %96, %53 ]
  %55 = phi i64 [ 1, %51 ], [ %95, %53 ]
  %56 = phi i64 [ %52, %51 ], [ %97, %53 ]
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %54
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %55, %59
  %61 = or i64 %54, 1
  %62 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = mul nsw i64 %60, %64
  %66 = or i64 %54, 2
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %65, %69
  %71 = or i64 %54, 3
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %70, %74
  %76 = or i64 %54, 4
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = mul nsw i64 %75, %79
  %81 = or i64 %54, 5
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %80, %84
  %86 = or i64 %54, 6
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %85, %89
  %91 = or i64 %54, 7
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = mul nsw i64 %90, %94
  %96 = add nuw nsw i64 %54, 8
  %97 = add i64 %56, -8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %53

99:                                               ; preds = %53, %46
  %100 = phi i64 [ undef, %46 ], [ %95, %53 ]
  %101 = phi i64 [ 0, %46 ], [ %96, %53 ]
  %102 = phi i64 [ 1, %46 ], [ %95, %53 ]
  %103 = icmp eq i64 %49, 0
  br i1 %103, label %115, label %104

104:                                              ; preds = %99, %104
  %105 = phi i64 [ %112, %104 ], [ %101, %99 ]
  %106 = phi i64 [ %111, %104 ], [ %102, %99 ]
  %107 = phi i64 [ %113, %104 ], [ %49, %99 ]
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %105
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %106, %110
  %112 = add nuw nsw i64 %105, 1
  %113 = add i64 %107, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %104, !llvm.loop !5

115:                                              ; preds = %104, %99
  %116 = phi i64 [ %100, %99 ], [ %111, %104 ]
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %190, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %120 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %119, align 8
  %121 = add nsw i64 %47, -1
  %122 = and i64 %47, 7
  %123 = icmp ult i64 %121, 7
  br i1 %123, label %172, label %124

124:                                              ; preds = %118
  %125 = sub nsw i64 %47, %122
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi i64 [ 0, %124 ], [ %169, %126 ]
  %128 = phi i64 [ 1, %124 ], [ %168, %126 ]
  %129 = phi i64 [ %125, %124 ], [ %170, %126 ]
  %130 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %127
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = mul nsw i64 %128, %132
  %134 = or i64 %127, 1
  %135 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = mul nsw i64 %133, %137
  %139 = or i64 %127, 2
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = mul nsw i64 %138, %142
  %144 = or i64 %127, 3
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %143, %147
  %149 = or i64 %127, 4
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = mul nsw i64 %148, %152
  %154 = or i64 %127, 5
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = mul nsw i64 %153, %157
  %159 = or i64 %127, 6
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = mul nsw i64 %158, %162
  %164 = or i64 %127, 7
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = sext i32 %166 to i64
  %168 = mul nsw i64 %163, %167
  %169 = add nuw nsw i64 %127, 8
  %170 = add i64 %129, -8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %172, label %126

172:                                              ; preds = %126, %118
  %173 = phi i64 [ undef, %118 ], [ %168, %126 ]
  %174 = phi i64 [ 0, %118 ], [ %169, %126 ]
  %175 = phi i64 [ 1, %118 ], [ %168, %126 ]
  %176 = icmp eq i64 %122, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %172, %177
  %178 = phi i64 [ %185, %177 ], [ %174, %172 ]
  %179 = phi i64 [ %184, %177 ], [ %175, %172 ]
  %180 = phi i64 [ %186, %177 ], [ %122, %172 ]
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 %178
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = mul nsw i64 %179, %183
  %185 = add nuw nsw i64 %178, 1
  %186 = add i64 %180, -1
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %177, !llvm.loop !6

188:                                              ; preds = %177, %172
  %189 = phi i64 [ %173, %172 ], [ %184, %177 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %120(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 58, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %189, i32 1) #4
  br label %270

190:                                              ; preds = %115, %40
  %191 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 0
  %192 = load i32, i32* %191, align 8
  switch i32 %192, label %270 [
    i32 2, label %193
    i32 4, label %199
  ]

193:                                              ; preds = %190
  %194 = icmp eq %struct.TfLiteTensor* %36, null
  %195 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %196 = load i32*, i32** %195, align 8
  %197 = select i1 %194, i32* null, i32* %196
  %198 = load i32, i32* %197, align 4
  br label %207

199:                                              ; preds = %190
  %200 = icmp eq %struct.TfLiteTensor* %36, null
  %201 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1
  %202 = bitcast %union.TfLitePtrUnion* %201 to i64**
  %203 = load i64*, i64** %202, align 8
  %204 = select i1 %200, i64* null, i64* %203
  %205 = load i64, i64* %204, align 8
  %206 = trunc i64 %205 to i32
  br label %207

207:                                              ; preds = %199, %193
  %208 = phi i32 [ %198, %193 ], [ %206, %199 ]
  %209 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %210 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %209, align 8
  %211 = icmp slt i32 %208, 0
  %212 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %210, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  %214 = add i32 %213, 1
  %215 = select i1 %211, i32 %214, i32 0
  %216 = add i32 %208, %215
  %217 = icmp sgt i32 %216, %213
  br i1 %217, label %218, label %221

218:                                              ; preds = %207
  %219 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %220 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %219, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %220(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i32 40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #4
  br label %270

221:                                              ; preds = %207
  %222 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %214) #4
  %223 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %222, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %224, 0
  br i1 %225, label %226, label %249

226:                                              ; preds = %221
  %227 = zext i32 %216 to i64
  %228 = sext i32 %216 to i64
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %222, i64 0, i32 1, i64 %227
  %230 = sext i32 %224 to i64
  br label %231

231:                                              ; preds = %246, %226
  %232 = phi i64 [ 0, %226 ], [ %247, %246 ]
  %233 = icmp slt i64 %232, %228
  br i1 %233, label %234, label %238

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %210, i64 0, i32 1, i64 %232
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %222, i64 0, i32 1, i64 %232
  store i32 %236, i32* %237, align 4
  br label %246

238:                                              ; preds = %231
  %239 = icmp eq i64 %232, %227
  br i1 %239, label %240, label %241

240:                                              ; preds = %238
  store i32 1, i32* %229, align 4
  br label %246

241:                                              ; preds = %238
  %242 = add nsw i64 %232, -1
  %243 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %210, i64 0, i32 1, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %222, i64 0, i32 1, i64 %232
  store i32 %244, i32* %245, align 4
  br label %246

246:                                              ; preds = %241, %240, %234
  %247 = add nuw nsw i64 %232, 1
  %248 = icmp eq i64 %247, %230
  br i1 %248, label %249, label %231

249:                                              ; preds = %246, %221
  %250 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %251 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %250, align 8
  %252 = tail call i32 %251(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %26, %struct.TfLiteIntArray* %222) #4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %270

254:                                              ; preds = %249, %35
  %255 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 0
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, 5
  br i1 %257, label %258, label %261

258:                                              ; preds = %254
  %259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 5
  %260 = load i64, i64* %259, align 8
  tail call void @TfLiteTensorRealloc(i64 %260, %struct.TfLiteTensor* %26) #4
  br label %261

261:                                              ; preds = %258, %254
  %262 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %263 = bitcast %union.TfLitePtrUnion* %262 to i8**
  %264 = load i8*, i8** %263, align 8
  %265 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1
  %266 = bitcast %union.TfLitePtrUnion* %265 to i8**
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 5
  %269 = load i64, i64* %268, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %264, i8* align 1 %267, i64 %269, i1 false)
  br label %270

270:                                              ; preds = %249, %218, %188, %190, %261
  %271 = phi i32 [ 0, %261 ], [ 1, %188 ], [ 1, %190 ], [ 1, %218 ], [ %252, %249 ]
  ret i32 %271
}

declare void @TfLiteTensorRealloc(i64, %struct.TfLiteTensor*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin20Register_EXPAND_DIMSEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin20Register_EXPAND_DIMSEvE1r to %struct.TfLiteRegistration*)
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
