; ModuleID = '../../components/sync/engine/events/protocol_event_buffer.cc'
source_filename = "../../components/sync/engine/events/protocol_event_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::ProtocolEventBuffer" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.syncer::ProtocolEvent"* }
%"class.syncer::ProtocolEvent" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::unique_ptr"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN6syncer13ProtocolEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZN6syncer19ProtocolEventBuffer11kBufferSizeE = hidden local_unnamed_addr constant i64 6, align 8
@.str = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN6syncer19ProtocolEventBufferC1Ev = hidden unnamed_addr alias void (%"class.syncer::ProtocolEventBuffer"*), void (%"class.syncer::ProtocolEventBuffer"*)* @_ZN6syncer19ProtocolEventBufferC2Ev
@_ZN6syncer19ProtocolEventBufferD1Ev = hidden unnamed_addr alias void (%"class.syncer::ProtocolEventBuffer"*), void (%"class.syncer::ProtocolEventBuffer"*)* @_ZN6syncer19ProtocolEventBufferD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19ProtocolEventBufferC2Ev(%"class.syncer::ProtocolEventBuffer"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.syncer::ProtocolEventBuffer"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19ProtocolEventBufferD2Ev(%"class.syncer::ProtocolEventBuffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %2, i64 %4, i64 %6) #12
  %7 = bitcast %"class.syncer::ProtocolEventBuffer"* %0 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @free(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer19ProtocolEventBuffer19RecordProtocolEventERKNS_13ProtocolEventE(%"class.syncer::ProtocolEventBuffer"*, %"class.syncer::ProtocolEvent"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0
  %4 = bitcast %"class.syncer::ProtocolEvent"* %1 to %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)***
  %5 = load %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)**, %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)*, %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)** %5, i64 2
  %7 = load %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)*, %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)** %6, align 8
  %8 = tail call %"class.syncer::ProtocolEvent"* %7(%"class.syncer::ProtocolEvent"* %1) #12
  %9 = ptrtoint %"class.syncer::ProtocolEvent"* %8 to i64
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %3, i64 1) #12
  %10 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %12) #12
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %9, i64* %14, align 8
  %15 = load i64, i64* %11, align 8
  %16 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -1
  %19 = icmp eq i64 %15, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  store i64 0, i64* %11, align 8
  br label %24

21:                                               ; preds = %2
  %22 = add i64 %15, 1
  store i64 %22, i64* %11, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21, %20
  br label %25

25:                                               ; preds = %24, %21
  %26 = phi i64 [ %18, %24 ], [ %15, %21 ]
  %27 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %26) #12
  %28 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %0, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %11, align 8
  %31 = icmp ult i64 %30, %29
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  %33 = sub i64 %30, %29
  br label %38

34:                                               ; preds = %25
  %35 = load i64, i64* %16, align 8
  %36 = sub i64 %30, %29
  %37 = add i64 %36, %35
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64 [ %33, %32 ], [ %37, %34 ]
  %40 = icmp ugt i64 %39, 6
  br i1 %40, label %41, label %51

41:                                               ; preds = %38
  %42 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %29) #12
  %43 = load i64, i64* %28, align 8
  %44 = add i64 %43, 1
  %45 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %44) #12
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %10, %"class.std::__1::unique_ptr"* %42, %"class.std::__1::unique_ptr"* %45) #12
  %46 = load i64, i64* %28, align 8
  %47 = add i64 %46, 1
  %48 = load i64, i64* %16, align 8
  %49 = icmp eq i64 %47, %48
  %50 = select i1 %49, i64 0, i64 %47
  store i64 %50, i64* %28, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %3) #12
  br label %51

51:                                               ; preds = %41, %38
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6syncer19ProtocolEventBuffer25GetBufferedProtocolEventsEv(%"class.std::__1::vector"* noalias sret, %"class.syncer::ProtocolEventBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %1, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %1, i64 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %1, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %4 to i64*
  %17 = getelementptr inbounds %"class.syncer::ProtocolEventBuffer", %"class.syncer::ProtocolEventBuffer"* %1, i64 0, i32 0, i32 0, i32 1
  br label %19

18:                                               ; preds = %46, %2
  ret void

19:                                               ; preds = %12, %46
  %20 = phi i64 [ %8, %12 ], [ %50, %46 ]
  %21 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %20) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %22, align 8
  %24 = bitcast %"class.syncer::ProtocolEvent"* %23 to %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)***
  %25 = load %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)**, %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)*, %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)** %25, i64 2
  %27 = load %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)*, %"class.syncer::ProtocolEvent"* (%"class.syncer::ProtocolEvent"*)** %26, align 8
  %28 = call %"class.syncer::ProtocolEvent"* %27(%"class.syncer::ProtocolEvent"* %23) #12
  store %"class.syncer::ProtocolEvent"* %28, %"class.syncer::ProtocolEvent"** %15, align 8
  %29 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %31 = icmp ult %"class.std::__1::unique_ptr"* %29, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %19
  %33 = ptrtoint %"class.syncer::ProtocolEvent"* %28 to i64
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %15, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr"* %35 to i64
  store i64 %36, i64* %16, align 8
  br label %38

37:                                               ; preds = %19
  call void @_ZNSt3__16vectorINS_10unique_ptrIN6syncer13ProtocolEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #12
  br label %38

38:                                               ; preds = %32, %37
  %39 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %15, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %15, align 8
  %40 = icmp eq %"class.syncer::ProtocolEvent"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.syncer::ProtocolEvent"* %39 to void (%"class.syncer::ProtocolEvent"*)***
  %43 = load void (%"class.syncer::ProtocolEvent"*)**, void (%"class.syncer::ProtocolEvent"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %43, i64 1
  %45 = load void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %44, align 8
  call void %45(%"class.syncer::ProtocolEvent"* nonnull %39) #12
  br label %46

46:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %47 = add i64 %20, 1
  %48 = load i64, i64* %17, align 8
  %49 = icmp eq i64 %47, %48
  %50 = select i1 %49, i64 0, i64 %47
  %51 = icmp eq i64 %50, %10
  br i1 %51, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %8, %"class.std::__1::unique_ptr"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %15, %"class.std::__1::unique_ptr"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %5, align 8
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #12
  %17 = bitcast %"class.std::__1::unique_ptr"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %16, i8* %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #12
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %25, %39
  %30 = phi %"class.std::__1::unique_ptr"* [ %41, %39 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %31, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %31, align 8
  %33 = icmp eq %"class.syncer::ProtocolEvent"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.syncer::ProtocolEvent"* %32 to void (%"class.syncer::ProtocolEvent"*)***
  %36 = load void (%"class.syncer::ProtocolEvent"*)**, void (%"class.syncer::ProtocolEvent"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %36, i64 1
  %38 = load void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %37, align 8
  call void %38(%"class.syncer::ProtocolEvent"* nonnull %32) #12
  br label %39

39:                                               ; preds = %29, %34
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  store %"class.std::__1::unique_ptr"* %41, %"class.std::__1::unique_ptr"** %5, align 8
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %43 = icmp eq %"class.std::__1::unique_ptr"* %41, %42
  br i1 %43, label %44, label %29

44:                                               ; preds = %39, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #12
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #12
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #12
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #12
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #12
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #12
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #12
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #12
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %58

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %19 = icmp ult %"class.std::__1::unique_ptr"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.std::__1::unique_ptr"* %17 to i64
  %22 = ptrtoint %"class.std::__1::unique_ptr"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #12
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #12
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #12
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.std::__1::unique_ptr"* %14, %15
  br i1 %37, label %56, label %38

38:                                               ; preds = %36, %52
  %39 = phi %"class.std::__1::unique_ptr"* [ %54, %52 ], [ %17, %36 ]
  %40 = phi %"class.std::__1::unique_ptr"* [ %53, %52 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %41, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %41, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %41, align 8
  %46 = icmp eq %"class.syncer::ProtocolEvent"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.syncer::ProtocolEvent"* %45 to void (%"class.syncer::ProtocolEvent"*)***
  %49 = load void (%"class.syncer::ProtocolEvent"*)**, void (%"class.syncer::ProtocolEvent"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %49, i64 1
  %51 = load void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %50, align 8
  call void %51(%"class.syncer::ProtocolEvent"* nonnull %45) #12
  br label %52

52:                                               ; preds = %47, %38
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr"* %53, %15
  br i1 %55, label %56, label %38

56:                                               ; preds = %52, %36
  %57 = sub i64 %2, %1
  br label %148

58:                                               ; preds = %6
  %59 = icmp ult i64 %2, %1
  br i1 %59, label %60, label %148

60:                                               ; preds = %58
  %61 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %62 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %63 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %64 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %63, align 8
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %61 to i64
  %66 = icmp ult %"class.std::__1::unique_ptr"* %64, %62
  br i1 %66, label %67, label %83

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr"* %62 to i64
  %70 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %69, i64 %65) #12
  %71 = extractvalue { i64, i1 } %70, 1
  %72 = extractvalue { i64, i1 } %70, 0
  %73 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %68, i64 %72) #12
  %74 = extractvalue { i64, i1 } %73, 1
  %75 = or i1 %71, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %67
  tail call void @llvm.trap() #12
  unreachable

77:                                               ; preds = %67
  %78 = extractvalue { i64, i1 } %73, 0
  %79 = icmp ugt i64 %78, %65
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #12
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  br label %83

83:                                               ; preds = %80, %77, %60
  %84 = icmp eq %"class.std::__1::unique_ptr"* %61, %62
  br i1 %84, label %103, label %85

85:                                               ; preds = %83, %99
  %86 = phi %"class.std::__1::unique_ptr"* [ %101, %99 ], [ %64, %83 ]
  %87 = phi %"class.std::__1::unique_ptr"* [ %100, %99 ], [ %61, %83 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %88, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %88, align 8
  %93 = icmp eq %"class.syncer::ProtocolEvent"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %85
  %95 = bitcast %"class.syncer::ProtocolEvent"* %92 to void (%"class.syncer::ProtocolEvent"*)***
  %96 = load void (%"class.syncer::ProtocolEvent"*)**, void (%"class.syncer::ProtocolEvent"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %96, i64 1
  %98 = load void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %97, align 8
  call void %98(%"class.syncer::ProtocolEvent"* nonnull %92) #12
  br label %99

99:                                               ; preds = %94, %85
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr"* %100, %62
  br i1 %102, label %103, label %85

103:                                              ; preds = %99, %83
  %104 = sub i64 %11, %1
  %105 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %106 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %107 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %104)
  %108 = ptrtoint %"class.std::__1::unique_ptr"* %105 to i64
  %109 = icmp ult %"class.std::__1::unique_ptr"* %107, %106
  br i1 %109, label %110, label %126

110:                                              ; preds = %103
  %111 = ptrtoint %"class.std::__1::unique_ptr"* %107 to i64
  %112 = ptrtoint %"class.std::__1::unique_ptr"* %106 to i64
  %113 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %112, i64 %108) #12
  %114 = extractvalue { i64, i1 } %113, 1
  %115 = extractvalue { i64, i1 } %113, 0
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %111, i64 %115) #12
  %117 = extractvalue { i64, i1 } %116, 1
  %118 = or i1 %114, %117
  br i1 %118, label %119, label %120, !prof !2

119:                                              ; preds = %110
  call void @llvm.trap() #12
  unreachable

120:                                              ; preds = %110
  %121 = extractvalue { i64, i1 } %116, 0
  %122 = icmp ugt i64 %121, %108
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #12
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #12
  br label %126

126:                                              ; preds = %123, %120, %103
  %127 = icmp eq %"class.std::__1::unique_ptr"* %105, %106
  br i1 %127, label %146, label %128

128:                                              ; preds = %126, %142
  %129 = phi %"class.std::__1::unique_ptr"* [ %144, %142 ], [ %107, %126 ]
  %130 = phi %"class.std::__1::unique_ptr"* [ %143, %142 ], [ %105, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %131, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  store i64 %133, i64* %134, align 8
  %135 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %131, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %131, align 8
  %136 = icmp eq %"class.syncer::ProtocolEvent"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %128
  %138 = bitcast %"class.syncer::ProtocolEvent"* %135 to void (%"class.syncer::ProtocolEvent"*)***
  %139 = load void (%"class.syncer::ProtocolEvent"*)**, void (%"class.syncer::ProtocolEvent"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %139, i64 1
  %141 = load void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %140, align 8
  call void %141(%"class.syncer::ProtocolEvent"* nonnull %135) #12
  br label %142

142:                                              ; preds = %137, %128
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 1
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 1
  %145 = icmp eq %"class.std::__1::unique_ptr"* %143, %106
  br i1 %145, label %146, label %128

146:                                              ; preds = %142, %126
  %147 = add i64 %104, %2
  br label %148

148:                                              ; preds = %58, %146, %56
  %149 = phi i64 [ %147, %146 ], [ %57, %56 ], [ 0, %58 ]
  store i64 %149, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #12
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #12
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #12
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6syncer13ProtocolEventENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #12
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #12
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #12
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6syncer13ProtocolEventENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN6syncer13ProtocolEventENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.syncer::ProtocolEvent"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !3

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.syncer::ProtocolEvent"*, %"class.syncer::ProtocolEvent"** %142, align 8
  store %"class.syncer::ProtocolEvent"* null, %"class.syncer::ProtocolEvent"** %142, align 8
  %144 = icmp eq %"class.syncer::ProtocolEvent"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.syncer::ProtocolEvent"* %143 to void (%"class.syncer::ProtocolEvent"*)***
  %147 = load void (%"class.syncer::ProtocolEvent"*)**, void (%"class.syncer::ProtocolEvent"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %147, i64 1
  %149 = load void (%"class.syncer::ProtocolEvent"*)*, void (%"class.syncer::ProtocolEvent"*)** %148, align 8
  tail call void %149(%"class.syncer::ProtocolEvent"* nonnull %143) #12
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
