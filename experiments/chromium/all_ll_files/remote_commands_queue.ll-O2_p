; ModuleID = '../../components/policy/core/common/remote_commands/remote_commands_queue.cc'
source_filename = "../../components/policy/core/common/remote_commands/remote_commands_queue.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.policy::RemoteCommandsQueue" = type { %"class.std::__1::queue", %"class.std::__1::unique_ptr", %"class.base::Clock"*, %"class.base::TickClock"*, %"class.base::OneShotTimer", %"class.base::ObserverList" }
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.policy::RemoteCommandJob"* }
%"class.policy::RemoteCommandJob" = type { i32 (...)**, i32, i64, %"class.base::TimeTicks", %"class.base::Time", %"class.absl::optional", %"class.std::__1::unique_ptr.6", %"class.base::OnceCallback", %"class.base::ThreadChecker", %"class.base::WeakPtrFactory" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.0" }
%"class.base::time_internal::TimeBase.0" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"class.enterprise_management::SignedData" }
%"class.enterprise_management::SignedData" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i32, [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.policy::RemoteCommandJob::ResultPayload"* }
%"class.policy::RemoteCommandJob::ResultPayload" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.11", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"class.base::Clock" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.20, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.22" }
%class.scoped_refptr.20 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21" }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory.22" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.23" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::DefaultClock" = type { %"class.base::Clock" }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.policy::RemoteCommandsQueue::Observer" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_ = comdat any

$_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_ = comdat any

$_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [16 x i8] c"ScheduleNextJob\00", align 1
@.str.1 = private unnamed_addr constant [77 x i8] c"../../components/policy/core/common/remote_commands/remote_commands_queue.cc\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN6policy19RemoteCommandsQueueC1Ev = hidden unnamed_addr alias void (%"class.policy::RemoteCommandsQueue"*), void (%"class.policy::RemoteCommandsQueue"*)* @_ZN6policy19RemoteCommandsQueueC2Ev
@_ZN6policy19RemoteCommandsQueueD1Ev = hidden unnamed_addr alias void (%"class.policy::RemoteCommandsQueue"*), void (%"class.policy::RemoteCommandsQueue"*)* @_ZN6policy19RemoteCommandsQueueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueueC2Ev(%"class.policy::RemoteCommandsQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 2
  %3 = bitcast %"class.policy::RemoteCommandsQueue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  %4 = tail call %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() #13
  %5 = getelementptr inbounds %"class.base::DefaultClock", %"class.base::DefaultClock"* %4, i64 0, i32 0
  store %"class.base::Clock"* %5, %"class.base::Clock"** %2, align 8
  %6 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 3
  %7 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #13
  %8 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %7, i64 0, i32 0
  store %"class.base::TickClock"* %8, %"class.base::TickClock"** %6, align 8
  %9 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 4
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %9) #13
  %10 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5
  %11 = bitcast %"class.base::ObserverList"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #13
  %12 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %12, %"class.base::internal::LinkNodeBase"* %12, %"class.base::internal::LinkNodeBase"* %12) #13
  %13 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 2
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %14, align 8
  ret void
}

declare %"class.base::DefaultClock"* @_ZN4base12DefaultClock11GetInstanceEv() local_unnamed_addr #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueueD2Ev(%"class.policy::RemoteCommandsQueue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %11

11:                                               ; preds = %7, %11
  %12 = phi i64 [ %3, %7 ], [ %22, %11 ]
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %12) #13
  %14 = load i64, i64* %2, align 8
  %15 = add i64 %14, 1
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %15) #13
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %9, %"class.std::__1::unique_ptr"* %13, %"class.std::__1::unique_ptr"* %16) #13
  %17 = load i64, i64* %2, align 8
  %18 = add i64 %17, 1
  %19 = load i64, i64* %10, align 8
  %20 = icmp eq i64 %18, %19
  %21 = select i1 %20, i64 0, i64 %18
  store i64 %21, i64* %2, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %8) #13
  %22 = load i64, i64* %2, align 8
  %23 = load i64, i64* %4, align 8
  %24 = icmp eq i64 %22, %23
  br i1 %24, label %25, label %11

25:                                               ; preds = %11, %1
  %26 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %26, align 8
  %28 = icmp eq %"class.policy::RemoteCommandJob"* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  tail call void @_ZN6policy16RemoteCommandJob9TerminateEv(%"class.policy::RemoteCommandJob"* nonnull %27) #13
  br label %30

30:                                               ; preds = %25, %29
  %31 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %32 = bitcast %"class.base::internal::LinkNodeBase"** %31 to %"class.base::LinkNode"**
  %33 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0
  %34 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %32, align 8
  %35 = icmp eq %"class.base::LinkNode"* %34, %33
  br i1 %35, label %48, label %36

36:                                               ; preds = %30, %45
  %37 = phi %"class.base::LinkNode"* [ %46, %45 ], [ %34, %30 ]
  %38 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %37, i64 1
  %39 = bitcast %"class.base::LinkNode"* %38 to %"class.base::ObserverList"**
  %40 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %39, align 8
  %41 = icmp eq %"class.base::ObserverList"* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %39, align 8
  %43 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %37, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %43) #13
  %44 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %32, align 8
  br label %45

45:                                               ; preds = %42, %36
  %46 = phi %"class.base::LinkNode"* [ %37, %36 ], [ %44, %42 ]
  %47 = icmp eq %"class.base::LinkNode"* %46, %33
  br i1 %47, label %48, label %36

48:                                               ; preds = %45, %30
  %49 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %50 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %51 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %52 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %51, align 8
  %53 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %50, %52
  br i1 %53, label %62, label %54

54:                                               ; preds = %48, %59
  %55 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %60, %59 ], [ %50, %48 ]
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 1
  %61 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %60, %52
  br i1 %61, label %126, label %54

62:                                               ; preds = %54, %48
  %63 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %50, %48 ], [ %55, %54 ]
  %64 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %63 to i64
  %65 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %63, %52
  br i1 %65, label %126, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %63, i64 1
  %68 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %67, %52
  br i1 %68, label %121, label %69

69:                                               ; preds = %66
  %70 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %52, i64 -2, i32 0
  %71 = ptrtoint i8** %70 to i64
  %72 = sub i64 %71, %64
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %69, %90
  %78 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %92, %90 ], [ %67, %69 ]
  %79 = phi i64 [ %91, %90 ], [ %64, %69 ]
  %80 = phi i64 [ %93, %90 ], [ %75, %69 ]
  %81 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %78, i64 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %77
  %85 = ptrtoint i8* %82 to i64
  %86 = inttoptr i64 %79 to %"class.base::internal::UncheckedObserverAdapter"*
  %87 = inttoptr i64 %79 to i64*
  store i64 %85, i64* %87, align 8
  %88 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %86, i64 1
  %89 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %88 to i64
  br label %90

90:                                               ; preds = %84, %77
  %91 = phi i64 [ %79, %77 ], [ %89, %84 ]
  %92 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %78, i64 1
  %93 = add i64 %80, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %77, !llvm.loop !2

95:                                               ; preds = %90, %69
  %96 = phi i64 [ undef, %69 ], [ %91, %90 ]
  %97 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %67, %69 ], [ %92, %90 ]
  %98 = phi i64 [ %64, %69 ], [ %91, %90 ]
  %99 = icmp ult i64 %72, 24
  br i1 %99, label %117, label %100

100:                                              ; preds = %95, %176
  %101 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %178, %176 ], [ %97, %95 ]
  %102 = phi i64 [ %177, %176 ], [ %98, %95 ]
  %103 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = icmp eq i8* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %100
  %107 = ptrtoint i8* %104 to i64
  %108 = inttoptr i64 %102 to %"class.base::internal::UncheckedObserverAdapter"*
  %109 = inttoptr i64 %102 to i64*
  store i64 %107, i64* %109, align 8
  %110 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %108, i64 1
  %111 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %110 to i64
  br label %112

112:                                              ; preds = %106, %100
  %113 = phi i64 [ %102, %100 ], [ %111, %106 ]
  %114 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 1, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = icmp eq i8* %115, null
  br i1 %116, label %154, label %148

117:                                              ; preds = %176, %95
  %118 = phi i64 [ %96, %95 ], [ %177, %176 ]
  %119 = inttoptr i64 %118 to %"class.base::internal::UncheckedObserverAdapter"*
  %120 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %51, align 8
  br label %121

121:                                              ; preds = %117, %66
  %122 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %52, %66 ], [ %120, %117 ]
  %123 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %63, %66 ], [ %119, %117 ]
  %124 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %123, %122
  br i1 %124, label %126, label %125

125:                                              ; preds = %121
  store %"class.base::internal::UncheckedObserverAdapter"* %123, %"class.base::internal::UncheckedObserverAdapter"** %51, align 8
  br label %126

126:                                              ; preds = %59, %125, %121, %62
  %127 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %49, align 8
  %128 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %127, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %126
  %130 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %127 to i64
  %131 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %51 to i64*
  store i64 %130, i64* %131, align 8
  %132 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %127 to i8*
  tail call void @_ZdlPv(i8* %132) #14
  br label %133

133:                                              ; preds = %126, %129
  %134 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 4
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %134) #13
  %135 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %26, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %26, align 8
  %136 = icmp eq %"class.policy::RemoteCommandJob"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.policy::RemoteCommandJob"* %135 to void (%"class.policy::RemoteCommandJob"*)***
  %139 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %139, i64 1
  %141 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %140, align 8
  tail call void %141(%"class.policy::RemoteCommandJob"* nonnull %135) #13
  br label %142

142:                                              ; preds = %133, %137
  %143 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0
  %144 = load i64, i64* %2, align 8
  %145 = load i64, i64* %4, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"* %143, i64 %144, i64 %145) #13
  %146 = bitcast %"class.policy::RemoteCommandsQueue"* %0 to i8**
  %147 = load i8*, i8** %146, align 8
  tail call void @free(i8* %147) #13
  ret void

148:                                              ; preds = %112
  %149 = ptrtoint i8* %115 to i64
  %150 = inttoptr i64 %113 to %"class.base::internal::UncheckedObserverAdapter"*
  %151 = inttoptr i64 %113 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %150, i64 1
  %153 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %152 to i64
  br label %154

154:                                              ; preds = %148, %112
  %155 = phi i64 [ %113, %112 ], [ %153, %148 ]
  %156 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 2, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %154
  %160 = ptrtoint i8* %157 to i64
  %161 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %162 = inttoptr i64 %155 to i64*
  store i64 %160, i64* %162, align 8
  %163 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %161, i64 1
  %164 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %163 to i64
  br label %165

165:                                              ; preds = %159, %154
  %166 = phi i64 [ %155, %154 ], [ %164, %159 ]
  %167 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 3, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = icmp eq i8* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %165
  %171 = ptrtoint i8* %168 to i64
  %172 = inttoptr i64 %166 to %"class.base::internal::UncheckedObserverAdapter"*
  %173 = inttoptr i64 %166 to i64*
  store i64 %171, i64* %173, align 8
  %174 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %172, i64 1
  %175 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %174 to i64
  br label %176

176:                                              ; preds = %170, %165
  %177 = phi i64 [ %166, %165 ], [ %175, %170 ]
  %178 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %101, i64 4
  %179 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %178, %52
  br i1 %179, label %117, label %100
}

declare void @_ZN6policy16RemoteCommandJob9TerminateEv(%"class.policy::RemoteCommandJob"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueue11AddObserverEPNS0_8ObserverE(%"class.policy::RemoteCommandsQueue"*, %"class.policy::RemoteCommandsQueue::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5
  %4 = icmp eq %"class.policy::RemoteCommandsQueue::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.policy::RemoteCommandsQueue::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.policy::RemoteCommandsQueue::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #15
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #15
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #14
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #13
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #14
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueue14RemoveObserverEPNS0_8ObserverE(%"class.policy::RemoteCommandsQueue"*, %"class.policy::RemoteCommandsQueue::Observer"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.policy::RemoteCommandsQueue::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueue6AddJobENSt3__110unique_ptrINS_16RemoteCommandJobENS1_14default_deleteIS3_EEEE(%"class.policy::RemoteCommandsQueue"*, %"class.policy::RemoteCommandJob"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.policy::RemoteCommandJob"* %1 to i64
  %4 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %4, i64 1) #13
  %5 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %7) #13
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %3, i64* %9, align 8
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -1
  %14 = icmp eq i64 %10, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  store i64 0, i64* %6, align 8
  br label %19

16:                                               ; preds = %2
  %17 = add i64 %10, 1
  store i64 %17, i64* %6, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16, %15
  br label %20

20:                                               ; preds = %16, %19
  %21 = phi i64 [ %13, %19 ], [ %10, %16 ]
  %22 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %5, i64 %21) #13
  %23 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %23, align 8
  %25 = icmp eq %"class.policy::RemoteCommandJob"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  tail call void @_ZN6policy19RemoteCommandsQueue15ScheduleNextJobEv(%"class.policy::RemoteCommandsQueue"* %0)
  br label %27

27:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueue15ScheduleNextJobEv(%"class.policy::RemoteCommandsQueue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = alloca %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %7 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %422, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %8) #13
  %15 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %16, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %18, i64* %21, align 8
  %22 = icmp eq %"class.policy::RemoteCommandJob"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %12
  %24 = bitcast %"class.policy::RemoteCommandJob"* %20 to void (%"class.policy::RemoteCommandJob"*)***
  %25 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %25, i64 1
  %27 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %26, align 8
  tail call void %27(%"class.policy::RemoteCommandJob"* nonnull %20) #13
  br label %28

28:                                               ; preds = %12, %23
  %29 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0
  %30 = load i64, i64* %7, align 8
  %31 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %30) #13
  %32 = load i64, i64* %7, align 8
  %33 = add i64 %32, 1
  %34 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %13, i64 %33) #13
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %13, %"class.std::__1::unique_ptr"* %31, %"class.std::__1::unique_ptr"* %34) #13
  %35 = load i64, i64* %7, align 8
  %36 = add i64 %35, 1
  %37 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %36, %38
  %40 = select i1 %39, i64 0, i64 %36
  store i64 %40, i64* %7, align 8
  tail call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %29) #13
  %41 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 4
  %42 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1, i64 0, i64 0), i32 86) #13
  %43 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %19, align 8
  %44 = bitcast %"class.policy::RemoteCommandJob"* %43 to i64 (%"class.policy::RemoteCommandJob"*)***
  %45 = load i64 (%"class.policy::RemoteCommandJob"*)**, i64 (%"class.policy::RemoteCommandJob"*)*** %44, align 8
  %46 = getelementptr inbounds i64 (%"class.policy::RemoteCommandJob"*)*, i64 (%"class.policy::RemoteCommandJob"*)** %45, i64 3
  %47 = load i64 (%"class.policy::RemoteCommandJob"*)*, i64 (%"class.policy::RemoteCommandJob"*)** %46, align 8
  %48 = call i64 %47(%"class.policy::RemoteCommandJob"* %43) #13
  %49 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = ptrtoint %"class.policy::RemoteCommandsQueue"* %0 to i64
  %51 = call i8* @_Znwm(i64 56) #14, !noalias !4
  %52 = bitcast i8* %51 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %52, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !4
  %53 = getelementptr inbounds i8, i8* %51, i64 32
  %54 = bitcast i8* %53 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.policy::RemoteCommandsQueue"*)* @_ZN6policy19RemoteCommandsQueue16OnCommandTimeoutEv to i64), i64 0>, <2 x i64>* %54, align 8, !noalias !4
  %55 = getelementptr inbounds i8, i8* %51, i64 48
  %56 = bitcast i8* %55 to i64*
  store i64 %50, i64* %56, align 8, !noalias !4
  %57 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %51, i8** %57, align 8, !alias.scope !4
  %58 = bitcast %"class.base::OneShotTimer"* %41 to void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)***
  %59 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)**, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %59, i64 7
  %61 = load void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)*, void (%"class.base::OneShotTimer"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)** %60, align 8
  call void %61(%"class.base::OneShotTimer"* %41, %"class.base::Location"* nonnull dereferenceable(32) %3, i64 %48, %"class.base::OnceCallback"* nonnull %2) #13
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  %63 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %19, align 8
  %64 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 2
  %65 = load %"class.base::Clock"*, %"class.base::Clock"** %64, align 8
  %66 = bitcast %"class.base::Clock"* %65 to i64 (%"class.base::Clock"*)***
  %67 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %66, align 8
  %68 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %67, i64 2
  %69 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %68, align 8
  %70 = call i64 %69(%"class.base::Clock"* %65) #13
  %71 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 3
  %72 = load %"class.base::TickClock"*, %"class.base::TickClock"** %71, align 8
  %73 = bitcast %"class.base::TickClock"* %72 to i64 (%"class.base::TickClock"*)***
  %74 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %73, align 8
  %75 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %74, i64 2
  %76 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %75, align 8
  %77 = call i64 %76(%"class.base::TickClock"* %72) #13
  %78 = call i8* @_Znwm(i64 56) #14, !noalias !9
  %79 = bitcast i8* %78 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %79, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !9
  %80 = getelementptr inbounds i8, i8* %78, i64 32
  %81 = bitcast i8* %80 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.policy::RemoteCommandsQueue"*)* @_ZN6policy19RemoteCommandsQueue18CurrentJobFinishedEv to i64), i64 0>, <2 x i64>* %81, align 8, !noalias !9
  %82 = getelementptr inbounds i8, i8* %78, i64 48
  %83 = bitcast i8* %82 to i64*
  store i64 %50, i64* %83, align 8, !noalias !9
  %84 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %78, i8** %84, align 8, !alias.scope !9
  %85 = call zeroext i1 @_ZN6policy16RemoteCommandJob3RunEN4base4TimeENS1_9TimeTicksENS1_12OnceCallbackIFvvEEE(%"class.policy::RemoteCommandJob"* %63, i64 %70, i64 %77, %"class.base::OnceCallback"* nonnull %4) #13
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %86) #13
  br i1 %85, label %87, label %421

87:                                               ; preds = %28
  %88 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5
  %89 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %92 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %93 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 40, i1 false)
  %95 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %93, align 8, !noalias !14
  %96 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %97 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %96, align 8, !noalias !14
  %98 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, %97
  %99 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %99) #13
  br i1 %98, label %100, label %102

100:                                              ; preds = %87
  %101 = bitcast %"class.base::ObserverList"** %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #13, !alias.scope !14
  br label %142

102:                                              ; preds = %87
  store %"class.base::ObserverList"* %88, %"class.base::ObserverList"** %90, align 8
  %103 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %99, %"class.base::internal::LinkNodeBase"* %103) #13
  store i64 0, i64* %91, align 8
  %104 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 3
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %96 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.base::ObserverList"* %88 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 %109, %111
  %113 = ashr exact i64 %112, 3
  br label %114

114:                                              ; preds = %107, %102
  %115 = phi i64 [ %113, %107 ], [ -1, %102 ]
  store i64 %115, i64* %92, align 8
  %116 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %118 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::ObserverList"* %116 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %119, %121
  %123 = ashr exact i64 %122, 3
  %124 = icmp ult i64 %123, %115
  %125 = select i1 %124, i64 %123, i64 %115
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %142, label %127

127:                                              ; preds = %114
  %128 = inttoptr i64 %121 to %"class.base::internal::UncheckedObserverAdapter"*
  %129 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = icmp eq i8* %131, null
  br i1 %132, label %133, label %142

133:                                              ; preds = %127, %137
  %134 = phi i64 [ %135, %137 ], [ 0, %127 ]
  %135 = add nuw i64 %134, 1
  store i64 %135, i64* %91, align 8
  %136 = icmp ult i64 %135, %125
  br i1 %136, label %137, label %142

137:                                              ; preds = %133
  %138 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %129, align 8
  %139 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %138, i64 %135, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = icmp eq i8* %140, null
  br i1 %141, label %133, label %142

142:                                              ; preds = %137, %133, %127, %114, %100
  %143 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %143) #13
  %144 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 1
  %146 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 2
  %147 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %147) #13
  %149 = bitcast %"class.base::ObserverList"** %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 24, i1 false) #13, !alias.scope !17
  %150 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  br label %151

151:                                              ; preds = %391, %142
  %152 = phi %"class.base::ObserverList"* [ %150, %142 ], [ %389, %391 ]
  %153 = icmp eq %"class.base::ObserverList"* %152, null
  br i1 %153, label %169, label %154

154:                                              ; preds = %151
  %155 = load i64, i64* %91, align 8
  %156 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %152, i64 0, i32 0, i32 0, i32 1
  %157 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.base::ObserverList"* %152 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = sub i64 %158, %160
  %162 = ashr exact i64 %161, 3
  %163 = load i64, i64* %92, align 8
  %164 = icmp ult i64 %162, %163
  %165 = select i1 %164, i64 %162, i64 %163
  %166 = icmp eq i64 %155, %165
  br i1 %166, label %169, label %167

167:                                              ; preds = %154
  %168 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %144, align 8
  br label %185

169:                                              ; preds = %154, %151
  %170 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %144, align 8
  %171 = icmp eq %"class.base::ObserverList"* %170, null
  br i1 %171, label %285, label %172

172:                                              ; preds = %169
  %173 = load i64, i64* %145, align 8
  %174 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %170, i64 0, i32 0, i32 0, i32 1
  %175 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.base::ObserverList"* %170 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = sub i64 %176, %178
  %180 = ashr exact i64 %179, 3
  %181 = load i64, i64* %146, align 8
  %182 = icmp ult i64 %180, %181
  %183 = select i1 %182, i64 %180, i64 %181
  %184 = icmp eq i64 %173, %183
  br i1 %184, label %194, label %185

185:                                              ; preds = %172, %167
  %186 = phi %"class.base::ObserverList"* [ %168, %167 ], [ %170, %172 ]
  %187 = icmp eq %"class.base::ObserverList"* %152, %186
  %188 = load i64, i64* %91, align 8
  %189 = load i64, i64* %145, align 8
  %190 = icmp eq i64 %188, %189
  %191 = and i1 %187, %190
  br i1 %191, label %192, label %379

192:                                              ; preds = %185
  %193 = icmp eq %"class.base::ObserverList"* %152, null
  br i1 %193, label %285, label %194

194:                                              ; preds = %172, %192
  %195 = phi %"class.base::ObserverList"* [ %152, %192 ], [ %170, %172 ]
  %196 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 1
  %197 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 1, i32 0, i32 0, i32 1
  %198 = bitcast %"class.base::internal::LinkNodeBase"** %197 to %"class.base::LinkNode"**
  %199 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %198, align 8
  %200 = bitcast %"class.base::LinkedList"* %196 to %"class.base::LinkNode"**
  %201 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %200, align 8
  %202 = icmp eq %"class.base::LinkNode"* %199, %201
  br i1 %202, label %203, label %281

203:                                              ; preds = %194
  %204 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 0, i32 0, i32 0
  %205 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %204, align 8
  %206 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %195, i64 0, i32 0, i32 0, i32 1
  %207 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %206, align 8
  %208 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %205, %207
  br i1 %208, label %217, label %209

209:                                              ; preds = %203, %214
  %210 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %215, %214 ], [ %205, %203 ]
  %211 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %210, i64 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %217, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %210, i64 1
  %216 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %215, %207
  br i1 %216, label %281, label %209

217:                                              ; preds = %209, %203
  %218 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %205, %203 ], [ %210, %209 ]
  %219 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %218 to i64
  %220 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %218, %207
  br i1 %220, label %281, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 1
  %223 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %222, %207
  br i1 %223, label %276, label %224

224:                                              ; preds = %221
  %225 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %207, i64 -2, i32 0
  %226 = ptrtoint i8** %225 to i64
  %227 = sub i64 %226, %219
  %228 = lshr i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %250, label %232

232:                                              ; preds = %224, %245
  %233 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %247, %245 ], [ %222, %224 ]
  %234 = phi i64 [ %246, %245 ], [ %219, %224 ]
  %235 = phi i64 [ %248, %245 ], [ %230, %224 ]
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 0, i32 0
  %237 = load i8*, i8** %236, align 8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %245, label %239

239:                                              ; preds = %232
  %240 = ptrtoint i8* %237 to i64
  %241 = inttoptr i64 %234 to %"class.base::internal::UncheckedObserverAdapter"*
  %242 = inttoptr i64 %234 to i64*
  store i64 %240, i64* %242, align 8
  %243 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %241, i64 1
  %244 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %243 to i64
  br label %245

245:                                              ; preds = %239, %232
  %246 = phi i64 [ %234, %232 ], [ %244, %239 ]
  %247 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %233, i64 1
  %248 = add i64 %235, -1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %232, !llvm.loop !20

250:                                              ; preds = %245, %224
  %251 = phi i64 [ undef, %224 ], [ %246, %245 ]
  %252 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %222, %224 ], [ %247, %245 ]
  %253 = phi i64 [ %219, %224 ], [ %246, %245 ]
  %254 = icmp ult i64 %227, 24
  br i1 %254, label %272, label %255

255:                                              ; preds = %250, %483
  %256 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %485, %483 ], [ %252, %250 ]
  %257 = phi i64 [ %484, %483 ], [ %253, %250 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %255
  %262 = ptrtoint i8* %259 to i64
  %263 = inttoptr i64 %257 to %"class.base::internal::UncheckedObserverAdapter"*
  %264 = inttoptr i64 %257 to i64*
  store i64 %262, i64* %264, align 8
  %265 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %263, i64 1
  %266 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %265 to i64
  br label %267

267:                                              ; preds = %261, %255
  %268 = phi i64 [ %257, %255 ], [ %266, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 1, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %461, label %455

272:                                              ; preds = %483, %250
  %273 = phi i64 [ %251, %250 ], [ %484, %483 ]
  %274 = inttoptr i64 %273 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %206, align 8
  br label %276

276:                                              ; preds = %272, %221
  %277 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %207, %221 ], [ %275, %272 ]
  %278 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %221 ], [ %274, %272 ]
  %279 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %278, %277
  br i1 %279, label %281, label %280

280:                                              ; preds = %276
  store %"class.base::internal::UncheckedObserverAdapter"* %278, %"class.base::internal::UncheckedObserverAdapter"** %206, align 8
  br label %281

281:                                              ; preds = %214, %280, %276, %217, %194
  %282 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %144, align 8
  %283 = icmp eq %"class.base::ObserverList"* %282, null
  br i1 %283, label %285, label %284

284:                                              ; preds = %281
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %144, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %147) #13
  br label %285

285:                                              ; preds = %169, %192, %281, %284
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %143) #13
  %286 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %287 = icmp eq %"class.base::ObserverList"* %286, null
  br i1 %287, label %378, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %286, i64 0, i32 1
  %290 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %286, i64 0, i32 1, i32 0, i32 0, i32 1
  %291 = bitcast %"class.base::internal::LinkNodeBase"** %290 to %"class.base::LinkNode"**
  %292 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %291, align 8
  %293 = bitcast %"class.base::LinkedList"* %289 to %"class.base::LinkNode"**
  %294 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %293, align 8
  %295 = icmp eq %"class.base::LinkNode"* %292, %294
  br i1 %295, label %296, label %374

296:                                              ; preds = %288
  %297 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %286, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %297, align 8
  %299 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %286, i64 0, i32 0, i32 0, i32 1
  %300 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  %301 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %298, %300
  br i1 %301, label %310, label %302

302:                                              ; preds = %296, %307
  %303 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %308, %307 ], [ %298, %296 ]
  %304 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %303, i64 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %310, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %303, i64 1
  %309 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %308, %300
  br i1 %309, label %374, label %302

310:                                              ; preds = %302, %296
  %311 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %298, %296 ], [ %303, %302 ]
  %312 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %311 to i64
  %313 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %311, %300
  br i1 %313, label %374, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %311, i64 1
  %316 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %315, %300
  br i1 %316, label %369, label %317

317:                                              ; preds = %314
  %318 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %300, i64 -2, i32 0
  %319 = ptrtoint i8** %318 to i64
  %320 = sub i64 %319, %312
  %321 = lshr i64 %320, 3
  %322 = add nuw nsw i64 %321, 1
  %323 = and i64 %322, 3
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %343, label %325

325:                                              ; preds = %317, %338
  %326 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %340, %338 ], [ %315, %317 ]
  %327 = phi i64 [ %339, %338 ], [ %312, %317 ]
  %328 = phi i64 [ %341, %338 ], [ %323, %317 ]
  %329 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = icmp eq i8* %330, null
  br i1 %331, label %338, label %332

332:                                              ; preds = %325
  %333 = ptrtoint i8* %330 to i64
  %334 = inttoptr i64 %327 to %"class.base::internal::UncheckedObserverAdapter"*
  %335 = inttoptr i64 %327 to i64*
  store i64 %333, i64* %335, align 8
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 1
  %337 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %336 to i64
  br label %338

338:                                              ; preds = %332, %325
  %339 = phi i64 [ %327, %325 ], [ %337, %332 ]
  %340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %326, i64 1
  %341 = add i64 %328, -1
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %325, !llvm.loop !21

343:                                              ; preds = %338, %317
  %344 = phi i64 [ undef, %317 ], [ %339, %338 ]
  %345 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %315, %317 ], [ %340, %338 ]
  %346 = phi i64 [ %312, %317 ], [ %339, %338 ]
  %347 = icmp ult i64 %320, 24
  br i1 %347, label %365, label %348

348:                                              ; preds = %343, %451
  %349 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %453, %451 ], [ %345, %343 ]
  %350 = phi i64 [ %452, %451 ], [ %346, %343 ]
  %351 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 0, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = icmp eq i8* %352, null
  br i1 %353, label %360, label %354

354:                                              ; preds = %348
  %355 = ptrtoint i8* %352 to i64
  %356 = inttoptr i64 %350 to %"class.base::internal::UncheckedObserverAdapter"*
  %357 = inttoptr i64 %350 to i64*
  store i64 %355, i64* %357, align 8
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 1
  %359 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %358 to i64
  br label %360

360:                                              ; preds = %354, %348
  %361 = phi i64 [ %350, %348 ], [ %359, %354 ]
  %362 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 1, i32 0
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, null
  br i1 %364, label %429, label %423

365:                                              ; preds = %451, %343
  %366 = phi i64 [ %344, %343 ], [ %452, %451 ]
  %367 = inttoptr i64 %366 to %"class.base::internal::UncheckedObserverAdapter"*
  %368 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  br label %369

369:                                              ; preds = %365, %314
  %370 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %300, %314 ], [ %368, %365 ]
  %371 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %311, %314 ], [ %367, %365 ]
  %372 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %371, %370
  br i1 %372, label %374, label %373

373:                                              ; preds = %369
  store %"class.base::internal::UncheckedObserverAdapter"* %371, %"class.base::internal::UncheckedObserverAdapter"** %299, align 8
  br label %374

374:                                              ; preds = %307, %373, %369, %310, %288
  %375 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %376 = icmp eq %"class.base::ObserverList"* %375, null
  br i1 %376, label %378, label %377

377:                                              ; preds = %374
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %90, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %99) #13
  br label %378

378:                                              ; preds = %285, %374, %377
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %89) #13
  br label %422

379:                                              ; preds = %185
  %380 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %152, i64 0, i32 0, i32 0, i32 0
  %381 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %380, align 8
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %381, i64 %188
  %383 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %382 to %"class.policy::RemoteCommandsQueue::Observer"**
  %384 = load %"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandsQueue::Observer"** %383, align 8
  %385 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %19, align 8
  %386 = bitcast %"class.policy::RemoteCommandsQueue::Observer"* %384 to void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)***
  %387 = load void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)*** %386, align 8
  %388 = load void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)** %387, align 8
  call void %388(%"class.policy::RemoteCommandsQueue::Observer"* %384, %"class.policy::RemoteCommandJob"* %385) #13
  %389 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %90, align 8
  %390 = icmp eq %"class.base::ObserverList"* %389, null
  br i1 %390, label %391, label %392

391:                                              ; preds = %416, %412, %379, %392, %406
  br label %151

392:                                              ; preds = %379
  %393 = load i64, i64* %91, align 8
  %394 = add i64 %393, 1
  store i64 %394, i64* %91, align 8
  %395 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %389, i64 0, i32 0, i32 0, i32 1
  %396 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %395 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = bitcast %"class.base::ObserverList"* %389 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %397, %399
  %401 = ashr exact i64 %400, 3
  %402 = load i64, i64* %92, align 8
  %403 = icmp ult i64 %401, %402
  %404 = select i1 %403, i64 %401, i64 %402
  %405 = icmp ult i64 %394, %404
  br i1 %405, label %406, label %391

406:                                              ; preds = %392
  %407 = inttoptr i64 %399 to %"class.base::internal::UncheckedObserverAdapter"*
  %408 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %389, i64 0, i32 0, i32 0, i32 0
  %409 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %407, i64 %394, i32 0
  %410 = load i8*, i8** %409, align 8
  %411 = icmp eq i8* %410, null
  br i1 %411, label %412, label %391

412:                                              ; preds = %406, %416
  %413 = phi i64 [ %414, %416 ], [ %394, %406 ]
  %414 = add nuw i64 %413, 1
  store i64 %414, i64* %91, align 8
  %415 = icmp ult i64 %414, %404
  br i1 %415, label %416, label %391

416:                                              ; preds = %412
  %417 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %408, align 8
  %418 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %417, i64 %414, i32 0
  %419 = load i8*, i8** %418, align 8
  %420 = icmp eq i8* %419, null
  br i1 %420, label %412, label %391

421:                                              ; preds = %28
  call void @_ZN6policy19RemoteCommandsQueue18CurrentJobFinishedEv(%"class.policy::RemoteCommandsQueue"* %0)
  br label %422

422:                                              ; preds = %1, %421, %378
  ret void

423:                                              ; preds = %360
  %424 = ptrtoint i8* %363 to i64
  %425 = inttoptr i64 %361 to %"class.base::internal::UncheckedObserverAdapter"*
  %426 = inttoptr i64 %361 to i64*
  store i64 %424, i64* %426, align 8
  %427 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %425, i64 1
  %428 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %427 to i64
  br label %429

429:                                              ; preds = %423, %360
  %430 = phi i64 [ %361, %360 ], [ %428, %423 ]
  %431 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 2, i32 0
  %432 = load i8*, i8** %431, align 8
  %433 = icmp eq i8* %432, null
  br i1 %433, label %440, label %434

434:                                              ; preds = %429
  %435 = ptrtoint i8* %432 to i64
  %436 = inttoptr i64 %430 to %"class.base::internal::UncheckedObserverAdapter"*
  %437 = inttoptr i64 %430 to i64*
  store i64 %435, i64* %437, align 8
  %438 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %436, i64 1
  %439 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %438 to i64
  br label %440

440:                                              ; preds = %434, %429
  %441 = phi i64 [ %430, %429 ], [ %439, %434 ]
  %442 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 3, i32 0
  %443 = load i8*, i8** %442, align 8
  %444 = icmp eq i8* %443, null
  br i1 %444, label %451, label %445

445:                                              ; preds = %440
  %446 = ptrtoint i8* %443 to i64
  %447 = inttoptr i64 %441 to %"class.base::internal::UncheckedObserverAdapter"*
  %448 = inttoptr i64 %441 to i64*
  store i64 %446, i64* %448, align 8
  %449 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %447, i64 1
  %450 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %449 to i64
  br label %451

451:                                              ; preds = %445, %440
  %452 = phi i64 [ %441, %440 ], [ %450, %445 ]
  %453 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %349, i64 4
  %454 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %453, %300
  br i1 %454, label %365, label %348

455:                                              ; preds = %267
  %456 = ptrtoint i8* %270 to i64
  %457 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %458 = inttoptr i64 %268 to i64*
  store i64 %456, i64* %458, align 8
  %459 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %457, i64 1
  %460 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %459 to i64
  br label %461

461:                                              ; preds = %455, %267
  %462 = phi i64 [ %268, %267 ], [ %460, %455 ]
  %463 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 2, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = icmp eq i8* %464, null
  br i1 %465, label %472, label %466

466:                                              ; preds = %461
  %467 = ptrtoint i8* %464 to i64
  %468 = inttoptr i64 %462 to %"class.base::internal::UncheckedObserverAdapter"*
  %469 = inttoptr i64 %462 to i64*
  store i64 %467, i64* %469, align 8
  %470 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %468, i64 1
  %471 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %470 to i64
  br label %472

472:                                              ; preds = %466, %461
  %473 = phi i64 [ %462, %461 ], [ %471, %466 ]
  %474 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 3, i32 0
  %475 = load i8*, i8** %474, align 8
  %476 = icmp eq i8* %475, null
  br i1 %476, label %483, label %477

477:                                              ; preds = %472
  %478 = ptrtoint i8* %475 to i64
  %479 = inttoptr i64 %473 to %"class.base::internal::UncheckedObserverAdapter"*
  %480 = inttoptr i64 %473 to i64*
  store i64 %478, i64* %480, align 8
  %481 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %479, i64 1
  %482 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %481 to i64
  br label %483

483:                                              ; preds = %477, %472
  %484 = phi i64 [ %473, %472 ], [ %482, %477 ]
  %485 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %256, i64 4
  %486 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %485, %207
  br i1 %486, label %272, label %255
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6policy19RemoteCommandsQueue19SetClocksForTestingEPKN4base5ClockEPKNS1_9TickClockE(%"class.policy::RemoteCommandsQueue"* nocapture, %"class.base::Clock"*, %"class.base::TickClock"*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 2
  store %"class.base::Clock"* %1, %"class.base::Clock"** %4, align 8
  %5 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 3
  store %"class.base::TickClock"* %2, %"class.base::TickClock"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6policy19RemoteCommandsQueue11GetNowTicksEv(%"class.policy::RemoteCommandsQueue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 3
  %3 = load %"class.base::TickClock"*, %"class.base::TickClock"** %2, align 8
  %4 = bitcast %"class.base::TickClock"* %3 to i64 (%"class.base::TickClock"*)***
  %5 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %5, i64 2
  %7 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %6, align 8
  %8 = tail call i64 %7(%"class.base::TickClock"* %3) #13
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueue16OnCommandTimeoutEv(%"class.policy::RemoteCommandsQueue"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %2, align 8
  tail call void @_ZN6policy16RemoteCommandJob9TerminateEv(%"class.policy::RemoteCommandJob"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy19RemoteCommandsQueue18CurrentJobFinishedEv(%"class.policy::RemoteCommandsQueue"*) #0 align 2 {
  %2 = alloca %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %3 = alloca %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %4 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %4) #13
  %5 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5
  %6 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8, !noalias !22
  %13 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %14 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %13, align 8, !noalias !22
  %15 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %12, %14
  %16 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %2, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br i1 %15, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast %"class.base::ObserverList"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #13, !alias.scope !22
  br label %59

19:                                               ; preds = %1
  store %"class.base::ObserverList"* %5, %"class.base::ObserverList"** %7, align 8
  %20 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %16, %"class.base::internal::LinkNodeBase"* %20) #13
  store i64 0, i64* %8, align 8
  %21 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 5, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %13 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::ObserverList"* %5 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = ashr exact i64 %29, 3
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i64 [ %30, %24 ], [ -1, %19 ]
  store i64 %32, i64* %9, align 8
  %33 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %34 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::ObserverList"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, %32
  %42 = select i1 %41, i64 %40, i64 %32
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %31
  %45 = inttoptr i64 %38 to %"class.base::internal::UncheckedObserverAdapter"*
  %46 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %33, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %45, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %59

50:                                               ; preds = %44, %54
  %51 = phi i64 [ %52, %54 ], [ 0, %44 ]
  %52 = add nuw i64 %51, 1
  store i64 %52, i64* %8, align 8
  %53 = icmp ult i64 %52, %42
  br i1 %53, label %54, label %59

54:                                               ; preds = %50
  %55 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %46, align 8
  %56 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %55, i64 %52, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %50, label %59

59:                                               ; preds = %54, %50, %44, %31, %17
  %60 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #13
  %61 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 2
  %64 = getelementptr inbounds %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.base::ObserverList<policy::RemoteCommandsQueue::Observer, true, true, base::internal::UncheckedObserverAdapter>::Iter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %64) #13
  %66 = bitcast %"class.base::ObserverList"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #13, !alias.scope !25
  %67 = getelementptr inbounds %"class.policy::RemoteCommandsQueue", %"class.policy::RemoteCommandsQueue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  br label %69

69:                                               ; preds = %318, %59
  %70 = phi %"class.base::ObserverList"* [ %68, %59 ], [ %316, %318 ]
  %71 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %69
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 1
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %70 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  %81 = load i64, i64* %9, align 8
  %82 = icmp ult i64 %80, %81
  %83 = select i1 %82, i64 %80, i64 %81
  %84 = icmp eq i64 %73, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  %86 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  br label %103

87:                                               ; preds = %72, %69
  %88 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %89 = icmp eq %"class.base::ObserverList"* %88, null
  br i1 %89, label %203, label %90

90:                                               ; preds = %87
  %91 = load i64, i64* %62, align 8
  %92 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %88, i64 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.base::ObserverList"* %88 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = ashr exact i64 %97, 3
  %99 = load i64, i64* %63, align 8
  %100 = icmp ult i64 %98, %99
  %101 = select i1 %100, i64 %98, i64 %99
  %102 = icmp eq i64 %91, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %90, %85
  %104 = phi %"class.base::ObserverList"* [ %86, %85 ], [ %88, %90 ]
  %105 = icmp eq %"class.base::ObserverList"* %70, %104
  %106 = load i64, i64* %8, align 8
  %107 = load i64, i64* %62, align 8
  %108 = icmp eq i64 %106, %107
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %305

110:                                              ; preds = %103
  %111 = icmp eq %"class.base::ObserverList"* %70, null
  br i1 %111, label %203, label %112

112:                                              ; preds = %90, %110
  %113 = phi %"class.base::ObserverList"* [ %70, %110 ], [ %88, %90 ]
  %114 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1
  %115 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 1, i32 0, i32 0, i32 1
  %116 = bitcast %"class.base::internal::LinkNodeBase"** %115 to %"class.base::LinkNode"**
  %117 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %116, align 8
  %118 = bitcast %"class.base::LinkedList"* %114 to %"class.base::LinkNode"**
  %119 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %118, align 8
  %120 = icmp eq %"class.base::LinkNode"* %117, %119
  br i1 %120, label %121, label %199

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %122, align 8
  %124 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %113, i64 0, i32 0, i32 0, i32 1
  %125 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  %126 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %123, %125
  br i1 %126, label %135, label %127

127:                                              ; preds = %121, %132
  %128 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %133, %132 ], [ %123, %121 ]
  %129 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 1
  %134 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %133, %125
  br i1 %134, label %199, label %127

135:                                              ; preds = %127, %121
  %136 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %123, %121 ], [ %128, %127 ]
  %137 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %136 to i64
  %138 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %125
  br i1 %138, label %199, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %136, i64 1
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %140, %125
  br i1 %141, label %194, label %142

142:                                              ; preds = %139
  %143 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %125, i64 -2, i32 0
  %144 = ptrtoint i8** %143 to i64
  %145 = sub i64 %144, %137
  %146 = lshr i64 %145, 3
  %147 = add nuw nsw i64 %146, 1
  %148 = and i64 %147, 3
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %168, label %150

150:                                              ; preds = %142, %163
  %151 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %165, %163 ], [ %140, %142 ]
  %152 = phi i64 [ %164, %163 ], [ %137, %142 ]
  %153 = phi i64 [ %166, %163 ], [ %148, %142 ]
  %154 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 0, i32 0
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %163, label %157

157:                                              ; preds = %150
  %158 = ptrtoint i8* %155 to i64
  %159 = inttoptr i64 %152 to %"class.base::internal::UncheckedObserverAdapter"*
  %160 = inttoptr i64 %152 to i64*
  store i64 %158, i64* %160, align 8
  %161 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %159, i64 1
  %162 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %161 to i64
  br label %163

163:                                              ; preds = %157, %150
  %164 = phi i64 [ %152, %150 ], [ %162, %157 ]
  %165 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %151, i64 1
  %166 = add i64 %153, -1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %150, !llvm.loop !28

168:                                              ; preds = %163, %142
  %169 = phi i64 [ undef, %142 ], [ %164, %163 ]
  %170 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %140, %142 ], [ %165, %163 ]
  %171 = phi i64 [ %137, %142 ], [ %164, %163 ]
  %172 = icmp ult i64 %145, 24
  br i1 %172, label %190, label %173

173:                                              ; preds = %168, %408
  %174 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %410, %408 ], [ %170, %168 ]
  %175 = phi i64 [ %409, %408 ], [ %171, %168 ]
  %176 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 0, i32 0
  %177 = load i8*, i8** %176, align 8
  %178 = icmp eq i8* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %173
  %180 = ptrtoint i8* %177 to i64
  %181 = inttoptr i64 %175 to %"class.base::internal::UncheckedObserverAdapter"*
  %182 = inttoptr i64 %175 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %181, i64 1
  %184 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %183 to i64
  br label %185

185:                                              ; preds = %179, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %179 ]
  %187 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %386, label %380

190:                                              ; preds = %408, %168
  %191 = phi i64 [ %169, %168 ], [ %409, %408 ]
  %192 = inttoptr i64 %191 to %"class.base::internal::UncheckedObserverAdapter"*
  %193 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %194

194:                                              ; preds = %190, %139
  %195 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %125, %139 ], [ %193, %190 ]
  %196 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %139 ], [ %192, %190 ]
  %197 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %196, %195
  br i1 %197, label %199, label %198

198:                                              ; preds = %194
  store %"class.base::internal::UncheckedObserverAdapter"* %196, %"class.base::internal::UncheckedObserverAdapter"** %124, align 8
  br label %199

199:                                              ; preds = %132, %198, %194, %135, %112
  %200 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %61, align 8
  %201 = icmp eq %"class.base::ObserverList"* %200, null
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %61, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %64) #13
  br label %203

203:                                              ; preds = %87, %110, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #13
  %204 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %205 = icmp eq %"class.base::ObserverList"* %204, null
  br i1 %205, label %296, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1
  %208 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 1, i32 0, i32 0, i32 1
  %209 = bitcast %"class.base::internal::LinkNodeBase"** %208 to %"class.base::LinkNode"**
  %210 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %209, align 8
  %211 = bitcast %"class.base::LinkedList"* %207 to %"class.base::LinkNode"**
  %212 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %211, align 8
  %213 = icmp eq %"class.base::LinkNode"* %210, %212
  br i1 %213, label %214, label %292

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %215, align 8
  %217 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %204, i64 0, i32 0, i32 0, i32 1
  %218 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  %219 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %216, %218
  br i1 %219, label %228, label %220

220:                                              ; preds = %214, %225
  %221 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %226, %225 ], [ %216, %214 ]
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = icmp eq i8* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 1
  %227 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %226, %218
  br i1 %227, label %292, label %220

228:                                              ; preds = %220, %214
  %229 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %216, %214 ], [ %221, %220 ]
  %230 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %229 to i64
  %231 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %218
  br i1 %231, label %292, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %229, i64 1
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %233, %218
  br i1 %234, label %287, label %235

235:                                              ; preds = %232
  %236 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %218, i64 -2, i32 0
  %237 = ptrtoint i8** %236 to i64
  %238 = sub i64 %237, %230
  %239 = lshr i64 %238, 3
  %240 = add nuw nsw i64 %239, 1
  %241 = and i64 %240, 3
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %261, label %243

243:                                              ; preds = %235, %256
  %244 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %258, %256 ], [ %233, %235 ]
  %245 = phi i64 [ %257, %256 ], [ %230, %235 ]
  %246 = phi i64 [ %259, %256 ], [ %241, %235 ]
  %247 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %243
  %251 = ptrtoint i8* %248 to i64
  %252 = inttoptr i64 %245 to %"class.base::internal::UncheckedObserverAdapter"*
  %253 = inttoptr i64 %245 to i64*
  store i64 %251, i64* %253, align 8
  %254 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %252, i64 1
  %255 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %254 to i64
  br label %256

256:                                              ; preds = %250, %243
  %257 = phi i64 [ %245, %243 ], [ %255, %250 ]
  %258 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %244, i64 1
  %259 = add i64 %246, -1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %243, !llvm.loop !29

261:                                              ; preds = %256, %235
  %262 = phi i64 [ undef, %235 ], [ %257, %256 ]
  %263 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %233, %235 ], [ %258, %256 ]
  %264 = phi i64 [ %230, %235 ], [ %257, %256 ]
  %265 = icmp ult i64 %238, 24
  br i1 %265, label %283, label %266

266:                                              ; preds = %261, %376
  %267 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %378, %376 ], [ %263, %261 ]
  %268 = phi i64 [ %377, %376 ], [ %264, %261 ]
  %269 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = icmp eq i8* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %266
  %273 = ptrtoint i8* %270 to i64
  %274 = inttoptr i64 %268 to %"class.base::internal::UncheckedObserverAdapter"*
  %275 = inttoptr i64 %268 to i64*
  store i64 %273, i64* %275, align 8
  %276 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %274, i64 1
  %277 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %276 to i64
  br label %278

278:                                              ; preds = %272, %266
  %279 = phi i64 [ %268, %266 ], [ %277, %272 ]
  %280 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 1, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = icmp eq i8* %281, null
  br i1 %282, label %354, label %348

283:                                              ; preds = %376, %261
  %284 = phi i64 [ %262, %261 ], [ %377, %376 ]
  %285 = inttoptr i64 %284 to %"class.base::internal::UncheckedObserverAdapter"*
  %286 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %287

287:                                              ; preds = %283, %232
  %288 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %218, %232 ], [ %286, %283 ]
  %289 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %232 ], [ %285, %283 ]
  %290 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %289, %288
  br i1 %290, label %292, label %291

291:                                              ; preds = %287
  store %"class.base::internal::UncheckedObserverAdapter"* %289, %"class.base::internal::UncheckedObserverAdapter"** %217, align 8
  br label %292

292:                                              ; preds = %225, %291, %287, %228, %206
  %293 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %294 = icmp eq %"class.base::ObserverList"* %293, null
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %7, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %16) #13
  br label %296

296:                                              ; preds = %203, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #13
  %297 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %67, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %67, align 8
  %298 = icmp eq %"class.policy::RemoteCommandJob"* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %296
  %300 = bitcast %"class.policy::RemoteCommandJob"* %297 to void (%"class.policy::RemoteCommandJob"*)***
  %301 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %301, i64 1
  %303 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %302, align 8
  call void %303(%"class.policy::RemoteCommandJob"* nonnull %297) #13
  br label %304

304:                                              ; preds = %296, %299
  call void @_ZN6policy19RemoteCommandsQueue15ScheduleNextJobEv(%"class.policy::RemoteCommandsQueue"* %0)
  ret void

305:                                              ; preds = %103
  %306 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %70, i64 0, i32 0, i32 0, i32 0
  %307 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %306, align 8
  %308 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %307, i64 %106
  %309 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %308 to %"class.policy::RemoteCommandsQueue::Observer"**
  %310 = load %"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandsQueue::Observer"** %309, align 8
  %311 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %67, align 8
  %312 = bitcast %"class.policy::RemoteCommandsQueue::Observer"* %310 to void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)***
  %313 = load void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)** %313, i64 1
  %315 = load void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandsQueue::Observer"*, %"class.policy::RemoteCommandJob"*)** %314, align 8
  call void %315(%"class.policy::RemoteCommandsQueue::Observer"* %310, %"class.policy::RemoteCommandJob"* %311) #13
  %316 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %7, align 8
  %317 = icmp eq %"class.base::ObserverList"* %316, null
  br i1 %317, label %318, label %319

318:                                              ; preds = %343, %339, %305, %319, %333
  br label %69

319:                                              ; preds = %305
  %320 = load i64, i64* %8, align 8
  %321 = add i64 %320, 1
  store i64 %321, i64* %8, align 8
  %322 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %316, i64 0, i32 0, i32 0, i32 1
  %323 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.base::ObserverList"* %316 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = sub i64 %324, %326
  %328 = ashr exact i64 %327, 3
  %329 = load i64, i64* %9, align 8
  %330 = icmp ult i64 %328, %329
  %331 = select i1 %330, i64 %328, i64 %329
  %332 = icmp ult i64 %321, %331
  br i1 %332, label %333, label %318

333:                                              ; preds = %319
  %334 = inttoptr i64 %326 to %"class.base::internal::UncheckedObserverAdapter"*
  %335 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %316, i64 0, i32 0, i32 0, i32 0
  %336 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %334, i64 %321, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = icmp eq i8* %337, null
  br i1 %338, label %339, label %318

339:                                              ; preds = %333, %343
  %340 = phi i64 [ %341, %343 ], [ %321, %333 ]
  %341 = add nuw i64 %340, 1
  store i64 %341, i64* %8, align 8
  %342 = icmp ult i64 %341, %331
  br i1 %342, label %343, label %318

343:                                              ; preds = %339
  %344 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %335, align 8
  %345 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %344, i64 %341, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = icmp eq i8* %346, null
  br i1 %347, label %339, label %318

348:                                              ; preds = %278
  %349 = ptrtoint i8* %281 to i64
  %350 = inttoptr i64 %279 to %"class.base::internal::UncheckedObserverAdapter"*
  %351 = inttoptr i64 %279 to i64*
  store i64 %349, i64* %351, align 8
  %352 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %350, i64 1
  %353 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %352 to i64
  br label %354

354:                                              ; preds = %348, %278
  %355 = phi i64 [ %279, %278 ], [ %353, %348 ]
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 2, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %365, label %359

359:                                              ; preds = %354
  %360 = ptrtoint i8* %357 to i64
  %361 = inttoptr i64 %355 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %355 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %354
  %366 = phi i64 [ %355, %354 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 3, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %376, label %370

370:                                              ; preds = %365
  %371 = ptrtoint i8* %368 to i64
  %372 = inttoptr i64 %366 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %366 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %365
  %377 = phi i64 [ %366, %365 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %267, i64 4
  %379 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %378, %218
  br i1 %379, label %283, label %266

380:                                              ; preds = %185
  %381 = ptrtoint i8* %188 to i64
  %382 = inttoptr i64 %186 to %"class.base::internal::UncheckedObserverAdapter"*
  %383 = inttoptr i64 %186 to i64*
  store i64 %381, i64* %383, align 8
  %384 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %382, i64 1
  %385 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %384 to i64
  br label %386

386:                                              ; preds = %380, %185
  %387 = phi i64 [ %186, %185 ], [ %385, %380 ]
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 2, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = icmp eq i8* %389, null
  br i1 %390, label %397, label %391

391:                                              ; preds = %386
  %392 = ptrtoint i8* %389 to i64
  %393 = inttoptr i64 %387 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %387 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %386
  %398 = phi i64 [ %387, %386 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 3, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %397
  %403 = ptrtoint i8* %400 to i64
  %404 = inttoptr i64 %398 to %"class.base::internal::UncheckedObserverAdapter"*
  %405 = inttoptr i64 %398 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %404, i64 1
  %407 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %406 to i64
  br label %408

408:                                              ; preds = %402, %397
  %409 = phi i64 [ %398, %397 ], [ %407, %402 ]
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %174, i64 4
  %411 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %410, %125
  br i1 %411, label %190, label %173
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN6policy16RemoteCommandJob3RunEN4base4TimeENS1_9TimeTicksENS1_12OnceCallbackIFvvEEE(%"class.policy::RemoteCommandJob"*, i64, i64, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %8, %"class.std::__1::unique_ptr"* %12)
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.std::__1::unique_ptr"* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"* %7, %"class.std::__1::unique_ptr"* %15, %"class.std::__1::unique_ptr"* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEE13DestructRangeIS8_Li0EEEvPS8_SB_(%"class.base::internal::VectorBuffer"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.std::__1::unique_ptr"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr"*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %5, align 8
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %"class.std::__1::unique_ptr"* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::unique_ptr"** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  %17 = bitcast %"class.std::__1::unique_ptr"** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %26, %27
  br i1 %28, label %44, label %29

29:                                               ; preds = %25, %39
  %30 = phi %"class.std::__1::unique_ptr"* [ %41, %39 ], [ %26, %25 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %31, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %31, align 8
  %33 = icmp eq %"class.policy::RemoteCommandJob"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.policy::RemoteCommandJob"* %32 to void (%"class.policy::RemoteCommandJob"*)***
  %36 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %36, i64 1
  %38 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %37, align 8
  call void %38(%"class.policy::RemoteCommandJob"* nonnull %32) #13
  br label %39

39:                                               ; preds = %29, %34
  %40 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  store %"class.std::__1::unique_ptr"* %41, %"class.std::__1::unique_ptr"** %5, align 8
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %43 = icmp eq %"class.std::__1::unique_ptr"* %41, %42
  br i1 %43, label %44, label %29

44:                                               ; preds = %39, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPNSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEEENS1_9enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS1_14remove_pointerISA_E4typeEEE5valueEPcE4typeESC_ENUlRNS1_13basic_ostreamIcNS1_11char_traitsIcEEEEPKvE_8__invokeESN_SP_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #13
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #13
  br i1 %31, label %32, label %33, !prof !30

32:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #13
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #13
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #13
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %58

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %16 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr"* %14 to i64
  %19 = icmp ult %"class.std::__1::unique_ptr"* %17, %15
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %"class.std::__1::unique_ptr"* %17 to i64
  %22 = ptrtoint %"class.std::__1::unique_ptr"* %15 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %18) #13
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #13
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !30

29:                                               ; preds = %20
  tail call void @llvm.trap() #13
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %18
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %"class.std::__1::unique_ptr"* %14, %15
  br i1 %37, label %56, label %38

38:                                               ; preds = %36, %52
  %39 = phi %"class.std::__1::unique_ptr"* [ %54, %52 ], [ %17, %36 ]
  %40 = phi %"class.std::__1::unique_ptr"* [ %53, %52 ], [ %14, %36 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %41, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %41, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %41, align 8
  %46 = icmp eq %"class.policy::RemoteCommandJob"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.policy::RemoteCommandJob"* %45 to void (%"class.policy::RemoteCommandJob"*)***
  %49 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %49, i64 1
  %51 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %50, align 8
  call void %51(%"class.policy::RemoteCommandJob"* nonnull %45) #13
  br label %52

52:                                               ; preds = %47, %38
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 1
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %39, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr"* %53, %15
  br i1 %55, label %56, label %38

56:                                               ; preds = %52, %36
  %57 = sub i64 %2, %1
  br label %148

58:                                               ; preds = %6
  %59 = icmp ult i64 %2, %1
  br i1 %59, label %60, label %148

60:                                               ; preds = %58
  %61 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %62 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %63 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %64 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %63, align 8
  %65 = ptrtoint %"class.std::__1::unique_ptr"* %61 to i64
  %66 = icmp ult %"class.std::__1::unique_ptr"* %64, %62
  br i1 %66, label %67, label %83

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::unique_ptr"* %64 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr"* %62 to i64
  %70 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %69, i64 %65) #13
  %71 = extractvalue { i64, i1 } %70, 1
  %72 = extractvalue { i64, i1 } %70, 0
  %73 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %68, i64 %72) #13
  %74 = extractvalue { i64, i1 } %73, 1
  %75 = or i1 %71, %74
  br i1 %75, label %76, label %77, !prof !30

76:                                               ; preds = %67
  tail call void @llvm.trap() #13
  unreachable

77:                                               ; preds = %67
  %78 = extractvalue { i64, i1 } %73, 0
  %79 = icmp ugt i64 %78, %65
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #13
  br label %83

83:                                               ; preds = %80, %77, %60
  %84 = icmp eq %"class.std::__1::unique_ptr"* %61, %62
  br i1 %84, label %103, label %85

85:                                               ; preds = %83, %99
  %86 = phi %"class.std::__1::unique_ptr"* [ %101, %99 ], [ %64, %83 ]
  %87 = phi %"class.std::__1::unique_ptr"* [ %100, %99 ], [ %61, %83 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  store i64 %90, i64* %91, align 8
  %92 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %88, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %88, align 8
  %93 = icmp eq %"class.policy::RemoteCommandJob"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %85
  %95 = bitcast %"class.policy::RemoteCommandJob"* %92 to void (%"class.policy::RemoteCommandJob"*)***
  %96 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %96, i64 1
  %98 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %97, align 8
  call void %98(%"class.policy::RemoteCommandJob"* nonnull %92) #13
  br label %99

99:                                               ; preds = %94, %85
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 1
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr"* %100, %62
  br i1 %102, label %103, label %85

103:                                              ; preds = %99, %83
  %104 = sub i64 %11, %1
  %105 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %106 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %107 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %104)
  %108 = ptrtoint %"class.std::__1::unique_ptr"* %105 to i64
  %109 = icmp ult %"class.std::__1::unique_ptr"* %107, %106
  br i1 %109, label %110, label %126

110:                                              ; preds = %103
  %111 = ptrtoint %"class.std::__1::unique_ptr"* %107 to i64
  %112 = ptrtoint %"class.std::__1::unique_ptr"* %106 to i64
  %113 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %112, i64 %108) #13
  %114 = extractvalue { i64, i1 } %113, 1
  %115 = extractvalue { i64, i1 } %113, 0
  %116 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %111, i64 %115) #13
  %117 = extractvalue { i64, i1 } %116, 1
  %118 = or i1 %114, %117
  br i1 %118, label %119, label %120, !prof !30

119:                                              ; preds = %110
  call void @llvm.trap() #13
  unreachable

120:                                              ; preds = %110
  %121 = extractvalue { i64, i1 } %116, 0
  %122 = icmp ugt i64 %121, %108
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #13
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #13
  br label %126

126:                                              ; preds = %123, %120, %103
  %127 = icmp eq %"class.std::__1::unique_ptr"* %105, %106
  br i1 %127, label %146, label %128

128:                                              ; preds = %126, %142
  %129 = phi %"class.std::__1::unique_ptr"* [ %144, %142 ], [ %107, %126 ]
  %130 = phi %"class.std::__1::unique_ptr"* [ %143, %142 ], [ %105, %126 ]
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %131, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  store i64 %133, i64* %134, align 8
  %135 = load %"class.policy::RemoteCommandJob"*, %"class.policy::RemoteCommandJob"** %131, align 8
  store %"class.policy::RemoteCommandJob"* null, %"class.policy::RemoteCommandJob"** %131, align 8
  %136 = icmp eq %"class.policy::RemoteCommandJob"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %128
  %138 = bitcast %"class.policy::RemoteCommandJob"* %135 to void (%"class.policy::RemoteCommandJob"*)***
  %139 = load void (%"class.policy::RemoteCommandJob"*)**, void (%"class.policy::RemoteCommandJob"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %139, i64 1
  %141 = load void (%"class.policy::RemoteCommandJob"*)*, void (%"class.policy::RemoteCommandJob"*)** %140, align 8
  call void %141(%"class.policy::RemoteCommandJob"* nonnull %135) #13
  br label %142

142:                                              ; preds = %137, %128
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 1
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 1
  %145 = icmp eq %"class.std::__1::unique_ptr"* %143, %106
  br i1 %145, label %146, label %128

146:                                              ; preds = %142, %126
  %147 = add i64 %104, %2
  br label %148

148:                                              ; preds = %58, %146, %56
  %149 = phi i64 [ %147, %146 ], [ %57, %56 ], [ 0, %58 ]
  store i64 %149, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #13
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #13
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #13
  br i1 %37, label %38, label %39, !prof !30

38:                                               ; preds = %27
  tail call void @llvm.trap() #13
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #13
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINSt3__110unique_ptrIN6policy16RemoteCommandJobENS1_14default_deleteIS4_EEEEE10MoveBufferERNS_8internal12VectorBufferIS7_EEmmPSB_PmSE_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #13
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #13
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #13
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK4base8internal12VectorBufferINSt3__110unique_ptrIN6policy16RemoteCommandJobENS2_14default_deleteIS5_EEEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %1
  ret %"class.std::__1::unique_ptr"* %25
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #1

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.policy::RemoteCommandsQueue"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.policy::RemoteCommandsQueue"*)**
  %21 = load void (%"class.policy::RemoteCommandsQueue"*)*, void (%"class.policy::RemoteCommandsQueue"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.policy::RemoteCommandsQueue"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.policy::RemoteCommandsQueue"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.policy::RemoteCommandsQueue"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackERMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIRMN6policy19RemoteCommandsQueueEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIRMN6policy19RemoteCommandsQueueEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN6policy19RemoteCommandsQueueEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN6policy19RemoteCommandsQueueEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN6policy19RemoteCommandsQueueEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!19 = distinct !{!19, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!27 = distinct !{!27, !"_ZNK4base12ObserverListIN6policy19RemoteCommandsQueue8ObserverELb1ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !3}
!30 = !{!"branch_weights", i32 1, i32 2000}
