; ModuleID = '../../ui/compositor/float_animation_curve_adapter.cc'
source_filename = "../../ui/compositor/float_animation_curve_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::FloatAnimationCurveAdapter" = type { %"class.gfx::FloatAnimationCurve", i32, float, float, %"class.base::TimeDelta" }
%"class.gfx::FloatAnimationCurve" = type { %"class.gfx::AnimationCurve", %"class.gfx::FloatAnimationCurve::Target"* }
%"class.gfx::AnimationCurve" = type { i32 (...)** }
%"class.gfx::FloatAnimationCurve::Target" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.gfx::KeyframeModel" = type opaque

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZN3gfx14AnimationCurveD2Ev = comdat any

$_ZN2ui26FloatAnimationCurveAdapterD0Ev = comdat any

@_ZTVN2ui26FloatAnimationCurveAdapterE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::AnimationCurve"*)* @_ZN3gfx14AnimationCurveD2Ev to i8*), i8* bitcast (void (%"class.ui::FloatAnimationCurveAdapter"*)* @_ZN2ui26FloatAnimationCurveAdapterD0Ev to i8*), i8* bitcast (i64 (%"class.ui::FloatAnimationCurveAdapter"*)* @_ZNK2ui26FloatAnimationCurveAdapter8DurationEv to i8*), i8* bitcast (i32 (%"class.gfx::FloatAnimationCurve"*)* @_ZNK3gfx19FloatAnimationCurve4TypeEv to i8*), i8* bitcast (i8* (%"class.gfx::FloatAnimationCurve"*)* @_ZNK3gfx19FloatAnimationCurve8TypeNameEv to i8*), i8* bitcast (%"class.gfx::AnimationCurve"* (%"class.ui::FloatAnimationCurveAdapter"*)* @_ZNK2ui26FloatAnimationCurveAdapter5CloneEv to i8*), i8* bitcast (void (%"class.gfx::FloatAnimationCurve"*, i64, i32, %"class.gfx::KeyframeModel"*)* @_ZNK3gfx19FloatAnimationCurve4TickEN4base9TimeDeltaEiPNS_13KeyframeModelE to i8*), i8* bitcast (i1 (%"class.gfx::AnimationCurve"*)* @_ZNK3gfx14AnimationCurve22PreservesAxisAlignmentEv to i8*), i8* bitcast (i1 (%"class.gfx::AnimationCurve"*, float*)* @_ZNK3gfx14AnimationCurve12MaximumScaleEPf to i8*), i8* bitcast (i64 (%"class.gfx::AnimationCurve"*)* @_ZNK3gfx14AnimationCurve12TickIntervalEv to i8*), i8* bitcast (float (%"class.ui::FloatAnimationCurveAdapter"*, i64)* @_ZNK2ui26FloatAnimationCurveAdapter8GetValueEN4base9TimeDeltaE to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN2ui26FloatAnimationCurveAdapterC1EN3gfx5Tween4TypeEffN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.ui::FloatAnimationCurveAdapter"*, i32, float, float, i64), void (%"class.ui::FloatAnimationCurveAdapter"*, i32, float, float, i64)* @_ZN2ui26FloatAnimationCurveAdapterC2EN3gfx5Tween4TypeEffN4base9TimeDeltaE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui26FloatAnimationCurveAdapterC2EN3gfx5Tween4TypeEffN4base9TimeDeltaE(%"class.ui::FloatAnimationCurveAdapter"* nocapture, i32, float, float, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 0, i32 1
  store %"class.gfx::FloatAnimationCurve::Target"* null, %"class.gfx::FloatAnimationCurve::Target"** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui26FloatAnimationCurveAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 2
  store float %2, float* %9, align 4
  %10 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 3
  store float %3, float* %10, align 8
  %11 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 4, i32 0
  store i64 %4, i64* %11, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2ui26FloatAnimationCurveAdapter8DurationEv(%"class.ui::FloatAnimationCurveAdapter"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 4, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::AnimationCurve"* @_ZNK2ui26FloatAnimationCurveAdapter5CloneEv(%"class.ui::FloatAnimationCurveAdapter"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #8
  %3 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 2
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 3
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 4, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = bitcast i8* %2 to i32 (...)***
  %14 = getelementptr inbounds i8, i8* %2, i64 8
  %15 = bitcast i8* %14 to %"class.gfx::FloatAnimationCurve::Target"**
  store %"class.gfx::FloatAnimationCurve::Target"* null, %"class.gfx::FloatAnimationCurve::Target"** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN2ui26FloatAnimationCurveAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %16 = getelementptr inbounds i8, i8* %2, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %4, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 20
  %19 = bitcast i8* %18 to i32*
  store i32 %7, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %2, i64 24
  %21 = bitcast i8* %20 to i32*
  store i32 %10, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = bitcast i8* %22 to i64*
  store i64 %12, i64* %23, align 8
  %24 = bitcast i8* %2 to %"class.gfx::AnimationCurve"*
  ret %"class.gfx::AnimationCurve"* %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK2ui26FloatAnimationCurveAdapter8GetValueEN4base9TimeDeltaE(%"class.ui::FloatAnimationCurveAdapter"* nocapture readonly, i64) unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 4, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %6, %1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 3
  %10 = load float, float* %9, align 8
  br label %26

11:                                               ; preds = %2
  %12 = icmp slt i64 %1, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 2
  %15 = load float, float* %14, align 4
  br label %26

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 %6)
  %20 = call double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32 %18, double %19) #9
  %21 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 2
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.ui::FloatAnimationCurveAdapter", %"class.ui::FloatAnimationCurveAdapter"* %0, i64 0, i32 3
  %24 = load float, float* %23, align 8
  %25 = call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %20, float %22, float %24) #9
  br label %26

26:                                               ; preds = %16, %13, %8
  %27 = phi float [ %10, %8 ], [ %15, %13 ], [ %25, %16 ]
  ret float %27
}

declare float @_ZN3gfx5Tween17FloatValueBetweenEdff(double, float, float) local_unnamed_addr #5

declare double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32, double) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #9
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx14AnimationCurveD2Ev(%"class.gfx::AnimationCurve"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui26FloatAnimationCurveAdapterD0Ev(%"class.ui::FloatAnimationCurveAdapter"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.ui::FloatAnimationCurveAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare i32 @_ZNK3gfx19FloatAnimationCurve4TypeEv(%"class.gfx::FloatAnimationCurve"*) unnamed_addr #5

declare i8* @_ZNK3gfx19FloatAnimationCurve8TypeNameEv(%"class.gfx::FloatAnimationCurve"*) unnamed_addr #5

declare void @_ZNK3gfx19FloatAnimationCurve4TickEN4base9TimeDeltaEiPNS_13KeyframeModelE(%"class.gfx::FloatAnimationCurve"*, i64, i32, %"class.gfx::KeyframeModel"*) unnamed_addr #5

declare zeroext i1 @_ZNK3gfx14AnimationCurve22PreservesAxisAlignmentEv(%"class.gfx::AnimationCurve"*) unnamed_addr #5

declare zeroext i1 @_ZNK3gfx14AnimationCurve12MaximumScaleEPf(%"class.gfx::AnimationCurve"*, float*) unnamed_addr #5

declare i64 @_ZNK3gfx14AnimationCurve12TickIntervalEv(%"class.gfx::AnimationCurve"*) unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
