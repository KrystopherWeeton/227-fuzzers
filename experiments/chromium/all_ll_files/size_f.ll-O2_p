; ModuleID = '../../ui/gfx/geometry/size_f.cc'
source_filename = "../../ui/gfx/geometry/size_f.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@.str = private unnamed_addr constant [6 x i8] c"%fx%f\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK3gfx5SizeF7GetAreaEv(%"class.gfx::SizeF"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fmul float %3, %5
  ret float %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5SizeF7EnlargeEff(%"class.gfx::SizeF"* nocapture, float, float) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fadd float %5, %1
  %7 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %8 = load float, float* %7, align 4
  %9 = fadd float %8, %2
  %10 = fcmp ogt float %6, 0x3EB0000000000000
  %11 = select i1 %10, float %6, float 0.000000e+00
  store float %11, float* %4, align 4
  %12 = fcmp ogt float %9, 0x3EB0000000000000
  %13 = select i1 %12, float %9, float 0.000000e+00
  store float %13, float* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5SizeF8SetToMinERKS0_(%"class.gfx::SizeF"* nocapture, %"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp ole float %4, %6
  %8 = select i1 %7, float %4, float %6
  store float %8, float* %3, align 4
  %9 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp ole float %10, %12
  %14 = select i1 %13, float %10, float %12
  store float %14, float* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx5SizeF8SetToMaxERKS0_(%"class.gfx::SizeF"* nocapture, %"class.gfx::SizeF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = fcmp oge float %4, %6
  %8 = select i1 %7, float %4, float %6
  store float %8, float* %3, align 4
  %9 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %0, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oge float %10, %12
  %14 = select i1 %13, float %10, float %12
  store float %14, float* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx5SizeF8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::SizeF"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fpext float %4 to double
  %6 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %1, i64 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), double %5, double %8) #5
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZN3gfx9ScaleSizeERKNS_5SizeFEff(%"class.gfx::SizeF"* nocapture readonly dereferenceable(8), float, float) local_unnamed_addr #4 {
  %4 = bitcast %"class.gfx::SizeF"* %0 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = insertelement <2 x float> undef, float %1, i32 0
  %7 = insertelement <2 x float> %6, float %2, i32 1
  %8 = fmul <2 x float> %5, %7
  %9 = fcmp ogt <2 x float> %8, <float 0x3EB0000000000000, float 0x3EB0000000000000>
  %10 = select <2 x i1> %9, <2 x float> %8, <2 x float> zeroinitializer
  ret <2 x float> %10
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
