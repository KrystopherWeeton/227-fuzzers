; ModuleID = '../../third_party/openscreen/src/discovery/mdns/mdns_probe.cc'
source_filename = "../../third_party/openscreen/src/discovery/mdns/mdns_probe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.openscreen::discovery::MdnsProbe" = type { %"class.openscreen::discovery::MdnsReceiver::ResponseClient", %"class.openscreen::discovery::DomainName", %"class.openscreen::IPAddress", %"class.openscreen::discovery::MdnsRecord" }
%"class.openscreen::discovery::MdnsReceiver::ResponseClient" = type { i32 (...)** }
%"class.openscreen::discovery::DomainName" = type { i64, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.openscreen::IPAddress" = type { i32, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.openscreen::discovery::MdnsRecord" = type { %"class.openscreen::discovery::DomainName", i16, i16, i32, %"class.std::__1::chrono::duration", %"class.absl::variant" }
%"class.std::__1::chrono::duration" = type { i64 }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.13" }
%"union.absl::variant_internal::DestructibleUnionImpl.13" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"class.openscreen::discovery::NsecRecordRdata" }
%"class.openscreen::discovery::NsecRecordRdata" = type { %"class.std::__1::vector.6", %"class.std::__1::vector.19", %"class.openscreen::discovery::DomainName" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { i8*, i8*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { i16*, i16*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i16* }
%"class.openscreen::discovery::MdnsProbe::Observer" = type { i32 (...)** }
%"class.openscreen::discovery::MdnsProbeImpl" = type <{ %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsRandom"*, %"class.openscreen::TaskRunner"*, i64 ()*, %"class.openscreen::Alarm", %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsProbe::Observer"*, i32, i8, [3 x i8] }>
%"class.openscreen::Alarm" = type { i64 ()*, %"class.openscreen::TaskRunner"*, %"class.std::__1::packaged_task", %"class.std::__1::chrono::time_point", %"class.openscreen::Alarm::CancelableFunctor"*, %"class.std::__1::chrono::time_point", [8 x i8] }
%"class.std::__1::packaged_task" = type { %"class.std::__1::__packaged_task_function", %"class.std::__1::promise", [8 x i8] }
%"class.std::__1::__packaged_task_function" = type { %"struct.std::__1::aligned_storage<24, 16>::type", %"class.std::__1::__packaged_task_base"*, [8 x i8] }
%"struct.std::__1::aligned_storage<24, 16>::type" = type { [32 x i8] }
%"class.std::__1::__packaged_task_base" = type { i32 (...)** }
%"class.std::__1::promise" = type { %"class.std::__1::__assoc_sub_state"* }
%"class.std::__1::__assoc_sub_state" = type <{ %"class.std::__1::__shared_count", %"class.std::exception_ptr", %"class.std::__1::mutex", %"class.std::__1::condition_variable", i32, [4 x i8] }>
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::exception_ptr" = type { i8* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.36, %union.anon.38, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.36 = type { i64 }
%union.anon.38 = type { i64 }
%"class.openscreen::Alarm::CancelableFunctor" = type opaque
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration.35" }
%"class.std::__1::chrono::duration.35" = type { i64 }
%"class.openscreen::discovery::MdnsSender" = type { i32 (...)**, %"class.openscreen::UdpSocket"* }
%"class.openscreen::UdpSocket" = type { i32 (...)** }
%"class.openscreen::discovery::MdnsReceiver" = type { %"class.std::__1::function", i32, %"class.std::__1::vector.54", %"struct.openscreen::discovery::Config" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.openscreen::discovery::MdnsMessage"*, %"struct.openscreen::IPEndpoint"*)* }
%"class.openscreen::discovery::MdnsMessage" = type { i64, i16, i8, i32, %"class.std::__1::vector.40", %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.47" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::MdnsQuestion"*, %"class.std::__1::__compressed_pair.42" }
%"class.openscreen::discovery::MdnsQuestion" = type { %"class.openscreen::discovery::DomainName", i16, i16, i32 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.openscreen::discovery::MdnsQuestion"* }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.openscreen::discovery::MdnsRecord"* }
%"struct.openscreen::IPEndpoint" = type <{ %"class.openscreen::IPAddress", i16, [2 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.openscreen::discovery::MdnsReceiver::ResponseClient"**, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.openscreen::discovery::MdnsReceiver::ResponseClient"** }
%"struct.openscreen::discovery::Config" = type <{ %"class.std::__1::vector.61", i32, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.openscreen::InterfaceInfo"*, %"struct.openscreen::InterfaceInfo"*, %"class.std::__1::__compressed_pair.71" }
%"struct.openscreen::InterfaceInfo" = type { i64, %"struct.std::__1::array.63", %"class.std::__1::basic_string", i32, %"class.std::__1::vector.64" }
%"struct.std::__1::array.63" = type { [6 x i8] }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.openscreen::IPSubnet"*, %"struct.openscreen::IPSubnet"*, %"class.std::__1::__compressed_pair.66" }
%"struct.openscreen::IPSubnet" = type <{ %"class.openscreen::IPAddress", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.openscreen::IPSubnet"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.openscreen::InterfaceInfo"* }
%"class.openscreen::discovery::MdnsRandom" = type { %"class.std::__1::linear_congruential_engine", %"class.std::__1::uniform_int_distribution", %"class.std::__1::uniform_real_distribution", %"class.std::__1::uniform_int_distribution", %"class.std::__1::uniform_int_distribution", %"class.std::__1::uniform_int_distribution" }
%"class.std::__1::linear_congruential_engine" = type { i64 }
%"class.std::__1::uniform_real_distribution" = type { %"class.std::__1::uniform_real_distribution<double>::param_type" }
%"class.std::__1::uniform_real_distribution<double>::param_type" = type { double, double }
%"class.std::__1::uniform_int_distribution" = type { %"class.std::__1::uniform_int_distribution<long>::param_type" }
%"class.std::__1::uniform_int_distribution<long>::param_type" = type { i64, i64 }
%"class.openscreen::TaskRunner" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"* }
%"class.openscreen::Error" = type { i8, %"class.std::__1::basic_string" }
%"class.openscreen::discovery::RawRecordRdata" = type { %"class.std::__1::vector.6" }
%"class.openscreen::discovery::SrvRecordRdata" = type { i16, i16, i16, %"class.openscreen::discovery::DomainName" }
%"class.openscreen::discovery::PtrRecordRdata" = type { %"class.openscreen::discovery::DomainName" }
%"class.openscreen::discovery::TxtRecordRdata" = type { i64, %"class.std::__1::vector" }
%"class.openscreen::discovery::OptRecordRdata" = type { %"class.std::__1::vector.27", i64 }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.openscreen::discovery::OptRecordRdata::Option"*, %"struct.openscreen::discovery::OptRecordRdata::Option"*, %"class.std::__1::__compressed_pair.29" }
%"struct.openscreen::discovery::OptRecordRdata::Option" = type { i16, i16, %"class.std::__1::vector.6" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.openscreen::discovery::OptRecordRdata::Option"* }
%"class.std::__1::__packaged_task_func" = type { %"class.std::__1::__packaged_task_base", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.anon }
%class.anon = type { %"class.openscreen::discovery::MdnsProbeImpl"* }
%"class.std::__1::__packaged_task_func.96" = type { %"class.std::__1::__packaged_task_base", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.anon.76 }
%class.anon.76 = type { %"class.openscreen::discovery::MdnsProbeImpl"* }
%"class.std::__1::__packaged_task_func.104" = type { %"class.std::__1::__packaged_task_base", %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %class.anon.77 }
%class.anon.77 = type { %"class.openscreen::discovery::MdnsProbeImpl"* }

$_ZN10openscreen9discovery11MdnsMessageD2Ev = comdat any

$_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m = comdat any

$_ZNSt3__124uniform_int_distributionIlEclINS_26linear_congruential_engineImLm48271ELm0ELm2147483647EEEEElRT_RKNS1_10param_typeE = comdat any

$_ZNSt3__120__packaged_task_baseIFvvEED2Ev = comdat any

@_ZTVN10openscreen9discovery9MdnsProbeE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.openscreen::discovery::MdnsProbe"*)* @_ZN10openscreen9discovery9MdnsProbeD2Ev to i8*), i8* bitcast (void (%"class.openscreen::discovery::MdnsProbe"*)* @_ZN10openscreen9discovery9MdnsProbeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN10openscreen9discovery13MdnsProbeImplE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.openscreen::discovery::MdnsProbeImpl"*)* @_ZN10openscreen9discovery13MdnsProbeImplD2Ev to i8*), i8* bitcast (void (%"class.openscreen::discovery::MdnsProbeImpl"*)* @_ZN10openscreen9discovery13MdnsProbeImplD0Ev to i8*), i8* bitcast (void (%"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsMessage"*)* @_ZN10openscreen9discovery13MdnsProbeImpl17OnMessageReceivedERKNS0_11MdnsMessageE to i8*), i8* bitcast (void (%"class.openscreen::discovery::MdnsProbeImpl"*, i64)* @_ZN10openscreen9discovery13MdnsProbeImpl8PostponeENSt3__16chrono8durationIxNS2_5ratioILl1ELl1EEEEE to i8*)] }, align 8
@_ZTVN10openscreen9discovery9MdnsProbe8ObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.openscreen::discovery::MdnsProbe::Observer"*)* @_ZN10openscreen9discovery9MdnsProbe8ObserverD2Ev to i8*), i8* bitcast (void (%"class.openscreen::discovery::MdnsProbe::Observer"*)* @_ZN10openscreen9discovery9MdnsProbe8ObserverD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEEE" = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__packaged_task_base"*)* @_ZNSt3__120__packaged_task_baseIFvvEED2Ev to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEED0Ev" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func"*, %"class.std::__1::__packaged_task_base"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEE9__move_toEPNS_20__packaged_task_baseISU_EE" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEE7destroyEv" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEE18destroy_deallocateEv" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEEclEv" to i8*)] }, align 8
@"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEEE" = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__packaged_task_base"*)* @_ZNSt3__120__packaged_task_baseIFvvEED2Ev to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.96"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEED0Ev" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.96"*, %"class.std::__1::__packaged_task_base"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEE9__move_toEPNS_20__packaged_task_baseIS7_EE" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.96"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEE7destroyEv" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.96"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEE18destroy_deallocateEv" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.96"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEEclEv" to i8*)] }, align 8
@"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEEE" = internal unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__packaged_task_base"*)* @_ZNSt3__120__packaged_task_baseIFvvEED2Ev to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.104"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEED0Ev" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.104"*, %"class.std::__1::__packaged_task_base"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEE9__move_toEPNS_20__packaged_task_baseISC_EE" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.104"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEE7destroyEv" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.104"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEE18destroy_deallocateEv" to i8*), i8* bitcast (void (%"class.std::__1::__packaged_task_func.104"*)* @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEEclEv" to i8*)] }, align 8

@_ZN10openscreen9discovery9MdnsProbeD1Ev = hidden unnamed_addr alias void (%"class.openscreen::discovery::MdnsProbe"*), void (%"class.openscreen::discovery::MdnsProbe"*)* @_ZN10openscreen9discovery9MdnsProbeD2Ev
@_ZN10openscreen9discovery9MdnsProbe8ObserverD1Ev = hidden unnamed_addr alias void (%"class.openscreen::discovery::MdnsProbe::Observer"*), void (%"class.openscreen::discovery::MdnsProbe::Observer"*)* @_ZN10openscreen9discovery9MdnsProbe8ObserverD2Ev
@_ZN10openscreen9discovery13MdnsProbeImplC1EPNS0_10MdnsSenderEPNS0_12MdnsReceiverEPNS0_10MdnsRandomEPNS_10TaskRunnerEPFNSt3__16chrono10time_pointINS_18TrivialClockTraitsENSB_8durationIxNSA_5ratioILl1ELl1000000EEEEEEEvEPNS0_9MdnsProbe8ObserverENS0_10DomainNameENS_9IPAddressE = hidden unnamed_addr alias void (%"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsRandom"*, %"class.openscreen::TaskRunner"*, i64 ()*, %"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::DomainName"*, %"class.openscreen::IPAddress"*), void (%"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsRandom"*, %"class.openscreen::TaskRunner"*, i64 ()*, %"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::DomainName"*, %"class.openscreen::IPAddress"*)* @_ZN10openscreen9discovery13MdnsProbeImplC2EPNS0_10MdnsSenderEPNS0_12MdnsReceiverEPNS0_10MdnsRandomEPNS_10TaskRunnerEPFNSt3__16chrono10time_pointINS_18TrivialClockTraitsENSB_8durationIxNSA_5ratioILl1ELl1000000EEEEEEEvEPNS0_9MdnsProbe8ObserverENS0_10DomainNameENS_9IPAddressE
@_ZN10openscreen9discovery13MdnsProbeImplD1Ev = hidden unnamed_addr alias void (%"class.openscreen::discovery::MdnsProbeImpl"*), void (%"class.openscreen::discovery::MdnsProbeImpl"*)* @_ZN10openscreen9discovery13MdnsProbeImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery9MdnsProbeC2ENS0_10DomainNameENS_9IPAddressE(%"class.openscreen::discovery::MdnsProbe"*, %"class.openscreen::discovery::DomainName"*, %"class.openscreen::IPAddress"* nocapture readonly byval(%"class.openscreen::IPAddress") align 8) unnamed_addr #0 align 2 {
  %4 = alloca %"class.openscreen::discovery::DomainName", align 8
  %5 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery9MdnsProbeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 1
  tail call void @_ZN10openscreen9discovery10DomainNameC1EOS1_(%"class.openscreen::discovery::DomainName"* %6, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %1) #11
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 2
  %8 = bitcast %"class.openscreen::IPAddress"* %7 to i8*
  %9 = bitcast %"class.openscreen::IPAddress"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %9, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 3
  call void @_ZN10openscreen9discovery10DomainNameC1ERKS1_(%"class.openscreen::discovery::DomainName"* nonnull %4, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %6) #11
  call void @_ZN10openscreen9discovery19CreateAddressRecordENS0_10DomainNameERKNS_9IPAddressE(%"class.openscreen::discovery::MdnsRecord"* sret %10, %"class.openscreen::discovery::DomainName"* nonnull %4, %"class.openscreen::IPAddress"* dereferenceable(20) %7) #11
  %11 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %17 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %4, i64 0, i32 1, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %13
  br i1 %19, label %35, label %20

20:                                               ; preds = %15, %30
  %21 = phi %"class.std::__1::basic_string"* [ %22, %30 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %27, %20
  %31 = icmp eq %"class.std::__1::basic_string"* %22, %13
  br i1 %31, label %32, label %20

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector"* %11 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %15
  %36 = phi i8* [ %34, %32 ], [ %16, %15 ]
  store %"class.std::__1::basic_string"* %13, %"class.std::__1::basic_string"** %17, align 8
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %3, %35
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10openscreen9discovery10DomainNameC1EOS1_(%"class.openscreen::discovery::DomainName"*, %"class.openscreen::discovery::DomainName"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN10openscreen9discovery19CreateAddressRecordENS0_10DomainNameERKNS_9IPAddressE(%"class.openscreen::discovery::MdnsRecord"* sret, %"class.openscreen::discovery::DomainName"*, %"class.openscreen::IPAddress"* dereferenceable(20)) local_unnamed_addr #3

declare void @_ZN10openscreen9discovery10DomainNameC1ERKS1_(%"class.openscreen::discovery::DomainName"*, %"class.openscreen::discovery::DomainName"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery9MdnsProbeD2Ev(%"class.openscreen::discovery::MdnsProbe"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", align 8
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery9MdnsProbeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %2, i64 0, i32 0
  store %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"* %4, %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"** %6, align 8
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m(%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* nonnull dereferenceable(8) %2, i64 %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %9 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = icmp eq %"class.std::__1::basic_string"* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 1
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %16, %11
  br i1 %17, label %33, label %18

18:                                               ; preds = %13, %28
  %19 = phi %"class.std::__1::basic_string"* [ %20, %28 ], [ %16, %13 ]
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 -1
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %25, %18
  %29 = icmp eq %"class.std::__1::basic_string"* %20, %11
  br i1 %29, label %30, label %18

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %9 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %13
  %34 = phi i8* [ %32, %30 ], [ %14, %13 ]
  store %"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"** %15, align 8
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %1, %33
  %36 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  %39 = icmp eq %"class.std::__1::basic_string"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %42 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %38
  br i1 %44, label %60, label %45

45:                                               ; preds = %40, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %43, %40 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %38
  br i1 %56, label %57, label %45

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::vector"* %36 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %40
  %61 = phi i8* [ %59, %57 ], [ %41, %40 ]
  store %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"** %42, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %35, %60
  %63 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbe", %"class.openscreen::discovery::MdnsProbe"* %0, i64 0, i32 0
  call void @_ZN10openscreen9discovery12MdnsReceiver14ResponseClientD2Ev(%"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %63) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10openscreen9discovery12MdnsReceiver14ResponseClientD2Ev(%"class.openscreen::discovery::MdnsReceiver::ResponseClient"*) unnamed_addr #1

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery9MdnsProbeD0Ev(%"class.openscreen::discovery::MdnsProbe"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10openscreen9discovery9MdnsProbe8ObserverD2Ev(%"class.openscreen::discovery::MdnsProbe::Observer"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery9MdnsProbe8ObserverD0Ev(%"class.openscreen::discovery::MdnsProbe::Observer"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImplC2EPNS0_10MdnsSenderEPNS0_12MdnsReceiverEPNS0_10MdnsRandomEPNS_10TaskRunnerEPFNSt3__16chrono10time_pointINS_18TrivialClockTraitsENSB_8durationIxNSA_5ratioILl1ELl1000000EEEEEEEvEPNS0_9MdnsProbe8ObserverENS0_10DomainNameENS_9IPAddressE(%"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsRandom"*, %"class.openscreen::TaskRunner"*, i64 ()*, %"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::DomainName"*, %"class.openscreen::IPAddress"* nocapture readonly byval(%"class.openscreen::IPAddress") align 8) unnamed_addr #0 align 2 {
  %10 = alloca %"class.openscreen::discovery::DomainName", align 8
  %11 = alloca %"class.std::__1::packaged_task", align 16
  %12 = alloca %"class.openscreen::discovery::DomainName", align 8
  call void @_ZN10openscreen9discovery10DomainNameC1EOS1_(%"class.openscreen::discovery::DomainName"* nonnull %12, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %7) #11
  %13 = bitcast %"class.openscreen::IPAddress"* %8 to i8*
  %14 = bitcast %"class.openscreen::discovery::DomainName"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14)
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery9MdnsProbeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 1
  call void @_ZN10openscreen9discovery10DomainNameC1EOS1_(%"class.openscreen::discovery::DomainName"* %16, %"class.openscreen::discovery::DomainName"* nonnull dereferenceable(32) %12) #11
  %17 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 2
  %18 = bitcast %"class.openscreen::IPAddress"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %13, i64 20, i1 false)
  %19 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 3
  call void @_ZN10openscreen9discovery10DomainNameC1ERKS1_(%"class.openscreen::discovery::DomainName"* nonnull %10, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %16) #11
  call void @_ZN10openscreen9discovery19CreateAddressRecordENS0_10DomainNameERKNS_9IPAddressE(%"class.openscreen::discovery::MdnsRecord"* sret %19, %"class.openscreen::discovery::DomainName"* nonnull %10, %"class.openscreen::IPAddress"* dereferenceable(20) %17) #11
  %20 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %10, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = icmp eq %"class.std::__1::basic_string"* %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %9
  %25 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %26 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %10, i64 0, i32 1, i32 0, i32 1
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %28 = icmp eq %"class.std::__1::basic_string"* %27, %22
  br i1 %28, label %44, label %29

29:                                               ; preds = %24, %39
  %30 = phi %"class.std::__1::basic_string"* [ %31, %39 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 -1
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %36, %29
  %40 = icmp eq %"class.std::__1::basic_string"* %31, %22
  br i1 %40, label %41, label %29

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector"* %20 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %24
  %45 = phi i8* [ %43, %41 ], [ %25, %24 ]
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %26, align 8
  call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %9, %44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14)
  %47 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %12, i64 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %48, align 8
  %50 = icmp eq %"class.std::__1::basic_string"* %49, null
  br i1 %50, label %73, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %53 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %12, i64 0, i32 1, i32 0, i32 1
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %53, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %49
  br i1 %55, label %71, label %56

56:                                               ; preds = %51, %66
  %57 = phi %"class.std::__1::basic_string"* [ %58, %66 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 -1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %63, %56
  %67 = icmp eq %"class.std::__1::basic_string"* %58, %49
  br i1 %67, label %68, label %56

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::vector"* %47 to i8**
  %70 = load i8*, i8** %69, align 8
  br label %71

71:                                               ; preds = %68, %51
  %72 = phi i8* [ %70, %68 ], [ %52, %51 ]
  store %"class.std::__1::basic_string"* %49, %"class.std::__1::basic_string"** %53, align 8
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %46, %71
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery13MdnsProbeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 16
  %74 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 1
  store %"class.openscreen::discovery::MdnsRandom"* %3, %"class.openscreen::discovery::MdnsRandom"** %74, align 8
  %75 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 2
  store %"class.openscreen::TaskRunner"* %4, %"class.openscreen::TaskRunner"** %75, align 16
  %76 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 3
  store i64 ()* %5, i64 ()** %76, align 8
  %77 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  call void @_ZN10openscreen5AlarmC1EPFNSt3__16chrono10time_pointINS_18TrivialClockTraitsENS2_8durationIxNS1_5ratioILl1ELl1000000EEEEEEEvEPNS_10TaskRunnerE(%"class.openscreen::Alarm"* %77, i64 ()* %5, %"class.openscreen::TaskRunner"* %4) #11
  %78 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 5
  store %"class.openscreen::discovery::MdnsSender"* %1, %"class.openscreen::discovery::MdnsSender"** %78, align 16
  %79 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 6
  store %"class.openscreen::discovery::MdnsReceiver"* %2, %"class.openscreen::discovery::MdnsReceiver"** %79, align 8
  %80 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 7
  store %"class.openscreen::discovery::MdnsProbe::Observer"* %6, %"class.openscreen::discovery::MdnsProbe::Observer"** %80, align 16
  %81 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 8
  store i32 0, i32* %81, align 8
  %82 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 9
  store i8 1, i8* %82, align 4
  %83 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0
  call void @_ZN10openscreen9discovery12MdnsReceiver19AddResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"* %2, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %83) #11
  %84 = load %"class.openscreen::discovery::MdnsRandom"*, %"class.openscreen::discovery::MdnsRandom"** %74, align 8
  %85 = getelementptr inbounds %"class.openscreen::discovery::MdnsRandom", %"class.openscreen::discovery::MdnsRandom"* %84, i64 0, i32 5
  %86 = getelementptr inbounds %"class.openscreen::discovery::MdnsRandom", %"class.openscreen::discovery::MdnsRandom"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::uniform_int_distribution", %"class.std::__1::uniform_int_distribution"* %85, i64 0, i32 0
  %88 = call i64 @_ZNSt3__124uniform_int_distributionIlEclINS_26linear_congruential_engineImLm48271ELm0ELm2147483647EEEEElRT_RKNS1_10param_typeE(%"class.std::__1::uniform_int_distribution"* %85, %"class.std::__1::linear_congruential_engine"* dereferenceable(8) %86, %"class.std::__1::uniform_int_distribution<long>::param_type"* dereferenceable(16) %87) #11
  %89 = mul nsw i64 %88, 1000
  %90 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %11, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %90)
  %91 = ptrtoint %"class.openscreen::discovery::MdnsProbeImpl"* %0 to i64
  %92 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %11, i64 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %11, i64 0, i32 0, i32 1
  %94 = bitcast %"class.std::__1::packaged_task"* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEEE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 16
  %95 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %11, i64 0, i32 0, i32 0, i32 0, i64 8
  %96 = bitcast i8* %95 to i64*
  store i64 %91, i64* %96, align 8
  %97 = bitcast %"class.std::__1::__packaged_task_base"** %93 to %"class.std::__1::__packaged_task_function"**
  store %"class.std::__1::__packaged_task_function"* %92, %"class.std::__1::__packaged_task_function"** %97, align 16
  %98 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %11, i64 0, i32 1
  call void @_ZNSt3__17promiseIvEC1Ev(%"class.std::__1::promise"* %98) #11
  %99 = getelementptr inbounds %"class.openscreen::Alarm", %"class.openscreen::Alarm"* %77, i64 0, i32 0
  %100 = load i64 ()*, i64 ()** %99, align 16
  %101 = call i64 %100() #11
  %102 = add nsw i64 %101, %89
  call void @_ZN10openscreen5Alarm16ScheduleWithTaskENSt3__113packaged_taskIFvvEEENS1_6chrono10time_pointINS_18TrivialClockTraitsENS5_8durationIxNS1_5ratioILl1ELl1000000EEEEEEE(%"class.openscreen::Alarm"* %77, %"class.std::__1::packaged_task"* nonnull %11, i64 %102) #11
  call void @_ZNSt3__17promiseIvED1Ev(%"class.std::__1::promise"* %98) #11
  %103 = load %"class.std::__1::__packaged_task_base"*, %"class.std::__1::__packaged_task_base"** %93, align 16
  %104 = bitcast %"class.std::__1::packaged_task"* %11 to %"class.std::__1::__packaged_task_base"*
  %105 = icmp eq %"class.std::__1::__packaged_task_base"* %103, %104
  br i1 %105, label %106, label %111

106:                                              ; preds = %73
  %107 = bitcast %"class.std::__1::__packaged_task_base"* %103 to void (%"class.std::__1::__packaged_task_base"*)***
  %108 = load void (%"class.std::__1::__packaged_task_base"*)**, void (%"class.std::__1::__packaged_task_base"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %108, i64 3
  %110 = load void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %109, align 8
  call void %110(%"class.std::__1::__packaged_task_base"* %103) #11
  br label %118

111:                                              ; preds = %73
  %112 = icmp eq %"class.std::__1::__packaged_task_base"* %103, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %111
  %114 = bitcast %"class.std::__1::__packaged_task_base"* %103 to void (%"class.std::__1::__packaged_task_base"*)***
  %115 = load void (%"class.std::__1::__packaged_task_base"*)**, void (%"class.std::__1::__packaged_task_base"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %115, i64 4
  %117 = load void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %116, align 8
  call void %117(%"class.std::__1::__packaged_task_base"* nonnull %103) #11
  br label %118

118:                                              ; preds = %106, %111, %113
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %90)
  ret void
}

declare void @_ZN10openscreen5AlarmC1EPFNSt3__16chrono10time_pointINS_18TrivialClockTraitsENS2_8durationIxNS1_5ratioILl1ELl1000000EEEEEEEvEPNS_10TaskRunnerE(%"class.openscreen::Alarm"*, i64 ()*, %"class.openscreen::TaskRunner"*) unnamed_addr #3

declare void @_ZN10openscreen9discovery12MdnsReceiver19AddResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImplD2Ev(%"class.openscreen::discovery::MdnsProbeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery13MdnsProbeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"* %7) #11
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 6
  %9 = load %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver"** %8, align 8
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen9discovery12MdnsReceiver22RemoveResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"* %9, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %10) #11
  store i8 0, i8* %3, align 4
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5AlarmD1Ev(%"class.openscreen::Alarm"* %12) #11
  %13 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0
  tail call void @_ZN10openscreen9discovery9MdnsProbeD2Ev(%"class.openscreen::discovery::MdnsProbe"* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImpl4StopEv(%"class.openscreen::discovery::MdnsProbeImpl"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"* %6) #11
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 6
  %8 = load %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver"** %7, align 8
  %9 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen9discovery12MdnsReceiver22RemoveResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"* %8, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %9) #11
  store i8 0, i8* %2, align 4
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10openscreen5AlarmD1Ev(%"class.openscreen::Alarm"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImplD0Ev(%"class.openscreen::discovery::MdnsProbeImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10openscreen9discovery13MdnsProbeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"* %7) #11
  %8 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 6
  %9 = load %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver"** %8, align 8
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen9discovery12MdnsReceiver22RemoveResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"* %9, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %10) #11
  store i8 0, i8* %3, align 4
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5AlarmD1Ev(%"class.openscreen::Alarm"* %12) #11
  %13 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0
  tail call void @_ZN10openscreen9discovery9MdnsProbeD2Ev(%"class.openscreen::discovery::MdnsProbe"* %13) #11
  %14 = bitcast %"class.openscreen::discovery::MdnsProbeImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEv(%"class.openscreen::discovery::MdnsProbeImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::packaged_task", align 16
  %3 = alloca %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", align 8
  %4 = alloca %"class.openscreen::discovery::MdnsMessage", align 8
  %5 = alloca %"class.openscreen::discovery::MdnsQuestion", align 8
  %6 = alloca %"class.openscreen::discovery::DomainName", align 8
  %7 = alloca %"class.openscreen::discovery::MdnsQuestion", align 8
  %8 = alloca %"class.openscreen::discovery::MdnsRecord", align 8
  %9 = alloca %"class.openscreen::Error", align 8
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  %13 = icmp slt i32 %11, 3
  br i1 %13, label %14, label %176

14:                                               ; preds = %1
  %15 = bitcast %"class.openscreen::discovery::MdnsMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 112, i1 false)
  %16 = tail call zeroext i16 @_ZN10openscreen9discovery15CreateMessageIdEv() #11
  call void @_ZN10openscreen9discovery11MdnsMessageC1EtNS0_11MessageTypeE(%"class.openscreen::discovery::MdnsMessage"* nonnull %4, i16 zeroext %16, i32 0) #11
  %17 = bitcast %"class.openscreen::discovery::MdnsQuestion"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  %18 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 1
  call void @_ZN10openscreen9discovery10DomainNameC1ERKS1_(%"class.openscreen::discovery::DomainName"* nonnull %6, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %18) #11
  call void @_ZN10openscreen9discovery12MdnsQuestionC1ENS0_10DomainNameENS0_7DnsTypeENS0_8DnsClassENS0_12ResponseTypeE(%"class.openscreen::discovery::MdnsQuestion"* nonnull %5, %"class.openscreen::discovery::DomainName"* nonnull %6, i16 zeroext 255, i16 zeroext 1, i32 1) #11
  %19 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %6, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %22 = icmp eq %"class.std::__1::basic_string"* %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %25 = getelementptr inbounds %"class.openscreen::discovery::DomainName", %"class.openscreen::discovery::DomainName"* %6, i64 0, i32 1, i32 0, i32 1
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = icmp eq %"class.std::__1::basic_string"* %26, %21
  br i1 %27, label %43, label %28

28:                                               ; preds = %23, %38
  %29 = phi %"class.std::__1::basic_string"* [ %30, %38 ], [ %26, %23 ]
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 -1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %35, %28
  %39 = icmp eq %"class.std::__1::basic_string"* %30, %21
  br i1 %39, label %40, label %28

40:                                               ; preds = %38
  %41 = bitcast %"class.std::__1::vector"* %19 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %23
  %44 = phi i8* [ %42, %40 ], [ %24, %23 ]
  store %"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"** %25, align 8
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %14, %43
  %46 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %7, i64 0, i32 0
  %47 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %5, i64 0, i32 0
  call void @_ZN10openscreen9discovery10DomainNameC1ERKS1_(%"class.openscreen::discovery::DomainName"* nonnull %46, %"class.openscreen::discovery::DomainName"* nonnull dereferenceable(32) %47) #11
  %48 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %7, i64 0, i32 1
  %49 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %5, i64 0, i32 1
  %50 = bitcast i16* %49 to i64*
  %51 = bitcast i16* %48 to i64*
  %52 = load i64, i64* %50, align 8
  store i64 %52, i64* %51, align 8
  call void @_ZN10openscreen9discovery11MdnsMessage11AddQuestionENS0_12MdnsQuestionE(%"class.openscreen::discovery::MdnsMessage"* nonnull %4, %"class.openscreen::discovery::MdnsQuestion"* nonnull %7) #11
  %53 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %7, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %54, align 8
  %56 = icmp eq %"class.std::__1::basic_string"* %55, null
  br i1 %56, label %79, label %57

57:                                               ; preds = %45
  %58 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %59 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %7, i64 0, i32 0, i32 1, i32 0, i32 1
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %55
  br i1 %61, label %77, label %62

62:                                               ; preds = %57, %72
  %63 = phi %"class.std::__1::basic_string"* [ %64, %72 ], [ %60, %57 ]
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 -1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %62
  %73 = icmp eq %"class.std::__1::basic_string"* %64, %55
  br i1 %73, label %74, label %62

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::vector"* %53 to i8**
  %76 = load i8*, i8** %75, align 8
  br label %77

77:                                               ; preds = %74, %57
  %78 = phi i8* [ %76, %74 ], [ %58, %57 ]
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %59, align 8
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %45, %77
  %80 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 3
  call void @_ZN10openscreen9discovery10MdnsRecordC1ERKS1_(%"class.openscreen::discovery::MdnsRecord"* nonnull %8, %"class.openscreen::discovery::MdnsRecord"* dereferenceable(136) %80) #11
  call void @_ZN10openscreen9discovery11MdnsMessage18AddAuthorityRecordENS0_10MdnsRecordE(%"class.openscreen::discovery::MdnsMessage"* nonnull %4, %"class.openscreen::discovery::MdnsRecord"* nonnull %8) #11
  %81 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %3, i64 0, i32 0
  store %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"* %81, %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"** %83, align 8
  %84 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %8, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m(%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* nonnull dereferenceable(8) %3, i64 %85) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #11
  %86 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %8, i64 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %87, align 8
  %89 = icmp eq %"class.std::__1::basic_string"* %88, null
  br i1 %89, label %112, label %90

90:                                               ; preds = %79
  %91 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %92 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %8, i64 0, i32 0, i32 1, i32 0, i32 1
  %93 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %92, align 8
  %94 = icmp eq %"class.std::__1::basic_string"* %93, %88
  br i1 %94, label %110, label %95

95:                                               ; preds = %90, %105
  %96 = phi %"class.std::__1::basic_string"* [ %97, %105 ], [ %93, %90 ]
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 -1
  %98 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %102, %95
  %106 = icmp eq %"class.std::__1::basic_string"* %97, %88
  br i1 %106, label %107, label %95

107:                                              ; preds = %105
  %108 = bitcast %"class.std::__1::vector"* %86 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %90
  %111 = phi i8* [ %109, %107 ], [ %91, %90 ]
  store %"class.std::__1::basic_string"* %88, %"class.std::__1::basic_string"** %92, align 8
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %79, %110
  %113 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 5
  %114 = load %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsSender"** %113, align 16
  %115 = bitcast %"class.openscreen::discovery::MdnsSender"* %114 to void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)***
  %116 = load void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)**, void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)*, void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)** %116, i64 2
  %118 = load void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)*, void (%"class.openscreen::Error"*, %"class.openscreen::discovery::MdnsSender"*, %"class.openscreen::discovery::MdnsMessage"*)** %117, align 8
  call void %118(%"class.openscreen::Error"* nonnull sret %9, %"class.openscreen::discovery::MdnsSender"* %114, %"class.openscreen::discovery::MdnsMessage"* nonnull dereferenceable(112) %4) #11
  call void @_ZN10openscreen5ErrorD1Ev(%"class.openscreen::Error"* nonnull %9) #11
  %119 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  %120 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %2, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %120)
  %121 = ptrtoint %"class.openscreen::discovery::MdnsProbeImpl"* %0 to i64
  %122 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %2, i64 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %2, i64 0, i32 0, i32 1
  %124 = bitcast %"class.std::__1::packaged_task"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEEE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 16
  %125 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %2, i64 0, i32 0, i32 0, i32 0, i64 8
  %126 = bitcast i8* %125 to i64*
  store i64 %121, i64* %126, align 8
  %127 = bitcast %"class.std::__1::__packaged_task_base"** %123 to %"class.std::__1::__packaged_task_function"**
  store %"class.std::__1::__packaged_task_function"* %122, %"class.std::__1::__packaged_task_function"** %127, align 16
  %128 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %2, i64 0, i32 1
  call void @_ZNSt3__17promiseIvEC1Ev(%"class.std::__1::promise"* %128) #11
  %129 = getelementptr inbounds %"class.openscreen::Alarm", %"class.openscreen::Alarm"* %119, i64 0, i32 0
  %130 = load i64 ()*, i64 ()** %129, align 16
  %131 = call i64 %130() #11
  %132 = add nsw i64 %131, 250000
  call void @_ZN10openscreen5Alarm16ScheduleWithTaskENSt3__113packaged_taskIFvvEEENS1_6chrono10time_pointINS_18TrivialClockTraitsENS5_8durationIxNS1_5ratioILl1ELl1000000EEEEEEE(%"class.openscreen::Alarm"* %119, %"class.std::__1::packaged_task"* nonnull %2, i64 %132) #11
  call void @_ZNSt3__17promiseIvED1Ev(%"class.std::__1::promise"* %128) #11
  %133 = load %"class.std::__1::__packaged_task_base"*, %"class.std::__1::__packaged_task_base"** %123, align 16
  %134 = bitcast %"class.std::__1::packaged_task"* %2 to %"class.std::__1::__packaged_task_base"*
  %135 = icmp eq %"class.std::__1::__packaged_task_base"* %133, %134
  br i1 %135, label %136, label %141

136:                                              ; preds = %112
  %137 = bitcast %"class.std::__1::__packaged_task_base"* %133 to void (%"class.std::__1::__packaged_task_base"*)***
  %138 = load void (%"class.std::__1::__packaged_task_base"*)**, void (%"class.std::__1::__packaged_task_base"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %138, i64 3
  %140 = load void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %139, align 8
  call void %140(%"class.std::__1::__packaged_task_base"* %133) #11
  br label %148

141:                                              ; preds = %112
  %142 = icmp eq %"class.std::__1::__packaged_task_base"* %133, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %141
  %144 = bitcast %"class.std::__1::__packaged_task_base"* %133 to void (%"class.std::__1::__packaged_task_base"*)***
  %145 = load void (%"class.std::__1::__packaged_task_base"*)**, void (%"class.std::__1::__packaged_task_base"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %145, i64 4
  %147 = load void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %146, align 8
  call void %147(%"class.std::__1::__packaged_task_base"* nonnull %133) #11
  br label %148

148:                                              ; preds = %136, %141, %143
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %120)
  %149 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %5, i64 0, i32 0, i32 1
  %150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %149, i64 0, i32 0, i32 0
  %151 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %150, align 8
  %152 = icmp eq %"class.std::__1::basic_string"* %151, null
  br i1 %152, label %175, label %153

153:                                              ; preds = %148
  %154 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  %155 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %156 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %155, align 8
  %157 = icmp eq %"class.std::__1::basic_string"* %156, %151
  br i1 %157, label %173, label %158

158:                                              ; preds = %153, %168
  %159 = phi %"class.std::__1::basic_string"* [ %160, %168 ], [ %156, %153 ]
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 -1
  %161 = bitcast %"class.std::__1::basic_string"* %160 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %165, %158
  %169 = icmp eq %"class.std::__1::basic_string"* %160, %151
  br i1 %169, label %170, label %158

170:                                              ; preds = %168
  %171 = bitcast %"class.std::__1::vector"* %149 to i8**
  %172 = load i8*, i8** %171, align 8
  br label %173

173:                                              ; preds = %170, %153
  %174 = phi i8* [ %172, %170 ], [ %154, %153 ]
  store %"class.std::__1::basic_string"* %151, %"class.std::__1::basic_string"** %155, align 8
  call void @_ZdlPv(i8* %174) #12
  br label %175

175:                                              ; preds = %148, %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #11
  call void @_ZN10openscreen9discovery11MdnsMessageD2Ev(%"class.openscreen::discovery::MdnsMessage"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #11
  br label %193

176:                                              ; preds = %1
  %177 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 9
  %178 = load i8, i8* %177, align 4, !range !2
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"* %181) #11
  %182 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 6
  %183 = load %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver"** %182, align 8
  %184 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN10openscreen9discovery12MdnsReceiver22RemoveResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"* %183, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %184) #11
  store i8 0, i8* %177, align 4
  br label %185

185:                                              ; preds = %176, %180
  %186 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 7
  %187 = load %"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe::Observer"** %186, align 16
  %188 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0
  %189 = bitcast %"class.openscreen::discovery::MdnsProbe::Observer"* %187 to void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)***
  %190 = load void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)**, void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)*, void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)** %190, i64 2
  %192 = load void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)*, void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)** %191, align 8
  tail call void %192(%"class.openscreen::discovery::MdnsProbe::Observer"* %187, %"class.openscreen::discovery::MdnsProbe"* %188) #11
  br label %193

193:                                              ; preds = %185, %175
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i16 @_ZN10openscreen9discovery15CreateMessageIdEv() local_unnamed_addr #3

declare void @_ZN10openscreen9discovery11MdnsMessageC1EtNS0_11MessageTypeE(%"class.openscreen::discovery::MdnsMessage"*, i16 zeroext, i32) unnamed_addr #3

declare void @_ZN10openscreen9discovery12MdnsQuestionC1ENS0_10DomainNameENS0_7DnsTypeENS0_8DnsClassENS0_12ResponseTypeE(%"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::DomainName"*, i16 zeroext, i16 zeroext, i32) unnamed_addr #3

declare void @_ZN10openscreen9discovery11MdnsMessage11AddQuestionENS0_12MdnsQuestionE(%"class.openscreen::discovery::MdnsMessage"*, %"class.openscreen::discovery::MdnsQuestion"*) local_unnamed_addr #3

declare void @_ZN10openscreen9discovery11MdnsMessage18AddAuthorityRecordENS0_10MdnsRecordE(%"class.openscreen::discovery::MdnsMessage"*, %"class.openscreen::discovery::MdnsRecord"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10openscreen5ErrorD1Ev(%"class.openscreen::Error"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10openscreen9discovery11MdnsMessageD2Ev(%"class.openscreen::discovery::MdnsMessage"*) unnamed_addr #8 comdat align 2 {
  %2 = alloca %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", align 8
  %3 = alloca %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", align 8
  %4 = alloca %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", align 8
  %5 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %6, align 8
  %8 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %7, null
  br i1 %8, label %56, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.openscreen::discovery::MdnsRecord"* %7 to i8*
  %11 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %11, align 8
  %13 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %12, %7
  br i1 %13, label %54, label %14

14:                                               ; preds = %9
  %15 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %2 to i8*
  %16 = getelementptr inbounds %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %2, i64 0, i32 0
  br label %17

17:                                               ; preds = %49, %14
  %18 = phi %"class.openscreen::discovery::MdnsRecord"* [ %12, %14 ], [ %19, %49 ]
  %19 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 -1
  %20 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 -1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"* %20, %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"** %16, align 8
  %21 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 -1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m(%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* nonnull dereferenceable(8) %2, i64 %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %23 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 -1, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = icmp eq %"class.std::__1::basic_string"* %25, null
  br i1 %26, label %49, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %29 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 -1, i32 0, i32 1, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %25
  br i1 %31, label %47, label %32

32:                                               ; preds = %27, %42
  %33 = phi %"class.std::__1::basic_string"* [ %34, %42 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %39, %32
  %43 = icmp eq %"class.std::__1::basic_string"* %34, %25
  br i1 %43, label %44, label %32

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::vector"* %23 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %27
  %48 = phi i8* [ %46, %44 ], [ %28, %27 ]
  store %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"** %29, align 8
  call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %47, %17
  %50 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %19, %7
  br i1 %50, label %51, label %17

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::vector.47"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %9, %51
  %55 = phi i8* [ %53, %51 ], [ %10, %9 ]
  store %"class.openscreen::discovery::MdnsRecord"* %7, %"class.openscreen::discovery::MdnsRecord"** %11, align 8
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %1, %54
  %57 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 6
  %58 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %58, align 8
  %60 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %59, null
  br i1 %60, label %108, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.openscreen::discovery::MdnsRecord"* %59 to i8*
  %63 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 6, i32 0, i32 1
  %64 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %63, align 8
  %65 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %64, %59
  br i1 %65, label %106, label %66

66:                                               ; preds = %61
  %67 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %4 to i8*
  %68 = getelementptr inbounds %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %4, i64 0, i32 0
  br label %69

69:                                               ; preds = %101, %66
  %70 = phi %"class.openscreen::discovery::MdnsRecord"* [ %64, %66 ], [ %71, %101 ]
  %71 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %70, i64 -1
  %72 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %70, i64 -1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #11
  store %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"* %72, %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"** %68, align 8
  %73 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %70, i64 -1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m(%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* nonnull dereferenceable(8) %4, i64 %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #11
  %75 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %70, i64 -1, i32 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %76, align 8
  %78 = icmp eq %"class.std::__1::basic_string"* %77, null
  br i1 %78, label %101, label %79

79:                                               ; preds = %69
  %80 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %81 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %70, i64 -1, i32 0, i32 1, i32 0, i32 1
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  %83 = icmp eq %"class.std::__1::basic_string"* %82, %77
  br i1 %83, label %99, label %84

84:                                               ; preds = %79, %94
  %85 = phi %"class.std::__1::basic_string"* [ %86, %94 ], [ %82, %79 ]
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 -1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %91, %84
  %95 = icmp eq %"class.std::__1::basic_string"* %86, %77
  br i1 %95, label %96, label %84

96:                                               ; preds = %94
  %97 = bitcast %"class.std::__1::vector"* %75 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %79
  %100 = phi i8* [ %98, %96 ], [ %80, %79 ]
  store %"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"** %81, align 8
  call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %99, %69
  %102 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %71, %59
  br i1 %102, label %103, label %69

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector.47"* %57 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %61, %103
  %107 = phi i8* [ %105, %103 ], [ %62, %61 ]
  store %"class.openscreen::discovery::MdnsRecord"* %59, %"class.openscreen::discovery::MdnsRecord"** %63, align 8
  call void @_ZdlPv(i8* %107) #12
  br label %108

108:                                              ; preds = %56, %106
  %109 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 5
  %110 = getelementptr inbounds %"class.std::__1::vector.47", %"class.std::__1::vector.47"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %110, align 8
  %112 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %111, null
  br i1 %112, label %160, label %113

113:                                              ; preds = %108
  %114 = bitcast %"class.openscreen::discovery::MdnsRecord"* %111 to i8*
  %115 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 5, i32 0, i32 1
  %116 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %115, align 8
  %117 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %116, %111
  br i1 %117, label %158, label %118

118:                                              ; preds = %113
  %119 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %3 to i8*
  %120 = getelementptr inbounds %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer", %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %3, i64 0, i32 0
  br label %121

121:                                              ; preds = %153, %118
  %122 = phi %"class.openscreen::discovery::MdnsRecord"* [ %116, %118 ], [ %123, %153 ]
  %123 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %122, i64 -1
  %124 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %122, i64 -1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  store %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"* %124, %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial"** %120, align 8
  %125 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %122, i64 -1, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  call void @_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m(%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* nonnull dereferenceable(8) %3, i64 %126) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  %127 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %122, i64 -1, i32 0, i32 1
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %128, align 8
  %130 = icmp eq %"class.std::__1::basic_string"* %129, null
  br i1 %130, label %153, label %131

131:                                              ; preds = %121
  %132 = bitcast %"class.std::__1::basic_string"* %129 to i8*
  %133 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %122, i64 -1, i32 0, i32 1, i32 0, i32 1
  %134 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %133, align 8
  %135 = icmp eq %"class.std::__1::basic_string"* %134, %129
  br i1 %135, label %151, label %136

136:                                              ; preds = %131, %146
  %137 = phi %"class.std::__1::basic_string"* [ %138, %146 ], [ %134, %131 ]
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 -1
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %143, %136
  %147 = icmp eq %"class.std::__1::basic_string"* %138, %129
  br i1 %147, label %148, label %136

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector"* %127 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %131
  %152 = phi i8* [ %150, %148 ], [ %132, %131 ]
  store %"class.std::__1::basic_string"* %129, %"class.std::__1::basic_string"** %133, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %151, %121
  %154 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %123, %111
  br i1 %154, label %155, label %121

155:                                              ; preds = %153
  %156 = bitcast %"class.std::__1::vector.47"* %109 to i8**
  %157 = load i8*, i8** %156, align 8
  br label %158

158:                                              ; preds = %113, %155
  %159 = phi i8* [ %157, %155 ], [ %114, %113 ]
  store %"class.openscreen::discovery::MdnsRecord"* %111, %"class.openscreen::discovery::MdnsRecord"** %115, align 8
  call void @_ZdlPv(i8* %159) #12
  br label %160

160:                                              ; preds = %108, %158
  %161 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 4
  %162 = getelementptr inbounds %"class.std::__1::vector.40", %"class.std::__1::vector.40"* %161, i64 0, i32 0, i32 0
  %163 = load %"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::MdnsQuestion"** %162, align 8
  %164 = icmp eq %"class.openscreen::discovery::MdnsQuestion"* %163, null
  br i1 %164, label %206, label %165

165:                                              ; preds = %160
  %166 = bitcast %"class.openscreen::discovery::MdnsQuestion"* %163 to i8*
  %167 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %0, i64 0, i32 4, i32 0, i32 1
  %168 = load %"class.openscreen::discovery::MdnsQuestion"*, %"class.openscreen::discovery::MdnsQuestion"** %167, align 8
  %169 = icmp eq %"class.openscreen::discovery::MdnsQuestion"* %168, %163
  br i1 %169, label %204, label %170

170:                                              ; preds = %165, %199
  %171 = phi %"class.openscreen::discovery::MdnsQuestion"* [ %172, %199 ], [ %168, %165 ]
  %172 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %171, i64 -1
  %173 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %171, i64 -1, i32 0, i32 1
  %174 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %174, align 8
  %176 = icmp eq %"class.std::__1::basic_string"* %175, null
  br i1 %176, label %199, label %177

177:                                              ; preds = %170
  %178 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  %179 = getelementptr inbounds %"class.openscreen::discovery::MdnsQuestion", %"class.openscreen::discovery::MdnsQuestion"* %171, i64 -1, i32 0, i32 1, i32 0, i32 1
  %180 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %179, align 8
  %181 = icmp eq %"class.std::__1::basic_string"* %180, %175
  br i1 %181, label %197, label %182

182:                                              ; preds = %177, %192
  %183 = phi %"class.std::__1::basic_string"* [ %184, %192 ], [ %180, %177 ]
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %183, i64 -1
  %185 = bitcast %"class.std::__1::basic_string"* %184 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %192

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %189, %182
  %193 = icmp eq %"class.std::__1::basic_string"* %184, %175
  br i1 %193, label %194, label %182

194:                                              ; preds = %192
  %195 = bitcast %"class.std::__1::vector"* %173 to i8**
  %196 = load i8*, i8** %195, align 8
  br label %197

197:                                              ; preds = %194, %177
  %198 = phi i8* [ %196, %194 ], [ %178, %177 ]
  store %"class.std::__1::basic_string"* %175, %"class.std::__1::basic_string"** %179, align 8
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %197, %170
  %200 = icmp eq %"class.openscreen::discovery::MdnsQuestion"* %172, %163
  br i1 %200, label %201, label %170

201:                                              ; preds = %199
  %202 = bitcast %"class.std::__1::vector.40"* %161 to i8**
  %203 = load i8*, i8** %202, align 8
  br label %204

204:                                              ; preds = %201, %165
  %205 = phi i8* [ %203, %201 ], [ %166, %165 ]
  store %"class.openscreen::discovery::MdnsQuestion"* %163, %"class.openscreen::discovery::MdnsQuestion"** %167, align 8
  call void @_ZdlPv(i8* %205) #12
  br label %206

206:                                              ; preds = %160, %204
  ret void
}

declare void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"*) local_unnamed_addr #3

declare void @_ZN10openscreen9discovery12MdnsReceiver22RemoveResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImpl8PostponeENSt3__16chrono8durationIxNS2_5ratioILl1ELl1EEEEE(%"class.openscreen::discovery::MdnsProbeImpl"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::packaged_task", align 16
  %4 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 8
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  tail call void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"* %5) #11
  %6 = mul nsw i64 %1, 1000000
  %7 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %3, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7)
  %8 = ptrtoint %"class.openscreen::discovery::MdnsProbeImpl"* %0 to i64
  %9 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %3, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::packaged_task"* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEEE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 16
  %12 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %3, i64 0, i32 0, i32 0, i32 0, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %8, i64* %13, align 8
  %14 = bitcast %"class.std::__1::__packaged_task_base"** %10 to %"class.std::__1::__packaged_task_function"**
  store %"class.std::__1::__packaged_task_function"* %9, %"class.std::__1::__packaged_task_function"** %14, align 16
  %15 = getelementptr inbounds %"class.std::__1::packaged_task", %"class.std::__1::packaged_task"* %3, i64 0, i32 1
  call void @_ZNSt3__17promiseIvEC1Ev(%"class.std::__1::promise"* %15) #11
  %16 = getelementptr inbounds %"class.openscreen::Alarm", %"class.openscreen::Alarm"* %5, i64 0, i32 0
  %17 = load i64 ()*, i64 ()** %16, align 16
  %18 = call i64 %17() #11
  %19 = add nsw i64 %18, %6
  call void @_ZN10openscreen5Alarm16ScheduleWithTaskENSt3__113packaged_taskIFvvEEENS1_6chrono10time_pointINS_18TrivialClockTraitsENS5_8durationIxNS1_5ratioILl1ELl1000000EEEEEEE(%"class.openscreen::Alarm"* %5, %"class.std::__1::packaged_task"* nonnull %3, i64 %19) #11
  call void @_ZNSt3__17promiseIvED1Ev(%"class.std::__1::promise"* %15) #11
  %20 = load %"class.std::__1::__packaged_task_base"*, %"class.std::__1::__packaged_task_base"** %10, align 16
  %21 = bitcast %"class.std::__1::packaged_task"* %3 to %"class.std::__1::__packaged_task_base"*
  %22 = icmp eq %"class.std::__1::__packaged_task_base"* %20, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::__packaged_task_base"* %20 to void (%"class.std::__1::__packaged_task_base"*)***
  %25 = load void (%"class.std::__1::__packaged_task_base"*)**, void (%"class.std::__1::__packaged_task_base"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %25, i64 3
  %27 = load void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %26, align 8
  call void %27(%"class.std::__1::__packaged_task_base"* %20) #11
  br label %35

28:                                               ; preds = %2
  %29 = icmp eq %"class.std::__1::__packaged_task_base"* %20, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::__packaged_task_base"* %20 to void (%"class.std::__1::__packaged_task_base"*)***
  %32 = load void (%"class.std::__1::__packaged_task_base"*)**, void (%"class.std::__1::__packaged_task_base"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %32, i64 4
  %34 = load void (%"class.std::__1::__packaged_task_base"*)*, void (%"class.std::__1::__packaged_task_base"*)** %33, align 8
  call void %34(%"class.std::__1::__packaged_task_base"* nonnull %20) #11
  br label %35

35:                                               ; preds = %23, %28, %30
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10openscreen9discovery13MdnsProbeImpl17OnMessageReceivedERKNS0_11MdnsMessageE(%"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsMessage"* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %3, align 8
  %5 = getelementptr inbounds %"class.openscreen::discovery::MdnsMessage", %"class.openscreen::discovery::MdnsMessage"* %1, i64 0, i32 5, i32 0, i32 1
  %6 = load %"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"** %5, align 8
  %7 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 9
  %12 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.openscreen::discovery::MdnsProbeImpl", %"class.openscreen::discovery::MdnsProbeImpl"* %0, i64 0, i32 7
  br label %17

16:                                               ; preds = %32, %2
  ret void

17:                                               ; preds = %8, %32
  %18 = phi %"class.openscreen::discovery::MdnsRecord"* [ %4, %8 ], [ %33, %32 ]
  %19 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 0, i32 0
  %20 = tail call zeroext i1 @_ZNK10openscreen9discovery10DomainNameeqERKS1_(%"class.openscreen::discovery::DomainName"* %19, %"class.openscreen::discovery::DomainName"* dereferenceable(32) %10) #11
  br i1 %20, label %21, label %32

21:                                               ; preds = %17
  %22 = load i8, i8* %11, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  tail call void @_ZN10openscreen5Alarm6CancelEv(%"class.openscreen::Alarm"* %12) #11
  %25 = load %"class.openscreen::discovery::MdnsReceiver"*, %"class.openscreen::discovery::MdnsReceiver"** %13, align 8
  tail call void @_ZN10openscreen9discovery12MdnsReceiver22RemoveResponseCallbackEPNS1_14ResponseClientE(%"class.openscreen::discovery::MdnsReceiver"* %25, %"class.openscreen::discovery::MdnsReceiver::ResponseClient"* %14) #11
  store i8 0, i8* %11, align 4
  br label %26

26:                                               ; preds = %21, %24
  %27 = load %"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe::Observer"** %15, align 16
  %28 = bitcast %"class.openscreen::discovery::MdnsProbe::Observer"* %27 to void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)***
  %29 = load void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)**, void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)*, void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)** %29, i64 3
  %31 = load void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)*, void (%"class.openscreen::discovery::MdnsProbe::Observer"*, %"class.openscreen::discovery::MdnsProbe"*)** %30, align 8
  tail call void %31(%"class.openscreen::discovery::MdnsProbe::Observer"* %27, %"class.openscreen::discovery::MdnsProbe"* %9) #11
  br label %32

32:                                               ; preds = %26, %17
  %33 = getelementptr inbounds %"class.openscreen::discovery::MdnsRecord", %"class.openscreen::discovery::MdnsRecord"* %18, i64 1
  %34 = icmp eq %"class.openscreen::discovery::MdnsRecord"* %33, %6
  br i1 %34, label %16, label %17
}

declare zeroext i1 @_ZNK10openscreen9discovery10DomainNameeqERKS1_(%"class.openscreen::discovery::DomainName"*, %"class.openscreen::discovery::DomainName"* dereferenceable(32)) local_unnamed_addr #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16variant_internal18VisitIndicesSwitchILm8EE3RunINS0_36VariantStateBaseDestructorNontrivialIJN10openscreen9discovery14RawRecordRdataENS6_14SrvRecordRdataENS6_12ARecordRdataENS6_15AAAARecordRdataENS6_14PtrRecordRdataENS6_14TxtRecordRdataENS6_15NsecRecordRdataENS6_14OptRecordRdataEEE9DestroyerEEENS0_22VisitIndicesResultImplIT_JmEE4typeEOSI_m(%"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* dereferenceable(8), i64) local_unnamed_addr #0 comdat align 2 {
  switch i64 %1, label %174 [
    i64 0, label %3
    i64 1, label %13
    i64 6, label %100
    i64 7, label %146
    i64 4, label %42
    i64 5, label %71
  ]

3:                                                ; preds = %2
  %4 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %0 to %"class.openscreen::discovery::RawRecordRdata"**
  %5 = load %"class.openscreen::discovery::RawRecordRdata"*, %"class.openscreen::discovery::RawRecordRdata"** %4, align 8
  %6 = getelementptr inbounds %"class.openscreen::discovery::RawRecordRdata", %"class.openscreen::discovery::RawRecordRdata"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %174, label %9

9:                                                ; preds = %3
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"class.openscreen::discovery::RawRecordRdata", %"class.openscreen::discovery::RawRecordRdata"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  tail call void @_ZdlPv(i8* nonnull %7) #12
  br label %174

13:                                               ; preds = %2
  %14 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %0 to %"class.openscreen::discovery::SrvRecordRdata"**
  %15 = load %"class.openscreen::discovery::SrvRecordRdata"*, %"class.openscreen::discovery::SrvRecordRdata"** %14, align 8
  %16 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %15, i64 0, i32 3, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, null
  br i1 %19, label %174, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %22 = getelementptr inbounds %"class.openscreen::discovery::SrvRecordRdata", %"class.openscreen::discovery::SrvRecordRdata"* %15, i64 0, i32 3, i32 1, i32 0, i32 1
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = icmp eq %"class.std::__1::basic_string"* %23, %18
  br i1 %24, label %40, label %25

25:                                               ; preds = %20, %35
  %26 = phi %"class.std::__1::basic_string"* [ %27, %35 ], [ %23, %20 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 -1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %32, %25
  %36 = icmp eq %"class.std::__1::basic_string"* %27, %18
  br i1 %36, label %37, label %25

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %16 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %20
  %41 = phi i8* [ %39, %37 ], [ %21, %20 ]
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %22, align 8
  tail call void @_ZdlPv(i8* %41) #12
  br label %174

42:                                               ; preds = %2
  %43 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %0 to %"class.openscreen::discovery::PtrRecordRdata"**
  %44 = load %"class.openscreen::discovery::PtrRecordRdata"*, %"class.openscreen::discovery::PtrRecordRdata"** %43, align 8
  %45 = getelementptr inbounds %"class.openscreen::discovery::PtrRecordRdata", %"class.openscreen::discovery::PtrRecordRdata"* %44, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %45, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %46, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, null
  br i1 %48, label %174, label %49

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %51 = getelementptr inbounds %"class.openscreen::discovery::PtrRecordRdata", %"class.openscreen::discovery::PtrRecordRdata"* %44, i64 0, i32 0, i32 1, i32 0, i32 1
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  %53 = icmp eq %"class.std::__1::basic_string"* %52, %47
  br i1 %53, label %69, label %54

54:                                               ; preds = %49, %64
  %55 = phi %"class.std::__1::basic_string"* [ %56, %64 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 -1
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %61, %54
  %65 = icmp eq %"class.std::__1::basic_string"* %56, %47
  br i1 %65, label %66, label %54

66:                                               ; preds = %64
  %67 = bitcast %"class.std::__1::vector"* %45 to i8**
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %66, %49
  %70 = phi i8* [ %68, %66 ], [ %50, %49 ]
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %51, align 8
  tail call void @_ZdlPv(i8* %70) #12
  br label %174

71:                                               ; preds = %2
  %72 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %0 to %"class.openscreen::discovery::TxtRecordRdata"**
  %73 = load %"class.openscreen::discovery::TxtRecordRdata"*, %"class.openscreen::discovery::TxtRecordRdata"** %72, align 8
  %74 = getelementptr inbounds %"class.openscreen::discovery::TxtRecordRdata", %"class.openscreen::discovery::TxtRecordRdata"* %73, i64 0, i32 1
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %75, align 8
  %77 = icmp eq %"class.std::__1::basic_string"* %76, null
  br i1 %77, label %174, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  %80 = getelementptr inbounds %"class.openscreen::discovery::TxtRecordRdata", %"class.openscreen::discovery::TxtRecordRdata"* %73, i64 0, i32 1, i32 0, i32 1
  %81 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %80, align 8
  %82 = icmp eq %"class.std::__1::basic_string"* %81, %76
  br i1 %82, label %98, label %83

83:                                               ; preds = %78, %93
  %84 = phi %"class.std::__1::basic_string"* [ %85, %93 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 -1
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  tail call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %90, %83
  %94 = icmp eq %"class.std::__1::basic_string"* %85, %76
  br i1 %94, label %95, label %83

95:                                               ; preds = %93
  %96 = bitcast %"class.std::__1::vector"* %74 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %78
  %99 = phi i8* [ %97, %95 ], [ %79, %78 ]
  store %"class.std::__1::basic_string"* %76, %"class.std::__1::basic_string"** %80, align 8
  tail call void @_ZdlPv(i8* %99) #12
  br label %174

100:                                              ; preds = %2
  %101 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %0 to %"class.absl::variant_internal::VariantStateBase"**
  %102 = load %"class.absl::variant_internal::VariantStateBase"*, %"class.absl::variant_internal::VariantStateBase"** %101, align 8
  %103 = getelementptr inbounds %"class.absl::variant_internal::VariantStateBase", %"class.absl::variant_internal::VariantStateBase"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %103, i64 0, i32 0, i32 0
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %106 = icmp eq %"class.std::__1::basic_string"* %105, null
  br i1 %106, label %129, label %107

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %109 = getelementptr inbounds %"class.absl::variant_internal::VariantStateBase", %"class.absl::variant_internal::VariantStateBase"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %110 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %109, align 8
  %111 = icmp eq %"class.std::__1::basic_string"* %110, %105
  br i1 %111, label %127, label %112

112:                                              ; preds = %107, %122
  %113 = phi %"class.std::__1::basic_string"* [ %114, %122 ], [ %110, %107 ]
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %113, i64 -1
  %115 = bitcast %"class.std::__1::basic_string"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %119, %112
  %123 = icmp eq %"class.std::__1::basic_string"* %114, %105
  br i1 %123, label %124, label %112

124:                                              ; preds = %122
  %125 = bitcast %"class.std::__1::vector"* %103 to i8**
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %124, %107
  %128 = phi i8* [ %126, %124 ], [ %108, %107 ]
  store %"class.std::__1::basic_string"* %105, %"class.std::__1::basic_string"** %109, align 8
  tail call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %127, %100
  %130 = getelementptr inbounds %"class.absl::variant_internal::VariantStateBase", %"class.absl::variant_internal::VariantStateBase"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %131 = load i16*, i16** %130, align 8
  %132 = icmp eq i16* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = ptrtoint i16* %131 to i64
  %135 = getelementptr inbounds %"class.absl::variant_internal::VariantStateBase", %"class.absl::variant_internal::VariantStateBase"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %136 = bitcast i16** %135 to i64*
  store i64 %134, i64* %136, align 8
  %137 = bitcast i16* %131 to i8*
  tail call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %133, %129
  %139 = getelementptr inbounds %"class.absl::variant_internal::VariantStateBase", %"class.absl::variant_internal::VariantStateBase"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = icmp eq i8* %140, null
  br i1 %141, label %174, label %142

142:                                              ; preds = %138
  %143 = ptrtoint i8* %140 to i64
  %144 = getelementptr inbounds %"class.absl::variant_internal::VariantStateBase", %"class.absl::variant_internal::VariantStateBase"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %145 = bitcast i8** %144 to i64*
  store i64 %143, i64* %145, align 8
  tail call void @_ZdlPv(i8* nonnull %140) #12
  br label %174

146:                                              ; preds = %2
  %147 = bitcast %"struct.absl::variant_internal::VariantStateBaseDestructorNontrivial<openscreen::discovery::RawRecordRdata, openscreen::discovery::SrvRecordRdata, openscreen::discovery::ARecordRdata, openscreen::discovery::AAAARecordRdata, openscreen::discovery::PtrRecordRdata, openscreen::discovery::TxtRecordRdata, openscreen::discovery::NsecRecordRdata, openscreen::discovery::OptRecordRdata>::Destroyer"* %0 to %"class.openscreen::discovery::OptRecordRdata"**
  %148 = load %"class.openscreen::discovery::OptRecordRdata"*, %"class.openscreen::discovery::OptRecordRdata"** %147, align 8
  %149 = getelementptr inbounds %"class.openscreen::discovery::OptRecordRdata", %"class.openscreen::discovery::OptRecordRdata"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"struct.openscreen::discovery::OptRecordRdata::Option"*, %"struct.openscreen::discovery::OptRecordRdata::Option"** %149, align 8
  %151 = icmp eq %"struct.openscreen::discovery::OptRecordRdata::Option"* %150, null
  br i1 %151, label %174, label %152

152:                                              ; preds = %146
  %153 = bitcast %"struct.openscreen::discovery::OptRecordRdata::Option"* %150 to i8*
  %154 = getelementptr inbounds %"class.openscreen::discovery::OptRecordRdata", %"class.openscreen::discovery::OptRecordRdata"* %148, i64 0, i32 0, i32 0, i32 1
  %155 = load %"struct.openscreen::discovery::OptRecordRdata::Option"*, %"struct.openscreen::discovery::OptRecordRdata::Option"** %154, align 8
  %156 = icmp eq %"struct.openscreen::discovery::OptRecordRdata::Option"* %155, %150
  br i1 %156, label %172, label %157

157:                                              ; preds = %152, %167
  %158 = phi %"struct.openscreen::discovery::OptRecordRdata::Option"* [ %159, %167 ], [ %155, %152 ]
  %159 = getelementptr inbounds %"struct.openscreen::discovery::OptRecordRdata::Option", %"struct.openscreen::discovery::OptRecordRdata::Option"* %158, i64 -1
  %160 = getelementptr inbounds %"struct.openscreen::discovery::OptRecordRdata::Option", %"struct.openscreen::discovery::OptRecordRdata::Option"* %158, i64 -1, i32 2, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = icmp eq i8* %161, null
  br i1 %162, label %167, label %163

163:                                              ; preds = %157
  %164 = ptrtoint i8* %161 to i64
  %165 = getelementptr inbounds %"struct.openscreen::discovery::OptRecordRdata::Option", %"struct.openscreen::discovery::OptRecordRdata::Option"* %158, i64 -1, i32 2, i32 0, i32 1
  %166 = bitcast i8** %165 to i64*
  store i64 %164, i64* %166, align 8
  tail call void @_ZdlPv(i8* nonnull %161) #12
  br label %167

167:                                              ; preds = %163, %157
  %168 = icmp eq %"struct.openscreen::discovery::OptRecordRdata::Option"* %159, %150
  br i1 %168, label %169, label %157

169:                                              ; preds = %167
  %170 = bitcast %"class.openscreen::discovery::OptRecordRdata"* %148 to i8**
  %171 = load i8*, i8** %170, align 8
  br label %172

172:                                              ; preds = %169, %152
  %173 = phi i8* [ %171, %169 ], [ %153, %152 ]
  store %"struct.openscreen::discovery::OptRecordRdata::Option"* %150, %"struct.openscreen::discovery::OptRecordRdata::Option"** %154, align 8
  tail call void @_ZdlPv(i8* %173) #12
  br label %174

174:                                              ; preds = %2, %172, %146, %142, %138, %98, %71, %69, %42, %40, %13, %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__124uniform_int_distributionIlEclINS_26linear_congruential_engineImLm48271ELm0ELm2147483647EEEEElRT_RKNS1_10param_typeE(%"class.std::__1::uniform_int_distribution"*, %"class.std::__1::linear_congruential_engine"* dereferenceable(8), %"class.std::__1::uniform_int_distribution<long>::param_type"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::uniform_int_distribution<long>::param_type", %"class.std::__1::uniform_int_distribution<long>::param_type"* %2, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::uniform_int_distribution<long>::param_type", %"class.std::__1::uniform_int_distribution<long>::param_type"* %2, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = add i64 %8, 1
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %152, label %11

11:                                               ; preds = %3
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %13, label %32

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::linear_congruential_engine", %"class.std::__1::linear_congruential_engine"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %16, %13
  %17 = phi i64 [ %19, %16 ], [ %15, %13 ]
  %18 = mul i64 %17, 48271
  %19 = urem i64 %18, 2147483647
  %20 = add nsw i64 %19, -1
  %21 = icmp ult i64 %20, 2145386496
  br i1 %21, label %154, label %16

22:                                               ; preds = %22, %160
  %23 = phi i64 [ %25, %22 ], [ %157, %160 ]
  %24 = mul nuw nsw i64 %23, 48271
  %25 = urem i64 %24, 2147483647
  %26 = add nsw i64 %25, -1
  %27 = icmp ult i64 %26, 2143289344
  br i1 %27, label %28, label %22

28:                                               ; preds = %22
  %29 = shl i64 %163, 22
  %30 = and i64 %26, 4194303
  %31 = or i64 %30, %29
  store i64 %25, i64* %14, align 8
  br label %152

32:                                               ; preds = %11
  %33 = tail call i64 @llvm.ctlz.i64(i64 %9, i1 true) #11, !range !3
  %34 = lshr i64 9223372036854775807, %33
  %35 = and i64 %34, %9
  %36 = icmp eq i64 %35, 0
  %37 = select i1 %36, i64 63, i64 64
  %38 = sub nsw i64 %37, %33
  %39 = udiv i64 %38, 30
  %40 = urem i64 %38, 30
  %41 = icmp ne i64 %40, 0
  %42 = zext i1 %41 to i64
  %43 = add nuw nsw i64 %39, %42
  %44 = udiv i64 %38, %43
  %45 = icmp ult i64 %44, 64
  %46 = shl i64 -1, %44
  %47 = and i64 %46, 2147483646
  %48 = select i1 %45, i64 %47, i64 0
  %49 = sub nuw nsw i64 2147483646, %48
  %50 = udiv i64 %48, %43
  %51 = icmp ugt i64 %49, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %32
  %53 = add nuw nsw i64 %43, 1
  %54 = udiv i64 %38, %53
  %55 = urem i64 %38, %53
  %56 = icmp ult i64 %54, 64
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = shl i64 -1, %54
  %59 = and i64 %58, 2147483646
  br label %62

60:                                               ; preds = %52
  %61 = sub nsw i64 %53, %55
  br label %69

62:                                               ; preds = %57, %32
  %63 = phi i64 [ %54, %57 ], [ %44, %32 ]
  %64 = phi i64 [ %53, %57 ], [ %43, %32 ]
  %65 = phi i64 [ %59, %57 ], [ %48, %32 ]
  %66 = urem i64 %38, %64
  %67 = sub nsw i64 %64, %66
  %68 = icmp ult i64 %63, 63
  br i1 %68, label %79, label %69

69:                                               ; preds = %62, %60
  %70 = phi i64 [ %54, %60 ], [ %63, %62 ]
  %71 = phi i64 [ %53, %60 ], [ %64, %62 ]
  %72 = phi i64 [ %61, %60 ], [ %67, %62 ]
  %73 = phi i64 [ 0, %60 ], [ %65, %62 ]
  %74 = icmp eq i64 %70, 0
  %75 = sub i64 64, %70
  %76 = lshr i64 -1, %75
  %77 = select i1 %74, i64 0, i64 %76
  %78 = add i64 %70, 1
  br label %89

79:                                               ; preds = %62
  %80 = add nuw nsw i64 %63, 1
  %81 = shl i64 -1, %80
  %82 = and i64 %81, 2147483646
  %83 = icmp eq i64 %63, 0
  %84 = sub nuw nsw i64 64, %63
  %85 = lshr i64 -1, %84
  %86 = select i1 %83, i64 0, i64 %85
  %87 = sub nuw nsw i64 63, %63
  %88 = lshr i64 -1, %87
  br label %89

89:                                               ; preds = %69, %79
  %90 = phi i64 [ %78, %69 ], [ %80, %79 ]
  %91 = phi i64 [ %77, %69 ], [ %86, %79 ]
  %92 = phi i64 [ 0, %69 ], [ %82, %79 ]
  %93 = phi i64 [ %73, %69 ], [ %65, %79 ]
  %94 = phi i64 [ %72, %69 ], [ %67, %79 ]
  %95 = phi i64 [ %71, %69 ], [ %64, %79 ]
  %96 = phi i64 [ %70, %69 ], [ %63, %79 ]
  %97 = phi i64 [ -1, %69 ], [ %88, %79 ]
  %98 = icmp eq i64 %94, 0
  %99 = icmp ult i64 %96, 64
  %100 = getelementptr inbounds %"class.std::__1::linear_congruential_engine", %"class.std::__1::linear_congruential_engine"* %1, i64 0, i32 0
  %101 = icmp ult i64 %94, %95
  %102 = icmp ult i64 %96, 63
  br label %103

103:                                              ; preds = %146, %89
  br i1 %98, label %111, label %104

104:                                              ; preds = %103
  %105 = load i64, i64* %100, align 8
  br label %106

106:                                              ; preds = %121, %104
  %107 = phi i64 [ %118, %121 ], [ %105, %104 ]
  %108 = phi i64 [ %126, %121 ], [ 0, %104 ]
  %109 = phi i64 [ %125, %121 ], [ 0, %104 ]
  br label %115

110:                                              ; preds = %121
  store i64 %118, i64* %100, align 8
  br label %111

111:                                              ; preds = %110, %103
  %112 = phi i64 [ 0, %103 ], [ %125, %110 ]
  br i1 %101, label %113, label %146

113:                                              ; preds = %111
  %114 = load i64, i64* %100, align 8
  br label %128

115:                                              ; preds = %115, %106
  %116 = phi i64 [ %118, %115 ], [ %107, %106 ]
  %117 = mul i64 %116, 48271
  %118 = urem i64 %117, 2147483647
  %119 = add nsw i64 %118, -1
  %120 = icmp ult i64 %119, %93
  br i1 %120, label %121, label %115

121:                                              ; preds = %115
  %122 = shl i64 %109, %96
  %123 = select i1 %99, i64 %122, i64 0
  %124 = and i64 %119, %91
  %125 = add i64 %124, %123
  %126 = add nuw i64 %108, 1
  %127 = icmp eq i64 %126, %94
  br i1 %127, label %110, label %106

128:                                              ; preds = %138, %113
  %129 = phi i64 [ %135, %138 ], [ %114, %113 ]
  %130 = phi i64 [ %143, %138 ], [ %94, %113 ]
  %131 = phi i64 [ %142, %138 ], [ %112, %113 ]
  br label %132

132:                                              ; preds = %132, %128
  %133 = phi i64 [ %135, %132 ], [ %129, %128 ]
  %134 = mul i64 %133, 48271
  %135 = urem i64 %134, 2147483647
  %136 = add nsw i64 %135, -1
  %137 = icmp ult i64 %136, %92
  br i1 %137, label %138, label %132

138:                                              ; preds = %132
  %139 = shl i64 %131, %90
  %140 = select i1 %102, i64 %139, i64 0
  %141 = and i64 %136, %97
  %142 = add i64 %141, %140
  %143 = add nuw nsw i64 %130, 1
  %144 = icmp eq i64 %143, %95
  br i1 %144, label %145, label %128

145:                                              ; preds = %138
  store i64 %135, i64* %100, align 8
  br label %146

146:                                              ; preds = %145, %111
  %147 = phi i64 [ %112, %111 ], [ %142, %145 ]
  %148 = icmp ult i64 %147, %9
  br i1 %148, label %149, label %103

149:                                              ; preds = %146
  %150 = load i64, i64* %6, align 8
  %151 = add i64 %150, %147
  br label %152

152:                                              ; preds = %28, %3, %149
  %153 = phi i64 [ %151, %149 ], [ %7, %3 ], [ %31, %28 ]
  ret i64 %153

154:                                              ; preds = %16, %154
  %155 = phi i64 [ %157, %154 ], [ %19, %16 ]
  %156 = mul nuw nsw i64 %155, 48271
  %157 = urem i64 %156, 2147483647
  %158 = add nsw i64 %157, -1
  %159 = icmp ult i64 %158, 2145386496
  br i1 %159, label %160, label %154

160:                                              ; preds = %154
  %161 = shl nsw i64 %20, 21
  %162 = and i64 %158, 2097151
  %163 = or i64 %162, %161
  store i64 %157, i64* %14, align 8
  br label %22
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

declare void @_ZN10openscreen9discovery10MdnsRecordC1ERKS1_(%"class.openscreen::discovery::MdnsRecord"*, %"class.openscreen::discovery::MdnsRecord"* dereferenceable(136)) unnamed_addr #3

declare void @_ZN10openscreen5Alarm16ScheduleWithTaskENSt3__113packaged_taskIFvvEEENS1_6chrono10time_pointINS_18TrivialClockTraitsENS5_8durationIxNS1_5ratioILl1ELl1000000EEEEEEE(%"class.openscreen::Alarm"*, %"class.std::__1::packaged_task"*, i64) local_unnamed_addr #3

declare void @_ZNSt3__17promiseIvEC1Ev(%"class.std::__1::promise"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEED0Ev"(%"class.std::__1::__packaged_task_func"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.std::__1::__packaged_task_func"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEE9__move_toEPNS_20__packaged_task_baseISU_EE"(%"class.std::__1::__packaged_task_func"* nocapture readonly, %"class.std::__1::__packaged_task_base"* nocapture) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__packaged_task_func", %"class.std::__1::__packaged_task_func"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__packaged_task_base", %"class.std::__1::__packaged_task_base"* %1, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEEE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::__packaged_task_base", %"class.std::__1::__packaged_task_base"* %1, i64 1
  %6 = bitcast %class.anon* %3 to i64*
  %7 = bitcast %"class.std::__1::__packaged_task_base"* %5 to i64*
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEE7destroyEv"(%"class.std::__1::__packaged_task_func"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEE18destroy_deallocateEv"(%"class.std::__1::__packaged_task_func"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::__packaged_task_func"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImplC1EPNS2_10MdnsSenderEPNS2_12MdnsReceiverEPNS2_10MdnsRandomEPNS1_10TaskRunnerEPFNS_6chrono10time_pointINS1_18TrivialClockTraitsENSC_8durationIxNS_5ratioILl1ELl1000000EEEEEEEvEPNS2_9MdnsProbe8ObserverENS2_10DomainNameENS1_9IPAddressEE3$_0NS_9allocatorISR_EEFvvEEclEv"(%"class.std::__1::__packaged_task_func"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__packaged_task_func", %"class.std::__1::__packaged_task_func"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsProbeImpl"** %2, align 8
  tail call void @_ZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEv(%"class.openscreen::discovery::MdnsProbeImpl"* %3) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__17promiseIvED1Ev(%"class.std::__1::promise"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEED0Ev"(%"class.std::__1::__packaged_task_func.96"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.std::__1::__packaged_task_func.96"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEE9__move_toEPNS_20__packaged_task_baseIS7_EE"(%"class.std::__1::__packaged_task_func.96"* nocapture readonly, %"class.std::__1::__packaged_task_base"* nocapture) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__packaged_task_func.96", %"class.std::__1::__packaged_task_func.96"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__packaged_task_base", %"class.std::__1::__packaged_task_base"* %1, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEEE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::__packaged_task_base", %"class.std::__1::__packaged_task_base"* %1, i64 1
  %6 = bitcast %class.anon.76* %3 to i64*
  %7 = bitcast %"class.std::__1::__packaged_task_base"* %5 to i64*
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEE7destroyEv"(%"class.std::__1::__packaged_task_func.96"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEE18destroy_deallocateEv"(%"class.std::__1::__packaged_task_func.96"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::__packaged_task_func.96"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEvE3$_1NS_9allocatorIS4_EEFvvEEclEv"(%"class.std::__1::__packaged_task_func.96"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__packaged_task_func.96", %"class.std::__1::__packaged_task_func.96"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsProbeImpl"** %2, align 8
  tail call void @_ZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEv(%"class.openscreen::discovery::MdnsProbeImpl"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__packaged_task_baseIFvvEED2Ev(%"class.std::__1::__packaged_task_base"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEED0Ev"(%"class.std::__1::__packaged_task_func.104"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.std::__1::__packaged_task_func.104"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEE9__move_toEPNS_20__packaged_task_baseISC_EE"(%"class.std::__1::__packaged_task_func.104"* nocapture readonly, %"class.std::__1::__packaged_task_base"* nocapture) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__packaged_task_func.104", %"class.std::__1::__packaged_task_func.104"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.std::__1::__packaged_task_base", %"class.std::__1::__packaged_task_base"* %1, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @"_ZTVNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEEE", i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::__packaged_task_base", %"class.std::__1::__packaged_task_base"* %1, i64 1
  %6 = bitcast %class.anon.77* %3 to i64*
  %7 = bitcast %"class.std::__1::__packaged_task_base"* %5 to i64*
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEE7destroyEv"(%"class.std::__1::__packaged_task_func.104"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEE18destroy_deallocateEv"(%"class.std::__1::__packaged_task_func.104"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.std::__1::__packaged_task_func.104"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__120__packaged_task_funcIZN10openscreen9discovery13MdnsProbeImpl8PostponeENS_6chrono8durationIxNS_5ratioILl1ELl1EEEEEE3$_2NS_9allocatorIS9_EEFvvEEclEv"(%"class.std::__1::__packaged_task_func.104"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__packaged_task_func.104", %"class.std::__1::__packaged_task_func.104"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.openscreen::discovery::MdnsProbeImpl"*, %"class.openscreen::discovery::MdnsProbeImpl"** %2, align 8
  tail call void @_ZN10openscreen9discovery13MdnsProbeImpl9ProbeOnceEv(%"class.openscreen::discovery::MdnsProbeImpl"* %3) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
