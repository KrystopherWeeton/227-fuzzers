; ModuleID = '../../third_party/libsrtp/crypto/kernel/alloc.c'
source_filename = "../../third_party/libsrtp/crypto/kernel/alloc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.srtp_debug_module_t = type { i32, i8* }

@.str = private unnamed_addr constant [6 x i8] c"alloc\00", align 1
@srtp_mod_alloc = hidden local_unnamed_addr global %struct.srtp_debug_module_t { i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [30 x i8] c"%s: (location: %p) allocated\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"%s: allocation failed (asked for %zu bytes)\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"%s: (location: %p) freed\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @srtp_crypto_alloc(i64) local_unnamed_addr #0 {
  %2 = icmp eq i64 %0, 0
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = tail call noalias i8* @calloc(i64 1, i64 %0) #4
  %5 = icmp eq i8* %4, null
  %6 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @srtp_mod_alloc, i64 0, i32 0), align 8
  %7 = icmp ne i32 %6, 0
  br i1 %5, label %11, label %8

8:                                                ; preds = %3
  br i1 %7, label %9, label %14

9:                                                ; preds = %8
  %10 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @srtp_mod_alloc, i64 0, i32 1), align 8
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* %10, i8* nonnull %4) #4
  br label %14

11:                                               ; preds = %3
  br i1 %7, label %12, label %14

12:                                               ; preds = %11
  %13 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @srtp_mod_alloc, i64 0, i32 1), align 8
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i8* %13, i64 %0) #4
  br label %14

14:                                               ; preds = %9, %8, %12, %11, %1
  %15 = phi i8* [ null, %1 ], [ null, %11 ], [ null, %12 ], [ %4, %8 ], [ %4, %9 ]
  ret i8* %15
}

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #1

declare void @srtp_err_report(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @srtp_crypto_free(i8*) local_unnamed_addr #0 {
  %2 = load i32, i32* getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @srtp_mod_alloc, i64 0, i32 0), align 8
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = load i8*, i8** getelementptr inbounds (%struct.srtp_debug_module_t, %struct.srtp_debug_module_t* @srtp_mod_alloc, i64 0, i32 1), align 8
  tail call void (i32, i8*, ...) @srtp_err_report(i32 3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i8* %5, i8* %0) #4
  br label %6

6:                                                ; preds = %1, %4
  tail call void @free(i8* %0) #4
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
