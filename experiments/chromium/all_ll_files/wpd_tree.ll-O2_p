; ModuleID = '../../third_party/webrtc/modules/audio_processing/transient/wpd_tree.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/transient/wpd_tree.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::WPDTree" = type { i64, i32, i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr.0"* }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::WPDNode"* }
%"class.webrtc::WPDNode" = type { %"class.std::__1::unique_ptr.3", i64, %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { float* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.webrtc::FIRFilter"* }
%"class.webrtc::FIRFilter" = type opaque

@_ZN6webrtc7WPDTreeC1EmPKfS2_mi = hidden unnamed_addr alias void (%"class.webrtc::WPDTree"*, i64, float*, float*, i64, i32), void (%"class.webrtc::WPDTree"*, i64, float*, float*, i64, i32)* @_ZN6webrtc7WPDTreeC2EmPKfS2_mi
@_ZN6webrtc7WPDTreeD1Ev = hidden unnamed_addr alias void (%"class.webrtc::WPDTree"*), void (%"class.webrtc::WPDTree"*)* @_ZN6webrtc7WPDTreeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7WPDTreeC2EmPKfS2_mi(%"class.webrtc::WPDTree"* nocapture, i64, float*, float*, i64, i32) unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 1
  store i32 %5, i32* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 2
  %11 = add nsw i32 %5, 1
  %12 = shl nsw i32 -1, %11
  %13 = xor i32 %12, -1
  store i32 %13, i32* %10, align 4
  %14 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 3
  %15 = sub i32 0, %12
  %16 = sext i32 %15 to i64
  %17 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %16, i64 8)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %19, i64 8)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = or i1 %18, %21
  %23 = extractvalue { i64, i1 } %20, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %25 = tail call i8* @_Znam(i64 %24) #8
  %26 = bitcast i8* %25 to i64*
  store i64 %16, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = shl nsw i64 %16, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 %28, i1 false)
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::unique_ptr"* %14 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #9
  store float 1.000000e+00, float* %7, align 4
  %32 = tail call i8* @_Znwm(i64 24) #8
  %33 = bitcast i8* %32 to %"class.webrtc::WPDNode"*
  call void @_ZN6webrtc7WPDNodeC1EmPKfm(%"class.webrtc::WPDNode"* nonnull %33, i64 %1, float* nonnull %7, i64 1) #9
  %34 = getelementptr inbounds i8, i8* %25, i64 16
  %35 = bitcast i8* %34 to %"class.webrtc::WPDNode"**
  %36 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %35, align 8
  %37 = bitcast i8* %34 to i8**
  store i8* %32, i8** %37, align 8
  %38 = icmp eq %"class.webrtc::WPDNode"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %6
  call void @_ZN6webrtc7WPDNodeD1Ev(%"class.webrtc::WPDNode"* nonnull %36) #9
  %40 = bitcast %"class.webrtc::WPDNode"* %36 to i8*
  call void @_ZdlPv(i8* %40) #8
  br label %41

41:                                               ; preds = %6, %39
  %42 = icmp sgt i32 %5, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %50, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #9
  ret void

44:                                               ; preds = %41, %50
  %45 = phi i32 [ %51, %50 ], [ 0, %41 ]
  %46 = icmp eq i32 %45, 31
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = shl i32 1, %45
  %49 = sext i32 %48 to i64
  br label %53

50:                                               ; preds = %87, %44
  %51 = add nuw nsw i32 %45, 1
  %52 = icmp eq i32 %51, %5
  br i1 %52, label %43, label %44

53:                                               ; preds = %47, %87
  %54 = phi i64 [ 0, %47 ], [ %88, %87 ]
  %55 = add nsw i64 %54, %49
  %56 = shl nsw i64 %55, 1
  %57 = or i64 %56, 1
  %58 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %29, align 8
  %59 = call i8* @_Znwm(i64 24) #8
  %60 = bitcast i8* %59 to %"class.webrtc::WPDNode"*
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %58, i64 %55, i32 0, i32 0, i32 0
  %62 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %61, align 8
  %63 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %62, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %64, 1
  call void @_ZN6webrtc7WPDNodeC1EmPKfm(%"class.webrtc::WPDNode"* nonnull %60, i64 %65, float* %3, i64 %4) #9
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %58, i64 %56, i32 0, i32 0, i32 0
  %67 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %66, align 8
  %68 = bitcast %"class.webrtc::WPDNode"** %66 to i8**
  store i8* %59, i8** %68, align 8
  %69 = icmp eq %"class.webrtc::WPDNode"* %67, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %53
  call void @_ZN6webrtc7WPDNodeD1Ev(%"class.webrtc::WPDNode"* nonnull %67) #9
  %71 = bitcast %"class.webrtc::WPDNode"* %67 to i8*
  call void @_ZdlPv(i8* %71) #8
  br label %72

72:                                               ; preds = %53, %70
  %73 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %29, align 8
  %74 = call i8* @_Znwm(i64 24) #8
  %75 = bitcast i8* %74 to %"class.webrtc::WPDNode"*
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %73, i64 %55, i32 0, i32 0, i32 0
  %77 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %76, align 8
  %78 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %77, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = lshr i64 %79, 1
  call void @_ZN6webrtc7WPDNodeC1EmPKfm(%"class.webrtc::WPDNode"* nonnull %75, i64 %80, float* %2, i64 %4) #9
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %73, i64 %57, i32 0, i32 0, i32 0
  %82 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %81, align 8
  %83 = bitcast %"class.webrtc::WPDNode"** %81 to i8**
  store i8* %74, i8** %83, align 8
  %84 = icmp eq %"class.webrtc::WPDNode"* %82, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %72
  call void @_ZN6webrtc7WPDNodeD1Ev(%"class.webrtc::WPDNode"* nonnull %82) #9
  %86 = bitcast %"class.webrtc::WPDNode"* %82 to i8*
  call void @_ZdlPv(i8* %86) #8
  br label %87

87:                                               ; preds = %72, %85
  %88 = add nuw nsw i64 %54, 1
  %89 = icmp slt i64 %88, %49
  br i1 %89, label %53, label %50
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN6webrtc7WPDNodeC1EmPKfm(%"class.webrtc::WPDNode"*, i64, float*, i64) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7WPDTreeD2Ev(%"class.webrtc::WPDTree"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %2, align 8
  store %"class.std::__1::unique_ptr.0"* null, %"class.std::__1::unique_ptr.0"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.0"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %3, i64 -1
  %7 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i8*
  %8 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %3, i64 %9
  br label %13

13:                                               ; preds = %21, %11
  %14 = phi %"class.std::__1::unique_ptr.0"* [ %15, %21 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %14, i64 -1
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %16, align 8
  store %"class.webrtc::WPDNode"* null, %"class.webrtc::WPDNode"** %16, align 8
  %18 = icmp eq %"class.webrtc::WPDNode"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  tail call void @_ZN6webrtc7WPDNodeD1Ev(%"class.webrtc::WPDNode"* nonnull %17) #9
  %20 = bitcast %"class.webrtc::WPDNode"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %19, %13
  %22 = icmp eq %"class.std::__1::unique_ptr.0"* %15, %3
  br i1 %22, label %23, label %13

23:                                               ; preds = %21, %5
  tail call void @_ZdaPv(i8* %7) #8
  br label %24

24:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.webrtc::WPDNode"* @_ZN6webrtc7WPDTree6NodeAtEii(%"class.webrtc::WPDTree"* nocapture readonly, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %21, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, %1
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %21, label %11

11:                                               ; preds = %5
  %12 = shl i32 1, %1
  %13 = icmp sgt i32 %12, %2
  br i1 %13, label %14, label %21

14:                                               ; preds = %11
  %15 = add nsw i32 %12, %2
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %18, i64 %16, i32 0, i32 0, i32 0
  %20 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %19, align 8
  br label %21

21:                                               ; preds = %3, %5, %11, %14
  %22 = phi %"class.webrtc::WPDNode"* [ %20, %14 ], [ null, %11 ], [ null, %5 ], [ null, %3 ]
  ret %"class.webrtc::WPDNode"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc7WPDTree6UpdateEPKfm(%"class.webrtc::WPDTree"* nocapture readonly, float*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq float* %1, null
  br i1 %4, label %64, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, %2
  br i1 %8, label %9, label %64

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %11, i64 1, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %12, align 8
  %14 = tail call i32 @_ZN6webrtc7WPDNode8set_dataEPKfm(%"class.webrtc::WPDNode"* %13, float* nonnull %1, i64 %2) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %64

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.webrtc::WPDTree", %"class.webrtc::WPDTree"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %64

20:                                               ; preds = %16, %60
  %21 = phi i32 [ %61, %60 ], [ %18, %16 ]
  %22 = phi i32 [ %62, %60 ], [ 0, %16 ]
  %23 = icmp eq i32 %22, 31
  br i1 %23, label %60, label %24

24:                                               ; preds = %20
  %25 = shl i32 1, %22
  %26 = sext i32 %25 to i64
  br label %29

27:                                               ; preds = %44
  %28 = icmp slt i64 %57, %26
  br i1 %28, label %29, label %58

29:                                               ; preds = %24, %27
  %30 = phi i64 [ 0, %24 ], [ %57, %27 ]
  %31 = add nsw i64 %30, %26
  %32 = shl nsw i64 %31, 1
  %33 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %10, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %33, i64 %32, i32 0, i32 0, i32 0
  %35 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %33, i64 %31, i32 0, i32 0, i32 0
  %37 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %36, align 8
  %38 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load float*, float** %38, align 8
  %40 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %37, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = tail call i32 @_ZN6webrtc7WPDNode6UpdateEPKfm(%"class.webrtc::WPDNode"* %35, float* %39, i64 %41) #9
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %64

44:                                               ; preds = %29
  %45 = or i64 %32, 1
  %46 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %10, align 8
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %46, i64 %45, i32 0, i32 0, i32 0
  %48 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %46, i64 %31, i32 0, i32 0, i32 0
  %50 = load %"class.webrtc::WPDNode"*, %"class.webrtc::WPDNode"** %49, align 8
  %51 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load float*, float** %51, align 8
  %53 = getelementptr inbounds %"class.webrtc::WPDNode", %"class.webrtc::WPDNode"* %50, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = tail call i32 @_ZN6webrtc7WPDNode6UpdateEPKfm(%"class.webrtc::WPDNode"* %48, float* %52, i64 %54) #9
  %56 = icmp eq i32 %55, 0
  %57 = add nuw nsw i64 %30, 1
  br i1 %56, label %27, label %64

58:                                               ; preds = %27
  %59 = load i32, i32* %17, align 8
  br label %60

60:                                               ; preds = %58, %20
  %61 = phi i32 [ %59, %58 ], [ %21, %20 ]
  %62 = add nuw nsw i32 %22, 1
  %63 = icmp slt i32 %62, %61
  br i1 %63, label %20, label %64

64:                                               ; preds = %60, %29, %44, %16, %9, %3, %5
  %65 = phi i32 [ -1, %5 ], [ -1, %3 ], [ -1, %9 ], [ 0, %16 ], [ -1, %44 ], [ -1, %29 ], [ 0, %60 ]
  ret i32 %65
}

declare i32 @_ZN6webrtc7WPDNode8set_dataEPKfm(%"class.webrtc::WPDNode"*, float*, i64) local_unnamed_addr #4

declare i32 @_ZN6webrtc7WPDNode6UpdateEPKfm(%"class.webrtc::WPDNode"*, float*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6webrtc7WPDNodeD1Ev(%"class.webrtc::WPDNode"*) unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
