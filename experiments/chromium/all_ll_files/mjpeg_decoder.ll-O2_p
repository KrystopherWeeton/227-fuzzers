; ModuleID = '../../third_party/libyuv/source/mjpeg_decoder.cc'
source_filename = "../../third_party/libyuv/source/mjpeg_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.libyuv::MJpegDecoder" = type { %"struct.libyuv::Buffer", %"struct.libyuv::BufferVector", %struct.jpeg_decompress_struct*, %struct.jpeg_source_mgr*, %"struct.libyuv::SetJmpErrorMgr"*, i32, i32, i8***, i32*, i8**, i32* }
%"struct.libyuv::Buffer" = type { i8*, i32 }
%"struct.libyuv::BufferVector" = type { %"struct.libyuv::Buffer"*, i32, i32 }
%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type opaque
%struct.jpeg_d_main_controller = type opaque
%struct.jpeg_d_coef_controller = type opaque
%struct.jpeg_d_post_controller = type opaque
%struct.jpeg_input_controller = type opaque
%struct.jpeg_marker_reader = type opaque
%struct.jpeg_entropy_decoder = type opaque
%struct.jpeg_inverse_dct = type opaque
%struct.jpeg_upsampler = type opaque
%struct.jpeg_color_deconverter = type opaque
%struct.jpeg_color_quantizer = type opaque
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%"struct.libyuv::SetJmpErrorMgr" = type { %struct.jpeg_error_mgr, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }

@_ZN6libyuv12MJpegDecoder18kColorSpaceUnknownE = hidden local_unnamed_addr constant i32 0, align 4
@_ZN6libyuv12MJpegDecoder20kColorSpaceGrayscaleE = hidden local_unnamed_addr constant i32 1, align 4
@_ZN6libyuv12MJpegDecoder14kColorSpaceRgbE = hidden local_unnamed_addr constant i32 2, align 4
@_ZN6libyuv12MJpegDecoder16kColorSpaceYCbCrE = hidden local_unnamed_addr constant i32 3, align 4
@_ZN6libyuv12MJpegDecoder15kColorSpaceCMYKE = hidden local_unnamed_addr constant i32 4, align 4
@_ZN6libyuv12MJpegDecoder15kColorSpaceYCCKE = hidden local_unnamed_addr constant i32 5, align 4

@_ZN6libyuv12MJpegDecoderC1Ev = hidden unnamed_addr alias void (%"class.libyuv::MJpegDecoder"*), void (%"class.libyuv::MJpegDecoder"*)* @_ZN6libyuv12MJpegDecoderC2Ev
@_ZN6libyuv12MJpegDecoderD1Ev = hidden unnamed_addr alias void (%"class.libyuv::MJpegDecoder"*), void (%"class.libyuv::MJpegDecoder"*)* @_ZN6libyuv12MJpegDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6libyuv12MJpegDecoderC2Ev(%"class.libyuv::MJpegDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 5
  %3 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 40, i1 false)
  %4 = tail call i8* @_Znwm(i64 632) #12
  %5 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %6 = bitcast %struct.jpeg_decompress_struct** %5 to i8**
  store i8* %4, i8** %6, align 8
  %7 = tail call i8* @_Znwm(i64 56) #12
  %8 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 3
  %9 = bitcast %struct.jpeg_source_mgr** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = tail call i8* @_Znwm(i64 368) #12
  %11 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 4
  %12 = bitcast %"struct.libyuv::SetJmpErrorMgr"** %11 to i8**
  store i8* %10, i8** %12, align 8
  %13 = bitcast i8* %10 to %struct.jpeg_error_mgr*
  %14 = tail call %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* nonnull %13) #13
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %15, i64 0, i32 0
  store %struct.jpeg_error_mgr* %14, %struct.jpeg_error_mgr** %16, align 8
  %17 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %11, align 8
  %18 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %17, i64 0, i32 0, i32 0
  store void (%struct.jpeg_common_struct*)* @_ZN6libyuv12ErrorHandlerEP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %18, align 8
  %19 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %11, align 8
  %20 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %19, i64 0, i32 0, i32 2
  store void (%struct.jpeg_common_struct*)* @_ZN6libyuv13OutputHandlerEP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %20, align 8
  %21 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %21, i64 0, i32 3
  store i8* null, i8** %22, align 8
  %23 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %8, align 8
  %24 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %23, i64 0, i32 2
  store void (%struct.jpeg_decompress_struct*)* @_ZN6libyuv11init_sourceEP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %24, align 8
  %25 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %8, align 8
  %26 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %25, i64 0, i32 3
  store i32 (%struct.jpeg_decompress_struct*)* @_ZN6libyuv17fill_input_bufferEP22jpeg_decompress_struct, i32 (%struct.jpeg_decompress_struct*)** %26, align 8
  %27 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %8, align 8
  %28 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %27, i64 0, i32 4
  store void (%struct.jpeg_decompress_struct*, i64)* @_ZN6libyuv15skip_input_dataEP22jpeg_decompress_structl, void (%struct.jpeg_decompress_struct*, i64)** %28, align 8
  %29 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %8, align 8
  %30 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %29, i64 0, i32 5
  store i32 (%struct.jpeg_decompress_struct*, i32)* @jpeg_resync_to_restart, i32 (%struct.jpeg_decompress_struct*, i32)** %30, align 8
  %31 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %8, align 8
  %32 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %31, i64 0, i32 6
  store void (%struct.jpeg_decompress_struct*)* @_ZN6libyuv11term_sourceEP22jpeg_decompress_struct, void (%struct.jpeg_decompress_struct*)** %32, align 8
  %33 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  tail call void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct* %33, i32 62, i64 632) #13
  %34 = bitcast %struct.jpeg_source_mgr** %8 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %36, i64 0, i32 6
  %38 = bitcast %struct.jpeg_source_mgr** %37 to i64*
  store i64 %35, i64* %38, align 8
  %39 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 0
  %40 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 1, i32 0
  store %"struct.libyuv::Buffer"* %39, %"struct.libyuv::Buffer"** %40, align 8
  %41 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 1, i32 1
  store i32 1, i32* %41, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6libyuv12ErrorHandlerEP18jpeg_common_struct(%struct.jpeg_common_struct* nocapture readonly) #3 {
  %2 = bitcast %struct.jpeg_common_struct* %0 to %"struct.libyuv::SetJmpErrorMgr"**
  %3 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %2, align 8
  %4 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %3, i64 0, i32 1, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %4, i32 1) #14
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6libyuv13OutputHandlerEP18jpeg_common_struct(%struct.jpeg_common_struct* nocapture) #4 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6libyuv11init_sourceEP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readonly) #5 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %"struct.libyuv::BufferVector"**
  %4 = load %"struct.libyuv::BufferVector"*, %"struct.libyuv::BufferVector"** %3, align 8
  %5 = getelementptr inbounds %"struct.libyuv::BufferVector", %"struct.libyuv::BufferVector"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.libyuv::BufferVector", %"struct.libyuv::BufferVector"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %30

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.libyuv::BufferVector", %"struct.libyuv::BufferVector"* %4, i64 0, i32 0
  %12 = load %"struct.libyuv::Buffer"*, %"struct.libyuv::Buffer"** %11, align 8
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.libyuv::Buffer", %"struct.libyuv::Buffer"* %12, i64 %13, i32 0
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %18 = bitcast %struct.jpeg_source_mgr** %17 to i64**
  %19 = load i64*, i64** %18, align 8
  store i64 %16, i64* %19, align 8
  %20 = load %"struct.libyuv::Buffer"*, %"struct.libyuv::Buffer"** %11, align 8
  %21 = load i32, i32* %5, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.libyuv::Buffer", %"struct.libyuv::Buffer"* %20, i64 %22, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %17, align 8
  %27 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %26, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %5, align 4
  br label %30

30:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6libyuv17fill_input_bufferEP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture readonly) #5 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to %"struct.libyuv::BufferVector"**
  %4 = load %"struct.libyuv::BufferVector"*, %"struct.libyuv::BufferVector"** %3, align 8
  %5 = getelementptr inbounds %"struct.libyuv::BufferVector", %"struct.libyuv::BufferVector"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.libyuv::BufferVector", %"struct.libyuv::BufferVector"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %30

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.libyuv::BufferVector", %"struct.libyuv::BufferVector"* %4, i64 0, i32 0
  %12 = load %"struct.libyuv::Buffer"*, %"struct.libyuv::Buffer"** %11, align 8
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.libyuv::Buffer", %"struct.libyuv::Buffer"* %12, i64 %13, i32 0
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %18 = bitcast %struct.jpeg_source_mgr** %17 to i64**
  %19 = load i64*, i64** %18, align 8
  store i64 %16, i64* %19, align 8
  %20 = load %"struct.libyuv::Buffer"*, %"struct.libyuv::Buffer"** %11, align 8
  %21 = load i32, i32* %5, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.libyuv::Buffer", %"struct.libyuv::Buffer"* %20, i64 %22, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %17, align 8
  %27 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %26, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = load i32, i32* %5, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %5, align 4
  br label %30

30:                                               ; preds = %1, %10
  %31 = phi i32 [ 1, %10 ], [ 0, %1 ]
  ret i32 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6libyuv15skip_input_dataEP22jpeg_decompress_structl(%struct.jpeg_decompress_struct* nocapture readonly, i64) #5 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %4 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %4, i64 0, i32 0
  br i1 %7, label %9, label %10

9:                                                ; preds = %2
  store i8* null, i8** %8, align 8
  br label %14

10:                                               ; preds = %2
  %11 = load i8*, i8** %8, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %1
  store i8* %12, i8** %8, align 8
  %13 = sub i64 %6, %1
  br label %14

14:                                               ; preds = %10, %9
  %15 = phi i64 [ %13, %10 ], [ 0, %9 ]
  store i64 %15, i64* %5, align 8
  ret void
}

declare i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct*, i32) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6libyuv11term_sourceEP22jpeg_decompress_struct(%struct.jpeg_decompress_struct* nocapture) #4 {
  ret void
}

declare void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6libyuv12MJpegDecoderD2Ev(%"class.libyuv::MJpegDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  tail call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %3) #13
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %5 = icmp eq %struct.jpeg_decompress_struct* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.jpeg_decompress_struct* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #12
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 3
  %10 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %9, align 8
  %11 = icmp eq %struct.jpeg_source_mgr* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast %struct.jpeg_source_mgr* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 4
  %16 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %15, align 8
  %17 = icmp eq %"struct.libyuv::SetJmpErrorMgr"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.libyuv::SetJmpErrorMgr"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %18, %14
  tail call void @_ZN6libyuv12MJpegDecoder20DestroyOutputBuffersEv(%"class.libyuv::MJpegDecoder"* %0)
  ret void
}

declare void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6libyuv12MJpegDecoder20DestroyOutputBuffersEv(%"class.libyuv::MJpegDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  %5 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %6 = load i8***, i8**** %5, align 8
  br i1 %4, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 9
  br label %12

9:                                                ; preds = %26, %1
  %10 = phi i8*** [ %6, %1 ], [ %31, %26 ]
  %11 = icmp eq i8*** %10, null
  br i1 %11, label %34, label %32

12:                                               ; preds = %7, %26
  %13 = phi i64 [ 0, %7 ], [ %27, %26 ]
  %14 = phi i8*** [ %6, %7 ], [ %31, %26 ]
  %15 = getelementptr inbounds i8**, i8*** %14, i64 %13
  %16 = load i8**, i8*** %15, align 8
  %17 = icmp eq i8** %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = bitcast i8** %16 to i8*
  tail call void @_ZdaPv(i8* %19) #12
  br label %20

20:                                               ; preds = %18, %12
  %21 = load i8**, i8*** %8, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 %13
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call void @_ZdaPv(i8* nonnull %23) #12
  br label %26

26:                                               ; preds = %20, %25
  %27 = add nuw nsw i64 %13, 1
  %28 = load i32, i32* %2, align 4
  %29 = sext i32 %28 to i64
  %30 = icmp slt i64 %27, %29
  %31 = load i8***, i8**** %5, align 8
  br i1 %30, label %12, label %9

32:                                               ; preds = %9
  %33 = bitcast i8*** %10 to i8*
  tail call void @_ZdaPv(i8* %33) #12
  br label %34

34:                                               ; preds = %32, %9
  %35 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 9
  %36 = load i8**, i8*** %35, align 8
  %37 = icmp eq i8** %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = bitcast i8** %36 to i8*
  tail call void @_ZdaPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %34
  %41 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 8
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast i32* %42 to i8*
  tail call void @_ZdaPv(i8* %45) #12
  br label %46

46:                                               ; preds = %44, %40
  %47 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 10
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast i32* %48 to i8*
  tail call void @_ZdaPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %46
  %53 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder9LoadFrameEPKhm(%"class.libyuv::MJpegDecoder"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = call i32 @ValidateJpeg(i8* %1, i64 %2) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %136, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = trunc i64 %2 to i32
  %9 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 0, i32 1
  store i32 %8, i32* %9, align 8
  %10 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i64 0, i32 3
  %15 = bitcast i8** %14 to %"struct.libyuv::BufferVector"**
  store %"struct.libyuv::BufferVector"* %10, %"struct.libyuv::BufferVector"** %15, align 8
  %16 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 4
  %17 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %16, align 8
  %18 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %17, i64 0, i32 1, i64 0
  %19 = call i32 @_setjmp(%struct.__jmp_buf_tag* %18) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %136

21:                                               ; preds = %6
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %12, align 8
  %23 = call i32 @jpeg_read_header(%struct.jpeg_decompress_struct* %22, i32 1) #13
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %136

25:                                               ; preds = %21
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %12, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i64 0, i32 9
  %28 = load i32, i32* %27, align 8
  call void @_ZN6libyuv12MJpegDecoder18AllocOutputBuffersEi(%"class.libyuv::MJpegDecoder"* %0, i32 %28)
  %29 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %136

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 8
  %34 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %35 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 10
  %36 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 9
  %37 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 5
  %38 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %12, align 8
  br label %39

39:                                               ; preds = %32, %131
  %40 = phi %struct.jpeg_decompress_struct* [ %38, %32 ], [ %114, %131 ]
  %41 = phi i64 [ 0, %32 ], [ %132, %131 ]
  %42 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i64 0, i32 62
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %40, i64 0, i32 44
  %45 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %44, align 8
  %46 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %45, i64 %41, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = sdiv i32 %43, %47
  %49 = shl i32 %43, 3
  %50 = add i32 %49, -1
  %51 = add i32 %50, %48
  %52 = sdiv i32 %51, %48
  %53 = load i32*, i32** %33, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %41
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %52
  br i1 %56, label %79, label %57

57:                                               ; preds = %39
  %58 = load i8***, i8**** %34, align 8
  %59 = getelementptr inbounds i8**, i8*** %58, i64 %41
  %60 = load i8**, i8*** %59, align 8
  %61 = icmp eq i8** %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast i8** %60 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %57, %62
  %65 = sext i32 %52 to i64
  %66 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %65, i64 8)
  %67 = extractvalue { i64, i1 } %66, 1
  %68 = extractvalue { i64, i1 } %66, 0
  %69 = select i1 %67, i64 -1, i64 %68
  %70 = call i8* @_Znam(i64 %69) #12
  %71 = load i8***, i8**** %34, align 8
  %72 = getelementptr inbounds i8**, i8*** %71, i64 %41
  %73 = bitcast i8*** %72 to i8**
  store i8* %70, i8** %73, align 8
  %74 = load i32*, i32** %33, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 %41
  store i32 %52, i32* %75, align 4
  %76 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %12, align 8
  %77 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %76, i64 0, i32 44
  %78 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %77, align 8
  br label %79

79:                                               ; preds = %39, %64
  %80 = phi %struct.jpeg_decompress_struct* [ %40, %39 ], [ %76, %64 ]
  %81 = phi %struct.jpeg_component_info* [ %45, %39 ], [ %78, %64 ]
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %80, i64 0, i32 61
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %81, i64 %41, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = sdiv i32 %83, %85
  %87 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %80, i64 0, i32 7
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %86, -1
  %90 = add i32 %89, %88
  %91 = sdiv i32 %90, %86
  %92 = add nsw i32 %91, 7
  %93 = and i32 %92, -8
  %94 = mul nsw i32 %93, %52
  %95 = load i32*, i32** %35, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 %41
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %93
  br i1 %98, label %113, label %99

99:                                               ; preds = %79
  %100 = load i8**, i8*** %36, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 %41
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %99
  call void @_ZdlPv(i8* nonnull %102) #12
  br label %105

105:                                              ; preds = %99, %104
  %106 = sext i32 %94 to i64
  %107 = call i8* @_Znam(i64 %106) #12
  %108 = load i8**, i8*** %36, align 8
  %109 = getelementptr inbounds i8*, i8** %108, i64 %41
  store i8* %107, i8** %109, align 8
  %110 = load i32*, i32** %35, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 %41
  store i32 %93, i32* %111, align 4
  %112 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %12, align 8
  br label %113

113:                                              ; preds = %79, %105
  %114 = phi %struct.jpeg_decompress_struct* [ %80, %79 ], [ %112, %105 ]
  %115 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %114, i64 0, i32 61
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %114, i64 0, i32 44
  %118 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %117, align 8
  %119 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %118, i64 %41, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = sdiv i32 %116, %120
  %122 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %114, i64 0, i32 7
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %121, -1
  %125 = add i32 %124, %123
  %126 = sdiv i32 %125, %121
  %127 = add nsw i32 %126, 7
  %128 = and i32 %127, -8
  %129 = icmp eq i32 %128, %126
  br i1 %129, label %131, label %130

130:                                              ; preds = %113
  store i32 1, i32* %37, align 8
  br label %131

131:                                              ; preds = %113, %130
  %132 = add nuw nsw i64 %41, 1
  %133 = load i32, i32* %29, align 4
  %134 = sext i32 %133 to i64
  %135 = icmp slt i64 %132, %134
  br i1 %135, label %39, label %136

136:                                              ; preds = %131, %25, %21, %6, %3
  %137 = phi i32 [ 0, %3 ], [ 0, %6 ], [ 0, %21 ], [ 1, %25 ], [ 1, %131 ]
  ret i32 %137
}

declare i32 @ValidateJpeg(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #7

declare i32 @jpeg_read_header(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6libyuv12MJpegDecoder18AllocOutputBuffersEi(%"class.libyuv::MJpegDecoder"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %78, label %6

6:                                                ; preds = %2
  tail call void @_ZN6libyuv12MJpegDecoder20DestroyOutputBuffersEv(%"class.libyuv::MJpegDecoder"* %0)
  %7 = sext i32 %1 to i64
  %8 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 8)
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 -1, i64 %10
  %12 = tail call i8* @_Znam(i64 %11) #12
  %13 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %14 = bitcast i8**** %13 to i8**
  store i8* %12, i8** %14, align 8
  %15 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %7, i64 4)
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 -1, i64 %17
  %19 = tail call i8* @_Znam(i64 %18) #12
  %20 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 8
  %21 = bitcast i32** %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = tail call i8* @_Znam(i64 %11) #12
  %23 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 9
  %24 = bitcast i8*** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = tail call i8* @_Znam(i64 %18) #12
  %26 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 10
  %27 = bitcast i32** %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = icmp sgt i32 %1, 0
  br i1 %28, label %29, label %54

29:                                               ; preds = %6
  %30 = bitcast i8* %12 to i8***
  store i8** null, i8*** %30, align 8
  %31 = load i32*, i32** %20, align 8
  store i32 0, i32* %31, align 4
  %32 = load i8**, i8*** %23, align 8
  store i8* null, i8** %32, align 8
  %33 = load i32*, i32** %26, align 8
  store i32 0, i32* %33, align 4
  %34 = icmp eq i32 %1, 1
  br i1 %34, label %54, label %35

35:                                               ; preds = %29
  %36 = zext i32 %1 to i64
  %37 = add nsw i64 %36, -1
  %38 = and i64 %37, 1
  %39 = icmp eq i32 %1, 2
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = sub nsw i64 %37, %38
  br label %55

42:                                               ; preds = %55, %35
  %43 = phi i64 [ 1, %35 ], [ %75, %55 ]
  %44 = icmp eq i64 %38, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %42
  %46 = load i8***, i8**** %13, align 8
  %47 = getelementptr inbounds i8**, i8*** %46, i64 %43
  store i8** null, i8*** %47, align 8
  %48 = load i32*, i32** %20, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 %43
  store i32 0, i32* %49, align 4
  %50 = load i8**, i8*** %23, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 %43
  store i8* null, i8** %51, align 8
  %52 = load i32*, i32** %26, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 %43
  store i32 0, i32* %53, align 4
  br label %54

54:                                               ; preds = %45, %42, %29, %6
  store i32 %1, i32* %3, align 4
  br label %78

55:                                               ; preds = %55, %40
  %56 = phi i64 [ 1, %40 ], [ %75, %55 ]
  %57 = phi i64 [ %41, %40 ], [ %76, %55 ]
  %58 = load i8***, i8**** %13, align 8
  %59 = getelementptr inbounds i8**, i8*** %58, i64 %56
  store i8** null, i8*** %59, align 8
  %60 = load i32*, i32** %20, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 %56
  store i32 0, i32* %61, align 4
  %62 = load i8**, i8*** %23, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 %56
  store i8* null, i8** %63, align 8
  %64 = load i32*, i32** %26, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 %56
  store i32 0, i32* %65, align 4
  %66 = add nuw nsw i64 %56, 1
  %67 = load i8***, i8**** %13, align 8
  %68 = getelementptr inbounds i8**, i8*** %67, i64 %66
  store i8** null, i8*** %68, align 8
  %69 = load i32*, i32** %20, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  store i32 0, i32* %70, align 4
  %71 = load i8**, i8*** %23, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i64 %66
  store i8* null, i8** %72, align 8
  %73 = load i32*, i32** %26, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 %66
  store i32 0, i32* %74, align 4
  %75 = add nuw nsw i64 %56, 2
  %76 = add i64 %57, -2
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %42, label %55

78:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder16GetNumComponentsEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder31GetComponentScanlinesPerImcuRowEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 62
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sdiv i32 %6, %11
  %13 = shl i32 %6, 3
  %14 = add i32 %13, -1
  %15 = add i32 %14, %12
  %16 = sdiv i32 %15, %12
  ret i32 %16
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder18GetComponentStrideEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 61
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sdiv i32 %6, %11
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %12, -1
  %16 = add i32 %15, %14
  %17 = sdiv i32 %16, %12
  %18 = add nsw i32 %17, 7
  %19 = and i32 %18, -8
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder17GetComponentWidthEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 61
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sdiv i32 %6, %11
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %12, -1
  %16 = add i32 %15, %14
  %17 = sdiv i32 %16, %12
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder8GetWidthEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder9GetHeightEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder13GetColorSpaceEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 10
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder18GetHorizSampFactorEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %6 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 %7, i32 2
  %9 = load i32, i32* %8, align 8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder17GetVertSampFactorEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %6 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %5, align 8
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %6, i64 %7, i32 3
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder21GetHorizSubSampFactorEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 61
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sdiv i32 %6, %11
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder20GetVertSubSampFactorEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 62
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sdiv i32 %6, %11
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder27GetImageScanlinesPerImcuRowEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 62
  %5 = load i32, i32* %4, align 4
  %6 = shl nsw i32 %5, 3
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder18GetComponentHeightEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 62
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sdiv i32 %6, %11
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %12, -1
  %16 = add i32 %15, %14
  %17 = sdiv i32 %16, %12
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder16GetComponentSizeEi(%"class.libyuv::MJpegDecoder"* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %4 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 61
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 44
  %8 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %7, align 8
  %9 = sext i32 %1 to i64
  %10 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = sdiv i32 %6, %11
  %13 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 7
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %12, -1
  %16 = add i32 %15, %14
  %17 = sdiv i32 %16, %12
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 62
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %8, i64 %9, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = sdiv i32 %19, %21
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %4, i64 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %22, -1
  %26 = add i32 %25, %24
  %27 = sdiv i32 %26, %22
  %28 = mul nsw i32 %27, %17
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder11UnloadFrameEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 4
  %3 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %2, align 8
  %4 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %3, i64 0, i32 1, i64 0
  %5 = call i32 @_setjmp(%struct.__jmp_buf_tag* %4) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %8, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %9) #13
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i32 [ 1, %7 ], [ 0, %1 ]
  ret i32 %11
}

declare void @jpeg_abort_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder15DecodeToBuffersEPPhii(%"class.libyuv::MJpegDecoder"* readonly, i8** nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %6 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %2
  br i1 %9, label %10, label %359

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %6, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, %3
  br i1 %13, label %359, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 4
  %16 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %15, align 8
  %17 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %16, i64 0, i32 1, i64 0
  %18 = call i32 @_setjmp(%struct.__jmp_buf_tag* %17) #15
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %359

20:                                               ; preds = %14
  %21 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %21, i64 0, i32 16
  store i32 1, i32* %22, align 4
  %23 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %23, i64 0, i32 17
  store i32 1, i32* %24, align 8
  %25 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %26 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %25, i64 0, i32 21
  store i32 0, i32* %26, align 8
  %27 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %27, i64 0, i32 18
  store i32 0, i32* %28, align 4
  %29 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %30 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %29, i64 0, i32 26
  store i32 0, i32* %30, align 4
  %31 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %31, i64 0, i32 19
  store i32 0, i32* %32, align 8
  %33 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %34 = call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %33) #13
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %359, label %36

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 9
  %38 = load i8**, i8*** %37, align 8
  %39 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %94

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 8
  %44 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %45 = load i32*, i32** %43, align 8
  br label %46

46:                                               ; preds = %58, %42
  %47 = phi i32 [ %40, %42 ], [ %59, %58 ]
  %48 = phi i32* [ %45, %42 ], [ %60, %58 ]
  %49 = phi i64 [ 0, %42 ], [ %61, %58 ]
  %50 = getelementptr inbounds i32, i32* %48, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %46
  %54 = getelementptr inbounds i8*, i8** %38, i64 %49
  %55 = load i8*, i8** %54, align 8
  br label %64

56:                                               ; preds = %64
  %57 = load i32, i32* %39, align 4
  br label %58

58:                                               ; preds = %56, %46
  %59 = phi i32 [ %57, %56 ], [ %47, %46 ]
  %60 = phi i32* [ %89, %56 ], [ %48, %46 ]
  %61 = add nuw nsw i64 %49, 1
  %62 = sext i32 %59 to i64
  %63 = icmp slt i64 %61, %62
  br i1 %63, label %46, label %94

64:                                               ; preds = %64, %53
  %65 = phi i64 [ 0, %53 ], [ %88, %64 ]
  %66 = phi i8* [ %55, %53 ], [ %87, %64 ]
  %67 = load i8***, i8**** %44, align 8
  %68 = getelementptr inbounds i8**, i8*** %67, i64 %49
  %69 = load i8**, i8*** %68, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 %65
  store i8* %66, i8** %70, align 8
  %71 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %72 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %71, i64 0, i32 61
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %71, i64 0, i32 44
  %75 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %74, align 8
  %76 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %75, i64 %49, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = sdiv i32 %73, %77
  %79 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %71, i64 0, i32 7
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %78, -1
  %82 = add i32 %81, %80
  %83 = sdiv i32 %82, %78
  %84 = add nsw i32 %83, 7
  %85 = and i32 %84, -8
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %66, i64 %86
  %88 = add nuw nsw i64 %65, 1
  %89 = load i32*, i32** %43, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 %49
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = icmp slt i64 %88, %92
  br i1 %93, label %64, label %56

94:                                               ; preds = %58, %36
  %95 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %96 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %95, i64 0, i32 8
  %97 = load i32, i32* %96, align 4
  %98 = sub nsw i32 %97, %3
  %99 = sdiv i32 %98, 2
  %100 = icmp sgt i32 %98, 1
  br i1 %100, label %101, label %206

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %95, i64 0, i32 62
  %103 = load i32, i32* %102, align 4
  %104 = shl nsw i32 %103, 3
  %105 = icmp slt i32 %99, %104
  br i1 %105, label %123, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  br label %108

108:                                              ; preds = %106, %117
  %109 = phi i32 [ %104, %106 ], [ %120, %117 ]
  %110 = phi %struct.jpeg_decompress_struct* [ %95, %106 ], [ %115, %117 ]
  %111 = phi i32 [ %99, %106 ], [ %121, %117 ]
  %112 = load i8***, i8**** %107, align 8
  %113 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %110, i8*** %112, i32 %109) #13
  %114 = icmp eq i32 %109, %113
  %115 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  br i1 %114, label %117, label %116

116:                                              ; preds = %108
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %115) #13
  br label %359

117:                                              ; preds = %108
  %118 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %115, i64 0, i32 62
  %119 = load i32, i32* %118, align 4
  %120 = shl nsw i32 %119, 3
  %121 = sub nsw i32 %111, %120
  %122 = icmp slt i32 %121, %120
  br i1 %122, label %123, label %108

123:                                              ; preds = %117, %101
  %124 = phi i32 [ %99, %101 ], [ %121, %117 ]
  %125 = phi %struct.jpeg_decompress_struct* [ %95, %101 ], [ %115, %117 ]
  %126 = phi i32 [ %104, %101 ], [ %120, %117 ]
  %127 = icmp sgt i32 %124, 0
  br i1 %127, label %128, label %206

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %130 = load i8***, i8**** %129, align 8
  %131 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %125, i8*** %130, i32 %126) #13
  %132 = icmp eq i32 %126, %131
  br i1 %132, label %133, label %139

133:                                              ; preds = %128
  %134 = load i32, i32* %39, align 4
  %135 = icmp sgt i32 %134, 0
  %136 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %137 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %136, i64 0, i32 62
  %138 = load i32, i32* %137, align 4
  br i1 %135, label %147, label %141

139:                                              ; preds = %128
  %140 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %140) #13
  br label %359

141:                                              ; preds = %147, %133
  %142 = phi %struct.jpeg_decompress_struct* [ %136, %133 ], [ %203, %147 ]
  %143 = phi i32 [ %138, %133 ], [ %205, %147 ]
  %144 = shl nsw i32 %143, 3
  %145 = add i32 %124, %3
  %146 = sub i32 %145, %144
  br label %206

147:                                              ; preds = %133, %147
  %148 = phi i64 [ %199, %147 ], [ 0, %133 ]
  %149 = phi i32 [ %205, %147 ], [ %138, %133 ]
  %150 = phi %struct.jpeg_decompress_struct* [ %203, %147 ], [ %136, %133 ]
  %151 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %150, i64 0, i32 44
  %152 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %151, align 8
  %153 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 %148, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = sdiv i32 %149, %154
  %156 = sdiv i32 %124, %155
  %157 = shl i32 %149, 3
  %158 = add i32 %157, -1
  %159 = add i32 %158, %155
  %160 = sdiv i32 %159, %155
  %161 = sub nsw i32 %160, %156
  %162 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %150, i64 0, i32 61
  %163 = load i32, i32* %162, align 8
  %164 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %152, i64 %148, i32 2
  %165 = load i32, i32* %164, align 8
  %166 = sdiv i32 %163, %165
  %167 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %150, i64 0, i32 7
  %168 = load i32, i32* %167, align 8
  %169 = add i32 %166, -1
  %170 = add i32 %169, %168
  %171 = sdiv i32 %170, %166
  %172 = add nsw i32 %171, 7
  %173 = and i32 %172, -8
  %174 = mul nsw i32 %173, %156
  %175 = load i8**, i8*** %37, align 8
  %176 = getelementptr inbounds i8*, i8** %175, i64 %148
  %177 = load i8*, i8** %176, align 8
  %178 = sext i32 %174 to i64
  %179 = getelementptr inbounds i8, i8* %177, i64 %178
  %180 = getelementptr inbounds i8*, i8** %1, i64 %148
  %181 = load i8*, i8** %180, align 8
  call void @CopyPlane(i8* %179, i32 %173, i8* %181, i32 %171, i32 %171, i32 %161) #13
  %182 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %183 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %182, i64 0, i32 61
  %184 = load i32, i32* %183, align 8
  %185 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %182, i64 0, i32 44
  %186 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %185, align 8
  %187 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %186, i64 %148, i32 2
  %188 = load i32, i32* %187, align 8
  %189 = sdiv i32 %184, %188
  %190 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %182, i64 0, i32 7
  %191 = load i32, i32* %190, align 8
  %192 = add i32 %189, -1
  %193 = add i32 %192, %191
  %194 = sdiv i32 %193, %189
  %195 = mul nsw i32 %194, %161
  %196 = load i8*, i8** %180, align 8
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds i8, i8* %196, i64 %197
  store i8* %198, i8** %180, align 8
  %199 = add nuw nsw i64 %148, 1
  %200 = load i32, i32* %39, align 4
  %201 = sext i32 %200 to i64
  %202 = icmp slt i64 %199, %201
  %203 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %204 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %203, i64 0, i32 62
  %205 = load i32, i32* %204, align 4
  br i1 %202, label %147, label %141

206:                                              ; preds = %123, %141, %94
  %207 = phi %struct.jpeg_decompress_struct* [ %142, %141 ], [ %125, %123 ], [ %95, %94 ]
  %208 = phi i32 [ %146, %141 ], [ %3, %123 ], [ %3, %94 ]
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %207, i64 0, i32 62
  %210 = load i32, i32* %209, align 4
  %211 = shl nsw i32 %210, 3
  %212 = icmp sgt i32 %208, %211
  br i1 %212, label %213, label %290

213:                                              ; preds = %206
  %214 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  br label %215

215:                                              ; preds = %213, %230
  %216 = phi i32 [ %211, %213 ], [ %233, %230 ]
  %217 = phi %struct.jpeg_decompress_struct* [ %207, %213 ], [ %231, %230 ]
  %218 = phi i32 [ %208, %213 ], [ %234, %230 ]
  %219 = load i8***, i8**** %214, align 8
  %220 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %217, i8*** %219, i32 %216) #13
  %221 = icmp eq i32 %216, %220
  br i1 %221, label %222, label %228

222:                                              ; preds = %215
  %223 = load i32, i32* %39, align 4
  %224 = icmp sgt i32 %223, 0
  %225 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %226 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %225, i64 0, i32 62
  %227 = load i32, i32* %226, align 4
  br i1 %224, label %236, label %230

228:                                              ; preds = %215
  %229 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %229) #13
  br label %359

230:                                              ; preds = %236, %222
  %231 = phi %struct.jpeg_decompress_struct* [ %225, %222 ], [ %287, %236 ]
  %232 = phi i32 [ %227, %222 ], [ %289, %236 ]
  %233 = shl nsw i32 %232, 3
  %234 = sub nsw i32 %218, %233
  %235 = icmp sgt i32 %234, %233
  br i1 %235, label %215, label %290

236:                                              ; preds = %222, %236
  %237 = phi i64 [ %283, %236 ], [ 0, %222 ]
  %238 = phi i32 [ %289, %236 ], [ %227, %222 ]
  %239 = phi %struct.jpeg_decompress_struct* [ %287, %236 ], [ %225, %222 ]
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %239, i64 0, i32 44
  %241 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %240, align 8
  %242 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %241, i64 %237, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = sdiv i32 %238, %243
  %245 = shl i32 %238, 3
  %246 = add i32 %245, -1
  %247 = add i32 %246, %244
  %248 = sdiv i32 %247, %244
  %249 = load i8**, i8*** %37, align 8
  %250 = getelementptr inbounds i8*, i8** %249, i64 %237
  %251 = load i8*, i8** %250, align 8
  %252 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %239, i64 0, i32 61
  %253 = load i32, i32* %252, align 8
  %254 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %241, i64 %237, i32 2
  %255 = load i32, i32* %254, align 8
  %256 = sdiv i32 %253, %255
  %257 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %239, i64 0, i32 7
  %258 = load i32, i32* %257, align 8
  %259 = add i32 %256, -1
  %260 = add i32 %259, %258
  %261 = sdiv i32 %260, %256
  %262 = add nsw i32 %261, 7
  %263 = and i32 %262, -8
  %264 = getelementptr inbounds i8*, i8** %1, i64 %237
  %265 = load i8*, i8** %264, align 8
  call void @CopyPlane(i8* %251, i32 %263, i8* %265, i32 %261, i32 %261, i32 %248) #13
  %266 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %267 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %266, i64 0, i32 61
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %266, i64 0, i32 44
  %270 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %269, align 8
  %271 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %270, i64 %237, i32 2
  %272 = load i32, i32* %271, align 8
  %273 = sdiv i32 %268, %272
  %274 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %266, i64 0, i32 7
  %275 = load i32, i32* %274, align 8
  %276 = add i32 %273, -1
  %277 = add i32 %276, %275
  %278 = sdiv i32 %277, %273
  %279 = mul nsw i32 %278, %248
  %280 = load i8*, i8** %264, align 8
  %281 = sext i32 %279 to i64
  %282 = getelementptr inbounds i8, i8* %280, i64 %281
  store i8* %282, i8** %264, align 8
  %283 = add nuw nsw i64 %237, 1
  %284 = load i32, i32* %39, align 4
  %285 = sext i32 %284 to i64
  %286 = icmp slt i64 %283, %285
  %287 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %288 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %287, i64 0, i32 62
  %289 = load i32, i32* %288, align 4
  br i1 %286, label %236, label %230

290:                                              ; preds = %230, %206
  %291 = phi i32 [ %208, %206 ], [ %234, %230 ]
  %292 = phi %struct.jpeg_decompress_struct* [ %207, %206 ], [ %231, %230 ]
  %293 = phi i32 [ %211, %206 ], [ %233, %230 ]
  %294 = icmp sgt i32 %291, 0
  br i1 %294, label %295, label %357

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %297 = load i8***, i8**** %296, align 8
  %298 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %292, i8*** %297, i32 %293) #13
  %299 = icmp eq i32 %293, %298
  br i1 %299, label %300, label %305

300:                                              ; preds = %295
  %301 = load i32, i32* %39, align 4
  %302 = icmp sgt i32 %301, 0
  br i1 %302, label %303, label %357

303:                                              ; preds = %300
  %304 = add nsw i32 %291, -1
  br label %307

305:                                              ; preds = %295
  %306 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %306) #13
  br label %359

307:                                              ; preds = %303, %307
  %308 = phi i64 [ 0, %303 ], [ %353, %307 ]
  %309 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %310 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %309, i64 0, i32 62
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %309, i64 0, i32 44
  %313 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %312, align 8
  %314 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %313, i64 %308, i32 3
  %315 = load i32, i32* %314, align 4
  %316 = sdiv i32 %311, %315
  %317 = add i32 %304, %316
  %318 = sdiv i32 %317, %316
  %319 = load i8**, i8*** %37, align 8
  %320 = getelementptr inbounds i8*, i8** %319, i64 %308
  %321 = load i8*, i8** %320, align 8
  %322 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %309, i64 0, i32 61
  %323 = load i32, i32* %322, align 8
  %324 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %313, i64 %308, i32 2
  %325 = load i32, i32* %324, align 8
  %326 = sdiv i32 %323, %325
  %327 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %309, i64 0, i32 7
  %328 = load i32, i32* %327, align 8
  %329 = add i32 %326, -1
  %330 = add i32 %329, %328
  %331 = sdiv i32 %330, %326
  %332 = add nsw i32 %331, 7
  %333 = and i32 %332, -8
  %334 = getelementptr inbounds i8*, i8** %1, i64 %308
  %335 = load i8*, i8** %334, align 8
  call void @CopyPlane(i8* %321, i32 %333, i8* %335, i32 %331, i32 %331, i32 %318) #13
  %336 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  %337 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %336, i64 0, i32 61
  %338 = load i32, i32* %337, align 8
  %339 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %336, i64 0, i32 44
  %340 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %339, align 8
  %341 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %340, i64 %308, i32 2
  %342 = load i32, i32* %341, align 8
  %343 = sdiv i32 %338, %342
  %344 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %336, i64 0, i32 7
  %345 = load i32, i32* %344, align 8
  %346 = add i32 %343, -1
  %347 = add i32 %346, %345
  %348 = sdiv i32 %347, %343
  %349 = mul nsw i32 %348, %318
  %350 = load i8*, i8** %334, align 8
  %351 = sext i32 %349 to i64
  %352 = getelementptr inbounds i8, i8* %350, i64 %351
  store i8* %352, i8** %334, align 8
  %353 = add nuw nsw i64 %308, 1
  %354 = load i32, i32* %39, align 4
  %355 = sext i32 %354 to i64
  %356 = icmp slt i64 %353, %355
  br i1 %356, label %307, label %357

357:                                              ; preds = %307, %300, %290
  %358 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %5, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %358) #13
  br label %359

359:                                              ; preds = %116, %139, %228, %305, %357, %20, %14, %10, %4
  %360 = phi i32 [ 0, %4 ], [ 0, %10 ], [ 0, %14 ], [ 0, %20 ], [ 0, %116 ], [ 0, %228 ], [ 1, %357 ], [ 0, %305 ], [ 0, %139 ]
  ret i32 %360
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder11StartDecodeEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %3, i64 0, i32 16
  store i32 1, i32* %4, align 4
  %5 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %5, i64 0, i32 17
  store i32 1, i32* %6, align 8
  %7 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %7, i64 0, i32 21
  store i32 0, i32* %8, align 8
  %9 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %9, i64 0, i32 18
  store i32 0, i32* %10, align 4
  %11 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %11, i64 0, i32 26
  store i32 0, i32* %12, align 4
  %13 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %14 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %13, i64 0, i32 19
  store i32 0, i32* %14, align 8
  %15 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  %16 = tail call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %15) #13
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i32
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6libyuv12MJpegDecoder19SetScanlinePointersEPPh(%"class.libyuv::MJpegDecoder"* nocapture readonly, i8** nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %10 = load i32*, i32** %7, align 8
  br label %12

11:                                               ; preds = %24, %2
  ret void

12:                                               ; preds = %6, %24
  %13 = phi i32 [ %4, %6 ], [ %25, %24 ]
  %14 = phi i32* [ %10, %6 ], [ %26, %24 ]
  %15 = phi i64 [ 0, %6 ], [ %27, %24 ]
  %16 = getelementptr inbounds i32, i32* %14, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8*, i8** %1, i64 %15
  %21 = load i8*, i8** %20, align 8
  br label %30

22:                                               ; preds = %30
  %23 = load i32, i32* %3, align 4
  br label %24

24:                                               ; preds = %22, %12
  %25 = phi i32 [ %23, %22 ], [ %13, %12 ]
  %26 = phi i32* [ %55, %22 ], [ %14, %12 ]
  %27 = add nuw nsw i64 %15, 1
  %28 = sext i32 %25 to i64
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %12, label %11

30:                                               ; preds = %19, %30
  %31 = phi i64 [ 0, %19 ], [ %54, %30 ]
  %32 = phi i8* [ %21, %19 ], [ %53, %30 ]
  %33 = load i8***, i8**** %8, align 8
  %34 = getelementptr inbounds i8**, i8*** %33, i64 %15
  %35 = load i8**, i8*** %34, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 %31
  store i8* %32, i8** %36, align 8
  %37 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %9, align 8
  %38 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i64 0, i32 61
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i64 0, i32 44
  %41 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %40, align 8
  %42 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %41, i64 %15, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = sdiv i32 %39, %43
  %45 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %37, i64 0, i32 7
  %46 = load i32, i32* %45, align 8
  %47 = add i32 %44, -1
  %48 = add i32 %47, %46
  %49 = sdiv i32 %48, %44
  %50 = add nsw i32 %49, 7
  %51 = and i32 %50, -8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %32, i64 %52
  %54 = add nuw nsw i64 %31, 1
  %55 = load i32*, i32** %7, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %15
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = icmp slt i64 %54, %58
  br i1 %59, label %30, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder12FinishDecodeEv(%"class.libyuv::MJpegDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %3 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %2, align 8
  tail call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %3) #13
  ret i32 1
}

declare void @CopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder16DecodeToCallbackEPFvPvPKPKhPKiiES1_ii(%"class.libyuv::MJpegDecoder"* readonly, void (i8*, i8**, i32*, i32)* nocapture, i8*, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 2
  %7 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %7, i64 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %3
  br i1 %10, label %11, label %274

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %7, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, %4
  br i1 %14, label %274, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 4
  %17 = load %"struct.libyuv::SetJmpErrorMgr"*, %"struct.libyuv::SetJmpErrorMgr"** %16, align 8
  %18 = getelementptr inbounds %"struct.libyuv::SetJmpErrorMgr", %"struct.libyuv::SetJmpErrorMgr"* %17, i64 0, i32 1, i64 0
  %19 = call i32 @_setjmp(%struct.__jmp_buf_tag* %18) #15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %274

21:                                               ; preds = %15
  %22 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %22, i64 0, i32 16
  store i32 1, i32* %23, align 4
  %24 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %24, i64 0, i32 17
  store i32 1, i32* %25, align 8
  %26 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %27 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %26, i64 0, i32 21
  store i32 0, i32* %27, align 8
  %28 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %29 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %28, i64 0, i32 18
  store i32 0, i32* %29, align 4
  %30 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %30, i64 0, i32 26
  store i32 0, i32* %31, align 4
  %32 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %33 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %32, i64 0, i32 19
  store i32 0, i32* %33, align 8
  %34 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %35 = call i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct* %34) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %274, label %37

37:                                               ; preds = %21
  %38 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 9
  %39 = load i8**, i8*** %38, align 8
  %40 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 6
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %95

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 8
  %45 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %46 = load i32*, i32** %44, align 8
  br label %47

47:                                               ; preds = %59, %43
  %48 = phi i32 [ %41, %43 ], [ %60, %59 ]
  %49 = phi i32* [ %46, %43 ], [ %61, %59 ]
  %50 = phi i64 [ 0, %43 ], [ %62, %59 ]
  %51 = getelementptr inbounds i32, i32* %49, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %47
  %55 = getelementptr inbounds i8*, i8** %39, i64 %50
  %56 = load i8*, i8** %55, align 8
  br label %65

57:                                               ; preds = %65
  %58 = load i32, i32* %40, align 4
  br label %59

59:                                               ; preds = %57, %47
  %60 = phi i32 [ %58, %57 ], [ %48, %47 ]
  %61 = phi i32* [ %90, %57 ], [ %49, %47 ]
  %62 = add nuw nsw i64 %50, 1
  %63 = sext i32 %60 to i64
  %64 = icmp slt i64 %62, %63
  br i1 %64, label %47, label %95

65:                                               ; preds = %65, %54
  %66 = phi i64 [ 0, %54 ], [ %89, %65 ]
  %67 = phi i8* [ %56, %54 ], [ %88, %65 ]
  %68 = load i8***, i8**** %45, align 8
  %69 = getelementptr inbounds i8**, i8*** %68, i64 %50
  %70 = load i8**, i8*** %69, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 %66
  store i8* %67, i8** %71, align 8
  %72 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %73 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %72, i64 0, i32 61
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %72, i64 0, i32 44
  %76 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %75, align 8
  %77 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %76, i64 %50, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = sdiv i32 %74, %78
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %72, i64 0, i32 7
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %79, -1
  %83 = add i32 %82, %81
  %84 = sdiv i32 %83, %79
  %85 = add nsw i32 %84, 7
  %86 = and i32 %85, -8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %67, i64 %87
  %89 = add nuw nsw i64 %66, 1
  %90 = load i32*, i32** %44, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 %50
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = icmp slt i64 %89, %93
  br i1 %94, label %65, label %57

95:                                               ; preds = %59, %37
  %96 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %97 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %96, i64 0, i32 8
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %98, %4
  %100 = sdiv i32 %99, 2
  %101 = icmp sgt i32 %99, 1
  br i1 %101, label %102, label %223

102:                                              ; preds = %95
  %103 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %96, i64 0, i32 62
  %104 = load i32, i32* %103, align 4
  %105 = shl nsw i32 %104, 3
  %106 = icmp slt i32 %100, %105
  br i1 %106, label %124, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  br label %109

109:                                              ; preds = %107, %118
  %110 = phi i32 [ %105, %107 ], [ %121, %118 ]
  %111 = phi %struct.jpeg_decompress_struct* [ %96, %107 ], [ %116, %118 ]
  %112 = phi i32 [ %100, %107 ], [ %122, %118 ]
  %113 = load i8***, i8**** %108, align 8
  %114 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %111, i8*** %113, i32 %110) #13
  %115 = icmp eq i32 %110, %114
  %116 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  br i1 %115, label %118, label %117

117:                                              ; preds = %109
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %116) #13
  br label %274

118:                                              ; preds = %109
  %119 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %116, i64 0, i32 62
  %120 = load i32, i32* %119, align 4
  %121 = shl nsw i32 %120, 3
  %122 = sub nsw i32 %112, %121
  %123 = icmp slt i32 %122, %121
  br i1 %123, label %124, label %109

124:                                              ; preds = %118, %102
  %125 = phi i32 [ %100, %102 ], [ %122, %118 ]
  %126 = phi %struct.jpeg_decompress_struct* [ %96, %102 ], [ %116, %118 ]
  %127 = phi i32 [ %105, %102 ], [ %121, %118 ]
  %128 = icmp sgt i32 %125, 0
  br i1 %128, label %129, label %223

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %131 = load i8***, i8**** %130, align 8
  %132 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %126, i8*** %131, i32 %127) #13
  %133 = icmp eq i32 %127, %132
  br i1 %133, label %134, label %140

134:                                              ; preds = %129
  %135 = load i32, i32* %40, align 4
  %136 = icmp sgt i32 %135, 0
  %137 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %138 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %137, i64 0, i32 62
  %139 = load i32, i32* %138, align 4
  br i1 %136, label %151, label %142

140:                                              ; preds = %129
  %141 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %141) #13
  br label %274

142:                                              ; preds = %151, %134
  %143 = phi i32 [ %139, %134 ], [ %185, %151 ]
  %144 = shl nsw i32 %143, 3
  %145 = sub nsw i32 %144, %125
  %146 = load i8**, i8*** %38, align 8
  %147 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 10
  %148 = load i32*, i32** %147, align 8
  call void %1(i8* %2, i8** %146, i32* %148, i32 %145) #13
  %149 = load i32, i32* %40, align 4
  %150 = icmp sgt i32 %149, 0
  br i1 %150, label %189, label %186

151:                                              ; preds = %134, %151
  %152 = phi i64 [ %179, %151 ], [ 0, %134 ]
  %153 = phi i32 [ %185, %151 ], [ %139, %134 ]
  %154 = phi %struct.jpeg_decompress_struct* [ %183, %151 ], [ %137, %134 ]
  %155 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %154, i64 0, i32 44
  %156 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %155, align 8
  %157 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 %152, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = sdiv i32 %153, %158
  %160 = sdiv i32 %125, %159
  %161 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %154, i64 0, i32 61
  %162 = load i32, i32* %161, align 8
  %163 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %156, i64 %152, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = sdiv i32 %162, %164
  %166 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %154, i64 0, i32 7
  %167 = load i32, i32* %166, align 8
  %168 = add i32 %165, -1
  %169 = add i32 %168, %167
  %170 = sdiv i32 %169, %165
  %171 = add nsw i32 %170, 7
  %172 = and i32 %171, -8
  %173 = mul nsw i32 %172, %160
  %174 = load i8**, i8*** %38, align 8
  %175 = getelementptr inbounds i8*, i8** %174, i64 %152
  %176 = load i8*, i8** %175, align 8
  %177 = sext i32 %173 to i64
  %178 = getelementptr inbounds i8, i8* %176, i64 %177
  store i8* %178, i8** %175, align 8
  %179 = add nuw nsw i64 %152, 1
  %180 = load i32, i32* %40, align 4
  %181 = sext i32 %180 to i64
  %182 = icmp slt i64 %179, %181
  %183 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %184 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %183, i64 0, i32 62
  %185 = load i32, i32* %184, align 4
  br i1 %182, label %151, label %142

186:                                              ; preds = %189, %142
  %187 = sub nsw i32 %4, %145
  %188 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  br label %223

189:                                              ; preds = %142, %189
  %190 = phi i64 [ %219, %189 ], [ 0, %142 ]
  %191 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %192 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %191, i64 0, i32 62
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %191, i64 0, i32 44
  %195 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %194, align 8
  %196 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i64 %190, i32 3
  %197 = load i32, i32* %196, align 4
  %198 = sdiv i32 %193, %197
  %199 = sdiv i32 %125, %198
  %200 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %191, i64 0, i32 61
  %201 = load i32, i32* %200, align 8
  %202 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %195, i64 %190, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = sdiv i32 %201, %203
  %205 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %191, i64 0, i32 7
  %206 = load i32, i32* %205, align 8
  %207 = add i32 %204, -1
  %208 = add i32 %207, %206
  %209 = sdiv i32 %208, %204
  %210 = add nsw i32 %209, 7
  %211 = and i32 %210, -8
  %212 = mul nsw i32 %211, %199
  %213 = load i8**, i8*** %38, align 8
  %214 = getelementptr inbounds i8*, i8** %213, i64 %190
  %215 = load i8*, i8** %214, align 8
  %216 = sext i32 %212 to i64
  %217 = sub nsw i64 0, %216
  %218 = getelementptr inbounds i8, i8* %215, i64 %217
  store i8* %218, i8** %214, align 8
  %219 = add nuw nsw i64 %190, 1
  %220 = load i32, i32* %40, align 4
  %221 = sext i32 %220 to i64
  %222 = icmp slt i64 %219, %221
  br i1 %222, label %189, label %186

223:                                              ; preds = %124, %186, %95
  %224 = phi %struct.jpeg_decompress_struct* [ %188, %186 ], [ %126, %124 ], [ %96, %95 ]
  %225 = phi i32 [ %187, %186 ], [ %4, %124 ], [ %4, %95 ]
  %226 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %224, i64 0, i32 62
  %227 = load i32, i32* %226, align 4
  %228 = shl nsw i32 %227, 3
  %229 = icmp slt i32 %225, %228
  br i1 %229, label %255, label %230

230:                                              ; preds = %223
  %231 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %232 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 10
  br label %233

233:                                              ; preds = %230, %242
  %234 = phi i32 [ %228, %230 ], [ %252, %242 ]
  %235 = phi %struct.jpeg_decompress_struct* [ %224, %230 ], [ %249, %242 ]
  %236 = phi i32 [ %225, %230 ], [ %253, %242 ]
  %237 = load i8***, i8**** %231, align 8
  %238 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %235, i8*** %237, i32 %234) #13
  %239 = icmp eq i32 %234, %238
  br i1 %239, label %242, label %240

240:                                              ; preds = %233
  %241 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %241) #13
  br label %274

242:                                              ; preds = %233
  %243 = load i8**, i8*** %38, align 8
  %244 = load i32*, i32** %232, align 8
  %245 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %246 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %245, i64 0, i32 62
  %247 = load i32, i32* %246, align 4
  %248 = shl nsw i32 %247, 3
  call void %1(i8* %2, i8** %243, i32* %244, i32 %248) #13
  %249 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  %250 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %249, i64 0, i32 62
  %251 = load i32, i32* %250, align 4
  %252 = shl nsw i32 %251, 3
  %253 = sub nsw i32 %236, %252
  %254 = icmp slt i32 %253, %252
  br i1 %254, label %255, label %233

255:                                              ; preds = %242, %223
  %256 = phi i32 [ %225, %223 ], [ %253, %242 ]
  %257 = phi %struct.jpeg_decompress_struct* [ %224, %223 ], [ %249, %242 ]
  %258 = phi i32 [ %228, %223 ], [ %252, %242 ]
  %259 = icmp sgt i32 %256, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 7
  %262 = load i8***, i8**** %261, align 8
  %263 = call i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct* %257, i8*** %262, i32 %258) #13
  %264 = icmp eq i32 %258, %263
  br i1 %264, label %267, label %265

265:                                              ; preds = %260
  %266 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %266) #13
  br label %274

267:                                              ; preds = %260
  %268 = load i8**, i8*** %38, align 8
  %269 = getelementptr inbounds %"class.libyuv::MJpegDecoder", %"class.libyuv::MJpegDecoder"* %0, i64 0, i32 10
  %270 = load i32*, i32** %269, align 8
  call void %1(i8* %2, i8** %268, i32* %270, i32 %256) #13
  %271 = load %struct.jpeg_decompress_struct*, %struct.jpeg_decompress_struct** %6, align 8
  br label %272

272:                                              ; preds = %267, %255
  %273 = phi %struct.jpeg_decompress_struct* [ %271, %267 ], [ %257, %255 ]
  call void @jpeg_abort_decompress(%struct.jpeg_decompress_struct* %273) #13
  br label %274

274:                                              ; preds = %117, %140, %240, %265, %272, %21, %15, %11, %5
  %275 = phi i32 [ 0, %5 ], [ 0, %11 ], [ 0, %15 ], [ 0, %21 ], [ 0, %117 ], [ 0, %240 ], [ 1, %272 ], [ 0, %265 ], [ 0, %140 ]
  ret i32 %275
}

; Function Attrs: noreturn nounwind
declare void @__longjmp_chk(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

declare i32 @jpeg_start_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6libyuv12MJpegDecoder25JpegSubsamplingTypeHelperEPiS1_i(i32* nocapture readonly, i32* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  switch i32 %2, label %55 [
    i32 3, label %4
    i32 1, label %49
  ]

4:                                                ; preds = %3
  %5 = load i32, i32* %0, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %55

7:                                                ; preds = %4
  %8 = load i32, i32* %1, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %55

10:                                               ; preds = %7
  %11 = getelementptr inbounds i32, i32* %0, i64 1
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %55 [
    i32 2, label %13
    i32 1, label %37
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, i32* %1, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds i32, i32* %0, i64 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = getelementptr inbounds i32, i32* %1, i64 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %56, label %25

25:                                               ; preds = %13, %17, %21
  %26 = getelementptr inbounds i32, i32* %1, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %55

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %0, i64 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %55

33:                                               ; preds = %29
  %34 = getelementptr inbounds i32, i32* %1, i64 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %56, label %55

37:                                               ; preds = %10
  %38 = getelementptr inbounds i32, i32* %1, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %55

41:                                               ; preds = %37
  %42 = getelementptr inbounds i32, i32* %0, i64 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %55

45:                                               ; preds = %41
  %46 = getelementptr inbounds i32, i32* %1, i64 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %56, label %55

49:                                               ; preds = %3
  %50 = load i32, i32* %0, align 4
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %55

52:                                               ; preds = %49
  %53 = load i32, i32* %1, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %56, label %55

55:                                               ; preds = %10, %33, %29, %25, %7, %4, %3, %52, %49, %37, %41, %45
  br label %56

56:                                               ; preds = %52, %45, %33, %21, %55
  %57 = phi i32 [ 4, %55 ], [ 0, %21 ], [ 1, %33 ], [ 2, %45 ], [ 3, %52 ]
  ret i32 %57
}

declare i32 @jpeg_read_raw_data(%struct.jpeg_decompress_struct*, i8***, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind returns_twice }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
