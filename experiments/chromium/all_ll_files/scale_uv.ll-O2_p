; ModuleID = '../../third_party/libyuv/source/scale_uv.cc'
source_filename = "../../third_party/libyuv/source/scale_uv.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@cpu_info_ = external local_unnamed_addr global i32, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @ScaleUVLinearUp2(i32, i32, i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #0 {
  %9 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @InitCpuFlags() #5
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %8 ]
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_C, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_SSSE3
  %18 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @InitCpuFlags() #5
  br label %22

22:                                               ; preds = %13, %20
  %23 = phi i32 [ %21, %20 ], [ %18, %13 ]
  %24 = and i32 %23, 1024
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, void (i8*, i8*, i32)* %17, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_AVX2
  %27 = icmp eq i32 %3, 1
  %28 = add nsw i32 %1, -1
  br i1 %27, label %29, label %34

29:                                               ; preds = %22
  %30 = sdiv i32 %28, 2
  %31 = mul nsw i32 %30, %4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %6, i64 %32
  tail call void %26(i8* %33, i8* %7, i32 %2) #5, !callees !2
  br label %52

34:                                               ; preds = %22
  %35 = add nsw i32 %3, -1
  %36 = tail call i32 @FixedDiv_X86(i32 %28, i32 %35) #5
  %37 = icmp sgt i32 %3, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = sext i32 %5 to i64
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i32 [ 32767, %38 ], [ %49, %40 ]
  %42 = phi i32 [ 0, %38 ], [ %50, %40 ]
  %43 = phi i8* [ %7, %38 ], [ %48, %40 ]
  %44 = ashr i32 %41, 16
  %45 = mul nsw i32 %44, %4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %6, i64 %46
  tail call void %26(i8* %47, i8* %43, i32 %2) #5, !callees !2
  %48 = getelementptr inbounds i8, i8* %43, i64 %39
  %49 = add nsw i32 %41, %36
  %50 = add nuw nsw i32 %42, 1
  %51 = icmp eq i32 %50, %3
  br i1 %51, label %52, label %40

52:                                               ; preds = %40, %34, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @ScaleUVRowUp2_Linear_Any_C(i8*, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Linear_Any_SSSE3(i8*, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Linear_Any_AVX2(i8*, i8*, i32) local_unnamed_addr #2

declare i32 @FixedDiv_X86(i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @ScaleUVBilinearUp2(i32, i32, i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #0 {
  %9 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @InitCpuFlags() #5
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %8 ]
  %15 = and i32 %14, 64
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_C, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_SSSE3
  %18 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @InitCpuFlags() #5
  br label %22

22:                                               ; preds = %13, %20
  %23 = phi i32 [ %21, %20 ], [ %18, %13 ]
  %24 = and i32 %23, 1024
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, void (i8*, i64, i8*, i64, i32)* %17, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_AVX2
  tail call void %26(i8* %6, i64 0, i8* %7, i64 0, i32 %2) #5, !callees !3
  %27 = sext i32 %5 to i64
  %28 = getelementptr inbounds i8, i8* %7, i64 %27
  %29 = add i32 %1, -1
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %22
  %32 = sext i32 %4 to i64
  %33 = shl nsw i32 %5, 1
  %34 = sext i32 %33 to i64
  br label %35

35:                                               ; preds = %35, %31
  %36 = phi i32 [ 0, %31 ], [ %41, %35 ]
  %37 = phi i8* [ %28, %31 ], [ %40, %35 ]
  %38 = phi i8* [ %6, %31 ], [ %39, %35 ]
  tail call void %26(i8* %38, i64 %32, i8* %37, i64 %27, i32 %2) #5, !callees !3
  %39 = getelementptr inbounds i8, i8* %38, i64 %32
  %40 = getelementptr inbounds i8, i8* %37, i64 %34
  %41 = add nuw nsw i32 %36, 1
  %42 = icmp eq i32 %41, %29
  br i1 %42, label %43, label %35

43:                                               ; preds = %35, %22
  %44 = phi i8* [ %6, %22 ], [ %39, %35 ]
  %45 = phi i8* [ %28, %22 ], [ %40, %35 ]
  %46 = and i32 %3, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  tail call void %26(i8* %44, i64 0, i8* %45, i64 0, i32 %2) #5, !callees !3
  br label %49

49:                                               ; preds = %43, %48
  ret void
}

declare void @ScaleUVRowUp2_Bilinear_Any_C(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Bilinear_Any_SSSE3(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Bilinear_Any_AVX2(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ScaleUVLinearUp2_16(i32, i32, i32, i32, i32, i32, i16*, i16*) local_unnamed_addr #0 {
  %9 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @InitCpuFlags() #5
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %8 ]
  %15 = and i32 %14, 32
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_C, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_SSE2
  %18 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @InitCpuFlags() #5
  br label %22

22:                                               ; preds = %13, %20
  %23 = phi i32 [ %21, %20 ], [ %18, %13 ]
  %24 = and i32 %23, 1024
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, void (i16*, i16*, i32)* %17, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_AVX2
  %27 = icmp eq i32 %3, 1
  %28 = add nsw i32 %1, -1
  br i1 %27, label %29, label %34

29:                                               ; preds = %22
  %30 = sdiv i32 %28, 2
  %31 = mul nsw i32 %30, %4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %6, i64 %32
  tail call void %26(i16* %33, i16* %7, i32 %2) #5, !callees !4
  br label %52

34:                                               ; preds = %22
  %35 = add nsw i32 %3, -1
  %36 = tail call i32 @FixedDiv_X86(i32 %28, i32 %35) #5
  %37 = icmp sgt i32 %3, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = sext i32 %5 to i64
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i32 [ 32767, %38 ], [ %49, %40 ]
  %42 = phi i32 [ 0, %38 ], [ %50, %40 ]
  %43 = phi i16* [ %7, %38 ], [ %48, %40 ]
  %44 = ashr i32 %41, 16
  %45 = mul nsw i32 %44, %4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %6, i64 %46
  tail call void %26(i16* %47, i16* %43, i32 %2) #5, !callees !4
  %48 = getelementptr inbounds i16, i16* %43, i64 %39
  %49 = add nsw i32 %41, %36
  %50 = add nuw nsw i32 %42, 1
  %51 = icmp eq i32 %50, %3
  br i1 %51, label %52, label %40

52:                                               ; preds = %40, %34, %29
  ret void
}

declare void @ScaleUVRowUp2_Linear_16_Any_C(i16*, i16*, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Linear_16_Any_SSE2(i16*, i16*, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Linear_16_Any_AVX2(i16*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ScaleUVBilinearUp2_16(i32, i32, i32, i32, i32, i32, i16*, i16*) local_unnamed_addr #0 {
  %9 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call i32 @InitCpuFlags() #5
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ %9, %8 ]
  %15 = and i32 %14, 32
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_C, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_SSE2
  %18 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @InitCpuFlags() #5
  br label %22

22:                                               ; preds = %13, %20
  %23 = phi i32 [ %21, %20 ], [ %18, %13 ]
  %24 = and i32 %23, 1024
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, void (i16*, i64, i16*, i64, i32)* %17, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_AVX2
  tail call void %26(i16* %6, i64 0, i16* %7, i64 0, i32 %2) #5, !callees !5
  %27 = sext i32 %5 to i64
  %28 = getelementptr inbounds i16, i16* %7, i64 %27
  %29 = add i32 %1, -1
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %43

31:                                               ; preds = %22
  %32 = sext i32 %4 to i64
  %33 = shl nsw i32 %5, 1
  %34 = sext i32 %33 to i64
  br label %35

35:                                               ; preds = %35, %31
  %36 = phi i32 [ 0, %31 ], [ %41, %35 ]
  %37 = phi i16* [ %28, %31 ], [ %40, %35 ]
  %38 = phi i16* [ %6, %31 ], [ %39, %35 ]
  tail call void %26(i16* %38, i64 %32, i16* %37, i64 %27, i32 %2) #5, !callees !5
  %39 = getelementptr inbounds i16, i16* %38, i64 %32
  %40 = getelementptr inbounds i16, i16* %37, i64 %34
  %41 = add nuw nsw i32 %36, 1
  %42 = icmp eq i32 %41, %29
  br i1 %42, label %43, label %35

43:                                               ; preds = %35, %22
  %44 = phi i16* [ %6, %22 ], [ %39, %35 ]
  %45 = phi i16* [ %28, %22 ], [ %40, %35 ]
  %46 = and i32 %3, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %43
  tail call void %26(i16* %44, i64 0, i16* %45, i64 0, i32 %2) #5, !callees !5
  br label %49

49:                                               ; preds = %43, %48
  ret void
}

declare void @ScaleUVRowUp2_Bilinear_16_Any_C(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Bilinear_16_Any_SSE2(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

declare void @ScaleUVRowUp2_Bilinear_16_Any_AVX2(i16*, i64, i16*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @UVScale(i8*, i32, i32, i32, i8*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = icmp eq i8* %0, null
  %15 = icmp slt i32 %2, 1
  %16 = or i1 %14, %15
  %17 = icmp eq i32 %3, 0
  %18 = or i1 %16, %17
  %19 = icmp sgt i32 %2, 32768
  %20 = or i1 %19, %18
  %21 = icmp sgt i32 %3, 32768
  %22 = or i1 %21, %20
  %23 = icmp eq i8* %4, null
  %24 = or i1 %23, %22
  %25 = icmp slt i32 %6, 1
  %26 = or i1 %25, %24
  %27 = icmp slt i32 %7, 1
  %28 = or i1 %27, %26
  br i1 %28, label %572, label %29

29:                                               ; preds = %9
  %30 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #5
  store i32 0, i32* %10, align 4
  %31 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #5
  store i32 0, i32* %11, align 4
  %32 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #5
  store i32 0, i32* %12, align 4
  %33 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #5
  store i32 0, i32* %13, align 4
  %34 = tail call i32 @ScaleFilterReduce(i32 %2, i32 %3, i32 %6, i32 %7, i32 %8) #5
  %35 = icmp slt i32 %3, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %29
  %37 = sub nsw i32 0, %3
  %38 = xor i32 %3, -1
  %39 = mul nsw i32 %38, %1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %0, i64 %40
  %42 = sub nsw i32 0, %1
  br label %43

43:                                               ; preds = %36, %29
  %44 = phi i32 [ %37, %36 ], [ %3, %29 ]
  %45 = phi i32 [ %42, %36 ], [ %1, %29 ]
  %46 = phi i8* [ %41, %36 ], [ %0, %29 ]
  call void @ScaleSlope(i32 %2, i32 %44, i32 %6, i32 %7, i32 %34, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12, i32* nonnull %13) #5
  %47 = load i32, i32* %12, align 4
  %48 = load i32, i32* %13, align 4
  %49 = or i32 %48, %47
  %50 = and i32 %49, 65535
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %244

52:                                               ; preds = %43
  %53 = icmp ne i32 %47, 0
  %54 = icmp ne i32 %48, 0
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %244

56:                                               ; preds = %52
  %57 = and i32 %49, 65536
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %222

59:                                               ; preds = %56
  %60 = icmp eq i32 %47, 131072
  br i1 %60, label %61, label %123

61:                                               ; preds = %59
  %62 = load i32, i32* %10, align 4
  %63 = load i32, i32* %11, align 4
  %64 = ashr i32 %48, 16
  %65 = mul nsw i32 %64, %45
  %66 = icmp eq i32 %34, 0
  %67 = icmp eq i32 %34, 1
  %68 = select i1 %67, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Linear_C, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_C
  %69 = select i1 %66, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2_C, void (i8*, i64, i8*, i32)* %68
  %70 = icmp eq i32 %34, 2
  %71 = ashr i32 %63, 16
  %72 = mul nsw i32 %71, %45
  %73 = ashr i32 %62, 16
  %74 = shl nsw i32 %73, 1
  %75 = add nsw i32 %74, -2
  %76 = select i1 %70, i32 %74, i32 %75
  %77 = add nsw i32 %76, %72
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %46, i64 %78
  %80 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %61
  %83 = call i32 @InitCpuFlags() #5
  br label %84

84:                                               ; preds = %82, %61
  %85 = phi i32 [ %83, %82 ], [ %80, %61 ]
  %86 = and i32 %85, 64
  %87 = icmp ne i32 %86, 0
  %88 = icmp ne i32 %34, 0
  %89 = and i1 %88, %87
  br i1 %89, label %90, label %94

90:                                               ; preds = %84
  %91 = and i32 %6, 3
  %92 = icmp eq i32 %91, 0
  %93 = select i1 %92, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_SSSE3, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_Any_SSSE3
  br label %94

94:                                               ; preds = %90, %84
  %95 = phi void (i8*, i64, i8*, i32)* [ %93, %90 ], [ %69, %84 ]
  %96 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = call i32 @InitCpuFlags() #5
  br label %100

100:                                              ; preds = %98, %94
  %101 = phi i32 [ %99, %98 ], [ %96, %94 ]
  %102 = and i32 %101, 1024
  %103 = icmp ne i32 %102, 0
  %104 = and i1 %88, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = and i32 %6, 7
  %107 = icmp eq i32 %106, 0
  %108 = select i1 %107, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_AVX2, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_Any_AVX2
  br label %109

109:                                              ; preds = %100, %105
  %110 = phi void (i8*, i64, i8*, i32)* [ %108, %105 ], [ %95, %100 ]
  %111 = select i1 %67, i32 0, i32 %45
  %112 = sext i32 %111 to i64
  %113 = sext i32 %65 to i64
  %114 = sext i32 %5 to i64
  br label %115

115:                                              ; preds = %115, %109
  %116 = phi i32 [ 0, %109 ], [ %121, %115 ]
  %117 = phi i8* [ %79, %109 ], [ %119, %115 ]
  %118 = phi i8* [ %4, %109 ], [ %120, %115 ]
  call void %110(i8* %117, i64 %112, i8* %118, i32 %6) #5
  %119 = getelementptr inbounds i8, i8* %117, i64 %113
  %120 = getelementptr inbounds i8, i8* %118, i64 %114
  %121 = add nuw nsw i32 %116, 1
  %122 = icmp eq i32 %121, %7
  br i1 %122, label %571, label %115

123:                                              ; preds = %59
  %124 = icmp eq i32 %47, 262144
  %125 = icmp eq i32 %34, 3
  %126 = and i1 %125, %124
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %11, align 4
  br i1 %126, label %129, label %196

129:                                              ; preds = %123
  %130 = shl nsw i32 %6, 1
  %131 = shl i32 %6, 2
  %132 = add nsw i32 %131, 15
  %133 = and i32 %132, -16
  %134 = shl i32 %133, 1
  %135 = add nsw i32 %134, 63
  %136 = sext i32 %135 to i64
  %137 = call noalias i8* @malloc(i64 %136) #5
  %138 = ptrtoint i8* %137 to i64
  %139 = add nsw i64 %138, 63
  %140 = and i64 %139, -64
  %141 = inttoptr i64 %140 to i8*
  %142 = ashr i32 %48, 16
  %143 = mul nsw i32 %142, %45
  %144 = ashr i32 %128, 16
  %145 = mul nsw i32 %144, %45
  %146 = ashr i32 %127, 16
  %147 = shl nsw i32 %146, 1
  %148 = add nsw i32 %145, %147
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %46, i64 %149
  %151 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %129
  %154 = call i32 @InitCpuFlags() #5
  br label %155

155:                                              ; preds = %153, %129
  %156 = phi i32 [ %154, %153 ], [ %151, %129 ]
  %157 = and i32 %156, 64
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = and i32 %6, 3
  %161 = icmp eq i32 %160, 0
  %162 = select i1 %161, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_SSSE3, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_Any_SSSE3
  br label %163

163:                                              ; preds = %159, %155
  %164 = phi void (i8*, i64, i8*, i32)* [ %162, %159 ], [ @ScaleUVRowDown2Box_C, %155 ]
  %165 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = call i32 @InitCpuFlags() #5
  br label %169

169:                                              ; preds = %167, %163
  %170 = phi i32 [ %168, %167 ], [ %165, %163 ]
  %171 = and i32 %170, 1024
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = and i32 %6, 7
  %175 = icmp eq i32 %174, 0
  %176 = select i1 %175, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_AVX2, void (i8*, i64, i8*, i32)* @ScaleUVRowDown2Box_Any_AVX2
  br label %177

177:                                              ; preds = %169, %173
  %178 = phi void (i8*, i64, i8*, i32)* [ %176, %173 ], [ %164, %169 ]
  %179 = sext i32 %45 to i64
  %180 = shl nsw i32 %45, 1
  %181 = sext i32 %180 to i64
  %182 = sext i32 %133 to i64
  %183 = getelementptr inbounds i8, i8* %141, i64 %182
  %184 = sext i32 %143 to i64
  %185 = sext i32 %5 to i64
  br label %186

186:                                              ; preds = %186, %177
  %187 = phi i32 [ 0, %177 ], [ %193, %186 ]
  %188 = phi i8* [ %150, %177 ], [ %191, %186 ]
  %189 = phi i8* [ %4, %177 ], [ %192, %186 ]
  call void %178(i8* %188, i64 %179, i8* %141, i32 %130) #5
  %190 = getelementptr inbounds i8, i8* %188, i64 %181
  call void %178(i8* %190, i64 %179, i8* %183, i32 %130) #5
  call void %178(i8* %141, i64 %182, i8* %189, i32 %6) #5
  %191 = getelementptr inbounds i8, i8* %188, i64 %184
  %192 = getelementptr inbounds i8, i8* %189, i64 %185
  %193 = add nuw nsw i32 %187, 1
  %194 = icmp eq i32 %193, %7
  br i1 %194, label %195, label %186

195:                                              ; preds = %186
  call void @free(i8* %137) #5
  br label %571

196:                                              ; preds = %123
  %197 = ashr i32 %47, 16
  %198 = icmp eq i32 %34, 0
  %199 = select i1 %198, void (i8*, i64, i32, i8*, i32)* @ScaleUVRowDownEven_C, void (i8*, i64, i32, i8*, i32)* @ScaleUVRowDownEvenBox_C
  %200 = icmp eq i32 %34, 1
  %201 = select i1 %200, i32 0, i32 %45
  %202 = ashr i32 %128, 16
  %203 = mul nsw i32 %202, %45
  %204 = ashr i32 %127, 16
  %205 = shl nsw i32 %204, 1
  %206 = add nsw i32 %203, %205
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i8, i8* %46, i64 %207
  %209 = ashr i32 %48, 16
  %210 = mul nsw i32 %209, %45
  %211 = sext i32 %201 to i64
  %212 = sext i32 %210 to i64
  %213 = sext i32 %5 to i64
  br label %214

214:                                              ; preds = %214, %196
  %215 = phi i32 [ 0, %196 ], [ %220, %214 ]
  %216 = phi i8* [ %208, %196 ], [ %218, %214 ]
  %217 = phi i8* [ %4, %196 ], [ %219, %214 ]
  call void %199(i8* %216, i64 %211, i32 %197, i8* %217, i32 %6) #5, !callees !6
  %218 = getelementptr inbounds i8, i8* %216, i64 %212
  %219 = getelementptr inbounds i8, i8* %217, i64 %213
  %220 = add nuw nsw i32 %215, 1
  %221 = icmp eq i32 %220, %7
  br i1 %221, label %571, label %214

222:                                              ; preds = %56
  %223 = and i32 %47, 65536
  %224 = and i32 %223, %48
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %244, label %226

226:                                              ; preds = %222
  %227 = icmp eq i32 %47, 65536
  %228 = icmp eq i32 %48, 65536
  %229 = and i1 %227, %228
  br i1 %229, label %230, label %244

230:                                              ; preds = %226
  %231 = load i32, i32* %11, align 4
  %232 = ashr i32 %231, 16
  %233 = mul nsw i32 %232, %45
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %46, i64 %234
  %236 = load i32, i32* %10, align 4
  %237 = ashr i32 %236, 16
  %238 = shl nsw i32 %237, 1
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %235, i64 %239
  %241 = icmp eq i8* %240, null
  br i1 %241, label %571, label %242

242:                                              ; preds = %230
  %243 = shl nsw i32 %6, 1
  call void @CopyPlane(i8* nonnull %240, i32 %45, i8* nonnull %4, i32 %5, i32 %243, i32 %7) #5
  br label %571

244:                                              ; preds = %226, %222, %52, %43
  %245 = phi i32 [ 0, %226 ], [ %34, %222 ], [ %34, %43 ], [ 0, %52 ]
  %246 = icmp eq i32 %47, 65536
  br i1 %246, label %247, label %253

247:                                              ; preds = %244
  %248 = load i32, i32* %10, align 4
  %249 = and i32 %248, 65535
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %247
  %252 = load i32, i32* %11, align 4
  call void @ScalePlaneVertical(i32 %44, i32 %6, i32 %7, i32 %45, i32 %5, i8* %46, i8* nonnull %4, i32 %248, i32 %252, i32 %48, i32 4, i32 %245) #5
  br label %571

253:                                              ; preds = %247, %244
  %254 = icmp ne i32 %245, 0
  br i1 %254, label %255, label %301

255:                                              ; preds = %253
  %256 = add nuw nsw i32 %6, 1
  %257 = sdiv i32 %256, 2
  %258 = icmp eq i32 %257, %2
  br i1 %258, label %259, label %301

259:                                              ; preds = %255
  %260 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %259
  %263 = call i32 @InitCpuFlags() #5
  br label %264

264:                                              ; preds = %262, %259
  %265 = phi i32 [ %263, %262 ], [ %260, %259 ]
  %266 = and i32 %265, 64
  %267 = icmp eq i32 %266, 0
  %268 = select i1 %267, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_C, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_SSSE3
  %269 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %264
  %272 = call i32 @InitCpuFlags() #5
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %269, %264 ]
  %275 = and i32 %274, 1024
  %276 = icmp eq i32 %275, 0
  %277 = select i1 %276, void (i8*, i8*, i32)* %268, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_AVX2
  %278 = icmp eq i32 %7, 1
  %279 = add nsw i32 %44, -1
  br i1 %278, label %280, label %285

280:                                              ; preds = %273
  %281 = sdiv i32 %279, 2
  %282 = mul nsw i32 %281, %45
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %46, i64 %283
  call void %277(i8* %284, i8* nonnull %4, i32 %6) #5, !callees !2
  br label %571

285:                                              ; preds = %273
  %286 = add nsw i32 %7, -1
  %287 = call i32 @FixedDiv_X86(i32 %279, i32 %286) #5
  %288 = sext i32 %5 to i64
  br label %289

289:                                              ; preds = %289, %285
  %290 = phi i32 [ 32767, %285 ], [ %298, %289 ]
  %291 = phi i32 [ 0, %285 ], [ %299, %289 ]
  %292 = phi i8* [ %4, %285 ], [ %297, %289 ]
  %293 = ashr i32 %290, 16
  %294 = mul nsw i32 %293, %45
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i8, i8* %46, i64 %295
  call void %277(i8* %296, i8* %292, i32 %6) #5, !callees !2
  %297 = getelementptr inbounds i8, i8* %292, i64 %288
  %298 = add nsw i32 %290, %287
  %299 = add nuw nsw i32 %291, 1
  %300 = icmp eq i32 %299, %7
  br i1 %300, label %571, label %289

301:                                              ; preds = %255, %253
  %302 = add nuw nsw i32 %7, 1
  %303 = sdiv i32 %302, 2
  %304 = icmp eq i32 %303, %44
  br i1 %304, label %305, label %353

305:                                              ; preds = %301
  %306 = add nuw nsw i32 %6, 1
  %307 = sdiv i32 %306, 2
  %308 = icmp eq i32 %307, %2
  %309 = or i32 %245, 1
  %310 = icmp eq i32 %309, 3
  %311 = and i1 %308, %310
  br i1 %311, label %312, label %353

312:                                              ; preds = %305
  %313 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %317

315:                                              ; preds = %312
  %316 = call i32 @InitCpuFlags() #5
  br label %317

317:                                              ; preds = %315, %312
  %318 = phi i32 [ %316, %315 ], [ %313, %312 ]
  %319 = and i32 %318, 64
  %320 = icmp eq i32 %319, 0
  %321 = select i1 %320, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_C, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_SSSE3
  %322 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %326

324:                                              ; preds = %317
  %325 = call i32 @InitCpuFlags() #5
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %322, %317 ]
  %328 = and i32 %327, 1024
  %329 = icmp eq i32 %328, 0
  %330 = select i1 %329, void (i8*, i64, i8*, i64, i32)* %321, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_AVX2
  call void %330(i8* %46, i64 0, i8* nonnull %4, i64 0, i32 %6) #5, !callees !3
  %331 = sext i32 %5 to i64
  %332 = getelementptr inbounds i8, i8* %4, i64 %331
  %333 = add i32 %44, -1
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %335, label %347

335:                                              ; preds = %326
  %336 = sext i32 %45 to i64
  %337 = shl nsw i32 %5, 1
  %338 = sext i32 %337 to i64
  br label %339

339:                                              ; preds = %339, %335
  %340 = phi i32 [ 0, %335 ], [ %345, %339 ]
  %341 = phi i8* [ %332, %335 ], [ %344, %339 ]
  %342 = phi i8* [ %46, %335 ], [ %343, %339 ]
  call void %330(i8* %342, i64 %336, i8* %341, i64 %331, i32 %6) #5, !callees !3
  %343 = getelementptr inbounds i8, i8* %342, i64 %336
  %344 = getelementptr inbounds i8, i8* %341, i64 %338
  %345 = add nuw nsw i32 %340, 1
  %346 = icmp eq i32 %345, %333
  br i1 %346, label %347, label %339

347:                                              ; preds = %339, %326
  %348 = phi i8* [ %46, %326 ], [ %343, %339 ]
  %349 = phi i8* [ %332, %326 ], [ %344, %339 ]
  %350 = and i32 %7, 1
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %571

352:                                              ; preds = %347
  call void %330(i8* %348, i64 0, i8* %349, i64 0, i32 %6) #5, !callees !3
  br label %571

353:                                              ; preds = %305, %301
  %354 = icmp slt i32 %48, 65536
  %355 = and i1 %354, %254
  %356 = load i32, i32* %10, align 4
  %357 = load i32, i32* %11, align 4
  br i1 %355, label %358, label %459

358:                                              ; preds = %353
  %359 = shl i32 %44, 16
  %360 = add i32 %359, -65536
  %361 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %358
  %364 = call i32 @InitCpuFlags() #5
  br label %365

365:                                              ; preds = %363, %358
  %366 = phi i32 [ %364, %363 ], [ %361, %358 ]
  %367 = and i32 %366, 64
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %373, label %369

369:                                              ; preds = %365
  %370 = and i32 %6, 7
  %371 = icmp eq i32 %370, 0
  %372 = select i1 %371, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_SSSE3, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_Any_SSSE3
  br label %373

373:                                              ; preds = %369, %365
  %374 = phi void (i8*, i8*, i64, i32, i32)* [ %372, %369 ], [ @InterpolateRow_C, %365 ]
  %375 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %379

377:                                              ; preds = %373
  %378 = call i32 @InitCpuFlags() #5
  br label %379

379:                                              ; preds = %377, %373
  %380 = phi i32 [ %378, %377 ], [ %375, %373 ]
  %381 = and i32 %380, 1024
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %387, label %383

383:                                              ; preds = %379
  %384 = and i32 %6, 15
  %385 = icmp eq i32 %384, 0
  %386 = select i1 %385, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_AVX2, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_Any_AVX2
  br label %387

387:                                              ; preds = %379, %383
  %388 = phi void (i8*, i8*, i64, i32, i32)* [ %386, %383 ], [ %374, %379 ]
  %389 = icmp sgt i32 %2, 32767
  %390 = select i1 %389, void (i8*, i8*, i32, i32, i32)* @ScaleUVFilterCols64_C, void (i8*, i8*, i32, i32, i32)* @ScaleUVFilterCols_C
  %391 = icmp slt i32 %360, %357
  %392 = select i1 %391, i32 %360, i32 %357
  %393 = ashr i32 %392, 16
  %394 = mul nsw i32 %393, %45
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i8, i8* %46, i64 %395
  %397 = shl nsw i32 %6, 1
  %398 = add nsw i32 %397, 15
  %399 = and i32 %398, -16
  %400 = shl i32 %399, 1
  %401 = add nsw i32 %400, 63
  %402 = sext i32 %401 to i64
  %403 = call noalias i8* @malloc(i64 %402) #5
  %404 = ptrtoint i8* %403 to i64
  %405 = add nsw i64 %404, 63
  %406 = and i64 %405, -64
  %407 = inttoptr i64 %406 to i8*
  call void %390(i8* %407, i8* %396, i32 %6, i32 %356, i32 %47) #5
  %408 = icmp sgt i32 %44, 1
  %409 = sext i32 %45 to i64
  %410 = getelementptr inbounds i8, i8* %396, i64 %409
  %411 = select i1 %408, i8* %410, i8* %396
  %412 = sext i32 %399 to i64
  %413 = getelementptr inbounds i8, i8* %407, i64 %412
  call void %390(i8* %413, i8* %411, i32 %6, i32 %356, i32 %47) #5
  %414 = getelementptr inbounds i8, i8* %411, i64 %409
  %415 = ashr exact i32 %360, 16
  %416 = mul nsw i32 %415, %45
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds i8, i8* %46, i64 %417
  %419 = icmp eq i32 %245, 1
  %420 = sext i32 %5 to i64
  br label %421

421:                                              ; preds = %453, %387
  %422 = phi i8* [ %4, %387 ], [ %454, %453 ]
  %423 = phi i32 [ %393, %387 ], [ %447, %453 ]
  %424 = phi i32 [ %399, %387 ], [ %446, %453 ]
  %425 = phi i8* [ %407, %387 ], [ %445, %453 ]
  %426 = phi i32 [ %392, %387 ], [ %455, %453 ]
  %427 = phi i8* [ %414, %387 ], [ %443, %453 ]
  %428 = phi i32 [ 0, %387 ], [ %456, %453 ]
  %429 = ashr i32 %426, 16
  %430 = icmp eq i32 %429, %423
  br i1 %430, label %442, label %431

431:                                              ; preds = %421
  %432 = icmp sgt i32 %426, %360
  %433 = select i1 %432, i32 %415, i32 %429
  %434 = select i1 %432, i8* %418, i8* %427
  %435 = select i1 %432, i32 %360, i32 %426
  %436 = icmp eq i32 %433, %423
  br i1 %436, label %442, label %437

437:                                              ; preds = %431
  call void %390(i8* %425, i8* %434, i32 %6, i32 %356, i32 %47) #5
  %438 = sext i32 %424 to i64
  %439 = getelementptr inbounds i8, i8* %425, i64 %438
  %440 = sub nsw i32 0, %424
  %441 = getelementptr inbounds i8, i8* %434, i64 %409
  br label %442

442:                                              ; preds = %437, %431, %421
  %443 = phi i8* [ %441, %437 ], [ %434, %431 ], [ %427, %421 ]
  %444 = phi i32 [ %435, %437 ], [ %435, %431 ], [ %426, %421 ]
  %445 = phi i8* [ %439, %437 ], [ %425, %431 ], [ %425, %421 ]
  %446 = phi i32 [ %440, %437 ], [ %424, %431 ], [ %424, %421 ]
  %447 = phi i32 [ %433, %437 ], [ %423, %431 ], [ %423, %421 ]
  br i1 %419, label %448, label %449

448:                                              ; preds = %442
  call void %388(i8* %422, i8* %445, i64 0, i32 %397, i32 0) #5
  br label %453

449:                                              ; preds = %442
  %450 = lshr i32 %444, 8
  %451 = and i32 %450, 255
  %452 = sext i32 %446 to i64
  call void %388(i8* %422, i8* %445, i64 %452, i32 %397, i32 %451) #5
  br label %453

453:                                              ; preds = %449, %448
  %454 = getelementptr inbounds i8, i8* %422, i64 %420
  %455 = add nsw i32 %444, %48
  %456 = add nuw nsw i32 %428, 1
  %457 = icmp eq i32 %456, %7
  br i1 %457, label %458, label %421

458:                                              ; preds = %453
  call void @free(i8* %403) #5
  br label %571

459:                                              ; preds = %353
  %460 = icmp sgt i32 %2, 32767
  br i1 %254, label %461, label %551

461:                                              ; preds = %459
  %462 = select i1 %460, void (i8*, i8*, i32, i32, i32)* @ScaleUVFilterCols64_C, void (i8*, i8*, i32, i32, i32)* @ScaleUVFilterCols_C
  %463 = sext i32 %356 to i64
  %464 = add nsw i32 %6, -1
  %465 = sext i32 %464 to i64
  %466 = sext i32 %47 to i64
  %467 = mul nsw i64 %466, %465
  %468 = add nsw i64 %467, %463
  %469 = icmp sgt i32 %47, -1
  %470 = select i1 %469, i64 %463, i64 %468
  %471 = select i1 %469, i64 %468, i64 %463
  %472 = ashr i64 %470, 16
  %473 = and i64 %472, -4
  %474 = ashr i64 %471, 16
  %475 = add nsw i64 %474, 5
  %476 = and i64 %475, -4
  %477 = zext i32 %2 to i64
  %478 = icmp sgt i64 %476, %477
  %479 = select i1 %478, i64 %477, i64 %476
  %480 = sub nsw i64 %479, %473
  %481 = trunc i64 %480 to i32
  %482 = shl nsw i32 %481, 1
  %483 = shl nsw i64 %473, 1
  %484 = getelementptr inbounds i8, i8* %46, i64 %483
  %485 = trunc i64 %473 to i32
  %486 = shl i32 %485, 16
  %487 = sub nsw i32 %356, %486
  %488 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %461
  %491 = call i32 @InitCpuFlags() #5
  br label %492

492:                                              ; preds = %490, %461
  %493 = phi i32 [ %491, %490 ], [ %488, %461 ]
  %494 = and i32 %493, 64
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %500, label %496

496:                                              ; preds = %492
  %497 = and i32 %481, 7
  %498 = icmp eq i32 %497, 0
  %499 = select i1 %498, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_SSSE3, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_Any_SSSE3
  br label %500

500:                                              ; preds = %496, %492
  %501 = phi void (i8*, i8*, i64, i32, i32)* [ %499, %496 ], [ @InterpolateRow_C, %492 ]
  %502 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %500
  %505 = call i32 @InitCpuFlags() #5
  br label %506

506:                                              ; preds = %504, %500
  %507 = phi i32 [ %505, %504 ], [ %502, %500 ]
  %508 = and i32 %507, 1024
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %514, label %510

510:                                              ; preds = %506
  %511 = and i32 %481, 15
  %512 = icmp eq i32 %511, 0
  %513 = select i1 %512, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_AVX2, void (i8*, i8*, i64, i32, i32)* @InterpolateRow_Any_AVX2
  br label %514

514:                                              ; preds = %506, %510
  %515 = phi void (i8*, i8*, i64, i32, i32)* [ %513, %510 ], [ %501, %506 ]
  %516 = shl i32 %481, 2
  %517 = add nsw i32 %516, 63
  %518 = sext i32 %517 to i64
  %519 = call noalias i8* @malloc(i64 %518) #5
  %520 = ptrtoint i8* %519 to i64
  %521 = add nsw i64 %520, 63
  %522 = and i64 %521, -64
  %523 = inttoptr i64 %522 to i8*
  %524 = shl i32 %44, 16
  %525 = add i32 %524, -65536
  %526 = icmp slt i32 %525, %357
  %527 = select i1 %526, i32 %525, i32 %357
  %528 = icmp eq i32 %245, 1
  %529 = sext i32 %45 to i64
  %530 = sext i32 %5 to i64
  br label %531

531:                                              ; preds = %542, %514
  %532 = phi i8* [ %4, %514 ], [ %544, %542 ]
  %533 = phi i32 [ 0, %514 ], [ %548, %542 ]
  %534 = phi i32 [ %527, %514 ], [ %547, %542 ]
  %535 = ashr i32 %534, 16
  %536 = mul nsw i32 %535, %45
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds i8, i8* %484, i64 %537
  br i1 %528, label %542, label %539

539:                                              ; preds = %531
  %540 = lshr i32 %534, 8
  %541 = and i32 %540, 255
  call void %515(i8* %523, i8* %538, i64 %529, i32 %482, i32 %541) #5
  br label %542

542:                                              ; preds = %531, %539
  %543 = phi i8* [ %523, %539 ], [ %538, %531 ]
  call void %462(i8* %532, i8* %543, i32 %6, i32 %487, i32 %47) #5
  %544 = getelementptr inbounds i8, i8* %532, i64 %530
  %545 = add nsw i32 %534, %48
  %546 = icmp sgt i32 %545, %525
  %547 = select i1 %546, i32 %525, i32 %545
  %548 = add nuw nsw i32 %533, 1
  %549 = icmp eq i32 %548, %7
  br i1 %549, label %550, label %531

550:                                              ; preds = %542
  call void @free(i8* %519) #5
  br label %571

551:                                              ; preds = %459
  %552 = select i1 %460, void (i8*, i8*, i32, i32, i32)* @ScaleUVCols64_C, void (i8*, i8*, i32, i32, i32)* @ScaleUVCols_C
  %553 = shl nuw nsw i32 %2, 1
  %554 = icmp eq i32 %553, %6
  %555 = icmp slt i32 %356, 32768
  %556 = and i1 %554, %555
  %557 = select i1 %556, void (i8*, i8*, i32, i32, i32)* @ScaleUVColsUp2_C, void (i8*, i8*, i32, i32, i32)* %552
  %558 = sext i32 %5 to i64
  br label %559

559:                                              ; preds = %559, %551
  %560 = phi i32 [ 0, %551 ], [ %569, %559 ]
  %561 = phi i8* [ %4, %551 ], [ %567, %559 ]
  %562 = phi i32 [ %357, %551 ], [ %568, %559 ]
  %563 = ashr i32 %562, 16
  %564 = mul nsw i32 %563, %45
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds i8, i8* %46, i64 %565
  call void %557(i8* %561, i8* %566, i32 %6, i32 %356, i32 %47) #5, !callees !7
  %567 = getelementptr inbounds i8, i8* %561, i64 %558
  %568 = add nsw i32 %562, %48
  %569 = add nuw nsw i32 %560, 1
  %570 = icmp eq i32 %569, %7
  br i1 %570, label %571, label %559

571:                                              ; preds = %559, %289, %214, %115, %195, %230, %242, %251, %280, %347, %352, %458, %550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #5
  br label %572

572:                                              ; preds = %9, %571
  %573 = phi i32 [ 0, %571 ], [ -1, %9 ]
  ret i32 %573
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @UVScale_16(i16*, i32, i32, i32, i16*, i32, i32, i32, i32) local_unnamed_addr #0 {
  %10 = icmp eq i16* %0, null
  %11 = icmp slt i32 %2, 1
  %12 = or i1 %10, %11
  %13 = icmp eq i32 %3, 0
  %14 = or i1 %12, %13
  %15 = icmp sgt i32 %2, 32768
  %16 = or i1 %15, %14
  %17 = icmp sgt i32 %3, 32768
  %18 = or i1 %17, %16
  %19 = icmp eq i16* %4, null
  %20 = or i1 %19, %18
  %21 = icmp slt i32 %6, 1
  %22 = or i1 %21, %20
  %23 = icmp slt i32 %7, 1
  %24 = or i1 %23, %22
  br i1 %24, label %167, label %25

25:                                               ; preds = %9
  %26 = tail call i32 @ScaleFilterReduce(i32 %2, i32 %3, i32 %6, i32 %7, i32 %8) #5
  %27 = icmp slt i32 %3, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = sub nsw i32 0, %3
  %30 = xor i32 %3, -1
  %31 = mul nsw i32 %30, %1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = sub nsw i32 0, %1
  br label %35

35:                                               ; preds = %28, %25
  %36 = phi i32 [ %29, %28 ], [ %3, %25 ]
  %37 = phi i32 [ %34, %28 ], [ %1, %25 ]
  %38 = phi i16* [ %33, %28 ], [ %0, %25 ]
  %39 = icmp ne i32 %26, 0
  %40 = xor i1 %39, true
  %41 = icmp eq i32 %2, %6
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %68

43:                                               ; preds = %35
  %44 = srem i32 %36, %7
  %45 = sdiv i32 %36, %7
  %46 = icmp eq i32 %44, 0
  br i1 %46, label %47, label %68

47:                                               ; preds = %43
  %48 = icmp eq i32 %7, 1
  br i1 %48, label %49, label %58

49:                                               ; preds = %47
  %50 = add nsw i32 %36, -1
  %51 = sdiv i32 %50, 2
  %52 = mul nsw i32 %51, %37
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i16, i16* %38, i64 %53
  %55 = icmp eq i16* %54, null
  br i1 %55, label %167, label %56

56:                                               ; preds = %49
  %57 = shl nsw i32 %2, 1
  tail call void @CopyPlane_16(i16* nonnull %54, i32 %37, i16* nonnull %4, i32 %5, i32 %57, i32 1) #5
  br label %167

58:                                               ; preds = %47
  %59 = add nsw i32 %45, -1
  %60 = sdiv i32 %59, 2
  %61 = mul nsw i32 %60, %37
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i16, i16* %38, i64 %62
  %64 = icmp eq i16* %63, null
  br i1 %64, label %167, label %65

65:                                               ; preds = %58
  %66 = mul nsw i32 %45, %37
  %67 = shl nsw i32 %2, 1
  tail call void @CopyPlane_16(i16* nonnull %63, i32 %66, i16* nonnull %4, i32 %5, i32 %67, i32 %7) #5
  br label %167

68:                                               ; preds = %35, %43
  br i1 %39, label %69, label %115

69:                                               ; preds = %68
  %70 = add nuw nsw i32 %6, 1
  %71 = sdiv i32 %70, 2
  %72 = icmp eq i32 %71, %2
  br i1 %72, label %73, label %115

73:                                               ; preds = %69
  %74 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = tail call i32 @InitCpuFlags() #5
  br label %78

78:                                               ; preds = %76, %73
  %79 = phi i32 [ %77, %76 ], [ %74, %73 ]
  %80 = and i32 %79, 32
  %81 = icmp eq i32 %80, 0
  %82 = select i1 %81, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_C, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_SSE2
  %83 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = tail call i32 @InitCpuFlags() #5
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %83, %78 ]
  %89 = and i32 %88, 1024
  %90 = icmp eq i32 %89, 0
  %91 = select i1 %90, void (i16*, i16*, i32)* %82, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_AVX2
  %92 = icmp eq i32 %7, 1
  %93 = add nsw i32 %36, -1
  br i1 %92, label %94, label %99

94:                                               ; preds = %87
  %95 = sdiv i32 %93, 2
  %96 = mul nsw i32 %95, %37
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i16, i16* %38, i64 %97
  tail call void %91(i16* %98, i16* nonnull %4, i32 %6) #5, !callees !4
  br label %167

99:                                               ; preds = %87
  %100 = add nsw i32 %7, -1
  %101 = tail call i32 @FixedDiv_X86(i32 %93, i32 %100) #5
  %102 = sext i32 %5 to i64
  br label %103

103:                                              ; preds = %103, %99
  %104 = phi i32 [ 32767, %99 ], [ %112, %103 ]
  %105 = phi i32 [ 0, %99 ], [ %113, %103 ]
  %106 = phi i16* [ %4, %99 ], [ %111, %103 ]
  %107 = ashr i32 %104, 16
  %108 = mul nsw i32 %107, %37
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i16, i16* %38, i64 %109
  tail call void %91(i16* %110, i16* %106, i32 %6) #5, !callees !4
  %111 = getelementptr inbounds i16, i16* %106, i64 %102
  %112 = add nsw i32 %104, %101
  %113 = add nuw nsw i32 %105, 1
  %114 = icmp eq i32 %113, %7
  br i1 %114, label %167, label %103

115:                                              ; preds = %69, %68
  %116 = add nuw nsw i32 %7, 1
  %117 = sdiv i32 %116, 2
  %118 = icmp eq i32 %117, %36
  br i1 %118, label %119, label %167

119:                                              ; preds = %115
  %120 = add nuw nsw i32 %6, 1
  %121 = sdiv i32 %120, 2
  %122 = icmp eq i32 %121, %2
  %123 = or i32 %26, 1
  %124 = icmp eq i32 %123, 3
  %125 = and i1 %122, %124
  br i1 %125, label %126, label %167

126:                                              ; preds = %119
  %127 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = tail call i32 @InitCpuFlags() #5
  br label %131

131:                                              ; preds = %129, %126
  %132 = phi i32 [ %130, %129 ], [ %127, %126 ]
  %133 = and i32 %132, 32
  %134 = icmp eq i32 %133, 0
  %135 = select i1 %134, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_C, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_SSE2
  %136 = load atomic i32, i32* @cpu_info_ monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = tail call i32 @InitCpuFlags() #5
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %136, %131 ]
  %142 = and i32 %141, 1024
  %143 = icmp eq i32 %142, 0
  %144 = select i1 %143, void (i16*, i64, i16*, i64, i32)* %135, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_AVX2
  tail call void %144(i16* %38, i64 0, i16* nonnull %4, i64 0, i32 %6) #5, !callees !5
  %145 = sext i32 %5 to i64
  %146 = getelementptr inbounds i16, i16* %4, i64 %145
  %147 = add i32 %36, -1
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %140
  %150 = sext i32 %37 to i64
  %151 = shl nsw i32 %5, 1
  %152 = sext i32 %151 to i64
  br label %153

153:                                              ; preds = %153, %149
  %154 = phi i32 [ 0, %149 ], [ %159, %153 ]
  %155 = phi i16* [ %146, %149 ], [ %158, %153 ]
  %156 = phi i16* [ %38, %149 ], [ %157, %153 ]
  tail call void %144(i16* %156, i64 %150, i16* %155, i64 %145, i32 %6) #5, !callees !5
  %157 = getelementptr inbounds i16, i16* %156, i64 %150
  %158 = getelementptr inbounds i16, i16* %155, i64 %152
  %159 = add nuw nsw i32 %154, 1
  %160 = icmp eq i32 %159, %147
  br i1 %160, label %161, label %153

161:                                              ; preds = %153, %140
  %162 = phi i16* [ %38, %140 ], [ %157, %153 ]
  %163 = phi i16* [ %146, %140 ], [ %158, %153 ]
  %164 = and i32 %7, 1
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %161
  tail call void %144(i16* %162, i64 0, i16* %163, i64 0, i32 %6) #5, !callees !5
  br label %167

167:                                              ; preds = %103, %166, %161, %94, %65, %58, %56, %49, %115, %119, %9
  %168 = phi i32 [ -1, %9 ], [ -1, %119 ], [ -1, %115 ], [ 0, %49 ], [ 0, %56 ], [ 0, %58 ], [ 0, %65 ], [ 0, %94 ], [ 0, %161 ], [ 0, %166 ], [ 0, %103 ]
  ret i32 %168
}

declare i32 @ScaleFilterReduce(i32, i32, i32, i32, i32) local_unnamed_addr #2

declare i32 @InitCpuFlags() local_unnamed_addr #2

declare void @ScaleSlope(i32, i32, i32, i32, i32, i32*, i32*, i32*, i32*) local_unnamed_addr #2

declare void @ScalePlaneVertical(i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2_C(i8*, i64, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2Linear_C(i8*, i64, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2Box_C(i8*, i64, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2Box_Any_SSSE3(i8*, i64, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2Box_SSSE3(i8*, i64, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2Box_Any_AVX2(i8*, i64, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDown2Box_AVX2(i8*, i64, i8*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @ScaleUVRowDownEvenBox_C(i8*, i64, i32, i8*, i32) local_unnamed_addr #2

declare void @ScaleUVRowDownEven_C(i8*, i64, i32, i8*, i32) local_unnamed_addr #2

declare void @CopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_C(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @ScaleUVFilterCols_C(i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @ScaleUVCols_C(i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_Any_SSSE3(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_SSSE3(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_Any_AVX2(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @InterpolateRow_AVX2(i8*, i8*, i64, i32, i32) local_unnamed_addr #2

declare void @ScaleUVFilterCols64_C(i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @ScaleUVCols64_C(i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @ScaleUVColsUp2_C(i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare void @CopyPlane_16(i16*, i32, i16*, i32, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_AVX2, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_C, void (i8*, i8*, i32)* @ScaleUVRowUp2_Linear_Any_SSSE3}
!3 = !{void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_AVX2, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_C, void (i8*, i64, i8*, i64, i32)* @ScaleUVRowUp2_Bilinear_Any_SSSE3}
!4 = !{void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_AVX2, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_C, void (i16*, i16*, i32)* @ScaleUVRowUp2_Linear_16_Any_SSE2}
!5 = !{void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_AVX2, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_C, void (i16*, i64, i16*, i64, i32)* @ScaleUVRowUp2_Bilinear_16_Any_SSE2}
!6 = !{void (i8*, i64, i32, i8*, i32)* @ScaleUVRowDownEvenBox_C, void (i8*, i64, i32, i8*, i32)* @ScaleUVRowDownEven_C}
!7 = !{void (i8*, i8*, i32, i32, i32)* @ScaleUVCols64_C, void (i8*, i8*, i32, i32, i32)* @ScaleUVColsUp2_C, void (i8*, i8*, i32, i32, i32)* @ScaleUVCols_C}
