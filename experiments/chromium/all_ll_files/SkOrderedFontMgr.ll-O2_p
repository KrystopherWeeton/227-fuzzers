; ModuleID = '../../third_party/skia/src/utils/SkOrderedFontMgr.cpp'
source_filename = "../../third_party/skia/src/utils/SkOrderedFontMgr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOrderedFontMgr = type { %class.SkFontMgr.base, %"class.std::__1::vector" }
%class.SkFontMgr.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp*, %class.sk_sp*, %"class.std::__1::__compressed_pair" }
%class.sk_sp = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkString = type { %class.sk_sp.2 }
%class.sk_sp.2 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkFontStyleSet = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.sk_sp.8 = type { %class.SkTypeface* }
%class.sk_sp.9 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%class.SkFontData = type { %"class.std::__1::unique_ptr", i32, i32, %class.SkAutoSTMalloc }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.SkStreamAsset* }
%class.SkAutoSTMalloc = type { i32*, %union.anon }
%union.anon = type { [4 x i32] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle = comdat any

$_ZNSt3__16vectorI5sk_spI9SkFontMgrENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZTV16SkOrderedFontMgr = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkOrderedFontMgr*)* @_ZN16SkOrderedFontMgrD2Ev to i8*), i8* bitcast (void (%class.SkOrderedFontMgr*)* @_ZN16SkOrderedFontMgrD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i32 (%class.SkOrderedFontMgr*)* @_ZNK16SkOrderedFontMgr15onCountFamiliesEv to i8*), i8* bitcast (void (%class.SkOrderedFontMgr*, i32, %class.SkString*)* @_ZNK16SkOrderedFontMgr15onGetFamilyNameEiP8SkString to i8*), i8* bitcast (%class.SkFontStyleSet* (%class.SkOrderedFontMgr*, i32)* @_ZNK16SkOrderedFontMgr16onCreateStyleSetEi to i8*), i8* bitcast (%class.SkFontStyleSet* (%class.SkOrderedFontMgr*, i8*)* @_ZNK16SkOrderedFontMgr13onMatchFamilyEPKc to i8*), i8* bitcast (%class.SkTypeface* (%class.SkOrderedFontMgr*, i8*, %class.SkFontStyle*)* @_ZNK16SkOrderedFontMgr18onMatchFamilyStyleEPKcRK11SkFontStyle to i8*), i8* bitcast (%class.SkTypeface* (%class.SkOrderedFontMgr*, i8*, %class.SkFontStyle*, i8**, i32, i32)* @_ZNK16SkOrderedFontMgr27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkOrderedFontMgr*, %class.sk_sp.9*, i32)* @_ZNK16SkOrderedFontMgr14onMakeFromDataE5sk_spI6SkDataEi to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkOrderedFontMgr*, %class.SkStreamAsset*, i32)* @_ZNK16SkOrderedFontMgr21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkOrderedFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments*)* @_ZNK16SkOrderedFontMgr20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkOrderedFontMgr*, %class.SkFontData*)* @_ZNK16SkOrderedFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkOrderedFontMgr*, i8*, i32)* @_ZNK16SkOrderedFontMgr14onMakeFromFileEPKci to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkOrderedFontMgr*, i8*, i32)* @_ZNK16SkOrderedFontMgr20onLegacyMakeTypefaceEPKc11SkFontStyle to i8*), i8* bitcast (%class.SkTypeface* (%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle*)* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle to i8*)] }, align 8

@_ZN16SkOrderedFontMgrC1Ev = hidden unnamed_addr alias void (%class.SkOrderedFontMgr*), void (%class.SkOrderedFontMgr*)* @_ZN16SkOrderedFontMgrC2Ev
@_ZN16SkOrderedFontMgrD1Ev = hidden unnamed_addr alias void (%class.SkOrderedFontMgr*), void (%class.SkOrderedFontMgr*)* @_ZN16SkOrderedFontMgrD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOrderedFontMgrC2Ev(%class.SkOrderedFontMgr* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV16SkOrderedFontMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOrderedFontMgrD2Ev(%class.SkOrderedFontMgr* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV16SkOrderedFontMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = icmp eq %class.sk_sp* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp* %5 to i8*
  %9 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %class.sk_sp*, %class.sk_sp** %9, align 8
  %11 = icmp eq %class.sk_sp* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  %16 = load %class.SkFontMgr*, %class.SkFontMgr** %15, align 8
  %17 = icmp eq %class.SkFontMgr* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkFontMgr* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkFontMgr* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #9
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp* %5, %class.sk_sp** %9, align 8
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOrderedFontMgrD0Ev(%class.SkOrderedFontMgr*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTV16SkOrderedFontMgr, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = icmp eq %class.sk_sp* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.sk_sp* %5 to i8*
  %9 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %class.sk_sp*, %class.sk_sp** %9, align 8
  %11 = icmp eq %class.sk_sp* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %class.sk_sp* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 -1
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  %16 = load %class.SkFontMgr*, %class.SkFontMgr** %15, align 8
  %17 = icmp eq %class.SkFontMgr* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkFontMgr* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.SkFontMgr* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  tail call void %27(%class.SkRefCntBase* nonnull %23) #9
  br label %28

28:                                               ; preds = %22, %18, %12
  %29 = icmp eq %class.sk_sp* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %class.sk_sp* %5, %class.sk_sp** %9, align 8
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %1, %33
  %36 = bitcast %class.SkOrderedFontMgr* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkOrderedFontMgr6appendE5sk_spI9SkFontMgrE(%class.SkOrderedFontMgr*, %class.sk_sp*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %5 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %6 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %7 = icmp ult %class.sk_sp* %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %10 = bitcast %class.sk_sp* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %9, align 8
  %12 = bitcast %class.sk_sp* %4 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 1
  %14 = ptrtoint %class.sk_sp* %13 to i64
  %15 = bitcast %class.sk_sp** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1
  tail call void @_ZNSt3__16vectorI5sk_spI9SkFontMgrENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %17, %class.sk_sp* dereferenceable(8) %1) #9
  br label %18

18:                                               ; preds = %8, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK16SkOrderedFontMgr15onCountFamiliesEv(%class.SkOrderedFontMgr* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %class.sk_sp*, %class.sk_sp** %2, align 8
  %4 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = icmp eq %class.sk_sp* %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %9, %1
  %8 = phi i32 [ 0, %1 ], [ %15, %9 ]
  ret i32 %8

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %15, %9 ], [ 0, %1 ]
  %11 = phi %class.sk_sp* [ %16, %9 ], [ %3, %1 ]
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %13 = load %class.SkFontMgr*, %class.SkFontMgr** %12, align 8
  %14 = tail call i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr* %13) #9
  %15 = add nsw i32 %14, %10
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 1
  %17 = icmp eq %class.sk_sp* %16, %5
  br i1 %17, label %7, label %9
}

declare i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SkOrderedFontMgr15onGetFamilyNameEiP8SkString(%class.SkOrderedFontMgr* nocapture readonly, i32, %class.SkString*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %class.sk_sp*, %class.sk_sp** %6, align 8
  %8 = icmp eq %class.sk_sp* %5, %7
  br i1 %8, label %23, label %9

9:                                                ; preds = %3, %19
  %10 = phi i32 [ %20, %19 ], [ %1, %3 ]
  %11 = phi %class.sk_sp* [ %21, %19 ], [ %5, %3 ]
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %13 = load %class.SkFontMgr*, %class.SkFontMgr** %12, align 8
  %14 = tail call i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr* %13) #9
  %15 = icmp slt i32 %10, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %18 = load %class.SkFontMgr*, %class.SkFontMgr** %17, align 8
  tail call void @_ZNK9SkFontMgr13getFamilyNameEiP8SkString(%class.SkFontMgr* %18, i32 %10, %class.SkString* %2) #9
  br label %23

19:                                               ; preds = %9
  %20 = sub nsw i32 %10, %14
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 1
  %22 = icmp eq %class.sk_sp* %21, %7
  br i1 %22, label %23, label %9

23:                                               ; preds = %19, %3, %16
  ret void
}

declare void @_ZNK9SkFontMgr13getFamilyNameEiP8SkString(%class.SkFontMgr*, i32, %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFontStyleSet* @_ZNK16SkOrderedFontMgr16onCreateStyleSetEi(%class.SkOrderedFontMgr* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %5 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %7 = icmp eq %class.sk_sp* %4, %6
  br i1 %7, label %23, label %8

8:                                                ; preds = %2, %15
  %9 = phi i32 [ %16, %15 ], [ %1, %2 ]
  %10 = phi %class.sk_sp* [ %17, %15 ], [ %4, %2 ]
  %11 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %12 = load %class.SkFontMgr*, %class.SkFontMgr** %11, align 8
  %13 = tail call i32 @_ZNK9SkFontMgr13countFamiliesEv(%class.SkFontMgr* %12) #9
  %14 = icmp slt i32 %9, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %8
  %16 = sub nsw i32 %9, %13
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 1
  %18 = icmp eq %class.sk_sp* %17, %6
  br i1 %18, label %23, label %8

19:                                               ; preds = %8
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %21 = load %class.SkFontMgr*, %class.SkFontMgr** %20, align 8
  %22 = tail call %class.SkFontStyleSet* @_ZNK9SkFontMgr14createStyleSetEi(%class.SkFontMgr* %21, i32 %9) #9
  br label %23

23:                                               ; preds = %15, %2, %19
  %24 = phi %class.SkFontStyleSet* [ %22, %19 ], [ null, %2 ], [ null, %15 ]
  ret %class.SkFontStyleSet* %24
}

declare %class.SkFontStyleSet* @_ZNK9SkFontMgr14createStyleSetEi(%class.SkFontMgr*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFontStyleSet* @_ZNK16SkOrderedFontMgr13onMatchFamilyEPKc(%class.SkOrderedFontMgr* nocapture readonly, i8*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %5 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %class.sk_sp*, %class.sk_sp** %5, align 8
  %7 = icmp eq %class.sk_sp* %4, %6
  br i1 %7, label %17, label %10

8:                                                ; preds = %10
  %9 = icmp eq %class.sk_sp* %16, %6
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %8
  %11 = phi %class.sk_sp* [ %16, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %13 = load %class.SkFontMgr*, %class.SkFontMgr** %12, align 8
  %14 = tail call %class.SkFontStyleSet* @_ZNK9SkFontMgr11matchFamilyEPKc(%class.SkFontMgr* %13, i8* %1) #9
  %15 = icmp eq %class.SkFontStyleSet* %14, null
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 1
  br i1 %15, label %8, label %17

17:                                               ; preds = %10, %8, %2
  %18 = phi %class.SkFontStyleSet* [ null, %2 ], [ null, %8 ], [ %14, %10 ]
  ret %class.SkFontStyleSet* %18
}

declare %class.SkFontStyleSet* @_ZNK9SkFontMgr11matchFamilyEPKc(%class.SkFontMgr*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK16SkOrderedFontMgr18onMatchFamilyStyleEPKcRK11SkFontStyle(%class.SkOrderedFontMgr* nocapture readonly, i8*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %class.sk_sp*, %class.sk_sp** %4, align 8
  %6 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %class.sk_sp*, %class.sk_sp** %6, align 8
  %8 = icmp eq %class.sk_sp* %5, %7
  br i1 %8, label %18, label %11

9:                                                ; preds = %11
  %10 = icmp eq %class.sk_sp* %17, %7
  br i1 %10, label %18, label %11

11:                                               ; preds = %3, %9
  %12 = phi %class.sk_sp* [ %17, %9 ], [ %5, %3 ]
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 0, i32 0
  %14 = load %class.SkFontMgr*, %class.SkFontMgr** %13, align 8
  %15 = tail call %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr* %14, i8* %1, %class.SkFontStyle* dereferenceable(4) %2) #9
  %16 = icmp eq %class.SkTypeface* %15, null
  %17 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %12, i64 1
  br i1 %16, label %9, label %18

18:                                               ; preds = %11, %9, %3
  %19 = phi %class.SkTypeface* [ null, %3 ], [ null, %9 ], [ %15, %11 ]
  ret %class.SkTypeface* %19
}

declare %class.SkTypeface* @_ZNK9SkFontMgr16matchFamilyStyleEPKcRK11SkFontStyle(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZNK16SkOrderedFontMgr27onMatchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkOrderedFontMgr* nocapture readonly, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %class.sk_sp*, %class.sk_sp** %7, align 8
  %9 = getelementptr inbounds %class.SkOrderedFontMgr, %class.SkOrderedFontMgr* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %class.sk_sp*, %class.sk_sp** %9, align 8
  %11 = icmp eq %class.sk_sp* %8, %10
  br i1 %11, label %21, label %14

12:                                               ; preds = %14
  %13 = icmp eq %class.sk_sp* %20, %10
  br i1 %13, label %21, label %14

14:                                               ; preds = %6, %12
  %15 = phi %class.sk_sp* [ %20, %12 ], [ %8, %6 ]
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 0, i32 0
  %17 = load %class.SkFontMgr*, %class.SkFontMgr** %16, align 8
  %18 = tail call %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr* %17, i8* %1, %class.SkFontStyle* dereferenceable(4) %2, i8** %3, i32 %4, i32 %5) #9
  %19 = icmp eq %class.SkTypeface* %18, null
  %20 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %15, i64 1
  br i1 %19, label %12, label %21

21:                                               ; preds = %14, %12, %6
  %22 = phi %class.SkTypeface* [ null, %6 ], [ null, %12 ], [ %18, %14 ]
  ret %class.SkTypeface* %22
}

declare %class.SkTypeface* @_ZNK9SkFontMgr25matchFamilyStyleCharacterEPKcRK11SkFontStylePS1_ii(%class.SkFontMgr*, i8*, %class.SkFontStyle* dereferenceable(4), i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK16SkOrderedFontMgr14onMakeFromDataE5sk_spI6SkDataEi(%class.sk_sp.8* noalias nocapture sret, %class.SkOrderedFontMgr* nocapture readnone, %class.sk_sp.9* nocapture readnone, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SkOrderedFontMgr21onMakeFromStreamIndexENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp.8* noalias nocapture sret, %class.SkOrderedFontMgr* nocapture readnone, %class.SkStreamAsset*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  %6 = icmp eq %class.SkStreamAsset* %2, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = bitcast %class.SkStreamAsset* %2 to void (%class.SkStreamAsset*)***
  %9 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %9, i64 1
  %11 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %10, align 8
  tail call void %11(%class.SkStreamAsset* nonnull %2) #9
  br label %12

12:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SkOrderedFontMgr20onMakeFromStreamArgsENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp.8* noalias nocapture sret, %class.SkOrderedFontMgr* nocapture readnone, %class.SkStreamAsset*, %struct.SkFontArguments* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  %6 = icmp eq %class.SkStreamAsset* %2, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = bitcast %class.SkStreamAsset* %2 to void (%class.SkStreamAsset*)***
  %9 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %9, i64 1
  %11 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %10, align 8
  tail call void %11(%class.SkStreamAsset* nonnull %2) #9
  br label %12

12:                                               ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16SkOrderedFontMgr18onMakeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE(%class.sk_sp.8* noalias nocapture sret, %class.SkOrderedFontMgr* nocapture readnone, %class.SkFontData*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %4, align 8
  %5 = icmp eq %class.SkFontData* %2, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 3, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 3, i32 1, i32 0, i64 0
  %10 = icmp eq i32* %8, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = bitcast i32* %8 to i8*
  tail call void @_Z7sk_freePv(i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.SkStreamAsset*, %class.SkStreamAsset** %14, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %14, align 8
  %16 = icmp eq %class.SkStreamAsset* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %class.SkStreamAsset* %15 to void (%class.SkStreamAsset*)***
  %19 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %19, i64 1
  %21 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %20, align 8
  tail call void %21(%class.SkStreamAsset* nonnull %15) #9
  br label %22

22:                                               ; preds = %17, %13
  %23 = bitcast %class.SkFontData* %2 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK16SkOrderedFontMgr14onMakeFromFileEPKci(%class.sk_sp.8* noalias nocapture sret, %class.SkOrderedFontMgr* nocapture readnone, i8* nocapture readnone, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK16SkOrderedFontMgr20onLegacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp.8* noalias nocapture sret, %class.SkOrderedFontMgr* nocapture readnone, i8* nocapture readnone, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkTypeface* @_ZNK9SkFontMgr16onMatchFaceStyleEPK10SkTypefaceRK11SkFontStyle(%class.SkFontMgr*, %class.SkTypeface*, %class.SkFontStyle* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret %class.SkTypeface* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI9SkFontMgrENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %class.sk_sp*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %36, i64 %35
  %39 = ptrtoint %class.sk_sp* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %40, align 8
  %43 = bitcast %class.sk_sp* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %37, i64 1
  %45 = ptrtoint %class.sk_sp* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = ptrtoint %class.sk_sp* %47 to i64
  %49 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  %50 = icmp eq %class.sk_sp* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp, %class.sk_sp* %49, i64 -1, i32 0
  %53 = ptrtoint %class.SkFontMgr** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %65, align 8
  %68 = bitcast %class.sk_sp* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !2

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %81, align 8
  %84 = bitcast %class.sk_sp* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %87, align 8
  %90 = bitcast %class.sk_sp* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %93, align 8
  %96 = bitcast %class.sk_sp* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %99, align 8
  %102 = bitcast %class.sk_sp* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %105, align 8
  %108 = bitcast %class.sk_sp* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %111, align 8
  %114 = bitcast %class.sk_sp* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %117, align 8
  %120 = bitcast %class.sk_sp* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SkFontMgr* null, %class.SkFontMgr** %123, align 8
  %126 = bitcast %class.sk_sp* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp*, %class.sk_sp** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp*
  %138 = icmp eq %class.sk_sp* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %141, i64 0, i32 0
  %143 = load %class.SkFontMgr*, %class.SkFontMgr** %142, align 8
  %144 = icmp eq %class.SkFontMgr* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkFontMgr* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkFontMgr* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #9
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
