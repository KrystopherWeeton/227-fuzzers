; ModuleID = '../../third_party/skia/src/codec/SkJpegDecoderMgr.cpp'
source_filename = "../../third_party/skia/src/codec/SkJpegDecoderMgr.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.JpegDecoderMgr = type <{ %struct.jpeg_decompress_struct, %struct.skjpeg_source_mgr, %struct.skjpeg_error_mgr, %struct.jpeg_progress_mgr, i8, [7 x i8] }>
%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, i32 (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type opaque
%struct.jpeg_d_main_controller = type opaque
%struct.jpeg_d_coef_controller = type opaque
%struct.jpeg_d_post_controller = type opaque
%struct.jpeg_input_controller = type opaque
%struct.jpeg_marker_reader = type opaque
%struct.jpeg_entropy_decoder = type opaque
%struct.jpeg_inverse_dct = type opaque
%struct.jpeg_upsampler = type opaque
%struct.jpeg_color_deconverter = type opaque
%struct.jpeg_color_quantizer = type opaque
%struct.skjpeg_source_mgr = type { %struct.jpeg_source_mgr, %class.SkStream*, [1024 x i8] }
%struct.skjpeg_error_mgr = type { %struct.jpeg_error_mgr, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [32 x i8] }
%class.SkTArray = type { [1 x %struct.__jmp_buf_tag]**, i64 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%class.SkStream = type { i32 (...)** }

@switch.table._ZN14JpegDecoderMgr15getEncodedColorEPN13SkEncodedInfo5ColorE = private unnamed_addr constant [5 x i32] [i32 0, i32 5, i32 10, i32 12, i32 13], align 4

@_ZN14JpegDecoderMgrC1EP8SkStream = hidden unnamed_addr alias void (%class.JpegDecoderMgr*, %class.SkStream*), void (%class.JpegDecoderMgr*, %class.SkStream*)* @_ZN14JpegDecoderMgrC2EP8SkStream
@_ZN14JpegDecoderMgrD1Ev = hidden unnamed_addr alias void (%class.JpegDecoderMgr*), void (%class.JpegDecoderMgr*)* @_ZN14JpegDecoderMgrD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14JpegDecoderMgr11returnFalseEPKc(%class.JpegDecoderMgr*, i8* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca [200 x i8], align 16
  %4 = bitcast %class.JpegDecoderMgr* %0 to %struct.jpeg_common_struct*
  %5 = getelementptr inbounds [200 x i8], [200 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %5) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 200, i1 false) #4
  %6 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 3
  %9 = load void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*, i8*)** %8, align 8
  call void %9(%struct.jpeg_common_struct* %4, i8* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %5) #4
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14JpegDecoderMgr13returnFailureEPKcN7SkCodec6ResultE(%class.JpegDecoderMgr*, i8* nocapture readnone, i32 returned) local_unnamed_addr #0 align 2 {
  %4 = alloca [200 x i8], align 16
  %5 = bitcast %class.JpegDecoderMgr* %0 to %struct.jpeg_common_struct*
  %6 = getelementptr inbounds [200 x i8], [200 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 200, i1 false) #4
  %7 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 0
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 3
  %10 = load void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*, i8*)** %9, align 8
  call void %10(%struct.jpeg_common_struct* %5, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %6) #4
  ret i32 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN14JpegDecoderMgr15getEncodedColorEPN13SkEncodedInfo5ColorE(%class.JpegDecoderMgr* nocapture readonly, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN14JpegDecoderMgr15getEncodedColorEPN13SkEncodedInfo5ColorE, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %1, align 4
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i1 [ false, %2 ], [ true, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14JpegDecoderMgrC2EP8SkStream(%class.JpegDecoderMgr*, %class.SkStream*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 1
  tail call void @_ZN17skjpeg_source_mgrC1EP8SkStream(%struct.skjpeg_source_mgr* %3, %class.SkStream* %1) #4
  %4 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %6 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %8 = bitcast i8* %7 to i64*
  %9 = bitcast i8* %5 to i8**
  store i8* %6, i8** %9, align 8
  store i64 34359738368, i64* %8, align 8
  %10 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 4
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %4, i64 0, i32 0
  %12 = tail call %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr* %11) #4
  %13 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 0
  store %struct.jpeg_error_mgr* %12, %struct.jpeg_error_mgr** %13, align 8
  %14 = getelementptr inbounds %struct.skjpeg_error_mgr, %struct.skjpeg_error_mgr* %4, i64 0, i32 0, i32 0
  store void (%struct.jpeg_common_struct*)* @_Z15skjpeg_err_exitP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %14, align 8
  ret void
}

declare void @_ZN17skjpeg_source_mgrC1EP8SkStream(%struct.skjpeg_source_mgr*, %class.SkStream*) unnamed_addr #2

declare %struct.jpeg_error_mgr* @jpeg_std_error(%struct.jpeg_error_mgr*) local_unnamed_addr #2

declare void @_Z15skjpeg_err_exitP18jpeg_common_struct(%struct.jpeg_common_struct*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14JpegDecoderMgr4initEv(%class.JpegDecoderMgr*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0
  tail call void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct* %2, i32 62, i64 632) #4
  %3 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 4
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 6
  store %struct.jpeg_source_mgr* %4, %struct.jpeg_source_mgr** %5, align 8
  %6 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 0
  %7 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %7, i64 0, i32 2
  store void (%struct.jpeg_common_struct*)* @_ZL14output_messageP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %8, align 8
  %9 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0, i32 2
  store %struct.jpeg_progress_mgr* %9, %struct.jpeg_progress_mgr** %10, align 8
  %11 = bitcast %struct.jpeg_progress_mgr* %9 to void (%struct.jpeg_common_struct*)**
  store void (%struct.jpeg_common_struct*)* @_ZL16progress_monitorP18jpeg_common_struct, void (%struct.jpeg_common_struct*)** %11, align 8
  ret void
}

declare void @jpeg_CreateDecompress(%struct.jpeg_decompress_struct*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL14output_messageP18jpeg_common_struct(%struct.jpeg_common_struct*) #0 {
  %2 = alloca [200 x i8], align 16
  %3 = getelementptr inbounds [200 x i8], [200 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %3) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 200, i1 false) #4
  %4 = getelementptr inbounds %struct.jpeg_common_struct, %struct.jpeg_common_struct* %0, i64 0, i32 0
  %5 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %5, i64 0, i32 3
  %7 = load void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*, i8*)** %6, align 8
  call void %7(%struct.jpeg_common_struct* %0, i8* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL16progress_monitorP18jpeg_common_struct(%struct.jpeg_common_struct*) #0 {
  %2 = bitcast %struct.jpeg_common_struct* %0 to %struct.jpeg_decompress_struct*
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %2, i64 0, i32 35
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 99
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_Z15skjpeg_err_exitP18jpeg_common_struct(%struct.jpeg_common_struct* %0) #4
  br label %7

7:                                                ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14JpegDecoderMgrD2Ev(%class.JpegDecoderMgr*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 0
  tail call void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct* %6) #4
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i64 40
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.JpegDecoderMgr, %class.JpegDecoderMgr* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i64 32
  %15 = bitcast i8* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  tail call void @_Z7sk_freePv(i8* %16) #4
  br label %17

17:                                               ; preds = %7, %13
  ret void
}

declare void @jpeg_destroy_decompress(%struct.jpeg_decompress_struct*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
