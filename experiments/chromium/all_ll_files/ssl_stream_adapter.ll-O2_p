; ModuleID = '../../third_party/webrtc/rtc_base/ssl_stream_adapter.cc'
source_filename = "../../third_party/webrtc/rtc_base/ssl_stream_adapter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rtc::SSLStreamAdapter" = type <{ %"class.rtc::StreamInterface", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.15", i8, [7 x i8] }>
%"class.rtc::StreamInterface" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy" }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.3" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.sigslot::signal_with_thread_policy.15" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::OpenSSLStreamAdapter" = type <{ %"class.rtc::SSLStreamAdapter.base", [7 x i8], %"class.std::__1::unique_ptr.18", %"class.rtc::Thread"*, %"class.webrtc::ScopedTaskSafety", %"class.webrtc::RepeatingTaskHandle", i32, i32, i32, i8, i8, [2 x i8], %struct.ssl_st*, %struct.ssl_ctx_st*, %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.63", i8, [7 x i8], %"class.rtc::BufferT", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i32, i8, [3 x i8] }>
%"class.rtc::SSLStreamAdapter.base" = type <{ %"class.rtc::StreamInterface", %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy.15", i8 }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.rtc::StreamInterface"* }
%"class.rtc::Thread" = type <{ %"class.webrtc::TaskQueueBase", i8, [7 x i8], %"struct.rtc::Message", %"class.std::__1::list.27", %"class.rtc::Thread::PriorityQueue", i32, [4 x i8], %"class.rtc::RecursiveCriticalSection", i8, i8, [2 x i8], i32, %"class.rtc::SocketServer"*, %"class.std::__1::unique_ptr.41", %"class.std::__1::basic_string", i64, i8, i8, [6 x i8], %"class.rtc::Thread::QueuedTaskHandler", %"class.std::__1::unique_ptr.47", i32, [4 x i8] }>
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"struct.rtc::Message" = type { %"class.rtc::Location", %"class.rtc::MessageHandler"*, i32, %"class.rtc::MessageData"* }
%"class.rtc::Location" = type <{ i8*, i8*, i32, [4 x i8] }>
%"class.rtc::MessageHandler" = type { i32 (...)** }
%"class.rtc::MessageData" = type { i32 (...)** }
%"class.std::__1::list.27" = type { %"class.std::__1::__list_imp.28" }
%"class.std::__1::__list_imp.28" = type { %"struct.std::__1::__list_node_base.29", %"class.std::__1::__compressed_pair.30" }
%"struct.std::__1::__list_node_base.29" = type { %"struct.std::__1::__list_node_base.29"*, %"struct.std::__1::__list_node_base.29"* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.rtc::Thread::PriorityQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector", %"struct.std::__1::less.39" }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.rtc::Thread::DelayedMessage"*, %"class.rtc::Thread::DelayedMessage"*, %"class.std::__1::__compressed_pair.34" }
%"class.rtc::Thread::DelayedMessage" = type { i64, i64, i32, %"struct.rtc::Message" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.rtc::Thread::DelayedMessage"* }
%"struct.std::__1::less.39" = type { i8 }
%"class.rtc::RecursiveCriticalSection" = type <{ %union.pthread_mutex_t, i64, i32, [4 x i8] }>
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.rtc::SocketServer" = type { %"class.rtc::SocketFactory", %"class.rtc::NetworkBinderInterface"* }
%"class.rtc::SocketFactory" = type { i32 (...)** }
%"class.rtc::NetworkBinderInterface" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.rtc::SocketServer"* }
%"class.rtc::Thread::QueuedTaskHandler" = type { %"class.rtc::MessageHandler" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter"* }
%"class.webrtc::TaskQueueBase::CurrentTaskQueueSetter" = type { %"class.webrtc::TaskQueueBase"* }
%"class.webrtc::ScopedTaskSafety" = type { %"class.rtc::scoped_refptr" }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::PendingTaskSafetyFlag"* }
%"class.webrtc::PendingTaskSafetyFlag" = type <{ %"class.rtc::RefCountedNonVirtual", i8, [3 x i8] }>
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.webrtc::RepeatingTaskHandle" = type { %"class.webrtc::webrtc_repeating_task_impl::RepeatingTaskBase"* }
%"class.webrtc::webrtc_repeating_task_impl::RepeatingTaskBase" = type { %"class.webrtc::QueuedTask", %"class.webrtc::TaskQueueBase"*, %"class.webrtc::Clock"*, %"class.webrtc::Timestamp" }
%"class.webrtc::QueuedTask" = type { i32 (...)** }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%struct.ssl_st = type opaque
%struct.ssl_ctx_st = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.rtc::BoringSSLIdentity"* }
%"class.rtc::BoringSSLIdentity" = type { %"class.rtc::SSLIdentity", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63" }
%"class.rtc::SSLIdentity" = type { i32 (...)** }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.rtc::OpenSSLKeyPair"* }
%"class.rtc::OpenSSLKeyPair" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.rtc::SSLCertChain"* }
%"class.rtc::SSLCertChain" = type { %"class.std::__1::vector.66" }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.std::__1::unique_ptr.68"*, %"class.std::__1::unique_ptr.68"*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.rtc::SSLCertificate"* }
%"class.rtc::SSLCertificate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::unique_ptr.68"* }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr.85" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.std::__1::vector.94" = type opaque
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.sigslot::_opaque_connection" }
%"class.sigslot::_opaque_connection" = type { void (%"class.sigslot::_opaque_connection"*)*, %"class.sigslot::has_slots_interface"*, [16 x i8] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.sigslot::_signal_base_interface"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZN3rtc16SSLStreamAdapterD2Ev = comdat any

$_ZN3rtc16SSLStreamAdapterD0Ev = comdat any

$_ZThn64_N3rtc16SSLStreamAdapterD1Ev = comdat any

$_ZThn64_N3rtc16SSLStreamAdapterD0Ev = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEED2Ev = comdat any

$_ZN7sigslot9has_slotsINS_15single_threadedEED0Ev = comdat any

$_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZTVN7sigslot9has_slotsINS_15single_threadedEEE = comdat any

@_ZN3rtc26CS_AES_CM_128_HMAC_SHA1_80E = hidden constant [24 x i8] c"AES_CM_128_HMAC_SHA1_80\00", align 16
@_ZN3rtc26CS_AES_CM_128_HMAC_SHA1_32E = hidden constant [24 x i8] c"AES_CM_128_HMAC_SHA1_32\00", align 16
@_ZN3rtc19CS_AEAD_AES_128_GCME = hidden constant [17 x i8] c"AEAD_AES_128_GCM\00", align 16
@_ZN3rtc19CS_AEAD_AES_256_GCME = hidden constant [17 x i8] c"AEAD_AES_256_GCM\00", align 16
@_ZTVN3rtc16SSLStreamAdapterE = hidden unnamed_addr constant { [25 x i8*], [4 x i8*] } { [25 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::SSLStreamAdapter"*)* @_ZN3rtc16SSLStreamAdapterD2Ev to i8*), i8* bitcast (void (%"class.rtc::SSLStreamAdapter"*)* @_ZN3rtc16SSLStreamAdapterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.rtc::StreamInterface"*)* @_ZN3rtc15StreamInterface5FlushEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.rtc::SSLStreamAdapter"*, i32*)* @_ZN3rtc16SSLStreamAdapter17GetSslCipherSuiteEPi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.rtc::SSLStreamAdapter"*, %"class.std::__1::basic_string"*, i8*, i64, i1, i8*, i64)* @_ZN3rtc16SSLStreamAdapter20ExportKeyingMaterialERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKhmbPhm to i8*), i8* bitcast (i1 (%"class.rtc::SSLStreamAdapter"*, %"class.std::__1::vector.94"*)* @_ZN3rtc16SSLStreamAdapter23SetDtlsSrtpCryptoSuitesERKNSt3__16vectorIiNS1_9allocatorIiEEEE to i8*), i8* bitcast (i1 (%"class.rtc::SSLStreamAdapter"*, i32*)* @_ZN3rtc16SSLStreamAdapter22GetDtlsSrtpCryptoSuiteEPi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)], [4 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.rtc::SSLStreamAdapter"*)* @_ZThn64_N3rtc16SSLStreamAdapterD1Ev to i8*), i8* bitcast (void (%"class.rtc::SSLStreamAdapter"*)* @_ZThn64_N3rtc16SSLStreamAdapterD0Ev to i8*)] }, align 8
@_ZTVN7sigslot9has_slotsINS_15single_threadedEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sigslot::has_slots"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEED2Ev to i8*), i8* bitcast (void (%"class.sigslot::has_slots"*)* @_ZN7sigslot9has_slotsINS_15single_threadedEED0Ev to i8*)] }, comdat, align 8
@_ZTVN3rtc15StreamInterfaceE = external unnamed_addr constant { [9 x i8*] }, align 8
@switch.table._ZN3rtc24GetSrtpKeyAndSaltLengthsEiPiS0_ = private unnamed_addr constant [8 x i32] [i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 32], align 4
@switch.table._ZN3rtc24GetSrtpKeyAndSaltLengthsEiPiS0_.1 = private unnamed_addr constant [8 x i32] [i32 14, i32 14, i32 14, i32 14, i32 14, i32 14, i32 12, i32 12], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc21SrtpCryptoSuiteToNameEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 {
  switch i32 %1, label %27 [
    i32 2, label %3
    i32 1, label %9
    i32 7, label %15
    i32 8, label %21
  ]

3:                                                ; preds = %2
  %4 = tail call i8* @_Znwm(i64 32) #8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %7, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3rtc26CS_AES_CM_128_HMAC_SHA1_32E, i64 0, i64 0), i64 23, i1 false) #9
  %8 = getelementptr inbounds i8, i8* %4, i64 23
  store i8 0, i8* %8, align 1
  br label %29

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 32) #8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %10, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3rtc26CS_AES_CM_128_HMAC_SHA1_80E, i64 0, i64 0), i64 23, i1 false) #9
  %14 = getelementptr inbounds i8, i8* %10, i64 23
  store i8 0, i8* %14, align 1
  br label %29

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 16, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3rtc19CS_AEAD_AES_128_GCME, i64 0, i64 0), i64 16, i1 false) #9
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %20 = bitcast i64* %19 to i8*
  store i8 0, i8* %20, align 8
  br label %29

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 16, i8* %23, align 1
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 16 getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3rtc19CS_AEAD_AES_256_GCME, i64 0, i64 0), i64 16, i1 false) #9
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast i64* %25 to i8*
  store i8 0, i8* %26, align 8
  br label %29

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #9
  br label %29

29:                                               ; preds = %27, %21, %15, %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3rtc23SrtpCryptoSuiteFromNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 23
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3rtc26CS_AES_CM_128_HMAC_SHA1_32E, i64 0, i64 0), i64 23) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 23
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZN3rtc26CS_AES_CM_128_HMAC_SHA1_80E, i64 0, i64 0), i64 23) #9
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %57, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %3, align 1
  %30 = load i64, i64* %6, align 8
  %31 = zext i8 %29 to i64
  br label %32

32:                                               ; preds = %28, %18
  %33 = phi i64 [ %31, %28 ], [ %19, %18 ]
  %34 = phi i64 [ %30, %28 ], [ %20, %18 ]
  %35 = phi i8 [ %29, %28 ], [ %21, %18 ]
  %36 = icmp slt i8 %35, 0
  %37 = select i1 %36, i64 %34, i64 %33
  %38 = icmp eq i64 %37, 16
  br i1 %38, label %39, label %46

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3rtc19CS_AEAD_AES_128_GCME, i64 0, i64 0), i64 16) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %39
  %43 = load i8, i8* %3, align 1
  %44 = load i64, i64* %6, align 8
  %45 = zext i8 %43 to i64
  br label %46

46:                                               ; preds = %42, %32
  %47 = phi i64 [ %45, %42 ], [ %33, %32 ]
  %48 = phi i64 [ %44, %42 ], [ %34, %32 ]
  %49 = phi i8 [ %43, %42 ], [ %35, %32 ]
  %50 = icmp slt i8 %49, 0
  %51 = select i1 %50, i64 %48, i64 %47
  %52 = icmp eq i64 %51, 16
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3rtc19CS_AEAD_AES_256_GCME, i64 0, i64 0), i64 16) #9
  %55 = icmp eq i32 %54, 0
  %56 = select i1 %55, i32 8, i32 0
  ret i32 %56

57:                                               ; preds = %46, %39, %25, %11
  %58 = phi i32 [ 2, %11 ], [ 1, %25 ], [ 7, %39 ], [ 0, %46 ]
  ret i32 %58
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN3rtc24GetSrtpKeyAndSaltLengthsEiPiS0_(i32, i32* nocapture, i32* nocapture) local_unnamed_addr #1 {
  %4 = add i32 %0, -1
  %5 = icmp ult i32 %4, 8
  br i1 %5, label %6, label %18

6:                                                ; preds = %3
  %7 = trunc i32 %4 to i8
  %8 = lshr i8 -61, %7
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = sext i32 %4 to i64
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN3rtc24GetSrtpKeyAndSaltLengthsEiPiS0_, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %4 to i64
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZN3rtc24GetSrtpKeyAndSaltLengthsEiPiS0_.1, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  store i32 %14, i32* %1, align 4
  store i32 %17, i32* %2, align 4
  br label %18

18:                                               ; preds = %6, %3, %11
  %19 = phi i1 [ false, %3 ], [ true, %11 ], [ false, %6 ]
  ret i1 %19
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3rtc16IsGcmCryptoSuiteEi(i32) local_unnamed_addr #2 {
  %2 = add i32 %0, -7
  %3 = icmp ult i32 %2, 2
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc20IsGcmCryptoSuiteNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 16
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3rtc19CS_AEAD_AES_256_GCME, i64 0, i64 0), i64 16) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 16
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZN3rtc19CS_AEAD_AES_128_GCME, i64 0, i64 0), i64 16) #9
  %27 = icmp eq i32 %26, 0
  br label %28

28:                                               ; preds = %25, %18, %11
  %29 = phi i1 [ true, %11 ], [ %27, %25 ], [ false, %18 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rtc::SSLStreamAdapter"* @_ZN3rtc16SSLStreamAdapter6CreateENSt3__110unique_ptrINS_15StreamInterfaceENS1_14default_deleteIS3_EEEE(%"class.rtc::StreamInterface"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 360) #8
  %3 = bitcast i8* %2 to %"class.rtc::OpenSSLStreamAdapter"*
  tail call void @_ZN3rtc20OpenSSLStreamAdapterC1ENSt3__110unique_ptrINS_15StreamInterfaceENS1_14default_deleteIS3_EEEE(%"class.rtc::OpenSSLStreamAdapter"* nonnull %3, %"class.rtc::StreamInterface"* %0) #9
  %4 = bitcast i8* %2 to %"class.rtc::SSLStreamAdapter"*
  ret %"class.rtc::SSLStreamAdapter"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter17GetSslCipherSuiteEPi(%"class.rtc::SSLStreamAdapter"* nocapture readnone, i32* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter20ExportKeyingMaterialERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKhmbPhm(%"class.rtc::SSLStreamAdapter"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), i8* nocapture readnone, i64, i1 zeroext, i8* nocapture readnone, i64) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter23SetDtlsSrtpCryptoSuitesERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.rtc::SSLStreamAdapter"* nocapture readnone, %"class.std::__1::vector.94"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter22GetDtlsSrtpCryptoSuiteEPi(%"class.rtc::SSLStreamAdapter"* nocapture readnone, i32* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter11IsBoringSslEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN3rtc20OpenSSLStreamAdapter11IsBoringSslEv() #9
  ret i1 %1
}

declare zeroext i1 @_ZN3rtc20OpenSSLStreamAdapter11IsBoringSslEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter18IsAcceptableCipherEiNS_7KeyTypeE(i32, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3rtc20OpenSSLStreamAdapter18IsAcceptableCipherEiNS_7KeyTypeE(i32 %0, i32 %1) #9
  ret i1 %3
}

declare zeroext i1 @_ZN3rtc20OpenSSLStreamAdapter18IsAcceptableCipherEiNS_7KeyTypeE(i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3rtc16SSLStreamAdapter18IsAcceptableCipherERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7KeyTypeE(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3rtc20OpenSSLStreamAdapter18IsAcceptableCipherERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7KeyTypeE(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1) #9
  ret i1 %3
}

declare zeroext i1 @_ZN3rtc20OpenSSLStreamAdapter18IsAcceptableCipherERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_7KeyTypeE(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc16SSLStreamAdapter20SslCipherSuiteToNameEi(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3rtc20OpenSSLStreamAdapter20SslCipherSuiteToNameEi(%"class.std::__1::basic_string"* sret %0, i32 %1) #9
  ret void
}

declare void @_ZN3rtc20OpenSSLStreamAdapter20SslCipherSuiteToNameEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc16SSLStreamAdapter28EnableTimeCallbackForTestingEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN3rtc20OpenSSLStreamAdapter28EnableTimeCallbackForTestingEv() #9
  ret void
}

declare void @_ZN3rtc20OpenSSLStreamAdapter28EnableTimeCallbackForTestingEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc16SSLStreamAdapterD2Ev(%"class.rtc::SSLStreamAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [4 x i8*] }, { [25 x i8*], [4 x i8*] }* @_ZTVN3rtc16SSLStreamAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*], [4 x i8*] }, { [25 x i8*], [4 x i8*] }* @_ZTVN3rtc16SSLStreamAdapterE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to %"struct.std::__1::__list_node"**
  %11 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 2, i32 0, i32 0
  br label %12

12:                                               ; preds = %12, %8
  %13 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %10, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %13, i64 0, i32 1, i32 1
  %15 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %13, i64 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %13, i64 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %20, i64 0, i32 1
  %22 = bitcast %"struct.std::__1::__list_node_base"** %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = bitcast %"struct.std::__1::__list_node"* %13 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.std::__1::__list_node_base"** %16 to i64**
  %26 = load i64*, i64** %25, align 8
  store i64 %24, i64* %26, align 8
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %5, align 8
  %29 = bitcast %"struct.std::__1::__list_node"* %13 to i8*
  tail call void @_ZdlPv(i8* %29) #8
  %30 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %15, i64 0, i32 2
  %31 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %30, align 8
  tail call void %31(%"class.sigslot::has_slots_interface"* %15, %"class.sigslot::_signal_base_interface"* %11) #9
  %32 = load i64, i64* %5, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %12

34:                                               ; preds = %12, %1
  %35 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %35, %"struct.std::__1::__list_node_base"** %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %37 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %3, i64 0, i32 0
  %38 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 1, i32 0, i32 3
  %39 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %38, align 8
  tail call void %39(%"class.sigslot::has_slots_interface"* %37) #9
  %40 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 1, i32 1, i32 0
  %41 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 1, i32 1, i32 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"class.std::__1::__tree_node"**
  %43 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %40, %"class.std::__1::__tree_node"* %43) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3rtc15StreamInterfaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %44 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %73, label %47

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %49 = bitcast %"struct.std::__1::__list_node_base"** %48 to %"struct.std::__1::__list_node"**
  %50 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %51

51:                                               ; preds = %51, %47
  %52 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %49, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %52, i64 0, i32 1, i32 1
  %54 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %52, i64 0, i32 0, i32 1
  %56 = bitcast %"struct.std::__1::__list_node_base"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %52, i64 0, i32 0, i32 0
  %59 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %59, i64 0, i32 1
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  store i64 %57, i64* %61, align 8
  %62 = bitcast %"struct.std::__1::__list_node"* %52 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"struct.std::__1::__list_node_base"** %55 to i64**
  %65 = load i64*, i64** %64, align 8
  store i64 %63, i64* %65, align 8
  %66 = load i64, i64* %44, align 8
  %67 = add i64 %66, -1
  store i64 %67, i64* %44, align 8
  %68 = bitcast %"struct.std::__1::__list_node"* %52 to i8*
  tail call void @_ZdlPv(i8* %68) #8
  %69 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %54, i64 0, i32 2
  %70 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %69, align 8
  tail call void %70(%"class.sigslot::has_slots_interface"* %54, %"class.sigslot::_signal_base_interface"* %50) #9
  %71 = load i64, i64* %44, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %51

73:                                               ; preds = %51, %34
  %74 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %75 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %74, %"struct.std::__1::__list_node_base"** %75, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc16SSLStreamAdapterD0Ev(%"class.rtc::SSLStreamAdapter"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN3rtc15StreamInterface5FlushEv(%"class.rtc::StreamInterface"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn64_N3rtc16SSLStreamAdapterD1Ev(%"class.rtc::SSLStreamAdapter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.rtc::SSLStreamAdapter", %"class.rtc::SSLStreamAdapter"* %0, i64 -1, i32 2
  %3 = bitcast %"class.sigslot::signal_with_thread_policy.15"* %2 to %"class.rtc::SSLStreamAdapter"*
  tail call void @_ZN3rtc16SSLStreamAdapterD2Ev(%"class.rtc::SSLStreamAdapter"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn64_N3rtc16SSLStreamAdapterD0Ev(%"class.rtc::SSLStreamAdapter"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEED2Ev(%"class.sigslot::has_slots"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 3
  %5 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %4, align 8
  tail call void %5(%"class.sigslot::has_slots_interface"* %3) #9
  %6 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot9has_slotsINS_15single_threadedEED0Ev(%"class.sigslot::has_slots"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7sigslot9has_slotsINS_15single_threadedEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 0, i32 3
  %5 = load void (%"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::has_slots_interface"*)** %4, align 8
  tail call void %5(%"class.sigslot::has_slots_interface"* %3) #9
  %6 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.sigslot::has_slots", %"class.sigslot::has_slots"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.sigslot::has_slots"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIPN7sigslot22_signal_base_interfaceENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZN3rtc20OpenSSLStreamAdapterC1ENSt3__110unique_ptrINS_15StreamInterfaceENS1_14default_deleteIS3_EEEE(%"class.rtc::OpenSSLStreamAdapter"*, %"class.rtc::StreamInterface"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
