; ModuleID = '../../third_party/skia/src/core/SkXfermodeInterpretation.cpp'
source_filename = "../../third_party/skia/src/core/SkXfermodeInterpretation.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp, %class.sk_sp.0, %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.3, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.0 = type { %class.SkShader* }
%class.SkShader = type opaque
%class.sk_sp.1 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.2 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.3 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_Z19SkInterpretXfermodeRK7SkPaintb(%class.SkPaint* nocapture readonly dereferenceable(72), i1 zeroext) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, 10
  %6 = trunc i32 %5 to i8
  switch i8 %6, label %77 [
    i8 3, label %78
    i8 1, label %7
    i8 2, label %29
    i8 4, label %30
    i8 5, label %32
    i8 6, label %55
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %9 = load float, float* %8, align 4
  %10 = fmul float %9, 2.550000e+02
  %11 = fadd float %10, 5.000000e-01
  %12 = tail call float @llvm.floor.f32(float %11) #2
  %13 = fcmp olt float %12, 0x41DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0x41DFFFFFE0000000
  %15 = fcmp ogt float %14, 0xC1DFFFFFE0000000
  %16 = select i1 %15, float %14, float 0xC1DFFFFFE0000000
  %17 = fptosi float %16 to i32
  %18 = trunc i32 %17 to i8
  %19 = icmp eq i8 %18, -1
  br i1 %19, label %20, label %78

20:                                               ; preds = %7
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %22 = load %class.SkColorFilter*, %class.SkColorFilter** %21, align 8
  %23 = icmp eq %class.SkColorFilter* %22, null
  br i1 %23, label %24, label %78

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %26 = load %class.SkShader*, %class.SkShader** %25, align 8
  %27 = icmp eq %class.SkShader* %26, null
  %28 = zext i1 %27 to i32
  ret i32 %28

29:                                               ; preds = %2
  br label %78

30:                                               ; preds = %2
  %31 = select i1 %1, i32 2, i32 0
  br label %78

32:                                               ; preds = %2
  br i1 %1, label %33, label %54

33:                                               ; preds = %32
  %34 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, 2.550000e+02
  %37 = fadd float %36, 5.000000e-01
  %38 = tail call float @llvm.floor.f32(float %37) #2
  %39 = fcmp olt float %38, 0x41DFFFFFE0000000
  %40 = select i1 %39, float %38, float 0x41DFFFFFE0000000
  %41 = fcmp ogt float %40, 0xC1DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0xC1DFFFFFE0000000
  %43 = fptosi float %42 to i32
  %44 = trunc i32 %43 to i8
  %45 = icmp eq i8 %44, -1
  br i1 %45, label %46, label %54

46:                                               ; preds = %33
  %47 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %48 = load %class.SkColorFilter*, %class.SkColorFilter** %47, align 8
  %49 = icmp eq %class.SkColorFilter* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %52 = load %class.SkShader*, %class.SkShader** %51, align 8
  %53 = icmp eq %class.SkShader* %52, null
  br i1 %53, label %78, label %54

54:                                               ; preds = %33, %46, %50, %32
  br label %78

55:                                               ; preds = %2
  %56 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 5, i32 3
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, 2.550000e+02
  %59 = fadd float %58, 5.000000e-01
  %60 = tail call float @llvm.floor.f32(float %59) #2
  %61 = fcmp olt float %60, 0x41DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0x41DFFFFFE0000000
  %63 = fcmp ogt float %62, 0xC1DFFFFFE0000000
  %64 = select i1 %63, float %62, float 0xC1DFFFFFE0000000
  %65 = fptosi float %64 to i32
  %66 = trunc i32 %65 to i8
  %67 = icmp eq i8 %66, -1
  br i1 %67, label %68, label %78

68:                                               ; preds = %55
  %69 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 3, i32 0
  %70 = load %class.SkColorFilter*, %class.SkColorFilter** %69, align 8
  %71 = icmp eq %class.SkColorFilter* %70, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %0, i64 0, i32 1, i32 0
  %74 = load %class.SkShader*, %class.SkShader** %73, align 8
  %75 = icmp eq %class.SkShader* %74, null
  %76 = select i1 %75, i32 2, i32 0
  br label %78

77:                                               ; preds = %2
  br label %78

78:                                               ; preds = %72, %55, %68, %7, %20, %50, %30, %2, %77, %54, %29
  %79 = phi i32 [ 0, %77 ], [ 0, %54 ], [ 2, %29 ], [ 1, %2 ], [ %31, %30 ], [ 1, %50 ], [ 0, %20 ], [ 0, %7 ], [ 0, %68 ], [ 0, %55 ], [ %76, %72 ]
  ret i32 %79
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #1

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
