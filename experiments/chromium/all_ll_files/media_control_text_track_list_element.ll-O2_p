; ModuleID = '../../third_party/blink/renderer/modules/media_controls/elements/media_control_text_track_list_element.cc'
source_filename = "../../third_party/blink/renderer/modules/media_controls/elements/media_control_text_track_list_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::QualifiedName>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::QualifiedName>::InstanceStorage" = type { [8 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.416", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.416" = type { %"class.base::RefCounted.417" }
%"class.base::RefCounted.417" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.418", i32, [4 x i8], %"class.std::__1::unique_ptr.556", %"class.std::__1::unique_ptr.556", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.567", %"class.std::__1::unique_ptr.573", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.585", %"class.std::__1::unique_ptr.591", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.598", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.445", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.476", %"class.std::__1::unique_ptr.483", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.536", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.445" = type { %"class.std::__1::__compressed_pair.446" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.454" = type { %"struct.std::__1::__atomic_base.455" }
%"struct.std::__1::__atomic_base.455" = type { %"struct.std::__1::__atomic_base.456" }
%"struct.std::__1::__atomic_base.456" = type { %"struct.std::__1::__cxx_atomic_impl.457" }
%"struct.std::__1::__cxx_atomic_impl.457" = type { %"struct.std::__1::__cxx_atomic_base_impl.458" }
%"struct.std::__1::__cxx_atomic_base_impl.458" = type { i64 }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.blink::Worklist.465"* }
%"class.blink::Worklist.465" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::Worklist.472"* }
%"class.blink::Worklist.472" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.blink::Worklist.479"* }
%"class.blink::Worklist.479" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::Worklist.486"* }
%"class.blink::Worklist.486" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::Worklist.493"* }
%"class.blink::Worklist.493" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::Worklist.500"* }
%"class.blink::Worklist.500" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::Worklist.507"* }
%"class.blink::Worklist.507" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.454" }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.514", %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.528", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516", %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { i64 }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { float }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.539", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.548" }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.564" }
%"class.WTF::VectorBuffer.564" = type { %"class.WTF::VectorBufferBase.565" }
%"class.WTF::VectorBufferBase.565" = type { %"struct.std::__1::pair.566"*, i32, i32 }
%"struct.std::__1::pair.566" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.579" }
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.465"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.472"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.479"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.486"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.493"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.824", i64 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.826" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.597 }
%class.scoped_refptr.597 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.598" = type { %"struct.std::__1::__atomic_base.599" }
%"struct.std::__1::__atomic_base.599" = type { %"struct.std::__1::__cxx_atomic_impl.600" }
%"struct.std::__1::__cxx_atomic_impl.600" = type { %"struct.std::__1::__cxx_atomic_base_impl.601" }
%"struct.std::__1::__cxx_atomic_base_impl.601" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MediaControlTextTrackListElement" = type { %"class.blink::MediaControlPopupMenuElement" }
%"class.blink::MediaControlPopupMenuElement" = type { %"class.blink::MediaControlDivElement.base", %"class.blink::Member.23", %"class.blink::Member.25" }
%"class.blink::MediaControlDivElement.base" = type <{ %"class.blink::HTMLDivElement", %"class.blink::MediaControlElementBase.base" }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.298", %"class.blink::Member.300", %"class.blink::Member.0", %"class.blink::Member.302", %"class.blink::Member.302", %"class.blink::Member.324", %"class.blink::Member.326", %"class.blink::Member.328", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.333", %"class.blink::HeapVector.335" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.378", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.386", %"class.WTF::Vector.386", i8, i32, %"class.blink::Member.391", %"class.blink::Member.393", %"class.blink::Member.394", %"class.blink::Member.396", %"class.blink::Member.398", %"class.blink::Member.400", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.402", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.408", %"class.blink::Member.410", %"class.blink::Member.341", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.412", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.604", %"class.blink::HeapVector.317", %"class.blink::Member.25", %"class.blink::Member.606", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::UserActionElementSet", %"class.blink::Member.615", double, double, i64, i64, %"class.blink::HeapHashSet.617", %"class.blink::HeapHashSet.624", i16, i8, %"class.blink::Member.631", %"class.blink::Member.633", %"class.blink::Member.635", %"class.blink::Member.637", %"class.blink::TextLinkColors", %"class.blink::Member.639", i8, [7 x i8], %"class.blink::HeapHashMap.641", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.25", %"class.WTF::Vector.648", %"class.blink::Member.653", %"class.blink::Member.655", i8, %"class.blink::Member.25", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.657", %"class.blink::HeapVector.659", %"class.std::__1::unique_ptr.667", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.673", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.686", %"class.WTF::Vector.688", i8, i8, %"class.std::__1::unique_ptr.693", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.317", %"class.blink::HeapVector.699", i32, i8, %"class.blink::HeapTaskRunnerTimer.604", %"class.blink::HeapTaskRunnerTimer.604", %"class.blink::DocumentTiming", %"class.blink::Member.707", i8, i32, %"class.blink::Member.709", %"class.blink::Member.711", %"class.blink::Member.713", %"class.blink::HeapTaskRunnerTimer.604", %"class.blink::Member.715", %"class.WTF::HashMap.717", %"class.blink::Member.722", %"class.blink::Member.724", %"class.blink::Member.726", %"class.blink::Member.728", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::HeapTaskRunnerTimer.604", %"class.blink::HeapHashSet.730", i8, i32, %"class.blink::Member.737", %"class.blink::Member.739", i32, %"class.blink::Member.741", %"class.blink::Member.743", %"class.blink::Member.745", %"class.std::__1::unique_ptr.747", i64, %"class.std::__1::unique_ptr.753", i32, i32, %"class.blink::Member.759", %"class.blink::Member.761", %"class.blink::Member.763", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.765", %"class.WTF::Vector.767", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.772", %"class.blink::Member.779", %"class.std::__1::unique_ptr.781", %"class.blink::Member.787", i8, i8, %"class.WTF::String", %"class.blink::Member.789", i8, [7 x i8], %"class.blink::HeapHashMap.791", %"class.blink::HeapObserverSet.798", %"class.blink::Member.806", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.808", i32, i8, i8, %"class.blink::WeakMember.810", %"class.blink::Member.811" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.378" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.379" }
%"class.blink::HeapHashMap.379" = type { %"class.WTF::HashMap.382" }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.225", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.225" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.114" }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i32 }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.261" }
%"class.blink::MemberBase.261" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.343", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.345, %"class.WTF::Vector.346", %"class.WTF::Vector.346", %"class.blink::Member", %"class.blink::Member.351", %"class.blink::HeapHashSet.355", %"class.blink::Member.300", %"class.WTF::HashSet.362", %"class.WTF::TextPosition", %"class.blink::Member.366", %"class.blink::HeapVector.368", %"class.blink::Member.375" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.345 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.353" }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.355" = type { %"class.WTF::HashSet.358" }
%"class.WTF::HashSet.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"class.blink::WeakMember.361"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.361" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.368" = type { %"class.WTF::Vector.371" }
%"class.WTF::Vector.371" = type { %"class.WTF::VectorBuffer.372" }
%"class.WTF::VectorBuffer.372" = type { %"class.WTF::VectorBufferBase.373" }
%"class.WTF::VectorBufferBase.373" = type { %"class.blink::Member.351"*, i32, i32 }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.219 }
%class.scoped_refptr.219 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.608" }
%"class.blink::HeapHashMap.608" = type { %"class.WTF::HashMap.611" }
%"class.WTF::HashMap.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"struct.WTF::KeyValuePair.614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.614" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.617" = type { %"class.WTF::HashSet.620" }
%"class.WTF::HashSet.620" = type { %"class.WTF::HashTable.621" }
%"class.WTF::HashTable.621" = type <{ %"class.blink::WeakMember.623"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.623" = type opaque
%"class.blink::HeapHashSet.624" = type { %"class.WTF::HashSet.627" }
%"class.WTF::HashSet.627" = type { %"class.WTF::HashTable.628" }
%"class.WTF::HashTable.628" = type <{ %"class.blink::WeakMember.630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.630" = type opaque
%"class.blink::Member.631" = type { %"class.blink::MemberBase.632" }
%"class.blink::MemberBase.632" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.641" = type { %"class.WTF::HashMap.644" }
%"class.WTF::HashMap.644" = type { %"class.WTF::HashTable.645" }
%"class.WTF::HashTable.645" = type <{ %"struct.WTF::KeyValuePair.647"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.647" = type opaque
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.657" = type { %"class.blink::MemberBase.658" }
%"class.blink::MemberBase.658" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.659" = type { %"class.WTF::Vector.662" }
%"class.WTF::Vector.662" = type { %"class.WTF::VectorBuffer.663" }
%"class.WTF::VectorBuffer.663" = type { %"class.WTF::VectorBufferBase.664" }
%"class.WTF::VectorBufferBase.664" = type { %"class.blink::Member.665"*, i32, i32 }
%"class.blink::Member.665" = type opaque
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.673" = type { %"class.WTF::HashSet.676" }
%"class.WTF::HashSet.676" = type { %"class.WTF::HashTable.677" }
%"class.WTF::HashTable.677" = type <{ %"class.blink::WeakMember.679"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.679" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.680", i32, [4 x i8] }>
%"class.WTF::Vector.680" = type { %"class.WTF::VectorBuffer.681" }
%"class.WTF::VectorBuffer.681" = type { %"class.WTF::VectorBufferBase.682" }
%"class.WTF::VectorBufferBase.682" = type { %"struct.std::__1::pair.683"*, i32, i32 }
%"struct.std::__1::pair.683" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690" }
%"class.WTF::VectorBufferBase.690" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.317" = type { %"class.WTF::Vector.320" }
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::HeapVector.699" = type { %"class.WTF::Vector.702" }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { %"class.blink::Member.705"*, i32, i32 }
%"class.blink::Member.705" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.300" }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"struct.WTF::KeyValuePair.721"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.721" = type opaque
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.724" = type { %"class.blink::MemberBase.725" }
%"class.blink::MemberBase.725" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.728" = type { %"class.blink::MemberBase.729" }
%"class.blink::MemberBase.729" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.604" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.605", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.113, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.113 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.119 }
%class.scoped_refptr.119 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.120", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.120" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.121" }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i8 }
%"class.blink::WeakMember.605" = type { %"class.blink::MemberBase.301" }
%"class.blink::HeapHashSet.730" = type { %"class.WTF::HashSet.733" }
%"class.WTF::HashSet.733" = type { %"class.WTF::HashTable.734" }
%"class.WTF::HashTable.734" = type <{ %"class.blink::Member.736"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.736" = type opaque
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.745" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.772" = type { %"class.WTF::HashMap.775" }
%"class.WTF::HashMap.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type opaque
%"class.blink::Member.779" = type { %"class.blink::MemberBase.780" }
%"class.blink::MemberBase.780" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.791" = type { %"class.WTF::HashMap.794" }
%"class.WTF::HashMap.794" = type { %"class.WTF::HashTable.795" }
%"class.WTF::HashTable.795" = type <{ %"struct.WTF::KeyValuePair.797"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.797" = type opaque
%"class.blink::HeapObserverSet.798" = type { i32, [4 x i8], %"class.blink::HeapHashSet.799" }
%"class.blink::HeapHashSet.799" = type { %"class.WTF::HashSet.802" }
%"class.WTF::HashSet.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"class.blink::WeakMember.805"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.805" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.300", %"class.blink::HeapHashSet.815", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.822", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.815" = type { %"class.WTF::HashSet.818" }
%"class.WTF::HashSet.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"class.blink::Member.821"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.821" = type opaque
%"class.blink::HeapTaskRunnerTimer.822" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.823", { i64, i64 } }
%"class.blink::WeakMember.823" = type { %"class.blink::MemberBase.809" }
%"class.blink::WeakMember.810" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.306" }
%"class.blink::HeapHashMap.306" = type { %"class.WTF::HashMap.309" }
%"class.WTF::HashMap.309" = type { %"class.WTF::HashTable.310" }
%"class.WTF::HashTable.310" = type <{ %"struct.WTF::KeyValuePair.312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.312" = type { %"class.WTF::AtomicString", %"class.blink::Member.313" }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.25", i32, %"class.blink::HeapVector.317" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.330" }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::HeapHashMap.332"* }
%"class.blink::HeapHashMap.332" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.335" = type { %"class.WTF::Vector.338" }
%"class.WTF::Vector.338" = type { %"class.WTF::VectorBuffer.339" }
%"class.WTF::VectorBuffer.339" = type { %"class.WTF::VectorBufferBase.340" }
%"class.WTF::VectorBufferBase.340" = type { %"class.blink::Member.341"*, i32, i32 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::MediaControlElementBase.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.19", %"class.blink::Member.21", i8 }>
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::MediaControlsImpl"* }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::HTMLElement"* }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::MediaControlPopupMenuElement::EventListener"* }
%"class.blink::MediaControlPopupMenuElement::EventListener" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Element"* }
%"class.blink::MediaControlsImpl" = type <{ %"class.blink::HTMLDivElement", %"class.blink::MediaControls", %"class.blink::Member.29", %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::Member.37", %"class.blink::Member.39", %"class.blink::Member.41", %"class.blink::Member.43", %"class.blink::Member.45", %"class.blink::Member.47", %"class.blink::Member.49", %"class.blink::Member.51", %"class.blink::Member.53", %"class.blink::Member.55", %"class.blink::Member.81", %"class.blink::Member.83", %"class.blink::Member.85", %"class.blink::Member.87", %"class.blink::Member.89", %"class.blink::Member.91", %"class.blink::Member.93", %"class.blink::Member.95", %"class.blink::Member.97", %"class.blink::Member.33", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.109", %"class.blink::Member.111", %"class.blink::HeapTaskRunnerTimer", i32, i8, i8, i8, i8, %"class.blink::Member.126", %"class.blink::Member.128", %"class.blink::HeapTaskRunnerTimer", %"class.blink::IntSize", i8, i8, i8, [5 x i8], %"class.blink::HeapTaskRunnerTimer", i8, [7 x i8], %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.130", i8, [7 x i8] }>
%"class.blink::MediaControls" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.27" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HTMLMediaElement"* }
%"class.blink::HTMLMediaElement" = type { %"class.blink::HTMLElement", %"class.blink::Supplementable", %"class.blink::ActiveScriptWrappable.137", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.media::mojom::blink::MediaPlayer", %"class.blink::WebMediaPlayerClient", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HeapTaskRunnerTimer.145", %"class.blink::HeapTaskRunnerTimer.145", %"class.blink::HeapTaskRunnerTimer.145", %"class.blink::HeapTaskRunnerTimer.145", %"class.blink::HeapTaskRunnerTimer.145", %"class.blink::Member.147", %"class.blink::Member.149", double, double, i32, i32, i32, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::Member.152", %"class.blink::Member.154", double, double, %"class.absl::optional", double, double, double, i32, %"class.blink::Member.156", %"class.blink::Member", i32, %"class.blink::HeapTaskRunnerTimer.145", %"class.std::__1::unique_ptr.158", %"class.cc::Layer"*, %class.scoped_refptr.164, %"class.blink::Member.165", double, i8, double, i32, i16, %"class.absl::optional.167", i8, %"class.base::TimeTicks", %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::HeapVector.201", %"class.blink::Member.209", %"class.blink::HeapVector.211", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::HeapVector.211", %"class.blink::HeapVector.211", i32, %"class.blink::Member.220", %"class.blink::HTMLMediaElement::AudioSourceProviderImpl", %"class.blink::Member.251", %"class.blink::WebRemotePlaybackClient"*, %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::Member.295" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::ActiveScriptWrappable.137" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.138" }
%"class.blink::WeakMember.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.142" }
%"class.WTF::HashTable.142" = type <{ %"class.blink::WeakMember.144"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.144" = type opaque
%"class.media::mojom::blink::MediaPlayer" = type { i32 (...)** }
%"class.blink::WebMediaPlayerClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::TimeRanges"* }
%"class.blink::TimeRanges" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::EventQueue"* }
%"class.blink::EventQueue" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::MediaError"* }
%"class.blink::MediaError" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::ElapsedTimer" }
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::HTMLSourceElement"* }
%"class.blink::HTMLSourceElement" = type opaque
%"class.blink::HeapTaskRunnerTimer.145" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.146", { i64, i64 } }
%"class.blink::WeakMember.146" = type { %"class.blink::MemberBase.28" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::WebMediaPlayer"* }
%"class.blink::WebMediaPlayer" = type { i32 (...)** }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.164 = type { %"class.blink::MediaSourceAttachment"* }
%"class.blink::MediaSourceAttachment" = type opaque
%"class.blink::Member.165" = type { %"class.blink::MemberBase.166" }
%"class.blink::MemberBase.166" = type { %"class.blink::MediaSourceTracer"* }
%"class.blink::MediaSourceTracer" = type opaque
%"class.absl::optional.167" = type { %"class.absl::optional_internal::optional_data.168" }
%"class.absl::optional_internal::optional_data.168" = type { %"class.absl::optional_internal::optional_data_base.169" }
%"class.absl::optional_internal::optional_data_base.169" = type { %"class.absl::optional_internal::optional_data_dtor_base.170" }
%"class.absl::optional_internal::optional_data_dtor_base.170" = type { i8, %union.anon.171 }
%union.anon.171 = type { i8 }
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::AudioTrackList"* }
%"class.blink::AudioTrackList" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::VideoTrackList"* }
%"class.blink::VideoTrackList" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.27", %"class.blink::HeapVector.201", %"class.blink::HeapVector.201", %"class.blink::HeapVector.201" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.194" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.186" }
%"class.WTF::Vector.186" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188", [32 x i8] }
%"class.WTF::VectorBufferBase.188" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.189" }
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::HeapVector.191"* }
%"class.blink::HeapVector.191" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.WTF::Vector.197"* }
%"class.WTF::Vector.197" = type opaque
%"class.blink::HeapVector.201" = type { %"class.WTF::Vector.204" }
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"class.blink::Member.207"*, i32, i32 }
%"class.blink::Member.207" = type opaque
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::CueTimeline"* }
%"class.blink::CueTimeline" = type opaque
%"class.blink::HeapVector.211" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::Member.217"*, i32, i32 }
%"class.blink::Member.217" = type opaque
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::AudioSourceProviderClient"* }
%"class.blink::AudioSourceProviderClient" = type opaque
%"class.blink::HTMLMediaElement::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %class.scoped_refptr.222, %"class.blink::Member.247", %"class.WTF::Mutex" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%class.scoped_refptr.222 = type { %"class.blink::WebAudioSourceProviderImpl"* }
%"class.blink::WebAudioSourceProviderImpl" = type { %"class.blink::WebAudioSourceProvider", %"class.media::SwitchableAudioRendererSink.base", double, i32, %"class.base::RepeatingCallback", %"class.blink::WebAudioSourceProviderClient"*, %"class.base::Lock", %class.scoped_refptr.226, %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.240", %"class.media::MediaLog"*, %"class.base::OnceCallback", %"class.base::WeakPtrFactory.246" }
%"class.blink::WebAudioSourceProvider" = type { i32 (...)** }
%"class.media::SwitchableAudioRendererSink.base" = type { %"class.media::RestartableAudioRendererSink.base" }
%"class.media::RestartableAudioRendererSink.base" = type { %"class.media::AudioRendererSink.base" }
%"class.media::AudioRendererSink.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.223" }>
%"class.base::RefCountedThreadSafe.223" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebAudioSourceProviderClient" = type { i32 (...)** }
%class.scoped_refptr.226 = type { %"class.media::SwitchableAudioRendererSink"* }
%"class.media::SwitchableAudioRendererSink" = type { %"class.media::RestartableAudioRendererSink.base", [4 x i8] }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.230", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { float** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::WebAudioSourceProviderImpl::TeeFilter"* }
%"class.blink::WebAudioSourceProviderImpl::TeeFilter" = type opaque
%"class.media::MediaLog" = type opaque
%"class.base::WeakPtrFactory.246" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::HTMLMediaElement::AudioClientImpl"* }
%"class.blink::HTMLMediaElement::AudioClientImpl" = type { %"class.blink::WebAudioSourceProviderClient", %"class.blink::Member.220" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::AutoplayPolicy"* }
%"class.blink::AutoplayPolicy" = type opaque
%"class.blink::WebRemotePlaybackClient" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::MediaControls"* }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::HTMLMediaElementControlsList"* }
%"class.blink::HTMLMediaElementControlsList" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable.259", %"class.blink::ExecutionContextClient", %"class.blink::Member.262", %"class.blink::UntracedMember", %"class.blink::HeapLinkedHashSet", %"class.WTF::Vector.275", double, %"class.WTF::Vector.280", i32, i8, [3 x i8] }>
%"class.blink::ActiveScriptWrappable.259" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.260" }
%"class.blink::WeakMember.260" = type { %"class.blink::MemberBase.261" }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::IntersectionObserverDelegate"* }
%"class.blink::IntersectionObserverDelegate" = type opaque
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::Node"* }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.267", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.267" = type { %"class.WTF::HashTable.268" }
%"class.WTF::HashTable.268" = type <{ %"struct.WTF::KeyValuePair.270"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.270" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.271", i32, i32 }
%"class.WTF::Vector.271" = type { %"class.WTF::VectorBuffer.272" }
%"class.WTF::VectorBuffer.272" = type { %"class.WTF::VectorBufferBase.273" }
%"class.WTF::VectorBufferBase.273" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.WTF::Vector.275" = type { %"class.WTF::VectorBuffer.276" }
%"class.WTF::VectorBuffer.276" = type { %"class.WTF::VectorBufferBase.277" }
%"class.WTF::VectorBufferBase.277" = type { float*, i32, i32 }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::Length" = type <{ %union.anon.283, i8, i8, i8, i8 }>
%union.anon.283 = type { i32 }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::DisallowNewWrapper.290"* }
%"class.blink::DisallowNewWrapper.290" = type { %"class.blink::HeapMojoAssociatedRemoteSet" }
%"class.blink::HeapMojoAssociatedRemoteSet" = type { %"class.blink::Member.293" }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemoteSet<media::mojom::blink::MediaPlayerObserver, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::DisallowNewWrapper.297"* }
%"class.blink::DisallowNewWrapper.297" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::MediaControlOverlayEnclosureElement"* }
%"class.blink::MediaControlOverlayEnclosureElement" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::MediaControlOverlayPlayButtonElement"* }
%"class.blink::MediaControlOverlayPlayButtonElement" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::MediaControlPanelEnclosureElement"* }
%"class.blink::MediaControlPanelEnclosureElement" = type opaque
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::MediaControlPanelElement"* }
%"class.blink::MediaControlPanelElement" = type opaque
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::MediaControlPlayButtonElement"* }
%"class.blink::MediaControlPlayButtonElement" = type opaque
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::MediaControlTimelineElement"* }
%"class.blink::MediaControlTimelineElement" = type opaque
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::MediaControlScrubbingMessageElement"* }
%"class.blink::MediaControlScrubbingMessageElement" = type opaque
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::MediaControlCurrentTimeDisplayElement"* }
%"class.blink::MediaControlCurrentTimeDisplayElement" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::MediaControlRemainingTimeDisplayElement"* }
%"class.blink::MediaControlRemainingTimeDisplayElement" = type opaque
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::MediaControlMuteButtonElement"* }
%"class.blink::MediaControlMuteButtonElement" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::MediaControlVolumeSliderElement"* }
%"class.blink::MediaControlVolumeSliderElement" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::MediaControlVolumeControlContainerElement"* }
%"class.blink::MediaControlVolumeControlContainerElement" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::MediaControlToggleClosedCaptionsButtonElement"* }
%"class.blink::MediaControlToggleClosedCaptionsButtonElement" = type { %"class.blink::MediaControlInputElement.base", [5 x i8] }
%"class.blink::MediaControlInputElement.base" = type <{ %"class.blink::HTMLInputElement.base", [4 x i8], %"class.blink::MediaControlElementBase.base", [7 x i8], %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::Member.79", %"class.blink::Member.79", %"class.WTF::String", i8, i8, i8 }>
%"class.blink::HTMLInputElement.base" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.71", i32 }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.63", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.57", %"class.blink::Member.59", %"class.blink::Member.61", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::MediaControlInputElement"* }
%"class.blink::MediaControlInputElement" = type <{ %"class.blink::HTMLInputElement.base", [4 x i8], %"class.blink::MediaControlElementBase.base", [7 x i8], %"class.blink::Member.73", %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::Member.79", %"class.blink::Member.79", %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::HTMLLabelElement"* }
%"class.blink::HTMLLabelElement" = type <{ %"class.blink::HTMLElement", i8, [7 x i8] }>
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::HTMLDivElement"* }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::HTMLSpanElement"* }
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaControlTextTrackListElement"* }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MediaControlPlaybackSpeedButtonElement"* }
%"class.blink::MediaControlPlaybackSpeedButtonElement" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::MediaControlPlaybackSpeedListElement"* }
%"class.blink::MediaControlPlaybackSpeedListElement" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::MediaControlOverflowMenuButtonElement"* }
%"class.blink::MediaControlOverflowMenuButtonElement" = type opaque
%"class.blink::Member.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::MediaControlOverflowMenuListElement"* }
%"class.blink::MediaControlOverflowMenuListElement" = type opaque
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::MediaControlButtonPanelElement"* }
%"class.blink::MediaControlButtonPanelElement" = type opaque
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::MediaControlLoadingPanelElement"* }
%"class.blink::MediaControlLoadingPanelElement" = type opaque
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::MediaControlPictureInPictureButtonElement"* }
%"class.blink::MediaControlPictureInPictureButtonElement" = type opaque
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::MediaControlAnimatedArrowContainerElement"* }
%"class.blink::MediaControlAnimatedArrowContainerElement" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::MediaControlCastButtonElement"* }
%"class.blink::MediaControlCastButtonElement" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::MediaControlFullscreenButtonElement"* }
%"class.blink::MediaControlFullscreenButtonElement" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::MediaControlDisplayCutoutFullscreenButtonElement"* }
%"class.blink::MediaControlDisplayCutoutFullscreenButtonElement" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::MediaControlDownloadButtonElement"* }
%"class.blink::MediaControlDownloadButtonElement" = type opaque
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::MediaControlsMediaEventListener"* }
%"class.blink::MediaControlsMediaEventListener" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::MediaControlsOrientationLockDelegate"* }
%"class.blink::MediaControlsOrientationLockDelegate" = type opaque
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::MediaControlsRotateToFullscreenDelegate"* }
%"class.blink::MediaControlsRotateToFullscreenDelegate" = type opaque
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::MediaControlsDisplayCutoutDelegate"* }
%"class.blink::MediaControlsDisplayCutoutDelegate" = type opaque
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::ResizeObserver"* }
%"class.blink::ResizeObserver" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::MediaControlsImpl::MediaElementMutationCallback"* }
%"class.blink::MediaControlsImpl::MediaElementMutationCallback" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.20" }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::MediaControlsTextTrackManager"* }
%"class.blink::MediaControlsTextTrackManager" = type { i32 (...)**, %"class.blink::Member.27" }
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::MediaControlElementBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member.19", %"class.blink::Member.21", i8, [7 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter.930" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.blink::TextTrack" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::TrackBase", %"class.blink::Member.850", %"class.blink::Member.850", %"class.blink::HeapVector.335", %"class.blink::Member.180", %"class.WTF::AtomicString", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.blink::TrackBase" = type { %"class.blink::Supplementable.842", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.27" }
%"class.blink::Supplementable.842" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.843" }
%"class.blink::HeapHashMap.843" = type { %"class.WTF::HashMap.846" }
%"class.WTF::HashMap.846" = type { %"class.WTF::HashTable.847" }
%"class.WTF::HashTable.847" = type <{ %"struct.WTF::KeyValuePair.849"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.849" = type opaque
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::TextTrackCueList"* }
%"class.blink::TextTrackCueList" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.836", %"class.blink::Member.836", %"class.blink::Member.838", %"class.blink::Member.840", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.831" }
%"class.absl::optional.831" = type { %"class.absl::optional_internal::optional_data.832" }
%"class.absl::optional_internal::optional_data.832" = type { %"class.absl::optional_internal::optional_data_base.833" }
%"class.absl::optional_internal::optional_data_base.833" = type { %"class.absl::optional_internal::optional_data_dtor_base.834" }
%"class.absl::optional_internal::optional_data_dtor_base.834" = type { i8, %union.anon.835 }
%union.anon.835 = type { i64 }
%"class.blink::Member.836" = type { %"class.blink::MemberBase.837" }
%"class.blink::MemberBase.837" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.839" }
%"class.blink::MemberBase.839" = type { %"class.blink::Event"* }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::CreateElementFlags" = type <{ i8, [7 x i8], %"class.blink::Document"*, i8, [7 x i8] }>
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.852" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.852" = type { %"class.v8::TracedReference.853" }
%"class.v8::TracedReference.853" = type { %"class.v8::BasicTracedReference.854" }
%"class.v8::BasicTracedReference.854" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.65", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.71", i32, [4 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.855 }
%class.scoped_refptr.855 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.856", %"class.WTF::String", %"class.std::__1::unique_ptr.858" }
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.861", %"class.std::__1::unique_ptr.872", %"class.WTF::Vector.878", i8, i32 }
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.WTF::Vector.864"* }
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.878" = type { %"class.WTF::VectorBuffer.879" }
%"class.WTF::VectorBuffer.879" = type { %"class.WTF::VectorBufferBase.866", [32 x i8] }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.889, %"class.blink::Member.890", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.889 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.892" }
%"class.blink::Persistent.892" = type { %"class.blink::PersistentBase.893" }
%"class.blink::PersistentBase.893" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.896", i8, [7 x i8] }>
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::MediaControlDivElement" = type <{ %"class.blink::HTMLDivElement", %"class.blink::MediaControlElementBase.base", [7 x i8] }>
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.898", %"class.WTF::String"* }
%"class.blink::HeapVector.898" = type { %"class.WTF::Vector.901" }
%"class.WTF::Vector.901" = type { %"class.WTF::VectorBuffer.902" }
%"class.WTF::VectorBuffer.902" = type { %"class.WTF::VectorBufferBase.903" }
%"class.WTF::VectorBufferBase.903" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.905" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink32MediaControlTextTrackListElementD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink14HTMLDivElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink28MediaControlPopupMenuElement13SupportsFocusEv = comdat any

$_ZNK5blink28MediaControlPopupMenuElement16IsMouseFocusableEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink11HTMLElement17IsHTMLBodyElementEv = comdat any

$_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv = comdat any

$_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv = comdat any

$_ZNK5blink11HTMLElement19IsHTMLPortalElementEv = comdat any

$_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv = comdat any

$_ZNK5blink11HTMLElement15IsPluginElementEv = comdat any

$_ZNK5blink11HTMLElement7AltTextEv = comdat any

$_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLInputElementEE4CallIJRNS_8DocumentENS_18CreateElementFlagsEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink32MediaControlTextTrackListElementE = hidden unnamed_addr constant { [178 x i8*], [3 x i8*], [10 x i8*] } { [178 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MediaControlPopupMenuElement"*)* @_ZN5blink28MediaControlPopupMenuElementD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaControlTextTrackListElement"*)* @_ZN5blink32MediaControlTextTrackListElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Visitor"*)* @_ZNK5blink28MediaControlPopupMenuElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::HTMLDivElement"*)* @_ZNK5blink14HTMLDivElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Event"*)* @_ZNK5blink28MediaControlPopupMenuElement15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlDivElement"*)* @_ZNK5blink22MediaControlDivElement21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink28MediaControlPopupMenuElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlTextTrackListElement"*)* @_ZN5blink32MediaControlTextTrackListElement29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::MediaControlTextTrackListElement"*, %"class.blink::Event"*)* @_ZN5blink32MediaControlTextTrackListElement19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::Document"*)* @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.905"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::HTMLDivElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink14HTMLDivElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, i32)* @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlPopupMenuElement"*)* @_ZNK5blink28MediaControlPopupMenuElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlPopupMenuElement"*)* @_ZNK5blink28MediaControlPopupMenuElement16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement14autocapitalizeEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9draggableEv to i8*), i8* bitcast (%"class.blink::HTMLFormElement"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement9formOwnerEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement15IsPluginElementEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement11IsLabelableEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement20IsInteractiveContentEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::HTMLElement"*)* @_ZNK5blink11HTMLElement7AltTextEv to i8*), i8* bitcast (%"class.blink::FormAssociated"* (%"class.blink::HTMLElement"*)* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv to i8*), i8* bitcast (void (%"class.blink::MediaControlDivElement"*, i1)* @_ZN5blink22MediaControlDivElement26SetOverflowElementIsWantedEb to i8*), i8* bitcast (void (%"class.blink::MediaControlDivElement"*)* @_ZN5blink22MediaControlDivElement20MaybeRecordDisplayedEv to i8*), i8* bitcast (i64 (%"class.blink::MediaControlDivElement"*)* @_ZNK5blink22MediaControlDivElement16GetSizeOrDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlDivElement"*)* @_ZNK5blink22MediaControlDivElement10IsDisabledEv to i8*), i8* bitcast (void (%"class.blink::MediaControlTextTrackListElement"*, i1)* @_ZN5blink32MediaControlTextTrackListElement11SetIsWantedEb to i8*), i8* bitcast (void (%"class.blink::MediaControlPopupMenuElement"*)* @_ZN5blink28MediaControlPopupMenuElement14OnItemSelectedEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink28MediaControlPopupMenuElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MediaControlTextTrackListElement"*, i1)* @_ZThn104_N5blink32MediaControlTextTrackListElement11SetIsWantedEb to i8*), i8* bitcast (void (%"class.blink::MediaControlDivElement"*, i1)* @_ZThn104_N5blink22MediaControlDivElement26SetOverflowElementIsWantedEb to i8*), i8* bitcast (void (%"class.blink::MediaControlDivElement"*)* @_ZThn104_N5blink22MediaControlDivElement20MaybeRecordDisplayedEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlElementBase"*)* @_ZNK5blink23MediaControlElementBase17HasOverflowButtonEv to i8*), i8* bitcast (i64 (%"class.blink::MediaControlDivElement"*)* @_ZThn104_NK5blink22MediaControlDivElement16GetSizeOrDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::MediaControlDivElement"*)* @_ZThn104_NK5blink22MediaControlDivElement10IsDisabledEv to i8*), i8* bitcast (void (%"class.blink::MediaControlElementBase"*)* @_ZN5blink23MediaControlElementBase16UpdateShownStateEv to i8*)] }, align 8
@_ZN5blink10html_names9kRoleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"menu\00", align 1
@_ZN5blink10html_names14kAriaLabelAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.1 = private unnamed_addr constant [41 x i8] c"-internal-media-controls-text-track-list\00", align 1
@_ZN5blink16event_type_names6kClickE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names7kChangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [46 x i8] c"-internal-media-controls-text-track-list-item\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"-internal-media-controls-text-track-list-item-input\00", align 1
@_ZN5blink10html_names15kAriaHiddenAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@_ZN5blink16input_type_names9kCheckboxE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names16kAriaCheckedAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"-internal-media-controls-text-track-list-kind-captions\00", align 1
@.str.7 = private unnamed_addr constant [56 x i8] c"-internal-media-controls-text-track-list-kind-subtitles\00", align 1
@.str.8 = private unnamed_addr constant [48 x i8] c"-internal-media-controls-text-track-list-header\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"button\00", align 1
@_ZN5blink10html_names16kAriaSetsizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names17kAriaPosinsetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.10 = private unnamed_addr constant [17 x i8] c"menuitemcheckbox\00", align 1
@_ZZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr = internal global i64 0, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.11 = private unnamed_addr constant [17 x i8] c"data-track-index\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink14HTMLDivElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink32MediaControlTextTrackListElementC1ERNS_17MediaControlsImplE = hidden unnamed_addr alias void (%"class.blink::MediaControlTextTrackListElement"*, %"class.blink::MediaControlsImpl"*), void (%"class.blink::MediaControlTextTrackListElement"*, %"class.blink::MediaControlsImpl"*)* @_ZN5blink32MediaControlTextTrackListElementC2ERNS_17MediaControlsImplE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32MediaControlTextTrackListElementC2ERNS_17MediaControlsImplE(%"class.blink::MediaControlTextTrackListElement"*, %"class.blink::MediaControlsImpl"* dereferenceable(848)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink28MediaControlPopupMenuElementC2ERNS_17MediaControlsImplE(%"class.blink::MediaControlPopupMenuElement"* %6, %"class.blink::MediaControlsImpl"* dereferenceable(848) %1) #9
  %7 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [10 x i8*] }, { [178 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink32MediaControlTextTrackListElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [10 x i8*] }, { [178 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink32MediaControlTextTrackListElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [178 x i8*], [3 x i8*], [10 x i8*] }, { [178 x i8*], [3 x i8*], [10 x i8*] }* @_ZTVN5blink32MediaControlTextTrackListElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRoleAttrE, align 8
  %12 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #9
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %29

29:                                               ; preds = %2, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %31 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %10) #9
  %33 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %32, i32 25056) #9
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %58, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 acquire, align 4
  %38 = and i32 %37, 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %56, label %40

40:                                               ; preds = %35
  %41 = load atomic i32, i32* %36 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #9
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  call void @llvm.trap() #9
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %58

56:                                               ; preds = %35
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %58

58:                                               ; preds = %29, %40, %54, %56
  %59 = phi %"class.WTF::StringImpl"* [ %57, %56 ], [ %33, %40 ], [ %33, %54 ], [ null, %29 ]
  %60 = ptrtoint %"class.WTF::StringImpl"* %59 to i64
  %61 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %60, i64* %61, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %30, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #9
  %62 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #9
  br label %78

78:                                               ; preds = %58, %74, %77
  br i1 %34, label %92, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %92

92:                                               ; preds = %78, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %93 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i64 40) #9
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %10, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #9
  br label %110

110:                                              ; preds = %92, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #9
  ret void
}

declare void @_ZN5blink28MediaControlPopupMenuElementC2ERNS_17MediaControlsImplE(%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::MediaControlsImpl"* dereferenceable(848)) unnamed_addr #1

declare void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #1

declare void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink32MediaControlTextTrackListElement29WillRespondToMouseClickEventsEv(%"class.blink::MediaControlTextTrackListElement"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32MediaControlTextTrackListElement11SetIsWantedEb(%"class.blink::MediaControlTextTrackListElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %4

3:                                                ; preds = %2
  tail call void @_ZN5blink32MediaControlTextTrackListElement24RefreshTextTrackListMenuEv(%"class.blink::MediaControlTextTrackListElement"* %0)
  br label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.blink::MediaControlElementBase.base"* %5 to %"class.blink::MediaControlElementBase"*
  %7 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %6) #9
  %8 = tail call zeroext i1 @_ZN5blink17MediaControlsImpl20OverflowMenuIsWantedEv(%"class.blink::MediaControlsImpl"* %7) #9
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %6) #9
  tail call void @_ZN5blink17MediaControlsImpl17CloseOverflowMenuEv(%"class.blink::MediaControlsImpl"* %10) #9
  br label %11

11:                                               ; preds = %3, %9, %4
  %12 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink28MediaControlPopupMenuElement11SetIsWantedEb(%"class.blink::MediaControlPopupMenuElement"* %12, i1 zeroext %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32MediaControlTextTrackListElement24RefreshTextTrackListMenuEv(%"class.blink::MediaControlTextTrackListElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter.930", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::MediaControlElementBase.base"* %16 to %"class.blink::MediaControlElementBase"*
  %18 = tail call dereferenceable(1528) %"class.blink::HTMLMediaElement"* @_ZNK5blink23MediaControlElementBase12MediaElementEv(%"class.blink::MediaControlElementBase"* %17) #9
  %19 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement17HasClosedCaptionsEv(%"class.blink::HTMLMediaElement"* %18) #9
  br i1 %19, label %20, label %312

20:                                               ; preds = %1
  %21 = tail call dereferenceable(1528) %"class.blink::HTMLMediaElement"* @_ZNK5blink23MediaControlElementBase12MediaElementEv(%"class.blink::MediaControlElementBase"* %17) #9
  %22 = tail call zeroext i1 @_ZNK5blink16HTMLMediaElement18TextTracksAreReadyEv(%"class.blink::HTMLMediaElement"* %21) #9
  br i1 %22, label %23, label %312

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"* %24, i32 1) #9
  %25 = tail call %"class.blink::Element"* @_ZN5blink32MediaControlTextTrackListElement25CreateTextTrackHeaderItemEv(%"class.blink::MediaControlTextTrackListElement"* %0)
  %26 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %25, i64 0, i32 0, i32 0
  tail call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %24, %"class.blink::Node"* %26) #9
  %27 = tail call dereferenceable(1528) %"class.blink::HTMLMediaElement"* @_ZNK5blink23MediaControlElementBase12MediaElementEv(%"class.blink::MediaControlElementBase"* %17) #9
  %28 = tail call %"class.blink::TextTrackList"* @_ZN5blink16HTMLMediaElement10textTracksEv(%"class.blink::HTMLMediaElement"* %27) #9
  %29 = tail call %"class.blink::Element"* @_ZN5blink32MediaControlTextTrackListElement23CreateTextTrackListItemEPNS_9TextTrackE(%"class.blink::MediaControlTextTrackListElement"* %0, %"class.blink::TextTrack"* null)
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaSetsizeAttrE, align 8
  %31 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  %32 = tail call i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"* %28) #9
  %33 = add i32 %32, 1
  %34 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %38 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %39 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 32, i1 false) #9
  store i8* %36, i8** %37, align 8
  %40 = urem i32 %33, 10
  %41 = udiv i32 %33, 10
  %42 = trunc i32 %40 to i8
  %43 = or i8 %42, 48
  store i8 %43, i8* %36, align 1
  %44 = icmp ugt i32 %33, 9
  br i1 %44, label %45, label %60

45:                                               ; preds = %23
  %46 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %46, i8** %37, align 8
  %47 = urem i32 %41, 10
  %48 = trunc i32 %47 to i8
  %49 = or i8 %48, 48
  store i8 %49, i8* %46, align 2
  %50 = icmp ugt i32 %33, 99
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = udiv i32 %33, 100
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %53, i8** %37, align 8
  %54 = urem i32 %52, 10
  %55 = trunc i32 %54 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %53, align 1
  %57 = icmp ugt i32 %33, 999
  br i1 %57, label %62, label %71

58:                                               ; preds = %45
  %59 = ptrtoint i8* %46 to i64
  br label %74

60:                                               ; preds = %23
  %61 = ptrtoint i8* %36 to i64
  br label %74

62:                                               ; preds = %51, %62
  %63 = phi i32 [ %65, %62 ], [ %52, %51 ]
  %64 = load i8*, i8** %37, align 8
  %65 = udiv i32 %63, 10
  %66 = getelementptr inbounds i8, i8* %64, i64 -1
  store i8* %66, i8** %37, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 1
  %70 = icmp ugt i32 %63, 99
  br i1 %70, label %62, label %71

71:                                               ; preds = %62, %51
  %72 = bitcast i8** %37 to i64*
  %73 = load i64, i64* %72, align 8
  br label %74

74:                                               ; preds = %71, %58, %60
  %75 = phi i64 [ %61, %60 ], [ %73, %71 ], [ %59, %58 ]
  %76 = ptrtoint i8* %39 to i64
  %77 = sub i64 %76, %75
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %38, align 8
  %79 = inttoptr i64 %75 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %8, i8* %79, i32 %78) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #9
  %80 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %81 = load i64, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  store i64 %81, i64* %83, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %29, %"class.blink::QualifiedName"* dereferenceable(8) %30, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %10) #9
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %99

99:                                               ; preds = %74, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  %100 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names17kAriaPosinsetAttrE, align 8
  %101 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #9
  %102 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102)
  %103 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.930", %"class.WTF::IntegerToStringConverter.930"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #9
  %104 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.930", %"class.WTF::IntegerToStringConverter.930"* %7, i64 0, i32 0, i64 12
  %105 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.930", %"class.WTF::IntegerToStringConverter.930"* %7, i64 0, i32 2
  %106 = getelementptr inbounds %"class.WTF::IntegerToStringConverter.930", %"class.WTF::IntegerToStringConverter.930"* %7, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 32, i1 false) #9
  store i8* %104, i8** %105, align 8
  store i8 49, i8* %104, align 4
  store i32 1, i32* %106, align 8
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %6, i8* %104, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #9
  %107 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %108 = load i64, i64* %107, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102)
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  store i64 %108, i64* %110, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %29, %"class.blink::QualifiedName"* dereferenceable(8) %100, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #9
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %99
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #9
  br label %126

126:                                              ; preds = %99, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #9
  %127 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRoleAttrE, align 8
  %128 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %12, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 16) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %29, %"class.blink::QualifiedName"* dereferenceable(8) %127, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12) #9
  %129 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #9
  br label %145

145:                                              ; preds = %126, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #9
  %146 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %29, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %24, %"class.blink::Node"* %146) #9
  %147 = call i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"* %28) #9
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %312, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  %151 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %152 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  %153 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %154 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %155 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %156 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  %157 = ptrtoint i8* %153 to i64
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  %159 = bitcast i8** %154 to i64*
  %160 = ptrtoint i8* %156 to i64
  %161 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %162 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  %164 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  %165 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  %166 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  %167 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %168 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %170 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %171 = ptrtoint i8* %167 to i64
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  %173 = bitcast i8** %168 to i64*
  %174 = ptrtoint i8* %170 to i64
  %175 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %176 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %177 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  %178 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  %179 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %180 = ptrtoint i8* %158 to i64
  %181 = ptrtoint i8* %172 to i64
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  %183 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  br label %184

184:                                              ; preds = %149, %308
  %185 = phi i32 [ 0, %149 ], [ %309, %308 ]
  %186 = call %"class.blink::TextTrack"* @_ZN5blink13TextTrackList22AnonymousIndexedGetterEj(%"class.blink::TextTrackList"* %28, i32 %185) #9
  %187 = call zeroext i1 @_ZNK5blink9TextTrack13CanBeRenderedEv(%"class.blink::TextTrack"* %186) #9
  br i1 %187, label %188, label %308

188:                                              ; preds = %184
  %189 = call %"class.blink::Element"* @_ZN5blink32MediaControlTextTrackListElement23CreateTextTrackListItemEPNS_9TextTrackE(%"class.blink::MediaControlTextTrackListElement"* %0, %"class.blink::TextTrack"* %186)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #9
  %190 = call i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"* %28) #9
  %191 = add i32 %190, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 32, i1 false) #9
  store i8* %153, i8** %154, align 8
  %192 = urem i32 %191, 10
  %193 = udiv i32 %191, 10
  %194 = trunc i32 %192 to i8
  %195 = or i8 %194, 48
  store i8 %195, i8* %153, align 1
  %196 = icmp ugt i32 %191, 9
  br i1 %196, label %197, label %219

197:                                              ; preds = %188
  store i8* %158, i8** %154, align 8
  %198 = urem i32 %193, 10
  %199 = trunc i32 %198 to i8
  %200 = or i8 %199, 48
  store i8 %200, i8* %158, align 2
  %201 = icmp ugt i32 %191, 99
  br i1 %201, label %202, label %219

202:                                              ; preds = %197
  %203 = udiv i32 %191, 100
  store i8* %182, i8** %154, align 8
  %204 = urem i32 %203, 10
  %205 = trunc i32 %204 to i8
  %206 = or i8 %205, 48
  store i8 %206, i8* %182, align 1
  %207 = icmp ugt i32 %191, 999
  br i1 %207, label %208, label %217

208:                                              ; preds = %202, %208
  %209 = phi i32 [ %211, %208 ], [ %203, %202 ]
  %210 = load i8*, i8** %154, align 8
  %211 = udiv i32 %209, 10
  %212 = getelementptr inbounds i8, i8* %210, i64 -1
  store i8* %212, i8** %154, align 8
  %213 = urem i32 %211, 10
  %214 = trunc i32 %213 to i8
  %215 = or i8 %214, 48
  store i8 %215, i8* %212, align 1
  %216 = icmp ugt i32 %209, 99
  br i1 %216, label %208, label %217

217:                                              ; preds = %208, %202
  %218 = load i64, i64* %159, align 8
  br label %219

219:                                              ; preds = %197, %217, %188
  %220 = phi i64 [ %157, %188 ], [ %218, %217 ], [ %180, %197 ]
  %221 = sub i64 %160, %220
  %222 = trunc i64 %221 to i32
  store i32 %222, i32* %155, align 8
  %223 = inttoptr i64 %220 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %4, i8* %223, i32 %222) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152) #9
  %224 = load i64, i64* %161, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151)
  store i64 %224, i64* %163, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %189, %"class.blink::QualifiedName"* dereferenceable(8) %30, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #9
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #9
  br label %240

240:                                              ; preds = %219, %236, %239
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #9
  %241 = add i32 %185, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 32, i1 false) #9
  store i8* %167, i8** %168, align 8
  %242 = urem i32 %241, 10
  %243 = udiv i32 %241, 10
  %244 = trunc i32 %242 to i8
  %245 = or i8 %244, 48
  store i8 %245, i8* %167, align 1
  %246 = icmp ugt i32 %241, 9
  br i1 %246, label %247, label %269

247:                                              ; preds = %240
  store i8* %172, i8** %168, align 8
  %248 = urem i32 %243, 10
  %249 = trunc i32 %248 to i8
  %250 = or i8 %249, 48
  store i8 %250, i8* %172, align 2
  %251 = icmp ugt i32 %241, 99
  br i1 %251, label %252, label %269

252:                                              ; preds = %247
  %253 = udiv i32 %241, 100
  store i8* %183, i8** %168, align 8
  %254 = urem i32 %253, 10
  %255 = trunc i32 %254 to i8
  %256 = or i8 %255, 48
  store i8 %256, i8* %183, align 1
  %257 = icmp ugt i32 %241, 999
  br i1 %257, label %258, label %267

258:                                              ; preds = %252, %258
  %259 = phi i32 [ %261, %258 ], [ %253, %252 ]
  %260 = load i8*, i8** %168, align 8
  %261 = udiv i32 %259, 10
  %262 = getelementptr inbounds i8, i8* %260, i64 -1
  store i8* %262, i8** %168, align 8
  %263 = urem i32 %261, 10
  %264 = trunc i32 %263 to i8
  %265 = or i8 %264, 48
  store i8 %265, i8* %262, align 1
  %266 = icmp ugt i32 %259, 99
  br i1 %266, label %258, label %267

267:                                              ; preds = %258, %252
  %268 = load i64, i64* %173, align 8
  br label %269

269:                                              ; preds = %247, %267, %240
  %270 = phi i64 [ %171, %240 ], [ %268, %267 ], [ %181, %247 ]
  %271 = sub i64 %174, %270
  %272 = trunc i64 %271 to i32
  store i32 %272, i32* %169, align 8
  %273 = inttoptr i64 %270 to i8*
  call void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"* nonnull %2, i8* %273, i32 %272) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %166) #9
  %274 = load i64, i64* %175, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165)
  store i64 %274, i64* %177, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %189, %"class.blink::QualifiedName"* dereferenceable(8) %100, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14) #9
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %269
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #9
  br label %290

290:                                              ; preds = %269, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 16) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %189, %"class.blink::QualifiedName"* dereferenceable(8) %127, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %15) #9
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #9
  br label %306

306:                                              ; preds = %290, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #9
  %307 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %189, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %24, %"class.blink::Node"* %307) #9
  br label %308

308:                                              ; preds = %184, %306
  %309 = add nuw i32 %185, 1
  %310 = call i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"* %28) #9
  %311 = icmp ult i32 %309, %310
  br i1 %311, label %184, label %312

312:                                              ; preds = %308, %145, %1, %20
  ret void
}

declare dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink17MediaControlsImpl20OverflowMenuIsWantedEv(%"class.blink::MediaControlsImpl"*) local_unnamed_addr #1

declare void @_ZN5blink17MediaControlsImpl17CloseOverflowMenuEv(%"class.blink::MediaControlsImpl"*) local_unnamed_addr #1

declare void @_ZN5blink28MediaControlPopupMenuElement11SetIsWantedEb(%"class.blink::MediaControlPopupMenuElement"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink32MediaControlTextTrackListElement11SetIsWantedEb(%"class.blink::MediaControlTextTrackListElement"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5
  br i1 %1, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::Member"* %3 to %"class.blink::MediaControlTextTrackListElement"*
  tail call void @_ZN5blink32MediaControlTextTrackListElement24RefreshTextTrackListMenuEv(%"class.blink::MediaControlTextTrackListElement"* %5) #9
  br label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 13
  %8 = bitcast %"class.blink::Member"* %7 to %"class.blink::MediaControlElementBase"*
  %9 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %8) #9
  %10 = tail call zeroext i1 @_ZN5blink17MediaControlsImpl20OverflowMenuIsWantedEv(%"class.blink::MediaControlsImpl"* %9) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %8) #9
  tail call void @_ZN5blink17MediaControlsImpl17CloseOverflowMenuEv(%"class.blink::MediaControlsImpl"* %12) #9
  br label %13

13:                                               ; preds = %4, %6, %11
  %14 = bitcast %"class.blink::Member"* %3 to %"class.blink::MediaControlPopupMenuElement"*
  tail call void @_ZN5blink28MediaControlPopupMenuElement11SetIsWantedEb(%"class.blink::MediaControlPopupMenuElement"* %14, i1 zeroext %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32MediaControlTextTrackListElement19DefaultEventHandlerERNS_5EventE(%"class.blink::MediaControlTextTrackListElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kClickE, align 8
  %4 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %5, %7
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.blink::MediaControlElementBase.base"* %10 to %"class.blink::MediaControlElementBase"*
  %12 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %11) #9
  tail call void @_ZN5blink17MediaControlsImpl18ToggleOverflowMenuEv(%"class.blink::MediaControlsImpl"* %12) #9
  br label %52

13:                                               ; preds = %2
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kChangeE, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %5, %16
  br i1 %17, label %18, label %56

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 7, i32 0, i32 0
  %20 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %19, align 8
  %21 = bitcast %"class.blink::EventTarget"* %20 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %22 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %22, i64 11
  %24 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %23, align 8
  %25 = tail call %"class.blink::Node"* %24(%"class.blink::EventTarget"* %20) #9
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %58

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 1
  %34 = bitcast %"class.blink::MediaControlElementBase.base"* %33 to %"class.blink::MediaControlElementBase"*
  %35 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %34) #9
  %36 = tail call dereferenceable(16) %"class.blink::MediaControlsTextTrackManager"* @_ZN5blink17MediaControlsImpl19GetTextTrackManagerEv(%"class.blink::MediaControlsImpl"* %35) #9
  tail call void @_ZN5blink29MediaControlsTextTrackManager24DisableShowingTextTracksEv(%"class.blink::MediaControlsTextTrackManager"* %36) #9
  %37 = bitcast %"class.blink::Node"* %25 to %"class.blink::Element"*
  %38 = tail call fastcc dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink12_GLOBAL__N_118TrackIndexAttrNameEv()
  %39 = tail call i32 @_ZNK5blink7Element20GetIntegralAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %37, %"class.blink::QualifiedName"* dereferenceable(8) %38) #9
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %34) #9
  %43 = tail call dereferenceable(16) %"class.blink::MediaControlsTextTrackManager"* @_ZN5blink17MediaControlsImpl19GetTextTrackManagerEv(%"class.blink::MediaControlsImpl"* %42) #9
  tail call void @_ZN5blink29MediaControlsTextTrackManager20ShowTextTrackAtIndexEj(%"class.blink::MediaControlsTextTrackManager"* %43, i32 %39) #9
  %44 = tail call dereferenceable(1528) %"class.blink::HTMLMediaElement"* @_ZNK5blink23MediaControlElementBase12MediaElementEv(%"class.blink::MediaControlElementBase"* %34) #9
  tail call void @_ZN5blink16HTMLMediaElement34DisableAutomaticTextTrackSelectionEv(%"class.blink::HTMLMediaElement"* %44) #9
  br label %45

45:                                               ; preds = %32, %41
  %46 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %34) #9
  %47 = tail call zeroext i1 @_ZN5blink17MediaControlsImpl20OverflowMenuIsWantedEv(%"class.blink::MediaControlsImpl"* %46) #9
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = tail call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %34) #9
  tail call void @_ZN5blink17MediaControlsImpl17CloseOverflowMenuEv(%"class.blink::MediaControlsImpl"* %49) #9
  br label %50

50:                                               ; preds = %45, %48
  %51 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink28MediaControlPopupMenuElement11SetIsWantedEb(%"class.blink::MediaControlPopupMenuElement"* %51, i1 zeroext false) #9
  br label %52

52:                                               ; preds = %9, %50
  %53 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1, i64 0, i32 2
  %54 = load i16, i16* %53, align 8
  %55 = or i16 %54, 64
  store i16 %55, i16* %53, align 8
  br label %56

56:                                               ; preds = %52, %13
  %57 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink28MediaControlPopupMenuElement19DefaultEventHandlerERNS_5EventE(%"class.blink::MediaControlPopupMenuElement"* %57, %"class.blink::Event"* dereferenceable(104) %1) #9
  br label %58

58:                                               ; preds = %18, %27, %56
  ret void
}

declare void @_ZN5blink17MediaControlsImpl18ToggleOverflowMenuEv(%"class.blink::MediaControlsImpl"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::MediaControlsTextTrackManager"* @_ZN5blink17MediaControlsImpl19GetTextTrackManagerEv(%"class.blink::MediaControlsImpl"*) local_unnamed_addr #1

declare void @_ZN5blink29MediaControlsTextTrackManager24DisableShowingTextTracksEv(%"class.blink::MediaControlsTextTrackManager"*) local_unnamed_addr #1

declare i32 @_ZNK5blink7Element20GetIntegralAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink12_GLOBAL__N_118TrackIndexAttrNameEv() unnamed_addr #0 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %27, !prof !3

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %4
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %9 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 16) #9
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr to %"class.blink::QualifiedName"*), %"class.WTF::AtomicString"* dereferenceable(8) %8, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %8) #9
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #9
  br label %26

26:                                               ; preds = %7, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr) #9
  br label %27

27:                                               ; preds = %4, %26, %0
  ret %"class.blink::QualifiedName"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_118TrackIndexAttrNameEvE18s_track_index_attr to %"class.blink::QualifiedName"*)
}

declare void @_ZN5blink29MediaControlsTextTrackManager20ShowTextTrackAtIndexEj(%"class.blink::MediaControlsTextTrackManager"*, i32) local_unnamed_addr #1

declare dereferenceable(1528) %"class.blink::HTMLMediaElement"* @_ZNK5blink23MediaControlElementBase12MediaElementEv(%"class.blink::MediaControlElementBase"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLMediaElement34DisableAutomaticTextTrackSelectionEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare void @_ZN5blink28MediaControlPopupMenuElement19DefaultEventHandlerERNS_5EventE(%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink32MediaControlTextTrackListElement23CreateTextTrackListItemEPNS_9TextTrackE(%"class.blink::MediaControlTextTrackListElement"*, %"class.blink::TextTrack"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.blink::CreateElementFlags", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = icmp ne %"class.blink::TextTrack"* %1, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = tail call i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"* nonnull %1) #9
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %2 ]
  %21 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = tail call %"class.blink::HTMLLabelElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %24) #9
  %26 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %25, i64 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i64 45) #9
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %26, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #9
  %28 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #9
  br label %44

44:                                               ; preds = %19, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #9
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.blink::CreateElementFlags", %"class.blink::CreateElementFlags"* %4, i64 0, i32 3
  %50 = load i8, i8* %49, align 8
  %51 = and i8 %50, -8
  %52 = or i8 %51, 2
  store i8 %52, i8* %49, align 8
  %53 = call %"class.blink::HTMLInputElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLInputElementEE4CallIJRNS_8DocumentENS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %47, %"class.blink::CreateElementFlags"* nonnull dereferenceable(24) %4) #9
  %54 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %53, i64 0, i32 1, i32 0
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %54) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #9
  %55 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i64 51) #9
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %55, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %44, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  %74 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kAriaHiddenAttrE, align 8
  %75 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %55, %"class.blink::QualifiedName"* dereferenceable(8) %74, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #9
  %76 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #9
  br label %92

92:                                               ; preds = %73, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  %93 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kCheckboxE, align 8
  call void @_ZN5blink16HTMLInputElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"* %53, %"class.WTF::AtomicString"* dereferenceable(8) %93) #9
  %94 = call fastcc dereferenceable(8) %"class.blink::QualifiedName"* @_ZN5blink12_GLOBAL__N_118TrackIndexAttrNameEv()
  call void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"* %55, %"class.blink::QualifiedName"* dereferenceable(8) %94, i32 %20) #9
  %95 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.blink::MediaControlElementBase.base"* %95 to %"class.blink::MediaControlElementBase"*
  %97 = call dereferenceable(1528) %"class.blink::HTMLMediaElement"* @_ZNK5blink23MediaControlElementBase12MediaElementEv(%"class.blink::MediaControlElementBase"* %96) #9
  %98 = call zeroext i1 @_ZNK5blink16HTMLMediaElement17TextTracksVisibleEv(%"class.blink::HTMLMediaElement"* %97) #9
  br i1 %98, label %119, label %99

99:                                               ; preds = %92
  br i1 %16, label %200, label %100

100:                                              ; preds = %99
  call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %53, i1 zeroext true, i32 0) #9
  %101 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCheckedAttrE, align 8
  %102 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %101, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #9
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %198, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %198

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #9
  br label %198

119:                                              ; preds = %92
  br i1 %16, label %120, label %179

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %141, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %141

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = zext i32 %131 to i33
  %133 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #9
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !2

138:                                              ; preds = %129
  call void @llvm.trap() #9
  unreachable

139:                                              ; preds = %129
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %130, align 4
  br label %141

141:                                              ; preds = %139, %124, %120
  %142 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9TextTrack14ShowingKeywordEv() #9
  %143 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %122, %144
  br i1 %123, label %159, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #9
  br i1 %145, label %160, label %179

159:                                              ; preds = %155, %141
  br i1 %145, label %160, label %179

160:                                              ; preds = %158, %159
  call void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"* %53, i1 zeroext true, i32 0) #9
  %161 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCheckedAttrE, align 8
  %162 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %161, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #9
  %163 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %198, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %198

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #9
  br label %198

179:                                              ; preds = %119, %158, %159
  %180 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kAriaCheckedAttrE, align 8
  %181 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %180, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %182 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #9
  br label %198

198:                                              ; preds = %197, %194, %179, %178, %175, %160, %118, %115, %100
  %199 = phi i8* [ %102, %100 ], [ %102, %115 ], [ %102, %118 ], [ %162, %160 ], [ %162, %175 ], [ %162, %178 ], [ %181, %179 ], [ %181, %194 ], [ %181, %197 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #9
  br label %200

200:                                              ; preds = %198, %99
  call void @_ZN5blink7Element11setTabIndexEi(%"class.blink::Element"* %26, i32 0) #9
  call void @_ZN5blink7Element11setTabIndexEi(%"class.blink::Element"* %55, i32 -1) #9
  %201 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #9
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %202, align 8
  %203 = call dereferenceable(848) %"class.blink::MediaControlsImpl"* @_ZNK5blink23MediaControlElementBase16GetMediaControlsEv(%"class.blink::MediaControlElementBase"* %96) #9
  %204 = call dereferenceable(16) %"class.blink::MediaControlsTextTrackManager"* @_ZN5blink17MediaControlsImpl19GetTextTrackManagerEv(%"class.blink::MediaControlsImpl"* %203) #9
  %205 = call %"class.WTF::StringImpl"* @_ZNK5blink29MediaControlsTextTrackManager17GetTextTrackLabelEPNS_9TextTrackE(%"class.blink::MediaControlsTextTrackManager"* %204, %"class.blink::TextTrack"* %1) #9
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %202, align 8
  %206 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %207 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %206, i64 0, i32 2, i32 0, i32 0
  %208 = load %"class.blink::Document"*, %"class.blink::Document"** %207, align 8
  %209 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %208) #9
  %210 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %209, i64 0, i32 0
  %211 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %211) #9
  %212 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %213, align 8
  %214 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %214, align 2
  %215 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %216 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %217 = bitcast %"class.WTF::StringImpl"** %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 16, i1 false) #9
  %218 = bitcast i8** %215 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 36, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %219 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  call void @_ZN5blink11HTMLElement12setInnerTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"* %210, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %219) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %220 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 4
  %221 = load i32, i32* %220, align 8
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %224, label %223

223:                                              ; preds = %200
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %219) #9
  br label %224

224:                                              ; preds = %200, %223
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %225 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %226 = load i64*, i64** %225, align 8
  %227 = icmp eq i64* %226, null
  br i1 %227, label %238, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 3
  %230 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %229, align 8
  %231 = bitcast %"class.v8::Isolate"* %230 to %"class.v8::internal::Isolate"*
  %232 = load i64, i64* %226, align 8
  %233 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %231, i64 %232) #9
  %234 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %230) #9
  br i1 %234, label %238, label %235

235:                                              ; preds = %228
  %236 = bitcast i64* %233 to %"class.v8::Value"*
  %237 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %230, %"class.v8::Value"* %236) #9
  br label %238

238:                                              ; preds = %235, %228, %224
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #9
  br label %254

254:                                              ; preds = %238, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %211) #9
  %255 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %209, i64 0, i32 0, i32 0
  %256 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %255, %"class.blink::QualifiedName"* dereferenceable(8) %74, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12) #9
  %257 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #9
  br label %273

273:                                              ; preds = %254, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #9
  %274 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %275 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #9
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %301, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 acquire, align 4
  %281 = and i32 %280, 4
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %299, label %283

283:                                              ; preds = %278
  %284 = load atomic i32, i32* %279 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %301

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = zext i32 %289 to i33
  %291 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %290, i33 1) #9
  %292 = extractvalue { i33, i1 } %291, 1
  %293 = extractvalue { i33, i1 } %291, 0
  %294 = icmp slt i33 %293, 0
  %295 = or i1 %292, %294
  br i1 %295, label %296, label %297, !prof !2

296:                                              ; preds = %287
  call void @llvm.trap() #9
  unreachable

297:                                              ; preds = %287
  %298 = trunc i33 %293 to i32
  store i32 %298, i32* %288, align 4
  br label %301

299:                                              ; preds = %278
  %300 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %276) #9
  br label %301

301:                                              ; preds = %273, %283, %297, %299
  %302 = phi %"class.WTF::StringImpl"* [ %300, %299 ], [ %276, %283 ], [ %276, %297 ], [ null, %273 ]
  %303 = ptrtoint %"class.WTF::StringImpl"* %302 to i64
  %304 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  store i64 %303, i64* %304, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %26, %"class.blink::QualifiedName"* dereferenceable(8) %274, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #9
  %305 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %321, label %308

308:                                              ; preds = %301
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %306) #9
  br label %321

321:                                              ; preds = %301, %317, %320
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #9
  %322 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %25, i64 0, i32 0, i32 0, i32 0
  %323 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %322, %"class.blink::Node"* %323) #9
  %324 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %322, %"class.blink::Node"* %324) #9
  br i1 %16, label %325, label %527

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %328 = icmp eq %"class.WTF::StringImpl"* %327, null
  br i1 %328, label %476, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load atomic i32, i32* %330 monotonic, align 4
  %332 = and i32 %331, 2
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %346

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = zext i32 %336 to i33
  %338 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %337, i33 1) #9
  %339 = extractvalue { i33, i1 } %338, 1
  %340 = extractvalue { i33, i1 } %338, 0
  %341 = icmp slt i33 %340, 0
  %342 = or i1 %339, %341
  br i1 %342, label %343, label %344, !prof !2

343:                                              ; preds = %334
  call void @llvm.trap() #9
  unreachable

344:                                              ; preds = %334
  %345 = trunc i33 %340 to i32
  store i32 %345, i32* %335, align 4
  br label %346

346:                                              ; preds = %344, %329
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %462, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1, i64 0, i32 5, i32 0, i32 0
  %352 = load %"class.blink::TextTrackList"*, %"class.blink::TextTrackList"** %351, align 8
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %399, label %355

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %372

362:                                              ; preds = %355
  %363 = zext i32 %361 to i33
  %364 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %363, i33 1) #9
  %365 = extractvalue { i33, i1 } %364, 1
  %366 = extractvalue { i33, i1 } %364, 0
  %367 = icmp slt i33 %366, 0
  %368 = or i1 %365, %367
  br i1 %368, label %369, label %370, !prof !2

369:                                              ; preds = %362
  call void @llvm.trap() #9
  unreachable

370:                                              ; preds = %362
  %371 = trunc i33 %366 to i32
  store i32 %371, i32* %360, align 4
  br label %372

372:                                              ; preds = %355, %370
  %373 = phi i32 [ %371, %370 ], [ %361, %355 ]
  %374 = load atomic i32, i32* %356 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  br i1 %376, label %378, label %388

378:                                              ; preds = %372
  %379 = zext i32 %373 to i33
  %380 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %379, i33 1) #9
  %381 = extractvalue { i33, i1 } %380, 1
  %382 = extractvalue { i33, i1 } %380, 0
  %383 = icmp slt i33 %382, 0
  %384 = or i1 %381, %383
  br i1 %384, label %385, label %386, !prof !2

385:                                              ; preds = %378
  call void @llvm.trap() #9
  unreachable

386:                                              ; preds = %378
  %387 = trunc i33 %382 to i32
  store i32 %387, i32* %377, align 4
  br label %388

388:                                              ; preds = %386, %372
  %389 = phi i32 [ %387, %386 ], [ %373, %372 ]
  %390 = load atomic i32, i32* %356 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %395

393:                                              ; preds = %388
  %394 = add i32 %389, -1
  store i32 %394, i32* %377, align 4
  br label %395

395:                                              ; preds = %393, %388
  %396 = phi i32 [ %394, %393 ], [ %389, %388 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #9
  br label %399

399:                                              ; preds = %398, %395, %350
  %400 = call i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"* %352) #9
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %447, label %402

402:                                              ; preds = %399, %443
  %403 = phi i32 [ %444, %443 ], [ 0, %399 ]
  %404 = call %"class.blink::TextTrack"* @_ZN5blink13TextTrackList22AnonymousIndexedGetterEj(%"class.blink::TextTrackList"* %352, i32 %403) #9
  %405 = icmp eq %"class.blink::TextTrack"* %404, %1
  br i1 %405, label %443, label %406

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %404, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %427, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %429

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = zext i32 %417 to i33
  %419 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %418, i33 1) #9
  %420 = extractvalue { i33, i1 } %419, 1
  %421 = extractvalue { i33, i1 } %419, 0
  %422 = icmp slt i33 %421, 0
  %423 = or i1 %420, %422
  br i1 %423, label %424, label %425, !prof !2

424:                                              ; preds = %415
  call void @llvm.trap() #9
  unreachable

425:                                              ; preds = %415
  %426 = trunc i33 %421 to i32
  store i32 %426, i32* %416, align 4
  br label %429

427:                                              ; preds = %406
  %428 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"* %353) #9
  br i1 %428, label %447, label %443

429:                                              ; preds = %425, %410
  %430 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %408, %"class.WTF::StringImpl"* %353) #9
  %431 = load atomic i32, i32* %411 monotonic, align 4
  %432 = and i32 %431, 2
  %433 = icmp eq i32 %432, 0
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %435 = load i32, i32* %434, align 4
  br i1 %433, label %436, label %438

436:                                              ; preds = %429
  %437 = add i32 %435, -1
  store i32 %437, i32* %434, align 4
  br label %438

438:                                              ; preds = %436, %429
  %439 = phi i32 [ %437, %436 ], [ %435, %429 ]
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %438
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #9
  br i1 %430, label %447, label %443

442:                                              ; preds = %438
  br i1 %430, label %447, label %443

443:                                              ; preds = %442, %441, %427, %402
  %444 = add nuw i32 %403, 1
  %445 = call i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"* %352) #9
  %446 = icmp ult i32 %444, %445
  br i1 %446, label %402, label %447

447:                                              ; preds = %443, %442, %441, %427, %399
  %448 = phi i1 [ false, %399 ], [ false, %443 ], [ true, %442 ], [ true, %427 ], [ true, %441 ]
  br i1 %354, label %462, label %449

449:                                              ; preds = %447
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %455 = load i32, i32* %454, align 4
  br i1 %453, label %456, label %458

456:                                              ; preds = %449
  %457 = add i32 %455, -1
  store i32 %457, i32* %454, align 4
  br label %458

458:                                              ; preds = %456, %449
  %459 = phi i32 [ %457, %456 ], [ %455, %449 ]
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #9
  br label %462

462:                                              ; preds = %461, %458, %447, %346
  %463 = phi i1 [ true, %346 ], [ %448, %447 ], [ %448, %458 ], [ %448, %461 ]
  %464 = load atomic i32, i32* %330 monotonic, align 4
  %465 = and i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %327, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  br i1 %466, label %469, label %471

469:                                              ; preds = %462
  %470 = add i32 %468, -1
  store i32 %470, i32* %467, align 4
  br label %471

471:                                              ; preds = %469, %462
  %472 = phi i32 [ %470, %469 ], [ %468, %462 ]
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %475

474:                                              ; preds = %471
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %327) #9
  br i1 %463, label %476, label %527

475:                                              ; preds = %471
  br i1 %463, label %476, label %527

476:                                              ; preds = %325, %474, %475
  %477 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %478 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %477, i64 0, i32 2, i32 0, i32 0
  %479 = load %"class.blink::Document"*, %"class.blink::Document"** %478, align 8
  %480 = call %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %479) #9
  %481 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9TextTrack15CaptionsKeywordEv() #9
  %482 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %483 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %484 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %481, i64 0, i32 0, i32 0, i32 0
  %485 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %484, align 8
  %486 = icmp eq %"class.WTF::StringImpl"* %483, %485
  %487 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %480, i64 0, i32 0, i32 0
  br i1 %486, label %488, label %506

488:                                              ; preds = %476
  %489 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %489) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %14, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i64 54) #9
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %487, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14) #9
  %490 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %490, align 8
  %492 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %492, label %524, label %493

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 0
  %499 = load i32, i32* %498, align 4
  br i1 %497, label %500, label %502

500:                                              ; preds = %493
  %501 = add i32 %499, -1
  store i32 %501, i32* %498, align 4
  br label %502

502:                                              ; preds = %500, %493
  %503 = phi i32 [ %501, %500 ], [ %499, %493 ]
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %524

505:                                              ; preds = %502
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %491) #9
  br label %524

506:                                              ; preds = %476
  %507 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %507) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %15, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7, i64 0, i64 0), i64 55) #9
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %487, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %15) #9
  %508 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %509 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %508, align 8
  %510 = icmp eq %"class.WTF::StringImpl"* %509, null
  br i1 %510, label %524, label %511

511:                                              ; preds = %506
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %509, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %513 = load atomic i32, i32* %512 monotonic, align 4
  %514 = and i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %509, i64 0, i32 0
  %517 = load i32, i32* %516, align 4
  br i1 %515, label %518, label %520

518:                                              ; preds = %511
  %519 = add i32 %517, -1
  store i32 %519, i32* %516, align 4
  br label %520

520:                                              ; preds = %518, %511
  %521 = phi i32 [ %519, %518 ], [ %517, %511 ]
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %524

523:                                              ; preds = %520
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %509) #9
  br label %524

524:                                              ; preds = %523, %520, %506, %505, %502, %488
  %525 = phi i8* [ %489, %488 ], [ %489, %502 ], [ %489, %505 ], [ %507, %506 ], [ %507, %520 ], [ %507, %523 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %525) #9
  %526 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %480, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %322, %"class.blink::Node"* %526) #9
  br label %527

527:                                              ; preds = %321, %474, %524, %475
  %528 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %529 = icmp eq %"class.WTF::StringImpl"* %528, null
  br i1 %529, label %543, label %530

530:                                              ; preds = %527
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 0
  %536 = load i32, i32* %535, align 4
  br i1 %534, label %537, label %539

537:                                              ; preds = %530
  %538 = add i32 %536, -1
  store i32 %538, i32* %535, align 4
  br label %539

539:                                              ; preds = %537, %530
  %540 = phi i32 [ %538, %537 ], [ %536, %530 ]
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %528) #9
  br label %543

543:                                              ; preds = %527, %539, %542
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #9
  ret %"class.blink::Element"* %26
}

declare i32 @_ZN5blink9TextTrack10TrackIndexEv(%"class.blink::TextTrack"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLInputElement7setTypeERKN3WTF12AtomicStringE(%"class.blink::HTMLInputElement"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element20SetIntegralAttributeERKNS_13QualifiedNameEi(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLMediaElement17TextTracksVisibleEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare void @_ZN5blink16HTMLInputElement10setCheckedEbNS_22TextFieldEventBehaviorE(%"class.blink::HTMLInputElement"*, i1 zeroext, i32) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9TextTrack14ShowingKeywordEv() local_unnamed_addr #1

declare void @_ZN5blink7Element11setTabIndexEi(%"class.blink::Element"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink29MediaControlsTextTrackManager17GetTextTrackLabelEPNS_9TextTrackE(%"class.blink::MediaControlsTextTrackManager"*, %"class.blink::TextTrack"*) local_unnamed_addr #1

declare void @_ZN5blink11HTMLElement12setInnerTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink9TextTrack15CaptionsKeywordEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink32MediaControlTextTrackListElement25CreateTextTrackHeaderItemEv(%"class.blink::MediaControlTextTrackListElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = tail call %"class.blink::HTMLLabelElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %9) #9
  %11 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0), i64 47) #9
  call void @_ZN5blink7Element17SetShadowPseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %11, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %2) #9
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #9
  br label %29

29:                                               ; preds = %1, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %30 = getelementptr inbounds %"class.blink::HTMLLabelElement", %"class.blink::HTMLLabelElement"* %10, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %35) #9
  %37 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %36, i32 25056) #9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = call %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848) %33, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %40 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %39, i64 0, i32 0, i32 0
  call void @_ZN5blink13ContainerNode17ParserAppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %30, %"class.blink::Node"* %40) #9
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %29
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #9
  br label %56

56:                                               ; preds = %29, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %57 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kRoleAttrE, align 8
  %58 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 6) #9
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %11, %"class.blink::QualifiedName"* dereferenceable(8) %57, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #9
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #9
  br label %75

75:                                               ; preds = %56, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #9
  %76 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAriaLabelAttrE, align 8
  %77 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  %78 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* %35) #9
  %79 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %78, i32 24996) #9
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %104, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 acquire, align 4
  %84 = and i32 %83, 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %102, label %86

86:                                               ; preds = %81
  %87 = load atomic i32, i32* %82 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %104

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #9
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  call void @llvm.trap() #9
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %104

102:                                              ; preds = %81
  %103 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %79) #9
  br label %104

104:                                              ; preds = %75, %86, %100, %102
  %105 = phi %"class.WTF::StringImpl"* [ %103, %102 ], [ %79, %86 ], [ %79, %100 ], [ null, %75 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %105 to i64
  %107 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %106, i64* %107, align 8
  call void @_ZN5blink7Element12setAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::Element"* %11, %"class.blink::QualifiedName"* dereferenceable(8) %76, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #9
  %108 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %104, %120, %123
  br i1 %80, label %138, label %125

125:                                              ; preds = %124
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #9
  br label %138

138:                                              ; preds = %124, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #9
  call void @_ZN5blink7Element11setTabIndexEi(%"class.blink::Element"* %11, i32 0) #9
  ret %"class.blink::Element"* %11
}

declare %"class.blink::Text"* @_ZN5blink4Text6CreateERNS_8DocumentERKN3WTF6StringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLMediaElement17HasClosedCaptionsEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16HTMLMediaElement18TextTracksAreReadyEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare void @_ZN5blink13ContainerNode14RemoveChildrenENS_25SubtreeModificationActionE(%"class.blink::ContainerNode"*, i32) local_unnamed_addr #1

declare %"class.blink::TextTrackList"* @_ZN5blink16HTMLMediaElement10textTracksEv(%"class.blink::HTMLMediaElement"*) local_unnamed_addr #1

declare i32 @_ZNK5blink13TextTrackList6lengthEv(%"class.blink::TextTrackList"*) local_unnamed_addr #1

declare %"class.blink::TextTrack"* @_ZN5blink13TextTrackList22AnonymousIndexedGetterEj(%"class.blink::TextTrackList"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9TextTrack13CanBeRenderedEv(%"class.blink::TextTrack"*) local_unnamed_addr #1

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink28MediaControlPopupMenuElementD2Ev(%"class.blink::MediaControlPopupMenuElement"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32MediaControlTextTrackListElementD0Ev(%"class.blink::MediaControlTextTrackListElement"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaControlTextTrackListElement", %"class.blink::MediaControlTextTrackListElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink28MediaControlPopupMenuElementD2Ev(%"class.blink::MediaControlPopupMenuElement"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #9
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink28MediaControlPopupMenuElement5TraceEPNS_7VisitorE(%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14HTMLDivElement18GetWrapperTypeInfoEv(%"class.blink::HTMLDivElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14HTMLDivElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink28MediaControlPopupMenuElement15KeepEventInNodeERKNS_5EventE(%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement8nodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

declare zeroext i1 @_ZNK5blink22MediaControlDivElement21IsMediaControlElementEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink7Element16DetachLayoutTreeEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare i32 @_ZN5blink11HTMLElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::HTMLElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink28MediaControlPopupMenuElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::HTMLElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement13DebugNodeNameEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #9
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink11HTMLElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::HTMLElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.905"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink11HTMLElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::HTMLElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink14HTMLDivElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::HTMLDivElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink11HTMLElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink11HTMLElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::HTMLElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::HTMLElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink28MediaControlPopupMenuElement13SupportsFocusEv(%"class.blink::MediaControlPopupMenuElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink28MediaControlPopupMenuElement16IsMouseFocusableEv(%"class.blink::MediaControlPopupMenuElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement5titleEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement21FinishParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare void @_ZN5blink11HTMLElement20BeginParsingChildrenEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement25MatchesEnabledPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement26MatchesReadOnlyPseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement27MatchesReadWritePseudoClassEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement28MatchesValidityPseudoClassesEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement12willValidateEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink11HTMLElement14IsValidElementEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement21IsDisabledFormControlEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink7Element15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink11HTMLElement22setInnerTextForBindingEPKNS_50V8UnionStringTreatNullAsEmptyStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::HTMLElement"*, %"class.blink::V8UnionStringTreatNullAsEmptyStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement19HasCustomFocusLogicEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink11HTMLElement14autocapitalizeEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement9draggableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement9formOwnerEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement17IsHTMLBodyElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement24IsHTMLFencedFrameElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement21IsHTMLFrameSetElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement19IsHTMLPortalElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement20IsHTMLUnknownElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11HTMLElement15IsPluginElementEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink11HTMLElement11IsLabelableEv(%"class.blink::HTMLElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11HTMLElement20IsInteractiveContentEv(%"class.blink::HTMLElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink11HTMLElement7AltTextEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormAssociated"* @_ZN5blink11HTMLElement22ToFormAssociatedOrNullEv(%"class.blink::HTMLElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::FormAssociated"* null
}

declare void @_ZN5blink22MediaControlDivElement26SetOverflowElementIsWantedEb(%"class.blink::MediaControlDivElement"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink22MediaControlDivElement20MaybeRecordDisplayedEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #1

declare i64 @_ZNK5blink22MediaControlDivElement16GetSizeOrDefaultEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink22MediaControlDivElement10IsDisabledEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #1

declare void @_ZN5blink28MediaControlPopupMenuElement14OnItemSelectedEv(%"class.blink::MediaControlPopupMenuElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_NK5blink28MediaControlPopupMenuElement5TraceEPNS_7VisitorE(%"class.blink::MediaControlPopupMenuElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22MediaControlDivElement26SetOverflowElementIsWantedEb(%"class.blink::MediaControlDivElement"*, i1 zeroext) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink22MediaControlDivElement20MaybeRecordDisplayedEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #0 align 2

declare zeroext i1 @_ZNK5blink23MediaControlElementBase17HasOverflowButtonEv(%"class.blink::MediaControlElementBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare i64 @_ZThn104_NK5blink22MediaControlDivElement16GetSizeOrDefaultEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn104_NK5blink22MediaControlDivElement10IsDisabledEv(%"class.blink::MediaControlDivElement"*) unnamed_addr #0 align 2

declare void @_ZN5blink23MediaControlElementBase16UpdateShownStateEv(%"class.blink::MediaControlElementBase"*) unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLLabelElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLLabelElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 120
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 120
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -120
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 60, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 120, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLLabelElement"*
  tail call void @_ZN5blink16HTMLLabelElementC1ERNS_8DocumentE(%"class.blink::HTMLLabelElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLLabelElement"* %51
}

declare void @_ZN5blink16HTMLLabelElementC1ERNS_8DocumentE(%"class.blink::HTMLLabelElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLInputElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_16HTMLInputElementEE4CallIJRNS_8DocumentENS_18CreateElementFlagsEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %4 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %8 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %7, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %4, %2 ], [ %8, %6 ]
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %3, i64 0, i32 19, i64 6
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 328
  br i1 %16, label %47, label %17, !prof !2

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 328
  store i8* %20, i8** %18, align 8
  %21 = add i64 %15, -328
  store i64 %21, i64* %14, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %19, i64 4
  %24 = bitcast i8* %23 to i16*
  %25 = trunc i32 %10 to i16
  %26 = shl i16 %25, 2
  store atomic i16 %26, i16* %24 monotonic, align 2
  %27 = getelementptr inbounds i8, i8* %19, i64 6
  %28 = bitcast i8* %27 to i16*
  store i16 164, i16* %28, align 2
  %29 = ptrtoint i8* %19 to i64
  %30 = and i64 %29, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4400
  %33 = bitcast i8* %32 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %34 = bitcast i8* %32 to i64*
  %35 = load i64, i64* %34, align 16
  %36 = sub i64 %29, %35
  %37 = lshr i64 %36, 3
  %38 = lshr i64 %36, 6
  %39 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %33, i64 0, i32 0, i32 1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = trunc i64 %37 to i32
  %42 = and i32 %41, 7
  %43 = shl i32 1, %42
  %44 = trunc i32 %43 to i8
  %45 = or i8 %40, %44
  store atomic i8 %45, i8* %39 release, align 1
  %46 = getelementptr inbounds i8, i8* %19, i64 8
  br label %50

47:                                               ; preds = %9
  %48 = zext i32 %10 to i64
  %49 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 328, i64 %48) #9
  br label %50

50:                                               ; preds = %17, %47
  %51 = phi i8* [ %46, %17 ], [ %49, %47 ]
  %52 = bitcast i8* %51 to %"class.blink::HTMLInputElement"*
  tail call void @_ZN5blink16HTMLInputElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLInputElement"* %52, %"class.blink::Document"* dereferenceable(2848) %0, %"class.blink::CreateElementFlags"* nonnull byval(%"class.blink::CreateElementFlags") align 8 %1) #9
  %53 = getelementptr inbounds i8, i8* %51, i64 -4
  %54 = bitcast i8* %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = or i16 %55, 1
  store atomic i16 %56, i16* %54 release, align 2
  ret %"class.blink::HTMLInputElement"* %52
}

declare void @_ZN5blink16HTMLInputElementC1ERNS_8DocumentENS_18CreateElementFlagsE(%"class.blink::HTMLInputElement"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::CreateElementFlags"* byval(%"class.blink::CreateElementFlags") align 8) unnamed_addr #1

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLSpanElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_15HTMLSpanElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #9
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLSpanElement"*
  tail call void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #9
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLSpanElement"* %51
}

declare void @_ZN5blink15HTMLSpanElementC1ERNS_8DocumentE(%"class.blink::HTMLSpanElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC1EPKhj(%"class.WTF::AtomicString"*, i8*, i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
