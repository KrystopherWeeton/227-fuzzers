; ModuleID = '../../third_party/opus/src/celt/entenc.c'
source_filename = "../../third_party/opus/src/celt/entenc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ec_ctx = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [24 x i8] c"assertion failed: _ft>1\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"../../third_party/opus/src/celt/entenc.c\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"assertion failed: _bits>0\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"assertion failed: _nbits<=EC_SYM_BITS\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"assertion failed: _this->offs+_this->end_offs<=_size\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ec_enc_init(%struct.ec_ctx* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %6 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 33>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %8 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  store i32 -1, i32* %8, align 4
  %9 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2147483648, i32 0, i32 0>, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  store i32 0, i32* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ec_encode(%struct.ec_ctx* nocapture, i32, i32, i32) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = udiv i32 %6, %3
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = sub i32 %3, %1
  %11 = mul i32 %7, %10
  %12 = sub i32 %6, %11
  %13 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %12, %14
  store i32 %15, i32* %13, align 4
  %16 = sub i32 %2, %1
  %17 = mul i32 %7, %16
  br label %22

18:                                               ; preds = %4
  %19 = sub i32 %3, %2
  %20 = mul i32 %7, %19
  %21 = sub i32 %6, %20
  br label %22

22:                                               ; preds = %18, %9
  %23 = phi i32 [ %21, %18 ], [ %17, %9 ]
  store i32 %23, i32* %5, align 8
  %24 = icmp ult i32 %23, 8388609
  br i1 %24, label %25, label %104

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %27 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %28 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %29 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %30 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %31 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %32 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %33 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %34 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %35 = load i32, i32* %26, align 4
  br label %36

36:                                               ; preds = %95, %25
  %37 = phi i32 [ %23, %25 ], [ %100, %95 ]
  %38 = phi i32 [ %35, %25 ], [ %99, %95 ]
  %39 = lshr i32 %38, 23
  %40 = icmp eq i32 %39, 255
  br i1 %40, label %92, label %41

41:                                               ; preds = %36
  %42 = lshr i32 %38, 31
  %43 = load i32, i32* %27, align 4
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %62

45:                                               ; preds = %41
  %46 = load i32, i32* %28, align 4
  %47 = load i32, i32* %29, align 4
  %48 = add i32 %47, %46
  %49 = load i32, i32* %30, align 8
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %58

51:                                               ; preds = %45
  %52 = add nuw nsw i32 %43, %42
  %53 = trunc i32 %52 to i8
  %54 = load i8*, i8** %31, align 8
  %55 = add i32 %46, 1
  store i32 %55, i32* %28, align 4
  %56 = zext i32 %46 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  store i8 %53, i8* %57, align 1
  br label %58

58:                                               ; preds = %51, %45
  %59 = phi i32 [ 0, %51 ], [ -1, %45 ]
  %60 = load i32, i32* %32, align 8
  %61 = or i32 %60, %59
  store i32 %61, i32* %32, align 8
  br label %62

62:                                               ; preds = %58, %41
  %63 = load i32, i32* %33, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %88, label %65

65:                                               ; preds = %62
  %66 = trunc i32 %42 to i8
  %67 = add nsw i8 %66, -1
  br label %68

68:                                               ; preds = %81, %65
  %69 = phi i32 [ %63, %65 ], [ %86, %81 ]
  %70 = load i32, i32* %28, align 4
  %71 = load i32, i32* %29, align 4
  %72 = add i32 %71, %70
  %73 = load i32, i32* %30, align 8
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %68
  %76 = load i8*, i8** %31, align 8
  %77 = add i32 %70, 1
  store i32 %77, i32* %28, align 4
  %78 = zext i32 %70 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  store i8 %67, i8* %79, align 1
  %80 = load i32, i32* %33, align 8
  br label %81

81:                                               ; preds = %75, %68
  %82 = phi i32 [ %80, %75 ], [ %69, %68 ]
  %83 = phi i32 [ 0, %75 ], [ -1, %68 ]
  %84 = load i32, i32* %32, align 8
  %85 = or i32 %84, %83
  store i32 %85, i32* %32, align 8
  %86 = add i32 %82, -1
  store i32 %86, i32* %33, align 8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %68

88:                                               ; preds = %81, %62
  %89 = and i32 %39, 255
  store i32 %89, i32* %27, align 4
  %90 = load i32, i32* %26, align 4
  %91 = load i32, i32* %5, align 8
  br label %95

92:                                               ; preds = %36
  %93 = load i32, i32* %33, align 8
  %94 = add i32 %93, 1
  store i32 %94, i32* %33, align 8
  br label %95

95:                                               ; preds = %92, %88
  %96 = phi i32 [ %91, %88 ], [ %37, %92 ]
  %97 = phi i32 [ %90, %88 ], [ %38, %92 ]
  %98 = shl i32 %97, 8
  %99 = and i32 %98, 2147483392
  store i32 %99, i32* %26, align 4
  %100 = shl i32 %96, 8
  store i32 %100, i32* %5, align 8
  %101 = load i32, i32* %34, align 8
  %102 = add nsw i32 %101, 8
  store i32 %102, i32* %34, align 8
  %103 = icmp ult i32 %100, 8388609
  br i1 %103, label %36, label %104

104:                                              ; preds = %95, %22
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ec_encode_bin(%struct.ec_ctx* nocapture, i32, i32, i32) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = lshr i32 %6, %3
  %8 = icmp eq i32 %1, 0
  %9 = shl i32 1, %3
  br i1 %8, label %19, label %10

10:                                               ; preds = %4
  %11 = sub i32 %9, %1
  %12 = mul i32 %7, %11
  %13 = sub i32 %6, %12
  %14 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %13, %15
  store i32 %16, i32* %14, align 4
  %17 = sub i32 %2, %1
  %18 = mul i32 %7, %17
  br label %23

19:                                               ; preds = %4
  %20 = sub i32 %9, %2
  %21 = mul i32 %7, %20
  %22 = sub i32 %6, %21
  br label %23

23:                                               ; preds = %19, %10
  %24 = phi i32 [ %22, %19 ], [ %18, %10 ]
  store i32 %24, i32* %5, align 8
  %25 = icmp ult i32 %24, 8388609
  br i1 %25, label %26, label %105

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %28 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %29 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %30 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %31 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %32 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %33 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %34 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %35 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %36 = load i32, i32* %27, align 4
  br label %37

37:                                               ; preds = %96, %26
  %38 = phi i32 [ %24, %26 ], [ %101, %96 ]
  %39 = phi i32 [ %36, %26 ], [ %100, %96 ]
  %40 = lshr i32 %39, 23
  %41 = icmp eq i32 %40, 255
  br i1 %41, label %93, label %42

42:                                               ; preds = %37
  %43 = lshr i32 %39, 31
  %44 = load i32, i32* %28, align 4
  %45 = icmp sgt i32 %44, -1
  br i1 %45, label %46, label %63

46:                                               ; preds = %42
  %47 = load i32, i32* %29, align 4
  %48 = load i32, i32* %30, align 4
  %49 = add i32 %48, %47
  %50 = load i32, i32* %31, align 8
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = add nuw nsw i32 %44, %43
  %54 = trunc i32 %53 to i8
  %55 = load i8*, i8** %32, align 8
  %56 = add i32 %47, 1
  store i32 %56, i32* %29, align 4
  %57 = zext i32 %47 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  store i8 %54, i8* %58, align 1
  br label %59

59:                                               ; preds = %52, %46
  %60 = phi i32 [ 0, %52 ], [ -1, %46 ]
  %61 = load i32, i32* %33, align 8
  %62 = or i32 %61, %60
  store i32 %62, i32* %33, align 8
  br label %63

63:                                               ; preds = %59, %42
  %64 = load i32, i32* %34, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %89, label %66

66:                                               ; preds = %63
  %67 = trunc i32 %43 to i8
  %68 = add nsw i8 %67, -1
  br label %69

69:                                               ; preds = %82, %66
  %70 = phi i32 [ %64, %66 ], [ %87, %82 ]
  %71 = load i32, i32* %29, align 4
  %72 = load i32, i32* %30, align 4
  %73 = add i32 %72, %71
  %74 = load i32, i32* %31, align 8
  %75 = icmp ult i32 %73, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = load i8*, i8** %32, align 8
  %78 = add i32 %71, 1
  store i32 %78, i32* %29, align 4
  %79 = zext i32 %71 to i64
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  store i8 %68, i8* %80, align 1
  %81 = load i32, i32* %34, align 8
  br label %82

82:                                               ; preds = %76, %69
  %83 = phi i32 [ %81, %76 ], [ %70, %69 ]
  %84 = phi i32 [ 0, %76 ], [ -1, %69 ]
  %85 = load i32, i32* %33, align 8
  %86 = or i32 %85, %84
  store i32 %86, i32* %33, align 8
  %87 = add i32 %83, -1
  store i32 %87, i32* %34, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %69

89:                                               ; preds = %82, %63
  %90 = and i32 %40, 255
  store i32 %90, i32* %28, align 4
  %91 = load i32, i32* %27, align 4
  %92 = load i32, i32* %5, align 8
  br label %96

93:                                               ; preds = %37
  %94 = load i32, i32* %34, align 8
  %95 = add i32 %94, 1
  store i32 %95, i32* %34, align 8
  br label %96

96:                                               ; preds = %93, %89
  %97 = phi i32 [ %92, %89 ], [ %38, %93 ]
  %98 = phi i32 [ %91, %89 ], [ %39, %93 ]
  %99 = shl i32 %98, 8
  %100 = and i32 %99, 2147483392
  store i32 %100, i32* %27, align 4
  %101 = shl i32 %97, 8
  store i32 %101, i32* %5, align 8
  %102 = load i32, i32* %35, align 8
  %103 = add nsw i32 %102, 8
  store i32 %103, i32* %35, align 8
  %104 = icmp ult i32 %101, 8388609
  br i1 %104, label %37, label %105

105:                                              ; preds = %96, %23
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ec_enc_bit_logp(%struct.ec_ctx* nocapture, i32, i32) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %7 = lshr i32 %5, %2
  %8 = sub i32 %5, %7
  %9 = icmp ne i32 %1, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = load i32, i32* %6, align 4
  %12 = add i32 %11, %8
  store i32 %12, i32* %6, align 4
  br label %13

13:                                               ; preds = %10, %3
  %14 = select i1 %9, i32 %7, i32 %8
  store i32 %14, i32* %4, align 8
  %15 = icmp ult i32 %14, 8388609
  br i1 %15, label %16, label %94

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %18 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %19 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %20 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %21 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %22 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %23 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %24 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %25 = load i32, i32* %6, align 4
  br label %26

26:                                               ; preds = %85, %16
  %27 = phi i32 [ %14, %16 ], [ %90, %85 ]
  %28 = phi i32 [ %25, %16 ], [ %89, %85 ]
  %29 = lshr i32 %28, 23
  %30 = icmp eq i32 %29, 255
  br i1 %30, label %82, label %31

31:                                               ; preds = %26
  %32 = lshr i32 %28, 31
  %33 = load i32, i32* %17, align 4
  %34 = icmp sgt i32 %33, -1
  br i1 %34, label %35, label %52

35:                                               ; preds = %31
  %36 = load i32, i32* %18, align 4
  %37 = load i32, i32* %19, align 4
  %38 = add i32 %37, %36
  %39 = load i32, i32* %20, align 8
  %40 = icmp ult i32 %38, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %35
  %42 = add nuw nsw i32 %33, %32
  %43 = trunc i32 %42 to i8
  %44 = load i8*, i8** %21, align 8
  %45 = add i32 %36, 1
  store i32 %45, i32* %18, align 4
  %46 = zext i32 %36 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  store i8 %43, i8* %47, align 1
  br label %48

48:                                               ; preds = %41, %35
  %49 = phi i32 [ 0, %41 ], [ -1, %35 ]
  %50 = load i32, i32* %22, align 8
  %51 = or i32 %50, %49
  store i32 %51, i32* %22, align 8
  br label %52

52:                                               ; preds = %48, %31
  %53 = load i32, i32* %23, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %78, label %55

55:                                               ; preds = %52
  %56 = trunc i32 %32 to i8
  %57 = add nsw i8 %56, -1
  br label %58

58:                                               ; preds = %71, %55
  %59 = phi i32 [ %53, %55 ], [ %76, %71 ]
  %60 = load i32, i32* %18, align 4
  %61 = load i32, i32* %19, align 4
  %62 = add i32 %61, %60
  %63 = load i32, i32* %20, align 8
  %64 = icmp ult i32 %62, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = load i8*, i8** %21, align 8
  %67 = add i32 %60, 1
  store i32 %67, i32* %18, align 4
  %68 = zext i32 %60 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  store i8 %57, i8* %69, align 1
  %70 = load i32, i32* %23, align 8
  br label %71

71:                                               ; preds = %65, %58
  %72 = phi i32 [ %70, %65 ], [ %59, %58 ]
  %73 = phi i32 [ 0, %65 ], [ -1, %58 ]
  %74 = load i32, i32* %22, align 8
  %75 = or i32 %74, %73
  store i32 %75, i32* %22, align 8
  %76 = add i32 %72, -1
  store i32 %76, i32* %23, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %58

78:                                               ; preds = %71, %52
  %79 = and i32 %29, 255
  store i32 %79, i32* %17, align 4
  %80 = load i32, i32* %6, align 4
  %81 = load i32, i32* %4, align 8
  br label %85

82:                                               ; preds = %26
  %83 = load i32, i32* %23, align 8
  %84 = add i32 %83, 1
  store i32 %84, i32* %23, align 8
  br label %85

85:                                               ; preds = %82, %78
  %86 = phi i32 [ %81, %78 ], [ %27, %82 ]
  %87 = phi i32 [ %80, %78 ], [ %28, %82 ]
  %88 = shl i32 %87, 8
  %89 = and i32 %88, 2147483392
  store i32 %89, i32* %6, align 4
  %90 = shl i32 %86, 8
  store i32 %90, i32* %4, align 8
  %91 = load i32, i32* %24, align 8
  %92 = add nsw i32 %91, 8
  store i32 %92, i32* %24, align 8
  %93 = icmp ult i32 %90, 8388609
  br i1 %93, label %26, label %94

94:                                               ; preds = %85, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ec_enc_icdf(%struct.ec_ctx* nocapture, i32, i8* nocapture readonly, i32) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 8
  %7 = lshr i32 %6, %3
  %8 = icmp sgt i32 %1, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %4
  %10 = add nsw i32 %1, -1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %2, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = mul i32 %7, %14
  %16 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %6
  %19 = sub i32 %18, %15
  store i32 %19, i32* %16, align 4
  %20 = load i8, i8* %12, align 1
  %21 = zext i8 %20 to i32
  %22 = sext i32 %1 to i64
  %23 = getelementptr inbounds i8, i8* %2, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = sub nsw i32 %21, %25
  %27 = mul i32 %26, %7
  br label %35

28:                                               ; preds = %4
  %29 = sext i32 %1 to i64
  %30 = getelementptr inbounds i8, i8* %2, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = mul i32 %7, %32
  %34 = sub i32 %6, %33
  br label %35

35:                                               ; preds = %28, %9
  %36 = phi i32 [ %34, %28 ], [ %27, %9 ]
  store i32 %36, i32* %5, align 8
  %37 = icmp ult i32 %36, 8388609
  br i1 %37, label %38, label %117

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %40 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %41 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %42 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %43 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %44 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %45 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %46 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %47 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %48 = load i32, i32* %39, align 4
  br label %49

49:                                               ; preds = %108, %38
  %50 = phi i32 [ %36, %38 ], [ %113, %108 ]
  %51 = phi i32 [ %48, %38 ], [ %112, %108 ]
  %52 = lshr i32 %51, 23
  %53 = icmp eq i32 %52, 255
  br i1 %53, label %105, label %54

54:                                               ; preds = %49
  %55 = lshr i32 %51, 31
  %56 = load i32, i32* %40, align 4
  %57 = icmp sgt i32 %56, -1
  br i1 %57, label %58, label %75

58:                                               ; preds = %54
  %59 = load i32, i32* %41, align 4
  %60 = load i32, i32* %42, align 4
  %61 = add i32 %60, %59
  %62 = load i32, i32* %43, align 8
  %63 = icmp ult i32 %61, %62
  br i1 %63, label %64, label %71

64:                                               ; preds = %58
  %65 = add nuw nsw i32 %56, %55
  %66 = trunc i32 %65 to i8
  %67 = load i8*, i8** %44, align 8
  %68 = add i32 %59, 1
  store i32 %68, i32* %41, align 4
  %69 = zext i32 %59 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  store i8 %66, i8* %70, align 1
  br label %71

71:                                               ; preds = %64, %58
  %72 = phi i32 [ 0, %64 ], [ -1, %58 ]
  %73 = load i32, i32* %45, align 8
  %74 = or i32 %73, %72
  store i32 %74, i32* %45, align 8
  br label %75

75:                                               ; preds = %71, %54
  %76 = load i32, i32* %46, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %75
  %79 = trunc i32 %55 to i8
  %80 = add nsw i8 %79, -1
  br label %81

81:                                               ; preds = %94, %78
  %82 = phi i32 [ %76, %78 ], [ %99, %94 ]
  %83 = load i32, i32* %41, align 4
  %84 = load i32, i32* %42, align 4
  %85 = add i32 %84, %83
  %86 = load i32, i32* %43, align 8
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %81
  %89 = load i8*, i8** %44, align 8
  %90 = add i32 %83, 1
  store i32 %90, i32* %41, align 4
  %91 = zext i32 %83 to i64
  %92 = getelementptr inbounds i8, i8* %89, i64 %91
  store i8 %80, i8* %92, align 1
  %93 = load i32, i32* %46, align 8
  br label %94

94:                                               ; preds = %88, %81
  %95 = phi i32 [ %93, %88 ], [ %82, %81 ]
  %96 = phi i32 [ 0, %88 ], [ -1, %81 ]
  %97 = load i32, i32* %45, align 8
  %98 = or i32 %97, %96
  store i32 %98, i32* %45, align 8
  %99 = add i32 %95, -1
  store i32 %99, i32* %46, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %81

101:                                              ; preds = %94, %75
  %102 = and i32 %52, 255
  store i32 %102, i32* %40, align 4
  %103 = load i32, i32* %39, align 4
  %104 = load i32, i32* %5, align 8
  br label %108

105:                                              ; preds = %49
  %106 = load i32, i32* %46, align 8
  %107 = add i32 %106, 1
  store i32 %107, i32* %46, align 8
  br label %108

108:                                              ; preds = %105, %101
  %109 = phi i32 [ %104, %101 ], [ %50, %105 ]
  %110 = phi i32 [ %103, %101 ], [ %51, %105 ]
  %111 = shl i32 %110, 8
  %112 = and i32 %111, 2147483392
  store i32 %112, i32* %39, align 4
  %113 = shl i32 %109, 8
  store i32 %113, i32* %5, align 8
  %114 = load i32, i32* %47, align 8
  %115 = add nsw i32 %114, 8
  store i32 %115, i32* %47, align 8
  %116 = icmp ult i32 %113, 8388609
  br i1 %116, label %49, label %117

117:                                              ; preds = %108, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ec_enc_uint(%struct.ec_ctx* nocapture, i32, i32) local_unnamed_addr #2 {
  %4 = icmp ugt i32 %2, 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @celt_fatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 180) #6
  unreachable

6:                                                ; preds = %3
  %7 = add i32 %2, -1
  %8 = icmp ugt i32 %7, 255
  br i1 %8, label %9, label %67

9:                                                ; preds = %6
  %10 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 true), !range !2
  %11 = sub nsw i32 24, %10
  %12 = lshr i32 %7, %11
  %13 = add nuw i32 %12, 1
  %14 = lshr i32 %1, %11
  %15 = add i32 %14, 1
  tail call void @ec_encode(%struct.ec_ctx* %0, i32 %14, i32 %15, i32 %13)
  %16 = shl nsw i32 -1, %11
  %17 = xor i32 %16, -1
  %18 = and i32 %17, %1
  %19 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %11, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %9
  tail call void @celt_fatal(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 198) #6
  unreachable

25:                                               ; preds = %9
  %26 = add i32 %22, %11
  %27 = icmp ugt i32 %26, 32
  br i1 %27, label %28, label %58

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %30 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %31 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %32 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %33 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  br label %34

34:                                               ; preds = %49, %28
  %35 = phi i32 [ %53, %49 ], [ %20, %28 ]
  %36 = phi i32 [ %54, %49 ], [ %22, %28 ]
  %37 = load i32, i32* %29, align 4
  %38 = load i32, i32* %30, align 4
  %39 = add i32 %38, %37
  %40 = load i32, i32* %31, align 8
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %42, label %49

42:                                               ; preds = %34
  %43 = trunc i32 %35 to i8
  %44 = load i8*, i8** %32, align 8
  %45 = add i32 %38, 1
  store i32 %45, i32* %30, align 4
  %46 = sub i32 %40, %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  store i8 %43, i8* %48, align 1
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i32 [ 0, %42 ], [ -1, %34 ]
  %51 = load i32, i32* %33, align 8
  %52 = or i32 %51, %50
  store i32 %52, i32* %33, align 8
  %53 = lshr i32 %35, 8
  %54 = add nsw i32 %36, -8
  %55 = icmp sgt i32 %54, 7
  br i1 %55, label %34, label %56

56:                                               ; preds = %49
  %57 = add i32 %54, %11
  br label %58

58:                                               ; preds = %25, %56
  %59 = phi i32 [ %57, %56 ], [ %26, %25 ]
  %60 = phi i32 [ %53, %56 ], [ %20, %25 ]
  %61 = phi i32 [ %54, %56 ], [ %22, %25 ]
  %62 = shl i32 %18, %61
  %63 = or i32 %62, %60
  store i32 %63, i32* %19, align 8
  store i32 %59, i32* %21, align 4
  %64 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, %11
  store i32 %66, i32* %64, align 8
  br label %69

67:                                               ; preds = %6
  %68 = add i32 %1, 1
  tail call void @ec_encode(%struct.ec_ctx* %0, i32 %1, i32 %68, i32 %2)
  br label %69

69:                                               ; preds = %67, %58
  ret void
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @ec_enc_bits(%struct.ec_ctx* nocapture, i32, i32) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void @celt_fatal(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 198) #6
  unreachable

10:                                               ; preds = %3
  %11 = add i32 %7, %2
  %12 = icmp ugt i32 %11, 32
  br i1 %12, label %13, label %43

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %15 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %16 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %17 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %18 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  br label %19

19:                                               ; preds = %13, %34
  %20 = phi i32 [ %38, %34 ], [ %5, %13 ]
  %21 = phi i32 [ %39, %34 ], [ %7, %13 ]
  %22 = load i32, i32* %14, align 4
  %23 = load i32, i32* %15, align 4
  %24 = add i32 %23, %22
  %25 = load i32, i32* %16, align 8
  %26 = icmp ult i32 %24, %25
  br i1 %26, label %27, label %34

27:                                               ; preds = %19
  %28 = trunc i32 %20 to i8
  %29 = load i8*, i8** %17, align 8
  %30 = add i32 %23, 1
  store i32 %30, i32* %15, align 4
  %31 = sub i32 %25, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %29, i64 %32
  store i8 %28, i8* %33, align 1
  br label %34

34:                                               ; preds = %19, %27
  %35 = phi i32 [ 0, %27 ], [ -1, %19 ]
  %36 = load i32, i32* %18, align 8
  %37 = or i32 %36, %35
  store i32 %37, i32* %18, align 8
  %38 = lshr i32 %20, 8
  %39 = add nsw i32 %21, -8
  %40 = icmp sgt i32 %39, 7
  br i1 %40, label %19, label %41

41:                                               ; preds = %34
  %42 = add i32 %39, %2
  br label %43

43:                                               ; preds = %41, %10
  %44 = phi i32 [ %42, %41 ], [ %11, %10 ]
  %45 = phi i32 [ %38, %41 ], [ %5, %10 ]
  %46 = phi i32 [ %39, %41 ], [ %7, %10 ]
  %47 = shl i32 %1, %46
  %48 = or i32 %47, %45
  store i32 %48, i32* %4, align 8
  store i32 %44, i32* %6, align 4
  %49 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, %2
  store i32 %51, i32* %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ec_enc_patch_initial_bits(%struct.ec_ctx* nocapture, i32, i32) local_unnamed_addr #2 {
  %4 = icmp ult i32 %2, 9
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @celt_fatal(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 217) #6
  unreachable

6:                                                ; preds = %3
  %7 = sub nuw nsw i32 8, %2
  %8 = shl nsw i32 -1, %2
  %9 = xor i32 %8, -1
  %10 = shl i32 %9, %7
  %11 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = xor i32 %10, 255
  %20 = and i32 %19, %18
  %21 = shl i32 %1, %7
  %22 = or i32 %20, %21
  %23 = trunc i32 %22 to i8
  store i8 %23, i8* %16, align 1
  br label %49

24:                                               ; preds = %6
  %25 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %28, label %33

28:                                               ; preds = %24
  %29 = xor i32 %10, -1
  %30 = and i32 %26, %29
  %31 = shl i32 %1, %7
  %32 = or i32 %30, %31
  store i32 %32, i32* %25, align 4
  br label %49

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %35 = load i32, i32* %34, align 8
  %36 = lshr i32 -2147483648, %2
  %37 = icmp ugt i32 %35, %36
  br i1 %37, label %47, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = shl i32 %10, 23
  %42 = xor i32 %41, -1
  %43 = and i32 %40, %42
  %44 = sub nuw nsw i32 31, %2
  %45 = shl i32 %1, %44
  %46 = or i32 %43, %45
  store i32 %46, i32* %39, align 4
  br label %49

47:                                               ; preds = %33
  %48 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  store i32 -1, i32* %48, align 8
  br label %49

49:                                               ; preds = %28, %47, %38, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ec_enc_shrink(%struct.ec_ctx* nocapture, i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, %4
  %8 = icmp ugt i32 %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  tail call void @celt_fatal(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 238) #6
  unreachable

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = zext i32 %6 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %12, i64 %20
  %22 = getelementptr inbounds i8, i8* %21, i64 %16
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %22, i64 %15, i1 false)
  store i32 %1, i32* %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @ec_enc_done(%struct.ec_ctx*) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @llvm.ctlz.i32(i32 %3, i1 true), !range !2
  %5 = lshr i32 2147483647, %4
  %6 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %5, %7
  %9 = ashr i32 -2147483648, %4
  %10 = and i32 %8, %9
  %11 = or i32 %10, %5
  %12 = add i32 %7, %3
  %13 = icmp ult i32 %11, %12
  br i1 %13, label %20, label %14

14:                                               ; preds = %1
  %15 = add nuw nsw i32 %4, 1
  %16 = lshr i32 %5, 1
  %17 = add i32 %16, %7
  %18 = xor i32 %16, -1
  %19 = and i32 %17, %18
  br label %22

20:                                               ; preds = %1
  %21 = icmp eq i32 %4, 0
  br i1 %21, label %93, label %22

22:                                               ; preds = %20, %14
  %23 = phi i32 [ %15, %14 ], [ %4, %20 ]
  %24 = phi i32 [ %19, %14 ], [ %10, %20 ]
  %25 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %26 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %27 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %28 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %29 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %30 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %31 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %32 = add nsw i32 %23, -1
  %33 = and i32 %32, -8
  %34 = lshr i32 %24, 23
  %35 = icmp eq i32 %34, 255
  br i1 %35, label %85, label %36

36:                                               ; preds = %22
  %37 = lshr i32 %24, 31
  %38 = load i32, i32* %25, align 4
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %57

40:                                               ; preds = %36
  %41 = load i32, i32* %26, align 4
  %42 = load i32, i32* %27, align 4
  %43 = add i32 %42, %41
  %44 = load i32, i32* %28, align 8
  %45 = icmp ult i32 %43, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %40
  %47 = add nuw nsw i32 %38, %37
  %48 = trunc i32 %47 to i8
  %49 = load i8*, i8** %29, align 8
  %50 = add i32 %41, 1
  store i32 %50, i32* %26, align 4
  %51 = zext i32 %41 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  store i8 %48, i8* %52, align 1
  br label %53

53:                                               ; preds = %46, %40
  %54 = phi i32 [ 0, %46 ], [ -1, %40 ]
  %55 = load i32, i32* %30, align 8
  %56 = or i32 %55, %54
  store i32 %56, i32* %30, align 8
  br label %57

57:                                               ; preds = %53, %36
  %58 = load i32, i32* %31, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %57
  %61 = trunc i32 %37 to i8
  %62 = add nsw i8 %61, -1
  br label %63

63:                                               ; preds = %76, %60
  %64 = phi i32 [ %58, %60 ], [ %81, %76 ]
  %65 = load i32, i32* %26, align 4
  %66 = load i32, i32* %27, align 4
  %67 = add i32 %66, %65
  %68 = load i32, i32* %28, align 8
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %63
  %71 = load i8*, i8** %29, align 8
  %72 = add i32 %65, 1
  store i32 %72, i32* %26, align 4
  %73 = zext i32 %65 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  store i8 %62, i8* %74, align 1
  %75 = load i32, i32* %31, align 8
  br label %76

76:                                               ; preds = %70, %63
  %77 = phi i32 [ %75, %70 ], [ %64, %63 ]
  %78 = phi i32 [ 0, %70 ], [ -1, %63 ]
  %79 = load i32, i32* %30, align 8
  %80 = or i32 %79, %78
  store i32 %80, i32* %30, align 8
  %81 = add i32 %77, -1
  store i32 %81, i32* %31, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %63

83:                                               ; preds = %76, %57
  %84 = and i32 %34, 255
  store i32 %84, i32* %25, align 4
  br label %88

85:                                               ; preds = %22
  %86 = load i32, i32* %31, align 8
  %87 = add i32 %86, 1
  store i32 %87, i32* %31, align 8
  br label %88

88:                                               ; preds = %83, %85
  %89 = icmp sgt i32 %23, 8
  br i1 %89, label %242, label %90

90:                                               ; preds = %390, %344, %292, %88
  %91 = add nsw i32 %23, -8
  %92 = sub nsw i32 %91, %33
  br label %93

93:                                               ; preds = %20, %90
  %94 = phi i32 [ %4, %20 ], [ %92, %90 ]
  %95 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 10
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %100 = load i32, i32* %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %155, label %126

102:                                              ; preds = %93
  %103 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, %104
  %108 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp ult i32 %107, %109
  br i1 %110, label %111, label %118

111:                                              ; preds = %102
  %112 = trunc i32 %96 to i8
  %113 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = add i32 %104, 1
  store i32 %115, i32* %103, align 4
  %116 = zext i32 %104 to i64
  %117 = getelementptr inbounds i8, i8* %114, i64 %116
  store i8 %112, i8* %117, align 1
  br label %118

118:                                              ; preds = %102, %111
  %119 = phi i32 [ 0, %111 ], [ -1, %102 ]
  %120 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %121 = load i32, i32* %120, align 8
  %122 = or i32 %121, %119
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %154, label %126

126:                                              ; preds = %98, %118
  %127 = phi i32 [ %124, %118 ], [ %100, %98 ]
  %128 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 9
  %129 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %130 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %131 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %132 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %133 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  br label %134

134:                                              ; preds = %147, %126
  %135 = phi i32 [ %127, %126 ], [ %152, %147 ]
  %136 = load i32, i32* %129, align 4
  %137 = load i32, i32* %130, align 4
  %138 = add i32 %137, %136
  %139 = load i32, i32* %131, align 8
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %141, label %147

141:                                              ; preds = %134
  %142 = load i8*, i8** %132, align 8
  %143 = add i32 %136, 1
  store i32 %143, i32* %129, align 4
  %144 = zext i32 %136 to i64
  %145 = getelementptr inbounds i8, i8* %142, i64 %144
  store i8 -1, i8* %145, align 1
  %146 = load i32, i32* %128, align 8
  br label %147

147:                                              ; preds = %141, %134
  %148 = phi i32 [ %146, %141 ], [ %135, %134 ]
  %149 = phi i32 [ 0, %141 ], [ -1, %134 ]
  %150 = load i32, i32* %133, align 8
  %151 = or i32 %150, %149
  store i32 %151, i32* %133, align 8
  %152 = add i32 %148, -1
  store i32 %152, i32* %128, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %134

154:                                              ; preds = %147, %118
  store i32 0, i32* %95, align 4
  br label %155

155:                                              ; preds = %98, %154
  %156 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 3
  %157 = load i32, i32* %156, align 8
  %158 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 4
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 7
  br i1 %160, label %164, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %163 = load i32, i32* %162, align 8
  br label %194

164:                                              ; preds = %155
  %165 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %166 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %167 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %168 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %169 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  br label %170

170:                                              ; preds = %164, %185
  %171 = phi i32 [ %159, %164 ], [ %190, %185 ]
  %172 = phi i32 [ %157, %164 ], [ %189, %185 ]
  %173 = load i32, i32* %165, align 4
  %174 = load i32, i32* %166, align 4
  %175 = add i32 %174, %173
  %176 = load i32, i32* %167, align 8
  %177 = icmp ult i32 %175, %176
  br i1 %177, label %178, label %185

178:                                              ; preds = %170
  %179 = trunc i32 %172 to i8
  %180 = load i8*, i8** %168, align 8
  %181 = add i32 %174, 1
  store i32 %181, i32* %166, align 4
  %182 = sub i32 %176, %181
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %180, i64 %183
  store i8 %179, i8* %184, align 1
  br label %185

185:                                              ; preds = %170, %178
  %186 = phi i32 [ 0, %178 ], [ -1, %170 ]
  %187 = load i32, i32* %169, align 8
  %188 = or i32 %187, %186
  store i32 %188, i32* %169, align 8
  %189 = lshr i32 %172, 8
  %190 = add nsw i32 %171, -8
  %191 = icmp sgt i32 %190, 7
  br i1 %191, label %170, label %192

192:                                              ; preds = %185
  %193 = and i32 %159, 7
  br label %194

194:                                              ; preds = %161, %192
  %195 = phi i32 [ %163, %161 ], [ %188, %192 ]
  %196 = phi i32 [ %157, %161 ], [ %189, %192 ]
  %197 = phi i32 [ %159, %161 ], [ %193, %192 ]
  %198 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 11
  %199 = icmp eq i32 %195, 0
  br i1 %199, label %200, label %241

200:                                              ; preds = %194
  %201 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 6
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %202, i64 %205
  %207 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  %209 = sub i32 %208, %204
  %210 = getelementptr inbounds %struct.ec_ctx, %struct.ec_ctx* %0, i64 0, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 %209, %211
  %213 = zext i32 %212 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %206, i8 0, i64 %213, i1 false)
  %214 = icmp sgt i32 %197, 0
  br i1 %214, label %215, label %241

215:                                              ; preds = %200
  %216 = load i32, i32* %210, align 4
  %217 = load i32, i32* %207, align 8
  %218 = icmp ult i32 %216, %217
  br i1 %218, label %220, label %219

219:                                              ; preds = %215
  store i32 -1, i32* %198, align 8
  br label %241

220:                                              ; preds = %215
  %221 = sub nsw i32 0, %94
  %222 = load i32, i32* %203, align 4
  %223 = add i32 %222, %216
  %224 = icmp uge i32 %223, %217
  %225 = icmp sgt i32 %197, %221
  %226 = and i1 %225, %224
  br i1 %226, label %227, label %231

227:                                              ; preds = %220
  %228 = shl nsw i32 -1, %221
  %229 = xor i32 %228, -1
  %230 = and i32 %196, %229
  store i32 -1, i32* %198, align 8
  br label %231

231:                                              ; preds = %220, %227
  %232 = phi i32 [ %230, %227 ], [ %196, %220 ]
  %233 = load i8*, i8** %201, align 8
  %234 = xor i32 %216, -1
  %235 = add i32 %217, %234
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %233, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = trunc i32 %232 to i8
  %240 = or i8 %238, %239
  store i8 %240, i8* %237, align 1
  br label %241

241:                                              ; preds = %194, %200, %231, %219
  ret void

242:                                              ; preds = %88
  %243 = lshr i32 %24, 15
  %244 = and i32 %243, 255
  %245 = icmp eq i32 %244, 255
  br i1 %245, label %289, label %246

246:                                              ; preds = %242
  %247 = load i32, i32* %25, align 4
  %248 = icmp sgt i32 %247, -1
  br i1 %248, label %249, label %265

249:                                              ; preds = %246
  %250 = load i32, i32* %26, align 4
  %251 = load i32, i32* %27, align 4
  %252 = add i32 %251, %250
  %253 = load i32, i32* %28, align 8
  %254 = icmp ult i32 %252, %253
  br i1 %254, label %255, label %261

255:                                              ; preds = %249
  %256 = trunc i32 %247 to i8
  %257 = load i8*, i8** %29, align 8
  %258 = add i32 %250, 1
  store i32 %258, i32* %26, align 4
  %259 = zext i32 %250 to i64
  %260 = getelementptr inbounds i8, i8* %257, i64 %259
  store i8 %256, i8* %260, align 1
  br label %261

261:                                              ; preds = %255, %249
  %262 = phi i32 [ 0, %255 ], [ -1, %249 ]
  %263 = load i32, i32* %30, align 8
  %264 = or i32 %263, %262
  store i32 %264, i32* %30, align 8
  br label %265

265:                                              ; preds = %261, %246
  %266 = load i32, i32* %31, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %288, label %268

268:                                              ; preds = %265, %281
  %269 = phi i32 [ %286, %281 ], [ %266, %265 ]
  %270 = load i32, i32* %26, align 4
  %271 = load i32, i32* %27, align 4
  %272 = add i32 %271, %270
  %273 = load i32, i32* %28, align 8
  %274 = icmp ult i32 %272, %273
  br i1 %274, label %275, label %281

275:                                              ; preds = %268
  %276 = load i8*, i8** %29, align 8
  %277 = add i32 %270, 1
  store i32 %277, i32* %26, align 4
  %278 = zext i32 %270 to i64
  %279 = getelementptr inbounds i8, i8* %276, i64 %278
  store i8 -1, i8* %279, align 1
  %280 = load i32, i32* %31, align 8
  br label %281

281:                                              ; preds = %275, %268
  %282 = phi i32 [ %280, %275 ], [ %269, %268 ]
  %283 = phi i32 [ 0, %275 ], [ -1, %268 ]
  %284 = load i32, i32* %30, align 8
  %285 = or i32 %284, %283
  store i32 %285, i32* %30, align 8
  %286 = add i32 %282, -1
  store i32 %286, i32* %31, align 8
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %268

288:                                              ; preds = %281, %265
  store i32 %244, i32* %25, align 4
  br label %292

289:                                              ; preds = %242
  %290 = load i32, i32* %31, align 8
  %291 = add i32 %290, 1
  store i32 %291, i32* %31, align 8
  br label %292

292:                                              ; preds = %289, %288
  %293 = icmp sgt i32 %23, 16
  br i1 %293, label %294, label %90

294:                                              ; preds = %292
  %295 = lshr i32 %24, 7
  %296 = and i32 %295, 255
  %297 = icmp eq i32 %296, 255
  br i1 %297, label %341, label %298

298:                                              ; preds = %294
  %299 = load i32, i32* %25, align 4
  %300 = icmp sgt i32 %299, -1
  br i1 %300, label %301, label %317

301:                                              ; preds = %298
  %302 = load i32, i32* %26, align 4
  %303 = load i32, i32* %27, align 4
  %304 = add i32 %303, %302
  %305 = load i32, i32* %28, align 8
  %306 = icmp ult i32 %304, %305
  br i1 %306, label %307, label %313

307:                                              ; preds = %301
  %308 = trunc i32 %299 to i8
  %309 = load i8*, i8** %29, align 8
  %310 = add i32 %302, 1
  store i32 %310, i32* %26, align 4
  %311 = zext i32 %302 to i64
  %312 = getelementptr inbounds i8, i8* %309, i64 %311
  store i8 %308, i8* %312, align 1
  br label %313

313:                                              ; preds = %307, %301
  %314 = phi i32 [ 0, %307 ], [ -1, %301 ]
  %315 = load i32, i32* %30, align 8
  %316 = or i32 %315, %314
  store i32 %316, i32* %30, align 8
  br label %317

317:                                              ; preds = %313, %298
  %318 = load i32, i32* %31, align 8
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %340, label %320

320:                                              ; preds = %317, %333
  %321 = phi i32 [ %338, %333 ], [ %318, %317 ]
  %322 = load i32, i32* %26, align 4
  %323 = load i32, i32* %27, align 4
  %324 = add i32 %323, %322
  %325 = load i32, i32* %28, align 8
  %326 = icmp ult i32 %324, %325
  br i1 %326, label %327, label %333

327:                                              ; preds = %320
  %328 = load i8*, i8** %29, align 8
  %329 = add i32 %322, 1
  store i32 %329, i32* %26, align 4
  %330 = zext i32 %322 to i64
  %331 = getelementptr inbounds i8, i8* %328, i64 %330
  store i8 -1, i8* %331, align 1
  %332 = load i32, i32* %31, align 8
  br label %333

333:                                              ; preds = %327, %320
  %334 = phi i32 [ %332, %327 ], [ %321, %320 ]
  %335 = phi i32 [ 0, %327 ], [ -1, %320 ]
  %336 = load i32, i32* %30, align 8
  %337 = or i32 %336, %335
  store i32 %337, i32* %30, align 8
  %338 = add i32 %334, -1
  store i32 %338, i32* %31, align 8
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %320

340:                                              ; preds = %333, %317
  store i32 %296, i32* %25, align 4
  br label %344

341:                                              ; preds = %294
  %342 = load i32, i32* %31, align 8
  %343 = add i32 %342, 1
  store i32 %343, i32* %31, align 8
  br label %344

344:                                              ; preds = %341, %340
  %345 = icmp sgt i32 %23, 24
  br i1 %345, label %346, label %90

346:                                              ; preds = %344
  %347 = shl i32 %24, 1
  %348 = and i32 %347, 254
  %349 = load i32, i32* %25, align 4
  %350 = icmp sgt i32 %349, -1
  br i1 %350, label %351, label %367

351:                                              ; preds = %346
  %352 = load i32, i32* %26, align 4
  %353 = load i32, i32* %27, align 4
  %354 = add i32 %353, %352
  %355 = load i32, i32* %28, align 8
  %356 = icmp ult i32 %354, %355
  br i1 %356, label %357, label %363

357:                                              ; preds = %351
  %358 = trunc i32 %349 to i8
  %359 = load i8*, i8** %29, align 8
  %360 = add i32 %352, 1
  store i32 %360, i32* %26, align 4
  %361 = zext i32 %352 to i64
  %362 = getelementptr inbounds i8, i8* %359, i64 %361
  store i8 %358, i8* %362, align 1
  br label %363

363:                                              ; preds = %357, %351
  %364 = phi i32 [ 0, %357 ], [ -1, %351 ]
  %365 = load i32, i32* %30, align 8
  %366 = or i32 %365, %364
  store i32 %366, i32* %30, align 8
  br label %367

367:                                              ; preds = %363, %346
  %368 = load i32, i32* %31, align 8
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %390, label %370

370:                                              ; preds = %367, %383
  %371 = phi i32 [ %388, %383 ], [ %368, %367 ]
  %372 = load i32, i32* %26, align 4
  %373 = load i32, i32* %27, align 4
  %374 = add i32 %373, %372
  %375 = load i32, i32* %28, align 8
  %376 = icmp ult i32 %374, %375
  br i1 %376, label %377, label %383

377:                                              ; preds = %370
  %378 = load i8*, i8** %29, align 8
  %379 = add i32 %372, 1
  store i32 %379, i32* %26, align 4
  %380 = zext i32 %372 to i64
  %381 = getelementptr inbounds i8, i8* %378, i64 %380
  store i8 -1, i8* %381, align 1
  %382 = load i32, i32* %31, align 8
  br label %383

383:                                              ; preds = %377, %370
  %384 = phi i32 [ %382, %377 ], [ %371, %370 ]
  %385 = phi i32 [ 0, %377 ], [ -1, %370 ]
  %386 = load i32, i32* %30, align 8
  %387 = or i32 %386, %385
  store i32 %387, i32* %30, align 8
  %388 = add i32 %384, -1
  store i32 %388, i32* %31, align 8
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %370

390:                                              ; preds = %383, %367
  store i32 %348, i32* %25, align 4
  br label %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
