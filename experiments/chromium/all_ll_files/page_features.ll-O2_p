; ModuleID = '../../components/dom_distiller/core/page_features.cc'
source_filename = "../../components/dom_distiller/core/page_features.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { double* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.43"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.43" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.re2::RE2::Arg" = type { i8*, i1 (i8*, i64, i8*)* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"union.absl::variant_internal::DestructibleUnionImpl.11" }
%"union.absl::variant_internal::DestructibleUnionImpl.11" = type { %"union.absl::variant_internal::DestructibleUnionImpl.12" }
%"union.absl::variant_internal::DestructibleUnionImpl.12" = type { %"class.std::__1::basic_string" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }

@_ZN13dom_distiller21kDerivedFeaturesCountE = hidden local_unnamed_addr global i32 29, align 4
@.str = private unnamed_addr constant [6 x i8] c"forum\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"phpbb\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"\5C/.\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"[^\5Cw/]\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"\5Cd+\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"opengraph\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"numElements\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"numAnchors\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"numForms\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"innerText\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"textContent\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"innerHTML\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"archive\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"\5Cw+\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13dom_distiller24CalculateDerivedFeaturesEbRK4GURLdddRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_(%"class.std::__1::vector"* noalias sret, i1 zeroext, %class.GURL* dereferenceable(120), double, double, double, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %10 = alloca %"class.re2::StringPiece", align 8
  %11 = alloca %"class.re2::RE2", align 8
  %12 = alloca %"class.re2::StringPiece", align 8
  %13 = alloca %"class.re2::RE2", align 8
  %14 = alloca %"class.re2::StringPiece", align 8
  %15 = alloca %"class.re2::RE2", align 8
  %16 = alloca %"class.std::__1::allocator", align 1
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %29 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 1
  %30 = load i32, i32* %29, align 4, !noalias !2
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %32, label %33

32:                                               ; preds = %9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %40

33:                                               ; preds = %9
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 0
  %36 = load i32, i32* %35, align 4, !noalias !2
  %37 = sext i32 %36 to i64
  %38 = sext i32 %30 to i64
  %39 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #10, !noalias !2
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %17, %"class.std::__1::basic_string"* dereferenceable(24) %34, i64 %37, i64 %38, %"class.std::__1::allocator"* nonnull dereferenceable(1) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #10, !noalias !2
  br label %40

40:                                               ; preds = %33, %32
  %41 = call fastcc i32 @_ZN13dom_distiller12_GLOBAL__N_112GetWordCountERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %6)
  %42 = call fastcc i32 @_ZN13dom_distiller12_GLOBAL__N_112GetWordCountERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %7)
  %43 = call fastcc i32 @_ZN13dom_distiller12_GLOBAL__N_112GetWordCountERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %8)
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %46 = uitofp i1 %1 to double
  %47 = bitcast double** %44 to i64*
  %48 = bitcast %"class.std::__1::vector"* %0 to i64*
  %49 = bitcast double** %45 to i64*
  %50 = call i8* @_Znwm(i64 8) #11
  %51 = bitcast i8* %50 to double*
  %52 = getelementptr inbounds i8, i8* %50, i64 8
  %53 = ptrtoint i8* %52 to i64
  store double %46, double* %51, align 8
  %54 = ptrtoint i8* %50 to i64
  store i64 %54, i64* %48, align 8
  store i64 %53, i64* %47, align 8
  store i64 %53, i64* %49, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #10
  %56 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 5, i8* %57, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1 false) #10
  %58 = getelementptr inbounds i8, i8* %55, i64 5
  store i8 0, i8* %58, align 1
  %59 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = select i1 %62, i8* %64, i8* %28
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %61 to i64
  %69 = select i1 %62, i64 %67, i64 %68
  %70 = getelementptr inbounds i8, i8* %65, i64 %69
  %71 = ptrtoint i8* %70 to i64
  %72 = ptrtoint i8* %65 to i64
  %73 = icmp slt i64 %69, 5
  br i1 %73, label %97, label %74

74:                                               ; preds = %40
  %75 = bitcast %"class.std::__1::basic_string"* %18 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = and i32 %77, 255
  br label %79

79:                                               ; preds = %92, %74
  %80 = phi i64 [ %95, %92 ], [ %69, %74 ]
  %81 = phi i8* [ %93, %92 ], [ %65, %74 ]
  %82 = add nsw i64 %80, -4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %97, label %84

84:                                               ; preds = %79
  %85 = call i8* @memchr(i8* %81, i32 %78, i64 %82) #10
  %86 = icmp eq i8* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %84
  %88 = call i32 @bcmp(i8* nonnull %85, i8* nonnull %55, i64 5) #10
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = ptrtoint i8* %85 to i64
  br label %97

92:                                               ; preds = %87
  %93 = getelementptr inbounds i8, i8* %85, i64 1
  %94 = ptrtoint i8* %93 to i64
  %95 = sub i64 %71, %94
  %96 = icmp slt i64 %95, 5
  br i1 %96, label %97, label %79

97:                                               ; preds = %79, %84, %92, %40, %90
  %98 = phi i64 [ %71, %40 ], [ %91, %90 ], [ %71, %92 ], [ %71, %84 ], [ %71, %79 ]
  %99 = phi i8* [ %70, %40 ], [ %85, %90 ], [ %70, %92 ], [ %70, %84 ], [ %70, %79 ]
  %100 = icmp ne i8* %99, %70
  %101 = sub i64 %98, %72
  %102 = icmp ne i64 %101, -1
  %103 = and i1 %102, %100
  %104 = uitofp i1 %103 to double
  %105 = bitcast %"class.std::__1::vector"* %0 to i64*
  %106 = call i8* @_Znwm(i64 16) #11
  %107 = getelementptr inbounds i8, i8* %106, i64 8
  %108 = bitcast i8* %107 to double*
  store double %104, double* %108, align 8
  %109 = insertelement <2 x i8*> undef, i8* %106, i32 0
  %110 = shufflevector <2 x i8*> %109, <2 x i8*> undef, <2 x i32> zeroinitializer
  %111 = getelementptr i8, <2 x i8*> %110, <2 x i64> <i64 16, i64 16>
  %112 = ptrtoint <2 x i8*> %111 to <2 x i64>
  %113 = ptrtoint i8* %106 to i64
  %114 = bitcast i8* %50 to i64*
  %115 = bitcast i8* %106 to i64*
  %116 = load i64, i64* %114, align 8
  store i64 %116, i64* %115, align 8
  store i64 %113, i64* %105, align 8
  %117 = bitcast double** %44 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %117, align 8
  call void @_ZdlPv(i8* nonnull %50) #11
  %118 = load i8, i8* %60, align 1
  %119 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #10
  %120 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #10
  %121 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  store i8 5, i8* %122, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #10
  %123 = getelementptr inbounds i8, i8* %120, i64 5
  store i8 0, i8* %123, align 1
  %124 = icmp slt i8 %118, 0
  %125 = select i1 %124, i8* %119, i8* %28
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = zext i8 %118 to i64
  %129 = select i1 %124, i64 %127, i64 %128
  %130 = getelementptr inbounds i8, i8* %125, i64 %129
  %131 = ptrtoint i8* %130 to i64
  %132 = ptrtoint i8* %125 to i64
  %133 = icmp slt i64 %129, 5
  br i1 %133, label %157, label %134

134:                                              ; preds = %97
  %135 = bitcast %"class.std::__1::basic_string"* %19 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = trunc i64 %136 to i32
  %138 = and i32 %137, 255
  br label %139

139:                                              ; preds = %152, %134
  %140 = phi i64 [ %155, %152 ], [ %129, %134 ]
  %141 = phi i8* [ %153, %152 ], [ %125, %134 ]
  %142 = add nsw i64 %140, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %139
  %145 = call i8* @memchr(i8* %141, i32 %138, i64 %142) #10
  %146 = icmp eq i8* %145, null
  br i1 %146, label %157, label %147

147:                                              ; preds = %144
  %148 = call i32 @bcmp(i8* nonnull %145, i8* nonnull %120, i64 5) #10
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = ptrtoint i8* %145 to i64
  br label %157

152:                                              ; preds = %147
  %153 = getelementptr inbounds i8, i8* %145, i64 1
  %154 = ptrtoint i8* %153 to i64
  %155 = sub i64 %131, %154
  %156 = icmp slt i64 %155, 5
  br i1 %156, label %157, label %139

157:                                              ; preds = %139, %144, %152, %97, %150
  %158 = phi i64 [ %131, %97 ], [ %151, %150 ], [ %131, %152 ], [ %131, %144 ], [ %131, %139 ]
  %159 = phi i8* [ %130, %97 ], [ %145, %150 ], [ %130, %152 ], [ %130, %144 ], [ %130, %139 ]
  %160 = icmp ne i8* %159, %130
  %161 = sub i64 %158, %132
  %162 = icmp ne i64 %161, -1
  %163 = and i1 %162, %160
  %164 = uitofp i1 %163 to double
  %165 = load double*, double** %44, align 8
  %166 = load double*, double** %45, align 8
  %167 = icmp ult double* %165, %166
  %168 = ptrtoint double* %166 to i64
  br i1 %167, label %169, label %173

169:                                              ; preds = %157
  store double %164, double* %165, align 8
  %170 = getelementptr inbounds double, double* %165, i64 1
  %171 = ptrtoint double* %170 to i64
  %172 = bitcast double** %44 to i64*
  store i64 %171, i64* %172, align 8
  br label %219

173:                                              ; preds = %157
  %174 = ptrtoint double* %165 to i64
  %175 = bitcast double** %44 to i64*
  %176 = bitcast %"class.std::__1::vector"* %0 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 %174, %177
  %179 = ashr exact i64 %178, 3
  %180 = add nsw i64 %179, 1
  %181 = icmp ugt i64 %180, 2305843009213693951
  br i1 %181, label %182, label %184

182:                                              ; preds = %173
  %183 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %183) #12
  unreachable

184:                                              ; preds = %173
  %185 = bitcast double** %45 to i64*
  %186 = sub i64 %168, %177
  %187 = ashr exact i64 %186, 3
  %188 = icmp ult i64 %187, 1152921504606846975
  br i1 %188, label %189, label %197

189:                                              ; preds = %184
  %190 = ashr exact i64 %186, 2
  %191 = icmp ult i64 %190, %180
  %192 = select i1 %191, i64 %180, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 2305843009213693951
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  call void @abort() #12
  unreachable

197:                                              ; preds = %194, %184
  %198 = phi i64 [ %192, %194 ], [ 2305843009213693951, %184 ]
  %199 = shl i64 %198, 3
  %200 = call i8* @_Znwm(i64 %199) #11
  %201 = bitcast i8* %200 to double*
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi i8* [ %200, %197 ], [ null, %189 ]
  %205 = phi double* [ %201, %197 ], [ null, %189 ]
  %206 = getelementptr inbounds double, double* %205, i64 %179
  %207 = getelementptr inbounds double, double* %205, i64 %203
  %208 = ptrtoint double* %207 to i64
  store double %164, double* %206, align 8
  %209 = getelementptr inbounds double, double* %206, i64 1
  %210 = ptrtoint double* %209 to i64
  %211 = ptrtoint double* %205 to i64
  %212 = icmp sgt i64 %178, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %202
  %214 = inttoptr i64 %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %214, i64 %178, i1 false) #10
  br label %215

215:                                              ; preds = %213, %202
  store i64 %211, i64* %176, align 8
  store i64 %210, i64* %175, align 8
  store i64 %208, i64* %185, align 8
  %216 = icmp eq i64 %177, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = inttoptr i64 %177 to i8*
  call void @_ZdlPv(i8* %218) #11
  br label %219

219:                                              ; preds = %217, %215, %169
  %220 = load i8, i8* %60, align 1
  %221 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #10
  %222 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #10
  %223 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  store i8 4, i8* %224, align 1
  %225 = bitcast %"class.std::__1::basic_string"* %20 to i32*
  store i32 2003134838, i32* %225, align 8
  %226 = getelementptr inbounds i8, i8* %222, i64 4
  store i8 0, i8* %226, align 4
  %227 = icmp slt i8 %220, 0
  %228 = select i1 %227, i8* %221, i8* %28
  %229 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = zext i8 %220 to i64
  %232 = select i1 %227, i64 %230, i64 %231
  %233 = getelementptr inbounds i8, i8* %228, i64 %232
  %234 = ptrtoint i8* %233 to i64
  %235 = ptrtoint i8* %228 to i64
  %236 = icmp slt i64 %232, 4
  br i1 %236, label %260, label %237

237:                                              ; preds = %219
  %238 = bitcast %"class.std::__1::basic_string"* %20 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = trunc i64 %239 to i32
  %241 = and i32 %240, 255
  br label %242

242:                                              ; preds = %255, %237
  %243 = phi i64 [ %258, %255 ], [ %232, %237 ]
  %244 = phi i8* [ %256, %255 ], [ %228, %237 ]
  %245 = add nsw i64 %243, -3
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %260, label %247

247:                                              ; preds = %242
  %248 = call i8* @memchr(i8* %244, i32 %241, i64 %245) #10
  %249 = icmp eq i8* %248, null
  br i1 %249, label %260, label %250

250:                                              ; preds = %247
  %251 = call i32 @bcmp(i8* nonnull %248, i8* nonnull %222, i64 4) #10
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %250
  %254 = ptrtoint i8* %248 to i64
  br label %260

255:                                              ; preds = %250
  %256 = getelementptr inbounds i8, i8* %248, i64 1
  %257 = ptrtoint i8* %256 to i64
  %258 = sub i64 %234, %257
  %259 = icmp slt i64 %258, 4
  br i1 %259, label %260, label %242

260:                                              ; preds = %242, %247, %255, %219, %253
  %261 = phi i64 [ %234, %219 ], [ %254, %253 ], [ %234, %255 ], [ %234, %247 ], [ %234, %242 ]
  %262 = phi i8* [ %233, %219 ], [ %248, %253 ], [ %233, %255 ], [ %233, %247 ], [ %233, %242 ]
  %263 = icmp ne i8* %262, %233
  %264 = sub i64 %261, %235
  %265 = icmp ne i64 %264, -1
  %266 = and i1 %265, %263
  %267 = uitofp i1 %266 to double
  %268 = load double*, double** %44, align 8
  %269 = load double*, double** %45, align 8
  %270 = icmp ult double* %268, %269
  %271 = ptrtoint double* %269 to i64
  br i1 %270, label %272, label %276

272:                                              ; preds = %260
  store double %267, double* %268, align 8
  %273 = getelementptr inbounds double, double* %268, i64 1
  %274 = ptrtoint double* %273 to i64
  %275 = bitcast double** %44 to i64*
  store i64 %274, i64* %275, align 8
  br label %322

276:                                              ; preds = %260
  %277 = ptrtoint double* %268 to i64
  %278 = bitcast double** %44 to i64*
  %279 = bitcast %"class.std::__1::vector"* %0 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = sub i64 %277, %280
  %282 = ashr exact i64 %281, 3
  %283 = add nsw i64 %282, 1
  %284 = icmp ugt i64 %283, 2305843009213693951
  br i1 %284, label %285, label %287

285:                                              ; preds = %276
  %286 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %286) #12
  unreachable

287:                                              ; preds = %276
  %288 = bitcast double** %45 to i64*
  %289 = sub i64 %271, %280
  %290 = ashr exact i64 %289, 3
  %291 = icmp ult i64 %290, 1152921504606846975
  br i1 %291, label %292, label %300

292:                                              ; preds = %287
  %293 = ashr exact i64 %289, 2
  %294 = icmp ult i64 %293, %283
  %295 = select i1 %294, i64 %283, i64 %293
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %305, label %297

297:                                              ; preds = %292
  %298 = icmp ugt i64 %295, 2305843009213693951
  br i1 %298, label %299, label %300

299:                                              ; preds = %297
  call void @abort() #12
  unreachable

300:                                              ; preds = %297, %287
  %301 = phi i64 [ %295, %297 ], [ 2305843009213693951, %287 ]
  %302 = shl i64 %301, 3
  %303 = call i8* @_Znwm(i64 %302) #11
  %304 = bitcast i8* %303 to double*
  br label %305

305:                                              ; preds = %300, %292
  %306 = phi i64 [ %301, %300 ], [ 0, %292 ]
  %307 = phi i8* [ %303, %300 ], [ null, %292 ]
  %308 = phi double* [ %304, %300 ], [ null, %292 ]
  %309 = getelementptr inbounds double, double* %308, i64 %282
  %310 = getelementptr inbounds double, double* %308, i64 %306
  %311 = ptrtoint double* %310 to i64
  store double %267, double* %309, align 8
  %312 = getelementptr inbounds double, double* %309, i64 1
  %313 = ptrtoint double* %312 to i64
  %314 = ptrtoint double* %308 to i64
  %315 = icmp sgt i64 %281, 0
  br i1 %315, label %316, label %318

316:                                              ; preds = %305
  %317 = inttoptr i64 %280 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %307, i8* align 8 %317, i64 %281, i1 false) #10
  br label %318

318:                                              ; preds = %316, %305
  store i64 %314, i64* %279, align 8
  store i64 %313, i64* %278, align 8
  store i64 %311, i64* %288, align 8
  %319 = icmp eq i64 %280, 0
  br i1 %319, label %322, label %320

320:                                              ; preds = %318
  %321 = inttoptr i64 %280 to i8*
  call void @_ZdlPv(i8* %321) #11
  br label %322

322:                                              ; preds = %320, %318, %272
  %323 = load i8, i8* %60, align 1
  %324 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #10
  %325 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %325) #10
  %326 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %326, i64 0, i32 1, i32 0
  store i8 4, i8* %327, align 1
  %328 = bitcast %"class.std::__1::basic_string"* %21 to i32*
  store i32 1886609710, i32* %328, align 8
  %329 = getelementptr inbounds i8, i8* %325, i64 4
  store i8 0, i8* %329, align 4
  %330 = icmp slt i8 %323, 0
  %331 = select i1 %330, i8* %324, i8* %28
  %332 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %333 = load i64, i64* %332, align 8
  %334 = zext i8 %323 to i64
  %335 = select i1 %330, i64 %333, i64 %334
  %336 = getelementptr inbounds i8, i8* %331, i64 %335
  %337 = ptrtoint i8* %336 to i64
  %338 = ptrtoint i8* %331 to i64
  %339 = icmp slt i64 %335, 4
  br i1 %339, label %363, label %340

340:                                              ; preds = %322
  %341 = bitcast %"class.std::__1::basic_string"* %21 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = trunc i64 %342 to i32
  %344 = and i32 %343, 255
  br label %345

345:                                              ; preds = %358, %340
  %346 = phi i64 [ %361, %358 ], [ %335, %340 ]
  %347 = phi i8* [ %359, %358 ], [ %331, %340 ]
  %348 = add nsw i64 %346, -3
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %363, label %350

350:                                              ; preds = %345
  %351 = call i8* @memchr(i8* %347, i32 %344, i64 %348) #10
  %352 = icmp eq i8* %351, null
  br i1 %352, label %363, label %353

353:                                              ; preds = %350
  %354 = call i32 @bcmp(i8* nonnull %351, i8* nonnull %325, i64 4) #10
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %358

356:                                              ; preds = %353
  %357 = ptrtoint i8* %351 to i64
  br label %363

358:                                              ; preds = %353
  %359 = getelementptr inbounds i8, i8* %351, i64 1
  %360 = ptrtoint i8* %359 to i64
  %361 = sub i64 %337, %360
  %362 = icmp slt i64 %361, 4
  br i1 %362, label %363, label %345

363:                                              ; preds = %345, %350, %358, %322, %356
  %364 = phi i64 [ %337, %322 ], [ %357, %356 ], [ %337, %358 ], [ %337, %350 ], [ %337, %345 ]
  %365 = phi i8* [ %336, %322 ], [ %351, %356 ], [ %336, %358 ], [ %336, %350 ], [ %336, %345 ]
  %366 = icmp ne i8* %365, %336
  %367 = sub i64 %364, %338
  %368 = icmp ne i64 %367, -1
  %369 = and i1 %368, %366
  %370 = uitofp i1 %369 to double
  %371 = load double*, double** %44, align 8
  %372 = load double*, double** %45, align 8
  %373 = icmp ult double* %371, %372
  %374 = ptrtoint double* %372 to i64
  br i1 %373, label %375, label %379

375:                                              ; preds = %363
  store double %370, double* %371, align 8
  %376 = getelementptr inbounds double, double* %371, i64 1
  %377 = ptrtoint double* %376 to i64
  %378 = bitcast double** %44 to i64*
  store i64 %377, i64* %378, align 8
  br label %425

379:                                              ; preds = %363
  %380 = ptrtoint double* %371 to i64
  %381 = bitcast double** %44 to i64*
  %382 = bitcast %"class.std::__1::vector"* %0 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = sub i64 %380, %383
  %385 = ashr exact i64 %384, 3
  %386 = add nsw i64 %385, 1
  %387 = icmp ugt i64 %386, 2305843009213693951
  br i1 %387, label %388, label %390

388:                                              ; preds = %379
  %389 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %389) #12
  unreachable

390:                                              ; preds = %379
  %391 = bitcast double** %45 to i64*
  %392 = sub i64 %374, %383
  %393 = ashr exact i64 %392, 3
  %394 = icmp ult i64 %393, 1152921504606846975
  br i1 %394, label %395, label %403

395:                                              ; preds = %390
  %396 = ashr exact i64 %392, 2
  %397 = icmp ult i64 %396, %386
  %398 = select i1 %397, i64 %386, i64 %396
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %408, label %400

400:                                              ; preds = %395
  %401 = icmp ugt i64 %398, 2305843009213693951
  br i1 %401, label %402, label %403

402:                                              ; preds = %400
  call void @abort() #12
  unreachable

403:                                              ; preds = %400, %390
  %404 = phi i64 [ %398, %400 ], [ 2305843009213693951, %390 ]
  %405 = shl i64 %404, 3
  %406 = call i8* @_Znwm(i64 %405) #11
  %407 = bitcast i8* %406 to double*
  br label %408

408:                                              ; preds = %403, %395
  %409 = phi i64 [ %404, %403 ], [ 0, %395 ]
  %410 = phi i8* [ %406, %403 ], [ null, %395 ]
  %411 = phi double* [ %407, %403 ], [ null, %395 ]
  %412 = getelementptr inbounds double, double* %411, i64 %385
  %413 = getelementptr inbounds double, double* %411, i64 %409
  %414 = ptrtoint double* %413 to i64
  store double %370, double* %412, align 8
  %415 = getelementptr inbounds double, double* %412, i64 1
  %416 = ptrtoint double* %415 to i64
  %417 = ptrtoint double* %411 to i64
  %418 = icmp sgt i64 %384, 0
  br i1 %418, label %419, label %421

419:                                              ; preds = %408
  %420 = inttoptr i64 %383 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %410, i8* align 8 %420, i64 %384, i1 false) #10
  br label %421

421:                                              ; preds = %419, %408
  store i64 %417, i64* %382, align 8
  store i64 %416, i64* %381, align 8
  store i64 %414, i64* %391, align 8
  %422 = icmp eq i64 %383, 0
  br i1 %422, label %425, label %423

423:                                              ; preds = %421
  %424 = inttoptr i64 %383 to i8*
  call void @_ZdlPv(i8* %424) #11
  br label %425

425:                                              ; preds = %423, %421, %375
  %426 = load i8, i8* %60, align 1
  %427 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %325) #10
  %428 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %428) #10
  %429 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %429, i64 0, i32 1, i32 0
  store i8 5, i8* %430, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %428, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #10
  %431 = getelementptr inbounds i8, i8* %428, i64 5
  store i8 0, i8* %431, align 1
  %432 = icmp slt i8 %426, 0
  %433 = select i1 %432, i8* %427, i8* %28
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %435 = load i64, i64* %434, align 8
  %436 = zext i8 %426 to i64
  %437 = select i1 %432, i64 %435, i64 %436
  %438 = getelementptr inbounds i8, i8* %433, i64 %437
  %439 = ptrtoint i8* %438 to i64
  %440 = ptrtoint i8* %433 to i64
  %441 = icmp slt i64 %437, 5
  br i1 %441, label %465, label %442

442:                                              ; preds = %425
  %443 = bitcast %"class.std::__1::basic_string"* %22 to i64*
  %444 = load i64, i64* %443, align 8
  %445 = trunc i64 %444 to i32
  %446 = and i32 %445, 255
  br label %447

447:                                              ; preds = %460, %442
  %448 = phi i64 [ %463, %460 ], [ %437, %442 ]
  %449 = phi i8* [ %461, %460 ], [ %433, %442 ]
  %450 = add nsw i64 %448, -4
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %465, label %452

452:                                              ; preds = %447
  %453 = call i8* @memchr(i8* %449, i32 %446, i64 %450) #10
  %454 = icmp eq i8* %453, null
  br i1 %454, label %465, label %455

455:                                              ; preds = %452
  %456 = call i32 @bcmp(i8* nonnull %453, i8* nonnull %428, i64 5) #10
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %455
  %459 = ptrtoint i8* %453 to i64
  br label %465

460:                                              ; preds = %455
  %461 = getelementptr inbounds i8, i8* %453, i64 1
  %462 = ptrtoint i8* %461 to i64
  %463 = sub i64 %439, %462
  %464 = icmp slt i64 %463, 5
  br i1 %464, label %465, label %447

465:                                              ; preds = %447, %452, %460, %425, %458
  %466 = phi i64 [ %439, %425 ], [ %459, %458 ], [ %439, %460 ], [ %439, %452 ], [ %439, %447 ]
  %467 = phi i8* [ %438, %425 ], [ %453, %458 ], [ %438, %460 ], [ %438, %452 ], [ %438, %447 ]
  %468 = icmp ne i8* %467, %438
  %469 = sub i64 %466, %440
  %470 = icmp ne i64 %469, -1
  %471 = and i1 %470, %468
  %472 = uitofp i1 %471 to double
  %473 = load double*, double** %44, align 8
  %474 = load double*, double** %45, align 8
  %475 = icmp ult double* %473, %474
  %476 = ptrtoint double* %474 to i64
  br i1 %475, label %477, label %481

477:                                              ; preds = %465
  store double %472, double* %473, align 8
  %478 = getelementptr inbounds double, double* %473, i64 1
  %479 = ptrtoint double* %478 to i64
  %480 = bitcast double** %44 to i64*
  store i64 %479, i64* %480, align 8
  br label %527

481:                                              ; preds = %465
  %482 = ptrtoint double* %473 to i64
  %483 = bitcast double** %44 to i64*
  %484 = bitcast %"class.std::__1::vector"* %0 to i64*
  %485 = load i64, i64* %484, align 8
  %486 = sub i64 %482, %485
  %487 = ashr exact i64 %486, 3
  %488 = add nsw i64 %487, 1
  %489 = icmp ugt i64 %488, 2305843009213693951
  br i1 %489, label %490, label %492

490:                                              ; preds = %481
  %491 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %491) #12
  unreachable

492:                                              ; preds = %481
  %493 = bitcast double** %45 to i64*
  %494 = sub i64 %476, %485
  %495 = ashr exact i64 %494, 3
  %496 = icmp ult i64 %495, 1152921504606846975
  br i1 %496, label %497, label %505

497:                                              ; preds = %492
  %498 = ashr exact i64 %494, 2
  %499 = icmp ult i64 %498, %488
  %500 = select i1 %499, i64 %488, i64 %498
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %510, label %502

502:                                              ; preds = %497
  %503 = icmp ugt i64 %500, 2305843009213693951
  br i1 %503, label %504, label %505

504:                                              ; preds = %502
  call void @abort() #12
  unreachable

505:                                              ; preds = %502, %492
  %506 = phi i64 [ %500, %502 ], [ 2305843009213693951, %492 ]
  %507 = shl i64 %506, 3
  %508 = call i8* @_Znwm(i64 %507) #11
  %509 = bitcast i8* %508 to double*
  br label %510

510:                                              ; preds = %505, %497
  %511 = phi i64 [ %506, %505 ], [ 0, %497 ]
  %512 = phi i8* [ %508, %505 ], [ null, %497 ]
  %513 = phi double* [ %509, %505 ], [ null, %497 ]
  %514 = getelementptr inbounds double, double* %513, i64 %487
  %515 = getelementptr inbounds double, double* %513, i64 %511
  %516 = ptrtoint double* %515 to i64
  store double %472, double* %514, align 8
  %517 = getelementptr inbounds double, double* %514, i64 1
  %518 = ptrtoint double* %517 to i64
  %519 = ptrtoint double* %513 to i64
  %520 = icmp sgt i64 %486, 0
  br i1 %520, label %521, label %523

521:                                              ; preds = %510
  %522 = inttoptr i64 %485 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %512, i8* align 8 %522, i64 %486, i1 false) #10
  br label %523

523:                                              ; preds = %521, %510
  store i64 %519, i64* %484, align 8
  store i64 %518, i64* %483, align 8
  store i64 %516, i64* %493, align 8
  %524 = icmp eq i64 %485, 0
  br i1 %524, label %527, label %525

525:                                              ; preds = %523
  %526 = inttoptr i64 %485 to i8*
  call void @_ZdlPv(i8* %526) #11
  br label %527

527:                                              ; preds = %477, %523, %525
  %528 = load i8, i8* %60, align 1
  %529 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %530 = load i64, i64* %529, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %428) #10
  %531 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %531) #10
  %532 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %533 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %532, i64 0, i32 1, i32 0
  store i8 4, i8* %533, align 1
  %534 = bitcast %"class.std::__1::basic_string"* %23 to i32*
  store i32 1885892654, i32* %534, align 8
  %535 = getelementptr inbounds i8, i8* %531, i64 4
  store i8 0, i8* %535, align 4
  %536 = icmp slt i8 %528, 0
  %537 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %538 = zext i8 %528 to i64
  %539 = select i1 %536, i64 %530, i64 %538
  %540 = icmp ult i64 %539, 4
  br i1 %540, label %545, label %541

541:                                              ; preds = %527
  %542 = add i64 %539, -4
  %543 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %17, i64 %542, i64 -1, i8* nonnull %531, i64 4) #10
  %544 = icmp eq i32 %543, 0
  br label %545

545:                                              ; preds = %527, %541
  %546 = phi i1 [ false, %527 ], [ %544, %541 ]
  %547 = uitofp i1 %546 to double
  %548 = load double*, double** %44, align 8
  %549 = load double*, double** %45, align 8
  %550 = icmp ult double* %548, %549
  %551 = ptrtoint double* %549 to i64
  br i1 %550, label %552, label %556

552:                                              ; preds = %545
  store double %547, double* %548, align 8
  %553 = getelementptr inbounds double, double* %548, i64 1
  %554 = ptrtoint double* %553 to i64
  %555 = bitcast double** %44 to i64*
  store i64 %554, i64* %555, align 8
  br label %602

556:                                              ; preds = %545
  %557 = ptrtoint double* %548 to i64
  %558 = bitcast double** %44 to i64*
  %559 = bitcast %"class.std::__1::vector"* %0 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = sub i64 %557, %560
  %562 = ashr exact i64 %561, 3
  %563 = add nsw i64 %562, 1
  %564 = icmp ugt i64 %563, 2305843009213693951
  br i1 %564, label %565, label %567

565:                                              ; preds = %556
  %566 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %566) #12
  unreachable

567:                                              ; preds = %556
  %568 = bitcast double** %45 to i64*
  %569 = sub i64 %551, %560
  %570 = ashr exact i64 %569, 3
  %571 = icmp ult i64 %570, 1152921504606846975
  br i1 %571, label %572, label %580

572:                                              ; preds = %567
  %573 = ashr exact i64 %569, 2
  %574 = icmp ult i64 %573, %563
  %575 = select i1 %574, i64 %563, i64 %573
  %576 = icmp eq i64 %575, 0
  br i1 %576, label %585, label %577

577:                                              ; preds = %572
  %578 = icmp ugt i64 %575, 2305843009213693951
  br i1 %578, label %579, label %580

579:                                              ; preds = %577
  call void @abort() #12
  unreachable

580:                                              ; preds = %577, %567
  %581 = phi i64 [ %575, %577 ], [ 2305843009213693951, %567 ]
  %582 = shl i64 %581, 3
  %583 = call i8* @_Znwm(i64 %582) #11
  %584 = bitcast i8* %583 to double*
  br label %585

585:                                              ; preds = %580, %572
  %586 = phi i64 [ %581, %580 ], [ 0, %572 ]
  %587 = phi i8* [ %583, %580 ], [ null, %572 ]
  %588 = phi double* [ %584, %580 ], [ null, %572 ]
  %589 = getelementptr inbounds double, double* %588, i64 %562
  %590 = getelementptr inbounds double, double* %588, i64 %586
  %591 = ptrtoint double* %590 to i64
  store double %547, double* %589, align 8
  %592 = getelementptr inbounds double, double* %589, i64 1
  %593 = ptrtoint double* %592 to i64
  %594 = ptrtoint double* %588 to i64
  %595 = icmp sgt i64 %561, 0
  br i1 %595, label %596, label %598

596:                                              ; preds = %585
  %597 = inttoptr i64 %560 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %587, i8* align 8 %597, i64 %561, i1 false) #10
  br label %598

598:                                              ; preds = %596, %585
  store i64 %594, i64* %559, align 8
  store i64 %593, i64* %558, align 8
  store i64 %591, i64* %568, align 8
  %599 = icmp eq i64 %560, 0
  br i1 %599, label %602, label %600

600:                                              ; preds = %598
  %601 = inttoptr i64 %560 to i8*
  call void @_ZdlPv(i8* %601) #11
  br label %602

602:                                              ; preds = %552, %598, %600
  %603 = load i8, i8* %533, align 1
  %604 = icmp slt i8 %603, 0
  br i1 %604, label %605, label %608

605:                                              ; preds = %602
  %606 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %607 = load i8*, i8** %606, align 8
  call void @_ZdlPv(i8* %607) #11
  br label %608

608:                                              ; preds = %602, %605
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %531) #10
  %609 = load i8, i8* %60, align 1
  %610 = icmp slt i8 %609, 0
  %611 = load i64, i64* %537, align 8
  %612 = zext i8 %609 to i64
  %613 = select i1 %610, i64 %611, i64 %612
  %614 = uitofp i64 %613 to double
  %615 = load double*, double** %44, align 8
  %616 = load double*, double** %45, align 8
  %617 = icmp ult double* %615, %616
  %618 = ptrtoint double* %616 to i64
  br i1 %617, label %619, label %623

619:                                              ; preds = %608
  store double %614, double* %615, align 8
  %620 = getelementptr inbounds double, double* %615, i64 1
  %621 = ptrtoint double* %620 to i64
  %622 = bitcast double** %44 to i64*
  store i64 %621, i64* %622, align 8
  br label %671

623:                                              ; preds = %608
  %624 = ptrtoint double* %615 to i64
  %625 = bitcast double** %44 to i64*
  %626 = bitcast %"class.std::__1::vector"* %0 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = sub i64 %624, %627
  %629 = ashr exact i64 %628, 3
  %630 = add nsw i64 %629, 1
  %631 = icmp ugt i64 %630, 2305843009213693951
  br i1 %631, label %632, label %634

632:                                              ; preds = %623
  %633 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %633) #12
  unreachable

634:                                              ; preds = %623
  %635 = bitcast double** %45 to i64*
  %636 = sub i64 %618, %627
  %637 = ashr exact i64 %636, 3
  %638 = icmp ult i64 %637, 1152921504606846975
  br i1 %638, label %639, label %647

639:                                              ; preds = %634
  %640 = ashr exact i64 %636, 2
  %641 = icmp ult i64 %640, %630
  %642 = select i1 %641, i64 %630, i64 %640
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %652, label %644

644:                                              ; preds = %639
  %645 = icmp ugt i64 %642, 2305843009213693951
  br i1 %645, label %646, label %647

646:                                              ; preds = %644
  call void @abort() #12
  unreachable

647:                                              ; preds = %644, %634
  %648 = phi i64 [ %642, %644 ], [ 2305843009213693951, %634 ]
  %649 = shl i64 %648, 3
  %650 = call i8* @_Znwm(i64 %649) #11
  %651 = bitcast i8* %650 to double*
  br label %652

652:                                              ; preds = %647, %639
  %653 = phi i64 [ %648, %647 ], [ 0, %639 ]
  %654 = phi i8* [ %650, %647 ], [ null, %639 ]
  %655 = phi double* [ %651, %647 ], [ null, %639 ]
  %656 = getelementptr inbounds double, double* %655, i64 %629
  %657 = getelementptr inbounds double, double* %655, i64 %653
  %658 = ptrtoint double* %657 to i64
  store double %614, double* %656, align 8
  %659 = getelementptr inbounds double, double* %656, i64 1
  %660 = ptrtoint double* %659 to i64
  %661 = ptrtoint double* %655 to i64
  %662 = icmp sgt i64 %628, 0
  br i1 %662, label %663, label %665

663:                                              ; preds = %652
  %664 = inttoptr i64 %627 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %654, i8* align 8 %664, i64 %628, i1 false) #10
  br label %665

665:                                              ; preds = %663, %652
  store i64 %661, i64* %626, align 8
  store i64 %660, i64* %625, align 8
  store i64 %658, i64* %635, align 8
  %666 = icmp eq i64 %627, 0
  br i1 %666, label %671, label %667

667:                                              ; preds = %665
  %668 = inttoptr i64 %627 to i8*
  call void @_ZdlPv(i8* %668) #11
  %669 = load double*, double** %44, align 8
  %670 = ptrtoint double* %669 to i64
  br label %671

671:                                              ; preds = %619, %665, %667
  %672 = phi i64 [ %621, %619 ], [ %660, %665 ], [ %670, %667 ]
  %673 = phi double* [ %620, %619 ], [ %659, %665 ], [ %669, %667 ]
  %674 = load i8, i8* %60, align 1
  %675 = icmp slt i8 %674, 0
  %676 = load i64, i64* %537, align 8
  %677 = zext i8 %674 to i64
  %678 = select i1 %675, i64 %676, i64 %677
  %679 = icmp ult i64 %678, 2
  %680 = uitofp i1 %679 to double
  %681 = load double*, double** %45, align 8
  %682 = icmp ult double* %673, %681
  %683 = ptrtoint double* %681 to i64
  br i1 %682, label %684, label %688

684:                                              ; preds = %671
  store double %680, double* %673, align 8
  %685 = getelementptr inbounds double, double* %673, i64 1
  %686 = ptrtoint double* %685 to i64
  %687 = bitcast double** %44 to i64*
  store i64 %686, i64* %687, align 8
  br label %738

688:                                              ; preds = %671
  %689 = ptrtoint double* %673 to i64
  %690 = bitcast double** %44 to i64*
  %691 = bitcast %"class.std::__1::vector"* %0 to i64*
  %692 = load i64, i64* %691, align 8
  %693 = sub i64 %689, %692
  %694 = ashr exact i64 %693, 3
  %695 = add nsw i64 %694, 1
  %696 = icmp ugt i64 %695, 2305843009213693951
  br i1 %696, label %697, label %699

697:                                              ; preds = %688
  %698 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %698) #12
  unreachable

699:                                              ; preds = %688
  %700 = bitcast double** %45 to i64*
  %701 = sub i64 %683, %692
  %702 = ashr exact i64 %701, 3
  %703 = icmp ult i64 %702, 1152921504606846975
  br i1 %703, label %704, label %712

704:                                              ; preds = %699
  %705 = ashr exact i64 %701, 2
  %706 = icmp ult i64 %705, %695
  %707 = select i1 %706, i64 %695, i64 %705
  %708 = icmp eq i64 %707, 0
  br i1 %708, label %717, label %709

709:                                              ; preds = %704
  %710 = icmp ugt i64 %707, 2305843009213693951
  br i1 %710, label %711, label %712

711:                                              ; preds = %709
  call void @abort() #12
  unreachable

712:                                              ; preds = %709, %699
  %713 = phi i64 [ %707, %709 ], [ 2305843009213693951, %699 ]
  %714 = shl i64 %713, 3
  %715 = call i8* @_Znwm(i64 %714) #11
  %716 = bitcast i8* %715 to double*
  br label %717

717:                                              ; preds = %712, %704
  %718 = phi i64 [ %713, %712 ], [ 0, %704 ]
  %719 = phi double* [ %716, %712 ], [ null, %704 ]
  %720 = getelementptr inbounds double, double* %719, i64 %694
  %721 = getelementptr inbounds double, double* %719, i64 %718
  %722 = ptrtoint double* %721 to i64
  store double %680, double* %720, align 8
  %723 = getelementptr inbounds double, double* %720, i64 1
  %724 = ptrtoint double* %723 to i64
  %725 = sub i64 %672, %692
  %726 = ashr exact i64 %725, 3
  %727 = sub nsw i64 0, %726
  %728 = getelementptr inbounds double, double* %720, i64 %727
  %729 = ptrtoint double* %728 to i64
  %730 = icmp sgt i64 %725, 0
  br i1 %730, label %731, label %734

731:                                              ; preds = %717
  %732 = bitcast double* %728 to i8*
  %733 = inttoptr i64 %692 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %732, i8* align 8 %733, i64 %725, i1 false) #10
  br label %734

734:                                              ; preds = %731, %717
  store i64 %729, i64* %691, align 8
  store i64 %724, i64* %690, align 8
  store i64 %722, i64* %700, align 8
  %735 = icmp eq i64 %692, 0
  br i1 %735, label %738, label %736

736:                                              ; preds = %734
  %737 = inttoptr i64 %692 to i8*
  call void @_ZdlPv(i8* %737) #11
  br label %738

738:                                              ; preds = %684, %734, %736
  %739 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %739) #10
  %740 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %741 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %740, i64 0, i32 1, i32 0
  store i8 3, i8* %741, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %739, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false) #10
  %742 = getelementptr inbounds i8, i8* %739, i64 3
  store i8 0, i8* %742, align 1
  %743 = bitcast %"class.re2::StringPiece"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %743) #10
  %744 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %14, i64 0, i32 0
  %745 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %14, i64 0, i32 1
  %746 = load i8, i8* %60, align 1
  %747 = icmp slt i8 %746, 0
  %748 = load i8*, i8** %63, align 8
  %749 = select i1 %747, i8* %748, i8* %28
  store i8* %749, i8** %744, align 8
  %750 = load i64, i64* %537, align 8
  %751 = zext i8 %746 to i64
  %752 = select i1 %747, i64 %750, i64 %751
  store i64 %752, i64* %745, align 8
  %753 = bitcast %"class.re2::RE2"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %753) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %753, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #10
  br label %754

754:                                              ; preds = %754, %738
  %755 = phi i32 [ 0, %738 ], [ %757, %754 ]
  %756 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %14, %"class.re2::RE2"* nonnull dereferenceable(200) %15, %"class.re2::RE2::Arg"** null, i32 0) #10
  %757 = add nuw nsw i32 %755, 1
  br i1 %756, label %754, label %758

758:                                              ; preds = %754
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %753) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %743) #10
  %759 = sitofp i32 %755 to double
  %760 = load double*, double** %44, align 8
  %761 = load double*, double** %45, align 8
  %762 = icmp ult double* %760, %761
  %763 = ptrtoint double* %761 to i64
  br i1 %762, label %764, label %768

764:                                              ; preds = %758
  store double %759, double* %760, align 8
  %765 = getelementptr inbounds double, double* %760, i64 1
  %766 = ptrtoint double* %765 to i64
  %767 = bitcast double** %44 to i64*
  store i64 %766, i64* %767, align 8
  br label %814

768:                                              ; preds = %758
  %769 = ptrtoint double* %760 to i64
  %770 = bitcast double** %44 to i64*
  %771 = bitcast %"class.std::__1::vector"* %0 to i64*
  %772 = load i64, i64* %771, align 8
  %773 = sub i64 %769, %772
  %774 = ashr exact i64 %773, 3
  %775 = add nsw i64 %774, 1
  %776 = icmp ugt i64 %775, 2305843009213693951
  br i1 %776, label %777, label %779

777:                                              ; preds = %768
  %778 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %778) #12
  unreachable

779:                                              ; preds = %768
  %780 = bitcast double** %45 to i64*
  %781 = sub i64 %763, %772
  %782 = ashr exact i64 %781, 3
  %783 = icmp ult i64 %782, 1152921504606846975
  br i1 %783, label %784, label %792

784:                                              ; preds = %779
  %785 = ashr exact i64 %781, 2
  %786 = icmp ult i64 %785, %775
  %787 = select i1 %786, i64 %775, i64 %785
  %788 = icmp eq i64 %787, 0
  br i1 %788, label %797, label %789

789:                                              ; preds = %784
  %790 = icmp ugt i64 %787, 2305843009213693951
  br i1 %790, label %791, label %792

791:                                              ; preds = %789
  call void @abort() #12
  unreachable

792:                                              ; preds = %789, %779
  %793 = phi i64 [ %787, %789 ], [ 2305843009213693951, %779 ]
  %794 = shl i64 %793, 3
  %795 = call i8* @_Znwm(i64 %794) #11
  %796 = bitcast i8* %795 to double*
  br label %797

797:                                              ; preds = %792, %784
  %798 = phi i64 [ %793, %792 ], [ 0, %784 ]
  %799 = phi i8* [ %795, %792 ], [ null, %784 ]
  %800 = phi double* [ %796, %792 ], [ null, %784 ]
  %801 = getelementptr inbounds double, double* %800, i64 %774
  %802 = getelementptr inbounds double, double* %800, i64 %798
  %803 = ptrtoint double* %802 to i64
  store double %759, double* %801, align 8
  %804 = getelementptr inbounds double, double* %801, i64 1
  %805 = ptrtoint double* %804 to i64
  %806 = ptrtoint double* %800 to i64
  %807 = icmp sgt i64 %773, 0
  br i1 %807, label %808, label %810

808:                                              ; preds = %797
  %809 = inttoptr i64 %772 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %799, i8* align 8 %809, i64 %773, i1 false) #10
  br label %810

810:                                              ; preds = %808, %797
  store i64 %806, i64* %771, align 8
  store i64 %805, i64* %770, align 8
  store i64 %803, i64* %780, align 8
  %811 = icmp eq i64 %772, 0
  br i1 %811, label %814, label %812

812:                                              ; preds = %810
  %813 = inttoptr i64 %772 to i8*
  call void @_ZdlPv(i8* %813) #11
  br label %814

814:                                              ; preds = %764, %810, %812
  %815 = load i8, i8* %741, align 1
  %816 = icmp slt i8 %815, 0
  br i1 %816, label %817, label %820

817:                                              ; preds = %814
  %818 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %819 = load i8*, i8** %818, align 8
  call void @_ZdlPv(i8* %819) #11
  br label %820

820:                                              ; preds = %814, %817
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %739) #10
  %821 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %821) #10
  %822 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %823 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %822, i64 0, i32 1, i32 0
  store i8 6, i8* %823, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %821, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i64 6, i1 false) #10
  %824 = getelementptr inbounds i8, i8* %821, i64 6
  store i8 0, i8* %824, align 2
  %825 = bitcast %"class.re2::StringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %825) #10
  %826 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %12, i64 0, i32 0
  %827 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %12, i64 0, i32 1
  %828 = load i8, i8* %60, align 1
  %829 = icmp slt i8 %828, 0
  %830 = load i8*, i8** %63, align 8
  %831 = select i1 %829, i8* %830, i8* %28
  store i8* %831, i8** %826, align 8
  %832 = load i64, i64* %537, align 8
  %833 = zext i8 %828 to i64
  %834 = select i1 %829, i64 %832, i64 %833
  store i64 %834, i64* %827, align 8
  %835 = bitcast %"class.re2::RE2"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %835) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %835, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #10
  br label %836

836:                                              ; preds = %836, %820
  %837 = phi i32 [ 0, %820 ], [ %839, %836 ]
  %838 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %12, %"class.re2::RE2"* nonnull dereferenceable(200) %13, %"class.re2::RE2::Arg"** null, i32 0) #10
  %839 = add nuw nsw i32 %837, 1
  br i1 %838, label %836, label %840

840:                                              ; preds = %836
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %835) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %825) #10
  %841 = sitofp i32 %837 to double
  %842 = load double*, double** %44, align 8
  %843 = load double*, double** %45, align 8
  %844 = icmp ult double* %842, %843
  %845 = ptrtoint double* %843 to i64
  br i1 %844, label %846, label %850

846:                                              ; preds = %840
  store double %841, double* %842, align 8
  %847 = getelementptr inbounds double, double* %842, i64 1
  %848 = ptrtoint double* %847 to i64
  %849 = bitcast double** %44 to i64*
  store i64 %848, i64* %849, align 8
  br label %896

850:                                              ; preds = %840
  %851 = ptrtoint double* %842 to i64
  %852 = bitcast double** %44 to i64*
  %853 = bitcast %"class.std::__1::vector"* %0 to i64*
  %854 = load i64, i64* %853, align 8
  %855 = sub i64 %851, %854
  %856 = ashr exact i64 %855, 3
  %857 = add nsw i64 %856, 1
  %858 = icmp ugt i64 %857, 2305843009213693951
  br i1 %858, label %859, label %861

859:                                              ; preds = %850
  %860 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %860) #12
  unreachable

861:                                              ; preds = %850
  %862 = bitcast double** %45 to i64*
  %863 = sub i64 %845, %854
  %864 = ashr exact i64 %863, 3
  %865 = icmp ult i64 %864, 1152921504606846975
  br i1 %865, label %866, label %874

866:                                              ; preds = %861
  %867 = ashr exact i64 %863, 2
  %868 = icmp ult i64 %867, %857
  %869 = select i1 %868, i64 %857, i64 %867
  %870 = icmp eq i64 %869, 0
  br i1 %870, label %879, label %871

871:                                              ; preds = %866
  %872 = icmp ugt i64 %869, 2305843009213693951
  br i1 %872, label %873, label %874

873:                                              ; preds = %871
  call void @abort() #12
  unreachable

874:                                              ; preds = %871, %861
  %875 = phi i64 [ %869, %871 ], [ 2305843009213693951, %861 ]
  %876 = shl i64 %875, 3
  %877 = call i8* @_Znwm(i64 %876) #11
  %878 = bitcast i8* %877 to double*
  br label %879

879:                                              ; preds = %874, %866
  %880 = phi i64 [ %875, %874 ], [ 0, %866 ]
  %881 = phi i8* [ %877, %874 ], [ null, %866 ]
  %882 = phi double* [ %878, %874 ], [ null, %866 ]
  %883 = getelementptr inbounds double, double* %882, i64 %856
  %884 = getelementptr inbounds double, double* %882, i64 %880
  %885 = ptrtoint double* %884 to i64
  store double %841, double* %883, align 8
  %886 = getelementptr inbounds double, double* %883, i64 1
  %887 = ptrtoint double* %886 to i64
  %888 = ptrtoint double* %882 to i64
  %889 = icmp sgt i64 %855, 0
  br i1 %889, label %890, label %892

890:                                              ; preds = %879
  %891 = inttoptr i64 %854 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %881, i8* align 8 %891, i64 %855, i1 false) #10
  br label %892

892:                                              ; preds = %890, %879
  store i64 %888, i64* %853, align 8
  store i64 %887, i64* %852, align 8
  store i64 %885, i64* %862, align 8
  %893 = icmp eq i64 %854, 0
  br i1 %893, label %896, label %894

894:                                              ; preds = %892
  %895 = inttoptr i64 %854 to i8*
  call void @_ZdlPv(i8* %895) #11
  br label %896

896:                                              ; preds = %846, %892, %894
  %897 = load i8, i8* %823, align 1
  %898 = icmp slt i8 %897, 0
  br i1 %898, label %899, label %902

899:                                              ; preds = %896
  %900 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %901 = load i8*, i8** %900, align 8
  call void @_ZdlPv(i8* %901) #11
  br label %902

902:                                              ; preds = %896, %899
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %821) #10
  %903 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %903) #10
  %904 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %905 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %904, i64 0, i32 1, i32 0
  store i8 3, i8* %905, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %903, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3, i1 false) #10
  %906 = getelementptr inbounds i8, i8* %903, i64 3
  store i8 0, i8* %906, align 1
  %907 = bitcast %"class.re2::StringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %907) #10
  %908 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %10, i64 0, i32 0
  %909 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %10, i64 0, i32 1
  %910 = load i8, i8* %60, align 1
  %911 = icmp slt i8 %910, 0
  %912 = load i8*, i8** %63, align 8
  %913 = select i1 %911, i8* %912, i8* %28
  store i8* %913, i8** %908, align 8
  %914 = load i64, i64* %537, align 8
  %915 = zext i8 %910 to i64
  %916 = select i1 %911, i64 %914, i64 %915
  store i64 %916, i64* %909, align 8
  %917 = bitcast %"class.re2::RE2"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %917) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %917, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26) #10
  br label %918

918:                                              ; preds = %918, %902
  %919 = phi i32 [ 0, %902 ], [ %921, %918 ]
  %920 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %10, %"class.re2::RE2"* nonnull dereferenceable(200) %11, %"class.re2::RE2::Arg"** null, i32 0) #10
  %921 = add nuw nsw i32 %919, 1
  br i1 %920, label %918, label %922

922:                                              ; preds = %918
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %917) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %907) #10
  %923 = sitofp i32 %919 to double
  %924 = load double*, double** %44, align 8
  %925 = load double*, double** %45, align 8
  %926 = icmp ult double* %924, %925
  %927 = ptrtoint double* %925 to i64
  br i1 %926, label %928, label %932

928:                                              ; preds = %922
  store double %923, double* %924, align 8
  %929 = getelementptr inbounds double, double* %924, i64 1
  %930 = ptrtoint double* %929 to i64
  %931 = bitcast double** %44 to i64*
  store i64 %930, i64* %931, align 8
  br label %978

932:                                              ; preds = %922
  %933 = ptrtoint double* %924 to i64
  %934 = bitcast double** %44 to i64*
  %935 = bitcast %"class.std::__1::vector"* %0 to i64*
  %936 = load i64, i64* %935, align 8
  %937 = sub i64 %933, %936
  %938 = ashr exact i64 %937, 3
  %939 = add nsw i64 %938, 1
  %940 = icmp ugt i64 %939, 2305843009213693951
  br i1 %940, label %941, label %943

941:                                              ; preds = %932
  %942 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %942) #12
  unreachable

943:                                              ; preds = %932
  %944 = bitcast double** %45 to i64*
  %945 = sub i64 %927, %936
  %946 = ashr exact i64 %945, 3
  %947 = icmp ult i64 %946, 1152921504606846975
  br i1 %947, label %948, label %956

948:                                              ; preds = %943
  %949 = ashr exact i64 %945, 2
  %950 = icmp ult i64 %949, %939
  %951 = select i1 %950, i64 %939, i64 %949
  %952 = icmp eq i64 %951, 0
  br i1 %952, label %961, label %953

953:                                              ; preds = %948
  %954 = icmp ugt i64 %951, 2305843009213693951
  br i1 %954, label %955, label %956

955:                                              ; preds = %953
  call void @abort() #12
  unreachable

956:                                              ; preds = %953, %943
  %957 = phi i64 [ %951, %953 ], [ 2305843009213693951, %943 ]
  %958 = shl i64 %957, 3
  %959 = call i8* @_Znwm(i64 %958) #11
  %960 = bitcast i8* %959 to double*
  br label %961

961:                                              ; preds = %956, %948
  %962 = phi i64 [ %957, %956 ], [ 0, %948 ]
  %963 = phi i8* [ %959, %956 ], [ null, %948 ]
  %964 = phi double* [ %960, %956 ], [ null, %948 ]
  %965 = getelementptr inbounds double, double* %964, i64 %938
  %966 = getelementptr inbounds double, double* %964, i64 %962
  %967 = ptrtoint double* %966 to i64
  store double %923, double* %965, align 8
  %968 = getelementptr inbounds double, double* %965, i64 1
  %969 = ptrtoint double* %968 to i64
  %970 = ptrtoint double* %964 to i64
  %971 = icmp sgt i64 %937, 0
  br i1 %971, label %972, label %974

972:                                              ; preds = %961
  %973 = inttoptr i64 %936 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %963, i8* align 8 %973, i64 %937, i1 false) #10
  br label %974

974:                                              ; preds = %972, %961
  store i64 %970, i64* %935, align 8
  store i64 %969, i64* %934, align 8
  store i64 %967, i64* %944, align 8
  %975 = icmp eq i64 %936, 0
  br i1 %975, label %978, label %976

976:                                              ; preds = %974
  %977 = inttoptr i64 %936 to i8*
  call void @_ZdlPv(i8* %977) #11
  br label %978

978:                                              ; preds = %928, %974, %976
  %979 = load i8, i8* %905, align 1
  %980 = icmp slt i8 %979, 0
  br i1 %980, label %981, label %984

981:                                              ; preds = %978
  %982 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %983 = load i8*, i8** %982, align 8
  call void @_ZdlPv(i8* %983) #11
  br label %984

984:                                              ; preds = %978, %981
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %903) #10
  %985 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %985) #10
  call fastcc void @_ZN13dom_distiller12_GLOBAL__N_114GetLastSegmentERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %27, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17)
  %986 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %987 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %986, i64 0, i32 1, i32 0
  %988 = load i8, i8* %987, align 1
  %989 = icmp slt i8 %988, 0
  %990 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %991 = load i64, i64* %990, align 8
  %992 = zext i8 %988 to i64
  %993 = select i1 %989, i64 %991, i64 %992
  %994 = uitofp i64 %993 to double
  %995 = load double*, double** %44, align 8
  %996 = load double*, double** %45, align 8
  %997 = icmp ult double* %995, %996
  %998 = ptrtoint double* %996 to i64
  br i1 %997, label %999, label %1003

999:                                              ; preds = %984
  store double %994, double* %995, align 8
  %1000 = getelementptr inbounds double, double* %995, i64 1
  %1001 = ptrtoint double* %1000 to i64
  %1002 = bitcast double** %44 to i64*
  store i64 %1001, i64* %1002, align 8
  br label %1049

1003:                                             ; preds = %984
  %1004 = ptrtoint double* %995 to i64
  %1005 = bitcast double** %44 to i64*
  %1006 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1007 = load i64, i64* %1006, align 8
  %1008 = sub i64 %1004, %1007
  %1009 = ashr exact i64 %1008, 3
  %1010 = add nsw i64 %1009, 1
  %1011 = icmp ugt i64 %1010, 2305843009213693951
  br i1 %1011, label %1012, label %1014

1012:                                             ; preds = %1003
  %1013 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1013) #12
  unreachable

1014:                                             ; preds = %1003
  %1015 = bitcast double** %45 to i64*
  %1016 = sub i64 %998, %1007
  %1017 = ashr exact i64 %1016, 3
  %1018 = icmp ult i64 %1017, 1152921504606846975
  br i1 %1018, label %1019, label %1027

1019:                                             ; preds = %1014
  %1020 = ashr exact i64 %1016, 2
  %1021 = icmp ult i64 %1020, %1010
  %1022 = select i1 %1021, i64 %1010, i64 %1020
  %1023 = icmp eq i64 %1022, 0
  br i1 %1023, label %1032, label %1024

1024:                                             ; preds = %1019
  %1025 = icmp ugt i64 %1022, 2305843009213693951
  br i1 %1025, label %1026, label %1027

1026:                                             ; preds = %1024
  call void @abort() #12
  unreachable

1027:                                             ; preds = %1024, %1014
  %1028 = phi i64 [ %1022, %1024 ], [ 2305843009213693951, %1014 ]
  %1029 = shl i64 %1028, 3
  %1030 = call i8* @_Znwm(i64 %1029) #11
  %1031 = bitcast i8* %1030 to double*
  br label %1032

1032:                                             ; preds = %1027, %1019
  %1033 = phi i64 [ %1028, %1027 ], [ 0, %1019 ]
  %1034 = phi i8* [ %1030, %1027 ], [ null, %1019 ]
  %1035 = phi double* [ %1031, %1027 ], [ null, %1019 ]
  %1036 = getelementptr inbounds double, double* %1035, i64 %1009
  %1037 = getelementptr inbounds double, double* %1035, i64 %1033
  %1038 = ptrtoint double* %1037 to i64
  store double %994, double* %1036, align 8
  %1039 = getelementptr inbounds double, double* %1036, i64 1
  %1040 = ptrtoint double* %1039 to i64
  %1041 = ptrtoint double* %1035 to i64
  %1042 = icmp sgt i64 %1008, 0
  br i1 %1042, label %1043, label %1045

1043:                                             ; preds = %1032
  %1044 = inttoptr i64 %1007 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1034, i8* align 8 %1044, i64 %1008, i1 false) #10
  br label %1045

1045:                                             ; preds = %1043, %1032
  store i64 %1041, i64* %1006, align 8
  store i64 %1040, i64* %1005, align 8
  store i64 %1038, i64* %1015, align 8
  %1046 = icmp eq i64 %1007, 0
  br i1 %1046, label %1049, label %1047

1047:                                             ; preds = %1045
  %1048 = inttoptr i64 %1007 to i8*
  call void @_ZdlPv(i8* %1048) #11
  br label %1049

1049:                                             ; preds = %999, %1045, %1047
  %1050 = load i8, i8* %987, align 1
  %1051 = icmp slt i8 %1050, 0
  br i1 %1051, label %1052, label %1055

1052:                                             ; preds = %1049
  %1053 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1054 = load i8*, i8** %1053, align 8
  call void @_ZdlPv(i8* %1054) #11
  br label %1055

1055:                                             ; preds = %1049, %1052
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %985) #10
  %1056 = load double*, double** %44, align 8
  %1057 = load double*, double** %45, align 8
  %1058 = icmp eq double* %1056, %1057
  %1059 = ptrtoint double* %1057 to i64
  br i1 %1058, label %1064, label %1060

1060:                                             ; preds = %1055
  store double %5, double* %1056, align 8
  %1061 = getelementptr inbounds double, double* %1056, i64 1
  %1062 = ptrtoint double* %1061 to i64
  %1063 = bitcast double** %44 to i64*
  store i64 %1062, i64* %1063, align 8
  br label %1112

1064:                                             ; preds = %1055
  %1065 = ptrtoint double* %1056 to i64
  %1066 = bitcast double** %44 to i64*
  %1067 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1068 = load i64, i64* %1067, align 8
  %1069 = sub i64 %1065, %1068
  %1070 = ashr exact i64 %1069, 3
  %1071 = add nsw i64 %1070, 1
  %1072 = icmp ugt i64 %1071, 2305843009213693951
  br i1 %1072, label %1073, label %1075

1073:                                             ; preds = %1064
  %1074 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1074) #12
  unreachable

1075:                                             ; preds = %1064
  %1076 = bitcast double** %45 to i64*
  %1077 = sub i64 %1059, %1068
  %1078 = ashr exact i64 %1077, 3
  %1079 = icmp ult i64 %1078, 1152921504606846975
  br i1 %1079, label %1080, label %1088

1080:                                             ; preds = %1075
  %1081 = ashr exact i64 %1077, 2
  %1082 = icmp ult i64 %1081, %1071
  %1083 = select i1 %1082, i64 %1071, i64 %1081
  %1084 = icmp eq i64 %1083, 0
  br i1 %1084, label %1093, label %1085

1085:                                             ; preds = %1080
  %1086 = icmp ugt i64 %1083, 2305843009213693951
  br i1 %1086, label %1087, label %1088

1087:                                             ; preds = %1085
  call void @abort() #12
  unreachable

1088:                                             ; preds = %1085, %1075
  %1089 = phi i64 [ %1083, %1085 ], [ 2305843009213693951, %1075 ]
  %1090 = shl i64 %1089, 3
  %1091 = call i8* @_Znwm(i64 %1090) #11
  %1092 = bitcast i8* %1091 to double*
  br label %1093

1093:                                             ; preds = %1088, %1080
  %1094 = phi i64 [ %1089, %1088 ], [ 0, %1080 ]
  %1095 = phi i8* [ %1091, %1088 ], [ null, %1080 ]
  %1096 = phi double* [ %1092, %1088 ], [ null, %1080 ]
  %1097 = getelementptr inbounds double, double* %1096, i64 %1070
  %1098 = getelementptr inbounds double, double* %1096, i64 %1094
  %1099 = ptrtoint double* %1098 to i64
  store double %5, double* %1097, align 8
  %1100 = getelementptr inbounds double, double* %1097, i64 1
  %1101 = ptrtoint double* %1100 to i64
  %1102 = ptrtoint double* %1096 to i64
  %1103 = icmp sgt i64 %1069, 0
  br i1 %1103, label %1104, label %1106

1104:                                             ; preds = %1093
  %1105 = inttoptr i64 %1068 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1095, i8* align 8 %1105, i64 %1069, i1 false) #10
  br label %1106

1106:                                             ; preds = %1104, %1093
  store i64 %1102, i64* %1067, align 8
  store i64 %1101, i64* %1066, align 8
  store i64 %1099, i64* %1076, align 8
  %1107 = icmp eq i64 %1068, 0
  br i1 %1107, label %1112, label %1108

1108:                                             ; preds = %1106
  %1109 = inttoptr i64 %1068 to i8*
  call void @_ZdlPv(i8* %1109) #11
  %1110 = load double*, double** %44, align 8
  %1111 = ptrtoint double* %1110 to i64
  br label %1112

1112:                                             ; preds = %1060, %1106, %1108
  %1113 = phi i64 [ %1062, %1060 ], [ %1101, %1106 ], [ %1111, %1108 ]
  %1114 = phi double* [ %1061, %1060 ], [ %1100, %1106 ], [ %1110, %1108 ]
  %1115 = load double*, double** %45, align 8
  %1116 = icmp eq double* %1114, %1115
  br i1 %1116, label %1121, label %1117

1117:                                             ; preds = %1112
  store double %4, double* %1114, align 8
  %1118 = getelementptr inbounds double, double* %1114, i64 1
  %1119 = ptrtoint double* %1118 to i64
  %1120 = bitcast double** %44 to i64*
  store i64 %1119, i64* %1120, align 8
  br label %1171

1121:                                             ; preds = %1112
  %1122 = ptrtoint double* %1115 to i64
  %1123 = bitcast double** %44 to i64*
  %1124 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1125 = load i64, i64* %1124, align 8
  %1126 = sub i64 %1122, %1125
  %1127 = ashr exact i64 %1126, 3
  %1128 = add nsw i64 %1127, 1
  %1129 = icmp ugt i64 %1128, 2305843009213693951
  br i1 %1129, label %1130, label %1132

1130:                                             ; preds = %1121
  %1131 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1131) #12
  unreachable

1132:                                             ; preds = %1121
  %1133 = bitcast double** %45 to i64*
  %1134 = icmp ult i64 %1127, 1152921504606846975
  br i1 %1134, label %1135, label %1143

1135:                                             ; preds = %1132
  %1136 = ashr exact i64 %1126, 2
  %1137 = icmp ult i64 %1136, %1128
  %1138 = select i1 %1137, i64 %1128, i64 %1136
  %1139 = icmp eq i64 %1138, 0
  br i1 %1139, label %1148, label %1140

1140:                                             ; preds = %1135
  %1141 = icmp ugt i64 %1138, 2305843009213693951
  br i1 %1141, label %1142, label %1143

1142:                                             ; preds = %1140
  call void @abort() #12
  unreachable

1143:                                             ; preds = %1140, %1132
  %1144 = phi i64 [ %1138, %1140 ], [ 2305843009213693951, %1132 ]
  %1145 = shl i64 %1144, 3
  %1146 = call i8* @_Znwm(i64 %1145) #11
  %1147 = bitcast i8* %1146 to double*
  br label %1148

1148:                                             ; preds = %1143, %1135
  %1149 = phi i64 [ %1144, %1143 ], [ 0, %1135 ]
  %1150 = phi double* [ %1147, %1143 ], [ null, %1135 ]
  %1151 = getelementptr inbounds double, double* %1150, i64 %1127
  %1152 = getelementptr inbounds double, double* %1150, i64 %1149
  %1153 = ptrtoint double* %1152 to i64
  store double %4, double* %1151, align 8
  %1154 = getelementptr inbounds double, double* %1151, i64 1
  %1155 = ptrtoint double* %1154 to i64
  %1156 = sub i64 %1113, %1125
  %1157 = ashr exact i64 %1156, 3
  %1158 = sub nsw i64 0, %1157
  %1159 = getelementptr inbounds double, double* %1151, i64 %1158
  %1160 = ptrtoint double* %1159 to i64
  %1161 = icmp sgt i64 %1156, 0
  br i1 %1161, label %1162, label %1165

1162:                                             ; preds = %1148
  %1163 = bitcast double* %1159 to i8*
  %1164 = inttoptr i64 %1125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1163, i8* align 8 %1164, i64 %1156, i1 false) #10
  br label %1165

1165:                                             ; preds = %1162, %1148
  store i64 %1160, i64* %1124, align 8
  store i64 %1155, i64* %1123, align 8
  store i64 %1153, i64* %1133, align 8
  %1166 = icmp eq i64 %1125, 0
  br i1 %1166, label %1171, label %1167

1167:                                             ; preds = %1165
  %1168 = inttoptr i64 %1125 to i8*
  call void @_ZdlPv(i8* %1168) #11
  %1169 = load double*, double** %44, align 8
  %1170 = ptrtoint double* %1169 to i64
  br label %1171

1171:                                             ; preds = %1117, %1165, %1167
  %1172 = phi i64 [ %1119, %1117 ], [ %1155, %1165 ], [ %1170, %1167 ]
  %1173 = phi double* [ %1118, %1117 ], [ %1154, %1165 ], [ %1169, %1167 ]
  %1174 = load double*, double** %45, align 8
  %1175 = icmp eq double* %1173, %1174
  br i1 %1175, label %1180, label %1176

1176:                                             ; preds = %1171
  store double %3, double* %1173, align 8
  %1177 = getelementptr inbounds double, double* %1173, i64 1
  %1178 = ptrtoint double* %1177 to i64
  %1179 = bitcast double** %44 to i64*
  store i64 %1178, i64* %1179, align 8
  br label %1230

1180:                                             ; preds = %1171
  %1181 = ptrtoint double* %1174 to i64
  %1182 = bitcast double** %44 to i64*
  %1183 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1184 = load i64, i64* %1183, align 8
  %1185 = sub i64 %1181, %1184
  %1186 = ashr exact i64 %1185, 3
  %1187 = add nsw i64 %1186, 1
  %1188 = icmp ugt i64 %1187, 2305843009213693951
  br i1 %1188, label %1189, label %1191

1189:                                             ; preds = %1180
  %1190 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1190) #12
  unreachable

1191:                                             ; preds = %1180
  %1192 = bitcast double** %45 to i64*
  %1193 = icmp ult i64 %1186, 1152921504606846975
  br i1 %1193, label %1194, label %1202

1194:                                             ; preds = %1191
  %1195 = ashr exact i64 %1185, 2
  %1196 = icmp ult i64 %1195, %1187
  %1197 = select i1 %1196, i64 %1187, i64 %1195
  %1198 = icmp eq i64 %1197, 0
  br i1 %1198, label %1207, label %1199

1199:                                             ; preds = %1194
  %1200 = icmp ugt i64 %1197, 2305843009213693951
  br i1 %1200, label %1201, label %1202

1201:                                             ; preds = %1199
  call void @abort() #12
  unreachable

1202:                                             ; preds = %1199, %1191
  %1203 = phi i64 [ %1197, %1199 ], [ 2305843009213693951, %1191 ]
  %1204 = shl i64 %1203, 3
  %1205 = call i8* @_Znwm(i64 %1204) #11
  %1206 = bitcast i8* %1205 to double*
  br label %1207

1207:                                             ; preds = %1202, %1194
  %1208 = phi i64 [ %1203, %1202 ], [ 0, %1194 ]
  %1209 = phi double* [ %1206, %1202 ], [ null, %1194 ]
  %1210 = getelementptr inbounds double, double* %1209, i64 %1186
  %1211 = getelementptr inbounds double, double* %1209, i64 %1208
  %1212 = ptrtoint double* %1211 to i64
  store double %3, double* %1210, align 8
  %1213 = getelementptr inbounds double, double* %1210, i64 1
  %1214 = ptrtoint double* %1213 to i64
  %1215 = sub i64 %1172, %1184
  %1216 = ashr exact i64 %1215, 3
  %1217 = sub nsw i64 0, %1216
  %1218 = getelementptr inbounds double, double* %1210, i64 %1217
  %1219 = ptrtoint double* %1218 to i64
  %1220 = icmp sgt i64 %1215, 0
  br i1 %1220, label %1221, label %1224

1221:                                             ; preds = %1207
  %1222 = bitcast double* %1218 to i8*
  %1223 = inttoptr i64 %1184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1222, i8* align 8 %1223, i64 %1215, i1 false) #10
  br label %1224

1224:                                             ; preds = %1221, %1207
  store i64 %1219, i64* %1183, align 8
  store i64 %1214, i64* %1182, align 8
  store i64 %1212, i64* %1192, align 8
  %1225 = icmp eq i64 %1184, 0
  br i1 %1225, label %1230, label %1226

1226:                                             ; preds = %1224
  %1227 = inttoptr i64 %1184 to i8*
  call void @_ZdlPv(i8* %1227) #11
  %1228 = load double*, double** %44, align 8
  %1229 = ptrtoint double* %1228 to i64
  br label %1230

1230:                                             ; preds = %1176, %1224, %1226
  %1231 = phi i64 [ %1178, %1176 ], [ %1214, %1224 ], [ %1229, %1226 ]
  %1232 = phi double* [ %1177, %1176 ], [ %1213, %1224 ], [ %1228, %1226 ]
  %1233 = fcmp ogt double %3, 1.000000e+00
  %1234 = select i1 %1233, double %3, double 1.000000e+00
  %1235 = fdiv double %4, %1234
  %1236 = load double*, double** %45, align 8
  %1237 = icmp ult double* %1232, %1236
  %1238 = ptrtoint double* %1236 to i64
  br i1 %1237, label %1239, label %1243

1239:                                             ; preds = %1230
  store double %1235, double* %1232, align 8
  %1240 = getelementptr inbounds double, double* %1232, i64 1
  %1241 = ptrtoint double* %1240 to i64
  %1242 = bitcast double** %44 to i64*
  store i64 %1241, i64* %1242, align 8
  br label %1295

1243:                                             ; preds = %1230
  %1244 = ptrtoint double* %1232 to i64
  %1245 = bitcast double** %44 to i64*
  %1246 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1247 = load i64, i64* %1246, align 8
  %1248 = sub i64 %1244, %1247
  %1249 = ashr exact i64 %1248, 3
  %1250 = add nsw i64 %1249, 1
  %1251 = icmp ugt i64 %1250, 2305843009213693951
  br i1 %1251, label %1252, label %1254

1252:                                             ; preds = %1243
  %1253 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1253) #12
  unreachable

1254:                                             ; preds = %1243
  %1255 = bitcast double** %45 to i64*
  %1256 = sub i64 %1238, %1247
  %1257 = ashr exact i64 %1256, 3
  %1258 = icmp ult i64 %1257, 1152921504606846975
  br i1 %1258, label %1259, label %1267

1259:                                             ; preds = %1254
  %1260 = ashr exact i64 %1256, 2
  %1261 = icmp ult i64 %1260, %1250
  %1262 = select i1 %1261, i64 %1250, i64 %1260
  %1263 = icmp eq i64 %1262, 0
  br i1 %1263, label %1272, label %1264

1264:                                             ; preds = %1259
  %1265 = icmp ugt i64 %1262, 2305843009213693951
  br i1 %1265, label %1266, label %1267

1266:                                             ; preds = %1264
  call void @abort() #12
  unreachable

1267:                                             ; preds = %1264, %1254
  %1268 = phi i64 [ %1262, %1264 ], [ 2305843009213693951, %1254 ]
  %1269 = shl i64 %1268, 3
  %1270 = call i8* @_Znwm(i64 %1269) #11
  %1271 = bitcast i8* %1270 to double*
  br label %1272

1272:                                             ; preds = %1267, %1259
  %1273 = phi i64 [ %1268, %1267 ], [ 0, %1259 ]
  %1274 = phi double* [ %1271, %1267 ], [ null, %1259 ]
  %1275 = getelementptr inbounds double, double* %1274, i64 %1249
  %1276 = getelementptr inbounds double, double* %1274, i64 %1273
  %1277 = ptrtoint double* %1276 to i64
  store double %1235, double* %1275, align 8
  %1278 = getelementptr inbounds double, double* %1275, i64 1
  %1279 = ptrtoint double* %1278 to i64
  %1280 = sub i64 %1231, %1247
  %1281 = ashr exact i64 %1280, 3
  %1282 = sub nsw i64 0, %1281
  %1283 = getelementptr inbounds double, double* %1275, i64 %1282
  %1284 = ptrtoint double* %1283 to i64
  %1285 = icmp sgt i64 %1280, 0
  br i1 %1285, label %1286, label %1289

1286:                                             ; preds = %1272
  %1287 = bitcast double* %1283 to i8*
  %1288 = inttoptr i64 %1247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1287, i8* align 8 %1288, i64 %1280, i1 false) #10
  br label %1289

1289:                                             ; preds = %1286, %1272
  store i64 %1284, i64* %1246, align 8
  store i64 %1279, i64* %1245, align 8
  store i64 %1277, i64* %1255, align 8
  %1290 = icmp eq i64 %1247, 0
  br i1 %1290, label %1295, label %1291

1291:                                             ; preds = %1289
  %1292 = inttoptr i64 %1247 to i8*
  call void @_ZdlPv(i8* %1292) #11
  %1293 = load double*, double** %44, align 8
  %1294 = ptrtoint double* %1293 to i64
  br label %1295

1295:                                             ; preds = %1239, %1289, %1291
  %1296 = phi i64 [ %1241, %1239 ], [ %1279, %1289 ], [ %1294, %1291 ]
  %1297 = phi double* [ %1240, %1239 ], [ %1278, %1289 ], [ %1293, %1291 ]
  %1298 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1299 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1298, i64 0, i32 1, i32 0
  %1300 = load i8, i8* %1299, align 1
  %1301 = icmp slt i8 %1300, 0
  %1302 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1303 = load i64, i64* %1302, align 8
  %1304 = zext i8 %1300 to i64
  %1305 = select i1 %1301, i64 %1303, i64 %1304
  %1306 = uitofp i64 %1305 to double
  %1307 = load double*, double** %45, align 8
  %1308 = icmp ult double* %1297, %1307
  %1309 = ptrtoint double* %1307 to i64
  br i1 %1308, label %1310, label %1314

1310:                                             ; preds = %1295
  store double %1306, double* %1297, align 8
  %1311 = getelementptr inbounds double, double* %1297, i64 1
  %1312 = ptrtoint double* %1311 to i64
  %1313 = bitcast double** %44 to i64*
  store i64 %1312, i64* %1313, align 8
  br label %1366

1314:                                             ; preds = %1295
  %1315 = ptrtoint double* %1297 to i64
  %1316 = bitcast double** %44 to i64*
  %1317 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1318 = load i64, i64* %1317, align 8
  %1319 = sub i64 %1315, %1318
  %1320 = ashr exact i64 %1319, 3
  %1321 = add nsw i64 %1320, 1
  %1322 = icmp ugt i64 %1321, 2305843009213693951
  br i1 %1322, label %1323, label %1325

1323:                                             ; preds = %1314
  %1324 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1324) #12
  unreachable

1325:                                             ; preds = %1314
  %1326 = bitcast double** %45 to i64*
  %1327 = sub i64 %1309, %1318
  %1328 = ashr exact i64 %1327, 3
  %1329 = icmp ult i64 %1328, 1152921504606846975
  br i1 %1329, label %1330, label %1338

1330:                                             ; preds = %1325
  %1331 = ashr exact i64 %1327, 2
  %1332 = icmp ult i64 %1331, %1321
  %1333 = select i1 %1332, i64 %1321, i64 %1331
  %1334 = icmp eq i64 %1333, 0
  br i1 %1334, label %1343, label %1335

1335:                                             ; preds = %1330
  %1336 = icmp ugt i64 %1333, 2305843009213693951
  br i1 %1336, label %1337, label %1338

1337:                                             ; preds = %1335
  call void @abort() #12
  unreachable

1338:                                             ; preds = %1335, %1325
  %1339 = phi i64 [ %1333, %1335 ], [ 2305843009213693951, %1325 ]
  %1340 = shl i64 %1339, 3
  %1341 = call i8* @_Znwm(i64 %1340) #11
  %1342 = bitcast i8* %1341 to double*
  br label %1343

1343:                                             ; preds = %1338, %1330
  %1344 = phi i64 [ %1339, %1338 ], [ 0, %1330 ]
  %1345 = phi double* [ %1342, %1338 ], [ null, %1330 ]
  %1346 = getelementptr inbounds double, double* %1345, i64 %1320
  %1347 = getelementptr inbounds double, double* %1345, i64 %1344
  %1348 = ptrtoint double* %1347 to i64
  store double %1306, double* %1346, align 8
  %1349 = getelementptr inbounds double, double* %1346, i64 1
  %1350 = ptrtoint double* %1349 to i64
  %1351 = sub i64 %1296, %1318
  %1352 = ashr exact i64 %1351, 3
  %1353 = sub nsw i64 0, %1352
  %1354 = getelementptr inbounds double, double* %1346, i64 %1353
  %1355 = ptrtoint double* %1354 to i64
  %1356 = icmp sgt i64 %1351, 0
  br i1 %1356, label %1357, label %1360

1357:                                             ; preds = %1343
  %1358 = bitcast double* %1354 to i8*
  %1359 = inttoptr i64 %1318 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1358, i8* align 8 %1359, i64 %1351, i1 false) #10
  br label %1360

1360:                                             ; preds = %1357, %1343
  store i64 %1355, i64* %1317, align 8
  store i64 %1350, i64* %1316, align 8
  store i64 %1348, i64* %1326, align 8
  %1361 = icmp eq i64 %1318, 0
  br i1 %1361, label %1366, label %1362

1362:                                             ; preds = %1360
  %1363 = inttoptr i64 %1318 to i8*
  call void @_ZdlPv(i8* %1363) #11
  %1364 = load double*, double** %44, align 8
  %1365 = ptrtoint double* %1364 to i64
  br label %1366

1366:                                             ; preds = %1310, %1360, %1362
  %1367 = phi i64 [ %1312, %1310 ], [ %1350, %1360 ], [ %1365, %1362 ]
  %1368 = phi double* [ %1311, %1310 ], [ %1349, %1360 ], [ %1364, %1362 ]
  %1369 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1370 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1369, i64 0, i32 1, i32 0
  %1371 = load i8, i8* %1370, align 1
  %1372 = icmp slt i8 %1371, 0
  %1373 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1374 = load i64, i64* %1373, align 8
  %1375 = zext i8 %1371 to i64
  %1376 = select i1 %1372, i64 %1374, i64 %1375
  %1377 = uitofp i64 %1376 to double
  %1378 = load double*, double** %45, align 8
  %1379 = icmp ult double* %1368, %1378
  %1380 = ptrtoint double* %1378 to i64
  br i1 %1379, label %1381, label %1385

1381:                                             ; preds = %1366
  store double %1377, double* %1368, align 8
  %1382 = getelementptr inbounds double, double* %1368, i64 1
  %1383 = ptrtoint double* %1382 to i64
  %1384 = bitcast double** %44 to i64*
  store i64 %1383, i64* %1384, align 8
  br label %1437

1385:                                             ; preds = %1366
  %1386 = ptrtoint double* %1368 to i64
  %1387 = bitcast double** %44 to i64*
  %1388 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1389 = load i64, i64* %1388, align 8
  %1390 = sub i64 %1386, %1389
  %1391 = ashr exact i64 %1390, 3
  %1392 = add nsw i64 %1391, 1
  %1393 = icmp ugt i64 %1392, 2305843009213693951
  br i1 %1393, label %1394, label %1396

1394:                                             ; preds = %1385
  %1395 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1395) #12
  unreachable

1396:                                             ; preds = %1385
  %1397 = bitcast double** %45 to i64*
  %1398 = sub i64 %1380, %1389
  %1399 = ashr exact i64 %1398, 3
  %1400 = icmp ult i64 %1399, 1152921504606846975
  br i1 %1400, label %1401, label %1409

1401:                                             ; preds = %1396
  %1402 = ashr exact i64 %1398, 2
  %1403 = icmp ult i64 %1402, %1392
  %1404 = select i1 %1403, i64 %1392, i64 %1402
  %1405 = icmp eq i64 %1404, 0
  br i1 %1405, label %1414, label %1406

1406:                                             ; preds = %1401
  %1407 = icmp ugt i64 %1404, 2305843009213693951
  br i1 %1407, label %1408, label %1409

1408:                                             ; preds = %1406
  call void @abort() #12
  unreachable

1409:                                             ; preds = %1406, %1396
  %1410 = phi i64 [ %1404, %1406 ], [ 2305843009213693951, %1396 ]
  %1411 = shl i64 %1410, 3
  %1412 = call i8* @_Znwm(i64 %1411) #11
  %1413 = bitcast i8* %1412 to double*
  br label %1414

1414:                                             ; preds = %1409, %1401
  %1415 = phi i64 [ %1410, %1409 ], [ 0, %1401 ]
  %1416 = phi double* [ %1413, %1409 ], [ null, %1401 ]
  %1417 = getelementptr inbounds double, double* %1416, i64 %1391
  %1418 = getelementptr inbounds double, double* %1416, i64 %1415
  %1419 = ptrtoint double* %1418 to i64
  store double %1377, double* %1417, align 8
  %1420 = getelementptr inbounds double, double* %1417, i64 1
  %1421 = ptrtoint double* %1420 to i64
  %1422 = sub i64 %1367, %1389
  %1423 = ashr exact i64 %1422, 3
  %1424 = sub nsw i64 0, %1423
  %1425 = getelementptr inbounds double, double* %1417, i64 %1424
  %1426 = ptrtoint double* %1425 to i64
  %1427 = icmp sgt i64 %1422, 0
  br i1 %1427, label %1428, label %1431

1428:                                             ; preds = %1414
  %1429 = bitcast double* %1425 to i8*
  %1430 = inttoptr i64 %1389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1429, i8* align 8 %1430, i64 %1422, i1 false) #10
  br label %1431

1431:                                             ; preds = %1428, %1414
  store i64 %1426, i64* %1388, align 8
  store i64 %1421, i64* %1387, align 8
  store i64 %1419, i64* %1397, align 8
  %1432 = icmp eq i64 %1389, 0
  br i1 %1432, label %1437, label %1433

1433:                                             ; preds = %1431
  %1434 = inttoptr i64 %1389 to i8*
  call void @_ZdlPv(i8* %1434) #11
  %1435 = load double*, double** %44, align 8
  %1436 = ptrtoint double* %1435 to i64
  br label %1437

1437:                                             ; preds = %1381, %1431, %1433
  %1438 = phi i64 [ %1383, %1381 ], [ %1421, %1431 ], [ %1436, %1433 ]
  %1439 = phi double* [ %1382, %1381 ], [ %1420, %1431 ], [ %1435, %1433 ]
  %1440 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1441 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1440, i64 0, i32 1, i32 0
  %1442 = load i8, i8* %1441, align 1
  %1443 = icmp slt i8 %1442, 0
  %1444 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1445 = load i64, i64* %1444, align 8
  %1446 = zext i8 %1442 to i64
  %1447 = select i1 %1443, i64 %1445, i64 %1446
  %1448 = uitofp i64 %1447 to double
  %1449 = load double*, double** %45, align 8
  %1450 = icmp ult double* %1439, %1449
  %1451 = ptrtoint double* %1449 to i64
  br i1 %1450, label %1452, label %1456

1452:                                             ; preds = %1437
  store double %1448, double* %1439, align 8
  %1453 = getelementptr inbounds double, double* %1439, i64 1
  %1454 = ptrtoint double* %1453 to i64
  %1455 = bitcast double** %44 to i64*
  store i64 %1454, i64* %1455, align 8
  br label %1508

1456:                                             ; preds = %1437
  %1457 = ptrtoint double* %1439 to i64
  %1458 = bitcast double** %44 to i64*
  %1459 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1460 = load i64, i64* %1459, align 8
  %1461 = sub i64 %1457, %1460
  %1462 = ashr exact i64 %1461, 3
  %1463 = add nsw i64 %1462, 1
  %1464 = icmp ugt i64 %1463, 2305843009213693951
  br i1 %1464, label %1465, label %1467

1465:                                             ; preds = %1456
  %1466 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1466) #12
  unreachable

1467:                                             ; preds = %1456
  %1468 = bitcast double** %45 to i64*
  %1469 = sub i64 %1451, %1460
  %1470 = ashr exact i64 %1469, 3
  %1471 = icmp ult i64 %1470, 1152921504606846975
  br i1 %1471, label %1472, label %1480

1472:                                             ; preds = %1467
  %1473 = ashr exact i64 %1469, 2
  %1474 = icmp ult i64 %1473, %1463
  %1475 = select i1 %1474, i64 %1463, i64 %1473
  %1476 = icmp eq i64 %1475, 0
  br i1 %1476, label %1485, label %1477

1477:                                             ; preds = %1472
  %1478 = icmp ugt i64 %1475, 2305843009213693951
  br i1 %1478, label %1479, label %1480

1479:                                             ; preds = %1477
  call void @abort() #12
  unreachable

1480:                                             ; preds = %1477, %1467
  %1481 = phi i64 [ %1475, %1477 ], [ 2305843009213693951, %1467 ]
  %1482 = shl i64 %1481, 3
  %1483 = call i8* @_Znwm(i64 %1482) #11
  %1484 = bitcast i8* %1483 to double*
  br label %1485

1485:                                             ; preds = %1480, %1472
  %1486 = phi i64 [ %1481, %1480 ], [ 0, %1472 ]
  %1487 = phi double* [ %1484, %1480 ], [ null, %1472 ]
  %1488 = getelementptr inbounds double, double* %1487, i64 %1462
  %1489 = getelementptr inbounds double, double* %1487, i64 %1486
  %1490 = ptrtoint double* %1489 to i64
  store double %1448, double* %1488, align 8
  %1491 = getelementptr inbounds double, double* %1488, i64 1
  %1492 = ptrtoint double* %1491 to i64
  %1493 = sub i64 %1438, %1460
  %1494 = ashr exact i64 %1493, 3
  %1495 = sub nsw i64 0, %1494
  %1496 = getelementptr inbounds double, double* %1488, i64 %1495
  %1497 = ptrtoint double* %1496 to i64
  %1498 = icmp sgt i64 %1493, 0
  br i1 %1498, label %1499, label %1502

1499:                                             ; preds = %1485
  %1500 = bitcast double* %1496 to i8*
  %1501 = inttoptr i64 %1460 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1500, i8* align 8 %1501, i64 %1493, i1 false) #10
  br label %1502

1502:                                             ; preds = %1499, %1485
  store i64 %1497, i64* %1459, align 8
  store i64 %1492, i64* %1458, align 8
  store i64 %1490, i64* %1468, align 8
  %1503 = icmp eq i64 %1460, 0
  br i1 %1503, label %1508, label %1504

1504:                                             ; preds = %1502
  %1505 = inttoptr i64 %1460 to i8*
  call void @_ZdlPv(i8* %1505) #11
  %1506 = load double*, double** %44, align 8
  %1507 = ptrtoint double* %1506 to i64
  br label %1508

1508:                                             ; preds = %1452, %1502, %1504
  %1509 = phi i64 [ %1454, %1452 ], [ %1492, %1502 ], [ %1507, %1504 ]
  %1510 = phi double* [ %1453, %1452 ], [ %1491, %1502 ], [ %1506, %1504 ]
  %1511 = load i8, i8* %1299, align 1
  %1512 = icmp slt i8 %1511, 0
  %1513 = load i64, i64* %1302, align 8
  %1514 = zext i8 %1511 to i64
  %1515 = select i1 %1512, i64 %1513, i64 %1514
  %1516 = uitofp i64 %1515 to double
  %1517 = load i8, i8* %1441, align 1
  %1518 = icmp slt i8 %1517, 0
  %1519 = load i64, i64* %1444, align 8
  %1520 = zext i8 %1517 to i64
  %1521 = select i1 %1518, i64 %1519, i64 %1520
  %1522 = uitofp i64 %1521 to double
  %1523 = fcmp ogt double %1522, 1.000000e+00
  %1524 = select i1 %1523, double %1522, double 1.000000e+00
  %1525 = fdiv double %1516, %1524
  %1526 = load double*, double** %45, align 8
  %1527 = icmp ult double* %1510, %1526
  %1528 = ptrtoint double* %1526 to i64
  br i1 %1527, label %1529, label %1533

1529:                                             ; preds = %1508
  store double %1525, double* %1510, align 8
  %1530 = getelementptr inbounds double, double* %1510, i64 1
  %1531 = ptrtoint double* %1530 to i64
  %1532 = bitcast double** %44 to i64*
  store i64 %1531, i64* %1532, align 8
  br label %1585

1533:                                             ; preds = %1508
  %1534 = ptrtoint double* %1510 to i64
  %1535 = bitcast double** %44 to i64*
  %1536 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1537 = load i64, i64* %1536, align 8
  %1538 = sub i64 %1534, %1537
  %1539 = ashr exact i64 %1538, 3
  %1540 = add nsw i64 %1539, 1
  %1541 = icmp ugt i64 %1540, 2305843009213693951
  br i1 %1541, label %1542, label %1544

1542:                                             ; preds = %1533
  %1543 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1543) #12
  unreachable

1544:                                             ; preds = %1533
  %1545 = bitcast double** %45 to i64*
  %1546 = sub i64 %1528, %1537
  %1547 = ashr exact i64 %1546, 3
  %1548 = icmp ult i64 %1547, 1152921504606846975
  br i1 %1548, label %1549, label %1557

1549:                                             ; preds = %1544
  %1550 = ashr exact i64 %1546, 2
  %1551 = icmp ult i64 %1550, %1540
  %1552 = select i1 %1551, i64 %1540, i64 %1550
  %1553 = icmp eq i64 %1552, 0
  br i1 %1553, label %1562, label %1554

1554:                                             ; preds = %1549
  %1555 = icmp ugt i64 %1552, 2305843009213693951
  br i1 %1555, label %1556, label %1557

1556:                                             ; preds = %1554
  call void @abort() #12
  unreachable

1557:                                             ; preds = %1554, %1544
  %1558 = phi i64 [ %1552, %1554 ], [ 2305843009213693951, %1544 ]
  %1559 = shl i64 %1558, 3
  %1560 = call i8* @_Znwm(i64 %1559) #11
  %1561 = bitcast i8* %1560 to double*
  br label %1562

1562:                                             ; preds = %1557, %1549
  %1563 = phi i64 [ %1558, %1557 ], [ 0, %1549 ]
  %1564 = phi double* [ %1561, %1557 ], [ null, %1549 ]
  %1565 = getelementptr inbounds double, double* %1564, i64 %1539
  %1566 = getelementptr inbounds double, double* %1564, i64 %1563
  %1567 = ptrtoint double* %1566 to i64
  store double %1525, double* %1565, align 8
  %1568 = getelementptr inbounds double, double* %1565, i64 1
  %1569 = ptrtoint double* %1568 to i64
  %1570 = sub i64 %1509, %1537
  %1571 = ashr exact i64 %1570, 3
  %1572 = sub nsw i64 0, %1571
  %1573 = getelementptr inbounds double, double* %1565, i64 %1572
  %1574 = ptrtoint double* %1573 to i64
  %1575 = icmp sgt i64 %1570, 0
  br i1 %1575, label %1576, label %1579

1576:                                             ; preds = %1562
  %1577 = bitcast double* %1573 to i8*
  %1578 = inttoptr i64 %1537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1577, i8* align 8 %1578, i64 %1570, i1 false) #10
  br label %1579

1579:                                             ; preds = %1576, %1562
  store i64 %1574, i64* %1536, align 8
  store i64 %1569, i64* %1535, align 8
  store i64 %1567, i64* %1545, align 8
  %1580 = icmp eq i64 %1537, 0
  br i1 %1580, label %1585, label %1581

1581:                                             ; preds = %1579
  %1582 = inttoptr i64 %1537 to i8*
  call void @_ZdlPv(i8* %1582) #11
  %1583 = load double*, double** %44, align 8
  %1584 = ptrtoint double* %1583 to i64
  br label %1585

1585:                                             ; preds = %1529, %1579, %1581
  %1586 = phi i64 [ %1531, %1529 ], [ %1569, %1579 ], [ %1584, %1581 ]
  %1587 = phi double* [ %1530, %1529 ], [ %1568, %1579 ], [ %1583, %1581 ]
  %1588 = load i8, i8* %1370, align 1
  %1589 = icmp slt i8 %1588, 0
  %1590 = load i64, i64* %1373, align 8
  %1591 = zext i8 %1588 to i64
  %1592 = select i1 %1589, i64 %1590, i64 %1591
  %1593 = uitofp i64 %1592 to double
  %1594 = load i8, i8* %1441, align 1
  %1595 = icmp slt i8 %1594, 0
  %1596 = load i64, i64* %1444, align 8
  %1597 = zext i8 %1594 to i64
  %1598 = select i1 %1595, i64 %1596, i64 %1597
  %1599 = uitofp i64 %1598 to double
  %1600 = fcmp ogt double %1599, 1.000000e+00
  %1601 = select i1 %1600, double %1599, double 1.000000e+00
  %1602 = fdiv double %1593, %1601
  %1603 = load double*, double** %45, align 8
  %1604 = icmp ult double* %1587, %1603
  %1605 = ptrtoint double* %1603 to i64
  br i1 %1604, label %1606, label %1610

1606:                                             ; preds = %1585
  store double %1602, double* %1587, align 8
  %1607 = getelementptr inbounds double, double* %1587, i64 1
  %1608 = ptrtoint double* %1607 to i64
  %1609 = bitcast double** %44 to i64*
  store i64 %1608, i64* %1609, align 8
  br label %1662

1610:                                             ; preds = %1585
  %1611 = ptrtoint double* %1587 to i64
  %1612 = bitcast double** %44 to i64*
  %1613 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1614 = load i64, i64* %1613, align 8
  %1615 = sub i64 %1611, %1614
  %1616 = ashr exact i64 %1615, 3
  %1617 = add nsw i64 %1616, 1
  %1618 = icmp ugt i64 %1617, 2305843009213693951
  br i1 %1618, label %1619, label %1621

1619:                                             ; preds = %1610
  %1620 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1620) #12
  unreachable

1621:                                             ; preds = %1610
  %1622 = bitcast double** %45 to i64*
  %1623 = sub i64 %1605, %1614
  %1624 = ashr exact i64 %1623, 3
  %1625 = icmp ult i64 %1624, 1152921504606846975
  br i1 %1625, label %1626, label %1634

1626:                                             ; preds = %1621
  %1627 = ashr exact i64 %1623, 2
  %1628 = icmp ult i64 %1627, %1617
  %1629 = select i1 %1628, i64 %1617, i64 %1627
  %1630 = icmp eq i64 %1629, 0
  br i1 %1630, label %1639, label %1631

1631:                                             ; preds = %1626
  %1632 = icmp ugt i64 %1629, 2305843009213693951
  br i1 %1632, label %1633, label %1634

1633:                                             ; preds = %1631
  call void @abort() #12
  unreachable

1634:                                             ; preds = %1631, %1621
  %1635 = phi i64 [ %1629, %1631 ], [ 2305843009213693951, %1621 ]
  %1636 = shl i64 %1635, 3
  %1637 = call i8* @_Znwm(i64 %1636) #11
  %1638 = bitcast i8* %1637 to double*
  br label %1639

1639:                                             ; preds = %1634, %1626
  %1640 = phi i64 [ %1635, %1634 ], [ 0, %1626 ]
  %1641 = phi double* [ %1638, %1634 ], [ null, %1626 ]
  %1642 = getelementptr inbounds double, double* %1641, i64 %1616
  %1643 = getelementptr inbounds double, double* %1641, i64 %1640
  %1644 = ptrtoint double* %1643 to i64
  store double %1602, double* %1642, align 8
  %1645 = getelementptr inbounds double, double* %1642, i64 1
  %1646 = ptrtoint double* %1645 to i64
  %1647 = sub i64 %1586, %1614
  %1648 = ashr exact i64 %1647, 3
  %1649 = sub nsw i64 0, %1648
  %1650 = getelementptr inbounds double, double* %1642, i64 %1649
  %1651 = ptrtoint double* %1650 to i64
  %1652 = icmp sgt i64 %1647, 0
  br i1 %1652, label %1653, label %1656

1653:                                             ; preds = %1639
  %1654 = bitcast double* %1650 to i8*
  %1655 = inttoptr i64 %1614 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1654, i8* align 8 %1655, i64 %1647, i1 false) #10
  br label %1656

1656:                                             ; preds = %1653, %1639
  store i64 %1651, i64* %1613, align 8
  store i64 %1646, i64* %1612, align 8
  store i64 %1644, i64* %1622, align 8
  %1657 = icmp eq i64 %1614, 0
  br i1 %1657, label %1662, label %1658

1658:                                             ; preds = %1656
  %1659 = inttoptr i64 %1614 to i8*
  call void @_ZdlPv(i8* %1659) #11
  %1660 = load double*, double** %44, align 8
  %1661 = ptrtoint double* %1660 to i64
  br label %1662

1662:                                             ; preds = %1606, %1656, %1658
  %1663 = phi i64 [ %1608, %1606 ], [ %1646, %1656 ], [ %1661, %1658 ]
  %1664 = phi double* [ %1607, %1606 ], [ %1645, %1656 ], [ %1660, %1658 ]
  %1665 = load i8, i8* %1299, align 1
  %1666 = icmp slt i8 %1665, 0
  %1667 = load i64, i64* %1302, align 8
  %1668 = zext i8 %1665 to i64
  %1669 = select i1 %1666, i64 %1667, i64 %1668
  %1670 = uitofp i64 %1669 to double
  %1671 = load i8, i8* %1370, align 1
  %1672 = icmp slt i8 %1671, 0
  %1673 = load i64, i64* %1373, align 8
  %1674 = zext i8 %1671 to i64
  %1675 = select i1 %1672, i64 %1673, i64 %1674
  %1676 = uitofp i64 %1675 to double
  %1677 = fcmp ogt double %1676, 1.000000e+00
  %1678 = select i1 %1677, double %1676, double 1.000000e+00
  %1679 = fdiv double %1670, %1678
  %1680 = load double*, double** %45, align 8
  %1681 = icmp ult double* %1664, %1680
  %1682 = ptrtoint double* %1680 to i64
  br i1 %1681, label %1683, label %1687

1683:                                             ; preds = %1662
  store double %1679, double* %1664, align 8
  %1684 = getelementptr inbounds double, double* %1664, i64 1
  %1685 = ptrtoint double* %1684 to i64
  %1686 = bitcast double** %44 to i64*
  store i64 %1685, i64* %1686, align 8
  br label %1739

1687:                                             ; preds = %1662
  %1688 = ptrtoint double* %1664 to i64
  %1689 = bitcast double** %44 to i64*
  %1690 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1691 = load i64, i64* %1690, align 8
  %1692 = sub i64 %1688, %1691
  %1693 = ashr exact i64 %1692, 3
  %1694 = add nsw i64 %1693, 1
  %1695 = icmp ugt i64 %1694, 2305843009213693951
  br i1 %1695, label %1696, label %1698

1696:                                             ; preds = %1687
  %1697 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1697) #12
  unreachable

1698:                                             ; preds = %1687
  %1699 = bitcast double** %45 to i64*
  %1700 = sub i64 %1682, %1691
  %1701 = ashr exact i64 %1700, 3
  %1702 = icmp ult i64 %1701, 1152921504606846975
  br i1 %1702, label %1703, label %1711

1703:                                             ; preds = %1698
  %1704 = ashr exact i64 %1700, 2
  %1705 = icmp ult i64 %1704, %1694
  %1706 = select i1 %1705, i64 %1694, i64 %1704
  %1707 = icmp eq i64 %1706, 0
  br i1 %1707, label %1716, label %1708

1708:                                             ; preds = %1703
  %1709 = icmp ugt i64 %1706, 2305843009213693951
  br i1 %1709, label %1710, label %1711

1710:                                             ; preds = %1708
  call void @abort() #12
  unreachable

1711:                                             ; preds = %1708, %1698
  %1712 = phi i64 [ %1706, %1708 ], [ 2305843009213693951, %1698 ]
  %1713 = shl i64 %1712, 3
  %1714 = call i8* @_Znwm(i64 %1713) #11
  %1715 = bitcast i8* %1714 to double*
  br label %1716

1716:                                             ; preds = %1711, %1703
  %1717 = phi i64 [ %1712, %1711 ], [ 0, %1703 ]
  %1718 = phi double* [ %1715, %1711 ], [ null, %1703 ]
  %1719 = getelementptr inbounds double, double* %1718, i64 %1693
  %1720 = getelementptr inbounds double, double* %1718, i64 %1717
  %1721 = ptrtoint double* %1720 to i64
  store double %1679, double* %1719, align 8
  %1722 = getelementptr inbounds double, double* %1719, i64 1
  %1723 = ptrtoint double* %1722 to i64
  %1724 = sub i64 %1663, %1691
  %1725 = ashr exact i64 %1724, 3
  %1726 = sub nsw i64 0, %1725
  %1727 = getelementptr inbounds double, double* %1719, i64 %1726
  %1728 = ptrtoint double* %1727 to i64
  %1729 = icmp sgt i64 %1724, 0
  br i1 %1729, label %1730, label %1733

1730:                                             ; preds = %1716
  %1731 = bitcast double* %1727 to i8*
  %1732 = inttoptr i64 %1691 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1731, i8* align 8 %1732, i64 %1724, i1 false) #10
  br label %1733

1733:                                             ; preds = %1730, %1716
  store i64 %1728, i64* %1690, align 8
  store i64 %1723, i64* %1689, align 8
  store i64 %1721, i64* %1699, align 8
  %1734 = icmp eq i64 %1691, 0
  br i1 %1734, label %1739, label %1735

1735:                                             ; preds = %1733
  %1736 = inttoptr i64 %1691 to i8*
  call void @_ZdlPv(i8* %1736) #11
  %1737 = load double*, double** %44, align 8
  %1738 = ptrtoint double* %1737 to i64
  br label %1739

1739:                                             ; preds = %1683, %1733, %1735
  %1740 = phi i64 [ %1685, %1683 ], [ %1723, %1733 ], [ %1738, %1735 ]
  %1741 = phi double* [ %1684, %1683 ], [ %1722, %1733 ], [ %1737, %1735 ]
  %1742 = sitofp i32 %41 to double
  %1743 = load double*, double** %45, align 8
  %1744 = icmp ult double* %1741, %1743
  %1745 = ptrtoint double* %1743 to i64
  br i1 %1744, label %1746, label %1750

1746:                                             ; preds = %1739
  store double %1742, double* %1741, align 8
  %1747 = getelementptr inbounds double, double* %1741, i64 1
  %1748 = ptrtoint double* %1747 to i64
  %1749 = bitcast double** %44 to i64*
  store i64 %1748, i64* %1749, align 8
  br label %1802

1750:                                             ; preds = %1739
  %1751 = ptrtoint double* %1741 to i64
  %1752 = bitcast double** %44 to i64*
  %1753 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1754 = load i64, i64* %1753, align 8
  %1755 = sub i64 %1751, %1754
  %1756 = ashr exact i64 %1755, 3
  %1757 = add nsw i64 %1756, 1
  %1758 = icmp ugt i64 %1757, 2305843009213693951
  br i1 %1758, label %1759, label %1761

1759:                                             ; preds = %1750
  %1760 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1760) #12
  unreachable

1761:                                             ; preds = %1750
  %1762 = bitcast double** %45 to i64*
  %1763 = sub i64 %1745, %1754
  %1764 = ashr exact i64 %1763, 3
  %1765 = icmp ult i64 %1764, 1152921504606846975
  br i1 %1765, label %1766, label %1774

1766:                                             ; preds = %1761
  %1767 = ashr exact i64 %1763, 2
  %1768 = icmp ult i64 %1767, %1757
  %1769 = select i1 %1768, i64 %1757, i64 %1767
  %1770 = icmp eq i64 %1769, 0
  br i1 %1770, label %1779, label %1771

1771:                                             ; preds = %1766
  %1772 = icmp ugt i64 %1769, 2305843009213693951
  br i1 %1772, label %1773, label %1774

1773:                                             ; preds = %1771
  call void @abort() #12
  unreachable

1774:                                             ; preds = %1771, %1761
  %1775 = phi i64 [ %1769, %1771 ], [ 2305843009213693951, %1761 ]
  %1776 = shl i64 %1775, 3
  %1777 = call i8* @_Znwm(i64 %1776) #11
  %1778 = bitcast i8* %1777 to double*
  br label %1779

1779:                                             ; preds = %1774, %1766
  %1780 = phi i64 [ %1775, %1774 ], [ 0, %1766 ]
  %1781 = phi double* [ %1778, %1774 ], [ null, %1766 ]
  %1782 = getelementptr inbounds double, double* %1781, i64 %1756
  %1783 = getelementptr inbounds double, double* %1781, i64 %1780
  %1784 = ptrtoint double* %1783 to i64
  store double %1742, double* %1782, align 8
  %1785 = getelementptr inbounds double, double* %1782, i64 1
  %1786 = ptrtoint double* %1785 to i64
  %1787 = sub i64 %1740, %1754
  %1788 = ashr exact i64 %1787, 3
  %1789 = sub nsw i64 0, %1788
  %1790 = getelementptr inbounds double, double* %1782, i64 %1789
  %1791 = ptrtoint double* %1790 to i64
  %1792 = icmp sgt i64 %1787, 0
  br i1 %1792, label %1793, label %1796

1793:                                             ; preds = %1779
  %1794 = bitcast double* %1790 to i8*
  %1795 = inttoptr i64 %1754 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1794, i8* align 8 %1795, i64 %1787, i1 false) #10
  br label %1796

1796:                                             ; preds = %1793, %1779
  store i64 %1791, i64* %1753, align 8
  store i64 %1786, i64* %1752, align 8
  store i64 %1784, i64* %1762, align 8
  %1797 = icmp eq i64 %1754, 0
  br i1 %1797, label %1802, label %1798

1798:                                             ; preds = %1796
  %1799 = inttoptr i64 %1754 to i8*
  call void @_ZdlPv(i8* %1799) #11
  %1800 = load double*, double** %44, align 8
  %1801 = ptrtoint double* %1800 to i64
  br label %1802

1802:                                             ; preds = %1746, %1796, %1798
  %1803 = phi i64 [ %1748, %1746 ], [ %1786, %1796 ], [ %1801, %1798 ]
  %1804 = phi double* [ %1747, %1746 ], [ %1785, %1796 ], [ %1800, %1798 ]
  %1805 = sitofp i32 %42 to double
  %1806 = load double*, double** %45, align 8
  %1807 = icmp ult double* %1804, %1806
  %1808 = ptrtoint double* %1806 to i64
  br i1 %1807, label %1809, label %1813

1809:                                             ; preds = %1802
  store double %1805, double* %1804, align 8
  %1810 = getelementptr inbounds double, double* %1804, i64 1
  %1811 = ptrtoint double* %1810 to i64
  %1812 = bitcast double** %44 to i64*
  store i64 %1811, i64* %1812, align 8
  br label %1865

1813:                                             ; preds = %1802
  %1814 = ptrtoint double* %1804 to i64
  %1815 = bitcast double** %44 to i64*
  %1816 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1817 = load i64, i64* %1816, align 8
  %1818 = sub i64 %1814, %1817
  %1819 = ashr exact i64 %1818, 3
  %1820 = add nsw i64 %1819, 1
  %1821 = icmp ugt i64 %1820, 2305843009213693951
  br i1 %1821, label %1822, label %1824

1822:                                             ; preds = %1813
  %1823 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1823) #12
  unreachable

1824:                                             ; preds = %1813
  %1825 = bitcast double** %45 to i64*
  %1826 = sub i64 %1808, %1817
  %1827 = ashr exact i64 %1826, 3
  %1828 = icmp ult i64 %1827, 1152921504606846975
  br i1 %1828, label %1829, label %1837

1829:                                             ; preds = %1824
  %1830 = ashr exact i64 %1826, 2
  %1831 = icmp ult i64 %1830, %1820
  %1832 = select i1 %1831, i64 %1820, i64 %1830
  %1833 = icmp eq i64 %1832, 0
  br i1 %1833, label %1842, label %1834

1834:                                             ; preds = %1829
  %1835 = icmp ugt i64 %1832, 2305843009213693951
  br i1 %1835, label %1836, label %1837

1836:                                             ; preds = %1834
  call void @abort() #12
  unreachable

1837:                                             ; preds = %1834, %1824
  %1838 = phi i64 [ %1832, %1834 ], [ 2305843009213693951, %1824 ]
  %1839 = shl i64 %1838, 3
  %1840 = call i8* @_Znwm(i64 %1839) #11
  %1841 = bitcast i8* %1840 to double*
  br label %1842

1842:                                             ; preds = %1837, %1829
  %1843 = phi i64 [ %1838, %1837 ], [ 0, %1829 ]
  %1844 = phi double* [ %1841, %1837 ], [ null, %1829 ]
  %1845 = getelementptr inbounds double, double* %1844, i64 %1819
  %1846 = getelementptr inbounds double, double* %1844, i64 %1843
  %1847 = ptrtoint double* %1846 to i64
  store double %1805, double* %1845, align 8
  %1848 = getelementptr inbounds double, double* %1845, i64 1
  %1849 = ptrtoint double* %1848 to i64
  %1850 = sub i64 %1803, %1817
  %1851 = ashr exact i64 %1850, 3
  %1852 = sub nsw i64 0, %1851
  %1853 = getelementptr inbounds double, double* %1845, i64 %1852
  %1854 = ptrtoint double* %1853 to i64
  %1855 = icmp sgt i64 %1850, 0
  br i1 %1855, label %1856, label %1859

1856:                                             ; preds = %1842
  %1857 = bitcast double* %1853 to i8*
  %1858 = inttoptr i64 %1817 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1857, i8* align 8 %1858, i64 %1850, i1 false) #10
  br label %1859

1859:                                             ; preds = %1856, %1842
  store i64 %1854, i64* %1816, align 8
  store i64 %1849, i64* %1815, align 8
  store i64 %1847, i64* %1825, align 8
  %1860 = icmp eq i64 %1817, 0
  br i1 %1860, label %1865, label %1861

1861:                                             ; preds = %1859
  %1862 = inttoptr i64 %1817 to i8*
  call void @_ZdlPv(i8* %1862) #11
  %1863 = load double*, double** %44, align 8
  %1864 = ptrtoint double* %1863 to i64
  br label %1865

1865:                                             ; preds = %1809, %1859, %1861
  %1866 = phi i64 [ %1811, %1809 ], [ %1849, %1859 ], [ %1864, %1861 ]
  %1867 = phi double* [ %1810, %1809 ], [ %1848, %1859 ], [ %1863, %1861 ]
  %1868 = sitofp i32 %43 to double
  %1869 = load double*, double** %45, align 8
  %1870 = icmp ult double* %1867, %1869
  %1871 = ptrtoint double* %1869 to i64
  br i1 %1870, label %1872, label %1876

1872:                                             ; preds = %1865
  store double %1868, double* %1867, align 8
  %1873 = getelementptr inbounds double, double* %1867, i64 1
  %1874 = ptrtoint double* %1873 to i64
  %1875 = bitcast double** %44 to i64*
  store i64 %1874, i64* %1875, align 8
  br label %1928

1876:                                             ; preds = %1865
  %1877 = ptrtoint double* %1867 to i64
  %1878 = bitcast double** %44 to i64*
  %1879 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1880 = load i64, i64* %1879, align 8
  %1881 = sub i64 %1877, %1880
  %1882 = ashr exact i64 %1881, 3
  %1883 = add nsw i64 %1882, 1
  %1884 = icmp ugt i64 %1883, 2305843009213693951
  br i1 %1884, label %1885, label %1887

1885:                                             ; preds = %1876
  %1886 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1886) #12
  unreachable

1887:                                             ; preds = %1876
  %1888 = bitcast double** %45 to i64*
  %1889 = sub i64 %1871, %1880
  %1890 = ashr exact i64 %1889, 3
  %1891 = icmp ult i64 %1890, 1152921504606846975
  br i1 %1891, label %1892, label %1900

1892:                                             ; preds = %1887
  %1893 = ashr exact i64 %1889, 2
  %1894 = icmp ult i64 %1893, %1883
  %1895 = select i1 %1894, i64 %1883, i64 %1893
  %1896 = icmp eq i64 %1895, 0
  br i1 %1896, label %1905, label %1897

1897:                                             ; preds = %1892
  %1898 = icmp ugt i64 %1895, 2305843009213693951
  br i1 %1898, label %1899, label %1900

1899:                                             ; preds = %1897
  call void @abort() #12
  unreachable

1900:                                             ; preds = %1897, %1887
  %1901 = phi i64 [ %1895, %1897 ], [ 2305843009213693951, %1887 ]
  %1902 = shl i64 %1901, 3
  %1903 = call i8* @_Znwm(i64 %1902) #11
  %1904 = bitcast i8* %1903 to double*
  br label %1905

1905:                                             ; preds = %1900, %1892
  %1906 = phi i64 [ %1901, %1900 ], [ 0, %1892 ]
  %1907 = phi double* [ %1904, %1900 ], [ null, %1892 ]
  %1908 = getelementptr inbounds double, double* %1907, i64 %1882
  %1909 = getelementptr inbounds double, double* %1907, i64 %1906
  %1910 = ptrtoint double* %1909 to i64
  store double %1868, double* %1908, align 8
  %1911 = getelementptr inbounds double, double* %1908, i64 1
  %1912 = ptrtoint double* %1911 to i64
  %1913 = sub i64 %1866, %1880
  %1914 = ashr exact i64 %1913, 3
  %1915 = sub nsw i64 0, %1914
  %1916 = getelementptr inbounds double, double* %1908, i64 %1915
  %1917 = ptrtoint double* %1916 to i64
  %1918 = icmp sgt i64 %1913, 0
  br i1 %1918, label %1919, label %1922

1919:                                             ; preds = %1905
  %1920 = bitcast double* %1916 to i8*
  %1921 = inttoptr i64 %1880 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1920, i8* align 8 %1921, i64 %1913, i1 false) #10
  br label %1922

1922:                                             ; preds = %1919, %1905
  store i64 %1917, i64* %1879, align 8
  store i64 %1912, i64* %1878, align 8
  store i64 %1910, i64* %1888, align 8
  %1923 = icmp eq i64 %1880, 0
  br i1 %1923, label %1928, label %1924

1924:                                             ; preds = %1922
  %1925 = inttoptr i64 %1880 to i8*
  call void @_ZdlPv(i8* %1925) #11
  %1926 = load double*, double** %44, align 8
  %1927 = ptrtoint double* %1926 to i64
  br label %1928

1928:                                             ; preds = %1872, %1922, %1924
  %1929 = phi i64 [ %1874, %1872 ], [ %1912, %1922 ], [ %1927, %1924 ]
  %1930 = phi double* [ %1873, %1872 ], [ %1911, %1922 ], [ %1926, %1924 ]
  %1931 = icmp sgt i32 %43, 1
  %1932 = select i1 %1931, i32 %43, i32 1
  %1933 = sitofp i32 %1932 to double
  %1934 = fdiv double %1742, %1933
  %1935 = load double*, double** %45, align 8
  %1936 = icmp ult double* %1930, %1935
  %1937 = ptrtoint double* %1935 to i64
  br i1 %1936, label %1938, label %1942

1938:                                             ; preds = %1928
  store double %1934, double* %1930, align 8
  %1939 = getelementptr inbounds double, double* %1930, i64 1
  %1940 = ptrtoint double* %1939 to i64
  %1941 = bitcast double** %44 to i64*
  store i64 %1940, i64* %1941, align 8
  br label %1994

1942:                                             ; preds = %1928
  %1943 = ptrtoint double* %1930 to i64
  %1944 = bitcast double** %44 to i64*
  %1945 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1946 = load i64, i64* %1945, align 8
  %1947 = sub i64 %1943, %1946
  %1948 = ashr exact i64 %1947, 3
  %1949 = add nsw i64 %1948, 1
  %1950 = icmp ugt i64 %1949, 2305843009213693951
  br i1 %1950, label %1951, label %1953

1951:                                             ; preds = %1942
  %1952 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1952) #12
  unreachable

1953:                                             ; preds = %1942
  %1954 = bitcast double** %45 to i64*
  %1955 = sub i64 %1937, %1946
  %1956 = ashr exact i64 %1955, 3
  %1957 = icmp ult i64 %1956, 1152921504606846975
  br i1 %1957, label %1958, label %1966

1958:                                             ; preds = %1953
  %1959 = ashr exact i64 %1955, 2
  %1960 = icmp ult i64 %1959, %1949
  %1961 = select i1 %1960, i64 %1949, i64 %1959
  %1962 = icmp eq i64 %1961, 0
  br i1 %1962, label %1971, label %1963

1963:                                             ; preds = %1958
  %1964 = icmp ugt i64 %1961, 2305843009213693951
  br i1 %1964, label %1965, label %1966

1965:                                             ; preds = %1963
  call void @abort() #12
  unreachable

1966:                                             ; preds = %1963, %1953
  %1967 = phi i64 [ %1961, %1963 ], [ 2305843009213693951, %1953 ]
  %1968 = shl i64 %1967, 3
  %1969 = call i8* @_Znwm(i64 %1968) #11
  %1970 = bitcast i8* %1969 to double*
  br label %1971

1971:                                             ; preds = %1966, %1958
  %1972 = phi i64 [ %1967, %1966 ], [ 0, %1958 ]
  %1973 = phi double* [ %1970, %1966 ], [ null, %1958 ]
  %1974 = getelementptr inbounds double, double* %1973, i64 %1948
  %1975 = getelementptr inbounds double, double* %1973, i64 %1972
  %1976 = ptrtoint double* %1975 to i64
  store double %1934, double* %1974, align 8
  %1977 = getelementptr inbounds double, double* %1974, i64 1
  %1978 = ptrtoint double* %1977 to i64
  %1979 = sub i64 %1929, %1946
  %1980 = ashr exact i64 %1979, 3
  %1981 = sub nsw i64 0, %1980
  %1982 = getelementptr inbounds double, double* %1974, i64 %1981
  %1983 = ptrtoint double* %1982 to i64
  %1984 = icmp sgt i64 %1979, 0
  br i1 %1984, label %1985, label %1988

1985:                                             ; preds = %1971
  %1986 = bitcast double* %1982 to i8*
  %1987 = inttoptr i64 %1946 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1986, i8* align 8 %1987, i64 %1979, i1 false) #10
  br label %1988

1988:                                             ; preds = %1985, %1971
  store i64 %1983, i64* %1945, align 8
  store i64 %1978, i64* %1944, align 8
  store i64 %1976, i64* %1954, align 8
  %1989 = icmp eq i64 %1946, 0
  br i1 %1989, label %1994, label %1990

1990:                                             ; preds = %1988
  %1991 = inttoptr i64 %1946 to i8*
  call void @_ZdlPv(i8* %1991) #11
  %1992 = load double*, double** %44, align 8
  %1993 = ptrtoint double* %1992 to i64
  br label %1994

1994:                                             ; preds = %1938, %1988, %1990
  %1995 = phi i64 [ %1940, %1938 ], [ %1978, %1988 ], [ %1993, %1990 ]
  %1996 = phi double* [ %1939, %1938 ], [ %1977, %1988 ], [ %1992, %1990 ]
  %1997 = fdiv double %1805, %1933
  %1998 = load double*, double** %45, align 8
  %1999 = icmp ult double* %1996, %1998
  %2000 = ptrtoint double* %1998 to i64
  br i1 %1999, label %2001, label %2005

2001:                                             ; preds = %1994
  store double %1997, double* %1996, align 8
  %2002 = getelementptr inbounds double, double* %1996, i64 1
  %2003 = ptrtoint double* %2002 to i64
  %2004 = bitcast double** %44 to i64*
  store i64 %2003, i64* %2004, align 8
  br label %2057

2005:                                             ; preds = %1994
  %2006 = ptrtoint double* %1996 to i64
  %2007 = bitcast double** %44 to i64*
  %2008 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2009 = load i64, i64* %2008, align 8
  %2010 = sub i64 %2006, %2009
  %2011 = ashr exact i64 %2010, 3
  %2012 = add nsw i64 %2011, 1
  %2013 = icmp ugt i64 %2012, 2305843009213693951
  br i1 %2013, label %2014, label %2016

2014:                                             ; preds = %2005
  %2015 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2015) #12
  unreachable

2016:                                             ; preds = %2005
  %2017 = bitcast double** %45 to i64*
  %2018 = sub i64 %2000, %2009
  %2019 = ashr exact i64 %2018, 3
  %2020 = icmp ult i64 %2019, 1152921504606846975
  br i1 %2020, label %2021, label %2029

2021:                                             ; preds = %2016
  %2022 = ashr exact i64 %2018, 2
  %2023 = icmp ult i64 %2022, %2012
  %2024 = select i1 %2023, i64 %2012, i64 %2022
  %2025 = icmp eq i64 %2024, 0
  br i1 %2025, label %2034, label %2026

2026:                                             ; preds = %2021
  %2027 = icmp ugt i64 %2024, 2305843009213693951
  br i1 %2027, label %2028, label %2029

2028:                                             ; preds = %2026
  call void @abort() #12
  unreachable

2029:                                             ; preds = %2026, %2016
  %2030 = phi i64 [ %2024, %2026 ], [ 2305843009213693951, %2016 ]
  %2031 = shl i64 %2030, 3
  %2032 = call i8* @_Znwm(i64 %2031) #11
  %2033 = bitcast i8* %2032 to double*
  br label %2034

2034:                                             ; preds = %2029, %2021
  %2035 = phi i64 [ %2030, %2029 ], [ 0, %2021 ]
  %2036 = phi double* [ %2033, %2029 ], [ null, %2021 ]
  %2037 = getelementptr inbounds double, double* %2036, i64 %2011
  %2038 = getelementptr inbounds double, double* %2036, i64 %2035
  %2039 = ptrtoint double* %2038 to i64
  store double %1997, double* %2037, align 8
  %2040 = getelementptr inbounds double, double* %2037, i64 1
  %2041 = ptrtoint double* %2040 to i64
  %2042 = sub i64 %1995, %2009
  %2043 = ashr exact i64 %2042, 3
  %2044 = sub nsw i64 0, %2043
  %2045 = getelementptr inbounds double, double* %2037, i64 %2044
  %2046 = ptrtoint double* %2045 to i64
  %2047 = icmp sgt i64 %2042, 0
  br i1 %2047, label %2048, label %2051

2048:                                             ; preds = %2034
  %2049 = bitcast double* %2045 to i8*
  %2050 = inttoptr i64 %2009 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2049, i8* align 8 %2050, i64 %2042, i1 false) #10
  br label %2051

2051:                                             ; preds = %2048, %2034
  store i64 %2046, i64* %2008, align 8
  store i64 %2041, i64* %2007, align 8
  store i64 %2039, i64* %2017, align 8
  %2052 = icmp eq i64 %2009, 0
  br i1 %2052, label %2057, label %2053

2053:                                             ; preds = %2051
  %2054 = inttoptr i64 %2009 to i8*
  call void @_ZdlPv(i8* %2054) #11
  %2055 = load double*, double** %44, align 8
  %2056 = ptrtoint double* %2055 to i64
  br label %2057

2057:                                             ; preds = %2001, %2051, %2053
  %2058 = phi i64 [ %2003, %2001 ], [ %2041, %2051 ], [ %2056, %2053 ]
  %2059 = phi double* [ %2002, %2001 ], [ %2040, %2051 ], [ %2055, %2053 ]
  %2060 = icmp sgt i32 %42, 1
  %2061 = select i1 %2060, i32 %42, i32 1
  %2062 = sitofp i32 %2061 to double
  %2063 = fdiv double %1742, %2062
  %2064 = load double*, double** %45, align 8
  %2065 = icmp ult double* %2059, %2064
  %2066 = ptrtoint double* %2064 to i64
  br i1 %2065, label %2067, label %2071

2067:                                             ; preds = %2057
  store double %2063, double* %2059, align 8
  %2068 = getelementptr inbounds double, double* %2059, i64 1
  %2069 = ptrtoint double* %2068 to i64
  %2070 = bitcast double** %44 to i64*
  store i64 %2069, i64* %2070, align 8
  br label %2121

2071:                                             ; preds = %2057
  %2072 = ptrtoint double* %2059 to i64
  %2073 = bitcast double** %44 to i64*
  %2074 = bitcast %"class.std::__1::vector"* %0 to i64*
  %2075 = load i64, i64* %2074, align 8
  %2076 = sub i64 %2072, %2075
  %2077 = ashr exact i64 %2076, 3
  %2078 = add nsw i64 %2077, 1
  %2079 = icmp ugt i64 %2078, 2305843009213693951
  br i1 %2079, label %2080, label %2082

2080:                                             ; preds = %2071
  %2081 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %2081) #12
  unreachable

2082:                                             ; preds = %2071
  %2083 = bitcast double** %45 to i64*
  %2084 = sub i64 %2066, %2075
  %2085 = ashr exact i64 %2084, 3
  %2086 = icmp ult i64 %2085, 1152921504606846975
  br i1 %2086, label %2087, label %2095

2087:                                             ; preds = %2082
  %2088 = ashr exact i64 %2084, 2
  %2089 = icmp ult i64 %2088, %2078
  %2090 = select i1 %2089, i64 %2078, i64 %2088
  %2091 = icmp eq i64 %2090, 0
  br i1 %2091, label %2100, label %2092

2092:                                             ; preds = %2087
  %2093 = icmp ugt i64 %2090, 2305843009213693951
  br i1 %2093, label %2094, label %2095

2094:                                             ; preds = %2092
  call void @abort() #12
  unreachable

2095:                                             ; preds = %2092, %2082
  %2096 = phi i64 [ %2090, %2092 ], [ 2305843009213693951, %2082 ]
  %2097 = shl i64 %2096, 3
  %2098 = call i8* @_Znwm(i64 %2097) #11
  %2099 = bitcast i8* %2098 to double*
  br label %2100

2100:                                             ; preds = %2095, %2087
  %2101 = phi i64 [ %2096, %2095 ], [ 0, %2087 ]
  %2102 = phi double* [ %2099, %2095 ], [ null, %2087 ]
  %2103 = getelementptr inbounds double, double* %2102, i64 %2077
  %2104 = getelementptr inbounds double, double* %2102, i64 %2101
  %2105 = ptrtoint double* %2104 to i64
  store double %2063, double* %2103, align 8
  %2106 = getelementptr inbounds double, double* %2103, i64 1
  %2107 = ptrtoint double* %2106 to i64
  %2108 = sub i64 %2058, %2075
  %2109 = ashr exact i64 %2108, 3
  %2110 = sub nsw i64 0, %2109
  %2111 = getelementptr inbounds double, double* %2103, i64 %2110
  %2112 = ptrtoint double* %2111 to i64
  %2113 = icmp sgt i64 %2108, 0
  br i1 %2113, label %2114, label %2117

2114:                                             ; preds = %2100
  %2115 = bitcast double* %2111 to i8*
  %2116 = inttoptr i64 %2075 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2115, i8* align 8 %2116, i64 %2108, i1 false) #10
  br label %2117

2117:                                             ; preds = %2114, %2100
  store i64 %2112, i64* %2074, align 8
  store i64 %2107, i64* %2073, align 8
  store i64 %2105, i64* %2083, align 8
  %2118 = icmp eq i64 %2075, 0
  br i1 %2118, label %2121, label %2119

2119:                                             ; preds = %2117
  %2120 = inttoptr i64 %2075 to i8*
  call void @_ZdlPv(i8* %2120) #11
  br label %2121

2121:                                             ; preds = %2067, %2117, %2119
  %2122 = load i8, i8* %60, align 1
  %2123 = icmp slt i8 %2122, 0
  br i1 %2123, label %2124, label %2126

2124:                                             ; preds = %2121
  %2125 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %2125) #11
  br label %2126

2126:                                             ; preds = %2121, %2124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN13dom_distiller12_GLOBAL__N_112GetWordCountERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %2 = alloca %"class.re2::StringPiece", align 8
  %3 = alloca %"class.re2::RE2", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 3, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i64 3, i1 false) #10
  %8 = getelementptr inbounds i8, i8* %5, i64 3
  store i8 0, i8* %8, align 1
  %9 = bitcast %"class.re2::StringPiece"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %2, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = select i1 %15, i8* %17, i8* %18
  store i8* %19, i8** %10, align 8
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %14 to i64
  %23 = select i1 %15, i64 %21, i64 %22
  store i64 %23, i64* %11, align 8
  %24 = bitcast %"class.re2::RE2"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %24) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  br label %25

25:                                               ; preds = %25, %1
  %26 = phi i32 [ 0, %1 ], [ %28, %25 ]
  %27 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %2, %"class.re2::RE2"* nonnull dereferenceable(200) %3, %"class.re2::RE2::Arg"** null, i32 0) #10
  %28 = add nuw nsw i32 %26, 1
  br i1 %27, label %25, label %29

29:                                               ; preds = %25
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  %30 = load i8, i8* %7, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret i32 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN13dom_distiller12_GLOBAL__N_114GetLastSegmentERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  switch i64 %10, label %22 [
    i64 0, label %11
    i64 1, label %15
  ]

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 0, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %14, align 8
  br label %57

15:                                               ; preds = %2
  br i1 %6, label %19, label %16

16:                                               ; preds = %15
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #10
  br label %57

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %21, i64 %8) #10
  br label %57

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %26 = select i1 %6, i8* %24, i8* %25
  %27 = add i64 %10, -2
  %28 = icmp ult i64 %10, %27
  %29 = select i1 %28, i64 %10, i64 %27
  %30 = sub i64 %10, %29
  %31 = icmp ugt i64 %30, 1
  %32 = add nuw i64 %29, 1
  %33 = select i1 %31, i64 %32, i64 %10
  %34 = getelementptr inbounds i8, i8* %26, i64 %33
  %35 = icmp slt i64 %33, 1
  br i1 %35, label %50, label %36

36:                                               ; preds = %22, %39
  %37 = phi i8* [ %40, %39 ], [ %34, %22 ]
  %38 = icmp eq i8* %26, %37
  br i1 %38, label %50, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, i8* %37, i64 -1
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 47
  br i1 %42, label %43, label %36

43:                                               ; preds = %39
  %44 = icmp eq i8* %40, %34
  %45 = ptrtoint i8* %40 to i64
  %46 = ptrtoint i8* %26 to i64
  %47 = sub i64 %45, %46
  %48 = icmp eq i64 %47, -1
  %49 = or i1 %44, %48
  br i1 %49, label %50, label %54

50:                                               ; preds = %36, %22, %43
  %51 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 0, i8* %52, align 1
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %53, align 8
  br label %57

54:                                               ; preds = %43
  %55 = add nuw i64 %47, 1
  %56 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %55, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %56) #10
  br label %57

57:                                               ; preds = %19, %16, %50, %54, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13dom_distiller32CalculateDerivedFeaturesFromJSONEPKN4base5ValueE(%"class.std::__1::vector"* noalias sret, %"class.base::Value"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::DictionaryValue"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca %class.GURL, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #10
  %16 = call zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"* %1, %"class.std::__1::basic_string"* nonnull %3) #10
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #10
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %132

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %15, align 8
  %27 = select i1 %25, i8* %26, i8* %14
  %28 = load i64, i64* %21, align 8
  %29 = zext i8 %24 to i64
  %30 = select i1 %25, i64 %28, i64 %29
  %31 = call %"class.base::Value"* @_ZN4base10JSONReader14ReadDeprecatedENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(i8* %27, i64 %30, i32 0, i64 200) #10
  %32 = icmp eq %"class.base::Value"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %20
  %34 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  br label %132

35:                                               ; preds = %20
  %36 = bitcast %"class.base::DictionaryValue"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  store %"class.base::DictionaryValue"* inttoptr (i64 -6148914691236517206 to %"class.base::DictionaryValue"*), %"class.base::DictionaryValue"** %4, align 8
  %37 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* nonnull %31, %"class.base::DictionaryValue"** nonnull %4) #10
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #10
  br label %130

40:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #10
  store i8 0, i8* %5, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #10
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #10
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #10
  %46 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 24, i1 false) #10
  %48 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #10
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #10
  %50 = bitcast double* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #10
  store double 0.000000e+00, double* %10, align 8
  %51 = bitcast double* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  store double 0.000000e+00, double* %11, align 8
  %52 = bitcast double* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  store double 0.000000e+00, double* %12, align 8
  %53 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %54 = call zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"* %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i64 9, i8* nonnull %5) #10
  br i1 %54, label %55, label %76

55:                                               ; preds = %40
  %56 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %57 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i64 3, %"class.std::__1::basic_string"* nonnull %6) #10
  br i1 %57, label %58, label %76

58:                                               ; preds = %55
  %59 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %60 = call zeroext i1 @_ZNK4base15DictionaryValue9GetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(%"class.base::DictionaryValue"* %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i64 11, double* nonnull %10) #10
  br i1 %60, label %61, label %76

61:                                               ; preds = %58
  %62 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %63 = call zeroext i1 @_ZNK4base15DictionaryValue9GetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(%"class.base::DictionaryValue"* %62, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10, double* nonnull %11) #10
  br i1 %63, label %64, label %76

64:                                               ; preds = %61
  %65 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %66 = call zeroext i1 @_ZNK4base15DictionaryValue9GetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(%"class.base::DictionaryValue"* %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8, double* nonnull %12) #10
  br i1 %66, label %67, label %76

67:                                               ; preds = %64
  %68 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %69 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %68, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9, %"class.std::__1::basic_string"* nonnull %7) #10
  br i1 %69, label %70, label %76

70:                                               ; preds = %67
  %71 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %72 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11, %"class.std::__1::basic_string"* nonnull %8) #10
  br i1 %72, label %73, label %76

73:                                               ; preds = %70
  %74 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %4, align 8
  %75 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %74, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i64 9, %"class.std::__1::basic_string"* nonnull %9) #10
  br i1 %75, label %78, label %76

76:                                               ; preds = %73, %40, %55, %58, %61, %64, %67, %70
  %77 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #10
  br label %101

78:                                               ; preds = %73
  %79 = bitcast %class.GURL* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %79) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 120, i1 false)
  %80 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  %84 = load i8*, i8** %42, align 8
  %85 = select i1 %83, i8* %84, i8* %41
  %86 = load i64, i64* %43, align 8
  %87 = zext i8 %82 to i64
  %88 = select i1 %83, i64 %86, i64 %87
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %13, i8* %85, i64 %88) #10
  %89 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 0, i32 1
  %90 = load i8, i8* %89, align 8, !range !7
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %78
  %93 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #10
  br label %100

94:                                               ; preds = %78
  %95 = load i8, i8* %5, align 1, !range !7
  %96 = icmp ne i8 %95, 0
  %97 = load double, double* %10, align 8
  %98 = load double, double* %11, align 8
  %99 = load double, double* %12, align 8
  call void @_ZN13dom_distiller24CalculateDerivedFeaturesEbRK4GURLdddRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_SB_(%"class.std::__1::vector"* sret %0, i1 zeroext %96, %class.GURL* nonnull dereferenceable(120) %13, double %97, double %98, double %99, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9)
  br label %100

100:                                              ; preds = %94, %92
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %79) #10
  br label %101

101:                                              ; preds = %100, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #10
  %102 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %101
  %107 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %101, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #10
  %109 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  %114 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %108, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  %116 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %115
  %121 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %121) #11
  br label %122

122:                                              ; preds = %115, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %123 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  %128 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %128) #11
  br label %129

129:                                              ; preds = %122, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #10
  br label %130

130:                                              ; preds = %129, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %31) #10
  %131 = bitcast %"class.base::Value"* %31 to i8*
  call void @_ZdlPv(i8* %131) #11
  br label %132

132:                                              ; preds = %130, %33, %17
  %133 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %130 ], [ %22, %33 ], [ %19, %17 ]
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %133, i64 0, i32 1, i32 0
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %138) #11
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  ret void
}

declare zeroext i1 @_ZNK4base5Value11GetAsStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base10JSONReader14ReadDeprecatedENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEim(i8*, i64, i32, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"*, i8*, i64, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base15DictionaryValue9GetDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(%"class.base::DictionaryValue"*, i8*, i64, double*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13dom_distiller24CalculateDerivedFeaturesEbRK4GURLjjjddd(%"class.std::__1::vector"* noalias sret, i1 zeroext, %class.GURL* dereferenceable(120), i32, i32, i32, double, double, double) local_unnamed_addr #0 {
  %10 = alloca %"class.re2::StringPiece", align 8
  %11 = alloca %"class.re2::RE2", align 8
  %12 = alloca %"class.re2::StringPiece", align 8
  %13 = alloca %"class.re2::RE2", align 8
  %14 = alloca %"class.re2::StringPiece", align 8
  %15 = alloca %"class.re2::RE2", align 8
  %16 = alloca %"class.std::__1::allocator", align 1
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %31 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 1
  %32 = load i32, i32* %31, align 4, !noalias !8
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %35

34:                                               ; preds = %9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #10, !alias.scope !8
  br label %42

35:                                               ; preds = %9
  %36 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 0
  %38 = load i32, i32* %37, align 4, !noalias !8
  %39 = sext i32 %38 to i64
  %40 = sext i32 %32 to i64
  %41 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #10, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %17, %"class.std::__1::basic_string"* dereferenceable(24) %36, i64 %39, i64 %40, %"class.std::__1::allocator"* nonnull dereferenceable(1) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #10, !noalias !8
  br label %42

42:                                               ; preds = %35, %34
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = uitofp i1 %1 to double
  %46 = bitcast double** %43 to i64*
  %47 = bitcast %"class.std::__1::vector"* %0 to i64*
  %48 = bitcast double** %44 to i64*
  %49 = call i8* @_Znwm(i64 8) #11
  %50 = bitcast i8* %49 to double*
  %51 = getelementptr inbounds i8, i8* %49, i64 8
  %52 = ptrtoint i8* %51 to i64
  store double %45, double* %50, align 8
  %53 = ptrtoint i8* %49 to i64
  store i64 %53, i64* %47, align 8
  store i64 %52, i64* %46, align 8
  store i64 %52, i64* %48, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #10
  %55 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 5, i8* %56, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 5, i1 false) #10
  %57 = getelementptr inbounds i8, i8* %54, i64 5
  store i8 0, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = select i1 %61, i8* %63, i8* %30
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %60 to i64
  %68 = select i1 %61, i64 %66, i64 %67
  %69 = getelementptr inbounds i8, i8* %64, i64 %68
  %70 = ptrtoint i8* %69 to i64
  %71 = ptrtoint i8* %64 to i64
  %72 = icmp slt i64 %68, 5
  br i1 %72, label %96, label %73

73:                                               ; preds = %42
  %74 = bitcast %"class.std::__1::basic_string"* %18 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = and i32 %76, 255
  br label %78

78:                                               ; preds = %91, %73
  %79 = phi i64 [ %94, %91 ], [ %68, %73 ]
  %80 = phi i8* [ %92, %91 ], [ %64, %73 ]
  %81 = add nsw i64 %79, -4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = call i8* @memchr(i8* %80, i32 %77, i64 %81) #10
  %85 = icmp eq i8* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = call i32 @bcmp(i8* nonnull %84, i8* nonnull %54, i64 5) #10
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = ptrtoint i8* %84 to i64
  br label %96

91:                                               ; preds = %86
  %92 = getelementptr inbounds i8, i8* %84, i64 1
  %93 = ptrtoint i8* %92 to i64
  %94 = sub i64 %70, %93
  %95 = icmp slt i64 %94, 5
  br i1 %95, label %96, label %78

96:                                               ; preds = %78, %83, %91, %42, %89
  %97 = phi i64 [ %70, %42 ], [ %90, %89 ], [ %70, %91 ], [ %70, %83 ], [ %70, %78 ]
  %98 = phi i8* [ %69, %42 ], [ %84, %89 ], [ %69, %91 ], [ %69, %83 ], [ %69, %78 ]
  %99 = icmp ne i8* %98, %69
  %100 = sub i64 %97, %71
  %101 = icmp ne i64 %100, -1
  %102 = and i1 %101, %99
  %103 = uitofp i1 %102 to double
  %104 = bitcast %"class.std::__1::vector"* %0 to i64*
  %105 = call i8* @_Znwm(i64 16) #11
  %106 = getelementptr inbounds i8, i8* %105, i64 8
  %107 = bitcast i8* %106 to double*
  store double %103, double* %107, align 8
  %108 = insertelement <2 x i8*> undef, i8* %105, i32 0
  %109 = shufflevector <2 x i8*> %108, <2 x i8*> undef, <2 x i32> zeroinitializer
  %110 = getelementptr i8, <2 x i8*> %109, <2 x i64> <i64 16, i64 16>
  %111 = ptrtoint <2 x i8*> %110 to <2 x i64>
  %112 = ptrtoint i8* %105 to i64
  %113 = bitcast i8* %49 to i64*
  %114 = bitcast i8* %105 to i64*
  %115 = load i64, i64* %113, align 8
  store i64 %115, i64* %114, align 8
  store i64 %112, i64* %104, align 8
  %116 = bitcast double** %43 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %116, align 8
  call void @_ZdlPv(i8* nonnull %49) #11
  %117 = load i8, i8* %59, align 1
  %118 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #10
  %119 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #10
  %120 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 5, i8* %121, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5, i1 false) #10
  %122 = getelementptr inbounds i8, i8* %119, i64 5
  store i8 0, i8* %122, align 1
  %123 = icmp slt i8 %117, 0
  %124 = select i1 %123, i8* %118, i8* %30
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = zext i8 %117 to i64
  %128 = select i1 %123, i64 %126, i64 %127
  %129 = getelementptr inbounds i8, i8* %124, i64 %128
  %130 = ptrtoint i8* %129 to i64
  %131 = ptrtoint i8* %124 to i64
  %132 = icmp slt i64 %128, 5
  br i1 %132, label %156, label %133

133:                                              ; preds = %96
  %134 = bitcast %"class.std::__1::basic_string"* %19 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = trunc i64 %135 to i32
  %137 = and i32 %136, 255
  br label %138

138:                                              ; preds = %151, %133
  %139 = phi i64 [ %154, %151 ], [ %128, %133 ]
  %140 = phi i8* [ %152, %151 ], [ %124, %133 ]
  %141 = add nsw i64 %139, -4
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %156, label %143

143:                                              ; preds = %138
  %144 = call i8* @memchr(i8* %140, i32 %137, i64 %141) #10
  %145 = icmp eq i8* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %143
  %147 = call i32 @bcmp(i8* nonnull %144, i8* nonnull %119, i64 5) #10
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %146
  %150 = ptrtoint i8* %144 to i64
  br label %156

151:                                              ; preds = %146
  %152 = getelementptr inbounds i8, i8* %144, i64 1
  %153 = ptrtoint i8* %152 to i64
  %154 = sub i64 %130, %153
  %155 = icmp slt i64 %154, 5
  br i1 %155, label %156, label %138

156:                                              ; preds = %138, %143, %151, %96, %149
  %157 = phi i64 [ %130, %96 ], [ %150, %149 ], [ %130, %151 ], [ %130, %143 ], [ %130, %138 ]
  %158 = phi i8* [ %129, %96 ], [ %144, %149 ], [ %129, %151 ], [ %129, %143 ], [ %129, %138 ]
  %159 = icmp ne i8* %158, %129
  %160 = sub i64 %157, %131
  %161 = icmp ne i64 %160, -1
  %162 = and i1 %161, %159
  %163 = uitofp i1 %162 to double
  %164 = load double*, double** %43, align 8
  %165 = load double*, double** %44, align 8
  %166 = icmp ult double* %164, %165
  %167 = ptrtoint double* %165 to i64
  br i1 %166, label %168, label %172

168:                                              ; preds = %156
  store double %163, double* %164, align 8
  %169 = getelementptr inbounds double, double* %164, i64 1
  %170 = ptrtoint double* %169 to i64
  %171 = bitcast double** %43 to i64*
  store i64 %170, i64* %171, align 8
  br label %218

172:                                              ; preds = %156
  %173 = ptrtoint double* %164 to i64
  %174 = bitcast double** %43 to i64*
  %175 = bitcast %"class.std::__1::vector"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %173, %176
  %178 = ashr exact i64 %177, 3
  %179 = add nsw i64 %178, 1
  %180 = icmp ugt i64 %179, 2305843009213693951
  br i1 %180, label %181, label %183

181:                                              ; preds = %172
  %182 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %182) #12
  unreachable

183:                                              ; preds = %172
  %184 = bitcast double** %44 to i64*
  %185 = sub i64 %167, %176
  %186 = ashr exact i64 %185, 3
  %187 = icmp ult i64 %186, 1152921504606846975
  br i1 %187, label %188, label %196

188:                                              ; preds = %183
  %189 = ashr exact i64 %185, 2
  %190 = icmp ult i64 %189, %179
  %191 = select i1 %190, i64 %179, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %201, label %193

193:                                              ; preds = %188
  %194 = icmp ugt i64 %191, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  call void @abort() #12
  unreachable

196:                                              ; preds = %193, %183
  %197 = phi i64 [ %191, %193 ], [ 2305843009213693951, %183 ]
  %198 = shl i64 %197, 3
  %199 = call i8* @_Znwm(i64 %198) #11
  %200 = bitcast i8* %199 to double*
  br label %201

201:                                              ; preds = %196, %188
  %202 = phi i64 [ %197, %196 ], [ 0, %188 ]
  %203 = phi i8* [ %199, %196 ], [ null, %188 ]
  %204 = phi double* [ %200, %196 ], [ null, %188 ]
  %205 = getelementptr inbounds double, double* %204, i64 %178
  %206 = getelementptr inbounds double, double* %204, i64 %202
  %207 = ptrtoint double* %206 to i64
  store double %163, double* %205, align 8
  %208 = getelementptr inbounds double, double* %205, i64 1
  %209 = ptrtoint double* %208 to i64
  %210 = ptrtoint double* %204 to i64
  %211 = icmp sgt i64 %177, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %201
  %213 = inttoptr i64 %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %213, i64 %177, i1 false) #10
  br label %214

214:                                              ; preds = %212, %201
  store i64 %210, i64* %175, align 8
  store i64 %209, i64* %174, align 8
  store i64 %207, i64* %184, align 8
  %215 = icmp eq i64 %176, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %214
  %217 = inttoptr i64 %176 to i8*
  call void @_ZdlPv(i8* %217) #11
  br label %218

218:                                              ; preds = %216, %214, %168
  %219 = load i8, i8* %59, align 1
  %220 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #10
  %221 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #10
  %222 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %222, i64 0, i32 1, i32 0
  store i8 6, i8* %223, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %221, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 6, i1 false) #10
  %224 = getelementptr inbounds i8, i8* %221, i64 6
  store i8 0, i8* %224, align 2
  %225 = icmp slt i8 %219, 0
  %226 = select i1 %225, i8* %220, i8* %30
  %227 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = zext i8 %219 to i64
  %230 = select i1 %225, i64 %228, i64 %229
  %231 = getelementptr inbounds i8, i8* %226, i64 %230
  %232 = ptrtoint i8* %231 to i64
  %233 = ptrtoint i8* %226 to i64
  %234 = icmp slt i64 %230, 6
  br i1 %234, label %258, label %235

235:                                              ; preds = %218
  %236 = bitcast %"class.std::__1::basic_string"* %20 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = trunc i64 %237 to i32
  %239 = and i32 %238, 255
  br label %240

240:                                              ; preds = %253, %235
  %241 = phi i64 [ %256, %253 ], [ %230, %235 ]
  %242 = phi i8* [ %254, %253 ], [ %226, %235 ]
  %243 = add nsw i64 %241, -5
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %258, label %245

245:                                              ; preds = %240
  %246 = call i8* @memchr(i8* %242, i32 %239, i64 %243) #10
  %247 = icmp eq i8* %246, null
  br i1 %247, label %258, label %248

248:                                              ; preds = %245
  %249 = call i32 @bcmp(i8* nonnull %246, i8* nonnull %221, i64 6) #10
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %248
  %252 = ptrtoint i8* %246 to i64
  br label %258

253:                                              ; preds = %248
  %254 = getelementptr inbounds i8, i8* %246, i64 1
  %255 = ptrtoint i8* %254 to i64
  %256 = sub i64 %232, %255
  %257 = icmp slt i64 %256, 6
  br i1 %257, label %258, label %240

258:                                              ; preds = %240, %245, %253, %218, %251
  %259 = phi i64 [ %232, %218 ], [ %252, %251 ], [ %232, %253 ], [ %232, %245 ], [ %232, %240 ]
  %260 = phi i8* [ %231, %218 ], [ %246, %251 ], [ %231, %253 ], [ %231, %245 ], [ %231, %240 ]
  %261 = icmp ne i8* %260, %231
  %262 = sub i64 %259, %233
  %263 = icmp ne i64 %262, -1
  %264 = and i1 %263, %261
  %265 = uitofp i1 %264 to double
  %266 = load double*, double** %43, align 8
  %267 = load double*, double** %44, align 8
  %268 = icmp ult double* %266, %267
  %269 = ptrtoint double* %267 to i64
  br i1 %268, label %270, label %274

270:                                              ; preds = %258
  store double %265, double* %266, align 8
  %271 = getelementptr inbounds double, double* %266, i64 1
  %272 = ptrtoint double* %271 to i64
  %273 = bitcast double** %43 to i64*
  store i64 %272, i64* %273, align 8
  br label %320

274:                                              ; preds = %258
  %275 = ptrtoint double* %266 to i64
  %276 = bitcast double** %43 to i64*
  %277 = bitcast %"class.std::__1::vector"* %0 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = sub i64 %275, %278
  %280 = ashr exact i64 %279, 3
  %281 = add nsw i64 %280, 1
  %282 = icmp ugt i64 %281, 2305843009213693951
  br i1 %282, label %283, label %285

283:                                              ; preds = %274
  %284 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %284) #12
  unreachable

285:                                              ; preds = %274
  %286 = bitcast double** %44 to i64*
  %287 = sub i64 %269, %278
  %288 = ashr exact i64 %287, 3
  %289 = icmp ult i64 %288, 1152921504606846975
  br i1 %289, label %290, label %298

290:                                              ; preds = %285
  %291 = ashr exact i64 %287, 2
  %292 = icmp ult i64 %291, %281
  %293 = select i1 %292, i64 %281, i64 %291
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %303, label %295

295:                                              ; preds = %290
  %296 = icmp ugt i64 %293, 2305843009213693951
  br i1 %296, label %297, label %298

297:                                              ; preds = %295
  call void @abort() #12
  unreachable

298:                                              ; preds = %295, %285
  %299 = phi i64 [ %293, %295 ], [ 2305843009213693951, %285 ]
  %300 = shl i64 %299, 3
  %301 = call i8* @_Znwm(i64 %300) #11
  %302 = bitcast i8* %301 to double*
  br label %303

303:                                              ; preds = %298, %290
  %304 = phi i64 [ %299, %298 ], [ 0, %290 ]
  %305 = phi i8* [ %301, %298 ], [ null, %290 ]
  %306 = phi double* [ %302, %298 ], [ null, %290 ]
  %307 = getelementptr inbounds double, double* %306, i64 %280
  %308 = getelementptr inbounds double, double* %306, i64 %304
  %309 = ptrtoint double* %308 to i64
  store double %265, double* %307, align 8
  %310 = getelementptr inbounds double, double* %307, i64 1
  %311 = ptrtoint double* %310 to i64
  %312 = ptrtoint double* %306 to i64
  %313 = icmp sgt i64 %279, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %303
  %315 = inttoptr i64 %278 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %305, i8* align 8 %315, i64 %279, i1 false) #10
  br label %316

316:                                              ; preds = %314, %303
  store i64 %312, i64* %277, align 8
  store i64 %311, i64* %276, align 8
  store i64 %309, i64* %286, align 8
  %317 = icmp eq i64 %278, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %316
  %319 = inttoptr i64 %278 to i8*
  call void @_ZdlPv(i8* %319) #11
  br label %320

320:                                              ; preds = %318, %316, %270
  %321 = load i8, i8* %59, align 1
  %322 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #10
  %323 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #10
  %324 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %325 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %324, i64 0, i32 1, i32 0
  store i8 4, i8* %325, align 1
  %326 = bitcast %"class.std::__1::basic_string"* %21 to i32*
  store i32 2003134838, i32* %326, align 8
  %327 = getelementptr inbounds i8, i8* %323, i64 4
  store i8 0, i8* %327, align 4
  %328 = icmp slt i8 %321, 0
  %329 = select i1 %328, i8* %322, i8* %30
  %330 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %331 = load i64, i64* %330, align 8
  %332 = zext i8 %321 to i64
  %333 = select i1 %328, i64 %331, i64 %332
  %334 = getelementptr inbounds i8, i8* %329, i64 %333
  %335 = ptrtoint i8* %334 to i64
  %336 = ptrtoint i8* %329 to i64
  %337 = icmp slt i64 %333, 4
  br i1 %337, label %361, label %338

338:                                              ; preds = %320
  %339 = bitcast %"class.std::__1::basic_string"* %21 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = trunc i64 %340 to i32
  %342 = and i32 %341, 255
  br label %343

343:                                              ; preds = %356, %338
  %344 = phi i64 [ %359, %356 ], [ %333, %338 ]
  %345 = phi i8* [ %357, %356 ], [ %329, %338 ]
  %346 = add nsw i64 %344, -3
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %361, label %348

348:                                              ; preds = %343
  %349 = call i8* @memchr(i8* %345, i32 %342, i64 %346) #10
  %350 = icmp eq i8* %349, null
  br i1 %350, label %361, label %351

351:                                              ; preds = %348
  %352 = call i32 @bcmp(i8* nonnull %349, i8* nonnull %323, i64 4) #10
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %351
  %355 = ptrtoint i8* %349 to i64
  br label %361

356:                                              ; preds = %351
  %357 = getelementptr inbounds i8, i8* %349, i64 1
  %358 = ptrtoint i8* %357 to i64
  %359 = sub i64 %335, %358
  %360 = icmp slt i64 %359, 4
  br i1 %360, label %361, label %343

361:                                              ; preds = %343, %348, %356, %320, %354
  %362 = phi i64 [ %335, %320 ], [ %355, %354 ], [ %335, %356 ], [ %335, %348 ], [ %335, %343 ]
  %363 = phi i8* [ %334, %320 ], [ %349, %354 ], [ %334, %356 ], [ %334, %348 ], [ %334, %343 ]
  %364 = icmp ne i8* %363, %334
  %365 = sub i64 %362, %336
  %366 = icmp ne i64 %365, -1
  %367 = and i1 %366, %364
  %368 = uitofp i1 %367 to double
  %369 = load double*, double** %43, align 8
  %370 = load double*, double** %44, align 8
  %371 = icmp ult double* %369, %370
  %372 = ptrtoint double* %370 to i64
  br i1 %371, label %373, label %377

373:                                              ; preds = %361
  store double %368, double* %369, align 8
  %374 = getelementptr inbounds double, double* %369, i64 1
  %375 = ptrtoint double* %374 to i64
  %376 = bitcast double** %43 to i64*
  store i64 %375, i64* %376, align 8
  br label %423

377:                                              ; preds = %361
  %378 = ptrtoint double* %369 to i64
  %379 = bitcast double** %43 to i64*
  %380 = bitcast %"class.std::__1::vector"* %0 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = sub i64 %378, %381
  %383 = ashr exact i64 %382, 3
  %384 = add nsw i64 %383, 1
  %385 = icmp ugt i64 %384, 2305843009213693951
  br i1 %385, label %386, label %388

386:                                              ; preds = %377
  %387 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %387) #12
  unreachable

388:                                              ; preds = %377
  %389 = bitcast double** %44 to i64*
  %390 = sub i64 %372, %381
  %391 = ashr exact i64 %390, 3
  %392 = icmp ult i64 %391, 1152921504606846975
  br i1 %392, label %393, label %401

393:                                              ; preds = %388
  %394 = ashr exact i64 %390, 2
  %395 = icmp ult i64 %394, %384
  %396 = select i1 %395, i64 %384, i64 %394
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %406, label %398

398:                                              ; preds = %393
  %399 = icmp ugt i64 %396, 2305843009213693951
  br i1 %399, label %400, label %401

400:                                              ; preds = %398
  call void @abort() #12
  unreachable

401:                                              ; preds = %398, %388
  %402 = phi i64 [ %396, %398 ], [ 2305843009213693951, %388 ]
  %403 = shl i64 %402, 3
  %404 = call i8* @_Znwm(i64 %403) #11
  %405 = bitcast i8* %404 to double*
  br label %406

406:                                              ; preds = %401, %393
  %407 = phi i64 [ %402, %401 ], [ 0, %393 ]
  %408 = phi i8* [ %404, %401 ], [ null, %393 ]
  %409 = phi double* [ %405, %401 ], [ null, %393 ]
  %410 = getelementptr inbounds double, double* %409, i64 %383
  %411 = getelementptr inbounds double, double* %409, i64 %407
  %412 = ptrtoint double* %411 to i64
  store double %368, double* %410, align 8
  %413 = getelementptr inbounds double, double* %410, i64 1
  %414 = ptrtoint double* %413 to i64
  %415 = ptrtoint double* %409 to i64
  %416 = icmp sgt i64 %382, 0
  br i1 %416, label %417, label %419

417:                                              ; preds = %406
  %418 = inttoptr i64 %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %408, i8* align 8 %418, i64 %382, i1 false) #10
  br label %419

419:                                              ; preds = %417, %406
  store i64 %415, i64* %380, align 8
  store i64 %414, i64* %379, align 8
  store i64 %412, i64* %389, align 8
  %420 = icmp eq i64 %381, 0
  br i1 %420, label %423, label %421

421:                                              ; preds = %419
  %422 = inttoptr i64 %381 to i8*
  call void @_ZdlPv(i8* %422) #11
  br label %423

423:                                              ; preds = %421, %419, %373
  %424 = load i8, i8* %59, align 1
  %425 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #10
  %426 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %426) #10
  %427 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %428 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %427, i64 0, i32 1, i32 0
  store i8 7, i8* %428, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %426, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7, i1 false) #10
  %429 = getelementptr inbounds i8, i8* %426, i64 7
  store i8 0, i8* %429, align 1
  %430 = icmp slt i8 %424, 0
  %431 = select i1 %430, i8* %425, i8* %30
  %432 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %433 = load i64, i64* %432, align 8
  %434 = zext i8 %424 to i64
  %435 = select i1 %430, i64 %433, i64 %434
  %436 = getelementptr inbounds i8, i8* %431, i64 %435
  %437 = ptrtoint i8* %436 to i64
  %438 = ptrtoint i8* %431 to i64
  %439 = icmp slt i64 %435, 7
  br i1 %439, label %463, label %440

440:                                              ; preds = %423
  %441 = bitcast %"class.std::__1::basic_string"* %22 to i64*
  %442 = load i64, i64* %441, align 8
  %443 = trunc i64 %442 to i32
  %444 = and i32 %443, 255
  br label %445

445:                                              ; preds = %458, %440
  %446 = phi i64 [ %461, %458 ], [ %435, %440 ]
  %447 = phi i8* [ %459, %458 ], [ %431, %440 ]
  %448 = add nsw i64 %446, -6
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %463, label %450

450:                                              ; preds = %445
  %451 = call i8* @memchr(i8* %447, i32 %444, i64 %448) #10
  %452 = icmp eq i8* %451, null
  br i1 %452, label %463, label %453

453:                                              ; preds = %450
  %454 = call i32 @bcmp(i8* nonnull %451, i8* nonnull %426, i64 7) #10
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %458

456:                                              ; preds = %453
  %457 = ptrtoint i8* %451 to i64
  br label %463

458:                                              ; preds = %453
  %459 = getelementptr inbounds i8, i8* %451, i64 1
  %460 = ptrtoint i8* %459 to i64
  %461 = sub i64 %437, %460
  %462 = icmp slt i64 %461, 7
  br i1 %462, label %463, label %445

463:                                              ; preds = %445, %450, %458, %423, %456
  %464 = phi i64 [ %437, %423 ], [ %457, %456 ], [ %437, %458 ], [ %437, %450 ], [ %437, %445 ]
  %465 = phi i8* [ %436, %423 ], [ %451, %456 ], [ %436, %458 ], [ %436, %450 ], [ %436, %445 ]
  %466 = icmp ne i8* %465, %436
  %467 = sub i64 %464, %438
  %468 = icmp ne i64 %467, -1
  %469 = and i1 %468, %466
  %470 = uitofp i1 %469 to double
  %471 = load double*, double** %43, align 8
  %472 = load double*, double** %44, align 8
  %473 = icmp ult double* %471, %472
  %474 = ptrtoint double* %472 to i64
  br i1 %473, label %475, label %479

475:                                              ; preds = %463
  store double %470, double* %471, align 8
  %476 = getelementptr inbounds double, double* %471, i64 1
  %477 = ptrtoint double* %476 to i64
  %478 = bitcast double** %43 to i64*
  store i64 %477, i64* %478, align 8
  br label %525

479:                                              ; preds = %463
  %480 = ptrtoint double* %471 to i64
  %481 = bitcast double** %43 to i64*
  %482 = bitcast %"class.std::__1::vector"* %0 to i64*
  %483 = load i64, i64* %482, align 8
  %484 = sub i64 %480, %483
  %485 = ashr exact i64 %484, 3
  %486 = add nsw i64 %485, 1
  %487 = icmp ugt i64 %486, 2305843009213693951
  br i1 %487, label %488, label %490

488:                                              ; preds = %479
  %489 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %489) #12
  unreachable

490:                                              ; preds = %479
  %491 = bitcast double** %44 to i64*
  %492 = sub i64 %474, %483
  %493 = ashr exact i64 %492, 3
  %494 = icmp ult i64 %493, 1152921504606846975
  br i1 %494, label %495, label %503

495:                                              ; preds = %490
  %496 = ashr exact i64 %492, 2
  %497 = icmp ult i64 %496, %486
  %498 = select i1 %497, i64 %486, i64 %496
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %508, label %500

500:                                              ; preds = %495
  %501 = icmp ugt i64 %498, 2305843009213693951
  br i1 %501, label %502, label %503

502:                                              ; preds = %500
  call void @abort() #12
  unreachable

503:                                              ; preds = %500, %490
  %504 = phi i64 [ %498, %500 ], [ 2305843009213693951, %490 ]
  %505 = shl i64 %504, 3
  %506 = call i8* @_Znwm(i64 %505) #11
  %507 = bitcast i8* %506 to double*
  br label %508

508:                                              ; preds = %503, %495
  %509 = phi i64 [ %504, %503 ], [ 0, %495 ]
  %510 = phi i8* [ %506, %503 ], [ null, %495 ]
  %511 = phi double* [ %507, %503 ], [ null, %495 ]
  %512 = getelementptr inbounds double, double* %511, i64 %485
  %513 = getelementptr inbounds double, double* %511, i64 %509
  %514 = ptrtoint double* %513 to i64
  store double %470, double* %512, align 8
  %515 = getelementptr inbounds double, double* %512, i64 1
  %516 = ptrtoint double* %515 to i64
  %517 = ptrtoint double* %511 to i64
  %518 = icmp sgt i64 %484, 0
  br i1 %518, label %519, label %521

519:                                              ; preds = %508
  %520 = inttoptr i64 %483 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %510, i8* align 8 %520, i64 %484, i1 false) #10
  br label %521

521:                                              ; preds = %519, %508
  store i64 %517, i64* %482, align 8
  store i64 %516, i64* %481, align 8
  store i64 %514, i64* %491, align 8
  %522 = icmp eq i64 %483, 0
  br i1 %522, label %525, label %523

523:                                              ; preds = %521
  %524 = inttoptr i64 %483 to i8*
  call void @_ZdlPv(i8* %524) #11
  br label %525

525:                                              ; preds = %523, %521, %475
  %526 = load i8, i8* %59, align 1
  %527 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %426) #10
  %528 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %528) #10
  %529 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %530 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %529, i64 0, i32 1, i32 0
  store i8 4, i8* %530, align 1
  %531 = bitcast %"class.std::__1::basic_string"* %23 to i32*
  store i32 1886609710, i32* %531, align 8
  %532 = getelementptr inbounds i8, i8* %528, i64 4
  store i8 0, i8* %532, align 4
  %533 = icmp slt i8 %526, 0
  %534 = select i1 %533, i8* %527, i8* %30
  %535 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %536 = load i64, i64* %535, align 8
  %537 = zext i8 %526 to i64
  %538 = select i1 %533, i64 %536, i64 %537
  %539 = getelementptr inbounds i8, i8* %534, i64 %538
  %540 = ptrtoint i8* %539 to i64
  %541 = ptrtoint i8* %534 to i64
  %542 = icmp slt i64 %538, 4
  br i1 %542, label %566, label %543

543:                                              ; preds = %525
  %544 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  %545 = load i64, i64* %544, align 8
  %546 = trunc i64 %545 to i32
  %547 = and i32 %546, 255
  br label %548

548:                                              ; preds = %561, %543
  %549 = phi i64 [ %564, %561 ], [ %538, %543 ]
  %550 = phi i8* [ %562, %561 ], [ %534, %543 ]
  %551 = add nsw i64 %549, -3
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %566, label %553

553:                                              ; preds = %548
  %554 = call i8* @memchr(i8* %550, i32 %547, i64 %551) #10
  %555 = icmp eq i8* %554, null
  br i1 %555, label %566, label %556

556:                                              ; preds = %553
  %557 = call i32 @bcmp(i8* nonnull %554, i8* nonnull %528, i64 4) #10
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %561

559:                                              ; preds = %556
  %560 = ptrtoint i8* %554 to i64
  br label %566

561:                                              ; preds = %556
  %562 = getelementptr inbounds i8, i8* %554, i64 1
  %563 = ptrtoint i8* %562 to i64
  %564 = sub i64 %540, %563
  %565 = icmp slt i64 %564, 4
  br i1 %565, label %566, label %548

566:                                              ; preds = %548, %553, %561, %525, %559
  %567 = phi i64 [ %540, %525 ], [ %560, %559 ], [ %540, %561 ], [ %540, %553 ], [ %540, %548 ]
  %568 = phi i8* [ %539, %525 ], [ %554, %559 ], [ %539, %561 ], [ %539, %553 ], [ %539, %548 ]
  %569 = icmp ne i8* %568, %539
  %570 = sub i64 %567, %541
  %571 = icmp ne i64 %570, -1
  %572 = and i1 %571, %569
  %573 = uitofp i1 %572 to double
  %574 = load double*, double** %43, align 8
  %575 = load double*, double** %44, align 8
  %576 = icmp ult double* %574, %575
  %577 = ptrtoint double* %575 to i64
  br i1 %576, label %578, label %582

578:                                              ; preds = %566
  store double %573, double* %574, align 8
  %579 = getelementptr inbounds double, double* %574, i64 1
  %580 = ptrtoint double* %579 to i64
  %581 = bitcast double** %43 to i64*
  store i64 %580, i64* %581, align 8
  br label %628

582:                                              ; preds = %566
  %583 = ptrtoint double* %574 to i64
  %584 = bitcast double** %43 to i64*
  %585 = bitcast %"class.std::__1::vector"* %0 to i64*
  %586 = load i64, i64* %585, align 8
  %587 = sub i64 %583, %586
  %588 = ashr exact i64 %587, 3
  %589 = add nsw i64 %588, 1
  %590 = icmp ugt i64 %589, 2305843009213693951
  br i1 %590, label %591, label %593

591:                                              ; preds = %582
  %592 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %592) #12
  unreachable

593:                                              ; preds = %582
  %594 = bitcast double** %44 to i64*
  %595 = sub i64 %577, %586
  %596 = ashr exact i64 %595, 3
  %597 = icmp ult i64 %596, 1152921504606846975
  br i1 %597, label %598, label %606

598:                                              ; preds = %593
  %599 = ashr exact i64 %595, 2
  %600 = icmp ult i64 %599, %589
  %601 = select i1 %600, i64 %589, i64 %599
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %611, label %603

603:                                              ; preds = %598
  %604 = icmp ugt i64 %601, 2305843009213693951
  br i1 %604, label %605, label %606

605:                                              ; preds = %603
  call void @abort() #12
  unreachable

606:                                              ; preds = %603, %593
  %607 = phi i64 [ %601, %603 ], [ 2305843009213693951, %593 ]
  %608 = shl i64 %607, 3
  %609 = call i8* @_Znwm(i64 %608) #11
  %610 = bitcast i8* %609 to double*
  br label %611

611:                                              ; preds = %606, %598
  %612 = phi i64 [ %607, %606 ], [ 0, %598 ]
  %613 = phi i8* [ %609, %606 ], [ null, %598 ]
  %614 = phi double* [ %610, %606 ], [ null, %598 ]
  %615 = getelementptr inbounds double, double* %614, i64 %588
  %616 = getelementptr inbounds double, double* %614, i64 %612
  %617 = ptrtoint double* %616 to i64
  store double %573, double* %615, align 8
  %618 = getelementptr inbounds double, double* %615, i64 1
  %619 = ptrtoint double* %618 to i64
  %620 = ptrtoint double* %614 to i64
  %621 = icmp sgt i64 %587, 0
  br i1 %621, label %622, label %624

622:                                              ; preds = %611
  %623 = inttoptr i64 %586 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %613, i8* align 8 %623, i64 %587, i1 false) #10
  br label %624

624:                                              ; preds = %622, %611
  store i64 %620, i64* %585, align 8
  store i64 %619, i64* %584, align 8
  store i64 %617, i64* %594, align 8
  %625 = icmp eq i64 %586, 0
  br i1 %625, label %628, label %626

626:                                              ; preds = %624
  %627 = inttoptr i64 %586 to i8*
  call void @_ZdlPv(i8* %627) #11
  br label %628

628:                                              ; preds = %626, %624, %578
  %629 = load i8, i8* %59, align 1
  %630 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %528) #10
  %631 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %631) #10
  %632 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %633 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %632, i64 0, i32 1, i32 0
  store i8 5, i8* %633, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %631, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5, i1 false) #10
  %634 = getelementptr inbounds i8, i8* %631, i64 5
  store i8 0, i8* %634, align 1
  %635 = icmp slt i8 %629, 0
  %636 = select i1 %635, i8* %630, i8* %30
  %637 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %638 = load i64, i64* %637, align 8
  %639 = zext i8 %629 to i64
  %640 = select i1 %635, i64 %638, i64 %639
  %641 = getelementptr inbounds i8, i8* %636, i64 %640
  %642 = ptrtoint i8* %641 to i64
  %643 = ptrtoint i8* %636 to i64
  %644 = icmp slt i64 %640, 5
  br i1 %644, label %668, label %645

645:                                              ; preds = %628
  %646 = bitcast %"class.std::__1::basic_string"* %24 to i64*
  %647 = load i64, i64* %646, align 8
  %648 = trunc i64 %647 to i32
  %649 = and i32 %648, 255
  br label %650

650:                                              ; preds = %663, %645
  %651 = phi i64 [ %666, %663 ], [ %640, %645 ]
  %652 = phi i8* [ %664, %663 ], [ %636, %645 ]
  %653 = add nsw i64 %651, -4
  %654 = icmp eq i64 %653, 0
  br i1 %654, label %668, label %655

655:                                              ; preds = %650
  %656 = call i8* @memchr(i8* %652, i32 %649, i64 %653) #10
  %657 = icmp eq i8* %656, null
  br i1 %657, label %668, label %658

658:                                              ; preds = %655
  %659 = call i32 @bcmp(i8* nonnull %656, i8* nonnull %631, i64 5) #10
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %661, label %663

661:                                              ; preds = %658
  %662 = ptrtoint i8* %656 to i64
  br label %668

663:                                              ; preds = %658
  %664 = getelementptr inbounds i8, i8* %656, i64 1
  %665 = ptrtoint i8* %664 to i64
  %666 = sub i64 %642, %665
  %667 = icmp slt i64 %666, 5
  br i1 %667, label %668, label %650

668:                                              ; preds = %650, %655, %663, %628, %661
  %669 = phi i64 [ %642, %628 ], [ %662, %661 ], [ %642, %663 ], [ %642, %655 ], [ %642, %650 ]
  %670 = phi i8* [ %641, %628 ], [ %656, %661 ], [ %641, %663 ], [ %641, %655 ], [ %641, %650 ]
  %671 = icmp ne i8* %670, %641
  %672 = sub i64 %669, %643
  %673 = icmp ne i64 %672, -1
  %674 = and i1 %673, %671
  %675 = uitofp i1 %674 to double
  %676 = load double*, double** %43, align 8
  %677 = load double*, double** %44, align 8
  %678 = icmp ult double* %676, %677
  %679 = ptrtoint double* %677 to i64
  br i1 %678, label %680, label %684

680:                                              ; preds = %668
  store double %675, double* %676, align 8
  %681 = getelementptr inbounds double, double* %676, i64 1
  %682 = ptrtoint double* %681 to i64
  %683 = bitcast double** %43 to i64*
  store i64 %682, i64* %683, align 8
  br label %730

684:                                              ; preds = %668
  %685 = ptrtoint double* %676 to i64
  %686 = bitcast double** %43 to i64*
  %687 = bitcast %"class.std::__1::vector"* %0 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = sub i64 %685, %688
  %690 = ashr exact i64 %689, 3
  %691 = add nsw i64 %690, 1
  %692 = icmp ugt i64 %691, 2305843009213693951
  br i1 %692, label %693, label %695

693:                                              ; preds = %684
  %694 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %694) #12
  unreachable

695:                                              ; preds = %684
  %696 = bitcast double** %44 to i64*
  %697 = sub i64 %679, %688
  %698 = ashr exact i64 %697, 3
  %699 = icmp ult i64 %698, 1152921504606846975
  br i1 %699, label %700, label %708

700:                                              ; preds = %695
  %701 = ashr exact i64 %697, 2
  %702 = icmp ult i64 %701, %691
  %703 = select i1 %702, i64 %691, i64 %701
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %713, label %705

705:                                              ; preds = %700
  %706 = icmp ugt i64 %703, 2305843009213693951
  br i1 %706, label %707, label %708

707:                                              ; preds = %705
  call void @abort() #12
  unreachable

708:                                              ; preds = %705, %695
  %709 = phi i64 [ %703, %705 ], [ 2305843009213693951, %695 ]
  %710 = shl i64 %709, 3
  %711 = call i8* @_Znwm(i64 %710) #11
  %712 = bitcast i8* %711 to double*
  br label %713

713:                                              ; preds = %708, %700
  %714 = phi i64 [ %709, %708 ], [ 0, %700 ]
  %715 = phi i8* [ %711, %708 ], [ null, %700 ]
  %716 = phi double* [ %712, %708 ], [ null, %700 ]
  %717 = getelementptr inbounds double, double* %716, i64 %690
  %718 = getelementptr inbounds double, double* %716, i64 %714
  %719 = ptrtoint double* %718 to i64
  store double %675, double* %717, align 8
  %720 = getelementptr inbounds double, double* %717, i64 1
  %721 = ptrtoint double* %720 to i64
  %722 = ptrtoint double* %716 to i64
  %723 = icmp sgt i64 %689, 0
  br i1 %723, label %724, label %726

724:                                              ; preds = %713
  %725 = inttoptr i64 %688 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %715, i8* align 8 %725, i64 %689, i1 false) #10
  br label %726

726:                                              ; preds = %724, %713
  store i64 %722, i64* %687, align 8
  store i64 %721, i64* %686, align 8
  store i64 %719, i64* %696, align 8
  %727 = icmp eq i64 %688, 0
  br i1 %727, label %730, label %728

728:                                              ; preds = %726
  %729 = inttoptr i64 %688 to i8*
  call void @_ZdlPv(i8* %729) #11
  br label %730

730:                                              ; preds = %680, %726, %728
  %731 = load i8, i8* %59, align 1
  %732 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %733 = load i64, i64* %732, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %631) #10
  %734 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %734) #10
  %735 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %736 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %735, i64 0, i32 1, i32 0
  store i8 4, i8* %736, align 1
  %737 = bitcast %"class.std::__1::basic_string"* %25 to i32*
  store i32 1885892654, i32* %737, align 8
  %738 = getelementptr inbounds i8, i8* %734, i64 4
  store i8 0, i8* %738, align 4
  %739 = icmp slt i8 %731, 0
  %740 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %741 = zext i8 %731 to i64
  %742 = select i1 %739, i64 %733, i64 %741
  %743 = icmp ult i64 %742, 4
  br i1 %743, label %748, label %744

744:                                              ; preds = %730
  %745 = add i64 %742, -4
  %746 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %17, i64 %745, i64 -1, i8* nonnull %734, i64 4) #10
  %747 = icmp eq i32 %746, 0
  br label %748

748:                                              ; preds = %730, %744
  %749 = phi i1 [ false, %730 ], [ %747, %744 ]
  %750 = uitofp i1 %749 to double
  %751 = load double*, double** %43, align 8
  %752 = load double*, double** %44, align 8
  %753 = icmp ult double* %751, %752
  %754 = ptrtoint double* %752 to i64
  br i1 %753, label %755, label %759

755:                                              ; preds = %748
  store double %750, double* %751, align 8
  %756 = getelementptr inbounds double, double* %751, i64 1
  %757 = ptrtoint double* %756 to i64
  %758 = bitcast double** %43 to i64*
  store i64 %757, i64* %758, align 8
  br label %805

759:                                              ; preds = %748
  %760 = ptrtoint double* %751 to i64
  %761 = bitcast double** %43 to i64*
  %762 = bitcast %"class.std::__1::vector"* %0 to i64*
  %763 = load i64, i64* %762, align 8
  %764 = sub i64 %760, %763
  %765 = ashr exact i64 %764, 3
  %766 = add nsw i64 %765, 1
  %767 = icmp ugt i64 %766, 2305843009213693951
  br i1 %767, label %768, label %770

768:                                              ; preds = %759
  %769 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %769) #12
  unreachable

770:                                              ; preds = %759
  %771 = bitcast double** %44 to i64*
  %772 = sub i64 %754, %763
  %773 = ashr exact i64 %772, 3
  %774 = icmp ult i64 %773, 1152921504606846975
  br i1 %774, label %775, label %783

775:                                              ; preds = %770
  %776 = ashr exact i64 %772, 2
  %777 = icmp ult i64 %776, %766
  %778 = select i1 %777, i64 %766, i64 %776
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %788, label %780

780:                                              ; preds = %775
  %781 = icmp ugt i64 %778, 2305843009213693951
  br i1 %781, label %782, label %783

782:                                              ; preds = %780
  call void @abort() #12
  unreachable

783:                                              ; preds = %780, %770
  %784 = phi i64 [ %778, %780 ], [ 2305843009213693951, %770 ]
  %785 = shl i64 %784, 3
  %786 = call i8* @_Znwm(i64 %785) #11
  %787 = bitcast i8* %786 to double*
  br label %788

788:                                              ; preds = %783, %775
  %789 = phi i64 [ %784, %783 ], [ 0, %775 ]
  %790 = phi i8* [ %786, %783 ], [ null, %775 ]
  %791 = phi double* [ %787, %783 ], [ null, %775 ]
  %792 = getelementptr inbounds double, double* %791, i64 %765
  %793 = getelementptr inbounds double, double* %791, i64 %789
  %794 = ptrtoint double* %793 to i64
  store double %750, double* %792, align 8
  %795 = getelementptr inbounds double, double* %792, i64 1
  %796 = ptrtoint double* %795 to i64
  %797 = ptrtoint double* %791 to i64
  %798 = icmp sgt i64 %764, 0
  br i1 %798, label %799, label %801

799:                                              ; preds = %788
  %800 = inttoptr i64 %763 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %790, i8* align 8 %800, i64 %764, i1 false) #10
  br label %801

801:                                              ; preds = %799, %788
  store i64 %797, i64* %762, align 8
  store i64 %796, i64* %761, align 8
  store i64 %794, i64* %771, align 8
  %802 = icmp eq i64 %763, 0
  br i1 %802, label %805, label %803

803:                                              ; preds = %801
  %804 = inttoptr i64 %763 to i8*
  call void @_ZdlPv(i8* %804) #11
  br label %805

805:                                              ; preds = %755, %801, %803
  %806 = load i8, i8* %736, align 1
  %807 = icmp slt i8 %806, 0
  br i1 %807, label %808, label %811

808:                                              ; preds = %805
  %809 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %810 = load i8*, i8** %809, align 8
  call void @_ZdlPv(i8* %810) #11
  br label %811

811:                                              ; preds = %805, %808
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %734) #10
  %812 = load i8, i8* %59, align 1
  %813 = icmp slt i8 %812, 0
  %814 = load i64, i64* %740, align 8
  %815 = zext i8 %812 to i64
  %816 = select i1 %813, i64 %814, i64 %815
  %817 = uitofp i64 %816 to double
  %818 = load double*, double** %43, align 8
  %819 = load double*, double** %44, align 8
  %820 = icmp ult double* %818, %819
  %821 = ptrtoint double* %819 to i64
  br i1 %820, label %822, label %826

822:                                              ; preds = %811
  store double %817, double* %818, align 8
  %823 = getelementptr inbounds double, double* %818, i64 1
  %824 = ptrtoint double* %823 to i64
  %825 = bitcast double** %43 to i64*
  store i64 %824, i64* %825, align 8
  br label %874

826:                                              ; preds = %811
  %827 = ptrtoint double* %818 to i64
  %828 = bitcast double** %43 to i64*
  %829 = bitcast %"class.std::__1::vector"* %0 to i64*
  %830 = load i64, i64* %829, align 8
  %831 = sub i64 %827, %830
  %832 = ashr exact i64 %831, 3
  %833 = add nsw i64 %832, 1
  %834 = icmp ugt i64 %833, 2305843009213693951
  br i1 %834, label %835, label %837

835:                                              ; preds = %826
  %836 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %836) #12
  unreachable

837:                                              ; preds = %826
  %838 = bitcast double** %44 to i64*
  %839 = sub i64 %821, %830
  %840 = ashr exact i64 %839, 3
  %841 = icmp ult i64 %840, 1152921504606846975
  br i1 %841, label %842, label %850

842:                                              ; preds = %837
  %843 = ashr exact i64 %839, 2
  %844 = icmp ult i64 %843, %833
  %845 = select i1 %844, i64 %833, i64 %843
  %846 = icmp eq i64 %845, 0
  br i1 %846, label %855, label %847

847:                                              ; preds = %842
  %848 = icmp ugt i64 %845, 2305843009213693951
  br i1 %848, label %849, label %850

849:                                              ; preds = %847
  call void @abort() #12
  unreachable

850:                                              ; preds = %847, %837
  %851 = phi i64 [ %845, %847 ], [ 2305843009213693951, %837 ]
  %852 = shl i64 %851, 3
  %853 = call i8* @_Znwm(i64 %852) #11
  %854 = bitcast i8* %853 to double*
  br label %855

855:                                              ; preds = %850, %842
  %856 = phi i64 [ %851, %850 ], [ 0, %842 ]
  %857 = phi i8* [ %853, %850 ], [ null, %842 ]
  %858 = phi double* [ %854, %850 ], [ null, %842 ]
  %859 = getelementptr inbounds double, double* %858, i64 %832
  %860 = getelementptr inbounds double, double* %858, i64 %856
  %861 = ptrtoint double* %860 to i64
  store double %817, double* %859, align 8
  %862 = getelementptr inbounds double, double* %859, i64 1
  %863 = ptrtoint double* %862 to i64
  %864 = ptrtoint double* %858 to i64
  %865 = icmp sgt i64 %831, 0
  br i1 %865, label %866, label %868

866:                                              ; preds = %855
  %867 = inttoptr i64 %830 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %857, i8* align 8 %867, i64 %831, i1 false) #10
  br label %868

868:                                              ; preds = %866, %855
  store i64 %864, i64* %829, align 8
  store i64 %863, i64* %828, align 8
  store i64 %861, i64* %838, align 8
  %869 = icmp eq i64 %830, 0
  br i1 %869, label %874, label %870

870:                                              ; preds = %868
  %871 = inttoptr i64 %830 to i8*
  call void @_ZdlPv(i8* %871) #11
  %872 = load double*, double** %43, align 8
  %873 = ptrtoint double* %872 to i64
  br label %874

874:                                              ; preds = %822, %868, %870
  %875 = phi i64 [ %824, %822 ], [ %863, %868 ], [ %873, %870 ]
  %876 = phi double* [ %823, %822 ], [ %862, %868 ], [ %872, %870 ]
  %877 = load i8, i8* %59, align 1
  %878 = icmp slt i8 %877, 0
  %879 = load i64, i64* %740, align 8
  %880 = zext i8 %877 to i64
  %881 = select i1 %878, i64 %879, i64 %880
  %882 = icmp ult i64 %881, 2
  %883 = uitofp i1 %882 to double
  %884 = load double*, double** %44, align 8
  %885 = icmp ult double* %876, %884
  %886 = ptrtoint double* %884 to i64
  br i1 %885, label %887, label %891

887:                                              ; preds = %874
  store double %883, double* %876, align 8
  %888 = getelementptr inbounds double, double* %876, i64 1
  %889 = ptrtoint double* %888 to i64
  %890 = bitcast double** %43 to i64*
  store i64 %889, i64* %890, align 8
  br label %941

891:                                              ; preds = %874
  %892 = ptrtoint double* %876 to i64
  %893 = bitcast double** %43 to i64*
  %894 = bitcast %"class.std::__1::vector"* %0 to i64*
  %895 = load i64, i64* %894, align 8
  %896 = sub i64 %892, %895
  %897 = ashr exact i64 %896, 3
  %898 = add nsw i64 %897, 1
  %899 = icmp ugt i64 %898, 2305843009213693951
  br i1 %899, label %900, label %902

900:                                              ; preds = %891
  %901 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %901) #12
  unreachable

902:                                              ; preds = %891
  %903 = bitcast double** %44 to i64*
  %904 = sub i64 %886, %895
  %905 = ashr exact i64 %904, 3
  %906 = icmp ult i64 %905, 1152921504606846975
  br i1 %906, label %907, label %915

907:                                              ; preds = %902
  %908 = ashr exact i64 %904, 2
  %909 = icmp ult i64 %908, %898
  %910 = select i1 %909, i64 %898, i64 %908
  %911 = icmp eq i64 %910, 0
  br i1 %911, label %920, label %912

912:                                              ; preds = %907
  %913 = icmp ugt i64 %910, 2305843009213693951
  br i1 %913, label %914, label %915

914:                                              ; preds = %912
  call void @abort() #12
  unreachable

915:                                              ; preds = %912, %902
  %916 = phi i64 [ %910, %912 ], [ 2305843009213693951, %902 ]
  %917 = shl i64 %916, 3
  %918 = call i8* @_Znwm(i64 %917) #11
  %919 = bitcast i8* %918 to double*
  br label %920

920:                                              ; preds = %915, %907
  %921 = phi i64 [ %916, %915 ], [ 0, %907 ]
  %922 = phi double* [ %919, %915 ], [ null, %907 ]
  %923 = getelementptr inbounds double, double* %922, i64 %897
  %924 = getelementptr inbounds double, double* %922, i64 %921
  %925 = ptrtoint double* %924 to i64
  store double %883, double* %923, align 8
  %926 = getelementptr inbounds double, double* %923, i64 1
  %927 = ptrtoint double* %926 to i64
  %928 = sub i64 %875, %895
  %929 = ashr exact i64 %928, 3
  %930 = sub nsw i64 0, %929
  %931 = getelementptr inbounds double, double* %923, i64 %930
  %932 = ptrtoint double* %931 to i64
  %933 = icmp sgt i64 %928, 0
  br i1 %933, label %934, label %937

934:                                              ; preds = %920
  %935 = bitcast double* %931 to i8*
  %936 = inttoptr i64 %895 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %935, i8* align 8 %936, i64 %928, i1 false) #10
  br label %937

937:                                              ; preds = %934, %920
  store i64 %932, i64* %894, align 8
  store i64 %927, i64* %893, align 8
  store i64 %925, i64* %903, align 8
  %938 = icmp eq i64 %895, 0
  br i1 %938, label %941, label %939

939:                                              ; preds = %937
  %940 = inttoptr i64 %895 to i8*
  call void @_ZdlPv(i8* %940) #11
  br label %941

941:                                              ; preds = %887, %937, %939
  %942 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %942) #10
  %943 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %944 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %943, i64 0, i32 1, i32 0
  store i8 3, i8* %944, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %942, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false) #10
  %945 = getelementptr inbounds i8, i8* %942, i64 3
  store i8 0, i8* %945, align 1
  %946 = bitcast %"class.re2::StringPiece"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %946) #10
  %947 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %14, i64 0, i32 0
  %948 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %14, i64 0, i32 1
  %949 = load i8, i8* %59, align 1
  %950 = icmp slt i8 %949, 0
  %951 = load i8*, i8** %62, align 8
  %952 = select i1 %950, i8* %951, i8* %30
  store i8* %952, i8** %947, align 8
  %953 = load i64, i64* %740, align 8
  %954 = zext i8 %949 to i64
  %955 = select i1 %950, i64 %953, i64 %954
  store i64 %955, i64* %948, align 8
  %956 = bitcast %"class.re2::RE2"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %956) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %956, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26) #10
  br label %957

957:                                              ; preds = %957, %941
  %958 = phi i32 [ 0, %941 ], [ %960, %957 ]
  %959 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %14, %"class.re2::RE2"* nonnull dereferenceable(200) %15, %"class.re2::RE2::Arg"** null, i32 0) #10
  %960 = add nuw nsw i32 %958, 1
  br i1 %959, label %957, label %961

961:                                              ; preds = %957
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %956) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %946) #10
  %962 = sitofp i32 %958 to double
  %963 = load double*, double** %43, align 8
  %964 = load double*, double** %44, align 8
  %965 = icmp ult double* %963, %964
  %966 = ptrtoint double* %964 to i64
  br i1 %965, label %967, label %971

967:                                              ; preds = %961
  store double %962, double* %963, align 8
  %968 = getelementptr inbounds double, double* %963, i64 1
  %969 = ptrtoint double* %968 to i64
  %970 = bitcast double** %43 to i64*
  store i64 %969, i64* %970, align 8
  br label %1017

971:                                              ; preds = %961
  %972 = ptrtoint double* %963 to i64
  %973 = bitcast double** %43 to i64*
  %974 = bitcast %"class.std::__1::vector"* %0 to i64*
  %975 = load i64, i64* %974, align 8
  %976 = sub i64 %972, %975
  %977 = ashr exact i64 %976, 3
  %978 = add nsw i64 %977, 1
  %979 = icmp ugt i64 %978, 2305843009213693951
  br i1 %979, label %980, label %982

980:                                              ; preds = %971
  %981 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %981) #12
  unreachable

982:                                              ; preds = %971
  %983 = bitcast double** %44 to i64*
  %984 = sub i64 %966, %975
  %985 = ashr exact i64 %984, 3
  %986 = icmp ult i64 %985, 1152921504606846975
  br i1 %986, label %987, label %995

987:                                              ; preds = %982
  %988 = ashr exact i64 %984, 2
  %989 = icmp ult i64 %988, %978
  %990 = select i1 %989, i64 %978, i64 %988
  %991 = icmp eq i64 %990, 0
  br i1 %991, label %1000, label %992

992:                                              ; preds = %987
  %993 = icmp ugt i64 %990, 2305843009213693951
  br i1 %993, label %994, label %995

994:                                              ; preds = %992
  call void @abort() #12
  unreachable

995:                                              ; preds = %992, %982
  %996 = phi i64 [ %990, %992 ], [ 2305843009213693951, %982 ]
  %997 = shl i64 %996, 3
  %998 = call i8* @_Znwm(i64 %997) #11
  %999 = bitcast i8* %998 to double*
  br label %1000

1000:                                             ; preds = %995, %987
  %1001 = phi i64 [ %996, %995 ], [ 0, %987 ]
  %1002 = phi i8* [ %998, %995 ], [ null, %987 ]
  %1003 = phi double* [ %999, %995 ], [ null, %987 ]
  %1004 = getelementptr inbounds double, double* %1003, i64 %977
  %1005 = getelementptr inbounds double, double* %1003, i64 %1001
  %1006 = ptrtoint double* %1005 to i64
  store double %962, double* %1004, align 8
  %1007 = getelementptr inbounds double, double* %1004, i64 1
  %1008 = ptrtoint double* %1007 to i64
  %1009 = ptrtoint double* %1003 to i64
  %1010 = icmp sgt i64 %976, 0
  br i1 %1010, label %1011, label %1013

1011:                                             ; preds = %1000
  %1012 = inttoptr i64 %975 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1002, i8* align 8 %1012, i64 %976, i1 false) #10
  br label %1013

1013:                                             ; preds = %1011, %1000
  store i64 %1009, i64* %974, align 8
  store i64 %1008, i64* %973, align 8
  store i64 %1006, i64* %983, align 8
  %1014 = icmp eq i64 %975, 0
  br i1 %1014, label %1017, label %1015

1015:                                             ; preds = %1013
  %1016 = inttoptr i64 %975 to i8*
  call void @_ZdlPv(i8* %1016) #11
  br label %1017

1017:                                             ; preds = %967, %1013, %1015
  %1018 = load i8, i8* %944, align 1
  %1019 = icmp slt i8 %1018, 0
  br i1 %1019, label %1020, label %1023

1020:                                             ; preds = %1017
  %1021 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1022 = load i8*, i8** %1021, align 8
  call void @_ZdlPv(i8* %1022) #11
  br label %1023

1023:                                             ; preds = %1017, %1020
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %942) #10
  %1024 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1024) #10
  %1025 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1026 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1025, i64 0, i32 1, i32 0
  store i8 6, i8* %1026, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1024, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i64 6, i1 false) #10
  %1027 = getelementptr inbounds i8, i8* %1024, i64 6
  store i8 0, i8* %1027, align 2
  %1028 = bitcast %"class.re2::StringPiece"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1028) #10
  %1029 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %12, i64 0, i32 0
  %1030 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %12, i64 0, i32 1
  %1031 = load i8, i8* %59, align 1
  %1032 = icmp slt i8 %1031, 0
  %1033 = load i8*, i8** %62, align 8
  %1034 = select i1 %1032, i8* %1033, i8* %30
  store i8* %1034, i8** %1029, align 8
  %1035 = load i64, i64* %740, align 8
  %1036 = zext i8 %1031 to i64
  %1037 = select i1 %1032, i64 %1035, i64 %1036
  store i64 %1037, i64* %1030, align 8
  %1038 = bitcast %"class.re2::RE2"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1038) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1038, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #10
  br label %1039

1039:                                             ; preds = %1039, %1023
  %1040 = phi i32 [ 0, %1023 ], [ %1042, %1039 ]
  %1041 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %12, %"class.re2::RE2"* nonnull dereferenceable(200) %13, %"class.re2::RE2::Arg"** null, i32 0) #10
  %1042 = add nuw nsw i32 %1040, 1
  br i1 %1041, label %1039, label %1043

1043:                                             ; preds = %1039
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1038) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1028) #10
  %1044 = sitofp i32 %1040 to double
  %1045 = load double*, double** %43, align 8
  %1046 = load double*, double** %44, align 8
  %1047 = icmp ult double* %1045, %1046
  %1048 = ptrtoint double* %1046 to i64
  br i1 %1047, label %1049, label %1053

1049:                                             ; preds = %1043
  store double %1044, double* %1045, align 8
  %1050 = getelementptr inbounds double, double* %1045, i64 1
  %1051 = ptrtoint double* %1050 to i64
  %1052 = bitcast double** %43 to i64*
  store i64 %1051, i64* %1052, align 8
  br label %1099

1053:                                             ; preds = %1043
  %1054 = ptrtoint double* %1045 to i64
  %1055 = bitcast double** %43 to i64*
  %1056 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1057 = load i64, i64* %1056, align 8
  %1058 = sub i64 %1054, %1057
  %1059 = ashr exact i64 %1058, 3
  %1060 = add nsw i64 %1059, 1
  %1061 = icmp ugt i64 %1060, 2305843009213693951
  br i1 %1061, label %1062, label %1064

1062:                                             ; preds = %1053
  %1063 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1063) #12
  unreachable

1064:                                             ; preds = %1053
  %1065 = bitcast double** %44 to i64*
  %1066 = sub i64 %1048, %1057
  %1067 = ashr exact i64 %1066, 3
  %1068 = icmp ult i64 %1067, 1152921504606846975
  br i1 %1068, label %1069, label %1077

1069:                                             ; preds = %1064
  %1070 = ashr exact i64 %1066, 2
  %1071 = icmp ult i64 %1070, %1060
  %1072 = select i1 %1071, i64 %1060, i64 %1070
  %1073 = icmp eq i64 %1072, 0
  br i1 %1073, label %1082, label %1074

1074:                                             ; preds = %1069
  %1075 = icmp ugt i64 %1072, 2305843009213693951
  br i1 %1075, label %1076, label %1077

1076:                                             ; preds = %1074
  call void @abort() #12
  unreachable

1077:                                             ; preds = %1074, %1064
  %1078 = phi i64 [ %1072, %1074 ], [ 2305843009213693951, %1064 ]
  %1079 = shl i64 %1078, 3
  %1080 = call i8* @_Znwm(i64 %1079) #11
  %1081 = bitcast i8* %1080 to double*
  br label %1082

1082:                                             ; preds = %1077, %1069
  %1083 = phi i64 [ %1078, %1077 ], [ 0, %1069 ]
  %1084 = phi i8* [ %1080, %1077 ], [ null, %1069 ]
  %1085 = phi double* [ %1081, %1077 ], [ null, %1069 ]
  %1086 = getelementptr inbounds double, double* %1085, i64 %1059
  %1087 = getelementptr inbounds double, double* %1085, i64 %1083
  %1088 = ptrtoint double* %1087 to i64
  store double %1044, double* %1086, align 8
  %1089 = getelementptr inbounds double, double* %1086, i64 1
  %1090 = ptrtoint double* %1089 to i64
  %1091 = ptrtoint double* %1085 to i64
  %1092 = icmp sgt i64 %1058, 0
  br i1 %1092, label %1093, label %1095

1093:                                             ; preds = %1082
  %1094 = inttoptr i64 %1057 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1084, i8* align 8 %1094, i64 %1058, i1 false) #10
  br label %1095

1095:                                             ; preds = %1093, %1082
  store i64 %1091, i64* %1056, align 8
  store i64 %1090, i64* %1055, align 8
  store i64 %1088, i64* %1065, align 8
  %1096 = icmp eq i64 %1057, 0
  br i1 %1096, label %1099, label %1097

1097:                                             ; preds = %1095
  %1098 = inttoptr i64 %1057 to i8*
  call void @_ZdlPv(i8* %1098) #11
  br label %1099

1099:                                             ; preds = %1049, %1095, %1097
  %1100 = load i8, i8* %1026, align 1
  %1101 = icmp slt i8 %1100, 0
  br i1 %1101, label %1102, label %1105

1102:                                             ; preds = %1099
  %1103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1104 = load i8*, i8** %1103, align 8
  call void @_ZdlPv(i8* %1104) #11
  br label %1105

1105:                                             ; preds = %1099, %1102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1024) #10
  %1106 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1106) #10
  %1107 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1107, i64 0, i32 1, i32 0
  store i8 3, i8* %1108, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1106, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3, i1 false) #10
  %1109 = getelementptr inbounds i8, i8* %1106, i64 3
  store i8 0, i8* %1109, align 1
  %1110 = bitcast %"class.re2::StringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1110) #10
  %1111 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %10, i64 0, i32 0
  %1112 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %10, i64 0, i32 1
  %1113 = load i8, i8* %59, align 1
  %1114 = icmp slt i8 %1113, 0
  %1115 = load i8*, i8** %62, align 8
  %1116 = select i1 %1114, i8* %1115, i8* %30
  store i8* %1116, i8** %1111, align 8
  %1117 = load i64, i64* %740, align 8
  %1118 = zext i8 %1113 to i64
  %1119 = select i1 %1114, i64 %1117, i64 %1118
  store i64 %1119, i64* %1112, align 8
  %1120 = bitcast %"class.re2::RE2"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %1120) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1120, i8 -86, i64 200, i1 false) #10
  call void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #10
  br label %1121

1121:                                             ; preds = %1121, %1105
  %1122 = phi i32 [ 0, %1105 ], [ %1124, %1121 ]
  %1123 = call zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull %10, %"class.re2::RE2"* nonnull dereferenceable(200) %11, %"class.re2::RE2::Arg"** null, i32 0) #10
  %1124 = add nuw nsw i32 %1122, 1
  br i1 %1123, label %1121, label %1125

1125:                                             ; preds = %1121
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %1120) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1110) #10
  %1126 = sitofp i32 %1122 to double
  %1127 = load double*, double** %43, align 8
  %1128 = load double*, double** %44, align 8
  %1129 = icmp ult double* %1127, %1128
  %1130 = ptrtoint double* %1128 to i64
  br i1 %1129, label %1131, label %1135

1131:                                             ; preds = %1125
  store double %1126, double* %1127, align 8
  %1132 = getelementptr inbounds double, double* %1127, i64 1
  %1133 = ptrtoint double* %1132 to i64
  %1134 = bitcast double** %43 to i64*
  store i64 %1133, i64* %1134, align 8
  br label %1181

1135:                                             ; preds = %1125
  %1136 = ptrtoint double* %1127 to i64
  %1137 = bitcast double** %43 to i64*
  %1138 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1139 = load i64, i64* %1138, align 8
  %1140 = sub i64 %1136, %1139
  %1141 = ashr exact i64 %1140, 3
  %1142 = add nsw i64 %1141, 1
  %1143 = icmp ugt i64 %1142, 2305843009213693951
  br i1 %1143, label %1144, label %1146

1144:                                             ; preds = %1135
  %1145 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1145) #12
  unreachable

1146:                                             ; preds = %1135
  %1147 = bitcast double** %44 to i64*
  %1148 = sub i64 %1130, %1139
  %1149 = ashr exact i64 %1148, 3
  %1150 = icmp ult i64 %1149, 1152921504606846975
  br i1 %1150, label %1151, label %1159

1151:                                             ; preds = %1146
  %1152 = ashr exact i64 %1148, 2
  %1153 = icmp ult i64 %1152, %1142
  %1154 = select i1 %1153, i64 %1142, i64 %1152
  %1155 = icmp eq i64 %1154, 0
  br i1 %1155, label %1164, label %1156

1156:                                             ; preds = %1151
  %1157 = icmp ugt i64 %1154, 2305843009213693951
  br i1 %1157, label %1158, label %1159

1158:                                             ; preds = %1156
  call void @abort() #12
  unreachable

1159:                                             ; preds = %1156, %1146
  %1160 = phi i64 [ %1154, %1156 ], [ 2305843009213693951, %1146 ]
  %1161 = shl i64 %1160, 3
  %1162 = call i8* @_Znwm(i64 %1161) #11
  %1163 = bitcast i8* %1162 to double*
  br label %1164

1164:                                             ; preds = %1159, %1151
  %1165 = phi i64 [ %1160, %1159 ], [ 0, %1151 ]
  %1166 = phi i8* [ %1162, %1159 ], [ null, %1151 ]
  %1167 = phi double* [ %1163, %1159 ], [ null, %1151 ]
  %1168 = getelementptr inbounds double, double* %1167, i64 %1141
  %1169 = getelementptr inbounds double, double* %1167, i64 %1165
  %1170 = ptrtoint double* %1169 to i64
  store double %1126, double* %1168, align 8
  %1171 = getelementptr inbounds double, double* %1168, i64 1
  %1172 = ptrtoint double* %1171 to i64
  %1173 = ptrtoint double* %1167 to i64
  %1174 = icmp sgt i64 %1140, 0
  br i1 %1174, label %1175, label %1177

1175:                                             ; preds = %1164
  %1176 = inttoptr i64 %1139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1166, i8* align 8 %1176, i64 %1140, i1 false) #10
  br label %1177

1177:                                             ; preds = %1175, %1164
  store i64 %1173, i64* %1138, align 8
  store i64 %1172, i64* %1137, align 8
  store i64 %1170, i64* %1147, align 8
  %1178 = icmp eq i64 %1139, 0
  br i1 %1178, label %1181, label %1179

1179:                                             ; preds = %1177
  %1180 = inttoptr i64 %1139 to i8*
  call void @_ZdlPv(i8* %1180) #11
  br label %1181

1181:                                             ; preds = %1131, %1177, %1179
  %1182 = load i8, i8* %1108, align 1
  %1183 = icmp slt i8 %1182, 0
  br i1 %1183, label %1184, label %1187

1184:                                             ; preds = %1181
  %1185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1186 = load i8*, i8** %1185, align 8
  call void @_ZdlPv(i8* %1186) #11
  br label %1187

1187:                                             ; preds = %1181, %1184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1106) #10
  %1188 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1188) #10
  call fastcc void @_ZN13dom_distiller12_GLOBAL__N_114GetLastSegmentERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %29, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17)
  %1189 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1189, i64 0, i32 1, i32 0
  %1191 = load i8, i8* %1190, align 1
  %1192 = icmp slt i8 %1191, 0
  %1193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1194 = load i64, i64* %1193, align 8
  %1195 = zext i8 %1191 to i64
  %1196 = select i1 %1192, i64 %1194, i64 %1195
  %1197 = uitofp i64 %1196 to double
  %1198 = load double*, double** %43, align 8
  %1199 = load double*, double** %44, align 8
  %1200 = icmp ult double* %1198, %1199
  %1201 = ptrtoint double* %1199 to i64
  br i1 %1200, label %1202, label %1206

1202:                                             ; preds = %1187
  store double %1197, double* %1198, align 8
  %1203 = getelementptr inbounds double, double* %1198, i64 1
  %1204 = ptrtoint double* %1203 to i64
  %1205 = bitcast double** %43 to i64*
  store i64 %1204, i64* %1205, align 8
  br label %1252

1206:                                             ; preds = %1187
  %1207 = ptrtoint double* %1198 to i64
  %1208 = bitcast double** %43 to i64*
  %1209 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1210 = load i64, i64* %1209, align 8
  %1211 = sub i64 %1207, %1210
  %1212 = ashr exact i64 %1211, 3
  %1213 = add nsw i64 %1212, 1
  %1214 = icmp ugt i64 %1213, 2305843009213693951
  br i1 %1214, label %1215, label %1217

1215:                                             ; preds = %1206
  %1216 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1216) #12
  unreachable

1217:                                             ; preds = %1206
  %1218 = bitcast double** %44 to i64*
  %1219 = sub i64 %1201, %1210
  %1220 = ashr exact i64 %1219, 3
  %1221 = icmp ult i64 %1220, 1152921504606846975
  br i1 %1221, label %1222, label %1230

1222:                                             ; preds = %1217
  %1223 = ashr exact i64 %1219, 2
  %1224 = icmp ult i64 %1223, %1213
  %1225 = select i1 %1224, i64 %1213, i64 %1223
  %1226 = icmp eq i64 %1225, 0
  br i1 %1226, label %1235, label %1227

1227:                                             ; preds = %1222
  %1228 = icmp ugt i64 %1225, 2305843009213693951
  br i1 %1228, label %1229, label %1230

1229:                                             ; preds = %1227
  call void @abort() #12
  unreachable

1230:                                             ; preds = %1227, %1217
  %1231 = phi i64 [ %1225, %1227 ], [ 2305843009213693951, %1217 ]
  %1232 = shl i64 %1231, 3
  %1233 = call i8* @_Znwm(i64 %1232) #11
  %1234 = bitcast i8* %1233 to double*
  br label %1235

1235:                                             ; preds = %1230, %1222
  %1236 = phi i64 [ %1231, %1230 ], [ 0, %1222 ]
  %1237 = phi i8* [ %1233, %1230 ], [ null, %1222 ]
  %1238 = phi double* [ %1234, %1230 ], [ null, %1222 ]
  %1239 = getelementptr inbounds double, double* %1238, i64 %1212
  %1240 = getelementptr inbounds double, double* %1238, i64 %1236
  %1241 = ptrtoint double* %1240 to i64
  store double %1197, double* %1239, align 8
  %1242 = getelementptr inbounds double, double* %1239, i64 1
  %1243 = ptrtoint double* %1242 to i64
  %1244 = ptrtoint double* %1238 to i64
  %1245 = icmp sgt i64 %1211, 0
  br i1 %1245, label %1246, label %1248

1246:                                             ; preds = %1235
  %1247 = inttoptr i64 %1210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1237, i8* align 8 %1247, i64 %1211, i1 false) #10
  br label %1248

1248:                                             ; preds = %1246, %1235
  store i64 %1244, i64* %1209, align 8
  store i64 %1243, i64* %1208, align 8
  store i64 %1241, i64* %1218, align 8
  %1249 = icmp eq i64 %1210, 0
  br i1 %1249, label %1252, label %1250

1250:                                             ; preds = %1248
  %1251 = inttoptr i64 %1210 to i8*
  call void @_ZdlPv(i8* %1251) #11
  br label %1252

1252:                                             ; preds = %1202, %1248, %1250
  %1253 = load i8, i8* %1190, align 1
  %1254 = icmp slt i8 %1253, 0
  br i1 %1254, label %1255, label %1258

1255:                                             ; preds = %1252
  %1256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1257 = load i8*, i8** %1256, align 8
  call void @_ZdlPv(i8* %1257) #11
  br label %1258

1258:                                             ; preds = %1252, %1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1188) #10
  %1259 = uitofp i32 %5 to double
  %1260 = load double*, double** %43, align 8
  %1261 = load double*, double** %44, align 8
  %1262 = icmp ult double* %1260, %1261
  %1263 = ptrtoint double* %1261 to i64
  br i1 %1262, label %1264, label %1268

1264:                                             ; preds = %1258
  store double %1259, double* %1260, align 8
  %1265 = getelementptr inbounds double, double* %1260, i64 1
  %1266 = ptrtoint double* %1265 to i64
  %1267 = bitcast double** %43 to i64*
  store i64 %1266, i64* %1267, align 8
  br label %1316

1268:                                             ; preds = %1258
  %1269 = ptrtoint double* %1260 to i64
  %1270 = bitcast double** %43 to i64*
  %1271 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1272 = load i64, i64* %1271, align 8
  %1273 = sub i64 %1269, %1272
  %1274 = ashr exact i64 %1273, 3
  %1275 = add nsw i64 %1274, 1
  %1276 = icmp ugt i64 %1275, 2305843009213693951
  br i1 %1276, label %1277, label %1279

1277:                                             ; preds = %1268
  %1278 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1278) #12
  unreachable

1279:                                             ; preds = %1268
  %1280 = bitcast double** %44 to i64*
  %1281 = sub i64 %1263, %1272
  %1282 = ashr exact i64 %1281, 3
  %1283 = icmp ult i64 %1282, 1152921504606846975
  br i1 %1283, label %1284, label %1292

1284:                                             ; preds = %1279
  %1285 = ashr exact i64 %1281, 2
  %1286 = icmp ult i64 %1285, %1275
  %1287 = select i1 %1286, i64 %1275, i64 %1285
  %1288 = icmp eq i64 %1287, 0
  br i1 %1288, label %1297, label %1289

1289:                                             ; preds = %1284
  %1290 = icmp ugt i64 %1287, 2305843009213693951
  br i1 %1290, label %1291, label %1292

1291:                                             ; preds = %1289
  call void @abort() #12
  unreachable

1292:                                             ; preds = %1289, %1279
  %1293 = phi i64 [ %1287, %1289 ], [ 2305843009213693951, %1279 ]
  %1294 = shl i64 %1293, 3
  %1295 = call i8* @_Znwm(i64 %1294) #11
  %1296 = bitcast i8* %1295 to double*
  br label %1297

1297:                                             ; preds = %1292, %1284
  %1298 = phi i64 [ %1293, %1292 ], [ 0, %1284 ]
  %1299 = phi i8* [ %1295, %1292 ], [ null, %1284 ]
  %1300 = phi double* [ %1296, %1292 ], [ null, %1284 ]
  %1301 = getelementptr inbounds double, double* %1300, i64 %1274
  %1302 = getelementptr inbounds double, double* %1300, i64 %1298
  %1303 = ptrtoint double* %1302 to i64
  store double %1259, double* %1301, align 8
  %1304 = getelementptr inbounds double, double* %1301, i64 1
  %1305 = ptrtoint double* %1304 to i64
  %1306 = ptrtoint double* %1300 to i64
  %1307 = icmp sgt i64 %1273, 0
  br i1 %1307, label %1308, label %1310

1308:                                             ; preds = %1297
  %1309 = inttoptr i64 %1272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1299, i8* align 8 %1309, i64 %1273, i1 false) #10
  br label %1310

1310:                                             ; preds = %1308, %1297
  store i64 %1306, i64* %1271, align 8
  store i64 %1305, i64* %1270, align 8
  store i64 %1303, i64* %1280, align 8
  %1311 = icmp eq i64 %1272, 0
  br i1 %1311, label %1316, label %1312

1312:                                             ; preds = %1310
  %1313 = inttoptr i64 %1272 to i8*
  call void @_ZdlPv(i8* %1313) #11
  %1314 = load double*, double** %43, align 8
  %1315 = ptrtoint double* %1314 to i64
  br label %1316

1316:                                             ; preds = %1264, %1310, %1312
  %1317 = phi i64 [ %1266, %1264 ], [ %1305, %1310 ], [ %1315, %1312 ]
  %1318 = phi double* [ %1265, %1264 ], [ %1304, %1310 ], [ %1314, %1312 ]
  %1319 = uitofp i32 %4 to double
  %1320 = load double*, double** %44, align 8
  %1321 = icmp ult double* %1318, %1320
  %1322 = ptrtoint double* %1320 to i64
  br i1 %1321, label %1323, label %1327

1323:                                             ; preds = %1316
  store double %1319, double* %1318, align 8
  %1324 = getelementptr inbounds double, double* %1318, i64 1
  %1325 = ptrtoint double* %1324 to i64
  %1326 = bitcast double** %43 to i64*
  store i64 %1325, i64* %1326, align 8
  br label %1379

1327:                                             ; preds = %1316
  %1328 = ptrtoint double* %1318 to i64
  %1329 = bitcast double** %43 to i64*
  %1330 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1331 = load i64, i64* %1330, align 8
  %1332 = sub i64 %1328, %1331
  %1333 = ashr exact i64 %1332, 3
  %1334 = add nsw i64 %1333, 1
  %1335 = icmp ugt i64 %1334, 2305843009213693951
  br i1 %1335, label %1336, label %1338

1336:                                             ; preds = %1327
  %1337 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1337) #12
  unreachable

1338:                                             ; preds = %1327
  %1339 = bitcast double** %44 to i64*
  %1340 = sub i64 %1322, %1331
  %1341 = ashr exact i64 %1340, 3
  %1342 = icmp ult i64 %1341, 1152921504606846975
  br i1 %1342, label %1343, label %1351

1343:                                             ; preds = %1338
  %1344 = ashr exact i64 %1340, 2
  %1345 = icmp ult i64 %1344, %1334
  %1346 = select i1 %1345, i64 %1334, i64 %1344
  %1347 = icmp eq i64 %1346, 0
  br i1 %1347, label %1356, label %1348

1348:                                             ; preds = %1343
  %1349 = icmp ugt i64 %1346, 2305843009213693951
  br i1 %1349, label %1350, label %1351

1350:                                             ; preds = %1348
  call void @abort() #12
  unreachable

1351:                                             ; preds = %1348, %1338
  %1352 = phi i64 [ %1346, %1348 ], [ 2305843009213693951, %1338 ]
  %1353 = shl i64 %1352, 3
  %1354 = call i8* @_Znwm(i64 %1353) #11
  %1355 = bitcast i8* %1354 to double*
  br label %1356

1356:                                             ; preds = %1351, %1343
  %1357 = phi i64 [ %1352, %1351 ], [ 0, %1343 ]
  %1358 = phi double* [ %1355, %1351 ], [ null, %1343 ]
  %1359 = getelementptr inbounds double, double* %1358, i64 %1333
  %1360 = getelementptr inbounds double, double* %1358, i64 %1357
  %1361 = ptrtoint double* %1360 to i64
  store double %1319, double* %1359, align 8
  %1362 = getelementptr inbounds double, double* %1359, i64 1
  %1363 = ptrtoint double* %1362 to i64
  %1364 = sub i64 %1317, %1331
  %1365 = ashr exact i64 %1364, 3
  %1366 = sub nsw i64 0, %1365
  %1367 = getelementptr inbounds double, double* %1359, i64 %1366
  %1368 = ptrtoint double* %1367 to i64
  %1369 = icmp sgt i64 %1364, 0
  br i1 %1369, label %1370, label %1373

1370:                                             ; preds = %1356
  %1371 = bitcast double* %1367 to i8*
  %1372 = inttoptr i64 %1331 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1371, i8* align 8 %1372, i64 %1364, i1 false) #10
  br label %1373

1373:                                             ; preds = %1370, %1356
  store i64 %1368, i64* %1330, align 8
  store i64 %1363, i64* %1329, align 8
  store i64 %1361, i64* %1339, align 8
  %1374 = icmp eq i64 %1331, 0
  br i1 %1374, label %1379, label %1375

1375:                                             ; preds = %1373
  %1376 = inttoptr i64 %1331 to i8*
  call void @_ZdlPv(i8* %1376) #11
  %1377 = load double*, double** %43, align 8
  %1378 = ptrtoint double* %1377 to i64
  br label %1379

1379:                                             ; preds = %1323, %1373, %1375
  %1380 = phi i64 [ %1325, %1323 ], [ %1363, %1373 ], [ %1378, %1375 ]
  %1381 = phi double* [ %1324, %1323 ], [ %1362, %1373 ], [ %1377, %1375 ]
  %1382 = uitofp i32 %3 to double
  %1383 = load double*, double** %44, align 8
  %1384 = icmp ult double* %1381, %1383
  %1385 = ptrtoint double* %1383 to i64
  br i1 %1384, label %1386, label %1390

1386:                                             ; preds = %1379
  store double %1382, double* %1381, align 8
  %1387 = getelementptr inbounds double, double* %1381, i64 1
  %1388 = ptrtoint double* %1387 to i64
  %1389 = bitcast double** %43 to i64*
  store i64 %1388, i64* %1389, align 8
  br label %1442

1390:                                             ; preds = %1379
  %1391 = ptrtoint double* %1381 to i64
  %1392 = bitcast double** %43 to i64*
  %1393 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1394 = load i64, i64* %1393, align 8
  %1395 = sub i64 %1391, %1394
  %1396 = ashr exact i64 %1395, 3
  %1397 = add nsw i64 %1396, 1
  %1398 = icmp ugt i64 %1397, 2305843009213693951
  br i1 %1398, label %1399, label %1401

1399:                                             ; preds = %1390
  %1400 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1400) #12
  unreachable

1401:                                             ; preds = %1390
  %1402 = bitcast double** %44 to i64*
  %1403 = sub i64 %1385, %1394
  %1404 = ashr exact i64 %1403, 3
  %1405 = icmp ult i64 %1404, 1152921504606846975
  br i1 %1405, label %1406, label %1414

1406:                                             ; preds = %1401
  %1407 = ashr exact i64 %1403, 2
  %1408 = icmp ult i64 %1407, %1397
  %1409 = select i1 %1408, i64 %1397, i64 %1407
  %1410 = icmp eq i64 %1409, 0
  br i1 %1410, label %1419, label %1411

1411:                                             ; preds = %1406
  %1412 = icmp ugt i64 %1409, 2305843009213693951
  br i1 %1412, label %1413, label %1414

1413:                                             ; preds = %1411
  call void @abort() #12
  unreachable

1414:                                             ; preds = %1411, %1401
  %1415 = phi i64 [ %1409, %1411 ], [ 2305843009213693951, %1401 ]
  %1416 = shl i64 %1415, 3
  %1417 = call i8* @_Znwm(i64 %1416) #11
  %1418 = bitcast i8* %1417 to double*
  br label %1419

1419:                                             ; preds = %1414, %1406
  %1420 = phi i64 [ %1415, %1414 ], [ 0, %1406 ]
  %1421 = phi double* [ %1418, %1414 ], [ null, %1406 ]
  %1422 = getelementptr inbounds double, double* %1421, i64 %1396
  %1423 = getelementptr inbounds double, double* %1421, i64 %1420
  %1424 = ptrtoint double* %1423 to i64
  store double %1382, double* %1422, align 8
  %1425 = getelementptr inbounds double, double* %1422, i64 1
  %1426 = ptrtoint double* %1425 to i64
  %1427 = sub i64 %1380, %1394
  %1428 = ashr exact i64 %1427, 3
  %1429 = sub nsw i64 0, %1428
  %1430 = getelementptr inbounds double, double* %1422, i64 %1429
  %1431 = ptrtoint double* %1430 to i64
  %1432 = icmp sgt i64 %1427, 0
  br i1 %1432, label %1433, label %1436

1433:                                             ; preds = %1419
  %1434 = bitcast double* %1430 to i8*
  %1435 = inttoptr i64 %1394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1434, i8* align 8 %1435, i64 %1427, i1 false) #10
  br label %1436

1436:                                             ; preds = %1433, %1419
  store i64 %1431, i64* %1393, align 8
  store i64 %1426, i64* %1392, align 8
  store i64 %1424, i64* %1402, align 8
  %1437 = icmp eq i64 %1394, 0
  br i1 %1437, label %1442, label %1438

1438:                                             ; preds = %1436
  %1439 = inttoptr i64 %1394 to i8*
  call void @_ZdlPv(i8* %1439) #11
  %1440 = load double*, double** %43, align 8
  %1441 = ptrtoint double* %1440 to i64
  br label %1442

1442:                                             ; preds = %1386, %1436, %1438
  %1443 = phi i64 [ %1388, %1386 ], [ %1426, %1436 ], [ %1441, %1438 ]
  %1444 = phi double* [ %1387, %1386 ], [ %1425, %1436 ], [ %1440, %1438 ]
  %1445 = fcmp ogt double %1382, 1.000000e+00
  %1446 = select i1 %1445, double %1382, double 1.000000e+00
  %1447 = fdiv double %1319, %1446
  %1448 = load double*, double** %44, align 8
  %1449 = icmp ult double* %1444, %1448
  %1450 = ptrtoint double* %1448 to i64
  br i1 %1449, label %1451, label %1455

1451:                                             ; preds = %1442
  store double %1447, double* %1444, align 8
  %1452 = getelementptr inbounds double, double* %1444, i64 1
  %1453 = ptrtoint double* %1452 to i64
  %1454 = bitcast double** %43 to i64*
  store i64 %1453, i64* %1454, align 8
  br label %1507

1455:                                             ; preds = %1442
  %1456 = ptrtoint double* %1444 to i64
  %1457 = bitcast double** %43 to i64*
  %1458 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1459 = load i64, i64* %1458, align 8
  %1460 = sub i64 %1456, %1459
  %1461 = ashr exact i64 %1460, 3
  %1462 = add nsw i64 %1461, 1
  %1463 = icmp ugt i64 %1462, 2305843009213693951
  br i1 %1463, label %1464, label %1466

1464:                                             ; preds = %1455
  %1465 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1465) #12
  unreachable

1466:                                             ; preds = %1455
  %1467 = bitcast double** %44 to i64*
  %1468 = sub i64 %1450, %1459
  %1469 = ashr exact i64 %1468, 3
  %1470 = icmp ult i64 %1469, 1152921504606846975
  br i1 %1470, label %1471, label %1479

1471:                                             ; preds = %1466
  %1472 = ashr exact i64 %1468, 2
  %1473 = icmp ult i64 %1472, %1462
  %1474 = select i1 %1473, i64 %1462, i64 %1472
  %1475 = icmp eq i64 %1474, 0
  br i1 %1475, label %1484, label %1476

1476:                                             ; preds = %1471
  %1477 = icmp ugt i64 %1474, 2305843009213693951
  br i1 %1477, label %1478, label %1479

1478:                                             ; preds = %1476
  call void @abort() #12
  unreachable

1479:                                             ; preds = %1476, %1466
  %1480 = phi i64 [ %1474, %1476 ], [ 2305843009213693951, %1466 ]
  %1481 = shl i64 %1480, 3
  %1482 = call i8* @_Znwm(i64 %1481) #11
  %1483 = bitcast i8* %1482 to double*
  br label %1484

1484:                                             ; preds = %1479, %1471
  %1485 = phi i64 [ %1480, %1479 ], [ 0, %1471 ]
  %1486 = phi double* [ %1483, %1479 ], [ null, %1471 ]
  %1487 = getelementptr inbounds double, double* %1486, i64 %1461
  %1488 = getelementptr inbounds double, double* %1486, i64 %1485
  %1489 = ptrtoint double* %1488 to i64
  store double %1447, double* %1487, align 8
  %1490 = getelementptr inbounds double, double* %1487, i64 1
  %1491 = ptrtoint double* %1490 to i64
  %1492 = sub i64 %1443, %1459
  %1493 = ashr exact i64 %1492, 3
  %1494 = sub nsw i64 0, %1493
  %1495 = getelementptr inbounds double, double* %1487, i64 %1494
  %1496 = ptrtoint double* %1495 to i64
  %1497 = icmp sgt i64 %1492, 0
  br i1 %1497, label %1498, label %1501

1498:                                             ; preds = %1484
  %1499 = bitcast double* %1495 to i8*
  %1500 = inttoptr i64 %1459 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1499, i8* align 8 %1500, i64 %1492, i1 false) #10
  br label %1501

1501:                                             ; preds = %1498, %1484
  store i64 %1496, i64* %1458, align 8
  store i64 %1491, i64* %1457, align 8
  store i64 %1489, i64* %1467, align 8
  %1502 = icmp eq i64 %1459, 0
  br i1 %1502, label %1507, label %1503

1503:                                             ; preds = %1501
  %1504 = inttoptr i64 %1459 to i8*
  call void @_ZdlPv(i8* %1504) #11
  %1505 = load double*, double** %43, align 8
  %1506 = ptrtoint double* %1505 to i64
  br label %1507

1507:                                             ; preds = %1451, %1501, %1503
  %1508 = phi i64 [ %1453, %1451 ], [ %1491, %1501 ], [ %1506, %1503 ]
  %1509 = phi double* [ %1452, %1451 ], [ %1490, %1501 ], [ %1505, %1503 ]
  %1510 = load double*, double** %44, align 8
  %1511 = icmp eq double* %1509, %1510
  br i1 %1511, label %1516, label %1512

1512:                                             ; preds = %1507
  store double %6, double* %1509, align 8
  %1513 = getelementptr inbounds double, double* %1509, i64 1
  %1514 = ptrtoint double* %1513 to i64
  %1515 = bitcast double** %43 to i64*
  store i64 %1514, i64* %1515, align 8
  br label %1566

1516:                                             ; preds = %1507
  %1517 = ptrtoint double* %1510 to i64
  %1518 = bitcast double** %43 to i64*
  %1519 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1520 = load i64, i64* %1519, align 8
  %1521 = sub i64 %1517, %1520
  %1522 = ashr exact i64 %1521, 3
  %1523 = add nsw i64 %1522, 1
  %1524 = icmp ugt i64 %1523, 2305843009213693951
  br i1 %1524, label %1525, label %1527

1525:                                             ; preds = %1516
  %1526 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1526) #12
  unreachable

1527:                                             ; preds = %1516
  %1528 = bitcast double** %44 to i64*
  %1529 = icmp ult i64 %1522, 1152921504606846975
  br i1 %1529, label %1530, label %1538

1530:                                             ; preds = %1527
  %1531 = ashr exact i64 %1521, 2
  %1532 = icmp ult i64 %1531, %1523
  %1533 = select i1 %1532, i64 %1523, i64 %1531
  %1534 = icmp eq i64 %1533, 0
  br i1 %1534, label %1543, label %1535

1535:                                             ; preds = %1530
  %1536 = icmp ugt i64 %1533, 2305843009213693951
  br i1 %1536, label %1537, label %1538

1537:                                             ; preds = %1535
  call void @abort() #12
  unreachable

1538:                                             ; preds = %1535, %1527
  %1539 = phi i64 [ %1533, %1535 ], [ 2305843009213693951, %1527 ]
  %1540 = shl i64 %1539, 3
  %1541 = call i8* @_Znwm(i64 %1540) #11
  %1542 = bitcast i8* %1541 to double*
  br label %1543

1543:                                             ; preds = %1538, %1530
  %1544 = phi i64 [ %1539, %1538 ], [ 0, %1530 ]
  %1545 = phi double* [ %1542, %1538 ], [ null, %1530 ]
  %1546 = getelementptr inbounds double, double* %1545, i64 %1522
  %1547 = getelementptr inbounds double, double* %1545, i64 %1544
  %1548 = ptrtoint double* %1547 to i64
  store double %6, double* %1546, align 8
  %1549 = getelementptr inbounds double, double* %1546, i64 1
  %1550 = ptrtoint double* %1549 to i64
  %1551 = sub i64 %1508, %1520
  %1552 = ashr exact i64 %1551, 3
  %1553 = sub nsw i64 0, %1552
  %1554 = getelementptr inbounds double, double* %1546, i64 %1553
  %1555 = ptrtoint double* %1554 to i64
  %1556 = icmp sgt i64 %1551, 0
  br i1 %1556, label %1557, label %1560

1557:                                             ; preds = %1543
  %1558 = bitcast double* %1554 to i8*
  %1559 = inttoptr i64 %1520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1558, i8* align 8 %1559, i64 %1551, i1 false) #10
  br label %1560

1560:                                             ; preds = %1557, %1543
  store i64 %1555, i64* %1519, align 8
  store i64 %1550, i64* %1518, align 8
  store i64 %1548, i64* %1528, align 8
  %1561 = icmp eq i64 %1520, 0
  br i1 %1561, label %1566, label %1562

1562:                                             ; preds = %1560
  %1563 = inttoptr i64 %1520 to i8*
  call void @_ZdlPv(i8* %1563) #11
  %1564 = load double*, double** %43, align 8
  %1565 = ptrtoint double* %1564 to i64
  br label %1566

1566:                                             ; preds = %1512, %1560, %1562
  %1567 = phi i64 [ %1514, %1512 ], [ %1550, %1560 ], [ %1565, %1562 ]
  %1568 = phi double* [ %1513, %1512 ], [ %1549, %1560 ], [ %1564, %1562 ]
  %1569 = load double*, double** %44, align 8
  %1570 = icmp eq double* %1568, %1569
  br i1 %1570, label %1575, label %1571

1571:                                             ; preds = %1566
  store double %7, double* %1568, align 8
  %1572 = getelementptr inbounds double, double* %1568, i64 1
  %1573 = ptrtoint double* %1572 to i64
  %1574 = bitcast double** %43 to i64*
  store i64 %1573, i64* %1574, align 8
  br label %1625

1575:                                             ; preds = %1566
  %1576 = ptrtoint double* %1569 to i64
  %1577 = bitcast double** %43 to i64*
  %1578 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1579 = load i64, i64* %1578, align 8
  %1580 = sub i64 %1576, %1579
  %1581 = ashr exact i64 %1580, 3
  %1582 = add nsw i64 %1581, 1
  %1583 = icmp ugt i64 %1582, 2305843009213693951
  br i1 %1583, label %1584, label %1586

1584:                                             ; preds = %1575
  %1585 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1585) #12
  unreachable

1586:                                             ; preds = %1575
  %1587 = bitcast double** %44 to i64*
  %1588 = icmp ult i64 %1581, 1152921504606846975
  br i1 %1588, label %1589, label %1597

1589:                                             ; preds = %1586
  %1590 = ashr exact i64 %1580, 2
  %1591 = icmp ult i64 %1590, %1582
  %1592 = select i1 %1591, i64 %1582, i64 %1590
  %1593 = icmp eq i64 %1592, 0
  br i1 %1593, label %1602, label %1594

1594:                                             ; preds = %1589
  %1595 = icmp ugt i64 %1592, 2305843009213693951
  br i1 %1595, label %1596, label %1597

1596:                                             ; preds = %1594
  call void @abort() #12
  unreachable

1597:                                             ; preds = %1594, %1586
  %1598 = phi i64 [ %1592, %1594 ], [ 2305843009213693951, %1586 ]
  %1599 = shl i64 %1598, 3
  %1600 = call i8* @_Znwm(i64 %1599) #11
  %1601 = bitcast i8* %1600 to double*
  br label %1602

1602:                                             ; preds = %1597, %1589
  %1603 = phi i64 [ %1598, %1597 ], [ 0, %1589 ]
  %1604 = phi double* [ %1601, %1597 ], [ null, %1589 ]
  %1605 = getelementptr inbounds double, double* %1604, i64 %1581
  %1606 = getelementptr inbounds double, double* %1604, i64 %1603
  %1607 = ptrtoint double* %1606 to i64
  store double %7, double* %1605, align 8
  %1608 = getelementptr inbounds double, double* %1605, i64 1
  %1609 = ptrtoint double* %1608 to i64
  %1610 = sub i64 %1567, %1579
  %1611 = ashr exact i64 %1610, 3
  %1612 = sub nsw i64 0, %1611
  %1613 = getelementptr inbounds double, double* %1605, i64 %1612
  %1614 = ptrtoint double* %1613 to i64
  %1615 = icmp sgt i64 %1610, 0
  br i1 %1615, label %1616, label %1619

1616:                                             ; preds = %1602
  %1617 = bitcast double* %1613 to i8*
  %1618 = inttoptr i64 %1579 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1617, i8* align 8 %1618, i64 %1610, i1 false) #10
  br label %1619

1619:                                             ; preds = %1616, %1602
  store i64 %1614, i64* %1578, align 8
  store i64 %1609, i64* %1577, align 8
  store i64 %1607, i64* %1587, align 8
  %1620 = icmp eq i64 %1579, 0
  br i1 %1620, label %1625, label %1621

1621:                                             ; preds = %1619
  %1622 = inttoptr i64 %1579 to i8*
  call void @_ZdlPv(i8* %1622) #11
  %1623 = load double*, double** %43, align 8
  %1624 = ptrtoint double* %1623 to i64
  br label %1625

1625:                                             ; preds = %1571, %1619, %1621
  %1626 = phi i64 [ %1573, %1571 ], [ %1609, %1619 ], [ %1624, %1621 ]
  %1627 = phi double* [ %1572, %1571 ], [ %1608, %1619 ], [ %1623, %1621 ]
  %1628 = load double*, double** %44, align 8
  %1629 = icmp eq double* %1627, %1628
  br i1 %1629, label %1634, label %1630

1630:                                             ; preds = %1625
  store double %8, double* %1627, align 8
  %1631 = getelementptr inbounds double, double* %1627, i64 1
  %1632 = ptrtoint double* %1631 to i64
  %1633 = bitcast double** %43 to i64*
  store i64 %1632, i64* %1633, align 8
  br label %1682

1634:                                             ; preds = %1625
  %1635 = ptrtoint double* %1628 to i64
  %1636 = bitcast double** %43 to i64*
  %1637 = bitcast %"class.std::__1::vector"* %0 to i64*
  %1638 = load i64, i64* %1637, align 8
  %1639 = sub i64 %1635, %1638
  %1640 = ashr exact i64 %1639, 3
  %1641 = add nsw i64 %1640, 1
  %1642 = icmp ugt i64 %1641, 2305843009213693951
  br i1 %1642, label %1643, label %1645

1643:                                             ; preds = %1634
  %1644 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1644) #12
  unreachable

1645:                                             ; preds = %1634
  %1646 = bitcast double** %44 to i64*
  %1647 = icmp ult i64 %1640, 1152921504606846975
  br i1 %1647, label %1648, label %1656

1648:                                             ; preds = %1645
  %1649 = ashr exact i64 %1639, 2
  %1650 = icmp ult i64 %1649, %1641
  %1651 = select i1 %1650, i64 %1641, i64 %1649
  %1652 = icmp eq i64 %1651, 0
  br i1 %1652, label %1661, label %1653

1653:                                             ; preds = %1648
  %1654 = icmp ugt i64 %1651, 2305843009213693951
  br i1 %1654, label %1655, label %1656

1655:                                             ; preds = %1653
  call void @abort() #12
  unreachable

1656:                                             ; preds = %1653, %1645
  %1657 = phi i64 [ %1651, %1653 ], [ 2305843009213693951, %1645 ]
  %1658 = shl i64 %1657, 3
  %1659 = call i8* @_Znwm(i64 %1658) #11
  %1660 = bitcast i8* %1659 to double*
  br label %1661

1661:                                             ; preds = %1656, %1648
  %1662 = phi i64 [ %1657, %1656 ], [ 0, %1648 ]
  %1663 = phi double* [ %1660, %1656 ], [ null, %1648 ]
  %1664 = getelementptr inbounds double, double* %1663, i64 %1640
  %1665 = getelementptr inbounds double, double* %1663, i64 %1662
  %1666 = ptrtoint double* %1665 to i64
  store double %8, double* %1664, align 8
  %1667 = getelementptr inbounds double, double* %1664, i64 1
  %1668 = ptrtoint double* %1667 to i64
  %1669 = sub i64 %1626, %1638
  %1670 = ashr exact i64 %1669, 3
  %1671 = sub nsw i64 0, %1670
  %1672 = getelementptr inbounds double, double* %1664, i64 %1671
  %1673 = ptrtoint double* %1672 to i64
  %1674 = icmp sgt i64 %1669, 0
  br i1 %1674, label %1675, label %1678

1675:                                             ; preds = %1661
  %1676 = bitcast double* %1672 to i8*
  %1677 = inttoptr i64 %1638 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1676, i8* align 8 %1677, i64 %1669, i1 false) #10
  br label %1678

1678:                                             ; preds = %1675, %1661
  store i64 %1673, i64* %1637, align 8
  store i64 %1668, i64* %1636, align 8
  store i64 %1666, i64* %1646, align 8
  %1679 = icmp eq i64 %1638, 0
  br i1 %1679, label %1682, label %1680

1680:                                             ; preds = %1678
  %1681 = inttoptr i64 %1638 to i8*
  call void @_ZdlPv(i8* %1681) #11
  br label %1682

1682:                                             ; preds = %1630, %1678, %1680
  %1683 = load i8, i8* %59, align 1
  %1684 = icmp slt i8 %1683, 0
  br i1 %1684, label %1685, label %1687

1685:                                             ; preds = %1682
  %1686 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %1686) #11
  br label %1687

1687:                                             ; preds = %1682, %1685
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #4

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN3re23RE2C1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.re2::RE2"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #3

declare zeroext i1 @_ZN3re23RE215FindAndConsumeNEPNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"*, %"class.re2::RE2"* dereferenceable(200), %"class.re2::RE2::Arg"**, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!4 = distinct !{!4, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!5 = distinct !{!5, !6, !"_ZNK4GURL4pathEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4GURL4pathEv"}
!7 = !{i8 0, i8 2}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!10 = distinct !{!10, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!11 = distinct !{!11, !12, !"_ZNK4GURL4pathEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4GURL4pathEv"}
