; ModuleID = '../../net/third_party/quiche/src/quic/core/crypto/certificate_view.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/crypto/certificate_view.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.cbs_st = type { i8*, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.quiche::QuicheDataReader" = type <{ i8*, i64, i64, i32, [4 x i8] }>
%"struct.quic::PemReadResult" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_istream" = type { i32 (...)**, i64, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.quic::CertificateView" = type { %"class.quic::QuicWallTime", %"class.quic::QuicWallTime", %"class.absl::string_view", %"class.std::__1::unique_ptr.14", %"class.std::__1::vector", %"class.std::__1::vector.24" }
%"class.quic::QuicWallTime" = type { i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.17, %struct.evp_pkey_asn1_method_st* }
%union.anon.17 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.absl::string_view"* }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"*, %"class.std::__1::__compressed_pair.28" }
%"class.quic::QuicIpAddress" = type { %union.anon.26, i32 }
%union.anon.26 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.27 }
%union.anon.27 = type { [4 x i32] }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.quic::QuicIpAddress"* }
%struct.ec_key_st = type opaque
%struct.ec_group_st = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::basic_string"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.engine_st = type opaque
%"class.quic::CertificatePrivateKey" = type { %"class.std::__1::unique_ptr.14" }
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.bn_blinding_st = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZN4absl16strings_internal13JoinAlgorithmINSt3__111__wrap_iterIPKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvEES9_T_SD_NS_11string_viewENS0_11NoFormatterE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"-----BEGIN \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"-----END \00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"-----\00", align 1
@_ZN4quic12_GLOBAL__N_112kX509VersionE = internal constant [3 x i8] c"\02\01\02", align 1
@_ZN4quic12_GLOBAL__N_118kSubjectAltNameOidE = internal constant [3 x i8] c"U\1D\11", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"CERTIFICATE\00", align 1
@.str.7 = private unnamed_addr constant [70 x i8] c"../../net/third_party/quiche/src/quic/core/crypto/certificate_view.cc\00", align 1
@.str.8 = private unnamed_addr constant [83 x i8] c"Mismatch between the requested signature algorithm and the type of the public key.\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"PRIVATE KEY\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"RSA PRIVATE KEY\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"EC PARAMETERS\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"EC PRIVATE KEY\00", align 1
@.str.13 = private unnamed_addr constant [84 x i8] c"Mismatch between the requested signature algorithm and the type of the private key.\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"U\04\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZN4absl14ascii_internal13kPropertyBitsE = external local_unnamed_addr constant [256 x i8], align 16
@.str.23 = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic25X509NameAttributeToStringE6cbs_st(%"class.absl::optional"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.cbs_st*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.cbs_st*
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.absl::AlphaNum", align 8
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %struct.cbs_st*
  %15 = alloca <2 x i64>, align 16
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.absl::AlphaNum", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.absl::AlphaNum", align 8
  %21 = alloca %"class.absl::AlphaNum", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %12, i64 0, i32 0
  store i8* %1, i8** %23, align 8
  %24 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %12, i64 0, i32 1
  store i64 %2, i64* %24, align 8
  %25 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = bitcast <2 x i64>* %15 to i8*
  %27 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  %28 = bitcast i32* %16 to i8*
  %29 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %29, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #12
  store i32 -1431655766, i32* %16, align 4
  %30 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %14, i32 6) #12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %3
  %33 = bitcast <2 x i64>* %15 to %struct.cbs_st*
  %34 = call i32 @CBS_get_any_asn1(%struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %33, i32* nonnull %16) #12
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = call i64 @CBS_len(%struct.cbs_st* nonnull %12) #12
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %36, %32, %3
  %40 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = bitcast %union.anon* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  br label %214

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %45 = bitcast %"class.absl::AlphaNum"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #12
  %46 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  %47 = load <2 x i64>, <2 x i64>* %13, align 16, !noalias !2
  %48 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #12, !noalias !2
  store <2 x i64> %47, <2 x i64>* %6, align 16, !noalias !2
  %49 = call i8* @CBS_data(%struct.cbs_st* nonnull %7) #12
  %50 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #12
  %51 = icmp sgt i64 %50, -1
  br i1 %51, label %53, label %52, !prof !5

52:                                               ; preds = %43
  call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12, !noalias !2
  %54 = icmp eq i64 %50, 3
  br i1 %54, label %55, label %89

55:                                               ; preds = %53
  %56 = call i32 @bcmp(i8* %49, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i64 2) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %89

58:                                               ; preds = %55
  %59 = getelementptr inbounds i8, i8* %49, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  switch i32 %61, label %89 [
    i32 3, label %62
    i32 7, label %67
    i32 8, label %71
    i32 10, label %76
    i32 11, label %80
    i32 6, label %85
  ]

62:                                               ; preds = %58
  %63 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 2, i8* %64, align 1, !alias.scope !2
  %65 = bitcast %"class.std::__1::basic_string"* %19 to i16*
  store i16 20035, i16* %65, align 8, !alias.scope !2
  %66 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 0, i8* %66, align 2, !alias.scope !2
  br label %150

67:                                               ; preds = %58
  %68 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 1, i8* %69, align 1, !alias.scope !2
  store i8 76, i8* %46, align 8, !alias.scope !2
  %70 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 0, i8* %70, align 1, !alias.scope !2
  br label %150

71:                                               ; preds = %58
  %72 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 2, i8* %73, align 1, !alias.scope !2
  %74 = bitcast %"class.std::__1::basic_string"* %19 to i16*
  store i16 21587, i16* %74, align 8, !alias.scope !2
  %75 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 0, i8* %75, align 2, !alias.scope !2
  br label %150

76:                                               ; preds = %58
  %77 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 1, i8* %78, align 1, !alias.scope !2
  store i8 79, i8* %46, align 8, !alias.scope !2
  %79 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 0, i8* %79, align 1, !alias.scope !2
  br label %150

80:                                               ; preds = %58
  %81 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  store i8 2, i8* %82, align 1, !alias.scope !2
  %83 = bitcast %"class.std::__1::basic_string"* %19 to i16*
  store i16 21839, i16* %83, align 8, !alias.scope !2
  %84 = getelementptr inbounds i8, i8* %46, i64 2
  store i8 0, i8* %84, align 2, !alias.scope !2
  br label %150

85:                                               ; preds = %58
  %86 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  store i8 1, i8* %87, align 1, !alias.scope !2
  store i8 67, i8* %46, align 8, !alias.scope !2
  %88 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 0, i8* %88, align 1, !alias.scope !2
  br label %150

89:                                               ; preds = %58, %55, %53
  %90 = call i8* @CBS_asn1_oid_to_text(%struct.cbs_st* nonnull %14) #12
  %91 = icmp eq i8* %90, null
  br i1 %91, label %92, label %125

92:                                               ; preds = %89
  %93 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %93) #12, !noalias !2
  %94 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i8** %94, align 8, !noalias !2
  %95 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 1, i64* %95, align 8, !noalias !2
  %96 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %96) #12, !noalias !2
  %97 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12, !noalias !2
  call void @_ZN4absl16BytesToHexStringENS_11string_viewE(%"class.std::__1::basic_string"* nonnull sret %10, i8* %49, i64 %50) #12
  %98 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = load i8, i8* %99, align 1, !noalias !2
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %92
  %103 = zext i8 %100 to i64
  %104 = bitcast %"class.absl::AlphaNum"* %9 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %104, align 8, !noalias !2
  br label %113

105:                                              ; preds = %92
  %106 = bitcast %"class.std::__1::basic_string"* %10 to i64*
  %107 = load i64, i64* %106, align 8, !noalias !2
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8, !noalias !2
  %110 = bitcast %"class.absl::AlphaNum"* %9 to i64*
  store i64 %107, i64* %110, align 8, !noalias !2
  %111 = icmp sgt i64 %109, -1
  br i1 %111, label %113, label %112, !prof !5

112:                                              ; preds = %105
  call void @llvm.trap() #12
  unreachable

113:                                              ; preds = %105, %102
  %114 = phi i64 [ %103, %102 ], [ %109, %105 ]
  %115 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 1
  store i64 %114, i64* %115, align 8, !noalias !2
  %116 = bitcast %"class.absl::AlphaNum"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %116) #12, !noalias !2
  %117 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i8** %117, align 8, !noalias !2
  %118 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 1
  store i64 1, i64* %118, align 8, !noalias !2
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %19, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %116) #12, !noalias !2
  %119 = load i8, i8* %99, align 1, !noalias !2
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8, !noalias !2
  call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %121, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #12, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %96) #12, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %93) #12, !noalias !2
  br label %150

125:                                              ; preds = %89
  %126 = call i64 @strlen(i8* nonnull %90) #12
  %127 = icmp ugt i64 %126, -17
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = bitcast %"class.std::__1::basic_string"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %129) #14
  unreachable

130:                                              ; preds = %125
  %131 = icmp ult i64 %126, 23
  br i1 %131, label %140, label %132

132:                                              ; preds = %130
  %133 = add nuw i64 %126, 16
  %134 = and i64 %133, -16
  %135 = call i8* @_Znwm(i64 %134) #13
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %135, i8** %136, align 8, !alias.scope !2
  %137 = or i64 %134, -9223372036854775808
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %137, i64* %138, align 8, !alias.scope !2
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %126, i64* %139, align 8, !alias.scope !2
  br label %145

140:                                              ; preds = %130
  %141 = trunc i64 %126 to i8
  %142 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  store i8 %141, i8* %143, align 1, !alias.scope !2
  %144 = icmp eq i64 %126, 0
  br i1 %144, label %147, label %145

145:                                              ; preds = %140, %132
  %146 = phi i8* [ %135, %132 ], [ %46, %140 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %146, i8* nonnull align 1 %90, i64 %126, i1 false) #12
  br label %147

147:                                              ; preds = %145, %140
  %148 = phi i8* [ %46, %140 ], [ %146, %145 ]
  %149 = getelementptr inbounds i8, i8* %148, i64 %126
  store i8 0, i8* %149, align 1
  call void @OPENSSL_free(i8* nonnull %90) #12
  br label %150

150:                                              ; preds = %62, %67, %71, %76, %80, %85, %124, %147
  %151 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %152 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %151, i64 0, i32 1, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = icmp slt i8 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %150
  %156 = zext i8 %153 to i64
  %157 = bitcast %"class.absl::AlphaNum"* %18 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %19, %"class.std::__1::basic_string"** %157, align 8
  br label %166

158:                                              ; preds = %150
  %159 = bitcast %"class.std::__1::basic_string"* %19 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.absl::AlphaNum"* %18 to i64*
  store i64 %160, i64* %163, align 8
  %164 = icmp sgt i64 %162, -1
  br i1 %164, label %166, label %165, !prof !5

165:                                              ; preds = %158
  call void @llvm.trap() #12
  unreachable

166:                                              ; preds = %155, %158
  %167 = phi i64 [ %156, %155 ], [ %162, %158 ]
  %168 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %18, i64 0, i32 0, i32 1
  store i64 %167, i64* %168, align 8
  %169 = bitcast %"class.absl::AlphaNum"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %169) #12
  %170 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %20, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %170, align 8
  %171 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %20, i64 0, i32 0, i32 1
  store i64 1, i64* %171, align 8
  %172 = bitcast %"class.absl::AlphaNum"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %172) #12
  %173 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #12
  %174 = load <2 x i64>, <2 x i64>* %15, align 16
  %175 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175)
  store <2 x i64> %174, <2 x i64>* %4, align 16
  %176 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #12
  %177 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #12
  %178 = icmp sgt i64 %177, -1
  br i1 %178, label %180, label %179, !prof !5

179:                                              ; preds = %166
  call void @llvm.trap() #12
  unreachable

180:                                              ; preds = %166
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175)
  call void @_ZN4absl10CHexEscapeENS_11string_viewE(%"class.std::__1::basic_string"* nonnull sret %22, i8* %176, i64 %177) #12
  %181 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = zext i8 %183 to i64
  %187 = bitcast %"class.absl::AlphaNum"* %21 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %187, align 8
  br label %196

188:                                              ; preds = %180
  %189 = bitcast %"class.std::__1::basic_string"* %22 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.absl::AlphaNum"* %21 to i64*
  store i64 %190, i64* %193, align 8
  %194 = icmp sgt i64 %192, -1
  br i1 %194, label %196, label %195, !prof !5

195:                                              ; preds = %188
  call void @llvm.trap() #12
  unreachable

196:                                              ; preds = %185, %188
  %197 = phi i64 [ %186, %185 ], [ %192, %188 ]
  %198 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %21, i64 0, i32 0, i32 1
  store i64 %197, i64* %198, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %17, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %18, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %20, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %21) #12
  %199 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %199, align 8
  %200 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %201 = bitcast %"class.std::__1::basic_string"* %200 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %201, i8* nonnull align 8 %44, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #12
  %202 = load i8, i8* %182, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %207

204:                                              ; preds = %196
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %206) #13
  br label %207

207:                                              ; preds = %196, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %172) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %169) #12
  %208 = load i8, i8* %152, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void @_ZdlPv(i8* %212) #13
  br label %213

213:                                              ; preds = %207, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br label %214

214:                                              ; preds = %213, %39
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_get_any_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN4absl10CHexEscapeENS_11string_viewE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN4quic12ParseDerTimeEjN4absl11string_viewE(i32, i8*, i64) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.quiche::QuicheDataReader", align 8
  %11 = add i32 %0, -23
  %12 = icmp ugt i32 %11, 1
  br i1 %12, label %74, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %0, 24
  %15 = select i1 %14, i64 4, i64 2
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  store i64 -6148914691236517206, i64* %4, align 8
  %17 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  store i64 -6148914691236517206, i64* %5, align 8
  %18 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %19 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %20 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  store i64 -6148914691236517206, i64* %8, align 8
  %21 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  store i64 -6148914691236517206, i64* %9, align 8
  %22 = bitcast %"class.quiche::QuicheDataReader"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #12
  %23 = bitcast %"class.quiche::QuicheDataReader"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 32, i1 false)
  call void @_ZN6quiche16QuicheDataReaderC1EN4absl11string_viewE(%"class.quiche::QuicheDataReader"* nonnull %10, i8* %1, i64 %2) #12
  %24 = call zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"* nonnull %10, i64 %15, i64* nonnull %4) #12
  br i1 %24, label %25, label %71

25:                                               ; preds = %13
  %26 = call zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"* nonnull %10, i64 2, i64* nonnull %5) #12
  br i1 %26, label %27, label %71

27:                                               ; preds = %25
  %28 = call zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"* nonnull %10, i64 2, i64* nonnull %6) #12
  br i1 %28, label %29, label %71

29:                                               ; preds = %27
  %30 = call zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"* nonnull %10, i64 2, i64* nonnull %7) #12
  br i1 %30, label %31, label %71

31:                                               ; preds = %29
  %32 = call zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"* nonnull %10, i64 2, i64* nonnull %8) #12
  br i1 %32, label %33, label %71

33:                                               ; preds = %31
  %34 = call zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"* nonnull %10, i64 2, i64* nonnull %9) #12
  br i1 %34, label %35, label %71

35:                                               ; preds = %33
  %36 = call { i8*, i64 } @_ZN6quiche16QuicheDataReader20ReadRemainingPayloadEv(%"class.quiche::QuicheDataReader"* nonnull %10) #12
  %37 = extractvalue { i8*, i64 } %36, 1
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %71

39:                                               ; preds = %35
  %40 = extractvalue { i8*, i64 } %36, 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 90
  br i1 %42, label %43, label %71

43:                                               ; preds = %39
  %44 = icmp eq i32 %0, 23
  %45 = load i64, i64* %4, align 8
  br i1 %44, label %46, label %50

46:                                               ; preds = %43
  %47 = icmp ugt i64 %45, 49
  %48 = select i1 %47, i64 1900, i64 2000
  %49 = add i64 %48, %45
  store i64 %49, i64* %4, align 8
  br label %50

50:                                               ; preds = %43, %46
  %51 = phi i64 [ %49, %46 ], [ %45, %43 ]
  %52 = trunc i64 %51 to i32
  %53 = load i64, i64* %5, align 8
  %54 = trunc i64 %53 to i32
  %55 = load i64, i64* %6, align 8
  %56 = trunc i64 %55 to i32
  %57 = load i64, i64* %7, align 8
  %58 = trunc i64 %57 to i32
  %59 = load i64, i64* %8, align 8
  %60 = trunc i64 %59 to i32
  %61 = load i64, i64* %9, align 8
  %62 = trunc i64 %61 to i32
  %63 = call { i8, i64 } @_ZN6quiche34QuicheUtcDateTimeToUnixSecondsImplEiiiiii(i32 %52, i32 %54, i32 %56, i32 %58, i32 %60, i32 %62) #12
  %64 = extractvalue { i8, i64 } %63, 0
  %65 = extractvalue { i8, i64 } %63, 1
  %66 = icmp ne i8 %64, 0
  %67 = icmp sgt i64 %65, -1
  %68 = mul i64 %65, 1000000
  %69 = and i1 %67, %66
  %70 = zext i1 %69 to i8
  br label %71

71:                                               ; preds = %39, %35, %33, %31, %29, %27, %25, %13, %50
  %72 = phi i8 [ %70, %50 ], [ 0, %13 ], [ 0, %25 ], [ 0, %27 ], [ 0, %29 ], [ 0, %31 ], [ 0, %33 ], [ 0, %39 ], [ 0, %35 ]
  %73 = phi i64 [ %68, %50 ], [ undef, %13 ], [ undef, %25 ], [ undef, %27 ], [ undef, %29 ], [ undef, %31 ], [ undef, %33 ], [ undef, %39 ], [ undef, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %74

74:                                               ; preds = %3, %71
  %75 = phi i8 [ %72, %71 ], [ 0, %3 ]
  %76 = phi i64 [ %73, %71 ], [ undef, %3 ]
  %77 = insertvalue { i8, i64 } undef, i8 %75, 0
  %78 = insertvalue { i8, i64 } %77, i64 %76, 1
  ret { i8, i64 } %78
}

declare void @_ZN6quiche16QuicheDataReaderC1EN4absl11string_viewE(%"class.quiche::QuicheDataReader"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN6quiche16QuicheDataReader13ReadDecimal64EmPm(%"class.quiche::QuicheDataReader"*, i64, i64*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN6quiche16QuicheDataReader20ReadRemainingPayloadEv(%"class.quiche::QuicheDataReader"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic18ReadNextPemMessageEPNSt3__113basic_istreamIcNS0_11char_traitsIcEEEE(%"struct.quic::PemReadResult"* noalias sret, %"class.std::__1::basic_istream"*) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::locale", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.quic::PemReadResult", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.absl::AlphaNum", align 8
  %11 = alloca %"class.absl::AlphaNum", align 8
  %12 = alloca %"class.absl::AlphaNum", align 8
  %13 = alloca %"class.absl::optional", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #12
  %21 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #12
  %24 = bitcast %"struct.quic::PemReadResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %24) #12
  %25 = bitcast %"struct.quic::PemReadResult"* %7 to i64*
  store i64 -6148914691236517206, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %7, i64 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 48, i1 false) #12
  %28 = bitcast %"class.std::__1::basic_istream"* %1 to i8**
  %29 = bitcast %"class.std::__1::basic_istream"* %1 to i8*
  %30 = bitcast %"class.std::__1::locale"* %3 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %34 = bitcast %"class.std::__1::basic_string"* %4 to i64*
  %35 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  %38 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %39 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %7, i64 0, i32 2
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %57 = bitcast %"class.absl::AlphaNum"* %10 to i8*
  %58 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %10, i64 0, i32 0, i32 1
  %60 = bitcast %"class.absl::AlphaNum"* %11 to i8*
  %61 = bitcast %"class.absl::AlphaNum"* %11 to %"class.std::__1::basic_string"**
  %62 = bitcast %"class.std::__1::basic_string"* %51 to i64*
  %63 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.absl::AlphaNum"* %11 to i64*
  %65 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %11, i64 0, i32 0, i32 1
  %66 = bitcast %"class.absl::AlphaNum"* %12 to i8*
  %67 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %12, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %12, i64 0, i32 0, i32 1
  br label %69

69:                                               ; preds = %217, %2
  %70 = phi i8 [ 1, %217 ], [ 0, %2 ]
  %71 = icmp eq i8 %70, 0
  br label %72

72:                                               ; preds = %161, %69
  %73 = load i8*, i8** %28, align 8
  %74 = getelementptr i8, i8* %73, i64 -24
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds i8, i8* %29, i64 %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %78 = bitcast i8* %77 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %3, %"class.std::__1::ios_base"* %78) #12
  %79 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %3, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %80 = bitcast %"class.std::__1::locale::facet"* %79 to %"class.std::__1::ctype"*
  %81 = bitcast %"class.std::__1::locale::facet"* %79 to i8 (%"class.std::__1::ctype"*, i8)***
  %82 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %81, align 8
  %83 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %82, i64 7
  %84 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %83, align 8
  %85 = call signext i8 %84(%"class.std::__1::ctype"* %80, i8 signext 10) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  %86 = call dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_(%"class.std::__1::basic_istream"* dereferenceable(168) %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i8 signext %85) #12
  %87 = bitcast %"class.std::__1::basic_istream"* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr i8, i8* %88, i64 -24
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_istream", %"class.std::__1::basic_istream"* %86, i64 0, i32 2, i32 0, i32 2
  %93 = bitcast i64* %92 to i8*
  %94 = getelementptr inbounds i8, i8* %93, i64 %91
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 5
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %345

99:                                               ; preds = %72
  %100 = load i8, i8* %32, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = zext i8 %100 to i64
  br label %109

104:                                              ; preds = %99
  %105 = load i64, i64* %34, align 8
  %106 = load i64, i64* %17, align 8
  %107 = icmp sgt i64 %106, -1
  br i1 %107, label %109, label %108, !prof !5

108:                                              ; preds = %104
  call void @llvm.trap() #12
  unreachable

109:                                              ; preds = %102, %104
  %110 = phi i64 [ %105, %104 ], [ %33, %102 ]
  %111 = phi i64 [ %106, %104 ], [ %103, %102 ]
  %112 = inttoptr i64 %110 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 %111
  %114 = icmp eq i64 %111, 0
  br i1 %114, label %126, label %115

115:                                              ; preds = %109, %123
  %116 = phi i8* [ %124, %123 ], [ %112, %109 ]
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl14ascii_internal13kPropertyBitsE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = and i8 %120, 8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %126, label %123

123:                                              ; preds = %115
  %124 = getelementptr inbounds i8, i8* %116, i64 1
  %125 = icmp eq i8* %124, %113
  br i1 %125, label %126, label %115

126:                                              ; preds = %123, %115, %109
  %127 = phi i8* [ %112, %109 ], [ %113, %123 ], [ %116, %115 ]
  %128 = ptrtoint i8* %127 to i64
  %129 = sub i64 %128, %110
  %130 = icmp ult i64 %111, %129
  br i1 %130, label %131, label %132, !prof !6

131:                                              ; preds = %126
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0)) #14
  unreachable

132:                                              ; preds = %126
  %133 = sub i64 %111, %129
  %134 = icmp sgt i64 %133, -1
  br i1 %134, label %136, label %135, !prof !5

135:                                              ; preds = %132
  call void @llvm.trap() #12
  unreachable

136:                                              ; preds = %132
  %137 = getelementptr inbounds i8, i8* %127, i64 %133
  br label %138

138:                                              ; preds = %141, %136
  %139 = phi i8* [ %137, %136 ], [ %142, %141 ]
  %140 = icmp eq i8* %139, %127
  br i1 %140, label %151, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds i8, i8* %139, i64 -1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN4absl14ascii_internal13kPropertyBitsE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = and i8 %146, 8
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %138

149:                                              ; preds = %141
  %150 = ptrtoint i8* %139 to i64
  br label %151

151:                                              ; preds = %138, %149
  %152 = phi i64 [ %150, %149 ], [ %128, %138 ]
  %153 = sub i64 %152, %128
  %154 = icmp ult i64 %153, %133
  %155 = select i1 %154, i64 %153, i64 %133
  %156 = icmp sgt i64 %155, -1
  br i1 %156, label %158, label %157, !prof !5

157:                                              ; preds = %151
  call void @llvm.trap() #12
  unreachable

158:                                              ; preds = %151
  br i1 %71, label %159, label %218

159:                                              ; preds = %158
  %160 = icmp ult i64 %155, 11
  br i1 %160, label %161, label %162

161:                                              ; preds = %159, %162, %165, %344
  br label %72

162:                                              ; preds = %159
  %163 = call i32 @bcmp(i8* %127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11) #12
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %161

165:                                              ; preds = %162
  %166 = add nsw i64 %155, -5
  %167 = getelementptr inbounds i8, i8* %127, i64 %166
  %168 = call i32 @bcmp(i8* %167, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 5) #12
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %161

170:                                              ; preds = %165
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #12
  %171 = add nsw i64 %155, -16
  %172 = add nsw i64 %155, -11
  %173 = icmp ugt i64 %172, %171
  %174 = select i1 %173, i64 %171, i64 %172
  %175 = icmp sgt i64 %174, -1
  br i1 %175, label %177, label %176, !prof !5

176:                                              ; preds = %170
  call void @llvm.trap() #12
  unreachable

177:                                              ; preds = %170
  %178 = getelementptr inbounds i8, i8* %127, i64 11
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #12, !alias.scope !7
  br label %196

181:                                              ; preds = %177
  %182 = icmp ult i64 %174, 23
  br i1 %182, label %188, label %183

183:                                              ; preds = %181
  %184 = add nuw i64 %174, 16
  %185 = and i64 %184, -16
  %186 = call i8* @_Znwm(i64 %185) #13
  store i8* %186, i8** %46, align 8, !alias.scope !7
  %187 = or i64 %185, -9223372036854775808
  store i64 %187, i64* %47, align 8, !alias.scope !7
  store i64 %174, i64* %48, align 8, !alias.scope !7
  br label %191

188:                                              ; preds = %181
  %189 = trunc i64 %174 to i8
  store i8 %189, i8* %50, align 1, !alias.scope !7
  %190 = icmp eq i64 %174, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %188, %183
  %192 = phi i8* [ %186, %183 ], [ %45, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %192, i8* nonnull align 1 %178, i64 %174, i1 false) #12
  br label %193

193:                                              ; preds = %191, %188
  %194 = phi i8* [ %45, %188 ], [ %192, %191 ]
  %195 = getelementptr inbounds i8, i8* %194, i64 %174
  store i8 0, i8* %195, align 1
  br label %196

196:                                              ; preds = %180, %193
  %197 = load i8, i8* %53, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %196
  %200 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %200) #13
  br label %201

201:                                              ; preds = %199, %196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %45, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #12
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8** %58, align 8
  store i64 9, i64* %59, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %60) #12
  %202 = load i8, i8* %53, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %206, label %204

204:                                              ; preds = %201
  %205 = zext i8 %202 to i64
  store %"class.std::__1::basic_string"* %51, %"class.std::__1::basic_string"** %61, align 8
  br label %211

206:                                              ; preds = %201
  %207 = load i64, i64* %62, align 8
  %208 = load i64, i64* %63, align 8
  store i64 %207, i64* %64, align 8
  %209 = icmp sgt i64 %208, -1
  br i1 %209, label %211, label %210, !prof !5

210:                                              ; preds = %206
  call void @llvm.trap() #12
  unreachable

211:                                              ; preds = %204, %206
  %212 = phi i64 [ %205, %204 ], [ %208, %206 ]
  store i64 %212, i64* %65, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %66) #12
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %67, align 8
  store i64 5, i64* %68, align 8
  call void @_ZN4absl6StrCatERKNS_8AlphaNumES2_S2_(%"class.std::__1::basic_string"* nonnull sret %9, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %10, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %11, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %12) #12
  %213 = load i8, i8* %36, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %217

215:                                              ; preds = %211
  %216 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %216) #13
  br label %217

217:                                              ; preds = %215, %211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %56, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %66) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  br label %69

218:                                              ; preds = %158
  %219 = load i8, i8* %36, align 1
  %220 = icmp slt i8 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %218
  %222 = zext i8 %219 to i64
  br label %228

223:                                              ; preds = %218
  %224 = load i64, i64* %38, align 8
  %225 = load i64, i64* %23, align 8
  %226 = icmp sgt i64 %225, -1
  br i1 %226, label %228, label %227, !prof !5

227:                                              ; preds = %223
  call void @llvm.trap() #12
  unreachable

228:                                              ; preds = %221, %223
  %229 = phi i64 [ %224, %223 ], [ %37, %221 ]
  %230 = phi i64 [ %225, %223 ], [ %222, %221 ]
  %231 = inttoptr i64 %229 to i8*
  %232 = icmp eq i64 %155, %230
  br i1 %232, label %233, label %310

233:                                              ; preds = %228
  %234 = icmp eq i64 %155, 0
  br i1 %234, label %238, label %235

235:                                              ; preds = %233
  %236 = call i32 @bcmp(i8* %127, i8* %231, i64 %155) #12
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %310

238:                                              ; preds = %233, %235
  %239 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %239) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %239, i8 -86, i64 32, i1 false)
  %240 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %241 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %240, i64 0, i32 1, i32 0
  %242 = load i8, i8* %241, align 1
  %243 = icmp slt i8 %242, 0
  br i1 %243, label %247, label %244

244:                                              ; preds = %238
  %245 = zext i8 %242 to i64
  %246 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  br label %253

247:                                              ; preds = %238
  %248 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = load i64, i64* %20, align 8
  %251 = icmp sgt i64 %250, -1
  br i1 %251, label %253, label %252, !prof !5

252:                                              ; preds = %247
  call void @llvm.trap() #12
  unreachable

253:                                              ; preds = %244, %247
  %254 = phi i64 [ %249, %247 ], [ %246, %244 ]
  %255 = phi i64 [ %250, %247 ], [ %245, %244 ]
  %256 = inttoptr i64 %254 to i8*
  call void @_ZN6quiche15QuicheTextUtils12Base64DecodeEN4absl11string_viewE(%"class.absl::optional"* nonnull sret %13, i8* %256, i64 %255) #12
  %257 = load i8, i8* %239, align 8, !range !10
  %258 = icmp eq i8 %257, 0
  %259 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %7, i64 0, i32 0
  br i1 %258, label %289, label %260

260:                                              ; preds = %253
  store i32 0, i32* %259, align 8
  %261 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %262 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %262, i64 0, i32 1, i32 0
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  %266 = bitcast %"class.std::__1::basic_string"* %261 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %267 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %266, i64 0, i32 1, i32 0
  %268 = load i8, i8* %267, align 1
  %269 = icmp slt i8 %268, 0
  br i1 %265, label %279, label %270

270:                                              ; preds = %260
  br i1 %269, label %273, label %271

271:                                              ; preds = %270
  %272 = bitcast %"class.std::__1::basic_string"* %261 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %272, i64 24, i1 false) #12
  br label %290

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  %278 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %26, i8* %275, i64 %277) #12
  br label %290

279:                                              ; preds = %260
  %280 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %283 = load i64, i64* %282, align 8
  %284 = bitcast %"class.std::__1::basic_string"* %261 to i8*
  %285 = zext i8 %268 to i64
  %286 = select i1 %269, i8* %281, i8* %284
  %287 = select i1 %269, i64 %283, i64 %285
  %288 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %26, i8* %286, i64 %287) #12
  br label %290

289:                                              ; preds = %253
  store i32 2, i32* %259, align 8
  br label %290

290:                                              ; preds = %279, %273, %271, %289
  %291 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %0, i64 0, i32 0
  %292 = load i32, i32* %259, align 8
  store i32 %292, i32* %291, align 8
  %293 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %0, i64 0, i32 1
  %294 = bitcast %"class.std::__1::basic_string"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* align 8 %27, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #12
  %295 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %0, i64 0, i32 2
  %296 = bitcast %"class.std::__1::basic_string"* %295 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %55, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  %297 = load i8, i8* %239, align 8, !range !10
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %309, label %299

299:                                              ; preds = %290
  %300 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %301 = bitcast %"class.std::__1::basic_string"* %300 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %302 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %301, i64 0, i32 1, i32 0
  %303 = load i8, i8* %302, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %308

305:                                              ; preds = %299
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %300, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  call void @_ZdlPv(i8* %307) #13
  br label %308

308:                                              ; preds = %305, %299
  store i8 0, i8* %239, align 8
  br label %309

309:                                              ; preds = %308, %290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %239) #12
  br label %368

310:                                              ; preds = %228, %235
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %311 = icmp eq i8* %127, null
  br i1 %311, label %312, label %313

312:                                              ; preds = %310
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #12, !alias.scope !11
  br label %331

313:                                              ; preds = %310
  %314 = icmp ult i64 %155, 23
  br i1 %314, label %320, label %315

315:                                              ; preds = %313
  %316 = add nuw i64 %155, 16
  %317 = and i64 %316, -16
  %318 = call i8* @_Znwm(i64 %317) #13
  store i8* %318, i8** %40, align 8, !alias.scope !11
  %319 = or i64 %317, -9223372036854775808
  store i64 %319, i64* %41, align 8, !alias.scope !11
  store i64 %155, i64* %42, align 8, !alias.scope !11
  br label %323

320:                                              ; preds = %313
  %321 = trunc i64 %155 to i8
  store i8 %321, i8* %44, align 1, !alias.scope !11
  %322 = icmp eq i64 %155, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %320, %315
  %324 = phi i8* [ %318, %315 ], [ %39, %320 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %324, i8* nonnull align 1 %127, i64 %155, i1 false) #12
  br label %325

325:                                              ; preds = %323, %320
  %326 = phi i8* [ %39, %320 ], [ %324, %323 ]
  %327 = getelementptr inbounds i8, i8* %326, i64 %155
  store i8 0, i8* %327, align 1
  %328 = load i8, i8* %44, align 1
  %329 = load i8*, i8** %40, align 8
  %330 = load i64, i64* %42, align 8
  br label %331

331:                                              ; preds = %312, %325
  %332 = phi i64 [ 0, %312 ], [ %330, %325 ]
  %333 = phi i8* [ null, %312 ], [ %329, %325 ]
  %334 = phi i8 [ 0, %312 ], [ %328, %325 ]
  %335 = icmp slt i8 %334, 0
  %336 = zext i8 %334 to i64
  %337 = select i1 %335, i8* %333, i8* %39
  %338 = select i1 %335, i64 %332, i64 %336
  %339 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %337, i64 %338) #12
  %340 = load i8, i8* %44, align 1
  %341 = icmp slt i8 %340, 0
  br i1 %341, label %342, label %344

342:                                              ; preds = %331
  %343 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %343) #13
  br label %344

344:                                              ; preds = %331, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  br label %161

345:                                              ; preds = %72
  %346 = load i8*, i8** %28, align 8
  %347 = getelementptr i8, i8* %346, i64 -24
  %348 = bitcast i8* %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = getelementptr inbounds i8, i8* %29, i64 %349
  %351 = getelementptr inbounds i8, i8* %350, i64 32
  %352 = bitcast i8* %351 to i32*
  %353 = load i32, i32* %352, align 8
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp eq i8 %70, 0
  %357 = select i1 %356, i32 1, i32 2
  %358 = select i1 %355, i32 2, i32 %357
  %359 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %0, i64 0, i32 0
  store i32 %358, i32* %359, align 8
  %360 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %0, i64 0, i32 1
  %361 = bitcast %"class.std::__1::basic_string"* %360 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %362 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %361, i64 0, i32 1, i32 0
  store i8 0, i8* %362, align 1
  %363 = bitcast %"class.std::__1::basic_string"* %360 to i8*
  store i8 0, i8* %363, align 8
  %364 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %0, i64 0, i32 2
  %365 = bitcast %"class.std::__1::basic_string"* %364 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %366 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %365, i64 0, i32 1, i32 0
  store i8 0, i8* %366, align 1
  %367 = bitcast %"class.std::__1::basic_string"* %364 to i8*
  store i8 0, i8* %367, align 8
  br label %368

368:                                              ; preds = %309, %345
  %369 = load i8, i8* %53, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %373

371:                                              ; preds = %368
  %372 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %372) #13
  br label %373

373:                                              ; preds = %371, %368
  %374 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %375 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %374, i64 0, i32 1, i32 0
  %376 = load i8, i8* %375, align 1
  %377 = icmp slt i8 %376, 0
  br i1 %377, label %378, label %381

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load i8*, i8** %379, align 8
  call void @_ZdlPv(i8* %380) #13
  br label %381

381:                                              ; preds = %373, %378
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #12
  %382 = load i8, i8* %36, align 1
  %383 = icmp slt i8 %382, 0
  br i1 %383, label %384, label %386

384:                                              ; preds = %381
  %385 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %385) #13
  br label %386

386:                                              ; preds = %381, %384
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  %387 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %388 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %387, i64 0, i32 1, i32 0
  %389 = load i8, i8* %388, align 1
  %390 = icmp slt i8 %389, 0
  br i1 %390, label %391, label %393

391:                                              ; preds = %386
  %392 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %392) #13
  br label %393

393:                                              ; preds = %386, %391
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  %394 = load i8, i8* %32, align 1
  %395 = icmp slt i8 %394, 0
  br i1 %395, label %396, label %398

396:                                              ; preds = %393
  %397 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %397) #13
  br label %398

398:                                              ; preds = %393, %396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6quiche15QuicheTextUtils12Base64DecodeEN4absl11string_viewE(%"class.absl::optional"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::CertificateView"* @_ZN4quic15CertificateView22ParseSingleCertificateEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.cbs_st*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %struct.cbs_st*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %struct.cbs_st*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %struct.cbs_st*
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %struct.cbs_st*
  %13 = alloca %struct.cbs_st, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca %struct.cbs_st, align 8
  %16 = alloca %struct.cbs_st, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %struct.cbs_st, align 8
  %20 = alloca %struct.cbs_st, align 8
  %21 = alloca %struct.cbs_st, align 8
  %22 = alloca %struct.cbs_st, align 8
  %23 = alloca %struct.cbs_st, align 8
  %24 = alloca <2 x i64>, align 16
  %25 = bitcast <2 x i64>* %24 to %struct.cbs_st*
  %26 = alloca %struct.cbs_st, align 8
  %27 = alloca %struct.cbs_st, align 8
  %28 = alloca %struct.cbs_st, align 8
  %29 = alloca %struct.cbs_st, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca <2 x i64>, align 16
  %33 = bitcast <2 x i64>* %32 to %struct.cbs_st*
  %34 = alloca <2 x i64>, align 16
  %35 = bitcast <2 x i64>* %34 to %struct.cbs_st*
  %36 = alloca %struct.cbs_st, align 8
  %37 = tail call i8* @_Znwm(i64 88) #13
  %38 = bitcast i8* %37 to %"class.quic::CertificateView"*
  %39 = ptrtoint i8* %37 to i64
  %40 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 88, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #12
  %41 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -86, i64 16, i1 false) #12
  call void @CBS_init(%struct.cbs_st* nonnull %10, i8* %0, i64 %1) #12
  %42 = load <2 x i64>, <2 x i64>* %9, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  store <2 x i64> %42, <2 x i64>* %11, align 16
  %43 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  %44 = bitcast %struct.cbs_st* %14 to i8*
  %45 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #12
  %46 = bitcast %struct.cbs_st* %15 to i8*
  %47 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %48 = bitcast %struct.cbs_st* %16 to i8*
  %49 = bitcast %struct.cbs_st* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #12
  %50 = bitcast %struct.cbs_st* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  %51 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %12, %struct.cbs_st* nonnull %13, i32 536870928) #12
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %226, label %53

53:                                               ; preds = %2
  %54 = call i64 @CBS_len(%struct.cbs_st* nonnull %12) #12
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %226

56:                                               ; preds = %53
  %57 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %13, %struct.cbs_st* nonnull %14, i32 536870928) #12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %226, label %59

59:                                               ; preds = %56
  %60 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %13, %struct.cbs_st* nonnull %15, i32 536870928) #12
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %226, label %62

62:                                               ; preds = %59
  %63 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %13, %struct.cbs_st* nonnull %16, i32 3) #12
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %226, label %65

65:                                               ; preds = %62
  %66 = call i64 @CBS_len(%struct.cbs_st* nonnull %13) #12
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %226

68:                                               ; preds = %65
  %69 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #12
  store i32 -1431655766, i32* %17, align 4
  %70 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #12
  store i32 -1431655766, i32* %18, align 4
  %71 = bitcast %struct.cbs_st* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #12
  %72 = bitcast %struct.cbs_st* %20 to i8*
  %73 = bitcast %struct.cbs_st* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #12
  %74 = bitcast %struct.cbs_st* %21 to i8*
  %75 = bitcast %struct.cbs_st* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #12
  %76 = bitcast %struct.cbs_st* %22 to i8*
  %77 = bitcast %struct.cbs_st* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #12
  %78 = bitcast %struct.cbs_st* %23 to i8*
  %79 = bitcast %struct.cbs_st* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #12
  %80 = bitcast <2 x i64>* %24 to i8*
  %81 = bitcast %struct.cbs_st* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #12
  %82 = bitcast %struct.cbs_st* %26 to i8*
  %83 = bitcast <2 x i64>* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %83, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #12
  %84 = bitcast %struct.cbs_st* %27 to i8*
  %85 = bitcast %struct.cbs_st* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #12
  %86 = bitcast %struct.cbs_st* %28 to i8*
  %87 = bitcast %struct.cbs_st* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #12
  %88 = bitcast %struct.cbs_st* %29 to i8*
  %89 = bitcast %struct.cbs_st* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  %90 = bitcast %struct.cbs_st* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 16, i1 false)
  %91 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %19, i32* nonnull %17, i32 -1610612736) #12
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %223, label %93

93:                                               ; preds = %68
  %94 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %20, i32 2) #12
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %223, label %96

96:                                               ; preds = %93
  %97 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %21, i32 536870928) #12
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %223, label %99

99:                                               ; preds = %96
  %100 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %22, i32 536870928) #12
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %223, label %102

102:                                              ; preds = %99
  %103 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %23, i32 536870928) #12
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %223, label %105

105:                                              ; preds = %102
  %106 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %25, i32 536870928) #12
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %223, label %108

108:                                              ; preds = %105
  %109 = call i32 @CBS_get_asn1_element(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %26, i32 536870928) #12
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %223, label %111

111:                                              ; preds = %108
  %112 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %27, i32* null, i32 -2147483647) #12
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %223, label %114

114:                                              ; preds = %111
  %115 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %28, i32* null, i32 -2147483646) #12
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %223, label %117

117:                                              ; preds = %114
  %118 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %14, %struct.cbs_st* nonnull %29, i32* nonnull %18, i32 -1610612733) #12
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %223, label %120

120:                                              ; preds = %117
  %121 = call i64 @CBS_len(%struct.cbs_st* nonnull %14) #12
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %223

123:                                              ; preds = %120
  %124 = load <2 x i64>, <2 x i64>* %24, align 16
  %125 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125)
  store <2 x i64> %124, <2 x i64>* %7, align 16
  %126 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #12
  %127 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #12
  %128 = icmp sgt i64 %127, -1
  br i1 %128, label %130, label %129, !prof !5

129:                                              ; preds = %123
  call void @llvm.trap() #12
  unreachable

130:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125)
  %131 = getelementptr inbounds i8, i8* %37, i64 16
  %132 = bitcast i8* %131 to i8**
  store i8* %126, i8** %132, align 8
  %133 = getelementptr inbounds i8, i8* %37, i64 24
  %134 = bitcast i8* %133 to i64*
  store i64 %127, i64* %134, align 8
  %135 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #12
  store i32 -1431655766, i32* %30, align 4
  %136 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136) #12
  store i32 -1431655766, i32* %31, align 4
  %137 = bitcast <2 x i64>* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #12
  %138 = bitcast <2 x i64>* %34 to i8*
  %139 = bitcast <2 x i64>* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %139, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #12
  %140 = bitcast <2 x i64>* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %140, i8 -86, i64 16, i1 false)
  %141 = call i32 @CBS_get_any_asn1(%struct.cbs_st* nonnull %23, %struct.cbs_st* nonnull %33, i32* nonnull %30) #12
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %220, label %143

143:                                              ; preds = %130
  %144 = call i32 @CBS_get_any_asn1(%struct.cbs_st* nonnull %23, %struct.cbs_st* nonnull %35, i32* nonnull %31) #12
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %220, label %146

146:                                              ; preds = %143
  %147 = call i64 @CBS_len(%struct.cbs_st* nonnull %23) #12
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %220

149:                                              ; preds = %146
  %150 = load i32, i32* %30, align 4
  %151 = load <2 x i64>, <2 x i64>* %32, align 16
  %152 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %152)
  store <2 x i64> %151, <2 x i64>* %5, align 16
  %153 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #12
  %154 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #12
  %155 = icmp sgt i64 %154, -1
  br i1 %155, label %157, label %156, !prof !5

156:                                              ; preds = %149
  call void @llvm.trap() #12
  unreachable

157:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %152)
  %158 = call { i8, i64 } @_ZN4quic12ParseDerTimeEjN4absl11string_viewE(i32 %150, i8* %153, i64 %154)
  %159 = extractvalue { i8, i64 } %158, 1
  %160 = load i32, i32* %31, align 4
  %161 = load <2 x i64>, <2 x i64>* %34, align 16
  %162 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162)
  store <2 x i64> %161, <2 x i64>* %3, align 16
  %163 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #12
  %164 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #12
  %165 = icmp sgt i64 %164, -1
  br i1 %165, label %167, label %166, !prof !5

166:                                              ; preds = %157
  call void @llvm.trap() #12
  unreachable

167:                                              ; preds = %157
  %168 = extractvalue { i8, i64 } %158, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162)
  %169 = call { i8, i64 } @_ZN4quic12ParseDerTimeEjN4absl11string_viewE(i32 %160, i8* %163, i64 %164)
  %170 = extractvalue { i8, i64 } %169, 0
  %171 = icmp ne i8 %168, 0
  %172 = icmp ne i8 %170, 0
  %173 = and i1 %171, %172
  br i1 %173, label %174, label %220

174:                                              ; preds = %167
  %175 = extractvalue { i8, i64 } %169, 1
  %176 = bitcast i8* %37 to i64*
  store i64 %159, i64* %176, align 8
  %177 = getelementptr inbounds i8, i8* %37, i64 8
  %178 = bitcast i8* %177 to i64*
  store i64 %175, i64* %178, align 8
  %179 = getelementptr inbounds i8, i8* %37, i64 32
  %180 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %26) #12
  %181 = bitcast i8* %179 to %struct.evp_pkey_st**
  %182 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %181, align 8
  store %struct.evp_pkey_st* %180, %struct.evp_pkey_st** %181, align 8
  %183 = icmp eq %struct.evp_pkey_st* %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %174
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %182) #12
  %185 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %181, align 8
  br label %186

186:                                              ; preds = %174, %184
  %187 = phi %struct.evp_pkey_st* [ %180, %174 ], [ %185, %184 ]
  %188 = icmp eq %struct.evp_pkey_st* %187, null
  br i1 %188, label %220, label %189

189:                                              ; preds = %186
  %190 = call zeroext i1 @_ZN4quic15CertificateView27ValidatePublicKeyParametersEv(%"class.quic::CertificateView"* nonnull %38)
  %191 = xor i1 %190, true
  %192 = load i32, i32* %17, align 4
  %193 = icmp eq i32 %192, 0
  %194 = or i1 %193, %191
  br i1 %194, label %220, label %195

195:                                              ; preds = %189
  %196 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN4quic12_GLOBAL__N_112kX509VersionE, i64 0, i64 0), i64 3) #12
  %197 = icmp eq i32 %196, 0
  %198 = load i32, i32* %18, align 4
  %199 = icmp eq i32 %198, 0
  %200 = or i1 %197, %199
  br i1 %200, label %220, label %201

201:                                              ; preds = %195
  %202 = bitcast %struct.cbs_st* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %202) #12
  %203 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %36, i64 0, i32 0
  %204 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %36, i64 0, i32 1
  %205 = bitcast %struct.cbs_st* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 16, i1 false)
  %206 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %29, %struct.cbs_st* nonnull %36, i32 536870928) #12
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %217, label %208

208:                                              ; preds = %201
  %209 = call i64 @CBS_len(%struct.cbs_st* nonnull %29) #12
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %217

211:                                              ; preds = %208
  %212 = load i8*, i8** %203, align 8
  %213 = load i64, i64* %204, align 8
  %214 = call zeroext i1 @_ZN4quic15CertificateView15ParseExtensionsE6cbs_st(%"class.quic::CertificateView"* nonnull %38, i8* %212, i64 %213)
  %215 = select i1 %214, i64 %39, i64 0
  %216 = select i1 %214, i64 0, i64 %39
  br label %217

217:                                              ; preds = %211, %201, %208
  %218 = phi i64 [ 0, %208 ], [ 0, %201 ], [ %215, %211 ]
  %219 = phi i64 [ %39, %208 ], [ %39, %201 ], [ %216, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %202) #12
  br label %220

220:                                              ; preds = %217, %167, %186, %195, %189, %130, %143, %146
  %221 = phi i64 [ 0, %146 ], [ 0, %143 ], [ 0, %130 ], [ %218, %217 ], [ 0, %167 ], [ 0, %186 ], [ 0, %189 ], [ 0, %195 ]
  %222 = phi i64 [ %39, %146 ], [ %39, %143 ], [ %39, %130 ], [ %219, %217 ], [ %39, %167 ], [ %39, %186 ], [ %39, %189 ], [ %39, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #12
  br label %223

223:                                              ; preds = %68, %93, %96, %99, %102, %105, %108, %111, %114, %117, %120, %220
  %224 = phi i64 [ %221, %220 ], [ 0, %120 ], [ 0, %117 ], [ 0, %114 ], [ 0, %111 ], [ 0, %108 ], [ 0, %105 ], [ 0, %102 ], [ 0, %99 ], [ 0, %96 ], [ 0, %93 ], [ 0, %68 ]
  %225 = phi i64 [ %222, %220 ], [ %39, %120 ], [ %39, %117 ], [ %39, %114 ], [ %39, %111 ], [ %39, %108 ], [ %39, %105 ], [ %39, %102 ], [ %39, %99 ], [ %39, %96 ], [ %39, %93 ], [ %39, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #12
  br label %226

226:                                              ; preds = %56, %59, %62, %65, %2, %53, %223
  %227 = phi i64 [ %224, %223 ], [ 0, %53 ], [ 0, %2 ], [ 0, %65 ], [ 0, %62 ], [ 0, %59 ], [ 0, %56 ]
  %228 = phi i64 [ %225, %223 ], [ %39, %53 ], [ %39, %2 ], [ %39, %65 ], [ %39, %62 ], [ %39, %59 ], [ %39, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #12
  %229 = inttoptr i64 %228 to %"class.quic::CertificateView"*
  %230 = icmp eq i64 %228, 0
  br i1 %230, label %256, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %229, i64 0, i32 5, i32 0, i32 0
  %233 = load %"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"** %232, align 8
  %234 = icmp eq %"class.quic::QuicIpAddress"* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %231
  %236 = ptrtoint %"class.quic::QuicIpAddress"* %233 to i64
  %237 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %229, i64 0, i32 5, i32 0, i32 1
  %238 = bitcast %"class.quic::QuicIpAddress"** %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = bitcast %"class.quic::QuicIpAddress"* %233 to i8*
  call void @_ZdlPv(i8* %239) #13
  br label %240

240:                                              ; preds = %235, %231
  %241 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %229, i64 0, i32 4, i32 0, i32 0
  %242 = load %"class.absl::string_view"*, %"class.absl::string_view"** %241, align 8
  %243 = icmp eq %"class.absl::string_view"* %242, null
  br i1 %243, label %249, label %244

244:                                              ; preds = %240
  %245 = ptrtoint %"class.absl::string_view"* %242 to i64
  %246 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %229, i64 0, i32 4, i32 0, i32 1
  %247 = bitcast %"class.absl::string_view"** %246 to i64*
  store i64 %245, i64* %247, align 8
  %248 = bitcast %"class.absl::string_view"* %242 to i8*
  call void @_ZdlPv(i8* %248) #13
  br label %249

249:                                              ; preds = %244, %240
  %250 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %251 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %250, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %250, align 8
  %252 = icmp eq %struct.evp_pkey_st* %251, null
  br i1 %252, label %254, label %253

253:                                              ; preds = %249
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %251) #12
  br label %254

254:                                              ; preds = %253, %249
  %255 = inttoptr i64 %228 to i8*
  call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %226, %254
  %257 = inttoptr i64 %227 to %"class.quic::CertificateView"*
  ret %"class.quic::CertificateView"* %257
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare i32 @CBS_get_optional_asn1(%struct.cbs_st*, %struct.cbs_st*, i32*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic15CertificateView27ValidatePublicKeyParametersEv(%"class.quic::CertificateView"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %2, align 8
  %4 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %3) #12
  switch i32 %4, label %17 [
    i32 6, label %13
    i32 408, label %5
    i32 949, label %18
  ]

5:                                                ; preds = %1
  %6 = tail call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %3) #12
  %7 = icmp eq %struct.ec_key_st* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %6) #12
  %10 = icmp eq %struct.ec_group_st* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %9) #12
  switch i32 %12, label %17 [
    i32 415, label %18
    i32 715, label %18
  ]

13:                                               ; preds = %1
  %14 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %2, align 8
  %15 = tail call i32 @EVP_PKEY_bits(%struct.evp_pkey_st* %14) #12
  %16 = icmp sgt i32 %15, 2047
  br label %18

17:                                               ; preds = %11, %1, %8, %5
  br label %18

18:                                               ; preds = %11, %11, %1, %17, %13
  %19 = phi i1 [ false, %17 ], [ %16, %13 ], [ true, %1 ], [ true, %11 ], [ true, %11 ]
  ret i1 %19
}

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic15CertificateView15ParseExtensionsE6cbs_st(%"class.quic::CertificateView"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.cbs_st*
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca %struct.cbs_st, align 8
  %10 = alloca %struct.cbs_st, align 8
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %struct.cbs_st*
  %14 = alloca i32, align 4
  %15 = alloca %"class.quic::QuicIpAddress", align 4
  %16 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 0
  store i8* %1, i8** %16, align 8
  %17 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 1
  store i64 %2, i64* %17, align 8
  %18 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #12
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %228, label %20

20:                                               ; preds = %3
  %21 = bitcast %struct.cbs_st* %7 to i8*
  %22 = bitcast %struct.cbs_st* %8 to i8*
  %23 = bitcast %struct.cbs_st* %9 to i8*
  %24 = bitcast %struct.cbs_st* %10 to i8*
  %25 = bitcast %struct.cbs_st* %11 to i8*
  %26 = bitcast <2 x i64>* %12 to i8*
  %27 = bitcast i32* %14 to i8*
  %28 = bitcast <2 x i64>* %4 to i8*
  %29 = bitcast %"class.quic::QuicIpAddress"* %15 to i8*
  %30 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 5
  %31 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 5, i32 0, i32 1
  %32 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.quic::QuicIpAddress"** %31 to i64*
  %34 = bitcast %"class.std::__1::vector.24"* %30 to i64*
  %35 = bitcast %"class.quic::QuicIpAddress"** %32 to i64*
  %36 = getelementptr inbounds %"class.std::__1::vector.24", %"class.std::__1::vector.24"* %30, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 4, i32 0, i32 1
  %39 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.absl::string_view"** %38 to i64*
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = bitcast %"class.absl::string_view"** %39 to i64*
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %37, i64 0, i32 0, i32 0
  %44 = bitcast %struct.cbs_st* %7 to i8*
  %45 = bitcast %struct.cbs_st* %8 to i8*
  %46 = bitcast %struct.cbs_st* %9 to i8*
  %47 = bitcast %struct.cbs_st* %10 to i8*
  %48 = bitcast %struct.cbs_st* %11 to i8*
  %49 = bitcast <2 x i64>* %12 to i8*
  %50 = bitcast %"class.quic::QuicIpAddress"* %15 to i8*
  br label %51

51:                                               ; preds = %20, %220
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 16, i1 false)
  %52 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %7, i32 536870928) #12
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %227, label %54

54:                                               ; preds = %51
  %55 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %8, i32 6) #12
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %226, label %57

57:                                               ; preds = %54
  %58 = call i32 @CBS_get_optional_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %9, i32* null, i32 1) #12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %225, label %60

60:                                               ; preds = %57
  %61 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %10, i32 4) #12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %224, label %63

63:                                               ; preds = %60
  %64 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #12
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %223

66:                                               ; preds = %63
  %67 = call i32 @CBS_mem_equal(%struct.cbs_st* nonnull %8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZN4quic12_GLOBAL__N_118kSubjectAltNameOidE, i64 0, i64 0), i64 3) #12
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %220, label %69

69:                                               ; preds = %66
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  %70 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %10, %struct.cbs_st* nonnull %11, i32 536870928) #12
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %218, label %72

72:                                               ; preds = %69
  %73 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #12
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %218

75:                                               ; preds = %72
  %76 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #12
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %219, label %78

78:                                               ; preds = %75, %215
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #12
  store i32 -1431655766, i32* %14, align 4
  %79 = call i32 @CBS_get_any_asn1(%struct.cbs_st* nonnull %11, %struct.cbs_st* nonnull %13, i32* nonnull %14) #12
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  br label %218

82:                                               ; preds = %78
  %83 = load <2 x i64>, <2 x i64>* %12, align 16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28)
  store <2 x i64> %83, <2 x i64>* %4, align 16
  %84 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #12
  %85 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #12
  %86 = icmp sgt i64 %85, -1
  br i1 %86, label %88, label %87, !prof !5

87:                                               ; preds = %82
  call void @llvm.trap() #12
  unreachable

88:                                               ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %29) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %50, i8 -86, i64 20, i1 false)
  call void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"* nonnull %15) #12
  %89 = load i32, i32* %14, align 4
  switch i32 %89, label %215 [
    i32 -2147483646, label %90
    i32 -2147483641, label %154
  ]

90:                                               ; preds = %88
  %91 = load %"class.absl::string_view"*, %"class.absl::string_view"** %38, align 8
  %92 = load %"class.absl::string_view"*, %"class.absl::string_view"** %39, align 8
  %93 = icmp eq %"class.absl::string_view"* %91, %92
  %94 = ptrtoint %"class.absl::string_view"* %92 to i64
  br i1 %93, label %100, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %91, i64 0, i32 0
  store i8* %84, i8** %96, align 8
  %97 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %91, i64 0, i32 1
  store i64 %85, i64* %97, align 8
  %98 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %91, i64 1
  %99 = ptrtoint %"class.absl::string_view"* %98 to i64
  store i64 %99, i64* %40, align 8
  br label %215

100:                                              ; preds = %90
  %101 = ptrtoint %"class.absl::string_view"* %91 to i64
  %102 = load i64, i64* %41, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 4
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 1152921504606846975
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = bitcast %"class.std::__1::vector"* %37 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #14
  unreachable

109:                                              ; preds = %100
  %110 = sub i64 %94, %102
  %111 = ashr exact i64 %110, 4
  %112 = icmp ult i64 %111, 576460752303423487
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = ashr exact i64 %110, 3
  %115 = icmp ult i64 %114, %105
  %116 = select i1 %115, i64 %105, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 1152921504606846975
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  call void @abort() #14
  unreachable

121:                                              ; preds = %118, %109
  %122 = phi i64 [ %116, %118 ], [ 1152921504606846975, %109 ]
  %123 = shl i64 %122, 4
  %124 = call i8* @_Znwm(i64 %123) #13
  %125 = bitcast i8* %124 to %"class.absl::string_view"*
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi %"class.absl::string_view"* [ %125, %121 ], [ null, %113 ]
  %129 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %128, i64 %104
  %130 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %128, i64 %127
  %131 = ptrtoint %"class.absl::string_view"* %130 to i64
  %132 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %129, i64 0, i32 0
  store i8* %84, i8** %132, align 8
  %133 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %128, i64 %104, i32 1
  store i64 %85, i64* %133, align 8
  %134 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %129, i64 1
  %135 = ptrtoint %"class.absl::string_view"* %134 to i64
  %136 = load %"class.absl::string_view"*, %"class.absl::string_view"** %43, align 8
  %137 = load i64, i64* %40, align 8
  %138 = ptrtoint %"class.absl::string_view"* %136 to i64
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 4
  %141 = sub nsw i64 0, %140
  %142 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %129, i64 %141
  %143 = ptrtoint %"class.absl::string_view"* %142 to i64
  %144 = icmp sgt i64 %139, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %126
  %146 = bitcast %"class.absl::string_view"* %142 to i8*
  %147 = bitcast %"class.absl::string_view"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 %139, i1 false) #12
  %148 = load %"class.absl::string_view"*, %"class.absl::string_view"** %43, align 8
  br label %149

149:                                              ; preds = %145, %126
  %150 = phi %"class.absl::string_view"* [ %136, %126 ], [ %148, %145 ]
  store i64 %143, i64* %41, align 8
  store i64 %135, i64* %40, align 8
  store i64 %131, i64* %42, align 8
  %151 = icmp eq %"class.absl::string_view"* %150, null
  br i1 %151, label %215, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.absl::string_view"* %150 to i8*
  call void @_ZdlPv(i8* %153) #13
  br label %215

154:                                              ; preds = %88
  %155 = call zeroext i1 @_ZN4quic13QuicIpAddress16FromPackedStringEPKcm(%"class.quic::QuicIpAddress"* nonnull %15, i8* %84, i64 %85) #12
  br i1 %155, label %157, label %156

156:                                              ; preds = %154
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  br label %218

157:                                              ; preds = %154
  %158 = load %"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"** %31, align 8
  %159 = load %"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"** %32, align 8
  %160 = icmp eq %"class.quic::QuicIpAddress"* %158, %159
  %161 = ptrtoint %"class.quic::QuicIpAddress"* %159 to i64
  br i1 %160, label %166, label %162

162:                                              ; preds = %157
  %163 = bitcast %"class.quic::QuicIpAddress"* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %163, i8* nonnull align 4 %29, i64 20, i1 false) #12
  %164 = getelementptr inbounds %"class.quic::QuicIpAddress", %"class.quic::QuicIpAddress"* %158, i64 1
  %165 = ptrtoint %"class.quic::QuicIpAddress"* %164 to i64
  store i64 %165, i64* %33, align 8
  br label %215

166:                                              ; preds = %157
  %167 = ptrtoint %"class.quic::QuicIpAddress"* %158 to i64
  %168 = load i64, i64* %34, align 8
  %169 = sub i64 %167, %168
  %170 = sdiv exact i64 %169, 20
  %171 = add nsw i64 %170, 1
  %172 = icmp ugt i64 %171, 922337203685477580
  br i1 %172, label %173, label %175

173:                                              ; preds = %166
  %174 = bitcast %"class.std::__1::vector.24"* %30 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %174) #14
  unreachable

175:                                              ; preds = %166
  %176 = sub i64 %161, %168
  %177 = sdiv exact i64 %176, 20
  %178 = icmp ult i64 %177, 461168601842738790
  br i1 %178, label %179, label %184

179:                                              ; preds = %175
  %180 = shl nsw i64 %177, 1
  %181 = icmp ult i64 %180, %171
  %182 = select i1 %181, i64 %171, i64 %180
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %189, label %184

184:                                              ; preds = %179, %175
  %185 = phi i64 [ %182, %179 ], [ 922337203685477580, %175 ]
  %186 = mul i64 %185, 20
  %187 = call i8* @_Znwm(i64 %186) #13
  %188 = bitcast i8* %187 to %"class.quic::QuicIpAddress"*
  br label %189

189:                                              ; preds = %184, %179
  %190 = phi i64 [ %185, %184 ], [ 0, %179 ]
  %191 = phi %"class.quic::QuicIpAddress"* [ %188, %184 ], [ null, %179 ]
  %192 = getelementptr inbounds %"class.quic::QuicIpAddress", %"class.quic::QuicIpAddress"* %191, i64 %170
  %193 = getelementptr inbounds %"class.quic::QuicIpAddress", %"class.quic::QuicIpAddress"* %191, i64 %190
  %194 = ptrtoint %"class.quic::QuicIpAddress"* %193 to i64
  %195 = bitcast %"class.quic::QuicIpAddress"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %195, i8* nonnull align 4 %29, i64 20, i1 false) #12
  %196 = getelementptr inbounds %"class.quic::QuicIpAddress", %"class.quic::QuicIpAddress"* %192, i64 1
  %197 = ptrtoint %"class.quic::QuicIpAddress"* %196 to i64
  %198 = load %"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"** %36, align 8
  %199 = load i64, i64* %33, align 8
  %200 = ptrtoint %"class.quic::QuicIpAddress"* %198 to i64
  %201 = sub i64 %199, %200
  %202 = sdiv exact i64 %201, -20
  %203 = getelementptr inbounds %"class.quic::QuicIpAddress", %"class.quic::QuicIpAddress"* %192, i64 %202
  %204 = ptrtoint %"class.quic::QuicIpAddress"* %203 to i64
  %205 = icmp sgt i64 %201, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %189
  %207 = bitcast %"class.quic::QuicIpAddress"* %203 to i8*
  %208 = bitcast %"class.quic::QuicIpAddress"* %198 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %207, i8* align 4 %208, i64 %201, i1 false) #12
  %209 = load %"class.quic::QuicIpAddress"*, %"class.quic::QuicIpAddress"** %36, align 8
  br label %210

210:                                              ; preds = %206, %189
  %211 = phi %"class.quic::QuicIpAddress"* [ %198, %189 ], [ %209, %206 ]
  store i64 %204, i64* %34, align 8
  store i64 %197, i64* %33, align 8
  store i64 %194, i64* %35, align 8
  %212 = icmp eq %"class.quic::QuicIpAddress"* %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %210
  %214 = bitcast %"class.quic::QuicIpAddress"* %211 to i8*
  call void @_ZdlPv(i8* %214) #13
  br label %215

215:                                              ; preds = %88, %95, %149, %152, %162, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12
  %216 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #12
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %219, label %78

218:                                              ; preds = %72, %69, %81, %156
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %228

219:                                              ; preds = %215, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  br label %220

220:                                              ; preds = %66, %219
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  %221 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #12
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %228, label %51

223:                                              ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %228

224:                                              ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %228

225:                                              ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %228

226:                                              ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %228

227:                                              ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12
  br label %228

228:                                              ; preds = %220, %3, %218, %227, %226, %225, %224, %223
  %229 = phi i1 [ false, %223 ], [ false, %224 ], [ false, %225 ], [ false, %226 ], [ false, %227 ], [ false, %218 ], [ true, %3 ], [ true, %220 ]
  ret i1 %229
}

declare void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"*) unnamed_addr #2

declare zeroext i1 @_ZN4quic13QuicIpAddress16FromPackedStringEPKcm(%"class.quic::QuicIpAddress"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic15CertificateView17LoadPemFromStreamEPNSt3__113basic_istreamIcNS1_11char_traitsIcEEEE(%"class.std::__1::vector.34"* noalias nocapture sret, %"class.std::__1::basic_istream"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.34", align 16
  %4 = alloca %"struct.quic::PemReadResult", align 8
  %5 = bitcast %"class.std::__1::vector.34"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #12
  %9 = bitcast %"struct.quic::PemReadResult"* %4 to i8*
  %10 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %4, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %4, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %17 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %18 = bitcast %"class.std::__1::vector.34"* %0 to i8*
  %19 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %20 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::vector.34"* %3 to <2 x i64>*
  %27 = bitcast %"class.std::__1::vector.34"* %0 to <2 x i64>*
  br label %28

28:                                               ; preds = %65, %2
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  call void @_ZN4quic18ReadNextPemMessageEPNSt3__113basic_istreamIcNS0_11char_traitsIcEEEE(%"struct.quic::PemReadResult"* nonnull sret %4, %"class.std::__1::basic_istream"* %1)
  %29 = load i32, i32* %10, align 8
  switch i32 %29, label %33 [
    i32 1, label %30
    i32 0, label %34
  ]

30:                                               ; preds = %28
  %31 = load <2 x i64>, <2 x i64>* %26, align 16
  store <2 x i64> %31, <2 x i64>* %27, align 8
  %32 = load i64, i64* %19, align 16
  store i64 %32, i64* %21, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #12
  br label %53

33:                                               ; preds = %28
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12
  br label %53

34:                                               ; preds = %28
  %35 = load i8, i8* %13, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %14, align 8
  %38 = zext i8 %35 to i64
  %39 = select i1 %36, i64 %37, i64 %38
  %40 = icmp eq i64 %39, 11
  br i1 %40, label %41, label %53

41:                                               ; preds = %34
  %42 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %11, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %53

44:                                               ; preds = %41
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %46 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 16
  %47 = icmp ult %"class.std::__1::basic_string"* %45, %46
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %16, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  store i64 %51, i64* %17, align 8
  br label %53

52:                                               ; preds = %44
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.34"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %15) #12
  br label %53

53:                                               ; preds = %41, %34, %52, %48, %33, %30
  %54 = phi i32 [ 1, %30 ], [ 1, %33 ], [ 3, %41 ], [ 0, %48 ], [ 0, %52 ], [ 3, %34 ]
  %55 = load i8, i8* %13, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %57, %53
  %60 = load i8, i8* %24, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #12
  switch i32 %54, label %66 [
    i32 0, label %65
    i32 3, label %65
  ]

65:                                               ; preds = %64, %64
  br label %28

66:                                               ; preds = %64
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 16
  %68 = icmp eq %"class.std::__1::basic_string"* %67, null
  br i1 %68, label %90, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %72 = icmp eq %"class.std::__1::basic_string"* %71, %67
  br i1 %72, label %88, label %73

73:                                               ; preds = %69, %83
  %74 = phi %"class.std::__1::basic_string"* [ %75, %83 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 -1
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %80, %73
  %84 = icmp eq %"class.std::__1::basic_string"* %75, %67
  br i1 %84, label %85, label %73

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::vector.34"* %3 to i8**
  %87 = load i8*, i8** %86, align 16
  br label %88

88:                                               ; preds = %85, %69
  %89 = phi i8* [ %87, %85 ], [ %70, %69 ]
  store %"class.std::__1::basic_string"* %67, %"class.std::__1::basic_string"** %7, align 8
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %66, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

declare i32 @EVP_PKEY_bits(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic15CertificateView15VerifySignatureEN4absl11string_viewES2_t(%"class.quic::CertificateView"* nocapture readonly, i8*, i64, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.bssl::internal::StackAllocated", align 8
  %9 = alloca %struct.evp_pkey_ctx_st*, align 8
  switch i16 %5, label %13 [
    i16 2052, label %14
    i16 1027, label %10
    i16 1283, label %11
    i16 2055, label %12
  ]

10:                                               ; preds = %6
  br label %14

11:                                               ; preds = %6
  br label %14

12:                                               ; preds = %6
  br label %14

13:                                               ; preds = %6
  br label %14

14:                                               ; preds = %6, %10, %11, %12, %13
  %15 = phi i32 [ 4, %13 ], [ 3, %12 ], [ 2, %11 ], [ 1, %10 ], [ 0, %6 ]
  %16 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %16, align 8
  %18 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %17) #12
  switch i32 %18, label %32 [
    i32 6, label %33
    i32 408, label %19
    i32 949, label %31
  ]

19:                                               ; preds = %14
  %20 = tail call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %17) #12
  %21 = icmp eq %struct.ec_key_st* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %19
  %23 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %20) #12
  %24 = icmp eq %struct.ec_group_st* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %23) #12
  %27 = icmp eq i32 %26, 715
  %28 = select i1 %27, i32 2, i32 4
  %29 = icmp eq i32 %26, 415
  %30 = select i1 %29, i32 1, i32 %28
  br label %33

31:                                               ; preds = %14
  br label %33

32:                                               ; preds = %14
  br label %33

33:                                               ; preds = %14, %19, %22, %25, %31, %32
  %34 = phi i32 [ 4, %32 ], [ 3, %31 ], [ 0, %14 ], [ 4, %19 ], [ %30, %25 ], [ 4, %22 ]
  %35 = icmp eq i32 %15, %34
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %37, label %38, label %69

38:                                               ; preds = %36
  %39 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %39) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 498, i32 2) #12
  %40 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %41 = bitcast %"class.std::__1::basic_ostringstream"* %40 to %"class.std::__1::basic_ostream"*
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %41, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.8, i64 0, i64 0), i64 82) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %39) #12
  br label %69

43:                                               ; preds = %33
  %44 = bitcast %"class.bssl::internal::StackAllocated"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #12
  %45 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %8, i64 0, i32 0
  %46 = bitcast %"class.bssl::internal::StackAllocated"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %45) #12
  %47 = bitcast %struct.evp_pkey_ctx_st** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  store %struct.evp_pkey_ctx_st* inttoptr (i64 -6148914691236517206 to %struct.evp_pkey_ctx_st*), %struct.evp_pkey_ctx_st** %9, align 8
  %48 = call %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext %5) #12
  %49 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %16, align 8
  %50 = call i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st* nonnull %45, %struct.evp_pkey_ctx_st** nonnull %9, %struct.env_md_st* %48, %struct.engine_st* null, %struct.evp_pkey_st* %49) #12
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %43
  %53 = call i32 @SSL_is_signature_algorithm_rsa_pss(i16 zeroext %5) #12
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %52
  %56 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %9, align 8
  %57 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %56, i32 6) #12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %9, align 8
  %61 = call i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st* %60, i32 -1) #12
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %59, %52
  %64 = call i32 @EVP_DigestVerify(%struct.env_md_ctx_st* nonnull %45, i8* %3, i64 %4, i8* %1, i64 %2) #12
  %65 = icmp ne i32 %64, 0
  br label %66

66:                                               ; preds = %55, %59, %43, %63
  %67 = phi i1 [ %65, %63 ], [ false, %43 ], [ false, %59 ], [ false, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  %68 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #12
  br label %69

69:                                               ; preds = %38, %36, %66
  %70 = phi i1 [ %67, %66 ], [ false, %36 ], [ false, %38 ]
  ret i1 %70
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare i32 @EVP_DigestVerifyInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext) local_unnamed_addr #2

declare i32 @SSL_is_signature_algorithm_rsa_pss(i16 zeroext) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st*, i32) local_unnamed_addr #2

declare i32 @EVP_DigestVerify(%struct.env_md_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic15CertificateView23GetHumanReadableSubjectEv(%"class.absl::optional"* noalias nocapture sret, %"class.quic::CertificateView"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.cbs_st*
  %5 = alloca %"class.std::__1::vector.34", align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca %"class.absl::optional", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %struct.cbs_st*
  %12 = alloca %"class.std::__1::vector.34", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %struct.cbs_st*
  %15 = alloca %"class.absl::optional", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %struct.cbs_st*
  %20 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %1, i64 0, i32 2, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %1, i64 0, i32 2, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 16, i1 false) #12
  call void @CBS_init(%struct.cbs_st* nonnull %19, i8* %21, i64 %23) #12
  %25 = load <2 x i64>, <2 x i64>* %18, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24)
  %26 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #12, !noalias !14
  store <2 x i64> %25, <2 x i64>* %10, align 16, !noalias !17
  %27 = bitcast %"class.std::__1::vector.34"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12, !noalias !17
  %28 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %12, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %12, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #12, !noalias !17
  %31 = bitcast <2 x i64>* %13 to i8*
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast <2 x i64>* %3 to i8*
  %34 = bitcast %"class.std::__1::vector.34"* %5 to i8*
  %35 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %5, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %5, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %struct.cbs_st* %6 to i8*
  %39 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 0
  %40 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 1
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon* %49 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds i8, i8* %52, i64 1
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::vector.34"* %5 to i8**
  %60 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"** %29 to i64*
  %65 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %union.anon* %66 to i8*
  %68 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #12, !noalias !17
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %184, label %70

70:                                               ; preds = %2, %178
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 16, i1 false) #12, !noalias !17
  %71 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %11, %struct.cbs_st* nonnull %14, i32 536870929) #12, !noalias !17
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  store i8 0, i8* %65, align 8, !alias.scope !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #12, !alias.scope !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12, !noalias !17
  br label %201

74:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false) #12, !noalias !17
  %75 = load <2 x i64>, <2 x i64>* %13, align 16, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #12, !noalias !20
  store <2 x i64> %75, <2 x i64>* %3, align 16, !noalias !23
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #12, !noalias !23
  %76 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #12, !noalias !23
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %118, label %78

78:                                               ; preds = %74, %112
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #12, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false) #12, !noalias !23
  %79 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %6, i32 536870928) #12, !noalias !23
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  store i8 0, i8* %32, align 8, !alias.scope !26, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #12, !alias.scope !26, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12, !noalias !23
  br label %127

82:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #12, !noalias !23
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false) #12, !noalias !23
  %83 = load i8*, i8** %39, align 8, !noalias !23
  %84 = load i64, i64* %40, align 8, !noalias !23
  call void @_ZN4quic25X509NameAttributeToStringE6cbs_st(%"class.absl::optional"* nonnull sret %7, i8* %83, i64 %84) #12, !noalias !23
  %85 = load i8, i8* %41, align 8, !range !10, !noalias !23
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %126, label %87

87:                                               ; preds = %82
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8, !noalias !23
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8, !noalias !23
  %90 = icmp eq %"class.std::__1::basic_string"* %88, %89
  br i1 %90, label %102, label %91

91:                                               ; preds = %87
  %92 = load i8, i8* %44, align 1, !noalias !23
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %45, i64 24, i1 false) #12, !noalias !23
  br label %99

96:                                               ; preds = %91
  %97 = load i8*, i8** %46, align 8, !noalias !23
  %98 = load i64, i64* %47, align 8, !noalias !23
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %88, i8* %97, i64 %98) #12, !noalias !23
  br label %99

99:                                               ; preds = %96, %94
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 1
  %101 = ptrtoint %"class.std::__1::basic_string"* %100 to i64
  store i64 %101, i64* %48, align 8, !noalias !23
  br label %103

102:                                              ; preds = %87
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.34"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %42) #12, !noalias !23
  br label %103

103:                                              ; preds = %102, %99
  %104 = load i8, i8* %41, align 8, !noalias !23
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %103
  %107 = load i8, i8* %44, align 1, !noalias !23
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load i8*, i8** %46, align 8, !noalias !23
  call void @_ZdlPv(i8* %110) #13, !noalias !23
  br label %111

111:                                              ; preds = %109, %106
  store i8 0, i8* %41, align 8, !noalias !23
  br label %112

112:                                              ; preds = %111, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #12, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12, !noalias !23
  %113 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #12, !noalias !23
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %78

115:                                              ; preds = %112
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8, !noalias !27
  %117 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8, !noalias !27
  br label %118

118:                                              ; preds = %115, %74
  %119 = phi %"class.std::__1::basic_string"* [ %117, %115 ], [ null, %74 ]
  %120 = phi %"class.std::__1::basic_string"* [ %116, %115 ], [ null, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12, !noalias !23
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12, !noalias !23
  store i8 1, i8* %54, align 1, !noalias !23
  store i8 43, i8* %52, align 8, !noalias !23
  store i8 0, i8* %55, align 1, !noalias !23
  call void @_ZN4absl16strings_internal13JoinAlgorithmINSt3__111__wrap_iterIPKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvEES9_T_SD_NS_11string_viewENS0_11NoFormatterE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_string"* %120, %"class.std::__1::basic_string"* %119, i8* nonnull %52, i64 1) #12, !noalias !23
  store i8 1, i8* %32, align 8, !alias.scope !26, !noalias !17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %51, i64 24, i1 false) #12, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #12, !noalias !23
  %121 = load i8, i8* %54, align 1, !noalias !23
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %118
  %124 = load i8*, i8** %58, align 8, !noalias !23
  call void @_ZdlPv(i8* %124) #13, !noalias !23
  br label %125

125:                                              ; preds = %123, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12, !noalias !23
  br label %127

126:                                              ; preds = %82
  store i8 0, i8* %32, align 8, !alias.scope !26, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #12, !alias.scope !26, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #12, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12, !noalias !23
  br label %127

127:                                              ; preds = %126, %125, %81
  %128 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8, !noalias !23
  %129 = icmp eq %"class.std::__1::basic_string"* %128, null
  br i1 %129, label %150, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  %132 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8, !noalias !23
  %133 = icmp eq %"class.std::__1::basic_string"* %132, %128
  br i1 %133, label %148, label %134

134:                                              ; preds = %130, %144
  %135 = phi %"class.std::__1::basic_string"* [ %136, %144 ], [ %132, %130 ]
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 -1
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1, !noalias !23
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8, !noalias !23
  call void @_ZdlPv(i8* %143) #13, !noalias !23
  br label %144

144:                                              ; preds = %141, %134
  %145 = icmp eq %"class.std::__1::basic_string"* %136, %128
  br i1 %145, label %146, label %134

146:                                              ; preds = %144
  %147 = load i8*, i8** %59, align 8, !noalias !23
  br label %148

148:                                              ; preds = %146, %130
  %149 = phi i8* [ %147, %146 ], [ %131, %130 ]
  store %"class.std::__1::basic_string"* %128, %"class.std::__1::basic_string"** %36, align 8, !noalias !23
  call void @_ZdlPv(i8* %149) #13, !noalias !23
  br label %150

150:                                              ; preds = %148, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12, !noalias !23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #12, !noalias !20
  %151 = load i8, i8* %32, align 8, !range !10, !noalias !17
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %200, label %153

153:                                              ; preds = %150
  %154 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8, !noalias !17
  %155 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8, !noalias !17
  %156 = icmp eq %"class.std::__1::basic_string"* %154, %155
  br i1 %156, label %168, label %157

157:                                              ; preds = %153
  %158 = load i8, i8* %61, align 1, !noalias !17
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %57, i64 24, i1 false) #12, !noalias !17
  br label %165

162:                                              ; preds = %157
  %163 = load i8*, i8** %62, align 8, !noalias !17
  %164 = load i64, i64* %63, align 8, !noalias !17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %154, i8* %163, i64 %164) #12, !noalias !17
  br label %165

165:                                              ; preds = %162, %160
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %154, i64 1
  %167 = ptrtoint %"class.std::__1::basic_string"* %166 to i64
  store i64 %167, i64* %64, align 8, !noalias !17
  br label %169

168:                                              ; preds = %153
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.34"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %56) #12, !noalias !17
  br label %169

169:                                              ; preds = %168, %165
  %170 = load i8, i8* %32, align 8, !noalias !17
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %178, label %172

172:                                              ; preds = %169
  %173 = load i8, i8* %61, align 1, !noalias !17
  %174 = icmp slt i8 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = load i8*, i8** %62, align 8, !noalias !17
  call void @_ZdlPv(i8* %176) #13, !noalias !17
  br label %177

177:                                              ; preds = %175, %172
  store i8 0, i8* %32, align 8, !noalias !17
  br label %178

178:                                              ; preds = %177, %169
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12, !noalias !17
  %179 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #12, !noalias !17
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %70

181:                                              ; preds = %178
  %182 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8, !noalias !32
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8, !noalias !32
  br label %184

184:                                              ; preds = %181, %2
  %185 = phi %"class.std::__1::basic_string"* [ %183, %181 ], [ null, %2 ]
  %186 = phi %"class.std::__1::basic_string"* [ %182, %181 ], [ null, %2 ]
  %187 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #12, !noalias !17
  %188 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #12, !noalias !17
  %189 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  store i8 1, i8* %190, align 1, !noalias !17
  store i8 44, i8* %188, align 8, !noalias !17
  %191 = getelementptr inbounds i8, i8* %188, i64 1
  store i8 0, i8* %191, align 1, !noalias !17
  call void @_ZN4absl16strings_internal13JoinAlgorithmINSt3__111__wrap_iterIPKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvEES9_T_SD_NS_11string_viewENS0_11NoFormatterE(%"class.std::__1::basic_string"* nonnull sret %16, %"class.std::__1::basic_string"* %186, %"class.std::__1::basic_string"* %185, i8* nonnull %188, i64 1) #12, !noalias !17
  store i8 1, i8* %65, align 8, !alias.scope !17
  %192 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %193 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* nonnull align 8 %187, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 0, i64 24, i1 false) #12, !noalias !17
  %194 = load i8, i8* %190, align 1, !noalias !17
  %195 = icmp slt i8 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %184
  %197 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load i8*, i8** %197, align 8, !noalias !17
  call void @_ZdlPv(i8* %198) #13, !noalias !17
  br label %199

199:                                              ; preds = %196, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #12, !noalias !17
  br label %201

200:                                              ; preds = %150
  store i8 0, i8* %65, align 8, !alias.scope !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #12, !alias.scope !17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12, !noalias !17
  br label %201

201:                                              ; preds = %200, %199, %73
  %202 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8, !noalias !17
  %203 = icmp eq %"class.std::__1::basic_string"* %202, null
  br i1 %203, label %225, label %204

204:                                              ; preds = %201
  %205 = bitcast %"class.std::__1::basic_string"* %202 to i8*
  %206 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8, !noalias !17
  %207 = icmp eq %"class.std::__1::basic_string"* %206, %202
  br i1 %207, label %223, label %208

208:                                              ; preds = %204, %218
  %209 = phi %"class.std::__1::basic_string"* [ %210, %218 ], [ %206, %204 ]
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 -1
  %211 = bitcast %"class.std::__1::basic_string"* %210 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1, !noalias !17
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %208
  %216 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8, !noalias !17
  call void @_ZdlPv(i8* %217) #13, !noalias !17
  br label %218

218:                                              ; preds = %215, %208
  %219 = icmp eq %"class.std::__1::basic_string"* %210, %202
  br i1 %219, label %220, label %208

220:                                              ; preds = %218
  %221 = bitcast %"class.std::__1::vector.34"* %12 to i8**
  %222 = load i8*, i8** %221, align 8, !noalias !17
  br label %223

223:                                              ; preds = %220, %204
  %224 = phi i8* [ %222, %220 ], [ %205, %204 ]
  store %"class.std::__1::basic_string"* %202, %"class.std::__1::basic_string"** %29, align 8, !noalias !17
  call void @_ZdlPv(i8* %224) #13, !noalias !17
  br label %225

225:                                              ; preds = %201, %223
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #12, !noalias !14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::CertificatePrivateKey"* @_ZN4quic21CertificatePrivateKey11LoadFromDerEN4absl11string_viewE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %struct.cbs_st*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %struct.cbs_st*
  %7 = tail call i8* @_Znwm(i64 8) #13
  %8 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 16, i1 false) #12
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %0, i64 %1) #12
  %10 = load <2 x i64>, <2 x i64>* %3, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9)
  store <2 x i64> %10, <2 x i64>* %5, align 16
  %11 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %6) #12
  %12 = bitcast i8* %7 to %struct.evp_pkey_st**
  store %struct.evp_pkey_st* %11, %struct.evp_pkey_st** %12, align 8
  %13 = icmp eq %struct.evp_pkey_st* %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br label %24

15:                                               ; preds = %2
  %16 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #12
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  %19 = bitcast i8* %7 to %"class.quic::CertificatePrivateKey"*
  br label %25

20:                                               ; preds = %15
  %21 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %12, align 8
  %22 = icmp eq %struct.evp_pkey_st* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %21) #12
  br label %24

24:                                               ; preds = %14, %23, %20
  call void @_ZdlPv(i8* nonnull %7) #13
  br label %25

25:                                               ; preds = %18, %24
  %26 = phi %"class.quic::CertificatePrivateKey"* [ %19, %18 ], [ null, %24 ]
  ret %"class.quic::CertificatePrivateKey"* %26
}

declare %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.quic::CertificatePrivateKey"* @_ZN4quic21CertificatePrivateKey17LoadPemFromStreamEPNSt3__113basic_istreamIcNS1_11char_traitsIcEEEE(%"class.std::__1::basic_istream"*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %struct.cbs_st*
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.cbs_st*
  %6 = alloca %"struct.quic::PemReadResult", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %struct.cbs_st*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %struct.cbs_st*
  %11 = bitcast %"struct.quic::PemReadResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  call void @_ZN4quic18ReadNextPemMessageEPNSt3__113basic_istreamIcNS0_11char_traitsIcEEEE(%"struct.quic::PemReadResult"* nonnull sret %6, %"class.std::__1::basic_istream"* %0)
  %12 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %14, label %20, label %27

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %41

27:                                               ; preds = %244, %1
  %28 = phi i1 [ %19, %1 ], [ %248, %244 ]
  br i1 %28, label %29, label %32

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %29, %27
  %33 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %249

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #13
  br label %249

41:                                               ; preds = %20, %244
  %42 = phi i1 [ %19, %20 ], [ %248, %244 ]
  %43 = phi i8 [ %18, %20 ], [ %247, %244 ]
  %44 = load i64, i64* %21, align 8
  %45 = zext i8 %43 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = icmp eq i64 %46, 11
  br i1 %47, label %48, label %83

48:                                               ; preds = %41
  %49 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %15, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #12
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %17, align 1
  %53 = load i64, i64* %21, align 8
  %54 = zext i8 %52 to i64
  br label %83

55:                                               ; preds = %48
  %56 = load i8, i8* %25, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = zext i8 %56 to i64
  %60 = ptrtoint %"class.std::__1::basic_string"* %23 to i64
  br label %68

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp sgt i64 %65, -1
  br i1 %66, label %68, label %67, !prof !5

67:                                               ; preds = %61
  call void @llvm.trap() #12
  unreachable

68:                                               ; preds = %58, %61
  %69 = phi i64 [ %63, %61 ], [ %60, %58 ]
  %70 = phi i64 [ %65, %61 ], [ %59, %58 ]
  %71 = inttoptr i64 %69 to i8*
  %72 = call %"class.quic::CertificatePrivateKey"* @_ZN4quic21CertificatePrivateKey11LoadFromDerEN4absl11string_viewE(i8* %71, i64 %70)
  %73 = ptrtoint %"class.quic::CertificatePrivateKey"* %72 to i64
  %74 = load i8, i8* %17, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %68
  %77 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %76, %68
  %79 = load i8, i8* %25, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %249

81:                                               ; preds = %78
  %82 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %249

83:                                               ; preds = %51, %41
  %84 = phi i64 [ %54, %51 ], [ %45, %41 ]
  %85 = phi i64 [ %53, %51 ], [ %44, %41 ]
  %86 = phi i8 [ %52, %51 ], [ %43, %41 ]
  %87 = icmp slt i8 %86, 0
  %88 = select i1 %87, i64 %85, i64 %84
  %89 = icmp eq i64 %88, 15
  br i1 %89, label %90, label %148

90:                                               ; preds = %83
  %91 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %15, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i64 15) #12
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %90
  %94 = load i8, i8* %17, align 1
  %95 = load i64, i64* %21, align 8
  %96 = zext i8 %94 to i64
  br label %148

97:                                               ; preds = %90
  %98 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #12
  %99 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %99, i8 -86, i64 16, i1 false)
  %100 = load i8, i8* %25, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = zext i8 %100 to i64
  %104 = ptrtoint %"class.std::__1::basic_string"* %23 to i64
  br label %112

105:                                              ; preds = %97
  %106 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = icmp sgt i64 %109, -1
  br i1 %110, label %112, label %111, !prof !5

111:                                              ; preds = %105
  call void @llvm.trap() #12
  unreachable

112:                                              ; preds = %102, %105
  %113 = phi i64 [ %107, %105 ], [ %104, %102 ]
  %114 = phi i64 [ %109, %105 ], [ %103, %102 ]
  %115 = inttoptr i64 %113 to i8*
  %116 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %116, i8 -86, i64 16, i1 false) #12
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %115, i64 %114) #12
  %117 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116)
  store <2 x i64> %117, <2 x i64>* %7, align 16
  %118 = call %struct.rsa_st* @RSA_parse_private_key(%struct.cbs_st* nonnull %8) #12
  %119 = icmp eq %struct.rsa_st* %118, null
  br i1 %119, label %137, label %120

120:                                              ; preds = %112
  %121 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #12
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %136

123:                                              ; preds = %120
  %124 = call i8* @_Znwm(i64 8) #13
  %125 = bitcast i8* %124 to i64*
  store i64 0, i64* %125, align 8
  %126 = ptrtoint i8* %124 to i64
  %127 = call %struct.evp_pkey_st* @EVP_PKEY_new() #12
  %128 = bitcast i8* %124 to %struct.evp_pkey_st**
  %129 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %128, align 8
  store %struct.evp_pkey_st* %127, %struct.evp_pkey_st** %128, align 8
  %130 = icmp eq %struct.evp_pkey_st* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %123
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %129) #12
  %132 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %128, align 8
  br label %133

133:                                              ; preds = %123, %131
  %134 = phi %struct.evp_pkey_st* [ %127, %123 ], [ %132, %131 ]
  %135 = call i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st* %134, %struct.rsa_st* nonnull %118) #12
  br label %137

136:                                              ; preds = %120
  call void @RSA_free(%struct.rsa_st* nonnull %118) #12
  br label %137

137:                                              ; preds = %112, %133, %136
  %138 = phi i64 [ %126, %133 ], [ 0, %136 ], [ 0, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #12
  %139 = load i8, i8* %17, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %137
  %142 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %142) #13
  br label %143

143:                                              ; preds = %141, %137
  %144 = load i8, i8* %25, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %249

146:                                              ; preds = %143
  %147 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %147) #13
  br label %249

148:                                              ; preds = %93, %83
  %149 = phi i64 [ %96, %93 ], [ %84, %83 ]
  %150 = phi i64 [ %95, %93 ], [ %85, %83 ]
  %151 = phi i8 [ %94, %93 ], [ %86, %83 ]
  %152 = icmp slt i8 %151, 0
  %153 = select i1 %152, i64 %150, i64 %149
  %154 = icmp eq i64 %153, 13
  br i1 %154, label %155, label %162

155:                                              ; preds = %148
  %156 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %15, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i64 13) #12
  %157 = icmp eq i32 %156, 0
  %158 = load i8, i8* %17, align 1
  br i1 %157, label %235, label %159

159:                                              ; preds = %155
  %160 = load i64, i64* %21, align 8
  %161 = zext i8 %158 to i64
  br label %162

162:                                              ; preds = %148, %159
  %163 = phi i64 [ %161, %159 ], [ %149, %148 ]
  %164 = phi i64 [ %160, %159 ], [ %150, %148 ]
  %165 = phi i8 [ %158, %159 ], [ %151, %148 ]
  %166 = icmp slt i8 %165, 0
  %167 = select i1 %166, i64 %164, i64 %163
  %168 = icmp eq i64 %167, 14
  br i1 %168, label %169, label %225

169:                                              ; preds = %162
  %170 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %15, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i64 14) #12
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = load i8, i8* %17, align 1
  br label %225

174:                                              ; preds = %169
  %175 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %175) #12
  %176 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %176, i8 -86, i64 16, i1 false)
  %177 = load i8, i8* %25, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = zext i8 %177 to i64
  %181 = ptrtoint %"class.std::__1::basic_string"* %23 to i64
  br label %189

182:                                              ; preds = %174
  %183 = bitcast %"class.std::__1::basic_string"* %23 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = getelementptr inbounds %"struct.quic::PemReadResult", %"struct.quic::PemReadResult"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = icmp sgt i64 %186, -1
  br i1 %187, label %189, label %188, !prof !5

188:                                              ; preds = %182
  call void @llvm.trap() #12
  unreachable

189:                                              ; preds = %179, %182
  %190 = phi i64 [ %184, %182 ], [ %181, %179 ]
  %191 = phi i64 [ %186, %182 ], [ %180, %179 ]
  %192 = inttoptr i64 %190 to i8*
  %193 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %193, i8 -86, i64 16, i1 false) #12
  call void @CBS_init(%struct.cbs_st* nonnull %3, i8* %192, i64 %191) #12
  %194 = load <2 x i64>, <2 x i64>* %2, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193)
  store <2 x i64> %194, <2 x i64>* %9, align 16
  %195 = call %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st* nonnull %10, %struct.ec_group_st* null) #12
  %196 = icmp eq %struct.ec_key_st* %195, null
  br i1 %196, label %214, label %197

197:                                              ; preds = %189
  %198 = call i64 @CBS_len(%struct.cbs_st* nonnull %10) #12
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %213

200:                                              ; preds = %197
  %201 = call i8* @_Znwm(i64 8) #13
  %202 = bitcast i8* %201 to i64*
  store i64 0, i64* %202, align 8
  %203 = ptrtoint i8* %201 to i64
  %204 = call %struct.evp_pkey_st* @EVP_PKEY_new() #12
  %205 = bitcast i8* %201 to %struct.evp_pkey_st**
  %206 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %205, align 8
  store %struct.evp_pkey_st* %204, %struct.evp_pkey_st** %205, align 8
  %207 = icmp eq %struct.evp_pkey_st* %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %200
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %206) #12
  %209 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %205, align 8
  br label %210

210:                                              ; preds = %200, %208
  %211 = phi %struct.evp_pkey_st* [ %204, %200 ], [ %209, %208 ]
  %212 = call i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st* %211, %struct.ec_key_st* nonnull %195) #12
  br label %214

213:                                              ; preds = %197
  call void @EC_KEY_free(%struct.ec_key_st* nonnull %195) #12
  br label %214

214:                                              ; preds = %189, %210, %213
  %215 = phi i64 [ %203, %210 ], [ 0, %213 ], [ 0, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %175) #12
  %216 = load i8, i8* %17, align 1
  %217 = icmp slt i8 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %214
  %219 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %219) #13
  br label %220

220:                                              ; preds = %218, %214
  %221 = load i8, i8* %25, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %249

223:                                              ; preds = %220
  %224 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %224) #13
  br label %249

225:                                              ; preds = %172, %162
  %226 = phi i8 [ %173, %172 ], [ %165, %162 ]
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %225
  %229 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %229) #13
  br label %230

230:                                              ; preds = %228, %225
  %231 = load i8, i8* %25, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %233, label %249

233:                                              ; preds = %230
  %234 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %234) #13
  br label %249

235:                                              ; preds = %155
  %236 = icmp slt i8 %158, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %235
  %238 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %238) #13
  br label %239

239:                                              ; preds = %237, %235
  %240 = load i8, i8* %25, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %239
  %243 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %243) #13
  br label %244

244:                                              ; preds = %239, %242
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  call void @_ZN4quic18ReadNextPemMessageEPNSt3__113basic_istreamIcNS0_11char_traitsIcEEEE(%"struct.quic::PemReadResult"* nonnull sret %6, %"class.std::__1::basic_istream"* %0)
  %245 = load i32, i32* %12, align 8
  %246 = icmp eq i32 %245, 0
  %247 = load i8, i8* %17, align 1
  %248 = icmp slt i8 %247, 0
  br i1 %246, label %41, label %27

249:                                              ; preds = %233, %230, %223, %220, %146, %143, %81, %78, %38, %32
  %250 = phi i64 [ 0, %32 ], [ 0, %38 ], [ %73, %78 ], [ %73, %81 ], [ %138, %143 ], [ %138, %146 ], [ %215, %220 ], [ %215, %223 ], [ 0, %230 ], [ 0, %233 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #12
  %251 = inttoptr i64 %250 to %"class.quic::CertificatePrivateKey"*
  ret %"class.quic::CertificatePrivateKey"* %251
}

declare %struct.rsa_st* @RSA_parse_private_key(%struct.cbs_st*) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_PKEY_new() local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st*, %struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic21CertificatePrivateKey4SignEN4absl11string_viewEt(%"class.std::__1::basic_string"* noalias sret, %"class.quic::CertificatePrivateKey"* nocapture readonly, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.bssl::internal::StackAllocated", align 8
  %8 = alloca %struct.evp_pkey_ctx_st*, align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca i64, align 8
  %11 = tail call zeroext i1 @_ZN4quic21CertificatePrivateKey26ValidForSignatureAlgorithmEt(%"class.quic::CertificatePrivateKey"* %1, i16 zeroext %4)
  br i1 %11, label %23, label %12

12:                                               ; preds = %5
  %13 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  %15 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %15) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 591, i32 2) #12
  %16 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %16 to %"class.std::__1::basic_ostream"*
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %17, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.13, i64 0, i64 0), i64 83) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %15) #12
  br label %19

19:                                               ; preds = %12, %14
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 0, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %22, align 8
  br label %87

23:                                               ; preds = %5
  %24 = bitcast %"class.bssl::internal::StackAllocated"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %7, i64 0, i32 0
  %26 = bitcast %"class.bssl::internal::StackAllocated"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 32, i1 false)
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %25) #12
  %27 = bitcast %struct.evp_pkey_ctx_st** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store %struct.evp_pkey_ctx_st* inttoptr (i64 -6148914691236517206 to %struct.evp_pkey_ctx_st*), %struct.evp_pkey_ctx_st** %8, align 8
  %28 = call %struct.env_md_st* @SSL_get_signature_algorithm_digest(i16 zeroext %4) #12
  %29 = getelementptr inbounds %"class.quic::CertificatePrivateKey", %"class.quic::CertificatePrivateKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %29, align 8
  %31 = call i32 @EVP_DigestSignInit(%struct.env_md_ctx_st* nonnull %25, %struct.evp_pkey_ctx_st** nonnull %8, %struct.env_md_st* %28, %struct.engine_st* null, %struct.evp_pkey_st* %30) #12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %23
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 0, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %36, align 8
  br label %85

37:                                               ; preds = %23
  %38 = call i32 @SSL_is_signature_algorithm_rsa_pss(i16 zeroext %4) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %37
  %41 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %8, align 8
  %42 = call i32 @EVP_PKEY_CTX_set_rsa_padding(%struct.evp_pkey_ctx_st* %41, i32 6) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = load %struct.evp_pkey_ctx_st*, %struct.evp_pkey_ctx_st** %8, align 8
  %46 = call i32 @EVP_PKEY_CTX_set_rsa_pss_saltlen(%struct.evp_pkey_ctx_st* %45, i32 -1) #12
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %44, %40
  %49 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 0, i8* %50, align 1
  %51 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %51, align 8
  br label %85

52:                                               ; preds = %44, %37
  %53 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #12
  %55 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  store i64 -6148914691236517206, i64* %10, align 8
  %56 = call i32 @EVP_DigestSign(%struct.env_md_ctx_st* nonnull %25, i8* null, i64* nonnull %10, i8* %2, i64 %3) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %52
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  store i8 0, i8* %60, align 1
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %61, align 8
  br label %75

62:                                               ; preds = %52
  %63 = load i64, i64* %10, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %9, i64 %63, i8 signext 0) #12
  %64 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i8*, i8** %54, align 8
  %69 = select i1 %67, i8* %68, i8* %53
  %70 = call i32 @EVP_DigestSign(%struct.env_md_ctx_st* nonnull %25, i8* %69, i64* nonnull %10, i8* %2, i64 %3) #12
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %62
  %73 = load i64, i64* %10, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* nonnull %9, i64 %73, i8 signext 0) #12
  %74 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* nonnull align 8 %53, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #12
  br label %75

75:                                               ; preds = %72, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br label %84

76:                                               ; preds = %62
  %77 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  store i8 0, i8* %78, align 1
  %79 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %79, align 8
  %80 = load i8, i8* %65, align 1
  %81 = icmp slt i8 %80, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  br i1 %81, label %82, label %84

82:                                               ; preds = %76
  %83 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %75, %76, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #12
  br label %85

85:                                               ; preds = %84, %48, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %86 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #12
  br label %87

87:                                               ; preds = %85, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic21CertificatePrivateKey26ValidForSignatureAlgorithmEt(%"class.quic::CertificatePrivateKey"* nocapture readonly, i16 zeroext) local_unnamed_addr #0 align 2 {
  switch i16 %1, label %6 [
    i16 2052, label %7
    i16 1027, label %3
    i16 1283, label %4
    i16 2055, label %5
  ]

3:                                                ; preds = %2
  br label %7

4:                                                ; preds = %2
  br label %7

5:                                                ; preds = %2
  br label %7

6:                                                ; preds = %2
  br label %7

7:                                                ; preds = %2, %3, %4, %5, %6
  %8 = phi i32 [ 4, %6 ], [ 3, %5 ], [ 2, %4 ], [ 1, %3 ], [ 0, %2 ]
  %9 = getelementptr inbounds %"class.quic::CertificatePrivateKey", %"class.quic::CertificatePrivateKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %9, align 8
  %11 = tail call i32 @EVP_PKEY_id(%struct.evp_pkey_st* %10) #12
  switch i32 %11, label %25 [
    i32 6, label %26
    i32 408, label %12
    i32 949, label %24
  ]

12:                                               ; preds = %7
  %13 = tail call %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st* %10) #12
  %14 = icmp eq %struct.ec_key_st* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %12
  %16 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* nonnull %13) #12
  %17 = icmp eq %struct.ec_group_st* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %16) #12
  %20 = icmp eq i32 %19, 715
  %21 = select i1 %20, i32 2, i32 4
  %22 = icmp eq i32 %19, 415
  %23 = select i1 %22, i32 1, i32 %21
  br label %26

24:                                               ; preds = %7
  br label %26

25:                                               ; preds = %7
  br label %26

26:                                               ; preds = %7, %12, %15, %18, %24, %25
  %27 = phi i32 [ 4, %25 ], [ 3, %24 ], [ 0, %7 ], [ 4, %12 ], [ %23, %18 ], [ 4, %15 ]
  %28 = icmp eq i32 %8, %27
  ret i1 %28
}

declare i32 @EVP_DigestSignInit(%struct.env_md_ctx_st*, %struct.evp_pkey_ctx_st**, %struct.env_md_st*, %struct.engine_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @EVP_DigestSign(%struct.env_md_ctx_st*, i8*, i64*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic21CertificatePrivateKey16MatchesPublicKeyERKNS_15CertificateViewE(%"class.quic::CertificatePrivateKey"* nocapture readonly, %"class.quic::CertificateView"* nocapture readonly dereferenceable(88)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::CertificateView", %"class.quic::CertificateView"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %3, align 8
  %5 = getelementptr inbounds %"class.quic::CertificatePrivateKey", %"class.quic::CertificatePrivateKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %5, align 8
  %7 = tail call i32 @EVP_PKEY_cmp(%struct.evp_pkey_st* %4, %struct.evp_pkey_st* %6) #12
  %8 = icmp eq i32 %7, 1
  ret i1 %8
}

declare i32 @EVP_PKEY_cmp(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i8* @CBS_asn1_oid_to_text(%struct.cbs_st*) local_unnamed_addr #2

declare void @_ZN4absl16BytesToHexStringENS_11string_viewE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare { i8, i64 } @_ZN6quiche34QuicheUtcDateTimeToUnixSecondsImplEiiiiii(i32, i32, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #7

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EVP_PKEY_get0_EC_KEY(%struct.evp_pkey_st*) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @EC_GROUP_get_curve_name(%struct.ec_group_st*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.34"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #12
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl16strings_internal13JoinAlgorithmINSt3__111__wrap_iterIPKNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvEES9_T_SD_NS_11string_viewENS0_11NoFormatterE(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %9, label %121, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %20

18:                                               ; preds = %10
  %19 = zext i8 %13 to i64
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i64 [ %17, %15 ], [ %19, %18 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %23 = icmp eq %"class.std::__1::basic_string"* %22, %2
  br i1 %23, label %24, label %27

24:                                               ; preds = %41, %20
  %25 = phi i64 [ %21, %20 ], [ %43, %41 ]
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %121, label %46

27:                                               ; preds = %20, %41
  %28 = phi %"class.std::__1::basic_string"* [ %44, %41 ], [ %22, %20 ]
  %29 = phi i64 [ %43, %41 ], [ %21, %20 ]
  %30 = phi %"class.std::__1::basic_string"* [ %28, %41 ], [ %1, %20 ]
  %31 = add i64 %29, %4
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %27
  %40 = zext i8 %34 to i64
  br label %41

41:                                               ; preds = %36, %39
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = add i64 %31, %42
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %45 = icmp eq %"class.std::__1::basic_string"* %44, %2
  br i1 %45, label %24, label %27

46:                                               ; preds = %24
  %47 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = icmp ugt i64 %25, 22
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = add i64 %25, -22
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 22, i64 %51, i64 0, i64 0, i64 0, i64 0) #12
  %52 = load i8, i8* %48, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load i8*, i8** %6, align 8
  store i64 %25, i64* %7, align 8
  br label %58

56:                                               ; preds = %46, %50
  %57 = trunc i64 %25 to i8
  store i8 %57, i8* %48, align 1
  br label %58

58:                                               ; preds = %56, %54
  %59 = phi i8* [ %55, %54 ], [ %8, %56 ]
  %60 = getelementptr inbounds i8, i8* %59, i64 %25
  store i8 0, i8* %60, align 1
  %61 = load i8, i8* %48, align 1
  %62 = load i8, i8* %12, align 1
  %63 = icmp slt i8 %61, 0
  %64 = load i8*, i8** %6, align 8
  %65 = select i1 %63, i8* %64, i8* %8
  %66 = icmp slt i8 %62, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %58
  %73 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %74 = zext i8 %62 to i64
  br label %75

75:                                               ; preds = %67, %72
  %76 = phi i8* [ %69, %67 ], [ %73, %72 ]
  %77 = phi i64 [ %71, %67 ], [ %74, %72 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %65, i8* align 1 %76, i64 %77, i1 false)
  %78 = load i8, i8* %12, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  br label %85

83:                                               ; preds = %75
  %84 = zext i8 %78 to i64
  br label %85

85:                                               ; preds = %80, %83
  %86 = phi i64 [ %82, %80 ], [ %84, %83 ]
  br i1 %23, label %121, label %87

87:                                               ; preds = %85
  %88 = getelementptr inbounds i8, i8* %65, i64 %86
  br label %89

89:                                               ; preds = %87, %116
  %90 = phi %"class.std::__1::basic_string"* [ %119, %116 ], [ %22, %87 ]
  %91 = phi i8* [ %118, %116 ], [ %88, %87 ]
  %92 = phi %"class.std::__1::basic_string"* [ %90, %116 ], [ %1, %87 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %3, i64 %4, i1 false)
  %93 = getelementptr inbounds i8, i8* %91, i64 %4
  %94 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %103

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  br label %106

103:                                              ; preds = %89
  %104 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %105 = zext i8 %96 to i64
  br label %106

106:                                              ; preds = %98, %103
  %107 = phi i8* [ %100, %98 ], [ %104, %103 ]
  %108 = phi i64 [ %102, %98 ], [ %105, %103 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %93, i8* align 1 %107, i64 %108, i1 false)
  %109 = load i8, i8* %95, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  br label %116

114:                                              ; preds = %106
  %115 = zext i8 %109 to i64
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i64 [ %113, %111 ], [ %115, %114 ]
  %118 = getelementptr inbounds i8, i8* %93, i64 %117
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  %120 = icmp eq %"class.std::__1::basic_string"* %119, %2
  br i1 %120, label %121, label %89

121:                                              ; preds = %116, %85, %5, %24
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !10
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @EC_KEY_free(%struct.ec_key_st*) local_unnamed_addr #2

declare void @RSA_free(%struct.rsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(168) %"class.std::__1::basic_istream"* @_ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_(%"class.std::__1::basic_istream"* dereferenceable(168), %"class.std::__1::basic_string"* dereferenceable(24), i8 signext) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry", align 1
  %5 = getelementptr inbounds %"class.std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 -86, i8* %5, align 1
  call void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b(%"class.std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry"* nonnull %4, %"class.std::__1::basic_istream"* dereferenceable(168) %0, i1 zeroext true) #12
  %6 = load i8, i8* %5, align 1, !range !10
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %76, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %16, align 8
  br label %19

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %18, align 1
  store i8 0, i8* %10, align 1
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_istream"* %0 to i8**
  %22 = getelementptr inbounds %"class.std::__1::basic_istream", %"class.std::__1::basic_istream"* %0, i64 0, i32 2, i32 0, i32 3
  %23 = bitcast i64* %22 to i8*
  br label %24

24:                                               ; preds = %53, %19
  %25 = phi i64 [ 0, %19 ], [ %54, %53 ]
  %26 = load i8*, i8** %21, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::basic_streambuf"**
  %32 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %32, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_streambuf", %"class.std::__1::basic_streambuf"* %32, i64 0, i32 4
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %34, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %39, i8** %33, align 8
  %40 = load i8, i8* %34, align 1
  %41 = zext i8 %40 to i32
  br label %49

42:                                               ; preds = %24
  %43 = bitcast %"class.std::__1::basic_streambuf"* %32 to i32 (%"class.std::__1::basic_streambuf"*)***
  %44 = load i32 (%"class.std::__1::basic_streambuf"*)**, i32 (%"class.std::__1::basic_streambuf"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %44, i64 10
  %46 = load i32 (%"class.std::__1::basic_streambuf"*)*, i32 (%"class.std::__1::basic_streambuf"*)** %45, align 8
  %47 = call i32 %46(%"class.std::__1::basic_streambuf"* %32) #12
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %60, label %49

49:                                               ; preds = %38, %42
  %50 = phi i32 [ %41, %38 ], [ %47, %42 ]
  %51 = trunc i32 %50 to i8
  %52 = icmp eq i8 %51, %2
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = add nuw nsw i64 %25, 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %1, i8 signext %51) #12
  %55 = load i8, i8* %10, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i64, i64* %20, align 8
  %58 = icmp eq i64 %57, -17
  %59 = and i1 %56, %58
  br i1 %59, label %63, label %24

60:                                               ; preds = %42
  %61 = icmp eq i64 %25, 0
  %62 = select i1 %61, i32 6, i32 2
  br label %63

63:                                               ; preds = %53, %49, %60
  %64 = phi i32 [ %62, %60 ], [ 0, %49 ], [ 4, %53 ]
  %65 = bitcast %"class.std::__1::basic_istream"* %0 to i8*
  %66 = load i8*, i8** %21, align 8
  %67 = getelementptr i8, i8* %66, i64 -24
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 %69
  %71 = bitcast i8* %70 to %"class.std::__1::ios_base"*
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 8
  %75 = or i32 %74, %64
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %71, i32 %75) #12
  br label %76

76:                                               ; preds = %3, %63
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  ret %"class.std::__1::basic_istream"* %0
}

declare void @_ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b(%"class.std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_istream"* dereferenceable(168), i1 zeroext) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector.34"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.34"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.34"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #12
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4quic12_GLOBAL__N_121AttributeNameToStringERK6cbs_st: argument 0"}
!4 = distinct !{!4, !"_ZN4quic12_GLOBAL__N_121AttributeNameToStringERK6cbs_st"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!9 = distinct !{!9, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4absl11string_viewcvNSt3__112basic_stringIcNS1_11char_traitsIcEET_EEINS1_9allocatorIcEEEEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN4quic12_GLOBAL__N_125DistinguishedNameToStringE6cbs_st: argument 0"}
!16 = distinct !{!16, !"_ZN4quic12_GLOBAL__N_125DistinguishedNameToStringE6cbs_st"}
!17 = !{!18, !15}
!18 = distinct !{!18, !19, !"_ZN4quic12_GLOBAL__N_112ParseAndJoinILj536870929ELc44EXadL_ZNS0_33RelativeDistinguishedNameToStringE6cbs_stEEEEN4absl8optionalINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEES2_: argument 0"}
!19 = distinct !{!19, !"_ZN4quic12_GLOBAL__N_112ParseAndJoinILj536870929ELc44EXadL_ZNS0_33RelativeDistinguishedNameToStringE6cbs_stEEEEN4absl8optionalINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEES2_"}
!20 = !{!21, !18, !15}
!21 = distinct !{!21, !22, !"_ZN4quic12_GLOBAL__N_133RelativeDistinguishedNameToStringE6cbs_st: argument 0"}
!22 = distinct !{!22, !"_ZN4quic12_GLOBAL__N_133RelativeDistinguishedNameToStringE6cbs_st"}
!23 = !{!24, !21, !18, !15}
!24 = distinct !{!24, !25, !"_ZN4quic12_GLOBAL__N_112ParseAndJoinILj536870928ELc43EXadL_ZNS_25X509NameAttributeToStringE6cbs_stEEEEN4absl8optionalINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEES2_: argument 0"}
!25 = distinct !{!25, !"_ZN4quic12_GLOBAL__N_112ParseAndJoinILj536870928ELc43EXadL_ZNS_25X509NameAttributeToStringE6cbs_stEEEEN4absl8optionalINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEES2_"}
!26 = !{!24, !21}
!27 = !{!28, !30, !24, !21, !18, !15}
!28 = distinct !{!28, !29, !"_ZN4absl16strings_internal9JoinRangeINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEES9_RKT_NS_11string_viewE: argument 0"}
!29 = distinct !{!29, !"_ZN4absl16strings_internal9JoinRangeINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEES9_RKT_NS_11string_viewE"}
!30 = distinct !{!30, !31, !"_ZN4absl7StrJoinINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEES8_RKT_NS_11string_viewE: argument 0"}
!31 = distinct !{!31, !"_ZN4absl7StrJoinINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEES8_RKT_NS_11string_viewE"}
!32 = !{!33, !35, !18, !15}
!33 = distinct !{!33, !34, !"_ZN4absl16strings_internal9JoinRangeINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEES9_RKT_NS_11string_viewE: argument 0"}
!34 = distinct !{!34, !"_ZN4absl16strings_internal9JoinRangeINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEEEES9_RKT_NS_11string_viewE"}
!35 = distinct !{!35, !36, !"_ZN4absl7StrJoinINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEES8_RKT_NS_11string_viewE: argument 0"}
!36 = distinct !{!36, !"_ZN4absl7StrJoinINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEES8_RKT_NS_11string_viewE"}
