; ModuleID = '../../third_party/angle/src/compiler/translator/Declarator.cpp'
source_filename = "../../third_party/angle/src/compiler/translator/Declarator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sh::TDeclarator" = type { %"class.sh::ImmutableString", %"class.sh::TVector"*, %"struct.sh::TSourceLoc" }
%"class.sh::ImmutableString" = type { i8*, i64 }
%"class.sh::TVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"struct.sh::TSourceLoc" = type { i32, i32, i32, i32 }

@_ZN2sh11TDeclaratorC1ERKNS_15ImmutableStringERKNS_10TSourceLocE = hidden unnamed_addr alias void (%"class.sh::TDeclarator"*, %"class.sh::ImmutableString"*, %"struct.sh::TSourceLoc"*), void (%"class.sh::TDeclarator"*, %"class.sh::ImmutableString"*, %"struct.sh::TSourceLoc"*)* @_ZN2sh11TDeclaratorC2ERKNS_15ImmutableStringERKNS_10TSourceLocE
@_ZN2sh11TDeclaratorC1ERKNS_15ImmutableStringEPKNS_7TVectorIjEERKNS_10TSourceLocE = hidden unnamed_addr alias void (%"class.sh::TDeclarator"*, %"class.sh::ImmutableString"*, %"class.sh::TVector"*, %"struct.sh::TSourceLoc"*), void (%"class.sh::TDeclarator"*, %"class.sh::ImmutableString"*, %"class.sh::TVector"*, %"struct.sh::TSourceLoc"*)* @_ZN2sh11TDeclaratorC2ERKNS_15ImmutableStringEPKNS_7TVectorIjEERKNS_10TSourceLocE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh11TDeclaratorC2ERKNS_15ImmutableStringERKNS_10TSourceLocE(%"class.sh::TDeclarator"* nocapture, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.sh::TDeclarator"* %0 to i8*
  %5 = bitcast %"class.sh::ImmutableString"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %0, i64 0, i32 1
  store %"class.sh::TVector"* null, %"class.sh::TVector"** %6, align 8
  %7 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %0, i64 0, i32 2
  %8 = bitcast %"struct.sh::TSourceLoc"* %7 to i8*
  %9 = bitcast %"struct.sh::TSourceLoc"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %9, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2sh11TDeclaratorC2ERKNS_15ImmutableStringEPKNS_7TVectorIjEERKNS_10TSourceLocE(%"class.sh::TDeclarator"* nocapture, %"class.sh::ImmutableString"* nocapture readonly dereferenceable(16), %"class.sh::TVector"*, %"struct.sh::TSourceLoc"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.sh::TDeclarator"* %0 to i8*
  %6 = bitcast %"class.sh::ImmutableString"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %0, i64 0, i32 1
  store %"class.sh::TVector"* %2, %"class.sh::TVector"** %7, align 8
  %8 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %0, i64 0, i32 2
  %9 = bitcast %"struct.sh::TSourceLoc"* %8 to i8*
  %10 = bitcast %"struct.sh::TSourceLoc"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 4 %10, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sh11TDeclarator7isArrayEv(%"class.sh::TDeclarator"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.sh::TDeclarator", %"class.sh::TDeclarator"* %0, i64 0, i32 1
  %3 = load %"class.sh::TVector"*, %"class.sh::TVector"** %2, align 8
  %4 = icmp eq %"class.sh::TVector"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sh::TVector", %"class.sh::TVector"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.sh::TVector"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp ne i64 %8, %10
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
