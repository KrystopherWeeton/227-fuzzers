; ModuleID = '../../components/viz/service/display/overlay_candidate.cc'
source_filename = "../../components/viz/service/display/overlay_candidate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::OverlayCandidate" = type { i32, i32, %"class.gfx::ColorSpace", %"class.gfx::Size", %"class.gfx::RectF", %"class.gfx::RectF", %"class.absl::optional", i8, i8, %"class.util::IdType", %"struct.gpu::Mailbox", i32, i8, i32, i32, i32, i8, i8, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.viz::DisplayResourceProvider" = type <{ %"class.base::trace_event::MemoryDumpProvider", i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.14", %"class.base::flat_map", %class.scoped_refptr, i32, %"class.viz::ResourceIdGenerator", i32, i32, i8, [3 x i8] }>
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unordered_map.14" = type { %"class.std::__1::__hash_table.15" }
%"class.std::__1::__hash_table.15" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base.19"** }
%"struct.std::__1::__hash_node_base.19" = type { %"struct.std::__1::__hash_node_base.19"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator.21" }
%"class.std::__1::__bucket_list_deallocator.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base.19" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.40" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::pair"* }
%class.scoped_refptr = type { %"class.viz::ResourceFence"* }
%"class.viz::ResourceFence" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.gfx::Rect"* }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.53", float, i8, [3 x i8] }>
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.absl::optional.53" = type { %"class.absl::optional_internal::optional_data.54" }
%"class.absl::optional_internal::optional_data.54" = type { %"class.absl::optional_internal::optional_data_base.55" }
%"class.absl::optional_internal::optional_data_base.55" = type { %"class.absl::optional_internal::optional_data_dtor_base.56" }
%"class.absl::optional_internal::optional_data_dtor_base.56" = type { i8, %union.anon.57 }
%union.anon.57 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType"] }
%"class.viz::TextureDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x float], i8, i32, %"struct.viz::TextureDrawQuad::OverlayResources" }
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"struct.viz::TextureDrawQuad::OverlayResources" = type { %"class.gfx::Size" }
%"class.viz::YUVVideoDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::Size", %"class.gfx::Size", float, float, i32, %"class.gfx::ColorSpace", i32, %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.viz::VideoHoleDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::StreamVideoDrawQuad" = type { %"class.viz::DrawQuad.base", %"class.gfx::PointF", %"class.gfx::PointF", %"struct.viz::StreamVideoDrawQuad::OverlayResources", [4 x i8] }
%"struct.viz::StreamVideoDrawQuad::OverlayResources" = type { %"class.gfx::Size" }
%"class.viz::SolidColorDrawQuad" = type <{ %"class.viz::DrawQuad.base", i32, i8, [7 x i8] }>
%"class.cc::ListContainer<viz::DrawQuad>::ConstIterator" = type { %"class.cc::ListContainerHelper::ConstIterator" }
%"class.cc::ListContainerHelper::ConstIterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.base::flat_map.58" = type { %"class.base::internal::flat_tree.59" }
%"class.base::internal::flat_tree.59" = type { %"class.std::__1::vector.60" }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type { %"class.util::IdType.68", %"class.cc::FilterOperations"* }
%"class.util::IdType.68" = type { %"class.base::StrongAlias.69" }
%"class.base::StrongAlias.69" = type { i64 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.70" }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.78" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.46", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.72, i32, %"class.absl::optional.73", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.72 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %struct.SkRect }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.viz::AggregatedRenderPassDrawQuad" = type { %"class.viz::RenderPassDrawQuadInternal.base", %"class.util::IdType.68" }
%"class.viz::RenderPassDrawQuadInternal.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::PointF", %"class.gfx::RectF", float, i8, i8 }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::Vector3dF" = type { float, float, float }

@_ZN3viz16OverlayCandidate19kInvalidDamageIndexE = hidden local_unnamed_addr constant i32 -1, align 4

@_ZN3viz16OverlayCandidateC1Ev = hidden unnamed_addr alias void (%"class.viz::OverlayCandidate"*), void (%"class.viz::OverlayCandidate"*)* @_ZN3viz16OverlayCandidateC2Ev
@_ZN3viz16OverlayCandidateC1ERKS0_ = hidden unnamed_addr alias void (%"class.viz::OverlayCandidate"*, %"class.viz::OverlayCandidate"*), void (%"class.viz::OverlayCandidate"*, %"class.viz::OverlayCandidate"*)* @_ZN3viz16OverlayCandidateC2ERKS0_
@_ZN3viz16OverlayCandidateD1Ev = hidden unnamed_addr alias void (%"class.viz::OverlayCandidate"*), void (%"class.viz::OverlayCandidate"*)* @_ZN3viz16OverlayCandidateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16OverlayCandidateC2Ev(%"class.viz::OverlayCandidate"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 1
  store i32 6, i32* %3, align 4
  %4 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 100, i1 false)
  store float 1.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5, i32 1, i32 1
  store float 1.000000e+00, float* %6, align 4
  %7 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 7
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 8
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 10
  tail call void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"* %11) #7
  %12 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 11
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 12
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 13
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 14
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 15
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 16
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 17
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 18
  store i32 0, i32* %19, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3gpu7MailboxC1Ev(%"struct.gpu::Mailbox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16OverlayCandidateC2ERKS0_(%"class.viz::OverlayCandidate"* nocapture, %"class.viz::OverlayCandidate"* nocapture readonly dereferenceable(188)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::OverlayCandidate"* %0 to i8*
  %4 = bitcast %"class.viz::OverlayCandidate"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 188, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz16OverlayCandidateD2Ev(%"class.viz::OverlayCandidate"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate12FromDrawQuadEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEERK10SkMatrix44PKNS_8DrawQuadERKNS5_5RectFEPS0_(%"class.viz::DisplayResourceProvider"*, %"class.std::__1::vector.46"* nocapture readonly, %class.SkMatrix44* nocapture readonly dereferenceable(68), %"class.viz::DrawQuad"*, %"class.gfx::RectF"* dereferenceable(16), %"class.viz::OverlayCandidate"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %2, i64 0, i32 1
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %82

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %3, i64 0, i32 6
  %12 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %11, align 8
  %13 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %12, i64 0, i32 7
  %14 = load float, float* %13, align 8
  %15 = fcmp une float %14, 1.000000e+00
  br i1 %15, label %82, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %12, i64 0, i32 8
  %18 = load i32, i32* %17, align 4
  switch i32 %18, label %82 [
    i32 1, label %19
    i32 3, label %19
  ]

19:                                               ; preds = %16, %16
  %20 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %3, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %33 [
    i32 8, label %22
    i32 11, label %34
    i32 10, label %28
  ]

22:                                               ; preds = %19
  %23 = tail call %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %3) #7
  %24 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %23, i64 0, i32 5
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 96
  %27 = icmp eq i8 %26, 64
  br label %34

28:                                               ; preds = %19
  %29 = tail call %"class.viz::YUVVideoDrawQuad"* @_ZN3viz16YUVVideoDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %3) #7
  %30 = getelementptr inbounds %"class.viz::YUVVideoDrawQuad", %"class.viz::YUVVideoDrawQuad"* %29, i64 0, i32 9
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2
  br label %34

33:                                               ; preds = %19
  br label %34

34:                                               ; preds = %19, %22, %28, %33
  %35 = phi i1 [ false, %33 ], [ %32, %28 ], [ %27, %22 ], [ true, %19 ]
  %36 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 16
  %37 = zext i1 %35 to i8
  store i8 %37, i8* %36, align 4
  %38 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %12, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %12, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  br label %45

45:                                               ; preds = %34, %41
  %46 = phi i32 [ %44, %41 ], [ -1, %34 ]
  %47 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 15
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %12, i64 0, i32 14
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 17
  %51 = xor i8 %49, 1
  store i8 %51, i8* %50, align 1
  %52 = load i32, i32* %20, align 8
  switch i32 %52, label %82 [
    i32 8, label %53
    i32 11, label %56
    i32 6, label %59
  ]

53:                                               ; preds = %45
  %54 = tail call %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %3) #7
  %55 = tail call zeroext i1 @_ZN3viz16OverlayCandidate15FromTextureQuadEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_15TextureDrawQuadERKNS5_5RectFEPS0_(%"class.viz::DisplayResourceProvider"* %0, %"class.std::__1::vector.46"* %1, %"class.viz::TextureDrawQuad"* %54, %"class.gfx::RectF"* dereferenceable(16) %4, %"class.viz::OverlayCandidate"* %5)
  br label %82

56:                                               ; preds = %45
  %57 = tail call %"class.viz::VideoHoleDrawQuad"* @_ZN3viz17VideoHoleDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %3) #7
  %58 = tail call zeroext i1 @_ZN3viz16OverlayCandidate17FromVideoHoleQuadEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_17VideoHoleDrawQuadEPS0_(%"class.viz::DisplayResourceProvider"* undef, %"class.std::__1::vector.46"* %1, %"class.viz::VideoHoleDrawQuad"* %57, %"class.viz::OverlayCandidate"* %5)
  br label %82

59:                                               ; preds = %45
  %60 = tail call %"class.viz::StreamVideoDrawQuad"* @_ZN3viz19StreamVideoDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %3) #7
  %61 = bitcast %"class.viz::StreamVideoDrawQuad"* %60 to %"class.viz::DrawQuad"*
  %62 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %60, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = tail call zeroext i1 @_ZN3viz16OverlayCandidate20FromDrawQuadResourceEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_8DrawQuadEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEEbPS0_(%"class.viz::DisplayResourceProvider"* %0, %"class.std::__1::vector.46"* %1, %"class.viz::DrawQuad"* %61, i32 %63, i1 zeroext false, %"class.viz::OverlayCandidate"* %5) #7
  br i1 %64, label %65, label %82

65:                                               ; preds = %59
  %66 = load i32, i32* %62, align 4
  %67 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 9, i32 0, i32 0
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %60, i64 0, i32 3, i32 0
  %69 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 3
  %70 = bitcast %"class.gfx::Size"* %68 to i64*
  %71 = bitcast %"class.gfx::Size"* %69 to i64*
  %72 = load i64, i64* %70, align 4
  store i64 %72, i64* %71, align 4
  %73 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %60, i64 0, i32 1
  %74 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %60, i64 0, i32 2
  %75 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* dereferenceable(8) %73, %"class.gfx::PointF"* dereferenceable(8) %74) #7
  %76 = extractvalue { <2 x float>, <2 x float> } %75, 0
  %77 = extractvalue { <2 x float>, <2 x float> } %75, 1
  %78 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 5
  %79 = bitcast %"class.gfx::RectF"* %78 to <2 x float>*
  store <2 x float> %76, <2 x float>* %79, align 4
  %80 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 5, i32 1
  %81 = bitcast %"class.gfx::SizeF"* %80 to <2 x float>*
  store <2 x float> %77, <2 x float>* %81, align 4
  br label %82

82:                                               ; preds = %65, %59, %53, %56, %10, %16, %45, %6
  %83 = phi i1 [ false, %6 ], [ %58, %56 ], [ %55, %53 ], [ false, %10 ], [ false, %16 ], [ false, %45 ], [ true, %65 ], [ false, %59 ]
  ret i1 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate15RequiresOverlayEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %15 [
    i32 8, label %4
    i32 11, label %16
    i32 10, label %10
  ]

4:                                                ; preds = %1
  %5 = tail call %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %0) #7
  %6 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %5, i64 0, i32 5
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 96
  %9 = icmp eq i8 %8, 64
  br label %16

10:                                               ; preds = %1
  %11 = tail call %"class.viz::YUVVideoDrawQuad"* @_ZN3viz16YUVVideoDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %0) #7
  %12 = getelementptr inbounds %"class.viz::YUVVideoDrawQuad", %"class.viz::YUVVideoDrawQuad"* %11, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br label %16

15:                                               ; preds = %1
  br label %16

16:                                               ; preds = %1, %15, %10, %4
  %17 = phi i1 [ false, %15 ], [ %14, %10 ], [ %9, %4 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate15FromTextureQuadEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_15TextureDrawQuadERKNS5_5RectFEPS0_(%"class.viz::DisplayResourceProvider"*, %"class.std::__1::vector.46"* nocapture readonly, %"class.viz::TextureDrawQuad"*, %"class.gfx::RectF"* dereferenceable(16), %"class.viz::OverlayCandidate"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 5
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %63

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %63 [
    i32 0, label %33
    i32 -16777216, label %13
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 0, i32 4
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %63

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 0, i32 6
  %19 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %18, align 8
  %20 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %19, i64 0, i32 7
  %21 = load float, float* %20, align 8
  %22 = fcmp olt float %21, 1.000000e+00
  br i1 %22, label %63, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %19, i64 0, i32 8
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %63

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %19, i64 0, i32 3, i32 0
  %29 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %28) #7
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %63

31:                                               ; preds = %27
  %32 = load i8, i8* %6, align 8
  br label %33

33:                                               ; preds = %31, %10
  %34 = phi i8 [ %32, %31 ], [ %7, %10 ]
  %35 = bitcast %"class.viz::TextureDrawQuad"* %2 to %"class.viz::DrawQuad"*
  %36 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = and i8 %34, 1
  %39 = icmp ne i8 %38, 0
  %40 = tail call zeroext i1 @_ZN3viz16OverlayCandidate20FromDrawQuadResourceEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_8DrawQuadEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEEbPS0_(%"class.viz::DisplayResourceProvider"* %0, %"class.std::__1::vector.46"* %1, %"class.viz::DrawQuad"* %35, i32 %37, i1 zeroext %39, %"class.viz::OverlayCandidate"* %4)
  br i1 %40, label %41, label %63

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 7, i32 0
  %43 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %4, i64 0, i32 3
  %44 = bitcast %"class.gfx::Size"* %42 to i64*
  %45 = bitcast %"class.gfx::Size"* %43 to i64*
  %46 = load i64, i64* %44, align 4
  store i64 %46, i64* %45, align 4
  %47 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 1
  %48 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 2
  %49 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* dereferenceable(8) %47, %"class.gfx::PointF"* dereferenceable(8) %48) #7
  %50 = extractvalue { <2 x float>, <2 x float> } %49, 0
  %51 = extractvalue { <2 x float>, <2 x float> } %49, 1
  %52 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %4, i64 0, i32 5
  %53 = bitcast %"class.gfx::RectF"* %52 to <2 x float>*
  store <2 x float> %50, <2 x float>* %53, align 4
  %54 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %4, i64 0, i32 5, i32 1
  %55 = bitcast %"class.gfx::SizeF"* %54 to <2 x float>*
  store <2 x float> %51, <2 x float>* %55, align 4
  %56 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %4, i64 0, i32 16
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %41
  tail call void @_ZN3viz16OverlayCandidate24HandleClipAndSubsamplingEPS0_RKN3gfx5RectFE(%"class.viz::OverlayCandidate"* %4, %"class.gfx::RectF"* dereferenceable(16) %3)
  %60 = getelementptr inbounds %"class.viz::TextureDrawQuad", %"class.viz::TextureDrawQuad"* %2, i64 0, i32 6
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %4, i64 0, i32 18
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %27, %13, %17, %23, %59, %41, %33, %10, %5
  %64 = phi i1 [ false, %5 ], [ false, %10 ], [ false, %27 ], [ false, %33 ], [ true, %41 ], [ true, %59 ], [ false, %23 ], [ false, %17 ], [ false, %13 ]
  ret i1 %64
}

declare %"class.viz::TextureDrawQuad"* @_ZN3viz15TextureDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate17FromVideoHoleQuadEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_17VideoHoleDrawQuadEPS0_(%"class.viz::DisplayResourceProvider"* nocapture readnone, %"class.std::__1::vector.46"* nocapture readonly, %"class.viz::VideoHoleDrawQuad"* nocapture readonly, %"class.viz::OverlayCandidate"*) local_unnamed_addr #0 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast %"class.viz::VideoHoleDrawQuad"* %2 to %"class.viz::DrawQuad"*
  %7 = getelementptr inbounds %"class.viz::VideoHoleDrawQuad", %"class.viz::VideoHoleDrawQuad"* %2, i64 0, i32 0, i32 6
  %8 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %7, align 8
  %9 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %8, i64 0, i32 0
  %10 = tail call fastcc i32 @_ZN3viz12_GLOBAL__N_119GetOverlayTransformERKN3gfx9TransformEb(%"class.gfx::Transform"* dereferenceable(68) %9, i1 zeroext false)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %68, label %12

12:                                               ; preds = %4
  %13 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %7, align 8
  %14 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.viz::VideoHoleDrawQuad", %"class.viz::VideoHoleDrawQuad"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %"class.viz::VideoHoleDrawQuad", %"class.viz::VideoHoleDrawQuad"* %2, i64 0, i32 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %"class.viz::VideoHoleDrawQuad", %"class.viz::VideoHoleDrawQuad"* %2, i64 0, i32 0, i32 2, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.viz::VideoHoleDrawQuad", %"class.viz::VideoHoleDrawQuad"* %2, i64 0, i32 0, i32 2, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %22, 0
  %26 = select i1 %25, i32 %22, i32 0
  %27 = sitofp i32 %26 to float
  %28 = icmp sgt i32 %24, 0
  %29 = select i1 %28, i32 %24, i32 0
  %30 = sitofp i32 %29 to float
  %31 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 4
  %32 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 4, i32 0, i32 0
  store float %17, float* %32, align 4
  %33 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 4, i32 0, i32 1
  store float %20, float* %33, align 4
  %34 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 4, i32 1, i32 0
  store float %27, float* %34, align 4
  %35 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 4, i32 1, i32 1
  store float %30, float* %35, align 4
  tail call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %14, %"class.gfx::RectF"* %31) #7
  %36 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 0
  store i32 %10, i32* %36, align 4
  %37 = getelementptr inbounds %"class.viz::VideoHoleDrawQuad", %"class.viz::VideoHoleDrawQuad"* %2, i64 0, i32 0, i32 4
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %50

40:                                               ; preds = %12
  %41 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %7, align 8
  %42 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %41, i64 0, i32 7
  %43 = load float, float* %42, align 8
  %44 = fcmp olt float %43, 1.000000e+00
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %41, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 3
  %49 = zext i1 %48 to i8
  br label %50

50:                                               ; preds = %12, %40, %45
  %51 = phi i8 [ 0, %40 ], [ 0, %12 ], [ %49, %45 ]
  %52 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 7
  store i8 %51, i8* %52, align 4
  %53 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %7, align 8
  %54 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %53, i64 0, i32 3, i32 0
  %55 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %54) #7
  %56 = icmp ne i32 %55, 0
  %57 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 8
  %58 = zext i1 %56 to i8
  store i8 %58, i8* %57, align 1
  %59 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #7
  %60 = tail call fastcc { i64, i64 } @_ZN3viz12_GLOBAL__N_113GetDamageRectEPKNS_8DrawQuadEPNSt3__16vectorIN3gfx4RectENS4_9allocatorIS7_EEEE(%"class.viz::DrawQuad"* %6, %"class.std::__1::vector.46"* %1)
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %62 = extractvalue { i64, i64 } %60, 0
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %64 = extractvalue { i64, i64 } %60, 1
  store i64 %64, i64* %63, align 8
  %65 = bitcast i64* %63 to %"class.gfx::Size"*
  %66 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %65) #7
  %67 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 14
  store i32 %66, i32* %67, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #7
  br label %68

68:                                               ; preds = %4, %50
  %69 = phi i1 [ true, %50 ], [ false, %4 ]
  ret i1 %69
}

declare %"class.viz::VideoHoleDrawQuad"* @_ZN3viz17VideoHoleDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate19FromStreamVideoQuadEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_19StreamVideoDrawQuadEPS0_(%"class.viz::DisplayResourceProvider"*, %"class.std::__1::vector.46"* nocapture readonly, %"class.viz::StreamVideoDrawQuad"*, %"class.viz::OverlayCandidate"*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.viz::StreamVideoDrawQuad"* %2 to %"class.viz::DrawQuad"*
  %6 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %2, i64 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = tail call zeroext i1 @_ZN3viz16OverlayCandidate20FromDrawQuadResourceEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_8DrawQuadEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEEbPS0_(%"class.viz::DisplayResourceProvider"* %0, %"class.std::__1::vector.46"* %1, %"class.viz::DrawQuad"* %5, i32 %7, i1 zeroext false, %"class.viz::OverlayCandidate"* %3)
  br i1 %8, label %9, label %26

9:                                                ; preds = %4
  %10 = load i32, i32* %6, align 4
  %11 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 9, i32 0, i32 0
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %2, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 3
  %14 = bitcast %"class.gfx::Size"* %12 to i64*
  %15 = bitcast %"class.gfx::Size"* %13 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 4
  %17 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %2, i64 0, i32 1
  %18 = getelementptr inbounds %"class.viz::StreamVideoDrawQuad", %"class.viz::StreamVideoDrawQuad"* %2, i64 0, i32 2
  %19 = tail call { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* dereferenceable(8) %17, %"class.gfx::PointF"* dereferenceable(8) %18) #7
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  %22 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 5
  %23 = bitcast %"class.gfx::RectF"* %22 to <2 x float>*
  store <2 x float> %20, <2 x float>* %23, align 4
  %24 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %3, i64 0, i32 5, i32 1
  %25 = bitcast %"class.gfx::SizeF"* %24 to <2 x float>*
  store <2 x float> %21, <2 x float>* %25, align 4
  br label %26

26:                                               ; preds = %4, %9
  %27 = phi i1 [ true, %9 ], [ false, %4 ]
  ret i1 %27
}

declare %"class.viz::StreamVideoDrawQuad"* @_ZN3viz19StreamVideoDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate15IsInvisibleQuadEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 6
  %3 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %2, align 8
  %4 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %3, i64 0, i32 7
  %5 = load float, float* %4, align 8
  %6 = tail call float @llvm.fabs.f32(float %5) #7
  %7 = fcmp olt float %6, 0x3E80000000000000
  br i1 %7, label %39, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 5
  br i1 %11, label %12, label %39

12:                                               ; preds = %8
  %13 = tail call %"class.viz::SolidColorDrawQuad"* @_ZN3viz18SolidColorDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %0) #7
  %14 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %13, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 4
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %32

19:                                               ; preds = %12
  %20 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %2, align 8
  %21 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %20, i64 0, i32 7
  %22 = load float, float* %21, align 8
  %23 = fcmp olt float %22, 1.000000e+00
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %20, i64 0, i32 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 3
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %20, i64 0, i32 3, i32 0
  %30 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %29) #7
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %28, %12, %19, %24
  %33 = lshr i32 %15, 24
  %34 = uitofp i32 %33 to float
  %35 = fmul float %34, 0x3F70101020000000
  %36 = fmul float %5, %35
  %37 = tail call float @llvm.fabs.f32(float %36) #7
  %38 = fcmp olt float %37, 0x3E80000000000000
  br label %39

39:                                               ; preds = %28, %32, %8, %1
  %40 = phi i1 [ true, %1 ], [ false, %8 ], [ false, %28 ], [ %38, %32 ]
  ret i1 %40
}

declare %"class.viz::SolidColorDrawQuad"* @_ZN3viz18SolidColorDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate10IsOccludedERKS0_N2cc13ListContainerINS_8DrawQuadEE13ConstIteratorES7_(%"class.viz::OverlayCandidate"* dereferenceable(188), %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"*, %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.gfx::Rect"*
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %"class.gfx::RectF"*
  %12 = alloca %"class.gfx::RectF", align 4
  %13 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %15 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 4
  %16 = tail call { i64, i64 } @_ZN3gfx13ToRoundedRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %15) #7
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = extractvalue { i64, i64 } %16, 1
  store i64 %19, i64* %14, align 8
  %20 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %7, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %7, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %1, i64 0, i32 0, i32 0
  %24 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %23) #7
  %25 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %1, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %21, align 8
  %27 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %2, i64 0, i32 0, i32 0
  %28 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %27) #7
  br i1 %28, label %29, label %117

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %7, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast { i64, i64 }* %8 to i8*
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %33 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  %34 = bitcast i8** %30 to %"class.viz::DrawQuad"**
  %35 = bitcast %"class.gfx::RectF"* %12 to i8*
  %36 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %12, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %12, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %12, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %12, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %43 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %4 to i8*
  %44 = bitcast { i64, i64 }* %8 to i8*
  br label %45

45:                                               ; preds = %29, %113
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7
  %46 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %34, align 8
  %47 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %46, i64 0, i32 6
  %48 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %47, align 8
  %49 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %48, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #7
  %50 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %46, i64 0, i32 2, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to float
  %53 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %46, i64 0, i32 2, i32 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  %56 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %46, i64 0, i32 2, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %46, i64 0, i32 2, i32 1, i32 1
  %59 = load i32, i32* %58, align 4
  store float %52, float* %36, align 4
  store float %55, float* %37, align 4
  %60 = icmp sgt i32 %57, 0
  %61 = select i1 %60, i32 %57, i32 0
  %62 = sitofp i32 %61 to float
  store float %62, float* %38, align 4
  %63 = icmp sgt i32 %59, 0
  %64 = select i1 %63, i32 %59, i32 0
  %65 = sitofp i32 %64 to float
  store float %65, float* %39, align 4
  %66 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68) %49, %"class.gfx::RectF"* nonnull dereferenceable(16) %12) #7
  %67 = extractvalue { <2 x float>, <2 x float> } %66, 0
  store <2 x float> %67, <2 x float>* %40, align 8
  %68 = extractvalue { <2 x float>, <2 x float> } %66, 1
  store <2 x float> %68, <2 x float>* %41, align 8
  %69 = call { i64, i64 } @_ZN3gfx13ToRoundedRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %11) #7
  %70 = extractvalue { i64, i64 } %69, 0
  store i64 %70, i64* %42, align 8
  %71 = extractvalue { i64, i64 } %69, 1
  store i64 %71, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7
  %72 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %34, align 8
  %73 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %72, i64 0, i32 6
  %74 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %73, align 8
  %75 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %74, i64 0, i32 7
  %76 = load float, float* %75, align 8
  %77 = call float @llvm.fabs.f32(float %76) #7
  %78 = fcmp olt float %77, 0x3E80000000000000
  br i1 %78, label %113, label %79

79:                                               ; preds = %45
  %80 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %72, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 5
  br i1 %82, label %83, label %110

83:                                               ; preds = %79
  %84 = call %"class.viz::SolidColorDrawQuad"* @_ZN3viz18SolidColorDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %72) #7
  %85 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %72, i64 0, i32 4
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %103

90:                                               ; preds = %83
  %91 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %73, align 8
  %92 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %91, i64 0, i32 7
  %93 = load float, float* %92, align 8
  %94 = fcmp olt float %93, 1.000000e+00
  br i1 %94, label %103, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %91, i64 0, i32 8
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 3
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %91, i64 0, i32 3, i32 0
  %101 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %100) #7
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %83, %90, %95, %99
  %104 = lshr i32 %86, 24
  %105 = uitofp i32 %104 to float
  %106 = fmul float %105, 0x3F70101020000000
  %107 = fmul float %76, %106
  %108 = call float @llvm.fabs.f32(float %107) #7
  %109 = fcmp olt float %108, 0x3E80000000000000
  br i1 %109, label %113, label %110

110:                                              ; preds = %99, %79, %103
  %111 = call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #7
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  br label %117

113:                                              ; preds = %45, %103, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #7
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %4, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #7
  %114 = load i64, i64* %21, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %21, align 8
  %116 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %27) #7
  br i1 %116, label %45, label %117

117:                                              ; preds = %113, %3, %112
  %118 = phi i1 [ true, %112 ], [ false, %3 ], [ false, %113 ]
  %119 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %7, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %119) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  ret i1 %118
}

declare { i64, i64 } @_ZN3gfx13ToRoundedRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3viz16OverlayCandidate21EstimateVisibleDamageEPKNS_8DrawQuadEPNSt3__16vectorIN3gfx4RectENS4_9allocatorIS7_EEEEN2cc13ListContainerIS1_E13ConstIteratorESF_(%"class.viz::DrawQuad"* nocapture readonly, %"class.std::__1::vector.46"* nocapture readonly, %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"*, %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.gfx::RectF"*
  %13 = alloca %"class.gfx::RectF", align 4
  %14 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %16 = tail call fastcc { i64, i64 } @_ZN3viz12_GLOBAL__N_113GetDamageRectEPKNS_8DrawQuadEPNSt3__16vectorIN3gfx4RectENS4_9allocatorIS7_EEEE(%"class.viz::DrawQuad"* %0, %"class.std::__1::vector.46"* %1)
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = extractvalue { i64, i64 } %16, 1
  store i64 %19, i64* %15, align 8
  %20 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %2, i64 0, i32 0, i32 0
  %24 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 32, i1 false)
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %23) #7
  %25 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %2, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %21, align 8
  %27 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %3, i64 0, i32 0, i32 0
  %28 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %27) #7
  br i1 %28, label %29, label %46

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast { i64, i64 }* %9 to i8*
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %33 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  %34 = bitcast i8** %30 to %"class.viz::DrawQuad"**
  %35 = bitcast %"class.gfx::RectF"* %13 to i8*
  %36 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %43 = bitcast i64* %32 to %"class.gfx::Size"*
  %44 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %5 to i8*
  %45 = bitcast { i64, i64 }* %9 to i8*
  br label %54

46:                                               ; preds = %142, %4
  %47 = phi i32 [ 0, %4 ], [ %143, %142 ]
  %48 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %48) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #7
  %49 = bitcast i64* %15 to %"class.gfx::Size"*
  %50 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %49) #7
  %51 = sub nsw i32 %50, %47
  %52 = icmp sgt i32 %51, 0
  %53 = select i1 %52, i32 %51, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  ret i32 %53

54:                                               ; preds = %29, %142
  %55 = phi i32 [ 0, %29 ], [ %143, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #7
  %56 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %34, align 8
  %57 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %56, i64 0, i32 6
  %58 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %57, align 8
  %59 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %58, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #7
  %60 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %56, i64 0, i32 2, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to float
  %63 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %56, i64 0, i32 2, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = sitofp i32 %64 to float
  %66 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %56, i64 0, i32 2, i32 1, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %56, i64 0, i32 2, i32 1, i32 1
  %69 = load i32, i32* %68, align 4
  store float %62, float* %36, align 4
  store float %65, float* %37, align 4
  %70 = icmp sgt i32 %67, 0
  %71 = select i1 %70, i32 %67, i32 0
  %72 = sitofp i32 %71 to float
  store float %72, float* %38, align 4
  %73 = icmp sgt i32 %69, 0
  %74 = select i1 %73, i32 %69, i32 0
  %75 = sitofp i32 %74 to float
  store float %75, float* %39, align 4
  %76 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68) %59, %"class.gfx::RectF"* nonnull dereferenceable(16) %13) #7
  %77 = extractvalue { <2 x float>, <2 x float> } %76, 0
  store <2 x float> %77, <2 x float>* %40, align 8
  %78 = extractvalue { <2 x float>, <2 x float> } %76, 1
  store <2 x float> %78, <2 x float>* %41, align 8
  %79 = call { i64, i64 } @_ZN3gfx13ToRoundedRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %12) #7
  %80 = extractvalue { i64, i64 } %79, 0
  store i64 %80, i64* %42, align 8
  %81 = extractvalue { i64, i64 } %79, 1
  store i64 %81, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #7
  %82 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %34, align 8
  %83 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %82, i64 0, i32 6
  %84 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %83, align 8
  %85 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %84, i64 0, i32 7
  %86 = load float, float* %85, align 8
  %87 = call float @llvm.fabs.f32(float %86) #7
  %88 = fcmp olt float %87, 0x3E80000000000000
  br i1 %88, label %142, label %89

89:                                               ; preds = %54
  %90 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %82, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %91, 5
  br i1 %92, label %93, label %120

93:                                               ; preds = %89
  %94 = call %"class.viz::SolidColorDrawQuad"* @_ZN3viz18SolidColorDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %82) #7
  %95 = getelementptr inbounds %"class.viz::SolidColorDrawQuad", %"class.viz::SolidColorDrawQuad"* %94, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %82, i64 0, i32 4
  %98 = load i8, i8* %97, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %113

100:                                              ; preds = %93
  %101 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %83, align 8
  %102 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 7
  %103 = load float, float* %102, align 8
  %104 = fcmp olt float %103, 1.000000e+00
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 8
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 3
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %101, i64 0, i32 3, i32 0
  %111 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %110) #7
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %93, %100, %105, %109
  %114 = lshr i32 %96, 24
  %115 = uitofp i32 %114 to float
  %116 = fmul float %115, 0x3F70101020000000
  %117 = fmul float %86, %116
  %118 = call float @llvm.fabs.f32(float %117) #7
  %119 = fcmp olt float %118, 0x3E80000000000000
  br i1 %119, label %142, label %120

120:                                              ; preds = %109, %89, %113
  %121 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %34, align 8
  %122 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %121, i64 0, i32 4
  %123 = load i8, i8* %122, align 4, !range !2
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %142

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %121, i64 0, i32 6
  %127 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %126, align 8
  %128 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %127, i64 0, i32 7
  %129 = load float, float* %128, align 8
  %130 = fcmp olt float %129, 1.000000e+00
  br i1 %130, label %142, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %127, i64 0, i32 8
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, 3
  br i1 %134, label %135, label %142

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %127, i64 0, i32 3, i32 0
  %137 = call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %136) #7
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %135
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #7
  %140 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %43) #7
  %141 = add nsw i32 %140, %55
  br label %142

142:                                              ; preds = %135, %120, %125, %131, %54, %139, %113
  %143 = phi i32 [ %55, %113 ], [ %55, %135 ], [ %141, %139 ], [ %55, %54 ], [ %55, %131 ], [ %55, %125 ], [ %55, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #7
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %5, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #7
  %144 = load i64, i64* %21, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %21, align 8
  %146 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %22, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %27) #7
  br i1 %146, label %54, label %46
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN3viz12_GLOBAL__N_113GetDamageRectEPKNS_8DrawQuadEPNSt3__16vectorIN3gfx4RectENS4_9allocatorIS7_EEEE(%"class.viz::DrawQuad"* nocapture readonly, %"class.std::__1::vector.46"* nocapture readonly) unnamed_addr #0 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 6
  %8 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %7, align 8
  %9 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %8, i64 0, i32 0
  %10 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %15 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  %18 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 2, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %0, i64 0, i32 2, i32 1, i32 1
  %24 = load i32, i32* %23, align 4
  store float %17, float* %11, align 4
  store float %20, float* %12, align 4
  %25 = icmp sgt i32 %22, 0
  %26 = select i1 %25, i32 %22, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %13, align 4
  %28 = icmp sgt i32 %24, 0
  %29 = select i1 %28, i32 %24, i32 0
  %30 = sitofp i32 %29 to float
  store float %30, float* %14, align 4
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %9, %"class.gfx::RectF"* nonnull %5) #7
  %31 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %8, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %52

34:                                               ; preds = %2
  %35 = call { i64, i64 } @_ZN3gfx13ToRoundedRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #7
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #7
  %39 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 0, i32 0
  %40 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %40, i8 0, i64 16, i1 false)
  %41 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 0, i32 1
  %43 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %42, align 8
  %44 = icmp eq %"class.gfx::Rect"* %41, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %48, %34
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %36, i64* %47, align 8
  store i64 %37, i64* %46, align 8
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #7
  br label %70

48:                                               ; preds = %34, %48
  %49 = phi %"class.gfx::Rect"* [ %50, %48 ], [ %41, %34 ]
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* dereferenceable(16) %49) #7
  %50 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %49, i64 1
  %51 = icmp eq %"class.gfx::Rect"* %50, %43
  br i1 %51, label %45, label %48

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %8, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.46", %"class.std::__1::vector.46"* %1, i64 0, i32 0, i32 1
  %56 = bitcast %"class.gfx::Rect"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.46"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %54, %61
  br i1 %62, label %65, label %63

63:                                               ; preds = %52
  %64 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false)
  br label %70

65:                                               ; preds = %52
  %66 = inttoptr i64 %59 to %"class.gfx::Rect"*
  %67 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %66, i64 %54
  %68 = bitcast { i64, i64 }* %3 to i8*
  %69 = bitcast %"class.gfx::Rect"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 4 %69, i64 16, i1 false)
  br label %70

70:                                               ; preds = %63, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = insertvalue { i64, i64 } undef, i64 %72, 0
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = insertvalue { i64, i64 } %73, i64 %75, 1
  ret { i64, i64 } %76
}

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"*) local_unnamed_addr #2

declare %"class.viz::YUVVideoDrawQuad"* @_ZN3viz16YUVVideoDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate24IsOccludedByFilteredQuadERKS0_N2cc13ListContainerINS_8DrawQuadEE13ConstIteratorES7_RKN4base8flat_mapIN4util6IdTypeINS_20AggregatedRenderPassEmLm0ELm1EEEPNS3_16FilterOperationsENSt3__14lessIvEENSG_6vectorINSG_4pairISD_SF_EENSG_9allocatorISL_EEEEEE(%"class.viz::OverlayCandidate"* dereferenceable(188), %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"*, %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"*, %"class.base::flat_map.58"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %6 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::RectF"*
  %9 = alloca %"class.gfx::RectF", align 4
  %10 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %1, i64 0, i32 0, i32 0
  %14 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %13) #7
  %15 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %1, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %11, align 8
  %17 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %2, i64 0, i32 0, i32 0
  %18 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %17) #7
  br i1 %18, label %19, label %114

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %6, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast i8** %20 to %"class.viz::DrawQuad"**
  %22 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %23 = bitcast %"class.gfx::RectF"* %9 to i8*
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %9, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %30 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.base::flat_map.58", %"class.base::flat_map.58"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.base::flat_map.58", %"class.base::flat_map.58"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair.62"** %32 to i64*
  %34 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %5 to i8*
  %35 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  br label %36

36:                                               ; preds = %19, %110
  %37 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %21, align 8
  %38 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %37, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %41, label %110

41:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #7
  %42 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %37, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -1, i64 16, i1 false)
  %43 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %42, align 8
  %44 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %43, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  %45 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %37, i64 0, i32 2, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  %48 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %37, i64 0, i32 2, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = sitofp i32 %49 to float
  %51 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %37, i64 0, i32 2, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %37, i64 0, i32 2, i32 1, i32 1
  %54 = load i32, i32* %53, align 4
  store float %47, float* %24, align 4
  store float %50, float* %25, align 4
  %55 = icmp sgt i32 %52, 0
  %56 = select i1 %55, i32 %52, i32 0
  %57 = sitofp i32 %56 to float
  store float %57, float* %26, align 4
  %58 = icmp sgt i32 %54, 0
  %59 = select i1 %58, i32 %54, i32 0
  %60 = sitofp i32 %59 to float
  store float %60, float* %27, align 4
  %61 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil14MapClippedRectERKN3gfx9TransformERKNS1_5RectFE(%"class.gfx::Transform"* dereferenceable(68) %44, %"class.gfx::RectF"* nonnull dereferenceable(16) %9) #7
  %62 = extractvalue { <2 x float>, <2 x float> } %61, 0
  store <2 x float> %62, <2 x float>* %28, align 8
  %63 = extractvalue { <2 x float>, <2 x float> } %61, 1
  store <2 x float> %63, <2 x float>* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  %64 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %21, align 8
  %65 = call %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %64) #7
  %66 = call zeroext i1 @_ZNK3gfx5RectF10IntersectsERKS0_(%"class.gfx::RectF"* %30, %"class.gfx::RectF"* nonnull dereferenceable(16) %8) #7
  br i1 %66, label %67, label %108

67:                                               ; preds = %41
  %68 = getelementptr inbounds %"class.viz::AggregatedRenderPassDrawQuad", %"class.viz::AggregatedRenderPassDrawQuad"* %65, i64 0, i32 1
  %69 = load %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"** %31, align 8
  %70 = load i64, i64* %33, align 8
  %71 = ptrtoint %"struct.std::__1::pair.62"* %69 to i64
  %72 = sub i64 %70, %71
  %73 = icmp eq i64 %72, 0
  %74 = inttoptr i64 %70 to %"struct.std::__1::pair.62"*
  br i1 %73, label %95, label %75

75:                                               ; preds = %67
  %76 = ashr exact i64 %72, 4
  %77 = getelementptr inbounds %"class.util::IdType.68", %"class.util::IdType.68"* %68, i64 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %79, %75
  %80 = phi %"struct.std::__1::pair.62"* [ %69, %75 ], [ %91, %79 ]
  %81 = phi i64 [ %76, %75 ], [ %90, %79 ]
  %82 = lshr i64 %81, 1
  %83 = getelementptr inbounds %"struct.std::__1::pair.62", %"struct.std::__1::pair.62"* %80, i64 %82
  %84 = getelementptr inbounds %"struct.std::__1::pair.62", %"struct.std::__1::pair.62"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %78
  %87 = getelementptr inbounds %"struct.std::__1::pair.62", %"struct.std::__1::pair.62"* %83, i64 1
  %88 = xor i64 %82, -1
  %89 = add i64 %81, %88
  %90 = select i1 %86, i64 %89, i64 %82
  %91 = select i1 %86, %"struct.std::__1::pair.62"* %87, %"struct.std::__1::pair.62"* %80
  %92 = icmp eq i64 %90, 0
  br i1 %92, label %93, label %79

93:                                               ; preds = %79
  %94 = ptrtoint %"struct.std::__1::pair.62"* %91 to i64
  br label %95

95:                                               ; preds = %93, %67
  %96 = phi i64 [ %94, %93 ], [ %71, %67 ]
  %97 = phi %"struct.std::__1::pair.62"* [ %91, %93 ], [ %69, %67 ]
  %98 = icmp eq %"struct.std::__1::pair.62"* %97, %74
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.util::IdType.68", %"class.util::IdType.68"* %68, i64 0, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.62", %"struct.std::__1::pair.62"* %97, i64 0, i32 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = icmp ult i64 %101, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %95, %99
  %106 = ptrtoint %"struct.std::__1::pair.62"* %97 to i64
  %107 = icmp eq i64 %96, %106
  br i1 %107, label %108, label %109

108:                                              ; preds = %41, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  br label %110

109:                                              ; preds = %99, %105
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #7
  br label %114

110:                                              ; preds = %108, %36
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #7
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %5, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #7
  %111 = load i64, i64* %11, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %11, align 8
  %113 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %12, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24) %17) #7
  br i1 %113, label %36, label %114

114:                                              ; preds = %110, %4, %109
  %115 = phi i1 [ true, %109 ], [ false, %4 ], [ false, %110 ]
  %116 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %6, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %116) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #7
  ret i1 %115
}

declare %"class.viz::AggregatedRenderPassDrawQuad"* @_ZN3viz28AggregatedRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx5RectF10IntersectsERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz16OverlayCandidate20FromDrawQuadResourceEPNS_23DisplayResourceProviderEPNSt3__16vectorIN3gfx4RectENS3_9allocatorIS6_EEEEPKNS_8DrawQuadEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEEbPS0_(%"class.viz::DisplayResourceProvider"*, %"class.std::__1::vector.46"* nocapture readonly, %"class.viz::DrawQuad"* nocapture readonly, i32, i1 zeroext, %"class.viz::OverlayCandidate"*) local_unnamed_addr #0 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = tail call zeroext i1 @_ZN3viz23DisplayResourceProvider18IsOverlayCandidateEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"* %0, i32 %3) #7
  br i1 %8, label %9, label %93

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 3, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %93, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 3, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %93, label %17

17:                                               ; preds = %13
  %18 = tail call i32 @_ZN3viz23DisplayResourceProvider15GetBufferFormatEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"* %0, i32 %3) #7
  %19 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 1
  store i32 %18, i32* %19, align 4
  %20 = tail call dereferenceable(68) %"class.gfx::ColorSpace"* @_ZN3viz23DisplayResourceProvider13GetColorSpaceEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"* %0, i32 %3) #7
  %21 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %20, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 68, i1 false)
  %23 = load i32, i32* %19, align 4
  switch i32 %23, label %93 [
    i32 14, label %24
    i32 13, label %24
    i32 10, label %24
    i32 7, label %24
    i32 6, label %24
    i32 5, label %24
    i32 3, label %24
  ]

24:                                               ; preds = %17, %17, %17, %17, %17, %17, %17
  %25 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 6
  %26 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %25, align 8
  %27 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %26, i64 0, i32 0
  %28 = tail call fastcc i32 @_ZN3viz12_GLOBAL__N_119GetOverlayTransformERKN3gfx9TransformEb(%"class.gfx::Transform"* dereferenceable(68) %27, i1 zeroext %4)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %93, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 2, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  %34 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 2, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = sitofp i32 %35 to float
  %37 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 2, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 2, i32 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %38, 0
  %42 = select i1 %41, i32 %38, i32 0
  %43 = sitofp i32 %42 to float
  %44 = icmp sgt i32 %40, 0
  %45 = select i1 %44, i32 %40, i32 0
  %46 = sitofp i32 %45 to float
  %47 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 4
  %48 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 4, i32 0, i32 0
  store float %33, float* %48, align 4
  %49 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 4, i32 0, i32 1
  store float %36, float* %49, align 4
  %50 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 4, i32 1, i32 0
  store float %43, float* %50, align 4
  %51 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 4, i32 1, i32 1
  store float %46, float* %51, align 4
  tail call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %27, %"class.gfx::RectF"* %47) #7
  %52 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 20, i1 false)
  %54 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %2, i64 0, i32 4
  %55 = load i8, i8* %54, align 4, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %67

57:                                               ; preds = %30
  %58 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %25, align 8
  %59 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %58, i64 0, i32 7
  %60 = load float, float* %59, align 8
  %61 = fcmp olt float %60, 1.000000e+00
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %58, i64 0, i32 8
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 3
  %66 = zext i1 %65 to i8
  br label %67

67:                                               ; preds = %30, %57, %62
  %68 = phi i8 [ 0, %57 ], [ 0, %30 ], [ %66, %62 ]
  %69 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 7
  store i8 %68, i8* %69, align 4
  %70 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %26, i64 0, i32 3, i32 0
  %71 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %70) #7
  %72 = icmp ne i32 %71, 0
  %73 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 8
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 1
  %75 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #7
  %76 = tail call fastcc { i64, i64 } @_ZN3viz12_GLOBAL__N_113GetDamageRectEPKNS_8DrawQuadEPNSt3__16vectorIN3gfx4RectENS4_9allocatorIS7_EEEE(%"class.viz::DrawQuad"* %2, %"class.std::__1::vector.46"* %1)
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %78 = extractvalue { i64, i64 } %76, 0
  store i64 %78, i64* %77, align 8
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %80 = extractvalue { i64, i64 } %76, 1
  store i64 %80, i64* %79, align 8
  %81 = bitcast i64* %79 to %"class.gfx::Size"*
  %82 = call i32 @_ZNK3gfx4Size7GetAreaEv(%"class.gfx::Size"* %81) #7
  %83 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 14
  store i32 %82, i32* %83, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #7
  %84 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 9, i32 0, i32 0
  store i32 %3, i32* %84, align 4
  %85 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 0
  store i32 %28, i32* %85, align 4
  %86 = call { i64, i64 } @_ZN3viz23DisplayResourceProvider10GetMailboxEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"* %0, i32 %3) #7
  %87 = extractvalue { i64, i64 } %86, 0
  %88 = extractvalue { i64, i64 } %86, 1
  %89 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 10
  %90 = bitcast %"struct.gpu::Mailbox"* %89 to i64*
  store i64 %87, i64* %90, align 4
  %91 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %5, i64 0, i32 10, i32 0, i64 8
  %92 = bitcast i8* %91 to i64*
  store i64 %88, i64* %92, align 4
  br label %93

93:                                               ; preds = %17, %9, %67, %24, %13, %6
  %94 = phi i1 [ false, %6 ], [ false, %13 ], [ true, %67 ], [ false, %24 ], [ false, %9 ], [ false, %17 ]
  ret i1 %94
}

declare zeroext i1 @_ZN3viz23DisplayResourceProvider18IsOverlayCandidateEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #2

declare i32 @_ZN3viz23DisplayResourceProvider15GetBufferFormatEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #2

declare dereferenceable(68) %"class.gfx::ColorSpace"* @_ZN3viz23DisplayResourceProvider13GetColorSpaceEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3viz12_GLOBAL__N_119GetOverlayTransformERKN3gfx9TransformEb(%"class.gfx::Transform"* dereferenceable(68), i1 zeroext) unnamed_addr #0 {
  %3 = alloca %"class.gfx::Vector3dF", align 8
  %4 = tail call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* %0) #7
  br i1 %4, label %5, label %82

5:                                                ; preds = %2
  %6 = tail call { <2 x float>, float } @_ZN2cc8MathUtil8GetXAxisERKN3gfx9TransformE(%"class.gfx::Transform"* dereferenceable(68) %0) #7
  %7 = extractvalue { <2 x float>, float } %6, 0
  %8 = extractvalue { <2 x float>, float } %6, 1
  %9 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  %13 = tail call { <2 x float>, float } @_ZN2cc8MathUtil8GetYAxisERKN3gfx9TransformE(%"class.gfx::Transform"* dereferenceable(68) %0) #7
  %14 = extractvalue { <2 x float>, float } %13, 0
  %15 = extractvalue { <2 x float>, float } %13, 1
  %16 = bitcast %"class.gfx::Vector3dF"* %3 to <2 x float>*
  store <2 x float> %14, <2 x float>* %16, align 8
  store float %15, float* %12, align 8
  br i1 %1, label %17, label %18

17:                                               ; preds = %5
  call void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"* nonnull %3, float -1.000000e+00, float -1.000000e+00, float -1.000000e+00) #7
  br label %18

18:                                               ; preds = %17, %5
  %19 = call float @llvm.fabs.f32(float %8) #7
  %20 = fcmp olt float %19, 0x3E80000000000000
  br i1 %20, label %21, label %39

21:                                               ; preds = %18
  %22 = extractelement <2 x float> %7, i32 0
  %23 = call float @llvm.fabs.f32(float %22) #7
  %24 = fcmp olt float %23, 0x3E80000000000000
  %25 = extractelement <2 x float> %7, i32 1
  %26 = call float @llvm.fabs.f32(float %25) #7
  %27 = fcmp olt float %26, 0x3E80000000000000
  %28 = xor i1 %24, true
  %29 = or i1 %27, %28
  br i1 %29, label %33, label %30

30:                                               ; preds = %21
  %31 = fcmp ogt float %25, 0.000000e+00
  %32 = select i1 %31, i32 3, i32 4
  br label %39

33:                                               ; preds = %21
  %34 = xor i1 %27, true
  %35 = or i1 %24, %34
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = fcmp ogt float %22, 0.000000e+00
  %38 = select i1 %37, i32 1, i32 2
  br label %39

39:                                               ; preds = %18, %30, %33, %36
  %40 = phi i32 [ 0, %18 ], [ %38, %36 ], [ %32, %30 ], [ 0, %33 ]
  %41 = load float, float* %12, align 8
  %42 = call float @llvm.fabs.f32(float %41) #7
  %43 = fcmp olt float %42, 0x3E80000000000000
  br i1 %43, label %44, label %74

44:                                               ; preds = %39
  %45 = load float, float* %10, align 8
  %46 = call float @llvm.fabs.f32(float %45) #7
  %47 = fcmp olt float %46, 0x3E80000000000000
  %48 = load float, float* %11, align 4
  %49 = call float @llvm.fabs.f32(float %48) #7
  %50 = fcmp olt float %49, 0x3E80000000000000
  %51 = xor i1 %47, true
  %52 = or i1 %50, %51
  br i1 %52, label %53, label %56

53:                                               ; preds = %44
  %54 = xor i1 %50, true
  %55 = or i1 %47, %54
  br i1 %55, label %74, label %67

56:                                               ; preds = %44
  %57 = fcmp ogt float %48, 0.000000e+00
  %58 = select i1 %57, i32 3, i32 4
  %59 = icmp eq i32 %40, 1
  %60 = and i1 %59, %57
  br i1 %60, label %80, label %61

61:                                               ; preds = %56
  %62 = icmp eq i32 %40, 2
  %63 = and i1 %62, %57
  br i1 %63, label %80, label %64

64:                                               ; preds = %61
  %65 = xor i1 %57, true
  %66 = and i1 %59, %65
  br i1 %66, label %80, label %72

67:                                               ; preds = %53
  %68 = fcmp ogt float %45, 0.000000e+00
  %69 = select i1 %68, i32 1, i32 2
  %70 = icmp eq i32 %40, 4
  %71 = and i1 %70, %68
  br i1 %71, label %80, label %74

72:                                               ; preds = %64
  %73 = and i1 %62, %65
  br i1 %73, label %80, label %74

74:                                               ; preds = %39, %53, %67, %72
  %75 = phi i32 [ %58, %72 ], [ %69, %67 ], [ 0, %53 ], [ 0, %39 ]
  %76 = icmp eq i32 %40, 3
  %77 = icmp eq i32 %75, 2
  %78 = and i1 %76, %77
  %79 = select i1 %78, i32 4, i32 0
  br label %80

80:                                               ; preds = %74, %72, %67, %64, %61, %56
  %81 = phi i32 [ 1, %56 ], [ 2, %61 ], [ 3, %64 ], [ 6, %67 ], [ 5, %72 ], [ %79, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %9) #7
  br label %82

82:                                               ; preds = %2, %80
  %83 = phi i32 [ %81, %80 ], [ 0, %2 ]
  ret i32 %83
}

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN3viz23DisplayResourceProvider10GetMailboxEN4util6IdTypeINS_20ResourceIdTypeMarkerEjLj0ELj1EEE(%"class.viz::DisplayResourceProvider"*, i32) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN3gfx12BoundingRectERKNS_6PointFES2_(%"class.gfx::PointF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz16OverlayCandidate24HandleClipAndSubsamplingEPS0_RKN3gfx5RectFE(%"class.viz::OverlayCandidate"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::RectF"*
  %7 = alloca %"class.gfx::RectF", align 4
  %8 = alloca %"class.gfx::RectF", align 4
  %9 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %153, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -13
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %17, label %153

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 0
  %19 = load float, float* %18, align 4
  %20 = fcmp une float %19, 0.000000e+00
  br i1 %20, label %21, label %35

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %23, 0.000000e+00
  br i1 %24, label %35, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %27 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #7
  %28 = tail call { i64, i64 } @_ZN3gfx13ToNearestRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #7
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %30 = extractvalue { i64, i64 } %28, 0
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %32 = extractvalue { i64, i64 } %28, 1
  store i64 %32, i64* %31, align 8
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* %26, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #7
  %33 = load i8, i8* %9, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  br label %35

35:                                               ; preds = %17, %25, %21
  %36 = phi i1 [ false, %17 ], [ %34, %25 ], [ false, %21 ]
  %37 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #7
  %38 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5
  %39 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 4
  %40 = bitcast %"class.gfx::RectF"* %7 to i8*
  %41 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #7
  br i1 %36, label %42, label %43, !prof !3

42:                                               ; preds = %35
  call void @llvm.trap() #7
  unreachable

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sitofp i32 %45 to float
  %47 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 0
  store float %46, float* %54, align 4
  %55 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 0, i32 1
  store float %49, float* %55, align 4
  %56 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 0
  %57 = icmp sgt i32 %51, 0
  %58 = select i1 %57, i32 %51, i32 0
  %59 = sitofp i32 %58 to float
  store float %59, float* %56, align 4
  %60 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %7, i64 0, i32 1, i32 1
  %61 = icmp sgt i32 %53, 0
  %62 = select i1 %61, i32 %53, i32 0
  %63 = sitofp i32 %62 to float
  store float %63, float* %60, align 4
  %64 = call { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* dereferenceable(16) %38, %"class.gfx::RectF"* dereferenceable(16) %39, %"class.gfx::RectF"* nonnull dereferenceable(16) %7) #7
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %66 = extractvalue { <2 x float>, <2 x float> } %64, 0
  store <2 x float> %66, <2 x float>* %65, align 8
  %67 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %68 = extractvalue { <2 x float>, <2 x float> } %64, 1
  store <2 x float> %68, <2 x float>* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #7
  call void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* %38, %"class.gfx::RectF"* nonnull dereferenceable(16) %6) #7
  %69 = bitcast %"class.gfx::RectF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #7
  %70 = load i8, i8* %9, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %43
  call void @llvm.trap() #7
  unreachable

73:                                               ; preds = %43
  %74 = load i32, i32* %44, align 4
  %75 = sitofp i32 %74 to float
  %76 = load i32, i32* %47, align 4
  %77 = sitofp i32 %76 to float
  %78 = load i32, i32* %50, align 4
  %79 = load i32, i32* %52, align 4
  %80 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 0
  store float %75, float* %80, align 4
  %81 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 0, i32 1
  store float %77, float* %81, align 4
  %82 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 0
  %83 = icmp sgt i32 %78, 0
  %84 = select i1 %83, i32 %78, i32 0
  %85 = sitofp i32 %84 to float
  store float %85, float* %82, align 4
  %86 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %8, i64 0, i32 1, i32 1
  %87 = icmp sgt i32 %79, 0
  %88 = select i1 %87, i32 %79, i32 0
  %89 = sitofp i32 %88 to float
  store float %89, float* %86, align 4
  call void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* %39, %"class.gfx::RectF"* nonnull dereferenceable(16) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #7
  store i8 0, i8* %9, align 4
  %90 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 3, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = sitofp i32 %91 to float
  %93 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 3, i32 1
  %94 = load i32, i32* %93, align 4
  %95 = sitofp i32 %94 to float
  %96 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %38, i64 0, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %92
  %99 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5, i32 0, i32 1
  %100 = load float, float* %99, align 4
  %101 = fmul float %100, %95
  %102 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5, i32 1, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %92
  %105 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5, i32 1, i32 1
  %106 = load float, float* %105, align 4
  %107 = fmul float %106, %95
  %108 = fcmp ogt float %104, 0x3EB0000000000000
  %109 = select i1 %108, float %104, float 0.000000e+00
  %110 = fcmp ogt float %107, 0x3EB0000000000000
  %111 = select i1 %110, float %107, float 0.000000e+00
  %112 = call i64 @lroundf(float %98) #7
  %113 = sdiv i64 %112, 2
  %114 = shl nsw i64 %113, 1
  %115 = sitofp i64 %114 to float
  %116 = call i64 @lroundf(float %101) #7
  %117 = sdiv i64 %116, 2
  %118 = shl nsw i64 %117, 1
  %119 = sitofp i64 %118 to float
  %120 = call i64 @lroundf(float %109) #7
  %121 = sdiv i64 %120, 2
  %122 = shl nsw i64 %121, 1
  %123 = sitofp i64 %122 to float
  %124 = icmp sgt i64 %120, 1
  %125 = select i1 %124, float %123, float 0.000000e+00
  %126 = call i64 @lroundf(float %111) #7
  %127 = sdiv i64 %126, 2
  %128 = shl nsw i64 %127, 1
  %129 = sitofp i64 %128 to float
  %130 = icmp sgt i64 %126, 1
  %131 = select i1 %130, float %129, float 0.000000e+00
  %132 = load i32, i32* %90, align 4
  %133 = sitofp i32 %132 to float
  %134 = fdiv float 1.000000e+00, %133
  %135 = load i32, i32* %93, align 4
  %136 = sitofp i32 %135 to float
  %137 = fdiv float 1.000000e+00, %136
  %138 = fmul float %134, %115
  %139 = fmul float %137, %119
  %140 = fmul float %125, %134
  %141 = fmul float %131, %137
  %142 = insertelement <2 x float> undef, float %138, i32 0
  %143 = insertelement <2 x float> %142, float %139, i32 1
  %144 = fcmp ogt float %140, 0x3EB0000000000000
  %145 = select i1 %144, float %140, float 0.000000e+00
  %146 = insertelement <2 x float> undef, float %145, i32 0
  %147 = fcmp ogt float %141, 0x3EB0000000000000
  %148 = select i1 %147, float %141, float 0.000000e+00
  %149 = insertelement <2 x float> %146, float %148, i32 1
  %150 = bitcast %"class.gfx::RectF"* %38 to <2 x float>*
  store <2 x float> %143, <2 x float>* %150, align 4
  %151 = getelementptr inbounds %"class.viz::OverlayCandidate", %"class.viz::OverlayCandidate"* %0, i64 0, i32 5, i32 1
  %152 = bitcast %"class.gfx::SizeF"* %151 to <2 x float>*
  store <2 x float> %149, <2 x float>* %152, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #7
  br label %153

153:                                              ; preds = %2, %12, %73
  ret void
}

declare { i64, i64 } @_ZN3gfx13ToNearestRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN2cc8MathUtil21ScaleRectProportionalERKN3gfx5RectFES4_S4_(%"class.gfx::RectF"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare { <2 x float>, float } @_ZN2cc8MathUtil8GetXAxisERKN3gfx9TransformE(%"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare { <2 x float>, float } @_ZN2cc8MathUtil8GetYAxisERKN3gfx9TransformE(%"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #2

declare void @_ZN3gfx9Vector3dF5ScaleEfff(%"class.gfx::Vector3dF"*, float, float, float) local_unnamed_addr #2

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @lroundf(float) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
